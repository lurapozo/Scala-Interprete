Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ARROBA
    BACKTICK
    CATCH
    CLASS
    DO
    EXTENDS
    FINAL
    FINALLY
    FOR_SOME
    HASHTAG
    IMPLICIT
    LAZY
    LIBRERIA_IO
    MACRO
    MAYOR_IGUAL
    MENOR_IGUAL
    NULL
    OVERRIDE
    PACKAGE
    PRIVATE
    PROTECTED
    REVERSE
    SEALED
    SUPER
    THIS
    THROW
    TRAIT
    TRY
    TYPE
    WITH
    YIELD

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D
Rule 2     inicio -> IMPORT io inicio
Rule 3     inicio -> cuerpo
Rule 4     io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE
Rule 5     cuerpo -> funcion
Rule 6     cuerpo -> funcion cuerpo
Rule 7     cuerpo -> contenido
Rule 8     cuerpo -> contenido cuerpo
Rule 9     contenido -> asignacion
Rule 10    contenido -> reasignacion
Rule 11    contenido -> funcall
Rule 12    contenido -> impresion
Rule 13    contenido -> entrada
Rule 14    contenido -> while
Rule 15    contenido -> for
Rule 16    contenido -> match
Rule 17    contenido -> if
Rule 18    contenido -> aritmetica
Rule 19    contenido -> startsWith
Rule 20    contenido -> asignacion contenido
Rule 21    contenido -> reasignacion contenido
Rule 22    contenido -> funcall contenido
Rule 23    contenido -> impresion contenido
Rule 24    contenido -> entrada contenido
Rule 25    contenido -> while contenido
Rule 26    contenido -> for contenido
Rule 27    contenido -> if contenido
Rule 28    contenido -> match contenido
Rule 29    contenido -> aritmetica contenido
Rule 30    contenido -> startsWith contenido
Rule 31    contenidoLine -> asignacion
Rule 32    contenidoLine -> reasignacion
Rule 33    contenidoLine -> funcall
Rule 34    contenidoLine -> impresion
Rule 35    contenidoLine -> entrada
Rule 36    asignacion -> VAR VARIABLE IGUAL VARIABLE
Rule 37    asignacion -> VAL VARIABLE IGUAL VARIABLE
Rule 38    asignacion -> VAR VARIABLE IGUAL aritmetica
Rule 39    asignacion -> VAL VARIABLE IGUAL aritmetica
Rule 40    asignacion -> VAR VARIABLE IGUAL returnfun
Rule 41    asignacion -> VAL VARIABLE IGUAL returnfun
Rule 42    asignacion -> asignacionLong
Rule 43    asignacion -> asignacionInt
Rule 44    asignacion -> asignacionFloat
Rule 45    asignacion -> asignacionDouble
Rule 46    asignacion -> asignacionString
Rule 47    asignacion -> asignacionChar
Rule 48    asignacion -> asignacionBoolean
Rule 49    asignacion -> array
Rule 50    asignacion -> list
Rule 51    asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
Rule 52    asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
Rule 53    asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
Rule 54    asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
Rule 55    asignacionInt -> asignacionSumInt
Rule 56    asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
Rule 57    asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
Rule 58    asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
Rule 59    asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
Rule 60    asignacionDouble -> asignacionSumDouble
Rule 61    asignacionString -> VAR VARIABLE IGUAL STRING
Rule 62    asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
Rule 63    asignacionString -> VAL VARIABLE IGUAL STRING
Rule 64    asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
Rule 65    asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
Rule 66    asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
Rule 67    asignacionString -> asignacionSumString
Rule 68    asignacionChar -> VAR VARIABLE IGUAL CHAR
Rule 69    asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
Rule 70    asignacionChar -> VAL VARIABLE IGUAL CHAR
Rule 71    asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
Rule 72    asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
Rule 73    asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
Rule 74    asignacionBoolean -> VAR VARIABLE IGUAL booleanos
Rule 75    asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
Rule 76    asignacionBoolean -> VAL VARIABLE IGUAL booleanos
Rule 77    asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
Rule 78    asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
Rule 79    asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
Rule 80    reasignacion -> VARIABLE IGUAL valor
Rule 81    reasignacion -> VARIABLE IGUAL returnfun
Rule 82    reasignacion -> VARIABLE IGUAL aritmetica
Rule 83    reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor
Rule 84    tipo -> CHARCLASS
Rule 85    tipo -> STRINGCLASS
Rule 86    tipo -> BOOLCLASS
Rule 87    tipo -> INTCLASS
Rule 88    tipo -> LONGCLASS
Rule 89    tipo -> DOUBLECLASS
Rule 90    tipo -> FLOATCLASS
Rule 91    tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D
Rule 92    tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D
Rule 93    valor -> STRING
Rule 94    valor -> CHAR
Rule 95    valor -> VARIABLE
Rule 96    valor -> numeros
Rule 97    valor -> booleanos
Rule 98    valor -> VARIABLE PAR_I VARIABLE PAR_D
Rule 99    valor -> VARIABLE PAR_I INT PAR_D
Rule 100   booleanos -> TRUE
Rule 101   booleanos -> FLASE
Rule 102   booleanos -> startsWith
Rule 103   numeros -> INT
Rule 104   numeros -> LONG
Rule 105   numeros -> FLOAT
Rule 106   numeros -> DOUBLE
Rule 107   funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
Rule 108   funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
Rule 109   declaracion -> VARIABLE DOBLE_PUNTO tipo
Rule 110   declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor
Rule 111   parametro -> parametros
Rule 112   parametro -> PAR_I PAR_D
Rule 113   parametros -> PAR_I declaracion PAR_D
Rule 114   parametros -> PAR_I declaracion PAR_D parametros
Rule 115   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
Rule 116   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
Rule 117   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
Rule 118   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
Rule 119   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
Rule 120   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
Rule 121   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
Rule 122   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
Rule 123   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
Rule 124   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
Rule 125   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
Rule 126   dectipo -> DOBLE_PUNTO tipo
Rule 127   dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D
Rule 128   tipos -> tipo
Rule 129   tipos -> tipo tiposentry
Rule 130   tiposentry -> COMA tipo
Rule 131   tiposentry -> COMA tipo tiposentry
Rule 132   impresion -> PRINTLN PAR_I valorI PAR_D
Rule 133   impresion -> PRINT PAR_I valorI PAR_D
Rule 134   valorI -> valor MAS valorI
Rule 135   valorI -> valor
Rule 136   entrada -> READLINE PAR_I PAR_D
Rule 137   funcall -> VARIABLE varparen
Rule 138   varparen -> PAR_I valores PAR_D
Rule 139   varparen -> PAR_I PAR_D
Rule 140   varparen -> varparen PAR_I valores PAR_D
Rule 141   varparen -> varparen PAR_I PAR_D
Rule 142   returnfun -> returnCastable
Rule 143   returnfun -> castingcall
Rule 144   returnCastable -> entrada
Rule 145   returnCastable -> funcall
Rule 146   castingcall -> returnCastable PUNTO castingfun
Rule 147   castingcall -> VARIABLE PUNTO castingfun
Rule 148   castingfun -> TO_INT
Rule 149   castingfun -> TO_DOUBLE
Rule 150   castingfun -> TO_FLOAT
Rule 151   castingfun -> TO_LONG
Rule 152   array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 153   array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
Rule 154   array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 155   array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
Rule 156   array -> arrayInt
Rule 157   array -> arrayDouble
Rule 158   list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
Rule 159   list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
Rule 160   list -> listChar
Rule 161   list -> listString
Rule 162   valores -> valor
Rule 163   valores -> valor COMA valores
Rule 164   tuple -> PAR_I valores PAR_D
Rule 165   asignacion -> VAR VARIABLE IGUAL tuple
Rule 166   asignacion -> VAL VARIABLE IGUAL tuple
Rule 167   while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 168   for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
Rule 169   for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
Rule 170   for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
Rule 171   for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
Rule 172   for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
Rule 173   for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
Rule 174   match -> VARIABLE MATCH LLAVE_I cases LLAVE_D
Rule 175   cases -> casesInt
Rule 176   cases -> casesLgn
Rule 177   cases -> casesFlt
Rule 178   cases -> casesDob
Rule 179   cases -> casesStr
Rule 180   cases -> casesChar
Rule 181   cases -> casesBool
Rule 182   caseInt -> CASE INT FUNCION_FLECHA codeBlock
Rule 183   casesInt -> caseInt
Rule 184   casesInt -> caseInt casesInt
Rule 185   casesInt -> caseInt defcase
Rule 186   caseLgn -> CASE LONG FUNCION_FLECHA codeBlock
Rule 187   casesLgn -> caseLgn
Rule 188   casesLgn -> caseLgn casesLgn
Rule 189   casesLgn -> caseLgn defcase
Rule 190   caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock
Rule 191   casesFlt -> caseFlt
Rule 192   casesFlt -> caseFlt casesFlt
Rule 193   casesFlt -> caseFlt defcase
Rule 194   caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock
Rule 195   casesDob -> caseDob
Rule 196   casesDob -> caseDob casesDob
Rule 197   casesDob -> caseDob defcase
Rule 198   caseStr -> CASE STRING FUNCION_FLECHA codeBlock
Rule 199   casesStr -> caseStr
Rule 200   casesStr -> caseStr casesStr
Rule 201   casesStr -> caseStr defcase
Rule 202   caseChar -> CASE CHAR FUNCION_FLECHA codeBlock
Rule 203   casesChar -> caseChar
Rule 204   casesChar -> caseChar casesChar
Rule 205   casesChar -> caseChar defcase
Rule 206   caseBool -> CASE booleanos FUNCION_FLECHA codeBlock
Rule 207   casesBool -> caseBool
Rule 208   casesBool -> caseBool casesBool
Rule 209   casesBool -> caseBool defcase
Rule 210   defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock
Rule 211   codeBlock -> contenidoLine
Rule 212   codeBlock -> LLAVE_I contenido LLAVE_D
Rule 213   if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 214   if -> if elseif
Rule 215   if -> if else
Rule 216   elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 217   elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
Rule 218   else -> ELSE LLAVE_I contenido LLAVE_D
Rule 219   else -> elseif else
Rule 220   condicional -> valorC logicos condicional
Rule 221   condicional -> valorC
Rule 222   valorC -> VARIABLE
Rule 223   valorC -> booleanos
Rule 224   valorC -> relacional
Rule 225   valorC -> NOT VARIABLE
Rule 226   valorC -> NOT booleanos
Rule 227   valorC -> NOT relacional
Rule 228   logicos -> AND
Rule 229   logicos -> OR
Rule 230   relacional -> numeros comparacion numeros
Rule 231   relacional -> aritmetica comparacion aritmetica
Rule 232   relacional -> aritmetica comparacion numeros
Rule 233   relacional -> numeros comparacion aritmetica
Rule 234   relacional -> booleanos comparacion booleanos
Rule 235   relacional -> STRING comparacion STRING
Rule 236   relacional -> CHAR comparacion CHAR
Rule 237   relacional -> VARIABLE comparacion numeros
Rule 238   relacional -> numeros comparacion VARIABLE
Rule 239   relacional -> VARIABLE comparacion booleanos
Rule 240   relacional -> booleanos comparacion VARIABLE
Rule 241   relacional -> VARIABLE comparacion STRING
Rule 242   relacional -> STRING comparacion VARIABLE
Rule 243   relacional -> VARIABLE comparacion CHAR
Rule 244   relacional -> CHAR comparacion VARIABLE
Rule 245   relacional -> VARIABLE comparacion VARIABLE
Rule 246   comparacion -> IGUAL_COMPARACION
Rule 247   comparacion -> DIFERENTE
Rule 248   comparacion -> MAYOR
Rule 249   comparacion -> MENOR
Rule 250   aritmetica -> numeros aritmeticos numeros
Rule 251   aritmetica -> VARIABLE aritmeticos numeros
Rule 252   aritmetica -> numeros aritmeticos VARIABLE
Rule 253   aritmetica -> VARIABLE aritmeticos VARIABLE
Rule 254   aritmetica -> aritmetica aritmeticos numeros
Rule 255   aritmetica -> aritmetica aritmeticos VARIABLE
Rule 256   aritmetica -> suma
Rule 257   aritmetica -> VARIABLE MAS numeros
Rule 258   aritmetica -> numeros MAS VARIABLE
Rule 259   aritmetica -> VARIABLE MAS VARIABLE
Rule 260   aritmetica -> aritmetica MAS numeros
Rule 261   aritmetica -> aritmetica MAS VARIABLE
Rule 262   aritmetica -> INT MAS INT
Rule 263   aritmetica -> DOUBLE MAS DOUBLE
Rule 264   aritmetica -> LONG MAS LONG
Rule 265   aritmetica -> FLOAT MAS FLOAT
Rule 266   aritmeticos -> MENOS
Rule 267   aritmeticos -> MULTIPLICACION
Rule 268   aritmeticos -> DIVISION
Rule 269   aritmeticos -> MOD
Rule 270   arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
Rule 271   arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
Rule 272   valoresInt -> INT
Rule 273   valoresInt -> valoresInt COMA INT
Rule 274   valoresDouble -> DOUBLE
Rule 275   valoresDouble -> valoresDouble COMA DOUBLE
Rule 276   startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D
Rule 277   startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
Rule 278   listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
Rule 279   listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
Rule 280   listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
Rule 281   listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
Rule 282   valoresString -> STRING
Rule 283   valoresString -> valoresString COMA STRING
Rule 284   valoresChar -> CHAR
Rule 285   valoresChar -> valoresChar COMA CHAR
Rule 286   suma -> sumIntChar
Rule 287   suma -> sumStringChar
Rule 288   suma -> sumIntDouble
Rule 289   suma -> sumDoubleChar
Rule 290   sumIntDouble -> INT MAS DOUBLE
Rule 291   sumIntDouble -> DOUBLE MAS INT
Rule 292   sumDoubleChar -> DOUBLE MAS CHAR
Rule 293   sumDoubleChar -> CHAR MAS DOUBLE
Rule 294   sumIntChar -> INT MAS CHAR
Rule 295   sumIntChar -> CHAR MAS INT
Rule 296   sumStringChar -> STRING MAS CHAR
Rule 297   sumStringChar -> CHAR MAS STRING
Rule 298   asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
Rule 299   asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
Rule 300   asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
Rule 301   asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
Rule 302   asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
Rule 303   asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
Rule 304   asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
Rule 305   asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
Rule 306   asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla
Rule 307   asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla
Rule 308   dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
Rule 309   dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
Rule 310   dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
Rule 311   dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D
Rule 312   dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
Rule 313   dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
Rule 314   dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
Rule 315   dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D
Rule 316   dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
Rule 317   dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
Rule 318   dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
Rule 319   dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D
Rule 320   dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
Rule 321   dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
Rule 322   dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
Rule 323   dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D
Rule 324   dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
Rule 325   dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
Rule 326   dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
Rule 327   dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D
Rule 328   asignacionInt -> VAR VARIABLE IGUAL intvalues
Rule 329   asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
Rule 330   asignacionInt -> VAL VARIABLE IGUAL intvalues
Rule 331   asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
Rule 332   intvalues -> INT
Rule 333   intvalues -> stringCastInt
Rule 334   asignacionLong -> VAR VARIABLE IGUAL longvalues
Rule 335   asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
Rule 336   asignacionLong -> VAL VARIABLE IGUAL longvalues
Rule 337   asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
Rule 338   longvalues -> LONG
Rule 339   longvalues -> intvalues
Rule 340   longvalues -> stringCastLong
Rule 341   asignacionFloat -> VAR VARIABLE IGUAL floatvalues
Rule 342   asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
Rule 343   asignacionFloat -> VAL VARIABLE IGUAL floatvalues
Rule 344   asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
Rule 345   floatvalues -> FLOAT
Rule 346   floatvalues -> longvalues
Rule 347   floatvalues -> stringCastFloat
Rule 348   asignacionDouble -> VAR VARIABLE IGUAL doublevalues
Rule 349   asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
Rule 350   asignacionDouble -> VAL VARIABLE IGUAL doublevalues
Rule 351   asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
Rule 352   doublevalues -> DOUBLE
Rule 353   doublevalues -> floatvalues
Rule 354   doublevalues -> stringCastDouble
Rule 355   stringCastInt -> STRING PUNTO TO_INT
Rule 356   stringCastLong -> STRING PUNTO TO_LONG
Rule 357   stringCastFloat -> STRING PUNTO TO_FLOAT
Rule 358   stringCastDouble -> STRING PUNTO TO_DOUBLE

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 228
ARRAYCLASS           : 91 152 153 153 154 155 155 270 270 271 271
ARROBA               : 
BACKTICK             : 
BOOLCLASS            : 75 77 78 79 86
CASE                 : 182 186 190 194 198 202 206 210
CATCH                : 
CHAR                 : 68 69 70 71 94 202 236 236 243 244 284 285 292 293 294 295 296 297
CHARCLASS            : 69 71 72 73 84 280 281
CLASS                : 
COMA                 : 130 131 163 273 275 277 283 285 308 308 309 309 310 310 311 311 312 312 313 313 314 314 315 315 316 316 317 317 318 318 319 319 320 320 321 321 322 322 323 323 324 324 325 325 326 326 327 327
CORCHETE_D           : 91 92 153 153 155 155 270 271 278 279 280 281
CORCHETE_I           : 91 92 153 153 155 155 270 271 278 279 280 281
DEF                  : 107 108 115 116 117 118 119 120 121 122 123 124 125
DIFERENTE            : 247
DIVISION             : 268
DO                   : 
DOBLE_PUNTO          : 51 52 53 54 56 57 58 59 62 64 65 66 69 71 72 73 75 77 78 79 109 110 126 127 153 155 270 271 278 279 280 281 298 299 300 301 302 303 304 305 306 307 329 331 335 337 342 344 349 351
DOUBLE               : 106 194 263 263 274 275 290 291 292 293 310 314 316 317 318 319 322 326 352
DOUBLECLASS          : 58 59 89 271 298 299 300 301 310 314 316 317 318 319 322 326 349 351
ELSE                 : 216 217 218
EXTENDS              : 
FINAL                : 
FINALLY              : 
FLASE                : 101
FLOAT                : 105 190 265 265 311 312 313 314 315 318 323 327 345
FLOATCLASS           : 56 57 90 311 312 313 314 315 318 323 327 342 344
FOR                  : 168 169 170 171 172 173
FOR_SOME             : 
FUNCION_FLECHA       : 182 186 190 194 198 202 206 210
HASHTAG              : 
IF                   : 213 216 217
IGUAL                : 36 37 38 39 40 41 51 52 53 54 56 57 58 59 61 62 63 64 65 66 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 107 110 115 116 117 118 119 120 121 122 123 124 125 152 153 154 155 158 159 165 166 270 271 278 279 280 281 298 299 300 301 302 303 304 305 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 334 335 336 337 341 342 343 344 348 349 350 351
IGUAL_COMPARACION    : 246
IMPLICIT             : 
IMPORT               : 2
INT                  : 83 99 103 153 155 170 170 171 171 172 172 173 173 182 262 262 272 273 277 290 291 294 295 308 315 319 321 324 325 326 327 332
INTCLASS             : 53 54 87 270 304 305 308 315 319 321 324 325 326 327 329 331
ITERATOR             : 168 169 170 171 172 173
LAZY                 : 
LIBRERIA_IO          : 
LISTCLASS            : 92 158 159 278 278 279 279 280 280 281 281
LLAVE_D              : 1 107 108 115 116 117 118 119 120 121 122 123 124 125 167 168 169 170 171 172 173 174 212 213 216 217 218
LLAVE_I              : 1 107 108 115 116 117 118 119 120 121 122 123 124 125 167 168 169 170 171 172 173 174 212 213 216 217 218
LONG                 : 104 186 264 264 309 313 317 320 321 322 323 325 338
LONGCLASS            : 51 52 88 309 313 317 320 321 322 323 325 335 337
MACRO                : 
MAS                  : 134 257 258 259 260 261 262 263 264 265 290 291 292 293 294 295 296 297
MATCH                : 174
MAYOR                : 248
MAYOR_IGUAL          : 
MENOR                : 249
MENOR_IGUAL          : 
MENOS                : 266
MOD                  : 269
MULTIPLICACION       : 267
NEW                  : 153 155
NOT                  : 225 226 227
NULL                 : 
OBJECT               : 1
OR                   : 229
OVERRIDE             : 
PACKAGE              : 
PAR_D                : 83 98 99 112 113 114 127 132 133 136 138 139 140 141 152 153 154 155 158 159 164 167 168 169 170 171 172 173 213 216 217 270 271 276 277 278 279 280 281 308 308 309 309 310 310 311 311 312 312 313 313 314 314 315 315 316 316 317 317 318 318 319 319 320 320 321 321 322 322 323 323 324 324 325 325 326 326 327 327
PAR_I                : 83 98 99 112 113 114 127 132 133 136 138 139 140 141 152 153 154 155 158 159 164 167 168 169 170 171 172 173 213 216 217 270 271 276 277 278 279 280 281 308 308 309 309 310 310 311 311 312 312 313 313 314 314 315 315 316 316 317 317 318 318 319 319 320 320 321 321 322 322 323 323 324 324 325 325 326 326 327 327
PRINT                : 133
PRINTLN              : 132
PRIVATE              : 
PROTECTED            : 
PUNTO                : 4 4 4 146 147 276 277 355 356 357 358
READLINE             : 4 136
RETURN               : 115 116 117 118 119 120 121 122 123 124 125
REVERSE              : 
SEALED               : 
STARTSWITH           : 276 277
STRING               : 61 62 63 64 93 198 235 235 241 242 276 276 277 277 282 283 296 297 308 309 310 311 312 316 320 324 355 356 357 358
STRINGCLASS          : 62 64 65 66 85 278 279 302 303 308 309 310 311 312 316 320 324
SUBGUION             : 210
SUPER                : 
THIS                 : 
THROW                : 
TO                   : 170 172
TO_DOUBLE            : 149 358
TO_FLOAT             : 150 357
TO_INT               : 148 355
TO_LONG              : 151 356
TRAIT                : 
TRUE                 : 100
TRY                  : 
TYPE                 : 
UNTIL                : 171 173
VAL                  : 37 39 41 52 54 57 59 63 64 66 70 71 73 76 77 79 154 155 158 166 278 280 299 301 303 305 307 330 331 336 337 343 344 350 351
VAR                  : 36 38 40 51 53 56 58 61 62 65 68 69 72 74 75 78 152 153 159 165 168 172 173 270 271 279 281 298 300 302 304 306 328 329 334 335 341 342 348 349
VARIABLE             : 1 4 4 4 36 36 37 37 38 39 40 41 51 51 52 52 53 53 54 54 56 56 57 57 58 58 59 59 61 62 63 64 65 65 66 66 68 69 70 71 72 72 73 73 74 75 76 77 78 78 79 79 80 81 82 83 95 98 98 99 107 108 109 110 115 116 116 117 118 119 120 120 121 122 123 124 124 125 137 147 152 153 154 155 158 159 165 166 168 168 169 169 170 171 172 173 174 222 225 237 238 239 240 241 242 243 244 245 245 251 252 253 253 255 257 258 259 259 261 270 271 278 279 280 281 298 299 300 301 302 303 304 305 306 307 328 329 330 331 334 335 336 337 341 342 343 344 348 349 350 351
WHILE                : 167
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

aritmetica           : 18 29 38 39 82 118 122 231 231 232 233 254 255 260 261
aritmeticos          : 250 251 252 253 254 255
array                : 49
arrayDouble          : 157
arrayInt             : 156
asignacion           : 9 20 31
asignacionBoolean    : 48
asignacionChar       : 47
asignacionDouble     : 45
asignacionFloat      : 44
asignacionInt        : 43
asignacionLong       : 42
asignacionString     : 46
asignacionSumDouble  : 60
asignacionSumInt     : 55
asignacionSumString  : 67
booleanos            : 74 75 76 77 97 206 223 226 234 234 239 240
caseBool             : 207 208 209
caseChar             : 203 204 205
caseDob              : 195 196 197
caseFlt              : 191 192 193
caseInt              : 183 184 185
caseLgn              : 187 188 189
caseStr              : 199 200 201
cases                : 174
casesBool            : 181 208
casesChar            : 180 204
casesDob             : 178 196
casesFlt             : 177 192
casesInt             : 175 184
casesLgn             : 176 188
casesStr             : 179 200
castingcall          : 143
castingfun           : 146 147
codeBlock            : 182 186 190 194 198 202 206 210
comparacion          : 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245
condicional          : 167 213 216 217 220
contenido            : 7 8 20 21 22 23 24 25 26 27 28 29 30 107 108 115 116 117 118 123 124 125 167 168 169 170 171 172 173 212 213 216 217 218
contenidoLine        : 211
cuerpo               : 1 3 6 8
declaracion          : 113 114
dectipo              : 115 116 117 118 119 120 121 122
dectipoTupla         : 123 124 125
dectupla             : 306 307
defcase              : 185 189 193 197 201 205 209
doublevalues         : 348 349 350 351
else                 : 215 219
elseif               : 214 217 219
entrada              : 13 24 35 144
floatvalues          : 341 342 343 344 353
for                  : 15 26
funcall              : 11 22 33 145
funcion              : 5 6
if                   : 17 27 214 215
impresion            : 12 23 34
inicio               : 2 0
intvalues            : 328 329 330 331 339
io                   : 2
list                 : 50
listChar             : 160
listString           : 161
logicos              : 220
longvalues           : 334 335 336 337 346
match                : 16 28
numeros              : 96 230 230 232 233 237 238 250 250 251 252 254 257 258 260
parametro            : 107 108 115 116 117 118 119 120 121 122 123 124 125
parametros           : 111 114
reasignacion         : 10 21 32
relacional           : 224 227
returnCastable       : 142 146
returnfun            : 40 41 81 117 121 125
startsWith           : 19 30 102
stringCastDouble     : 354
stringCastFloat      : 347
stringCastInt        : 333
stringCastLong       : 340
sumDoubleChar        : 289 300 301
sumIntChar           : 286 304 305
sumIntDouble         : 288 298 299
sumStringChar        : 287 302 303
suma                 : 256
tipo                 : 91 92 109 110 126 128 129 130 131 153 153 155 155
tipos                : 127
tiposentry           : 129 131
tuple                : 123 165 166
valor                : 80 83 110 115 119 134 135 162 163
valorC               : 220 221
valorI               : 132 133 134
valores              : 138 140 152 154 158 159 163 164
valoresChar          : 280 281 285
valoresDouble        : 271 275
valoresInt           : 270 273
valoresString        : 278 279 283
varparen             : 137 140 141
while                : 14 25

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D
    (2) inicio -> . IMPORT io inicio
    (3) inicio -> . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcion cuerpo
    (7) cuerpo -> . contenido
    (8) cuerpo -> . contenido cuerpo
    (107) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (108) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (115) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (116) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (117) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (118) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (119) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (120) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (122) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    OBJECT          shift and go to state 2
    IMPORT          shift and go to state 5
    DEF             shift and go to state 8
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

    inicio                         shift and go to state 1
    cuerpo                         shift and go to state 4
    funcion                        shift and go to state 6
    contenido                      shift and go to state 7
    aritmetica                     shift and go to state 9
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> OBJECT . VARIABLE LLAVE_I cuerpo LLAVE_D

    VARIABLE        shift and go to state 56


state 3

    (80) reasignacion -> VARIABLE . IGUAL valor
    (81) reasignacion -> VARIABLE . IGUAL returnfun
    (82) reasignacion -> VARIABLE . IGUAL aritmetica
    (83) reasignacion -> VARIABLE . PAR_I INT PAR_D IGUAL valor
    (137) funcall -> VARIABLE . varparen
    (174) match -> VARIABLE . MATCH LLAVE_I cases LLAVE_D
    (251) aritmetica -> VARIABLE . aritmeticos numeros
    (253) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (257) aritmetica -> VARIABLE . MAS numeros
    (259) aritmetica -> VARIABLE . MAS VARIABLE
    (138) varparen -> . PAR_I valores PAR_D
    (139) varparen -> . PAR_I PAR_D
    (140) varparen -> . varparen PAR_I valores PAR_D
    (141) varparen -> . varparen PAR_I PAR_D
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD

    IGUAL           shift and go to state 57
    PAR_I           shift and go to state 58
    MATCH           shift and go to state 60
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66

    varparen                       shift and go to state 59
    aritmeticos                    shift and go to state 61

state 4

    (3) inicio -> cuerpo .

    $end            reduce using rule 3 (inicio -> cuerpo .)


state 5

    (2) inicio -> IMPORT . io inicio
    (4) io -> . VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE

    VARIABLE        shift and go to state 68

    io                             shift and go to state 67

state 6

    (5) cuerpo -> funcion .
    (6) cuerpo -> funcion . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcion cuerpo
    (7) cuerpo -> . contenido
    (8) cuerpo -> . contenido cuerpo
    (107) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (108) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (115) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (116) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (117) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (118) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (119) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (120) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (122) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    $end            reduce using rule 5 (cuerpo -> funcion .)
    LLAVE_D         reduce using rule 5 (cuerpo -> funcion .)
    DEF             shift and go to state 8
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

    funcion                        shift and go to state 6
    cuerpo                         shift and go to state 69
    contenido                      shift and go to state 7
    aritmetica                     shift and go to state 9
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 7

    (7) cuerpo -> contenido .
    (8) cuerpo -> contenido . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcion cuerpo
    (7) cuerpo -> . contenido
    (8) cuerpo -> . contenido cuerpo
    (107) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (108) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (115) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (116) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (117) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (118) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (119) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (120) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (122) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    $end            reduce using rule 7 (cuerpo -> contenido .)
    LLAVE_D         reduce using rule 7 (cuerpo -> contenido .)
    DEF             shift and go to state 8
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

    contenido                      shift and go to state 7
    cuerpo                         shift and go to state 70
    funcion                        shift and go to state 6
    aritmetica                     shift and go to state 9
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 8

    (107) funcion -> DEF . VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (108) funcion -> DEF . VARIABLE parametro LLAVE_I contenido LLAVE_D
    (115) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (116) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (117) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (118) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (119) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (120) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (121) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (122) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (123) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (124) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D

    VARIABLE        shift and go to state 71


state 9

    (18) contenido -> aritmetica .
    (29) contenido -> aritmetica . contenido
    (254) aritmetica -> aritmetica . aritmeticos numeros
    (255) aritmetica -> aritmetica . aritmeticos VARIABLE
    (260) aritmetica -> aritmetica . MAS numeros
    (261) aritmetica -> aritmetica . MAS VARIABLE
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    DEF             reduce using rule 18 (contenido -> aritmetica .)
    $end            reduce using rule 18 (contenido -> aritmetica .)
    LLAVE_D         reduce using rule 18 (contenido -> aritmetica .)
    RETURN          reduce using rule 18 (contenido -> aritmetica .)
    MAS             shift and go to state 74
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

  ! VAR             [ reduce using rule 18 (contenido -> aritmetica .) ]
  ! VAL             [ reduce using rule 18 (contenido -> aritmetica .) ]
  ! VARIABLE        [ reduce using rule 18 (contenido -> aritmetica .) ]
  ! PRINTLN         [ reduce using rule 18 (contenido -> aritmetica .) ]
  ! PRINT           [ reduce using rule 18 (contenido -> aritmetica .) ]
  ! READLINE        [ reduce using rule 18 (contenido -> aritmetica .) ]
  ! WHILE           [ reduce using rule 18 (contenido -> aritmetica .) ]
  ! FOR             [ reduce using rule 18 (contenido -> aritmetica .) ]
  ! IF              [ reduce using rule 18 (contenido -> aritmetica .) ]
  ! INT             [ reduce using rule 18 (contenido -> aritmetica .) ]
  ! DOUBLE          [ reduce using rule 18 (contenido -> aritmetica .) ]
  ! LONG            [ reduce using rule 18 (contenido -> aritmetica .) ]
  ! FLOAT           [ reduce using rule 18 (contenido -> aritmetica .) ]
  ! STRING          [ reduce using rule 18 (contenido -> aritmetica .) ]
  ! CHAR            [ reduce using rule 18 (contenido -> aritmetica .) ]

    aritmetica                     shift and go to state 9
    contenido                      shift and go to state 72
    aritmeticos                    shift and go to state 73
    numeros                        shift and go to state 38
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 10

    (9) contenido -> asignacion .
    (20) contenido -> asignacion . contenido
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    DEF             reduce using rule 9 (contenido -> asignacion .)
    $end            reduce using rule 9 (contenido -> asignacion .)
    LLAVE_D         reduce using rule 9 (contenido -> asignacion .)
    RETURN          reduce using rule 9 (contenido -> asignacion .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

  ! VAR             [ reduce using rule 9 (contenido -> asignacion .) ]
  ! VAL             [ reduce using rule 9 (contenido -> asignacion .) ]
  ! VARIABLE        [ reduce using rule 9 (contenido -> asignacion .) ]
  ! PRINTLN         [ reduce using rule 9 (contenido -> asignacion .) ]
  ! PRINT           [ reduce using rule 9 (contenido -> asignacion .) ]
  ! READLINE        [ reduce using rule 9 (contenido -> asignacion .) ]
  ! WHILE           [ reduce using rule 9 (contenido -> asignacion .) ]
  ! FOR             [ reduce using rule 9 (contenido -> asignacion .) ]
  ! IF              [ reduce using rule 9 (contenido -> asignacion .) ]
  ! INT             [ reduce using rule 9 (contenido -> asignacion .) ]
  ! DOUBLE          [ reduce using rule 9 (contenido -> asignacion .) ]
  ! LONG            [ reduce using rule 9 (contenido -> asignacion .) ]
  ! FLOAT           [ reduce using rule 9 (contenido -> asignacion .) ]
  ! STRING          [ reduce using rule 9 (contenido -> asignacion .) ]
  ! CHAR            [ reduce using rule 9 (contenido -> asignacion .) ]

    asignacion                     shift and go to state 10
    contenido                      shift and go to state 75
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 11

    (10) contenido -> reasignacion .
    (21) contenido -> reasignacion . contenido
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    DEF             reduce using rule 10 (contenido -> reasignacion .)
    $end            reduce using rule 10 (contenido -> reasignacion .)
    LLAVE_D         reduce using rule 10 (contenido -> reasignacion .)
    RETURN          reduce using rule 10 (contenido -> reasignacion .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

  ! VAR             [ reduce using rule 10 (contenido -> reasignacion .) ]
  ! VAL             [ reduce using rule 10 (contenido -> reasignacion .) ]
  ! VARIABLE        [ reduce using rule 10 (contenido -> reasignacion .) ]
  ! PRINTLN         [ reduce using rule 10 (contenido -> reasignacion .) ]
  ! PRINT           [ reduce using rule 10 (contenido -> reasignacion .) ]
  ! READLINE        [ reduce using rule 10 (contenido -> reasignacion .) ]
  ! WHILE           [ reduce using rule 10 (contenido -> reasignacion .) ]
  ! FOR             [ reduce using rule 10 (contenido -> reasignacion .) ]
  ! IF              [ reduce using rule 10 (contenido -> reasignacion .) ]
  ! INT             [ reduce using rule 10 (contenido -> reasignacion .) ]
  ! DOUBLE          [ reduce using rule 10 (contenido -> reasignacion .) ]
  ! LONG            [ reduce using rule 10 (contenido -> reasignacion .) ]
  ! FLOAT           [ reduce using rule 10 (contenido -> reasignacion .) ]
  ! STRING          [ reduce using rule 10 (contenido -> reasignacion .) ]
  ! CHAR            [ reduce using rule 10 (contenido -> reasignacion .) ]

    reasignacion                   shift and go to state 11
    contenido                      shift and go to state 76
    asignacion                     shift and go to state 10
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 12

    (11) contenido -> funcall .
    (22) contenido -> funcall . contenido
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    DEF             reduce using rule 11 (contenido -> funcall .)
    $end            reduce using rule 11 (contenido -> funcall .)
    LLAVE_D         reduce using rule 11 (contenido -> funcall .)
    RETURN          reduce using rule 11 (contenido -> funcall .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

  ! VAR             [ reduce using rule 11 (contenido -> funcall .) ]
  ! VAL             [ reduce using rule 11 (contenido -> funcall .) ]
  ! VARIABLE        [ reduce using rule 11 (contenido -> funcall .) ]
  ! PRINTLN         [ reduce using rule 11 (contenido -> funcall .) ]
  ! PRINT           [ reduce using rule 11 (contenido -> funcall .) ]
  ! READLINE        [ reduce using rule 11 (contenido -> funcall .) ]
  ! WHILE           [ reduce using rule 11 (contenido -> funcall .) ]
  ! FOR             [ reduce using rule 11 (contenido -> funcall .) ]
  ! IF              [ reduce using rule 11 (contenido -> funcall .) ]
  ! INT             [ reduce using rule 11 (contenido -> funcall .) ]
  ! DOUBLE          [ reduce using rule 11 (contenido -> funcall .) ]
  ! LONG            [ reduce using rule 11 (contenido -> funcall .) ]
  ! FLOAT           [ reduce using rule 11 (contenido -> funcall .) ]
  ! STRING          [ reduce using rule 11 (contenido -> funcall .) ]
  ! CHAR            [ reduce using rule 11 (contenido -> funcall .) ]

    funcall                        shift and go to state 12
    contenido                      shift and go to state 77
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 13

    (12) contenido -> impresion .
    (23) contenido -> impresion . contenido
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    DEF             reduce using rule 12 (contenido -> impresion .)
    $end            reduce using rule 12 (contenido -> impresion .)
    LLAVE_D         reduce using rule 12 (contenido -> impresion .)
    RETURN          reduce using rule 12 (contenido -> impresion .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

  ! VAR             [ reduce using rule 12 (contenido -> impresion .) ]
  ! VAL             [ reduce using rule 12 (contenido -> impresion .) ]
  ! VARIABLE        [ reduce using rule 12 (contenido -> impresion .) ]
  ! PRINTLN         [ reduce using rule 12 (contenido -> impresion .) ]
  ! PRINT           [ reduce using rule 12 (contenido -> impresion .) ]
  ! READLINE        [ reduce using rule 12 (contenido -> impresion .) ]
  ! WHILE           [ reduce using rule 12 (contenido -> impresion .) ]
  ! FOR             [ reduce using rule 12 (contenido -> impresion .) ]
  ! IF              [ reduce using rule 12 (contenido -> impresion .) ]
  ! INT             [ reduce using rule 12 (contenido -> impresion .) ]
  ! DOUBLE          [ reduce using rule 12 (contenido -> impresion .) ]
  ! LONG            [ reduce using rule 12 (contenido -> impresion .) ]
  ! FLOAT           [ reduce using rule 12 (contenido -> impresion .) ]
  ! STRING          [ reduce using rule 12 (contenido -> impresion .) ]
  ! CHAR            [ reduce using rule 12 (contenido -> impresion .) ]

    impresion                      shift and go to state 13
    contenido                      shift and go to state 78
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 14

    (13) contenido -> entrada .
    (24) contenido -> entrada . contenido
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    DEF             reduce using rule 13 (contenido -> entrada .)
    $end            reduce using rule 13 (contenido -> entrada .)
    LLAVE_D         reduce using rule 13 (contenido -> entrada .)
    RETURN          reduce using rule 13 (contenido -> entrada .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

  ! VAR             [ reduce using rule 13 (contenido -> entrada .) ]
  ! VAL             [ reduce using rule 13 (contenido -> entrada .) ]
  ! VARIABLE        [ reduce using rule 13 (contenido -> entrada .) ]
  ! PRINTLN         [ reduce using rule 13 (contenido -> entrada .) ]
  ! PRINT           [ reduce using rule 13 (contenido -> entrada .) ]
  ! READLINE        [ reduce using rule 13 (contenido -> entrada .) ]
  ! WHILE           [ reduce using rule 13 (contenido -> entrada .) ]
  ! FOR             [ reduce using rule 13 (contenido -> entrada .) ]
  ! IF              [ reduce using rule 13 (contenido -> entrada .) ]
  ! INT             [ reduce using rule 13 (contenido -> entrada .) ]
  ! DOUBLE          [ reduce using rule 13 (contenido -> entrada .) ]
  ! LONG            [ reduce using rule 13 (contenido -> entrada .) ]
  ! FLOAT           [ reduce using rule 13 (contenido -> entrada .) ]
  ! STRING          [ reduce using rule 13 (contenido -> entrada .) ]
  ! CHAR            [ reduce using rule 13 (contenido -> entrada .) ]

    entrada                        shift and go to state 14
    contenido                      shift and go to state 79
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 15

    (14) contenido -> while .
    (25) contenido -> while . contenido
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    DEF             reduce using rule 14 (contenido -> while .)
    $end            reduce using rule 14 (contenido -> while .)
    LLAVE_D         reduce using rule 14 (contenido -> while .)
    RETURN          reduce using rule 14 (contenido -> while .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

  ! VAR             [ reduce using rule 14 (contenido -> while .) ]
  ! VAL             [ reduce using rule 14 (contenido -> while .) ]
  ! VARIABLE        [ reduce using rule 14 (contenido -> while .) ]
  ! PRINTLN         [ reduce using rule 14 (contenido -> while .) ]
  ! PRINT           [ reduce using rule 14 (contenido -> while .) ]
  ! READLINE        [ reduce using rule 14 (contenido -> while .) ]
  ! WHILE           [ reduce using rule 14 (contenido -> while .) ]
  ! FOR             [ reduce using rule 14 (contenido -> while .) ]
  ! IF              [ reduce using rule 14 (contenido -> while .) ]
  ! INT             [ reduce using rule 14 (contenido -> while .) ]
  ! DOUBLE          [ reduce using rule 14 (contenido -> while .) ]
  ! LONG            [ reduce using rule 14 (contenido -> while .) ]
  ! FLOAT           [ reduce using rule 14 (contenido -> while .) ]
  ! STRING          [ reduce using rule 14 (contenido -> while .) ]
  ! CHAR            [ reduce using rule 14 (contenido -> while .) ]

    while                          shift and go to state 15
    contenido                      shift and go to state 80
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 16

    (15) contenido -> for .
    (26) contenido -> for . contenido
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    DEF             reduce using rule 15 (contenido -> for .)
    $end            reduce using rule 15 (contenido -> for .)
    LLAVE_D         reduce using rule 15 (contenido -> for .)
    RETURN          reduce using rule 15 (contenido -> for .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

  ! VAR             [ reduce using rule 15 (contenido -> for .) ]
  ! VAL             [ reduce using rule 15 (contenido -> for .) ]
  ! VARIABLE        [ reduce using rule 15 (contenido -> for .) ]
  ! PRINTLN         [ reduce using rule 15 (contenido -> for .) ]
  ! PRINT           [ reduce using rule 15 (contenido -> for .) ]
  ! READLINE        [ reduce using rule 15 (contenido -> for .) ]
  ! WHILE           [ reduce using rule 15 (contenido -> for .) ]
  ! FOR             [ reduce using rule 15 (contenido -> for .) ]
  ! IF              [ reduce using rule 15 (contenido -> for .) ]
  ! INT             [ reduce using rule 15 (contenido -> for .) ]
  ! DOUBLE          [ reduce using rule 15 (contenido -> for .) ]
  ! LONG            [ reduce using rule 15 (contenido -> for .) ]
  ! FLOAT           [ reduce using rule 15 (contenido -> for .) ]
  ! STRING          [ reduce using rule 15 (contenido -> for .) ]
  ! CHAR            [ reduce using rule 15 (contenido -> for .) ]

    for                            shift and go to state 16
    contenido                      shift and go to state 81
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 17

    (16) contenido -> match .
    (28) contenido -> match . contenido
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    DEF             reduce using rule 16 (contenido -> match .)
    $end            reduce using rule 16 (contenido -> match .)
    LLAVE_D         reduce using rule 16 (contenido -> match .)
    RETURN          reduce using rule 16 (contenido -> match .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

  ! VAR             [ reduce using rule 16 (contenido -> match .) ]
  ! VAL             [ reduce using rule 16 (contenido -> match .) ]
  ! VARIABLE        [ reduce using rule 16 (contenido -> match .) ]
  ! PRINTLN         [ reduce using rule 16 (contenido -> match .) ]
  ! PRINT           [ reduce using rule 16 (contenido -> match .) ]
  ! READLINE        [ reduce using rule 16 (contenido -> match .) ]
  ! WHILE           [ reduce using rule 16 (contenido -> match .) ]
  ! FOR             [ reduce using rule 16 (contenido -> match .) ]
  ! IF              [ reduce using rule 16 (contenido -> match .) ]
  ! INT             [ reduce using rule 16 (contenido -> match .) ]
  ! DOUBLE          [ reduce using rule 16 (contenido -> match .) ]
  ! LONG            [ reduce using rule 16 (contenido -> match .) ]
  ! FLOAT           [ reduce using rule 16 (contenido -> match .) ]
  ! STRING          [ reduce using rule 16 (contenido -> match .) ]
  ! CHAR            [ reduce using rule 16 (contenido -> match .) ]

    match                          shift and go to state 17
    contenido                      shift and go to state 82
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 18

    (17) contenido -> if .
    (27) contenido -> if . contenido
    (214) if -> if . elseif
    (215) if -> if . else
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (216) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (217) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (218) else -> . ELSE LLAVE_I contenido LLAVE_D
    (219) else -> . elseif else
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    DEF             reduce using rule 17 (contenido -> if .)
    $end            reduce using rule 17 (contenido -> if .)
    LLAVE_D         reduce using rule 17 (contenido -> if .)
    RETURN          reduce using rule 17 (contenido -> if .)
    ELSE            shift and go to state 86
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

  ! VAR             [ reduce using rule 17 (contenido -> if .) ]
  ! VAL             [ reduce using rule 17 (contenido -> if .) ]
  ! VARIABLE        [ reduce using rule 17 (contenido -> if .) ]
  ! PRINTLN         [ reduce using rule 17 (contenido -> if .) ]
  ! PRINT           [ reduce using rule 17 (contenido -> if .) ]
  ! READLINE        [ reduce using rule 17 (contenido -> if .) ]
  ! WHILE           [ reduce using rule 17 (contenido -> if .) ]
  ! FOR             [ reduce using rule 17 (contenido -> if .) ]
  ! IF              [ reduce using rule 17 (contenido -> if .) ]
  ! INT             [ reduce using rule 17 (contenido -> if .) ]
  ! DOUBLE          [ reduce using rule 17 (contenido -> if .) ]
  ! LONG            [ reduce using rule 17 (contenido -> if .) ]
  ! FLOAT           [ reduce using rule 17 (contenido -> if .) ]
  ! STRING          [ reduce using rule 17 (contenido -> if .) ]
  ! CHAR            [ reduce using rule 17 (contenido -> if .) ]

    if                             shift and go to state 18
    contenido                      shift and go to state 83
    elseif                         shift and go to state 84
    else                           shift and go to state 85
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 19

    (19) contenido -> startsWith .
    (30) contenido -> startsWith . contenido
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for VAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for READLINE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    DEF             reduce using rule 19 (contenido -> startsWith .)
    $end            reduce using rule 19 (contenido -> startsWith .)
    LLAVE_D         reduce using rule 19 (contenido -> startsWith .)
    RETURN          reduce using rule 19 (contenido -> startsWith .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

  ! VAR             [ reduce using rule 19 (contenido -> startsWith .) ]
  ! VAL             [ reduce using rule 19 (contenido -> startsWith .) ]
  ! VARIABLE        [ reduce using rule 19 (contenido -> startsWith .) ]
  ! PRINTLN         [ reduce using rule 19 (contenido -> startsWith .) ]
  ! PRINT           [ reduce using rule 19 (contenido -> startsWith .) ]
  ! READLINE        [ reduce using rule 19 (contenido -> startsWith .) ]
  ! WHILE           [ reduce using rule 19 (contenido -> startsWith .) ]
  ! FOR             [ reduce using rule 19 (contenido -> startsWith .) ]
  ! IF              [ reduce using rule 19 (contenido -> startsWith .) ]
  ! INT             [ reduce using rule 19 (contenido -> startsWith .) ]
  ! DOUBLE          [ reduce using rule 19 (contenido -> startsWith .) ]
  ! LONG            [ reduce using rule 19 (contenido -> startsWith .) ]
  ! FLOAT           [ reduce using rule 19 (contenido -> startsWith .) ]
  ! STRING          [ reduce using rule 19 (contenido -> startsWith .) ]
  ! CHAR            [ reduce using rule 19 (contenido -> startsWith .) ]

    startsWith                     shift and go to state 19
    contenido                      shift and go to state 87
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 20

    (36) asignacion -> VAR . VARIABLE IGUAL VARIABLE
    (38) asignacion -> VAR . VARIABLE IGUAL aritmetica
    (40) asignacion -> VAR . VARIABLE IGUAL returnfun
    (165) asignacion -> VAR . VARIABLE IGUAL tuple
    (306) asignacion -> VAR . VARIABLE DOBLE_PUNTO dectupla
    (51) asignacionLong -> VAR . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> VAR . VARIABLE IGUAL longvalues
    (335) asignacionLong -> VAR . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> VAR . VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (328) asignacionInt -> VAR . VARIABLE IGUAL intvalues
    (329) asignacionInt -> VAR . VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> VAR . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> VAR . VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> VAR . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (348) asignacionDouble -> VAR . VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> VAR . VARIABLE IGUAL STRING
    (62) asignacionString -> VAR . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> VAR . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> VAR . VARIABLE IGUAL CHAR
    (69) asignacionChar -> VAR . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> VAR . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> VAR . VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> VAR . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> VAR . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> VAR . VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) list -> VAR . VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (304) asignacionSumInt -> VAR . VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> VAR . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (281) listChar -> VAR . VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (279) listString -> VAR . VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    VARIABLE        shift and go to state 88


state 21

    (37) asignacion -> VAL . VARIABLE IGUAL VARIABLE
    (39) asignacion -> VAL . VARIABLE IGUAL aritmetica
    (41) asignacion -> VAL . VARIABLE IGUAL returnfun
    (166) asignacion -> VAL . VARIABLE IGUAL tuple
    (307) asignacion -> VAL . VARIABLE DOBLE_PUNTO dectupla
    (52) asignacionLong -> VAL . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (336) asignacionLong -> VAL . VARIABLE IGUAL longvalues
    (337) asignacionLong -> VAL . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (54) asignacionInt -> VAL . VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (330) asignacionInt -> VAL . VARIABLE IGUAL intvalues
    (331) asignacionInt -> VAL . VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (57) asignacionFloat -> VAL . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (343) asignacionFloat -> VAL . VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> VAL . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (59) asignacionDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (350) asignacionDouble -> VAL . VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (63) asignacionString -> VAL . VARIABLE IGUAL STRING
    (64) asignacionString -> VAL . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> VAL . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (70) asignacionChar -> VAL . VARIABLE IGUAL CHAR
    (71) asignacionChar -> VAL . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (73) asignacionChar -> VAL . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (76) asignacionBoolean -> VAL . VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> VAL . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (79) asignacionBoolean -> VAL . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> VAL . VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> VAL . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (158) list -> VAL . VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (305) asignacionSumInt -> VAL . VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (299) asignacionSumDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (301) asignacionSumDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (303) asignacionSumString -> VAL . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (280) listChar -> VAL . VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> VAL . VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    VARIABLE        shift and go to state 89


state 22

    (42) asignacion -> asignacionLong .

    VAR             reduce using rule 42 (asignacion -> asignacionLong .)
    VAL             reduce using rule 42 (asignacion -> asignacionLong .)
    VARIABLE        reduce using rule 42 (asignacion -> asignacionLong .)
    PRINTLN         reduce using rule 42 (asignacion -> asignacionLong .)
    PRINT           reduce using rule 42 (asignacion -> asignacionLong .)
    READLINE        reduce using rule 42 (asignacion -> asignacionLong .)
    WHILE           reduce using rule 42 (asignacion -> asignacionLong .)
    FOR             reduce using rule 42 (asignacion -> asignacionLong .)
    IF              reduce using rule 42 (asignacion -> asignacionLong .)
    INT             reduce using rule 42 (asignacion -> asignacionLong .)
    DOUBLE          reduce using rule 42 (asignacion -> asignacionLong .)
    LONG            reduce using rule 42 (asignacion -> asignacionLong .)
    FLOAT           reduce using rule 42 (asignacion -> asignacionLong .)
    STRING          reduce using rule 42 (asignacion -> asignacionLong .)
    CHAR            reduce using rule 42 (asignacion -> asignacionLong .)
    DEF             reduce using rule 42 (asignacion -> asignacionLong .)
    $end            reduce using rule 42 (asignacion -> asignacionLong .)
    LLAVE_D         reduce using rule 42 (asignacion -> asignacionLong .)
    RETURN          reduce using rule 42 (asignacion -> asignacionLong .)
    CASE            reduce using rule 42 (asignacion -> asignacionLong .)


state 23

    (43) asignacion -> asignacionInt .

    VAR             reduce using rule 43 (asignacion -> asignacionInt .)
    VAL             reduce using rule 43 (asignacion -> asignacionInt .)
    VARIABLE        reduce using rule 43 (asignacion -> asignacionInt .)
    PRINTLN         reduce using rule 43 (asignacion -> asignacionInt .)
    PRINT           reduce using rule 43 (asignacion -> asignacionInt .)
    READLINE        reduce using rule 43 (asignacion -> asignacionInt .)
    WHILE           reduce using rule 43 (asignacion -> asignacionInt .)
    FOR             reduce using rule 43 (asignacion -> asignacionInt .)
    IF              reduce using rule 43 (asignacion -> asignacionInt .)
    INT             reduce using rule 43 (asignacion -> asignacionInt .)
    DOUBLE          reduce using rule 43 (asignacion -> asignacionInt .)
    LONG            reduce using rule 43 (asignacion -> asignacionInt .)
    FLOAT           reduce using rule 43 (asignacion -> asignacionInt .)
    STRING          reduce using rule 43 (asignacion -> asignacionInt .)
    CHAR            reduce using rule 43 (asignacion -> asignacionInt .)
    DEF             reduce using rule 43 (asignacion -> asignacionInt .)
    $end            reduce using rule 43 (asignacion -> asignacionInt .)
    LLAVE_D         reduce using rule 43 (asignacion -> asignacionInt .)
    RETURN          reduce using rule 43 (asignacion -> asignacionInt .)
    CASE            reduce using rule 43 (asignacion -> asignacionInt .)


state 24

    (44) asignacion -> asignacionFloat .

    VAR             reduce using rule 44 (asignacion -> asignacionFloat .)
    VAL             reduce using rule 44 (asignacion -> asignacionFloat .)
    VARIABLE        reduce using rule 44 (asignacion -> asignacionFloat .)
    PRINTLN         reduce using rule 44 (asignacion -> asignacionFloat .)
    PRINT           reduce using rule 44 (asignacion -> asignacionFloat .)
    READLINE        reduce using rule 44 (asignacion -> asignacionFloat .)
    WHILE           reduce using rule 44 (asignacion -> asignacionFloat .)
    FOR             reduce using rule 44 (asignacion -> asignacionFloat .)
    IF              reduce using rule 44 (asignacion -> asignacionFloat .)
    INT             reduce using rule 44 (asignacion -> asignacionFloat .)
    DOUBLE          reduce using rule 44 (asignacion -> asignacionFloat .)
    LONG            reduce using rule 44 (asignacion -> asignacionFloat .)
    FLOAT           reduce using rule 44 (asignacion -> asignacionFloat .)
    STRING          reduce using rule 44 (asignacion -> asignacionFloat .)
    CHAR            reduce using rule 44 (asignacion -> asignacionFloat .)
    DEF             reduce using rule 44 (asignacion -> asignacionFloat .)
    $end            reduce using rule 44 (asignacion -> asignacionFloat .)
    LLAVE_D         reduce using rule 44 (asignacion -> asignacionFloat .)
    RETURN          reduce using rule 44 (asignacion -> asignacionFloat .)
    CASE            reduce using rule 44 (asignacion -> asignacionFloat .)


state 25

    (45) asignacion -> asignacionDouble .

    VAR             reduce using rule 45 (asignacion -> asignacionDouble .)
    VAL             reduce using rule 45 (asignacion -> asignacionDouble .)
    VARIABLE        reduce using rule 45 (asignacion -> asignacionDouble .)
    PRINTLN         reduce using rule 45 (asignacion -> asignacionDouble .)
    PRINT           reduce using rule 45 (asignacion -> asignacionDouble .)
    READLINE        reduce using rule 45 (asignacion -> asignacionDouble .)
    WHILE           reduce using rule 45 (asignacion -> asignacionDouble .)
    FOR             reduce using rule 45 (asignacion -> asignacionDouble .)
    IF              reduce using rule 45 (asignacion -> asignacionDouble .)
    INT             reduce using rule 45 (asignacion -> asignacionDouble .)
    DOUBLE          reduce using rule 45 (asignacion -> asignacionDouble .)
    LONG            reduce using rule 45 (asignacion -> asignacionDouble .)
    FLOAT           reduce using rule 45 (asignacion -> asignacionDouble .)
    STRING          reduce using rule 45 (asignacion -> asignacionDouble .)
    CHAR            reduce using rule 45 (asignacion -> asignacionDouble .)
    DEF             reduce using rule 45 (asignacion -> asignacionDouble .)
    $end            reduce using rule 45 (asignacion -> asignacionDouble .)
    LLAVE_D         reduce using rule 45 (asignacion -> asignacionDouble .)
    RETURN          reduce using rule 45 (asignacion -> asignacionDouble .)
    CASE            reduce using rule 45 (asignacion -> asignacionDouble .)


state 26

    (46) asignacion -> asignacionString .

    VAR             reduce using rule 46 (asignacion -> asignacionString .)
    VAL             reduce using rule 46 (asignacion -> asignacionString .)
    VARIABLE        reduce using rule 46 (asignacion -> asignacionString .)
    PRINTLN         reduce using rule 46 (asignacion -> asignacionString .)
    PRINT           reduce using rule 46 (asignacion -> asignacionString .)
    READLINE        reduce using rule 46 (asignacion -> asignacionString .)
    WHILE           reduce using rule 46 (asignacion -> asignacionString .)
    FOR             reduce using rule 46 (asignacion -> asignacionString .)
    IF              reduce using rule 46 (asignacion -> asignacionString .)
    INT             reduce using rule 46 (asignacion -> asignacionString .)
    DOUBLE          reduce using rule 46 (asignacion -> asignacionString .)
    LONG            reduce using rule 46 (asignacion -> asignacionString .)
    FLOAT           reduce using rule 46 (asignacion -> asignacionString .)
    STRING          reduce using rule 46 (asignacion -> asignacionString .)
    CHAR            reduce using rule 46 (asignacion -> asignacionString .)
    DEF             reduce using rule 46 (asignacion -> asignacionString .)
    $end            reduce using rule 46 (asignacion -> asignacionString .)
    LLAVE_D         reduce using rule 46 (asignacion -> asignacionString .)
    RETURN          reduce using rule 46 (asignacion -> asignacionString .)
    CASE            reduce using rule 46 (asignacion -> asignacionString .)


state 27

    (47) asignacion -> asignacionChar .

    VAR             reduce using rule 47 (asignacion -> asignacionChar .)
    VAL             reduce using rule 47 (asignacion -> asignacionChar .)
    VARIABLE        reduce using rule 47 (asignacion -> asignacionChar .)
    PRINTLN         reduce using rule 47 (asignacion -> asignacionChar .)
    PRINT           reduce using rule 47 (asignacion -> asignacionChar .)
    READLINE        reduce using rule 47 (asignacion -> asignacionChar .)
    WHILE           reduce using rule 47 (asignacion -> asignacionChar .)
    FOR             reduce using rule 47 (asignacion -> asignacionChar .)
    IF              reduce using rule 47 (asignacion -> asignacionChar .)
    INT             reduce using rule 47 (asignacion -> asignacionChar .)
    DOUBLE          reduce using rule 47 (asignacion -> asignacionChar .)
    LONG            reduce using rule 47 (asignacion -> asignacionChar .)
    FLOAT           reduce using rule 47 (asignacion -> asignacionChar .)
    STRING          reduce using rule 47 (asignacion -> asignacionChar .)
    CHAR            reduce using rule 47 (asignacion -> asignacionChar .)
    DEF             reduce using rule 47 (asignacion -> asignacionChar .)
    $end            reduce using rule 47 (asignacion -> asignacionChar .)
    LLAVE_D         reduce using rule 47 (asignacion -> asignacionChar .)
    RETURN          reduce using rule 47 (asignacion -> asignacionChar .)
    CASE            reduce using rule 47 (asignacion -> asignacionChar .)


state 28

    (48) asignacion -> asignacionBoolean .

    VAR             reduce using rule 48 (asignacion -> asignacionBoolean .)
    VAL             reduce using rule 48 (asignacion -> asignacionBoolean .)
    VARIABLE        reduce using rule 48 (asignacion -> asignacionBoolean .)
    PRINTLN         reduce using rule 48 (asignacion -> asignacionBoolean .)
    PRINT           reduce using rule 48 (asignacion -> asignacionBoolean .)
    READLINE        reduce using rule 48 (asignacion -> asignacionBoolean .)
    WHILE           reduce using rule 48 (asignacion -> asignacionBoolean .)
    FOR             reduce using rule 48 (asignacion -> asignacionBoolean .)
    IF              reduce using rule 48 (asignacion -> asignacionBoolean .)
    INT             reduce using rule 48 (asignacion -> asignacionBoolean .)
    DOUBLE          reduce using rule 48 (asignacion -> asignacionBoolean .)
    LONG            reduce using rule 48 (asignacion -> asignacionBoolean .)
    FLOAT           reduce using rule 48 (asignacion -> asignacionBoolean .)
    STRING          reduce using rule 48 (asignacion -> asignacionBoolean .)
    CHAR            reduce using rule 48 (asignacion -> asignacionBoolean .)
    DEF             reduce using rule 48 (asignacion -> asignacionBoolean .)
    $end            reduce using rule 48 (asignacion -> asignacionBoolean .)
    LLAVE_D         reduce using rule 48 (asignacion -> asignacionBoolean .)
    RETURN          reduce using rule 48 (asignacion -> asignacionBoolean .)
    CASE            reduce using rule 48 (asignacion -> asignacionBoolean .)


state 29

    (49) asignacion -> array .

    VAR             reduce using rule 49 (asignacion -> array .)
    VAL             reduce using rule 49 (asignacion -> array .)
    VARIABLE        reduce using rule 49 (asignacion -> array .)
    PRINTLN         reduce using rule 49 (asignacion -> array .)
    PRINT           reduce using rule 49 (asignacion -> array .)
    READLINE        reduce using rule 49 (asignacion -> array .)
    WHILE           reduce using rule 49 (asignacion -> array .)
    FOR             reduce using rule 49 (asignacion -> array .)
    IF              reduce using rule 49 (asignacion -> array .)
    INT             reduce using rule 49 (asignacion -> array .)
    DOUBLE          reduce using rule 49 (asignacion -> array .)
    LONG            reduce using rule 49 (asignacion -> array .)
    FLOAT           reduce using rule 49 (asignacion -> array .)
    STRING          reduce using rule 49 (asignacion -> array .)
    CHAR            reduce using rule 49 (asignacion -> array .)
    DEF             reduce using rule 49 (asignacion -> array .)
    $end            reduce using rule 49 (asignacion -> array .)
    LLAVE_D         reduce using rule 49 (asignacion -> array .)
    RETURN          reduce using rule 49 (asignacion -> array .)
    CASE            reduce using rule 49 (asignacion -> array .)


state 30

    (50) asignacion -> list .

    VAR             reduce using rule 50 (asignacion -> list .)
    VAL             reduce using rule 50 (asignacion -> list .)
    VARIABLE        reduce using rule 50 (asignacion -> list .)
    PRINTLN         reduce using rule 50 (asignacion -> list .)
    PRINT           reduce using rule 50 (asignacion -> list .)
    READLINE        reduce using rule 50 (asignacion -> list .)
    WHILE           reduce using rule 50 (asignacion -> list .)
    FOR             reduce using rule 50 (asignacion -> list .)
    IF              reduce using rule 50 (asignacion -> list .)
    INT             reduce using rule 50 (asignacion -> list .)
    DOUBLE          reduce using rule 50 (asignacion -> list .)
    LONG            reduce using rule 50 (asignacion -> list .)
    FLOAT           reduce using rule 50 (asignacion -> list .)
    STRING          reduce using rule 50 (asignacion -> list .)
    CHAR            reduce using rule 50 (asignacion -> list .)
    DEF             reduce using rule 50 (asignacion -> list .)
    $end            reduce using rule 50 (asignacion -> list .)
    LLAVE_D         reduce using rule 50 (asignacion -> list .)
    RETURN          reduce using rule 50 (asignacion -> list .)
    CASE            reduce using rule 50 (asignacion -> list .)


state 31

    (262) aritmetica -> INT . MAS INT
    (103) numeros -> INT .
    (294) sumIntChar -> INT . MAS CHAR
    (290) sumIntDouble -> INT . MAS DOUBLE

  ! shift/reduce conflict for MAS resolved as shift
    MAS             shift and go to state 90
    MENOS           reduce using rule 103 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 103 (numeros -> INT .)
    DIVISION        reduce using rule 103 (numeros -> INT .)
    MOD             reduce using rule 103 (numeros -> INT .)
    VAR             reduce using rule 103 (numeros -> INT .)
    VAL             reduce using rule 103 (numeros -> INT .)
    VARIABLE        reduce using rule 103 (numeros -> INT .)
    PRINTLN         reduce using rule 103 (numeros -> INT .)
    PRINT           reduce using rule 103 (numeros -> INT .)
    READLINE        reduce using rule 103 (numeros -> INT .)
    WHILE           reduce using rule 103 (numeros -> INT .)
    FOR             reduce using rule 103 (numeros -> INT .)
    IF              reduce using rule 103 (numeros -> INT .)
    INT             reduce using rule 103 (numeros -> INT .)
    DOUBLE          reduce using rule 103 (numeros -> INT .)
    LONG            reduce using rule 103 (numeros -> INT .)
    FLOAT           reduce using rule 103 (numeros -> INT .)
    STRING          reduce using rule 103 (numeros -> INT .)
    CHAR            reduce using rule 103 (numeros -> INT .)
    DEF             reduce using rule 103 (numeros -> INT .)
    $end            reduce using rule 103 (numeros -> INT .)
    LLAVE_D         reduce using rule 103 (numeros -> INT .)
    RETURN          reduce using rule 103 (numeros -> INT .)
    CASE            reduce using rule 103 (numeros -> INT .)
    AND             reduce using rule 103 (numeros -> INT .)
    OR              reduce using rule 103 (numeros -> INT .)
    PAR_D           reduce using rule 103 (numeros -> INT .)

  ! MAS             [ reduce using rule 103 (numeros -> INT .) ]


state 32

    (132) impresion -> PRINTLN . PAR_I valorI PAR_D

    PAR_I           shift and go to state 91


state 33

    (133) impresion -> PRINT . PAR_I valorI PAR_D

    PAR_I           shift and go to state 92


state 34

    (136) entrada -> READLINE . PAR_I PAR_D

    PAR_I           shift and go to state 93


state 35

    (167) while -> WHILE . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 94


state 36

    (168) for -> FOR . PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> FOR . PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> FOR . PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> FOR . PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> FOR . PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> FOR . PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 95


state 37

    (213) if -> IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 96


state 38

    (250) aritmetica -> numeros . aritmeticos numeros
    (252) aritmetica -> numeros . aritmeticos VARIABLE
    (258) aritmetica -> numeros . MAS VARIABLE
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD

    MAS             shift and go to state 98
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66

    aritmeticos                    shift and go to state 97

state 39

    (256) aritmetica -> suma .

    MAS             reduce using rule 256 (aritmetica -> suma .)
    MENOS           reduce using rule 256 (aritmetica -> suma .)
    MULTIPLICACION  reduce using rule 256 (aritmetica -> suma .)
    DIVISION        reduce using rule 256 (aritmetica -> suma .)
    MOD             reduce using rule 256 (aritmetica -> suma .)
    VAR             reduce using rule 256 (aritmetica -> suma .)
    VAL             reduce using rule 256 (aritmetica -> suma .)
    VARIABLE        reduce using rule 256 (aritmetica -> suma .)
    PRINTLN         reduce using rule 256 (aritmetica -> suma .)
    PRINT           reduce using rule 256 (aritmetica -> suma .)
    READLINE        reduce using rule 256 (aritmetica -> suma .)
    WHILE           reduce using rule 256 (aritmetica -> suma .)
    FOR             reduce using rule 256 (aritmetica -> suma .)
    IF              reduce using rule 256 (aritmetica -> suma .)
    INT             reduce using rule 256 (aritmetica -> suma .)
    DOUBLE          reduce using rule 256 (aritmetica -> suma .)
    LONG            reduce using rule 256 (aritmetica -> suma .)
    FLOAT           reduce using rule 256 (aritmetica -> suma .)
    STRING          reduce using rule 256 (aritmetica -> suma .)
    CHAR            reduce using rule 256 (aritmetica -> suma .)
    DEF             reduce using rule 256 (aritmetica -> suma .)
    $end            reduce using rule 256 (aritmetica -> suma .)
    LLAVE_D         reduce using rule 256 (aritmetica -> suma .)
    RETURN          reduce using rule 256 (aritmetica -> suma .)
    CASE            reduce using rule 256 (aritmetica -> suma .)
    IGUAL_COMPARACION reduce using rule 256 (aritmetica -> suma .)
    DIFERENTE       reduce using rule 256 (aritmetica -> suma .)
    MAYOR           reduce using rule 256 (aritmetica -> suma .)
    MENOR           reduce using rule 256 (aritmetica -> suma .)
    AND             reduce using rule 256 (aritmetica -> suma .)
    OR              reduce using rule 256 (aritmetica -> suma .)
    PAR_D           reduce using rule 256 (aritmetica -> suma .)


state 40

    (263) aritmetica -> DOUBLE . MAS DOUBLE
    (106) numeros -> DOUBLE .
    (291) sumIntDouble -> DOUBLE . MAS INT
    (292) sumDoubleChar -> DOUBLE . MAS CHAR

  ! shift/reduce conflict for MAS resolved as shift
    MAS             shift and go to state 99
    MENOS           reduce using rule 106 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 106 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 106 (numeros -> DOUBLE .)
    MOD             reduce using rule 106 (numeros -> DOUBLE .)
    VAR             reduce using rule 106 (numeros -> DOUBLE .)
    VAL             reduce using rule 106 (numeros -> DOUBLE .)
    VARIABLE        reduce using rule 106 (numeros -> DOUBLE .)
    PRINTLN         reduce using rule 106 (numeros -> DOUBLE .)
    PRINT           reduce using rule 106 (numeros -> DOUBLE .)
    READLINE        reduce using rule 106 (numeros -> DOUBLE .)
    WHILE           reduce using rule 106 (numeros -> DOUBLE .)
    FOR             reduce using rule 106 (numeros -> DOUBLE .)
    IF              reduce using rule 106 (numeros -> DOUBLE .)
    INT             reduce using rule 106 (numeros -> DOUBLE .)
    DOUBLE          reduce using rule 106 (numeros -> DOUBLE .)
    LONG            reduce using rule 106 (numeros -> DOUBLE .)
    FLOAT           reduce using rule 106 (numeros -> DOUBLE .)
    STRING          reduce using rule 106 (numeros -> DOUBLE .)
    CHAR            reduce using rule 106 (numeros -> DOUBLE .)
    DEF             reduce using rule 106 (numeros -> DOUBLE .)
    $end            reduce using rule 106 (numeros -> DOUBLE .)
    LLAVE_D         reduce using rule 106 (numeros -> DOUBLE .)
    RETURN          reduce using rule 106 (numeros -> DOUBLE .)
    CASE            reduce using rule 106 (numeros -> DOUBLE .)
    AND             reduce using rule 106 (numeros -> DOUBLE .)
    OR              reduce using rule 106 (numeros -> DOUBLE .)
    PAR_D           reduce using rule 106 (numeros -> DOUBLE .)

  ! MAS             [ reduce using rule 106 (numeros -> DOUBLE .) ]


state 41

    (264) aritmetica -> LONG . MAS LONG
    (104) numeros -> LONG .

  ! shift/reduce conflict for MAS resolved as shift
    MAS             shift and go to state 100
    MENOS           reduce using rule 104 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 104 (numeros -> LONG .)
    DIVISION        reduce using rule 104 (numeros -> LONG .)
    MOD             reduce using rule 104 (numeros -> LONG .)
    VAR             reduce using rule 104 (numeros -> LONG .)
    VAL             reduce using rule 104 (numeros -> LONG .)
    VARIABLE        reduce using rule 104 (numeros -> LONG .)
    PRINTLN         reduce using rule 104 (numeros -> LONG .)
    PRINT           reduce using rule 104 (numeros -> LONG .)
    READLINE        reduce using rule 104 (numeros -> LONG .)
    WHILE           reduce using rule 104 (numeros -> LONG .)
    FOR             reduce using rule 104 (numeros -> LONG .)
    IF              reduce using rule 104 (numeros -> LONG .)
    INT             reduce using rule 104 (numeros -> LONG .)
    DOUBLE          reduce using rule 104 (numeros -> LONG .)
    LONG            reduce using rule 104 (numeros -> LONG .)
    FLOAT           reduce using rule 104 (numeros -> LONG .)
    STRING          reduce using rule 104 (numeros -> LONG .)
    CHAR            reduce using rule 104 (numeros -> LONG .)
    DEF             reduce using rule 104 (numeros -> LONG .)
    $end            reduce using rule 104 (numeros -> LONG .)
    LLAVE_D         reduce using rule 104 (numeros -> LONG .)
    RETURN          reduce using rule 104 (numeros -> LONG .)
    CASE            reduce using rule 104 (numeros -> LONG .)
    AND             reduce using rule 104 (numeros -> LONG .)
    OR              reduce using rule 104 (numeros -> LONG .)
    PAR_D           reduce using rule 104 (numeros -> LONG .)

  ! MAS             [ reduce using rule 104 (numeros -> LONG .) ]


state 42

    (265) aritmetica -> FLOAT . MAS FLOAT
    (105) numeros -> FLOAT .

  ! shift/reduce conflict for MAS resolved as shift
    MAS             shift and go to state 101
    MENOS           reduce using rule 105 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 105 (numeros -> FLOAT .)
    DIVISION        reduce using rule 105 (numeros -> FLOAT .)
    MOD             reduce using rule 105 (numeros -> FLOAT .)
    VAR             reduce using rule 105 (numeros -> FLOAT .)
    VAL             reduce using rule 105 (numeros -> FLOAT .)
    VARIABLE        reduce using rule 105 (numeros -> FLOAT .)
    PRINTLN         reduce using rule 105 (numeros -> FLOAT .)
    PRINT           reduce using rule 105 (numeros -> FLOAT .)
    READLINE        reduce using rule 105 (numeros -> FLOAT .)
    WHILE           reduce using rule 105 (numeros -> FLOAT .)
    FOR             reduce using rule 105 (numeros -> FLOAT .)
    IF              reduce using rule 105 (numeros -> FLOAT .)
    INT             reduce using rule 105 (numeros -> FLOAT .)
    DOUBLE          reduce using rule 105 (numeros -> FLOAT .)
    LONG            reduce using rule 105 (numeros -> FLOAT .)
    FLOAT           reduce using rule 105 (numeros -> FLOAT .)
    STRING          reduce using rule 105 (numeros -> FLOAT .)
    CHAR            reduce using rule 105 (numeros -> FLOAT .)
    DEF             reduce using rule 105 (numeros -> FLOAT .)
    $end            reduce using rule 105 (numeros -> FLOAT .)
    LLAVE_D         reduce using rule 105 (numeros -> FLOAT .)
    RETURN          reduce using rule 105 (numeros -> FLOAT .)
    CASE            reduce using rule 105 (numeros -> FLOAT .)
    AND             reduce using rule 105 (numeros -> FLOAT .)
    OR              reduce using rule 105 (numeros -> FLOAT .)
    PAR_D           reduce using rule 105 (numeros -> FLOAT .)

  ! MAS             [ reduce using rule 105 (numeros -> FLOAT .) ]


state 43

    (276) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (296) sumStringChar -> STRING . MAS CHAR

    PUNTO           shift and go to state 102
    MAS             shift and go to state 103


state 44

    (55) asignacionInt -> asignacionSumInt .

    VAR             reduce using rule 55 (asignacionInt -> asignacionSumInt .)
    VAL             reduce using rule 55 (asignacionInt -> asignacionSumInt .)
    VARIABLE        reduce using rule 55 (asignacionInt -> asignacionSumInt .)
    PRINTLN         reduce using rule 55 (asignacionInt -> asignacionSumInt .)
    PRINT           reduce using rule 55 (asignacionInt -> asignacionSumInt .)
    READLINE        reduce using rule 55 (asignacionInt -> asignacionSumInt .)
    WHILE           reduce using rule 55 (asignacionInt -> asignacionSumInt .)
    FOR             reduce using rule 55 (asignacionInt -> asignacionSumInt .)
    IF              reduce using rule 55 (asignacionInt -> asignacionSumInt .)
    INT             reduce using rule 55 (asignacionInt -> asignacionSumInt .)
    DOUBLE          reduce using rule 55 (asignacionInt -> asignacionSumInt .)
    LONG            reduce using rule 55 (asignacionInt -> asignacionSumInt .)
    FLOAT           reduce using rule 55 (asignacionInt -> asignacionSumInt .)
    STRING          reduce using rule 55 (asignacionInt -> asignacionSumInt .)
    CHAR            reduce using rule 55 (asignacionInt -> asignacionSumInt .)
    DEF             reduce using rule 55 (asignacionInt -> asignacionSumInt .)
    $end            reduce using rule 55 (asignacionInt -> asignacionSumInt .)
    LLAVE_D         reduce using rule 55 (asignacionInt -> asignacionSumInt .)
    RETURN          reduce using rule 55 (asignacionInt -> asignacionSumInt .)
    CASE            reduce using rule 55 (asignacionInt -> asignacionSumInt .)


state 45

    (60) asignacionDouble -> asignacionSumDouble .

    VAR             reduce using rule 60 (asignacionDouble -> asignacionSumDouble .)
    VAL             reduce using rule 60 (asignacionDouble -> asignacionSumDouble .)
    VARIABLE        reduce using rule 60 (asignacionDouble -> asignacionSumDouble .)
    PRINTLN         reduce using rule 60 (asignacionDouble -> asignacionSumDouble .)
    PRINT           reduce using rule 60 (asignacionDouble -> asignacionSumDouble .)
    READLINE        reduce using rule 60 (asignacionDouble -> asignacionSumDouble .)
    WHILE           reduce using rule 60 (asignacionDouble -> asignacionSumDouble .)
    FOR             reduce using rule 60 (asignacionDouble -> asignacionSumDouble .)
    IF              reduce using rule 60 (asignacionDouble -> asignacionSumDouble .)
    INT             reduce using rule 60 (asignacionDouble -> asignacionSumDouble .)
    DOUBLE          reduce using rule 60 (asignacionDouble -> asignacionSumDouble .)
    LONG            reduce using rule 60 (asignacionDouble -> asignacionSumDouble .)
    FLOAT           reduce using rule 60 (asignacionDouble -> asignacionSumDouble .)
    STRING          reduce using rule 60 (asignacionDouble -> asignacionSumDouble .)
    CHAR            reduce using rule 60 (asignacionDouble -> asignacionSumDouble .)
    DEF             reduce using rule 60 (asignacionDouble -> asignacionSumDouble .)
    $end            reduce using rule 60 (asignacionDouble -> asignacionSumDouble .)
    LLAVE_D         reduce using rule 60 (asignacionDouble -> asignacionSumDouble .)
    RETURN          reduce using rule 60 (asignacionDouble -> asignacionSumDouble .)
    CASE            reduce using rule 60 (asignacionDouble -> asignacionSumDouble .)


state 46

    (67) asignacionString -> asignacionSumString .

    VAR             reduce using rule 67 (asignacionString -> asignacionSumString .)
    VAL             reduce using rule 67 (asignacionString -> asignacionSumString .)
    VARIABLE        reduce using rule 67 (asignacionString -> asignacionSumString .)
    PRINTLN         reduce using rule 67 (asignacionString -> asignacionSumString .)
    PRINT           reduce using rule 67 (asignacionString -> asignacionSumString .)
    READLINE        reduce using rule 67 (asignacionString -> asignacionSumString .)
    WHILE           reduce using rule 67 (asignacionString -> asignacionSumString .)
    FOR             reduce using rule 67 (asignacionString -> asignacionSumString .)
    IF              reduce using rule 67 (asignacionString -> asignacionSumString .)
    INT             reduce using rule 67 (asignacionString -> asignacionSumString .)
    DOUBLE          reduce using rule 67 (asignacionString -> asignacionSumString .)
    LONG            reduce using rule 67 (asignacionString -> asignacionSumString .)
    FLOAT           reduce using rule 67 (asignacionString -> asignacionSumString .)
    STRING          reduce using rule 67 (asignacionString -> asignacionSumString .)
    CHAR            reduce using rule 67 (asignacionString -> asignacionSumString .)
    DEF             reduce using rule 67 (asignacionString -> asignacionSumString .)
    $end            reduce using rule 67 (asignacionString -> asignacionSumString .)
    LLAVE_D         reduce using rule 67 (asignacionString -> asignacionSumString .)
    RETURN          reduce using rule 67 (asignacionString -> asignacionSumString .)
    CASE            reduce using rule 67 (asignacionString -> asignacionSumString .)


state 47

    (295) sumIntChar -> CHAR . MAS INT
    (297) sumStringChar -> CHAR . MAS STRING
    (293) sumDoubleChar -> CHAR . MAS DOUBLE

    MAS             shift and go to state 104


state 48

    (156) array -> arrayInt .

    VAR             reduce using rule 156 (array -> arrayInt .)
    VAL             reduce using rule 156 (array -> arrayInt .)
    VARIABLE        reduce using rule 156 (array -> arrayInt .)
    PRINTLN         reduce using rule 156 (array -> arrayInt .)
    PRINT           reduce using rule 156 (array -> arrayInt .)
    READLINE        reduce using rule 156 (array -> arrayInt .)
    WHILE           reduce using rule 156 (array -> arrayInt .)
    FOR             reduce using rule 156 (array -> arrayInt .)
    IF              reduce using rule 156 (array -> arrayInt .)
    INT             reduce using rule 156 (array -> arrayInt .)
    DOUBLE          reduce using rule 156 (array -> arrayInt .)
    LONG            reduce using rule 156 (array -> arrayInt .)
    FLOAT           reduce using rule 156 (array -> arrayInt .)
    STRING          reduce using rule 156 (array -> arrayInt .)
    CHAR            reduce using rule 156 (array -> arrayInt .)
    DEF             reduce using rule 156 (array -> arrayInt .)
    $end            reduce using rule 156 (array -> arrayInt .)
    LLAVE_D         reduce using rule 156 (array -> arrayInt .)
    RETURN          reduce using rule 156 (array -> arrayInt .)
    CASE            reduce using rule 156 (array -> arrayInt .)


state 49

    (157) array -> arrayDouble .

    VAR             reduce using rule 157 (array -> arrayDouble .)
    VAL             reduce using rule 157 (array -> arrayDouble .)
    VARIABLE        reduce using rule 157 (array -> arrayDouble .)
    PRINTLN         reduce using rule 157 (array -> arrayDouble .)
    PRINT           reduce using rule 157 (array -> arrayDouble .)
    READLINE        reduce using rule 157 (array -> arrayDouble .)
    WHILE           reduce using rule 157 (array -> arrayDouble .)
    FOR             reduce using rule 157 (array -> arrayDouble .)
    IF              reduce using rule 157 (array -> arrayDouble .)
    INT             reduce using rule 157 (array -> arrayDouble .)
    DOUBLE          reduce using rule 157 (array -> arrayDouble .)
    LONG            reduce using rule 157 (array -> arrayDouble .)
    FLOAT           reduce using rule 157 (array -> arrayDouble .)
    STRING          reduce using rule 157 (array -> arrayDouble .)
    CHAR            reduce using rule 157 (array -> arrayDouble .)
    DEF             reduce using rule 157 (array -> arrayDouble .)
    $end            reduce using rule 157 (array -> arrayDouble .)
    LLAVE_D         reduce using rule 157 (array -> arrayDouble .)
    RETURN          reduce using rule 157 (array -> arrayDouble .)
    CASE            reduce using rule 157 (array -> arrayDouble .)


state 50

    (160) list -> listChar .

    VAR             reduce using rule 160 (list -> listChar .)
    VAL             reduce using rule 160 (list -> listChar .)
    VARIABLE        reduce using rule 160 (list -> listChar .)
    PRINTLN         reduce using rule 160 (list -> listChar .)
    PRINT           reduce using rule 160 (list -> listChar .)
    READLINE        reduce using rule 160 (list -> listChar .)
    WHILE           reduce using rule 160 (list -> listChar .)
    FOR             reduce using rule 160 (list -> listChar .)
    IF              reduce using rule 160 (list -> listChar .)
    INT             reduce using rule 160 (list -> listChar .)
    DOUBLE          reduce using rule 160 (list -> listChar .)
    LONG            reduce using rule 160 (list -> listChar .)
    FLOAT           reduce using rule 160 (list -> listChar .)
    STRING          reduce using rule 160 (list -> listChar .)
    CHAR            reduce using rule 160 (list -> listChar .)
    DEF             reduce using rule 160 (list -> listChar .)
    $end            reduce using rule 160 (list -> listChar .)
    LLAVE_D         reduce using rule 160 (list -> listChar .)
    RETURN          reduce using rule 160 (list -> listChar .)
    CASE            reduce using rule 160 (list -> listChar .)


state 51

    (161) list -> listString .

    VAR             reduce using rule 161 (list -> listString .)
    VAL             reduce using rule 161 (list -> listString .)
    VARIABLE        reduce using rule 161 (list -> listString .)
    PRINTLN         reduce using rule 161 (list -> listString .)
    PRINT           reduce using rule 161 (list -> listString .)
    READLINE        reduce using rule 161 (list -> listString .)
    WHILE           reduce using rule 161 (list -> listString .)
    FOR             reduce using rule 161 (list -> listString .)
    IF              reduce using rule 161 (list -> listString .)
    INT             reduce using rule 161 (list -> listString .)
    DOUBLE          reduce using rule 161 (list -> listString .)
    LONG            reduce using rule 161 (list -> listString .)
    FLOAT           reduce using rule 161 (list -> listString .)
    STRING          reduce using rule 161 (list -> listString .)
    CHAR            reduce using rule 161 (list -> listString .)
    DEF             reduce using rule 161 (list -> listString .)
    $end            reduce using rule 161 (list -> listString .)
    LLAVE_D         reduce using rule 161 (list -> listString .)
    RETURN          reduce using rule 161 (list -> listString .)
    CASE            reduce using rule 161 (list -> listString .)


state 52

    (286) suma -> sumIntChar .

    MAS             reduce using rule 286 (suma -> sumIntChar .)
    MENOS           reduce using rule 286 (suma -> sumIntChar .)
    MULTIPLICACION  reduce using rule 286 (suma -> sumIntChar .)
    DIVISION        reduce using rule 286 (suma -> sumIntChar .)
    MOD             reduce using rule 286 (suma -> sumIntChar .)
    VAR             reduce using rule 286 (suma -> sumIntChar .)
    VAL             reduce using rule 286 (suma -> sumIntChar .)
    VARIABLE        reduce using rule 286 (suma -> sumIntChar .)
    PRINTLN         reduce using rule 286 (suma -> sumIntChar .)
    PRINT           reduce using rule 286 (suma -> sumIntChar .)
    READLINE        reduce using rule 286 (suma -> sumIntChar .)
    WHILE           reduce using rule 286 (suma -> sumIntChar .)
    FOR             reduce using rule 286 (suma -> sumIntChar .)
    IF              reduce using rule 286 (suma -> sumIntChar .)
    INT             reduce using rule 286 (suma -> sumIntChar .)
    DOUBLE          reduce using rule 286 (suma -> sumIntChar .)
    LONG            reduce using rule 286 (suma -> sumIntChar .)
    FLOAT           reduce using rule 286 (suma -> sumIntChar .)
    STRING          reduce using rule 286 (suma -> sumIntChar .)
    CHAR            reduce using rule 286 (suma -> sumIntChar .)
    DEF             reduce using rule 286 (suma -> sumIntChar .)
    $end            reduce using rule 286 (suma -> sumIntChar .)
    LLAVE_D         reduce using rule 286 (suma -> sumIntChar .)
    RETURN          reduce using rule 286 (suma -> sumIntChar .)
    CASE            reduce using rule 286 (suma -> sumIntChar .)
    IGUAL_COMPARACION reduce using rule 286 (suma -> sumIntChar .)
    DIFERENTE       reduce using rule 286 (suma -> sumIntChar .)
    MAYOR           reduce using rule 286 (suma -> sumIntChar .)
    MENOR           reduce using rule 286 (suma -> sumIntChar .)
    AND             reduce using rule 286 (suma -> sumIntChar .)
    OR              reduce using rule 286 (suma -> sumIntChar .)
    PAR_D           reduce using rule 286 (suma -> sumIntChar .)


state 53

    (287) suma -> sumStringChar .

    MAS             reduce using rule 287 (suma -> sumStringChar .)
    MENOS           reduce using rule 287 (suma -> sumStringChar .)
    MULTIPLICACION  reduce using rule 287 (suma -> sumStringChar .)
    DIVISION        reduce using rule 287 (suma -> sumStringChar .)
    MOD             reduce using rule 287 (suma -> sumStringChar .)
    VAR             reduce using rule 287 (suma -> sumStringChar .)
    VAL             reduce using rule 287 (suma -> sumStringChar .)
    VARIABLE        reduce using rule 287 (suma -> sumStringChar .)
    PRINTLN         reduce using rule 287 (suma -> sumStringChar .)
    PRINT           reduce using rule 287 (suma -> sumStringChar .)
    READLINE        reduce using rule 287 (suma -> sumStringChar .)
    WHILE           reduce using rule 287 (suma -> sumStringChar .)
    FOR             reduce using rule 287 (suma -> sumStringChar .)
    IF              reduce using rule 287 (suma -> sumStringChar .)
    INT             reduce using rule 287 (suma -> sumStringChar .)
    DOUBLE          reduce using rule 287 (suma -> sumStringChar .)
    LONG            reduce using rule 287 (suma -> sumStringChar .)
    FLOAT           reduce using rule 287 (suma -> sumStringChar .)
    STRING          reduce using rule 287 (suma -> sumStringChar .)
    CHAR            reduce using rule 287 (suma -> sumStringChar .)
    DEF             reduce using rule 287 (suma -> sumStringChar .)
    $end            reduce using rule 287 (suma -> sumStringChar .)
    LLAVE_D         reduce using rule 287 (suma -> sumStringChar .)
    RETURN          reduce using rule 287 (suma -> sumStringChar .)
    CASE            reduce using rule 287 (suma -> sumStringChar .)
    IGUAL_COMPARACION reduce using rule 287 (suma -> sumStringChar .)
    DIFERENTE       reduce using rule 287 (suma -> sumStringChar .)
    MAYOR           reduce using rule 287 (suma -> sumStringChar .)
    MENOR           reduce using rule 287 (suma -> sumStringChar .)
    AND             reduce using rule 287 (suma -> sumStringChar .)
    OR              reduce using rule 287 (suma -> sumStringChar .)
    PAR_D           reduce using rule 287 (suma -> sumStringChar .)


state 54

    (288) suma -> sumIntDouble .

    MAS             reduce using rule 288 (suma -> sumIntDouble .)
    MENOS           reduce using rule 288 (suma -> sumIntDouble .)
    MULTIPLICACION  reduce using rule 288 (suma -> sumIntDouble .)
    DIVISION        reduce using rule 288 (suma -> sumIntDouble .)
    MOD             reduce using rule 288 (suma -> sumIntDouble .)
    VAR             reduce using rule 288 (suma -> sumIntDouble .)
    VAL             reduce using rule 288 (suma -> sumIntDouble .)
    VARIABLE        reduce using rule 288 (suma -> sumIntDouble .)
    PRINTLN         reduce using rule 288 (suma -> sumIntDouble .)
    PRINT           reduce using rule 288 (suma -> sumIntDouble .)
    READLINE        reduce using rule 288 (suma -> sumIntDouble .)
    WHILE           reduce using rule 288 (suma -> sumIntDouble .)
    FOR             reduce using rule 288 (suma -> sumIntDouble .)
    IF              reduce using rule 288 (suma -> sumIntDouble .)
    INT             reduce using rule 288 (suma -> sumIntDouble .)
    DOUBLE          reduce using rule 288 (suma -> sumIntDouble .)
    LONG            reduce using rule 288 (suma -> sumIntDouble .)
    FLOAT           reduce using rule 288 (suma -> sumIntDouble .)
    STRING          reduce using rule 288 (suma -> sumIntDouble .)
    CHAR            reduce using rule 288 (suma -> sumIntDouble .)
    DEF             reduce using rule 288 (suma -> sumIntDouble .)
    $end            reduce using rule 288 (suma -> sumIntDouble .)
    LLAVE_D         reduce using rule 288 (suma -> sumIntDouble .)
    RETURN          reduce using rule 288 (suma -> sumIntDouble .)
    CASE            reduce using rule 288 (suma -> sumIntDouble .)
    IGUAL_COMPARACION reduce using rule 288 (suma -> sumIntDouble .)
    DIFERENTE       reduce using rule 288 (suma -> sumIntDouble .)
    MAYOR           reduce using rule 288 (suma -> sumIntDouble .)
    MENOR           reduce using rule 288 (suma -> sumIntDouble .)
    AND             reduce using rule 288 (suma -> sumIntDouble .)
    OR              reduce using rule 288 (suma -> sumIntDouble .)
    PAR_D           reduce using rule 288 (suma -> sumIntDouble .)


state 55

    (289) suma -> sumDoubleChar .

    MAS             reduce using rule 289 (suma -> sumDoubleChar .)
    MENOS           reduce using rule 289 (suma -> sumDoubleChar .)
    MULTIPLICACION  reduce using rule 289 (suma -> sumDoubleChar .)
    DIVISION        reduce using rule 289 (suma -> sumDoubleChar .)
    MOD             reduce using rule 289 (suma -> sumDoubleChar .)
    VAR             reduce using rule 289 (suma -> sumDoubleChar .)
    VAL             reduce using rule 289 (suma -> sumDoubleChar .)
    VARIABLE        reduce using rule 289 (suma -> sumDoubleChar .)
    PRINTLN         reduce using rule 289 (suma -> sumDoubleChar .)
    PRINT           reduce using rule 289 (suma -> sumDoubleChar .)
    READLINE        reduce using rule 289 (suma -> sumDoubleChar .)
    WHILE           reduce using rule 289 (suma -> sumDoubleChar .)
    FOR             reduce using rule 289 (suma -> sumDoubleChar .)
    IF              reduce using rule 289 (suma -> sumDoubleChar .)
    INT             reduce using rule 289 (suma -> sumDoubleChar .)
    DOUBLE          reduce using rule 289 (suma -> sumDoubleChar .)
    LONG            reduce using rule 289 (suma -> sumDoubleChar .)
    FLOAT           reduce using rule 289 (suma -> sumDoubleChar .)
    STRING          reduce using rule 289 (suma -> sumDoubleChar .)
    CHAR            reduce using rule 289 (suma -> sumDoubleChar .)
    DEF             reduce using rule 289 (suma -> sumDoubleChar .)
    $end            reduce using rule 289 (suma -> sumDoubleChar .)
    LLAVE_D         reduce using rule 289 (suma -> sumDoubleChar .)
    RETURN          reduce using rule 289 (suma -> sumDoubleChar .)
    CASE            reduce using rule 289 (suma -> sumDoubleChar .)
    IGUAL_COMPARACION reduce using rule 289 (suma -> sumDoubleChar .)
    DIFERENTE       reduce using rule 289 (suma -> sumDoubleChar .)
    MAYOR           reduce using rule 289 (suma -> sumDoubleChar .)
    MENOR           reduce using rule 289 (suma -> sumDoubleChar .)
    AND             reduce using rule 289 (suma -> sumDoubleChar .)
    OR              reduce using rule 289 (suma -> sumDoubleChar .)
    PAR_D           reduce using rule 289 (suma -> sumDoubleChar .)


state 56

    (1) inicio -> OBJECT VARIABLE . LLAVE_I cuerpo LLAVE_D

    LLAVE_I         shift and go to state 105


state 57

    (80) reasignacion -> VARIABLE IGUAL . valor
    (81) reasignacion -> VARIABLE IGUAL . returnfun
    (82) reasignacion -> VARIABLE IGUAL . aritmetica
    (93) valor -> . STRING
    (94) valor -> . CHAR
    (95) valor -> . VARIABLE
    (96) valor -> . numeros
    (97) valor -> . booleanos
    (98) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (99) valor -> . VARIABLE PAR_I INT PAR_D
    (142) returnfun -> . returnCastable
    (143) returnfun -> . castingcall
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (144) returnCastable -> . entrada
    (145) returnCastable -> . funcall
    (146) castingcall -> . returnCastable PUNTO castingfun
    (147) castingcall -> . VARIABLE PUNTO castingfun
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (137) funcall -> . VARIABLE varparen
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    STRING          shift and go to state 110
    CHAR            shift and go to state 111
    VARIABLE        shift and go to state 106
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117
    READLINE        shift and go to state 34

    valor                          shift and go to state 107
    returnfun                      shift and go to state 108
    aritmetica                     shift and go to state 109
    numeros                        shift and go to state 112
    booleanos                      shift and go to state 113
    returnCastable                 shift and go to state 114
    castingcall                    shift and go to state 115
    suma                           shift and go to state 39
    startsWith                     shift and go to state 118
    entrada                        shift and go to state 119
    funcall                        shift and go to state 120
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 58

    (83) reasignacion -> VARIABLE PAR_I . INT PAR_D IGUAL valor
    (138) varparen -> PAR_I . valores PAR_D
    (139) varparen -> PAR_I . PAR_D
    (162) valores -> . valor
    (163) valores -> . valor COMA valores
    (93) valor -> . STRING
    (94) valor -> . CHAR
    (95) valor -> . VARIABLE
    (96) valor -> . numeros
    (97) valor -> . booleanos
    (98) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (99) valor -> . VARIABLE PAR_I INT PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    INT             shift and go to state 122
    PAR_D           shift and go to state 123
    STRING          shift and go to state 126
    CHAR            shift and go to state 127
    VARIABLE        shift and go to state 121
    LONG            shift and go to state 129
    FLOAT           shift and go to state 130
    DOUBLE          shift and go to state 131
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117

    valor                          shift and go to state 124
    valores                        shift and go to state 125
    numeros                        shift and go to state 128
    booleanos                      shift and go to state 113
    startsWith                     shift and go to state 118

state 59

    (137) funcall -> VARIABLE varparen .
    (140) varparen -> varparen . PAR_I valores PAR_D
    (141) varparen -> varparen . PAR_I PAR_D

    VAR             reduce using rule 137 (funcall -> VARIABLE varparen .)
    VAL             reduce using rule 137 (funcall -> VARIABLE varparen .)
    VARIABLE        reduce using rule 137 (funcall -> VARIABLE varparen .)
    PRINTLN         reduce using rule 137 (funcall -> VARIABLE varparen .)
    PRINT           reduce using rule 137 (funcall -> VARIABLE varparen .)
    READLINE        reduce using rule 137 (funcall -> VARIABLE varparen .)
    WHILE           reduce using rule 137 (funcall -> VARIABLE varparen .)
    FOR             reduce using rule 137 (funcall -> VARIABLE varparen .)
    IF              reduce using rule 137 (funcall -> VARIABLE varparen .)
    INT             reduce using rule 137 (funcall -> VARIABLE varparen .)
    DOUBLE          reduce using rule 137 (funcall -> VARIABLE varparen .)
    LONG            reduce using rule 137 (funcall -> VARIABLE varparen .)
    FLOAT           reduce using rule 137 (funcall -> VARIABLE varparen .)
    STRING          reduce using rule 137 (funcall -> VARIABLE varparen .)
    CHAR            reduce using rule 137 (funcall -> VARIABLE varparen .)
    DEF             reduce using rule 137 (funcall -> VARIABLE varparen .)
    $end            reduce using rule 137 (funcall -> VARIABLE varparen .)
    LLAVE_D         reduce using rule 137 (funcall -> VARIABLE varparen .)
    RETURN          reduce using rule 137 (funcall -> VARIABLE varparen .)
    PUNTO           reduce using rule 137 (funcall -> VARIABLE varparen .)
    CASE            reduce using rule 137 (funcall -> VARIABLE varparen .)
    PAR_I           shift and go to state 132


state 60

    (174) match -> VARIABLE MATCH . LLAVE_I cases LLAVE_D

    LLAVE_I         shift and go to state 133


state 61

    (251) aritmetica -> VARIABLE aritmeticos . numeros
    (253) aritmetica -> VARIABLE aritmeticos . VARIABLE
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VARIABLE        shift and go to state 134
    INT             shift and go to state 136
    LONG            shift and go to state 129
    FLOAT           shift and go to state 130
    DOUBLE          shift and go to state 131

    numeros                        shift and go to state 135

state 62

    (257) aritmetica -> VARIABLE MAS . numeros
    (259) aritmetica -> VARIABLE MAS . VARIABLE
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VARIABLE        shift and go to state 137
    INT             shift and go to state 136
    LONG            shift and go to state 129
    FLOAT           shift and go to state 130
    DOUBLE          shift and go to state 131

    numeros                        shift and go to state 138

state 63

    (266) aritmeticos -> MENOS .

    VARIABLE        reduce using rule 266 (aritmeticos -> MENOS .)
    INT             reduce using rule 266 (aritmeticos -> MENOS .)
    LONG            reduce using rule 266 (aritmeticos -> MENOS .)
    FLOAT           reduce using rule 266 (aritmeticos -> MENOS .)
    DOUBLE          reduce using rule 266 (aritmeticos -> MENOS .)


state 64

    (267) aritmeticos -> MULTIPLICACION .

    VARIABLE        reduce using rule 267 (aritmeticos -> MULTIPLICACION .)
    INT             reduce using rule 267 (aritmeticos -> MULTIPLICACION .)
    LONG            reduce using rule 267 (aritmeticos -> MULTIPLICACION .)
    FLOAT           reduce using rule 267 (aritmeticos -> MULTIPLICACION .)
    DOUBLE          reduce using rule 267 (aritmeticos -> MULTIPLICACION .)


state 65

    (268) aritmeticos -> DIVISION .

    VARIABLE        reduce using rule 268 (aritmeticos -> DIVISION .)
    INT             reduce using rule 268 (aritmeticos -> DIVISION .)
    LONG            reduce using rule 268 (aritmeticos -> DIVISION .)
    FLOAT           reduce using rule 268 (aritmeticos -> DIVISION .)
    DOUBLE          reduce using rule 268 (aritmeticos -> DIVISION .)


state 66

    (269) aritmeticos -> MOD .

    VARIABLE        reduce using rule 269 (aritmeticos -> MOD .)
    INT             reduce using rule 269 (aritmeticos -> MOD .)
    LONG            reduce using rule 269 (aritmeticos -> MOD .)
    FLOAT           reduce using rule 269 (aritmeticos -> MOD .)
    DOUBLE          reduce using rule 269 (aritmeticos -> MOD .)


state 67

    (2) inicio -> IMPORT io . inicio
    (1) inicio -> . OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D
    (2) inicio -> . IMPORT io inicio
    (3) inicio -> . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcion cuerpo
    (7) cuerpo -> . contenido
    (8) cuerpo -> . contenido cuerpo
    (107) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (108) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (115) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (116) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (117) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (118) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (119) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (120) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (122) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    OBJECT          shift and go to state 2
    IMPORT          shift and go to state 5
    DEF             shift and go to state 8
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

    inicio                         shift and go to state 139
    cuerpo                         shift and go to state 4
    funcion                        shift and go to state 6
    contenido                      shift and go to state 7
    aritmetica                     shift and go to state 9
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 68

    (4) io -> VARIABLE . PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE

    PUNTO           shift and go to state 140


state 69

    (6) cuerpo -> funcion cuerpo .

    $end            reduce using rule 6 (cuerpo -> funcion cuerpo .)
    LLAVE_D         reduce using rule 6 (cuerpo -> funcion cuerpo .)


state 70

    (8) cuerpo -> contenido cuerpo .

    $end            reduce using rule 8 (cuerpo -> contenido cuerpo .)
    LLAVE_D         reduce using rule 8 (cuerpo -> contenido cuerpo .)


state 71

    (107) funcion -> DEF VARIABLE . parametro IGUAL LLAVE_I contenido LLAVE_D
    (108) funcion -> DEF VARIABLE . parametro LLAVE_I contenido LLAVE_D
    (115) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (116) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (117) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (118) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (119) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (120) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (121) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (122) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (123) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (124) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (111) parametro -> . parametros
    (112) parametro -> . PAR_I PAR_D
    (113) parametros -> . PAR_I declaracion PAR_D
    (114) parametros -> . PAR_I declaracion PAR_D parametros

    PAR_I           shift and go to state 143

    parametro                      shift and go to state 141
    parametros                     shift and go to state 142

state 72

    (29) contenido -> aritmetica contenido .

    DEF             reduce using rule 29 (contenido -> aritmetica contenido .)
    VAR             reduce using rule 29 (contenido -> aritmetica contenido .)
    VAL             reduce using rule 29 (contenido -> aritmetica contenido .)
    VARIABLE        reduce using rule 29 (contenido -> aritmetica contenido .)
    PRINTLN         reduce using rule 29 (contenido -> aritmetica contenido .)
    PRINT           reduce using rule 29 (contenido -> aritmetica contenido .)
    READLINE        reduce using rule 29 (contenido -> aritmetica contenido .)
    WHILE           reduce using rule 29 (contenido -> aritmetica contenido .)
    FOR             reduce using rule 29 (contenido -> aritmetica contenido .)
    IF              reduce using rule 29 (contenido -> aritmetica contenido .)
    INT             reduce using rule 29 (contenido -> aritmetica contenido .)
    DOUBLE          reduce using rule 29 (contenido -> aritmetica contenido .)
    LONG            reduce using rule 29 (contenido -> aritmetica contenido .)
    FLOAT           reduce using rule 29 (contenido -> aritmetica contenido .)
    STRING          reduce using rule 29 (contenido -> aritmetica contenido .)
    CHAR            reduce using rule 29 (contenido -> aritmetica contenido .)
    $end            reduce using rule 29 (contenido -> aritmetica contenido .)
    LLAVE_D         reduce using rule 29 (contenido -> aritmetica contenido .)
    RETURN          reduce using rule 29 (contenido -> aritmetica contenido .)


state 73

    (254) aritmetica -> aritmetica aritmeticos . numeros
    (255) aritmetica -> aritmetica aritmeticos . VARIABLE
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VARIABLE        shift and go to state 145
    INT             shift and go to state 136
    LONG            shift and go to state 129
    FLOAT           shift and go to state 130
    DOUBLE          shift and go to state 131

    numeros                        shift and go to state 144

state 74

    (260) aritmetica -> aritmetica MAS . numeros
    (261) aritmetica -> aritmetica MAS . VARIABLE
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VARIABLE        shift and go to state 147
    INT             shift and go to state 136
    LONG            shift and go to state 129
    FLOAT           shift and go to state 130
    DOUBLE          shift and go to state 131

    numeros                        shift and go to state 146

state 75

    (20) contenido -> asignacion contenido .

    DEF             reduce using rule 20 (contenido -> asignacion contenido .)
    VAR             reduce using rule 20 (contenido -> asignacion contenido .)
    VAL             reduce using rule 20 (contenido -> asignacion contenido .)
    VARIABLE        reduce using rule 20 (contenido -> asignacion contenido .)
    PRINTLN         reduce using rule 20 (contenido -> asignacion contenido .)
    PRINT           reduce using rule 20 (contenido -> asignacion contenido .)
    READLINE        reduce using rule 20 (contenido -> asignacion contenido .)
    WHILE           reduce using rule 20 (contenido -> asignacion contenido .)
    FOR             reduce using rule 20 (contenido -> asignacion contenido .)
    IF              reduce using rule 20 (contenido -> asignacion contenido .)
    INT             reduce using rule 20 (contenido -> asignacion contenido .)
    DOUBLE          reduce using rule 20 (contenido -> asignacion contenido .)
    LONG            reduce using rule 20 (contenido -> asignacion contenido .)
    FLOAT           reduce using rule 20 (contenido -> asignacion contenido .)
    STRING          reduce using rule 20 (contenido -> asignacion contenido .)
    CHAR            reduce using rule 20 (contenido -> asignacion contenido .)
    $end            reduce using rule 20 (contenido -> asignacion contenido .)
    LLAVE_D         reduce using rule 20 (contenido -> asignacion contenido .)
    RETURN          reduce using rule 20 (contenido -> asignacion contenido .)


state 76

    (21) contenido -> reasignacion contenido .

    DEF             reduce using rule 21 (contenido -> reasignacion contenido .)
    VAR             reduce using rule 21 (contenido -> reasignacion contenido .)
    VAL             reduce using rule 21 (contenido -> reasignacion contenido .)
    VARIABLE        reduce using rule 21 (contenido -> reasignacion contenido .)
    PRINTLN         reduce using rule 21 (contenido -> reasignacion contenido .)
    PRINT           reduce using rule 21 (contenido -> reasignacion contenido .)
    READLINE        reduce using rule 21 (contenido -> reasignacion contenido .)
    WHILE           reduce using rule 21 (contenido -> reasignacion contenido .)
    FOR             reduce using rule 21 (contenido -> reasignacion contenido .)
    IF              reduce using rule 21 (contenido -> reasignacion contenido .)
    INT             reduce using rule 21 (contenido -> reasignacion contenido .)
    DOUBLE          reduce using rule 21 (contenido -> reasignacion contenido .)
    LONG            reduce using rule 21 (contenido -> reasignacion contenido .)
    FLOAT           reduce using rule 21 (contenido -> reasignacion contenido .)
    STRING          reduce using rule 21 (contenido -> reasignacion contenido .)
    CHAR            reduce using rule 21 (contenido -> reasignacion contenido .)
    $end            reduce using rule 21 (contenido -> reasignacion contenido .)
    LLAVE_D         reduce using rule 21 (contenido -> reasignacion contenido .)
    RETURN          reduce using rule 21 (contenido -> reasignacion contenido .)


state 77

    (22) contenido -> funcall contenido .

    DEF             reduce using rule 22 (contenido -> funcall contenido .)
    VAR             reduce using rule 22 (contenido -> funcall contenido .)
    VAL             reduce using rule 22 (contenido -> funcall contenido .)
    VARIABLE        reduce using rule 22 (contenido -> funcall contenido .)
    PRINTLN         reduce using rule 22 (contenido -> funcall contenido .)
    PRINT           reduce using rule 22 (contenido -> funcall contenido .)
    READLINE        reduce using rule 22 (contenido -> funcall contenido .)
    WHILE           reduce using rule 22 (contenido -> funcall contenido .)
    FOR             reduce using rule 22 (contenido -> funcall contenido .)
    IF              reduce using rule 22 (contenido -> funcall contenido .)
    INT             reduce using rule 22 (contenido -> funcall contenido .)
    DOUBLE          reduce using rule 22 (contenido -> funcall contenido .)
    LONG            reduce using rule 22 (contenido -> funcall contenido .)
    FLOAT           reduce using rule 22 (contenido -> funcall contenido .)
    STRING          reduce using rule 22 (contenido -> funcall contenido .)
    CHAR            reduce using rule 22 (contenido -> funcall contenido .)
    $end            reduce using rule 22 (contenido -> funcall contenido .)
    LLAVE_D         reduce using rule 22 (contenido -> funcall contenido .)
    RETURN          reduce using rule 22 (contenido -> funcall contenido .)


state 78

    (23) contenido -> impresion contenido .

    DEF             reduce using rule 23 (contenido -> impresion contenido .)
    VAR             reduce using rule 23 (contenido -> impresion contenido .)
    VAL             reduce using rule 23 (contenido -> impresion contenido .)
    VARIABLE        reduce using rule 23 (contenido -> impresion contenido .)
    PRINTLN         reduce using rule 23 (contenido -> impresion contenido .)
    PRINT           reduce using rule 23 (contenido -> impresion contenido .)
    READLINE        reduce using rule 23 (contenido -> impresion contenido .)
    WHILE           reduce using rule 23 (contenido -> impresion contenido .)
    FOR             reduce using rule 23 (contenido -> impresion contenido .)
    IF              reduce using rule 23 (contenido -> impresion contenido .)
    INT             reduce using rule 23 (contenido -> impresion contenido .)
    DOUBLE          reduce using rule 23 (contenido -> impresion contenido .)
    LONG            reduce using rule 23 (contenido -> impresion contenido .)
    FLOAT           reduce using rule 23 (contenido -> impresion contenido .)
    STRING          reduce using rule 23 (contenido -> impresion contenido .)
    CHAR            reduce using rule 23 (contenido -> impresion contenido .)
    $end            reduce using rule 23 (contenido -> impresion contenido .)
    LLAVE_D         reduce using rule 23 (contenido -> impresion contenido .)
    RETURN          reduce using rule 23 (contenido -> impresion contenido .)


state 79

    (24) contenido -> entrada contenido .

    DEF             reduce using rule 24 (contenido -> entrada contenido .)
    VAR             reduce using rule 24 (contenido -> entrada contenido .)
    VAL             reduce using rule 24 (contenido -> entrada contenido .)
    VARIABLE        reduce using rule 24 (contenido -> entrada contenido .)
    PRINTLN         reduce using rule 24 (contenido -> entrada contenido .)
    PRINT           reduce using rule 24 (contenido -> entrada contenido .)
    READLINE        reduce using rule 24 (contenido -> entrada contenido .)
    WHILE           reduce using rule 24 (contenido -> entrada contenido .)
    FOR             reduce using rule 24 (contenido -> entrada contenido .)
    IF              reduce using rule 24 (contenido -> entrada contenido .)
    INT             reduce using rule 24 (contenido -> entrada contenido .)
    DOUBLE          reduce using rule 24 (contenido -> entrada contenido .)
    LONG            reduce using rule 24 (contenido -> entrada contenido .)
    FLOAT           reduce using rule 24 (contenido -> entrada contenido .)
    STRING          reduce using rule 24 (contenido -> entrada contenido .)
    CHAR            reduce using rule 24 (contenido -> entrada contenido .)
    $end            reduce using rule 24 (contenido -> entrada contenido .)
    LLAVE_D         reduce using rule 24 (contenido -> entrada contenido .)
    RETURN          reduce using rule 24 (contenido -> entrada contenido .)


state 80

    (25) contenido -> while contenido .

    DEF             reduce using rule 25 (contenido -> while contenido .)
    VAR             reduce using rule 25 (contenido -> while contenido .)
    VAL             reduce using rule 25 (contenido -> while contenido .)
    VARIABLE        reduce using rule 25 (contenido -> while contenido .)
    PRINTLN         reduce using rule 25 (contenido -> while contenido .)
    PRINT           reduce using rule 25 (contenido -> while contenido .)
    READLINE        reduce using rule 25 (contenido -> while contenido .)
    WHILE           reduce using rule 25 (contenido -> while contenido .)
    FOR             reduce using rule 25 (contenido -> while contenido .)
    IF              reduce using rule 25 (contenido -> while contenido .)
    INT             reduce using rule 25 (contenido -> while contenido .)
    DOUBLE          reduce using rule 25 (contenido -> while contenido .)
    LONG            reduce using rule 25 (contenido -> while contenido .)
    FLOAT           reduce using rule 25 (contenido -> while contenido .)
    STRING          reduce using rule 25 (contenido -> while contenido .)
    CHAR            reduce using rule 25 (contenido -> while contenido .)
    $end            reduce using rule 25 (contenido -> while contenido .)
    LLAVE_D         reduce using rule 25 (contenido -> while contenido .)
    RETURN          reduce using rule 25 (contenido -> while contenido .)


state 81

    (26) contenido -> for contenido .

    DEF             reduce using rule 26 (contenido -> for contenido .)
    VAR             reduce using rule 26 (contenido -> for contenido .)
    VAL             reduce using rule 26 (contenido -> for contenido .)
    VARIABLE        reduce using rule 26 (contenido -> for contenido .)
    PRINTLN         reduce using rule 26 (contenido -> for contenido .)
    PRINT           reduce using rule 26 (contenido -> for contenido .)
    READLINE        reduce using rule 26 (contenido -> for contenido .)
    WHILE           reduce using rule 26 (contenido -> for contenido .)
    FOR             reduce using rule 26 (contenido -> for contenido .)
    IF              reduce using rule 26 (contenido -> for contenido .)
    INT             reduce using rule 26 (contenido -> for contenido .)
    DOUBLE          reduce using rule 26 (contenido -> for contenido .)
    LONG            reduce using rule 26 (contenido -> for contenido .)
    FLOAT           reduce using rule 26 (contenido -> for contenido .)
    STRING          reduce using rule 26 (contenido -> for contenido .)
    CHAR            reduce using rule 26 (contenido -> for contenido .)
    $end            reduce using rule 26 (contenido -> for contenido .)
    LLAVE_D         reduce using rule 26 (contenido -> for contenido .)
    RETURN          reduce using rule 26 (contenido -> for contenido .)


state 82

    (28) contenido -> match contenido .

    DEF             reduce using rule 28 (contenido -> match contenido .)
    VAR             reduce using rule 28 (contenido -> match contenido .)
    VAL             reduce using rule 28 (contenido -> match contenido .)
    VARIABLE        reduce using rule 28 (contenido -> match contenido .)
    PRINTLN         reduce using rule 28 (contenido -> match contenido .)
    PRINT           reduce using rule 28 (contenido -> match contenido .)
    READLINE        reduce using rule 28 (contenido -> match contenido .)
    WHILE           reduce using rule 28 (contenido -> match contenido .)
    FOR             reduce using rule 28 (contenido -> match contenido .)
    IF              reduce using rule 28 (contenido -> match contenido .)
    INT             reduce using rule 28 (contenido -> match contenido .)
    DOUBLE          reduce using rule 28 (contenido -> match contenido .)
    LONG            reduce using rule 28 (contenido -> match contenido .)
    FLOAT           reduce using rule 28 (contenido -> match contenido .)
    STRING          reduce using rule 28 (contenido -> match contenido .)
    CHAR            reduce using rule 28 (contenido -> match contenido .)
    $end            reduce using rule 28 (contenido -> match contenido .)
    LLAVE_D         reduce using rule 28 (contenido -> match contenido .)
    RETURN          reduce using rule 28 (contenido -> match contenido .)


state 83

    (27) contenido -> if contenido .

    DEF             reduce using rule 27 (contenido -> if contenido .)
    VAR             reduce using rule 27 (contenido -> if contenido .)
    VAL             reduce using rule 27 (contenido -> if contenido .)
    VARIABLE        reduce using rule 27 (contenido -> if contenido .)
    PRINTLN         reduce using rule 27 (contenido -> if contenido .)
    PRINT           reduce using rule 27 (contenido -> if contenido .)
    READLINE        reduce using rule 27 (contenido -> if contenido .)
    WHILE           reduce using rule 27 (contenido -> if contenido .)
    FOR             reduce using rule 27 (contenido -> if contenido .)
    IF              reduce using rule 27 (contenido -> if contenido .)
    INT             reduce using rule 27 (contenido -> if contenido .)
    DOUBLE          reduce using rule 27 (contenido -> if contenido .)
    LONG            reduce using rule 27 (contenido -> if contenido .)
    FLOAT           reduce using rule 27 (contenido -> if contenido .)
    STRING          reduce using rule 27 (contenido -> if contenido .)
    CHAR            reduce using rule 27 (contenido -> if contenido .)
    $end            reduce using rule 27 (contenido -> if contenido .)
    LLAVE_D         reduce using rule 27 (contenido -> if contenido .)
    RETURN          reduce using rule 27 (contenido -> if contenido .)


state 84

    (214) if -> if elseif .
    (219) else -> elseif . else
    (218) else -> . ELSE LLAVE_I contenido LLAVE_D
    (219) else -> . elseif else
    (216) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (217) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

  ! shift/reduce conflict for ELSE resolved as shift
    VAR             reduce using rule 214 (if -> if elseif .)
    VAL             reduce using rule 214 (if -> if elseif .)
    VARIABLE        reduce using rule 214 (if -> if elseif .)
    PRINTLN         reduce using rule 214 (if -> if elseif .)
    PRINT           reduce using rule 214 (if -> if elseif .)
    READLINE        reduce using rule 214 (if -> if elseif .)
    WHILE           reduce using rule 214 (if -> if elseif .)
    FOR             reduce using rule 214 (if -> if elseif .)
    IF              reduce using rule 214 (if -> if elseif .)
    INT             reduce using rule 214 (if -> if elseif .)
    DOUBLE          reduce using rule 214 (if -> if elseif .)
    LONG            reduce using rule 214 (if -> if elseif .)
    FLOAT           reduce using rule 214 (if -> if elseif .)
    STRING          reduce using rule 214 (if -> if elseif .)
    CHAR            reduce using rule 214 (if -> if elseif .)
    DEF             reduce using rule 214 (if -> if elseif .)
    $end            reduce using rule 214 (if -> if elseif .)
    LLAVE_D         reduce using rule 214 (if -> if elseif .)
    RETURN          reduce using rule 214 (if -> if elseif .)
    ELSE            shift and go to state 150

  ! ELSE            [ reduce using rule 214 (if -> if elseif .) ]

    elseif                         shift and go to state 148
    else                           shift and go to state 149

state 85

    (215) if -> if else .

    ELSE            reduce using rule 215 (if -> if else .)
    VAR             reduce using rule 215 (if -> if else .)
    VAL             reduce using rule 215 (if -> if else .)
    VARIABLE        reduce using rule 215 (if -> if else .)
    PRINTLN         reduce using rule 215 (if -> if else .)
    PRINT           reduce using rule 215 (if -> if else .)
    READLINE        reduce using rule 215 (if -> if else .)
    WHILE           reduce using rule 215 (if -> if else .)
    FOR             reduce using rule 215 (if -> if else .)
    IF              reduce using rule 215 (if -> if else .)
    INT             reduce using rule 215 (if -> if else .)
    DOUBLE          reduce using rule 215 (if -> if else .)
    LONG            reduce using rule 215 (if -> if else .)
    FLOAT           reduce using rule 215 (if -> if else .)
    STRING          reduce using rule 215 (if -> if else .)
    CHAR            reduce using rule 215 (if -> if else .)
    DEF             reduce using rule 215 (if -> if else .)
    $end            reduce using rule 215 (if -> if else .)
    LLAVE_D         reduce using rule 215 (if -> if else .)
    RETURN          reduce using rule 215 (if -> if else .)


state 86

    (216) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (217) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (218) else -> ELSE . LLAVE_I contenido LLAVE_D

    IF              shift and go to state 151
    LLAVE_I         shift and go to state 152


state 87

    (30) contenido -> startsWith contenido .

    DEF             reduce using rule 30 (contenido -> startsWith contenido .)
    VAR             reduce using rule 30 (contenido -> startsWith contenido .)
    VAL             reduce using rule 30 (contenido -> startsWith contenido .)
    VARIABLE        reduce using rule 30 (contenido -> startsWith contenido .)
    PRINTLN         reduce using rule 30 (contenido -> startsWith contenido .)
    PRINT           reduce using rule 30 (contenido -> startsWith contenido .)
    READLINE        reduce using rule 30 (contenido -> startsWith contenido .)
    WHILE           reduce using rule 30 (contenido -> startsWith contenido .)
    FOR             reduce using rule 30 (contenido -> startsWith contenido .)
    IF              reduce using rule 30 (contenido -> startsWith contenido .)
    INT             reduce using rule 30 (contenido -> startsWith contenido .)
    DOUBLE          reduce using rule 30 (contenido -> startsWith contenido .)
    LONG            reduce using rule 30 (contenido -> startsWith contenido .)
    FLOAT           reduce using rule 30 (contenido -> startsWith contenido .)
    STRING          reduce using rule 30 (contenido -> startsWith contenido .)
    CHAR            reduce using rule 30 (contenido -> startsWith contenido .)
    $end            reduce using rule 30 (contenido -> startsWith contenido .)
    LLAVE_D         reduce using rule 30 (contenido -> startsWith contenido .)
    RETURN          reduce using rule 30 (contenido -> startsWith contenido .)


state 88

    (36) asignacion -> VAR VARIABLE . IGUAL VARIABLE
    (38) asignacion -> VAR VARIABLE . IGUAL aritmetica
    (40) asignacion -> VAR VARIABLE . IGUAL returnfun
    (165) asignacion -> VAR VARIABLE . IGUAL tuple
    (306) asignacion -> VAR VARIABLE . DOBLE_PUNTO dectupla
    (51) asignacionLong -> VAR VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> VAR VARIABLE . IGUAL longvalues
    (335) asignacionLong -> VAR VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> VAR VARIABLE . DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (328) asignacionInt -> VAR VARIABLE . IGUAL intvalues
    (329) asignacionInt -> VAR VARIABLE . DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> VAR VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> VAR VARIABLE . IGUAL floatvalues
    (342) asignacionFloat -> VAR VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (348) asignacionDouble -> VAR VARIABLE . IGUAL doublevalues
    (349) asignacionDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> VAR VARIABLE . IGUAL STRING
    (62) asignacionString -> VAR VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> VAR VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> VAR VARIABLE . IGUAL CHAR
    (69) asignacionChar -> VAR VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> VAR VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> VAR VARIABLE . IGUAL booleanos
    (75) asignacionBoolean -> VAR VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> VAR VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> VAR VARIABLE . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) list -> VAR VARIABLE . IGUAL LISTCLASS PAR_I valores PAR_D
    (304) asignacionSumInt -> VAR VARIABLE . DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> VAR VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (281) listChar -> VAR VARIABLE . DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (279) listString -> VAR VARIABLE . DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    IGUAL           shift and go to state 153
    DOBLE_PUNTO     shift and go to state 154


state 89

    (37) asignacion -> VAL VARIABLE . IGUAL VARIABLE
    (39) asignacion -> VAL VARIABLE . IGUAL aritmetica
    (41) asignacion -> VAL VARIABLE . IGUAL returnfun
    (166) asignacion -> VAL VARIABLE . IGUAL tuple
    (307) asignacion -> VAL VARIABLE . DOBLE_PUNTO dectupla
    (52) asignacionLong -> VAL VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (336) asignacionLong -> VAL VARIABLE . IGUAL longvalues
    (337) asignacionLong -> VAL VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (54) asignacionInt -> VAL VARIABLE . DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (330) asignacionInt -> VAL VARIABLE . IGUAL intvalues
    (331) asignacionInt -> VAL VARIABLE . DOBLE_PUNTO INTCLASS IGUAL intvalues
    (57) asignacionFloat -> VAL VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (343) asignacionFloat -> VAL VARIABLE . IGUAL floatvalues
    (344) asignacionFloat -> VAL VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (59) asignacionDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (350) asignacionDouble -> VAL VARIABLE . IGUAL doublevalues
    (351) asignacionDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (63) asignacionString -> VAL VARIABLE . IGUAL STRING
    (64) asignacionString -> VAL VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> VAL VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (70) asignacionChar -> VAL VARIABLE . IGUAL CHAR
    (71) asignacionChar -> VAL VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (73) asignacionChar -> VAL VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (76) asignacionBoolean -> VAL VARIABLE . IGUAL booleanos
    (77) asignacionBoolean -> VAL VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (79) asignacionBoolean -> VAL VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> VAL VARIABLE . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> VAL VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (158) list -> VAL VARIABLE . IGUAL LISTCLASS PAR_I valores PAR_D
    (305) asignacionSumInt -> VAL VARIABLE . DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (299) asignacionSumDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (301) asignacionSumDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (303) asignacionSumString -> VAL VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (280) listChar -> VAL VARIABLE . DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> VAL VARIABLE . DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    IGUAL           shift and go to state 155
    DOBLE_PUNTO     shift and go to state 156


state 90

    (262) aritmetica -> INT MAS . INT
    (294) sumIntChar -> INT MAS . CHAR
    (290) sumIntDouble -> INT MAS . DOUBLE

    INT             shift and go to state 157
    CHAR            shift and go to state 158
    DOUBLE          shift and go to state 159


state 91

    (132) impresion -> PRINTLN PAR_I . valorI PAR_D
    (134) valorI -> . valor MAS valorI
    (135) valorI -> . valor
    (93) valor -> . STRING
    (94) valor -> . CHAR
    (95) valor -> . VARIABLE
    (96) valor -> . numeros
    (97) valor -> . booleanos
    (98) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (99) valor -> . VARIABLE PAR_I INT PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 126
    CHAR            shift and go to state 127
    VARIABLE        shift and go to state 121
    INT             shift and go to state 136
    LONG            shift and go to state 129
    FLOAT           shift and go to state 130
    DOUBLE          shift and go to state 131
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117

    valorI                         shift and go to state 160
    valor                          shift and go to state 161
    numeros                        shift and go to state 128
    booleanos                      shift and go to state 113
    startsWith                     shift and go to state 118

state 92

    (133) impresion -> PRINT PAR_I . valorI PAR_D
    (134) valorI -> . valor MAS valorI
    (135) valorI -> . valor
    (93) valor -> . STRING
    (94) valor -> . CHAR
    (95) valor -> . VARIABLE
    (96) valor -> . numeros
    (97) valor -> . booleanos
    (98) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (99) valor -> . VARIABLE PAR_I INT PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 126
    CHAR            shift and go to state 127
    VARIABLE        shift and go to state 121
    INT             shift and go to state 136
    LONG            shift and go to state 129
    FLOAT           shift and go to state 130
    DOUBLE          shift and go to state 131
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117

    valorI                         shift and go to state 162
    valor                          shift and go to state 161
    numeros                        shift and go to state 128
    booleanos                      shift and go to state 113
    startsWith                     shift and go to state 118

state 93

    (136) entrada -> READLINE PAR_I . PAR_D

    PAR_D           shift and go to state 163


state 94

    (167) while -> WHILE PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) condicional -> . valorC logicos condicional
    (221) condicional -> . valorC
    (222) valorC -> . VARIABLE
    (223) valorC -> . booleanos
    (224) valorC -> . relacional
    (225) valorC -> . NOT VARIABLE
    (226) valorC -> . NOT booleanos
    (227) valorC -> . NOT relacional
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (230) relacional -> . numeros comparacion numeros
    (231) relacional -> . aritmetica comparacion aritmetica
    (232) relacional -> . aritmetica comparacion numeros
    (233) relacional -> . numeros comparacion aritmetica
    (234) relacional -> . booleanos comparacion booleanos
    (235) relacional -> . STRING comparacion STRING
    (236) relacional -> . CHAR comparacion CHAR
    (237) relacional -> . VARIABLE comparacion numeros
    (238) relacional -> . numeros comparacion VARIABLE
    (239) relacional -> . VARIABLE comparacion booleanos
    (240) relacional -> . booleanos comparacion VARIABLE
    (241) relacional -> . VARIABLE comparacion STRING
    (242) relacional -> . STRING comparacion VARIABLE
    (243) relacional -> . VARIABLE comparacion CHAR
    (244) relacional -> . CHAR comparacion VARIABLE
    (245) relacional -> . VARIABLE comparacion VARIABLE
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VARIABLE        shift and go to state 166
    NOT             shift and go to state 169
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117
    STRING          shift and go to state 172
    CHAR            shift and go to state 173
    INT             shift and go to state 174
    LONG            shift and go to state 175
    FLOAT           shift and go to state 176
    DOUBLE          shift and go to state 177

    condicional                    shift and go to state 164
    valorC                         shift and go to state 165
    booleanos                      shift and go to state 167
    relacional                     shift and go to state 168
    startsWith                     shift and go to state 118
    numeros                        shift and go to state 170
    aritmetica                     shift and go to state 171
    suma                           shift and go to state 39
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 95

    (168) for -> FOR PAR_I . VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> FOR PAR_I . VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> FOR PAR_I . VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> FOR PAR_I . VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> FOR PAR_I . VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> FOR PAR_I . VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VAR             shift and go to state 178
    VARIABLE        shift and go to state 179


state 96

    (213) if -> IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) condicional -> . valorC logicos condicional
    (221) condicional -> . valorC
    (222) valorC -> . VARIABLE
    (223) valorC -> . booleanos
    (224) valorC -> . relacional
    (225) valorC -> . NOT VARIABLE
    (226) valorC -> . NOT booleanos
    (227) valorC -> . NOT relacional
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (230) relacional -> . numeros comparacion numeros
    (231) relacional -> . aritmetica comparacion aritmetica
    (232) relacional -> . aritmetica comparacion numeros
    (233) relacional -> . numeros comparacion aritmetica
    (234) relacional -> . booleanos comparacion booleanos
    (235) relacional -> . STRING comparacion STRING
    (236) relacional -> . CHAR comparacion CHAR
    (237) relacional -> . VARIABLE comparacion numeros
    (238) relacional -> . numeros comparacion VARIABLE
    (239) relacional -> . VARIABLE comparacion booleanos
    (240) relacional -> . booleanos comparacion VARIABLE
    (241) relacional -> . VARIABLE comparacion STRING
    (242) relacional -> . STRING comparacion VARIABLE
    (243) relacional -> . VARIABLE comparacion CHAR
    (244) relacional -> . CHAR comparacion VARIABLE
    (245) relacional -> . VARIABLE comparacion VARIABLE
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VARIABLE        shift and go to state 166
    NOT             shift and go to state 169
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117
    STRING          shift and go to state 172
    CHAR            shift and go to state 173
    INT             shift and go to state 174
    LONG            shift and go to state 175
    FLOAT           shift and go to state 176
    DOUBLE          shift and go to state 177

    condicional                    shift and go to state 180
    valorC                         shift and go to state 165
    booleanos                      shift and go to state 167
    relacional                     shift and go to state 168
    startsWith                     shift and go to state 118
    numeros                        shift and go to state 170
    aritmetica                     shift and go to state 171
    suma                           shift and go to state 39
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 97

    (250) aritmetica -> numeros aritmeticos . numeros
    (252) aritmetica -> numeros aritmeticos . VARIABLE
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VARIABLE        shift and go to state 182
    INT             shift and go to state 136
    LONG            shift and go to state 129
    FLOAT           shift and go to state 130
    DOUBLE          shift and go to state 131

    numeros                        shift and go to state 181

state 98

    (258) aritmetica -> numeros MAS . VARIABLE

    VARIABLE        shift and go to state 183


state 99

    (263) aritmetica -> DOUBLE MAS . DOUBLE
    (291) sumIntDouble -> DOUBLE MAS . INT
    (292) sumDoubleChar -> DOUBLE MAS . CHAR

    DOUBLE          shift and go to state 184
    INT             shift and go to state 185
    CHAR            shift and go to state 186


state 100

    (264) aritmetica -> LONG MAS . LONG

    LONG            shift and go to state 187


state 101

    (265) aritmetica -> FLOAT MAS . FLOAT

    FLOAT           shift and go to state 188


state 102

    (276) startsWith -> STRING PUNTO . STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> STRING PUNTO . STARTSWITH PAR_I STRING COMA INT PAR_D

    STARTSWITH      shift and go to state 189


state 103

    (296) sumStringChar -> STRING MAS . CHAR

    CHAR            shift and go to state 190


state 104

    (295) sumIntChar -> CHAR MAS . INT
    (297) sumStringChar -> CHAR MAS . STRING
    (293) sumDoubleChar -> CHAR MAS . DOUBLE

    INT             shift and go to state 191
    STRING          shift and go to state 192
    DOUBLE          shift and go to state 193


state 105

    (1) inicio -> OBJECT VARIABLE LLAVE_I . cuerpo LLAVE_D
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcion cuerpo
    (7) cuerpo -> . contenido
    (8) cuerpo -> . contenido cuerpo
    (107) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (108) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (115) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (116) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (117) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (118) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (119) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (120) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (122) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    DEF             shift and go to state 8
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

    cuerpo                         shift and go to state 194
    funcion                        shift and go to state 6
    contenido                      shift and go to state 7
    aritmetica                     shift and go to state 9
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 106

    (95) valor -> VARIABLE .
    (98) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (99) valor -> VARIABLE . PAR_I INT PAR_D
    (251) aritmetica -> VARIABLE . aritmeticos numeros
    (253) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (257) aritmetica -> VARIABLE . MAS numeros
    (259) aritmetica -> VARIABLE . MAS VARIABLE
    (147) castingcall -> VARIABLE . PUNTO castingfun
    (137) funcall -> VARIABLE . varparen
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD
    (138) varparen -> . PAR_I valores PAR_D
    (139) varparen -> . PAR_I PAR_D
    (140) varparen -> . varparen PAR_I valores PAR_D
    (141) varparen -> . varparen PAR_I PAR_D

    VAR             reduce using rule 95 (valor -> VARIABLE .)
    VAL             reduce using rule 95 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 95 (valor -> VARIABLE .)
    PRINTLN         reduce using rule 95 (valor -> VARIABLE .)
    PRINT           reduce using rule 95 (valor -> VARIABLE .)
    READLINE        reduce using rule 95 (valor -> VARIABLE .)
    WHILE           reduce using rule 95 (valor -> VARIABLE .)
    FOR             reduce using rule 95 (valor -> VARIABLE .)
    IF              reduce using rule 95 (valor -> VARIABLE .)
    INT             reduce using rule 95 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 95 (valor -> VARIABLE .)
    LONG            reduce using rule 95 (valor -> VARIABLE .)
    FLOAT           reduce using rule 95 (valor -> VARIABLE .)
    STRING          reduce using rule 95 (valor -> VARIABLE .)
    CHAR            reduce using rule 95 (valor -> VARIABLE .)
    DEF             reduce using rule 95 (valor -> VARIABLE .)
    $end            reduce using rule 95 (valor -> VARIABLE .)
    LLAVE_D         reduce using rule 95 (valor -> VARIABLE .)
    RETURN          reduce using rule 95 (valor -> VARIABLE .)
    CASE            reduce using rule 95 (valor -> VARIABLE .)
    PAR_I           shift and go to state 195
    MAS             shift and go to state 62
    PUNTO           shift and go to state 196
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66

    aritmeticos                    shift and go to state 61
    varparen                       shift and go to state 59

state 107

    (80) reasignacion -> VARIABLE IGUAL valor .

    VAR             reduce using rule 80 (reasignacion -> VARIABLE IGUAL valor .)
    VAL             reduce using rule 80 (reasignacion -> VARIABLE IGUAL valor .)
    VARIABLE        reduce using rule 80 (reasignacion -> VARIABLE IGUAL valor .)
    PRINTLN         reduce using rule 80 (reasignacion -> VARIABLE IGUAL valor .)
    PRINT           reduce using rule 80 (reasignacion -> VARIABLE IGUAL valor .)
    READLINE        reduce using rule 80 (reasignacion -> VARIABLE IGUAL valor .)
    WHILE           reduce using rule 80 (reasignacion -> VARIABLE IGUAL valor .)
    FOR             reduce using rule 80 (reasignacion -> VARIABLE IGUAL valor .)
    IF              reduce using rule 80 (reasignacion -> VARIABLE IGUAL valor .)
    INT             reduce using rule 80 (reasignacion -> VARIABLE IGUAL valor .)
    DOUBLE          reduce using rule 80 (reasignacion -> VARIABLE IGUAL valor .)
    LONG            reduce using rule 80 (reasignacion -> VARIABLE IGUAL valor .)
    FLOAT           reduce using rule 80 (reasignacion -> VARIABLE IGUAL valor .)
    STRING          reduce using rule 80 (reasignacion -> VARIABLE IGUAL valor .)
    CHAR            reduce using rule 80 (reasignacion -> VARIABLE IGUAL valor .)
    DEF             reduce using rule 80 (reasignacion -> VARIABLE IGUAL valor .)
    $end            reduce using rule 80 (reasignacion -> VARIABLE IGUAL valor .)
    LLAVE_D         reduce using rule 80 (reasignacion -> VARIABLE IGUAL valor .)
    RETURN          reduce using rule 80 (reasignacion -> VARIABLE IGUAL valor .)
    CASE            reduce using rule 80 (reasignacion -> VARIABLE IGUAL valor .)


state 108

    (81) reasignacion -> VARIABLE IGUAL returnfun .

    VAR             reduce using rule 81 (reasignacion -> VARIABLE IGUAL returnfun .)
    VAL             reduce using rule 81 (reasignacion -> VARIABLE IGUAL returnfun .)
    VARIABLE        reduce using rule 81 (reasignacion -> VARIABLE IGUAL returnfun .)
    PRINTLN         reduce using rule 81 (reasignacion -> VARIABLE IGUAL returnfun .)
    PRINT           reduce using rule 81 (reasignacion -> VARIABLE IGUAL returnfun .)
    READLINE        reduce using rule 81 (reasignacion -> VARIABLE IGUAL returnfun .)
    WHILE           reduce using rule 81 (reasignacion -> VARIABLE IGUAL returnfun .)
    FOR             reduce using rule 81 (reasignacion -> VARIABLE IGUAL returnfun .)
    IF              reduce using rule 81 (reasignacion -> VARIABLE IGUAL returnfun .)
    INT             reduce using rule 81 (reasignacion -> VARIABLE IGUAL returnfun .)
    DOUBLE          reduce using rule 81 (reasignacion -> VARIABLE IGUAL returnfun .)
    LONG            reduce using rule 81 (reasignacion -> VARIABLE IGUAL returnfun .)
    FLOAT           reduce using rule 81 (reasignacion -> VARIABLE IGUAL returnfun .)
    STRING          reduce using rule 81 (reasignacion -> VARIABLE IGUAL returnfun .)
    CHAR            reduce using rule 81 (reasignacion -> VARIABLE IGUAL returnfun .)
    DEF             reduce using rule 81 (reasignacion -> VARIABLE IGUAL returnfun .)
    $end            reduce using rule 81 (reasignacion -> VARIABLE IGUAL returnfun .)
    LLAVE_D         reduce using rule 81 (reasignacion -> VARIABLE IGUAL returnfun .)
    RETURN          reduce using rule 81 (reasignacion -> VARIABLE IGUAL returnfun .)
    CASE            reduce using rule 81 (reasignacion -> VARIABLE IGUAL returnfun .)


state 109

    (82) reasignacion -> VARIABLE IGUAL aritmetica .
    (254) aritmetica -> aritmetica . aritmeticos numeros
    (255) aritmetica -> aritmetica . aritmeticos VARIABLE
    (260) aritmetica -> aritmetica . MAS numeros
    (261) aritmetica -> aritmetica . MAS VARIABLE
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD

    VAR             reduce using rule 82 (reasignacion -> VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 82 (reasignacion -> VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 82 (reasignacion -> VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 82 (reasignacion -> VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 82 (reasignacion -> VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 82 (reasignacion -> VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 82 (reasignacion -> VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 82 (reasignacion -> VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 82 (reasignacion -> VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 82 (reasignacion -> VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 82 (reasignacion -> VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 82 (reasignacion -> VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 82 (reasignacion -> VARIABLE IGUAL aritmetica .)
    STRING          reduce using rule 82 (reasignacion -> VARIABLE IGUAL aritmetica .)
    CHAR            reduce using rule 82 (reasignacion -> VARIABLE IGUAL aritmetica .)
    DEF             reduce using rule 82 (reasignacion -> VARIABLE IGUAL aritmetica .)
    $end            reduce using rule 82 (reasignacion -> VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 82 (reasignacion -> VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 82 (reasignacion -> VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 82 (reasignacion -> VARIABLE IGUAL aritmetica .)
    MAS             shift and go to state 74
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66

    aritmeticos                    shift and go to state 73

state 110

    (93) valor -> STRING .
    (276) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (296) sumStringChar -> STRING . MAS CHAR

    VAR             reduce using rule 93 (valor -> STRING .)
    VAL             reduce using rule 93 (valor -> STRING .)
    VARIABLE        reduce using rule 93 (valor -> STRING .)
    PRINTLN         reduce using rule 93 (valor -> STRING .)
    PRINT           reduce using rule 93 (valor -> STRING .)
    READLINE        reduce using rule 93 (valor -> STRING .)
    WHILE           reduce using rule 93 (valor -> STRING .)
    FOR             reduce using rule 93 (valor -> STRING .)
    IF              reduce using rule 93 (valor -> STRING .)
    INT             reduce using rule 93 (valor -> STRING .)
    DOUBLE          reduce using rule 93 (valor -> STRING .)
    LONG            reduce using rule 93 (valor -> STRING .)
    FLOAT           reduce using rule 93 (valor -> STRING .)
    STRING          reduce using rule 93 (valor -> STRING .)
    CHAR            reduce using rule 93 (valor -> STRING .)
    DEF             reduce using rule 93 (valor -> STRING .)
    $end            reduce using rule 93 (valor -> STRING .)
    LLAVE_D         reduce using rule 93 (valor -> STRING .)
    RETURN          reduce using rule 93 (valor -> STRING .)
    CASE            reduce using rule 93 (valor -> STRING .)
    PUNTO           shift and go to state 102
    MAS             shift and go to state 103


state 111

    (94) valor -> CHAR .
    (295) sumIntChar -> CHAR . MAS INT
    (297) sumStringChar -> CHAR . MAS STRING
    (293) sumDoubleChar -> CHAR . MAS DOUBLE

    VAR             reduce using rule 94 (valor -> CHAR .)
    VAL             reduce using rule 94 (valor -> CHAR .)
    VARIABLE        reduce using rule 94 (valor -> CHAR .)
    PRINTLN         reduce using rule 94 (valor -> CHAR .)
    PRINT           reduce using rule 94 (valor -> CHAR .)
    READLINE        reduce using rule 94 (valor -> CHAR .)
    WHILE           reduce using rule 94 (valor -> CHAR .)
    FOR             reduce using rule 94 (valor -> CHAR .)
    IF              reduce using rule 94 (valor -> CHAR .)
    INT             reduce using rule 94 (valor -> CHAR .)
    DOUBLE          reduce using rule 94 (valor -> CHAR .)
    LONG            reduce using rule 94 (valor -> CHAR .)
    FLOAT           reduce using rule 94 (valor -> CHAR .)
    STRING          reduce using rule 94 (valor -> CHAR .)
    CHAR            reduce using rule 94 (valor -> CHAR .)
    DEF             reduce using rule 94 (valor -> CHAR .)
    $end            reduce using rule 94 (valor -> CHAR .)
    LLAVE_D         reduce using rule 94 (valor -> CHAR .)
    RETURN          reduce using rule 94 (valor -> CHAR .)
    CASE            reduce using rule 94 (valor -> CHAR .)
    MAS             shift and go to state 104


state 112

    (96) valor -> numeros .
    (250) aritmetica -> numeros . aritmeticos numeros
    (252) aritmetica -> numeros . aritmeticos VARIABLE
    (258) aritmetica -> numeros . MAS VARIABLE
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD

    VAR             reduce using rule 96 (valor -> numeros .)
    VAL             reduce using rule 96 (valor -> numeros .)
    VARIABLE        reduce using rule 96 (valor -> numeros .)
    PRINTLN         reduce using rule 96 (valor -> numeros .)
    PRINT           reduce using rule 96 (valor -> numeros .)
    READLINE        reduce using rule 96 (valor -> numeros .)
    WHILE           reduce using rule 96 (valor -> numeros .)
    FOR             reduce using rule 96 (valor -> numeros .)
    IF              reduce using rule 96 (valor -> numeros .)
    INT             reduce using rule 96 (valor -> numeros .)
    DOUBLE          reduce using rule 96 (valor -> numeros .)
    LONG            reduce using rule 96 (valor -> numeros .)
    FLOAT           reduce using rule 96 (valor -> numeros .)
    STRING          reduce using rule 96 (valor -> numeros .)
    CHAR            reduce using rule 96 (valor -> numeros .)
    DEF             reduce using rule 96 (valor -> numeros .)
    $end            reduce using rule 96 (valor -> numeros .)
    LLAVE_D         reduce using rule 96 (valor -> numeros .)
    RETURN          reduce using rule 96 (valor -> numeros .)
    CASE            reduce using rule 96 (valor -> numeros .)
    MAS             shift and go to state 98
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66

    aritmeticos                    shift and go to state 97

state 113

    (97) valor -> booleanos .

    VAR             reduce using rule 97 (valor -> booleanos .)
    VAL             reduce using rule 97 (valor -> booleanos .)
    VARIABLE        reduce using rule 97 (valor -> booleanos .)
    PRINTLN         reduce using rule 97 (valor -> booleanos .)
    PRINT           reduce using rule 97 (valor -> booleanos .)
    READLINE        reduce using rule 97 (valor -> booleanos .)
    WHILE           reduce using rule 97 (valor -> booleanos .)
    FOR             reduce using rule 97 (valor -> booleanos .)
    IF              reduce using rule 97 (valor -> booleanos .)
    INT             reduce using rule 97 (valor -> booleanos .)
    DOUBLE          reduce using rule 97 (valor -> booleanos .)
    LONG            reduce using rule 97 (valor -> booleanos .)
    FLOAT           reduce using rule 97 (valor -> booleanos .)
    STRING          reduce using rule 97 (valor -> booleanos .)
    CHAR            reduce using rule 97 (valor -> booleanos .)
    DEF             reduce using rule 97 (valor -> booleanos .)
    $end            reduce using rule 97 (valor -> booleanos .)
    LLAVE_D         reduce using rule 97 (valor -> booleanos .)
    RETURN          reduce using rule 97 (valor -> booleanos .)
    CASE            reduce using rule 97 (valor -> booleanos .)
    COMA            reduce using rule 97 (valor -> booleanos .)
    PAR_D           reduce using rule 97 (valor -> booleanos .)
    MAS             reduce using rule 97 (valor -> booleanos .)


state 114

    (142) returnfun -> returnCastable .
    (146) castingcall -> returnCastable . PUNTO castingfun

    VAR             reduce using rule 142 (returnfun -> returnCastable .)
    VAL             reduce using rule 142 (returnfun -> returnCastable .)
    VARIABLE        reduce using rule 142 (returnfun -> returnCastable .)
    PRINTLN         reduce using rule 142 (returnfun -> returnCastable .)
    PRINT           reduce using rule 142 (returnfun -> returnCastable .)
    READLINE        reduce using rule 142 (returnfun -> returnCastable .)
    WHILE           reduce using rule 142 (returnfun -> returnCastable .)
    FOR             reduce using rule 142 (returnfun -> returnCastable .)
    IF              reduce using rule 142 (returnfun -> returnCastable .)
    INT             reduce using rule 142 (returnfun -> returnCastable .)
    DOUBLE          reduce using rule 142 (returnfun -> returnCastable .)
    LONG            reduce using rule 142 (returnfun -> returnCastable .)
    FLOAT           reduce using rule 142 (returnfun -> returnCastable .)
    STRING          reduce using rule 142 (returnfun -> returnCastable .)
    CHAR            reduce using rule 142 (returnfun -> returnCastable .)
    DEF             reduce using rule 142 (returnfun -> returnCastable .)
    $end            reduce using rule 142 (returnfun -> returnCastable .)
    LLAVE_D         reduce using rule 142 (returnfun -> returnCastable .)
    RETURN          reduce using rule 142 (returnfun -> returnCastable .)
    CASE            reduce using rule 142 (returnfun -> returnCastable .)
    PUNTO           shift and go to state 197


state 115

    (143) returnfun -> castingcall .

    VAR             reduce using rule 143 (returnfun -> castingcall .)
    VAL             reduce using rule 143 (returnfun -> castingcall .)
    VARIABLE        reduce using rule 143 (returnfun -> castingcall .)
    PRINTLN         reduce using rule 143 (returnfun -> castingcall .)
    PRINT           reduce using rule 143 (returnfun -> castingcall .)
    READLINE        reduce using rule 143 (returnfun -> castingcall .)
    WHILE           reduce using rule 143 (returnfun -> castingcall .)
    FOR             reduce using rule 143 (returnfun -> castingcall .)
    IF              reduce using rule 143 (returnfun -> castingcall .)
    INT             reduce using rule 143 (returnfun -> castingcall .)
    DOUBLE          reduce using rule 143 (returnfun -> castingcall .)
    LONG            reduce using rule 143 (returnfun -> castingcall .)
    FLOAT           reduce using rule 143 (returnfun -> castingcall .)
    STRING          reduce using rule 143 (returnfun -> castingcall .)
    CHAR            reduce using rule 143 (returnfun -> castingcall .)
    DEF             reduce using rule 143 (returnfun -> castingcall .)
    $end            reduce using rule 143 (returnfun -> castingcall .)
    LLAVE_D         reduce using rule 143 (returnfun -> castingcall .)
    RETURN          reduce using rule 143 (returnfun -> castingcall .)
    CASE            reduce using rule 143 (returnfun -> castingcall .)


state 116

    (100) booleanos -> TRUE .

    VAR             reduce using rule 100 (booleanos -> TRUE .)
    VAL             reduce using rule 100 (booleanos -> TRUE .)
    VARIABLE        reduce using rule 100 (booleanos -> TRUE .)
    PRINTLN         reduce using rule 100 (booleanos -> TRUE .)
    PRINT           reduce using rule 100 (booleanos -> TRUE .)
    READLINE        reduce using rule 100 (booleanos -> TRUE .)
    WHILE           reduce using rule 100 (booleanos -> TRUE .)
    FOR             reduce using rule 100 (booleanos -> TRUE .)
    IF              reduce using rule 100 (booleanos -> TRUE .)
    INT             reduce using rule 100 (booleanos -> TRUE .)
    DOUBLE          reduce using rule 100 (booleanos -> TRUE .)
    LONG            reduce using rule 100 (booleanos -> TRUE .)
    FLOAT           reduce using rule 100 (booleanos -> TRUE .)
    STRING          reduce using rule 100 (booleanos -> TRUE .)
    CHAR            reduce using rule 100 (booleanos -> TRUE .)
    DEF             reduce using rule 100 (booleanos -> TRUE .)
    $end            reduce using rule 100 (booleanos -> TRUE .)
    LLAVE_D         reduce using rule 100 (booleanos -> TRUE .)
    RETURN          reduce using rule 100 (booleanos -> TRUE .)
    CASE            reduce using rule 100 (booleanos -> TRUE .)
    COMA            reduce using rule 100 (booleanos -> TRUE .)
    PAR_D           reduce using rule 100 (booleanos -> TRUE .)
    MAS             reduce using rule 100 (booleanos -> TRUE .)
    IGUAL_COMPARACION reduce using rule 100 (booleanos -> TRUE .)
    DIFERENTE       reduce using rule 100 (booleanos -> TRUE .)
    MAYOR           reduce using rule 100 (booleanos -> TRUE .)
    MENOR           reduce using rule 100 (booleanos -> TRUE .)
    AND             reduce using rule 100 (booleanos -> TRUE .)
    OR              reduce using rule 100 (booleanos -> TRUE .)
    FUNCION_FLECHA  reduce using rule 100 (booleanos -> TRUE .)


state 117

    (101) booleanos -> FLASE .

    VAR             reduce using rule 101 (booleanos -> FLASE .)
    VAL             reduce using rule 101 (booleanos -> FLASE .)
    VARIABLE        reduce using rule 101 (booleanos -> FLASE .)
    PRINTLN         reduce using rule 101 (booleanos -> FLASE .)
    PRINT           reduce using rule 101 (booleanos -> FLASE .)
    READLINE        reduce using rule 101 (booleanos -> FLASE .)
    WHILE           reduce using rule 101 (booleanos -> FLASE .)
    FOR             reduce using rule 101 (booleanos -> FLASE .)
    IF              reduce using rule 101 (booleanos -> FLASE .)
    INT             reduce using rule 101 (booleanos -> FLASE .)
    DOUBLE          reduce using rule 101 (booleanos -> FLASE .)
    LONG            reduce using rule 101 (booleanos -> FLASE .)
    FLOAT           reduce using rule 101 (booleanos -> FLASE .)
    STRING          reduce using rule 101 (booleanos -> FLASE .)
    CHAR            reduce using rule 101 (booleanos -> FLASE .)
    DEF             reduce using rule 101 (booleanos -> FLASE .)
    $end            reduce using rule 101 (booleanos -> FLASE .)
    LLAVE_D         reduce using rule 101 (booleanos -> FLASE .)
    RETURN          reduce using rule 101 (booleanos -> FLASE .)
    CASE            reduce using rule 101 (booleanos -> FLASE .)
    COMA            reduce using rule 101 (booleanos -> FLASE .)
    PAR_D           reduce using rule 101 (booleanos -> FLASE .)
    MAS             reduce using rule 101 (booleanos -> FLASE .)
    IGUAL_COMPARACION reduce using rule 101 (booleanos -> FLASE .)
    DIFERENTE       reduce using rule 101 (booleanos -> FLASE .)
    MAYOR           reduce using rule 101 (booleanos -> FLASE .)
    MENOR           reduce using rule 101 (booleanos -> FLASE .)
    AND             reduce using rule 101 (booleanos -> FLASE .)
    OR              reduce using rule 101 (booleanos -> FLASE .)
    FUNCION_FLECHA  reduce using rule 101 (booleanos -> FLASE .)


state 118

    (102) booleanos -> startsWith .

    VAR             reduce using rule 102 (booleanos -> startsWith .)
    VAL             reduce using rule 102 (booleanos -> startsWith .)
    VARIABLE        reduce using rule 102 (booleanos -> startsWith .)
    PRINTLN         reduce using rule 102 (booleanos -> startsWith .)
    PRINT           reduce using rule 102 (booleanos -> startsWith .)
    READLINE        reduce using rule 102 (booleanos -> startsWith .)
    WHILE           reduce using rule 102 (booleanos -> startsWith .)
    FOR             reduce using rule 102 (booleanos -> startsWith .)
    IF              reduce using rule 102 (booleanos -> startsWith .)
    INT             reduce using rule 102 (booleanos -> startsWith .)
    DOUBLE          reduce using rule 102 (booleanos -> startsWith .)
    LONG            reduce using rule 102 (booleanos -> startsWith .)
    FLOAT           reduce using rule 102 (booleanos -> startsWith .)
    STRING          reduce using rule 102 (booleanos -> startsWith .)
    CHAR            reduce using rule 102 (booleanos -> startsWith .)
    DEF             reduce using rule 102 (booleanos -> startsWith .)
    $end            reduce using rule 102 (booleanos -> startsWith .)
    LLAVE_D         reduce using rule 102 (booleanos -> startsWith .)
    RETURN          reduce using rule 102 (booleanos -> startsWith .)
    CASE            reduce using rule 102 (booleanos -> startsWith .)
    COMA            reduce using rule 102 (booleanos -> startsWith .)
    PAR_D           reduce using rule 102 (booleanos -> startsWith .)
    MAS             reduce using rule 102 (booleanos -> startsWith .)
    IGUAL_COMPARACION reduce using rule 102 (booleanos -> startsWith .)
    DIFERENTE       reduce using rule 102 (booleanos -> startsWith .)
    MAYOR           reduce using rule 102 (booleanos -> startsWith .)
    MENOR           reduce using rule 102 (booleanos -> startsWith .)
    AND             reduce using rule 102 (booleanos -> startsWith .)
    OR              reduce using rule 102 (booleanos -> startsWith .)
    FUNCION_FLECHA  reduce using rule 102 (booleanos -> startsWith .)


state 119

    (144) returnCastable -> entrada .

    PUNTO           reduce using rule 144 (returnCastable -> entrada .)
    VAR             reduce using rule 144 (returnCastable -> entrada .)
    VAL             reduce using rule 144 (returnCastable -> entrada .)
    VARIABLE        reduce using rule 144 (returnCastable -> entrada .)
    PRINTLN         reduce using rule 144 (returnCastable -> entrada .)
    PRINT           reduce using rule 144 (returnCastable -> entrada .)
    READLINE        reduce using rule 144 (returnCastable -> entrada .)
    WHILE           reduce using rule 144 (returnCastable -> entrada .)
    FOR             reduce using rule 144 (returnCastable -> entrada .)
    IF              reduce using rule 144 (returnCastable -> entrada .)
    INT             reduce using rule 144 (returnCastable -> entrada .)
    DOUBLE          reduce using rule 144 (returnCastable -> entrada .)
    LONG            reduce using rule 144 (returnCastable -> entrada .)
    FLOAT           reduce using rule 144 (returnCastable -> entrada .)
    STRING          reduce using rule 144 (returnCastable -> entrada .)
    CHAR            reduce using rule 144 (returnCastable -> entrada .)
    DEF             reduce using rule 144 (returnCastable -> entrada .)
    $end            reduce using rule 144 (returnCastable -> entrada .)
    LLAVE_D         reduce using rule 144 (returnCastable -> entrada .)
    RETURN          reduce using rule 144 (returnCastable -> entrada .)
    CASE            reduce using rule 144 (returnCastable -> entrada .)


state 120

    (145) returnCastable -> funcall .

    PUNTO           reduce using rule 145 (returnCastable -> funcall .)
    VAR             reduce using rule 145 (returnCastable -> funcall .)
    VAL             reduce using rule 145 (returnCastable -> funcall .)
    VARIABLE        reduce using rule 145 (returnCastable -> funcall .)
    PRINTLN         reduce using rule 145 (returnCastable -> funcall .)
    PRINT           reduce using rule 145 (returnCastable -> funcall .)
    READLINE        reduce using rule 145 (returnCastable -> funcall .)
    WHILE           reduce using rule 145 (returnCastable -> funcall .)
    FOR             reduce using rule 145 (returnCastable -> funcall .)
    IF              reduce using rule 145 (returnCastable -> funcall .)
    INT             reduce using rule 145 (returnCastable -> funcall .)
    DOUBLE          reduce using rule 145 (returnCastable -> funcall .)
    LONG            reduce using rule 145 (returnCastable -> funcall .)
    FLOAT           reduce using rule 145 (returnCastable -> funcall .)
    STRING          reduce using rule 145 (returnCastable -> funcall .)
    CHAR            reduce using rule 145 (returnCastable -> funcall .)
    DEF             reduce using rule 145 (returnCastable -> funcall .)
    $end            reduce using rule 145 (returnCastable -> funcall .)
    LLAVE_D         reduce using rule 145 (returnCastable -> funcall .)
    RETURN          reduce using rule 145 (returnCastable -> funcall .)
    CASE            reduce using rule 145 (returnCastable -> funcall .)


state 121

    (95) valor -> VARIABLE .
    (98) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (99) valor -> VARIABLE . PAR_I INT PAR_D

    COMA            reduce using rule 95 (valor -> VARIABLE .)
    PAR_D           reduce using rule 95 (valor -> VARIABLE .)
    MAS             reduce using rule 95 (valor -> VARIABLE .)
    VAR             reduce using rule 95 (valor -> VARIABLE .)
    VAL             reduce using rule 95 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 95 (valor -> VARIABLE .)
    PRINTLN         reduce using rule 95 (valor -> VARIABLE .)
    PRINT           reduce using rule 95 (valor -> VARIABLE .)
    READLINE        reduce using rule 95 (valor -> VARIABLE .)
    WHILE           reduce using rule 95 (valor -> VARIABLE .)
    FOR             reduce using rule 95 (valor -> VARIABLE .)
    IF              reduce using rule 95 (valor -> VARIABLE .)
    INT             reduce using rule 95 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 95 (valor -> VARIABLE .)
    LONG            reduce using rule 95 (valor -> VARIABLE .)
    FLOAT           reduce using rule 95 (valor -> VARIABLE .)
    STRING          reduce using rule 95 (valor -> VARIABLE .)
    CHAR            reduce using rule 95 (valor -> VARIABLE .)
    DEF             reduce using rule 95 (valor -> VARIABLE .)
    $end            reduce using rule 95 (valor -> VARIABLE .)
    LLAVE_D         reduce using rule 95 (valor -> VARIABLE .)
    RETURN          reduce using rule 95 (valor -> VARIABLE .)
    CASE            reduce using rule 95 (valor -> VARIABLE .)
    PAR_I           shift and go to state 198


state 122

    (83) reasignacion -> VARIABLE PAR_I INT . PAR_D IGUAL valor
    (103) numeros -> INT .

  ! shift/reduce conflict for PAR_D resolved as shift
    PAR_D           shift and go to state 199
    COMA            reduce using rule 103 (numeros -> INT .)

  ! PAR_D           [ reduce using rule 103 (numeros -> INT .) ]


state 123

    (139) varparen -> PAR_I PAR_D .

    PAR_I           reduce using rule 139 (varparen -> PAR_I PAR_D .)
    VAR             reduce using rule 139 (varparen -> PAR_I PAR_D .)
    VAL             reduce using rule 139 (varparen -> PAR_I PAR_D .)
    VARIABLE        reduce using rule 139 (varparen -> PAR_I PAR_D .)
    PRINTLN         reduce using rule 139 (varparen -> PAR_I PAR_D .)
    PRINT           reduce using rule 139 (varparen -> PAR_I PAR_D .)
    READLINE        reduce using rule 139 (varparen -> PAR_I PAR_D .)
    WHILE           reduce using rule 139 (varparen -> PAR_I PAR_D .)
    FOR             reduce using rule 139 (varparen -> PAR_I PAR_D .)
    IF              reduce using rule 139 (varparen -> PAR_I PAR_D .)
    INT             reduce using rule 139 (varparen -> PAR_I PAR_D .)
    DOUBLE          reduce using rule 139 (varparen -> PAR_I PAR_D .)
    LONG            reduce using rule 139 (varparen -> PAR_I PAR_D .)
    FLOAT           reduce using rule 139 (varparen -> PAR_I PAR_D .)
    STRING          reduce using rule 139 (varparen -> PAR_I PAR_D .)
    CHAR            reduce using rule 139 (varparen -> PAR_I PAR_D .)
    DEF             reduce using rule 139 (varparen -> PAR_I PAR_D .)
    $end            reduce using rule 139 (varparen -> PAR_I PAR_D .)
    LLAVE_D         reduce using rule 139 (varparen -> PAR_I PAR_D .)
    RETURN          reduce using rule 139 (varparen -> PAR_I PAR_D .)
    PUNTO           reduce using rule 139 (varparen -> PAR_I PAR_D .)
    CASE            reduce using rule 139 (varparen -> PAR_I PAR_D .)


state 124

    (162) valores -> valor .
    (163) valores -> valor . COMA valores

    PAR_D           reduce using rule 162 (valores -> valor .)
    COMA            shift and go to state 200


state 125

    (138) varparen -> PAR_I valores . PAR_D

    PAR_D           shift and go to state 201


state 126

    (93) valor -> STRING .
    (276) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    COMA            reduce using rule 93 (valor -> STRING .)
    PAR_D           reduce using rule 93 (valor -> STRING .)
    MAS             reduce using rule 93 (valor -> STRING .)
    VAR             reduce using rule 93 (valor -> STRING .)
    VAL             reduce using rule 93 (valor -> STRING .)
    VARIABLE        reduce using rule 93 (valor -> STRING .)
    PRINTLN         reduce using rule 93 (valor -> STRING .)
    PRINT           reduce using rule 93 (valor -> STRING .)
    READLINE        reduce using rule 93 (valor -> STRING .)
    WHILE           reduce using rule 93 (valor -> STRING .)
    FOR             reduce using rule 93 (valor -> STRING .)
    IF              reduce using rule 93 (valor -> STRING .)
    INT             reduce using rule 93 (valor -> STRING .)
    DOUBLE          reduce using rule 93 (valor -> STRING .)
    LONG            reduce using rule 93 (valor -> STRING .)
    FLOAT           reduce using rule 93 (valor -> STRING .)
    STRING          reduce using rule 93 (valor -> STRING .)
    CHAR            reduce using rule 93 (valor -> STRING .)
    DEF             reduce using rule 93 (valor -> STRING .)
    $end            reduce using rule 93 (valor -> STRING .)
    LLAVE_D         reduce using rule 93 (valor -> STRING .)
    RETURN          reduce using rule 93 (valor -> STRING .)
    CASE            reduce using rule 93 (valor -> STRING .)
    PUNTO           shift and go to state 102


state 127

    (94) valor -> CHAR .

    COMA            reduce using rule 94 (valor -> CHAR .)
    PAR_D           reduce using rule 94 (valor -> CHAR .)
    MAS             reduce using rule 94 (valor -> CHAR .)
    VAR             reduce using rule 94 (valor -> CHAR .)
    VAL             reduce using rule 94 (valor -> CHAR .)
    VARIABLE        reduce using rule 94 (valor -> CHAR .)
    PRINTLN         reduce using rule 94 (valor -> CHAR .)
    PRINT           reduce using rule 94 (valor -> CHAR .)
    READLINE        reduce using rule 94 (valor -> CHAR .)
    WHILE           reduce using rule 94 (valor -> CHAR .)
    FOR             reduce using rule 94 (valor -> CHAR .)
    IF              reduce using rule 94 (valor -> CHAR .)
    INT             reduce using rule 94 (valor -> CHAR .)
    DOUBLE          reduce using rule 94 (valor -> CHAR .)
    LONG            reduce using rule 94 (valor -> CHAR .)
    FLOAT           reduce using rule 94 (valor -> CHAR .)
    STRING          reduce using rule 94 (valor -> CHAR .)
    CHAR            reduce using rule 94 (valor -> CHAR .)
    DEF             reduce using rule 94 (valor -> CHAR .)
    $end            reduce using rule 94 (valor -> CHAR .)
    LLAVE_D         reduce using rule 94 (valor -> CHAR .)
    RETURN          reduce using rule 94 (valor -> CHAR .)
    CASE            reduce using rule 94 (valor -> CHAR .)


state 128

    (96) valor -> numeros .

    COMA            reduce using rule 96 (valor -> numeros .)
    PAR_D           reduce using rule 96 (valor -> numeros .)
    MAS             reduce using rule 96 (valor -> numeros .)
    VAR             reduce using rule 96 (valor -> numeros .)
    VAL             reduce using rule 96 (valor -> numeros .)
    VARIABLE        reduce using rule 96 (valor -> numeros .)
    PRINTLN         reduce using rule 96 (valor -> numeros .)
    PRINT           reduce using rule 96 (valor -> numeros .)
    READLINE        reduce using rule 96 (valor -> numeros .)
    WHILE           reduce using rule 96 (valor -> numeros .)
    FOR             reduce using rule 96 (valor -> numeros .)
    IF              reduce using rule 96 (valor -> numeros .)
    INT             reduce using rule 96 (valor -> numeros .)
    DOUBLE          reduce using rule 96 (valor -> numeros .)
    LONG            reduce using rule 96 (valor -> numeros .)
    FLOAT           reduce using rule 96 (valor -> numeros .)
    STRING          reduce using rule 96 (valor -> numeros .)
    CHAR            reduce using rule 96 (valor -> numeros .)
    DEF             reduce using rule 96 (valor -> numeros .)
    $end            reduce using rule 96 (valor -> numeros .)
    LLAVE_D         reduce using rule 96 (valor -> numeros .)
    RETURN          reduce using rule 96 (valor -> numeros .)
    CASE            reduce using rule 96 (valor -> numeros .)


state 129

    (104) numeros -> LONG .

    COMA            reduce using rule 104 (numeros -> LONG .)
    PAR_D           reduce using rule 104 (numeros -> LONG .)
    MAS             reduce using rule 104 (numeros -> LONG .)
    MENOS           reduce using rule 104 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 104 (numeros -> LONG .)
    DIVISION        reduce using rule 104 (numeros -> LONG .)
    MOD             reduce using rule 104 (numeros -> LONG .)
    VAR             reduce using rule 104 (numeros -> LONG .)
    VAL             reduce using rule 104 (numeros -> LONG .)
    VARIABLE        reduce using rule 104 (numeros -> LONG .)
    PRINTLN         reduce using rule 104 (numeros -> LONG .)
    PRINT           reduce using rule 104 (numeros -> LONG .)
    READLINE        reduce using rule 104 (numeros -> LONG .)
    WHILE           reduce using rule 104 (numeros -> LONG .)
    FOR             reduce using rule 104 (numeros -> LONG .)
    IF              reduce using rule 104 (numeros -> LONG .)
    INT             reduce using rule 104 (numeros -> LONG .)
    DOUBLE          reduce using rule 104 (numeros -> LONG .)
    LONG            reduce using rule 104 (numeros -> LONG .)
    FLOAT           reduce using rule 104 (numeros -> LONG .)
    STRING          reduce using rule 104 (numeros -> LONG .)
    CHAR            reduce using rule 104 (numeros -> LONG .)
    DEF             reduce using rule 104 (numeros -> LONG .)
    $end            reduce using rule 104 (numeros -> LONG .)
    LLAVE_D         reduce using rule 104 (numeros -> LONG .)
    RETURN          reduce using rule 104 (numeros -> LONG .)
    CASE            reduce using rule 104 (numeros -> LONG .)
    IGUAL_COMPARACION reduce using rule 104 (numeros -> LONG .)
    DIFERENTE       reduce using rule 104 (numeros -> LONG .)
    MAYOR           reduce using rule 104 (numeros -> LONG .)
    MENOR           reduce using rule 104 (numeros -> LONG .)
    AND             reduce using rule 104 (numeros -> LONG .)
    OR              reduce using rule 104 (numeros -> LONG .)


state 130

    (105) numeros -> FLOAT .

    COMA            reduce using rule 105 (numeros -> FLOAT .)
    PAR_D           reduce using rule 105 (numeros -> FLOAT .)
    MAS             reduce using rule 105 (numeros -> FLOAT .)
    MENOS           reduce using rule 105 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 105 (numeros -> FLOAT .)
    DIVISION        reduce using rule 105 (numeros -> FLOAT .)
    MOD             reduce using rule 105 (numeros -> FLOAT .)
    VAR             reduce using rule 105 (numeros -> FLOAT .)
    VAL             reduce using rule 105 (numeros -> FLOAT .)
    VARIABLE        reduce using rule 105 (numeros -> FLOAT .)
    PRINTLN         reduce using rule 105 (numeros -> FLOAT .)
    PRINT           reduce using rule 105 (numeros -> FLOAT .)
    READLINE        reduce using rule 105 (numeros -> FLOAT .)
    WHILE           reduce using rule 105 (numeros -> FLOAT .)
    FOR             reduce using rule 105 (numeros -> FLOAT .)
    IF              reduce using rule 105 (numeros -> FLOAT .)
    INT             reduce using rule 105 (numeros -> FLOAT .)
    DOUBLE          reduce using rule 105 (numeros -> FLOAT .)
    LONG            reduce using rule 105 (numeros -> FLOAT .)
    FLOAT           reduce using rule 105 (numeros -> FLOAT .)
    STRING          reduce using rule 105 (numeros -> FLOAT .)
    CHAR            reduce using rule 105 (numeros -> FLOAT .)
    DEF             reduce using rule 105 (numeros -> FLOAT .)
    $end            reduce using rule 105 (numeros -> FLOAT .)
    LLAVE_D         reduce using rule 105 (numeros -> FLOAT .)
    RETURN          reduce using rule 105 (numeros -> FLOAT .)
    CASE            reduce using rule 105 (numeros -> FLOAT .)
    IGUAL_COMPARACION reduce using rule 105 (numeros -> FLOAT .)
    DIFERENTE       reduce using rule 105 (numeros -> FLOAT .)
    MAYOR           reduce using rule 105 (numeros -> FLOAT .)
    MENOR           reduce using rule 105 (numeros -> FLOAT .)
    AND             reduce using rule 105 (numeros -> FLOAT .)
    OR              reduce using rule 105 (numeros -> FLOAT .)


state 131

    (106) numeros -> DOUBLE .

    COMA            reduce using rule 106 (numeros -> DOUBLE .)
    PAR_D           reduce using rule 106 (numeros -> DOUBLE .)
    MAS             reduce using rule 106 (numeros -> DOUBLE .)
    MENOS           reduce using rule 106 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 106 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 106 (numeros -> DOUBLE .)
    MOD             reduce using rule 106 (numeros -> DOUBLE .)
    VAR             reduce using rule 106 (numeros -> DOUBLE .)
    VAL             reduce using rule 106 (numeros -> DOUBLE .)
    VARIABLE        reduce using rule 106 (numeros -> DOUBLE .)
    PRINTLN         reduce using rule 106 (numeros -> DOUBLE .)
    PRINT           reduce using rule 106 (numeros -> DOUBLE .)
    READLINE        reduce using rule 106 (numeros -> DOUBLE .)
    WHILE           reduce using rule 106 (numeros -> DOUBLE .)
    FOR             reduce using rule 106 (numeros -> DOUBLE .)
    IF              reduce using rule 106 (numeros -> DOUBLE .)
    INT             reduce using rule 106 (numeros -> DOUBLE .)
    DOUBLE          reduce using rule 106 (numeros -> DOUBLE .)
    LONG            reduce using rule 106 (numeros -> DOUBLE .)
    FLOAT           reduce using rule 106 (numeros -> DOUBLE .)
    STRING          reduce using rule 106 (numeros -> DOUBLE .)
    CHAR            reduce using rule 106 (numeros -> DOUBLE .)
    DEF             reduce using rule 106 (numeros -> DOUBLE .)
    $end            reduce using rule 106 (numeros -> DOUBLE .)
    LLAVE_D         reduce using rule 106 (numeros -> DOUBLE .)
    RETURN          reduce using rule 106 (numeros -> DOUBLE .)
    CASE            reduce using rule 106 (numeros -> DOUBLE .)
    IGUAL_COMPARACION reduce using rule 106 (numeros -> DOUBLE .)
    DIFERENTE       reduce using rule 106 (numeros -> DOUBLE .)
    MAYOR           reduce using rule 106 (numeros -> DOUBLE .)
    MENOR           reduce using rule 106 (numeros -> DOUBLE .)
    AND             reduce using rule 106 (numeros -> DOUBLE .)
    OR              reduce using rule 106 (numeros -> DOUBLE .)


state 132

    (140) varparen -> varparen PAR_I . valores PAR_D
    (141) varparen -> varparen PAR_I . PAR_D
    (162) valores -> . valor
    (163) valores -> . valor COMA valores
    (93) valor -> . STRING
    (94) valor -> . CHAR
    (95) valor -> . VARIABLE
    (96) valor -> . numeros
    (97) valor -> . booleanos
    (98) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (99) valor -> . VARIABLE PAR_I INT PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    PAR_D           shift and go to state 203
    STRING          shift and go to state 126
    CHAR            shift and go to state 127
    VARIABLE        shift and go to state 121
    INT             shift and go to state 136
    LONG            shift and go to state 129
    FLOAT           shift and go to state 130
    DOUBLE          shift and go to state 131
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117

    valores                        shift and go to state 202
    valor                          shift and go to state 124
    numeros                        shift and go to state 128
    booleanos                      shift and go to state 113
    startsWith                     shift and go to state 118

state 133

    (174) match -> VARIABLE MATCH LLAVE_I . cases LLAVE_D
    (175) cases -> . casesInt
    (176) cases -> . casesLgn
    (177) cases -> . casesFlt
    (178) cases -> . casesDob
    (179) cases -> . casesStr
    (180) cases -> . casesChar
    (181) cases -> . casesBool
    (183) casesInt -> . caseInt
    (184) casesInt -> . caseInt casesInt
    (185) casesInt -> . caseInt defcase
    (187) casesLgn -> . caseLgn
    (188) casesLgn -> . caseLgn casesLgn
    (189) casesLgn -> . caseLgn defcase
    (191) casesFlt -> . caseFlt
    (192) casesFlt -> . caseFlt casesFlt
    (193) casesFlt -> . caseFlt defcase
    (195) casesDob -> . caseDob
    (196) casesDob -> . caseDob casesDob
    (197) casesDob -> . caseDob defcase
    (199) casesStr -> . caseStr
    (200) casesStr -> . caseStr casesStr
    (201) casesStr -> . caseStr defcase
    (203) casesChar -> . caseChar
    (204) casesChar -> . caseChar casesChar
    (205) casesChar -> . caseChar defcase
    (207) casesBool -> . caseBool
    (208) casesBool -> . caseBool casesBool
    (209) casesBool -> . caseBool defcase
    (182) caseInt -> . CASE INT FUNCION_FLECHA codeBlock
    (186) caseLgn -> . CASE LONG FUNCION_FLECHA codeBlock
    (190) caseFlt -> . CASE FLOAT FUNCION_FLECHA codeBlock
    (194) caseDob -> . CASE DOUBLE FUNCION_FLECHA codeBlock
    (198) caseStr -> . CASE STRING FUNCION_FLECHA codeBlock
    (202) caseChar -> . CASE CHAR FUNCION_FLECHA codeBlock
    (206) caseBool -> . CASE booleanos FUNCION_FLECHA codeBlock

    CASE            shift and go to state 219

    cases                          shift and go to state 204
    casesInt                       shift and go to state 205
    casesLgn                       shift and go to state 206
    casesFlt                       shift and go to state 207
    casesDob                       shift and go to state 208
    casesStr                       shift and go to state 209
    casesChar                      shift and go to state 210
    casesBool                      shift and go to state 211
    caseInt                        shift and go to state 212
    caseLgn                        shift and go to state 213
    caseFlt                        shift and go to state 214
    caseDob                        shift and go to state 215
    caseStr                        shift and go to state 216
    caseChar                       shift and go to state 217
    caseBool                       shift and go to state 218

state 134

    (253) aritmetica -> VARIABLE aritmeticos VARIABLE .

    MAS             reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MENOS           reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DIVISION        reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MOD             reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VAR             reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VAL             reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PRINT           reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    READLINE        reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    WHILE           reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    FOR             reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    IF              reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    INT             reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    LONG            reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    FLOAT           reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    STRING          reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    CHAR            reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DEF             reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    $end            reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    RETURN          reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    CASE            reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    IGUAL_COMPARACION reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MAYOR           reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MENOR           reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    AND             reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    OR              reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PAR_D           reduce using rule 253 (aritmetica -> VARIABLE aritmeticos VARIABLE .)


state 135

    (251) aritmetica -> VARIABLE aritmeticos numeros .

    MAS             reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    MENOS           reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    DIVISION        reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    MOD             reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    VAR             reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    VAL             reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    VARIABLE        reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    PRINTLN         reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    PRINT           reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    READLINE        reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    WHILE           reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    FOR             reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    IF              reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    INT             reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    DOUBLE          reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    LONG            reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    FLOAT           reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    STRING          reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    CHAR            reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    DEF             reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    $end            reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    LLAVE_D         reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    RETURN          reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    CASE            reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    IGUAL_COMPARACION reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    DIFERENTE       reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    MAYOR           reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    MENOR           reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    AND             reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    OR              reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)
    PAR_D           reduce using rule 251 (aritmetica -> VARIABLE aritmeticos numeros .)


state 136

    (103) numeros -> INT .

    MAS             reduce using rule 103 (numeros -> INT .)
    MENOS           reduce using rule 103 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 103 (numeros -> INT .)
    DIVISION        reduce using rule 103 (numeros -> INT .)
    MOD             reduce using rule 103 (numeros -> INT .)
    VAR             reduce using rule 103 (numeros -> INT .)
    VAL             reduce using rule 103 (numeros -> INT .)
    VARIABLE        reduce using rule 103 (numeros -> INT .)
    PRINTLN         reduce using rule 103 (numeros -> INT .)
    PRINT           reduce using rule 103 (numeros -> INT .)
    READLINE        reduce using rule 103 (numeros -> INT .)
    WHILE           reduce using rule 103 (numeros -> INT .)
    FOR             reduce using rule 103 (numeros -> INT .)
    IF              reduce using rule 103 (numeros -> INT .)
    INT             reduce using rule 103 (numeros -> INT .)
    DOUBLE          reduce using rule 103 (numeros -> INT .)
    LONG            reduce using rule 103 (numeros -> INT .)
    FLOAT           reduce using rule 103 (numeros -> INT .)
    STRING          reduce using rule 103 (numeros -> INT .)
    CHAR            reduce using rule 103 (numeros -> INT .)
    DEF             reduce using rule 103 (numeros -> INT .)
    $end            reduce using rule 103 (numeros -> INT .)
    LLAVE_D         reduce using rule 103 (numeros -> INT .)
    RETURN          reduce using rule 103 (numeros -> INT .)
    CASE            reduce using rule 103 (numeros -> INT .)
    IGUAL_COMPARACION reduce using rule 103 (numeros -> INT .)
    DIFERENTE       reduce using rule 103 (numeros -> INT .)
    MAYOR           reduce using rule 103 (numeros -> INT .)
    MENOR           reduce using rule 103 (numeros -> INT .)
    AND             reduce using rule 103 (numeros -> INT .)
    OR              reduce using rule 103 (numeros -> INT .)
    PAR_D           reduce using rule 103 (numeros -> INT .)
    COMA            reduce using rule 103 (numeros -> INT .)


state 137

    (259) aritmetica -> VARIABLE MAS VARIABLE .

    MAS             reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    MENOS           reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    MULTIPLICACION  reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    DIVISION        reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    MOD             reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    VAR             reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    VAL             reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    VARIABLE        reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    PRINTLN         reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    PRINT           reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    READLINE        reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    WHILE           reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    FOR             reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    IF              reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    INT             reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    DOUBLE          reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    LONG            reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    FLOAT           reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    STRING          reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    CHAR            reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    DEF             reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    $end            reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    LLAVE_D         reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    RETURN          reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    CASE            reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    IGUAL_COMPARACION reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    DIFERENTE       reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    MAYOR           reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    MENOR           reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    AND             reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    OR              reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)
    PAR_D           reduce using rule 259 (aritmetica -> VARIABLE MAS VARIABLE .)


state 138

    (257) aritmetica -> VARIABLE MAS numeros .

    MAS             reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    MENOS           reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    MULTIPLICACION  reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    DIVISION        reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    MOD             reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    VAR             reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    VAL             reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    VARIABLE        reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    PRINTLN         reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    PRINT           reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    READLINE        reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    WHILE           reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    FOR             reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    IF              reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    INT             reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    DOUBLE          reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    LONG            reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    FLOAT           reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    STRING          reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    CHAR            reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    DEF             reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    $end            reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    LLAVE_D         reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    RETURN          reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    CASE            reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    IGUAL_COMPARACION reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    DIFERENTE       reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    MAYOR           reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    MENOR           reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    AND             reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    OR              reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)
    PAR_D           reduce using rule 257 (aritmetica -> VARIABLE MAS numeros .)


state 139

    (2) inicio -> IMPORT io inicio .

    $end            reduce using rule 2 (inicio -> IMPORT io inicio .)


state 140

    (4) io -> VARIABLE PUNTO . VARIABLE PUNTO VARIABLE PUNTO READLINE

    VARIABLE        shift and go to state 220


state 141

    (107) funcion -> DEF VARIABLE parametro . IGUAL LLAVE_I contenido LLAVE_D
    (108) funcion -> DEF VARIABLE parametro . LLAVE_I contenido LLAVE_D
    (115) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (116) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (117) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (118) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (119) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (120) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (121) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (122) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (123) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (124) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (126) dectipo -> . DOBLE_PUNTO tipo
    (127) dectipoTupla -> . DOBLE_PUNTO PAR_I tipos PAR_D

    IGUAL           shift and go to state 221
    LLAVE_I         shift and go to state 222
    DOBLE_PUNTO     shift and go to state 225

    dectipo                        shift and go to state 223
    dectipoTupla                   shift and go to state 224

state 142

    (111) parametro -> parametros .

    IGUAL           reduce using rule 111 (parametro -> parametros .)
    LLAVE_I         reduce using rule 111 (parametro -> parametros .)
    DOBLE_PUNTO     reduce using rule 111 (parametro -> parametros .)


state 143

    (112) parametro -> PAR_I . PAR_D
    (113) parametros -> PAR_I . declaracion PAR_D
    (114) parametros -> PAR_I . declaracion PAR_D parametros
    (109) declaracion -> . VARIABLE DOBLE_PUNTO tipo
    (110) declaracion -> . VARIABLE DOBLE_PUNTO tipo IGUAL valor

    PAR_D           shift and go to state 226
    VARIABLE        shift and go to state 228

    declaracion                    shift and go to state 227

state 144

    (254) aritmetica -> aritmetica aritmeticos numeros .

    MAS             reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    MENOS           reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    DIVISION        reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    MOD             reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    VAR             reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    VAL             reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    VARIABLE        reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    PRINTLN         reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    PRINT           reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    READLINE        reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    WHILE           reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    FOR             reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    IF              reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    INT             reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    DOUBLE          reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    LONG            reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    FLOAT           reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    STRING          reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    CHAR            reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    DEF             reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    $end            reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    LLAVE_D         reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    RETURN          reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    CASE            reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    IGUAL_COMPARACION reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    DIFERENTE       reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    MAYOR           reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    MENOR           reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    AND             reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    OR              reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)
    PAR_D           reduce using rule 254 (aritmetica -> aritmetica aritmeticos numeros .)


state 145

    (255) aritmetica -> aritmetica aritmeticos VARIABLE .

    MAS             reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MENOS           reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DIVISION        reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MOD             reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VAR             reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VAL             reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PRINT           reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    READLINE        reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    WHILE           reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    FOR             reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    IF              reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    INT             reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    LONG            reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    FLOAT           reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    STRING          reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    CHAR            reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DEF             reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    $end            reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    RETURN          reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    CASE            reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    IGUAL_COMPARACION reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MAYOR           reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MENOR           reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    AND             reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    OR              reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PAR_D           reduce using rule 255 (aritmetica -> aritmetica aritmeticos VARIABLE .)


state 146

    (260) aritmetica -> aritmetica MAS numeros .

    MAS             reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    MENOS           reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    MULTIPLICACION  reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    DIVISION        reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    MOD             reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    VAR             reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    VAL             reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    VARIABLE        reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    PRINTLN         reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    PRINT           reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    READLINE        reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    WHILE           reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    FOR             reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    IF              reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    INT             reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    DOUBLE          reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    LONG            reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    FLOAT           reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    STRING          reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    CHAR            reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    DEF             reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    $end            reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    LLAVE_D         reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    RETURN          reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    CASE            reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    IGUAL_COMPARACION reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    DIFERENTE       reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    MAYOR           reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    MENOR           reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    AND             reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    OR              reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)
    PAR_D           reduce using rule 260 (aritmetica -> aritmetica MAS numeros .)


state 147

    (261) aritmetica -> aritmetica MAS VARIABLE .

    MAS             reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    MENOS           reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    MULTIPLICACION  reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    DIVISION        reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    MOD             reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    VAR             reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    VAL             reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    VARIABLE        reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    PRINTLN         reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    PRINT           reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    READLINE        reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    WHILE           reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    FOR             reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    IF              reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    INT             reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    DOUBLE          reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    LONG            reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    FLOAT           reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    STRING          reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    CHAR            reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    DEF             reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    $end            reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    LLAVE_D         reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    RETURN          reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    CASE            reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    IGUAL_COMPARACION reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    DIFERENTE       reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    MAYOR           reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    MENOR           reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    AND             reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    OR              reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)
    PAR_D           reduce using rule 261 (aritmetica -> aritmetica MAS VARIABLE .)


state 148

    (219) else -> elseif . else
    (218) else -> . ELSE LLAVE_I contenido LLAVE_D
    (219) else -> . elseif else
    (216) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (217) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    ELSE            shift and go to state 150

    elseif                         shift and go to state 148
    else                           shift and go to state 149

state 149

    (219) else -> elseif else .

    ELSE            reduce using rule 219 (else -> elseif else .)
    VAR             reduce using rule 219 (else -> elseif else .)
    VAL             reduce using rule 219 (else -> elseif else .)
    VARIABLE        reduce using rule 219 (else -> elseif else .)
    PRINTLN         reduce using rule 219 (else -> elseif else .)
    PRINT           reduce using rule 219 (else -> elseif else .)
    READLINE        reduce using rule 219 (else -> elseif else .)
    WHILE           reduce using rule 219 (else -> elseif else .)
    FOR             reduce using rule 219 (else -> elseif else .)
    IF              reduce using rule 219 (else -> elseif else .)
    INT             reduce using rule 219 (else -> elseif else .)
    DOUBLE          reduce using rule 219 (else -> elseif else .)
    LONG            reduce using rule 219 (else -> elseif else .)
    FLOAT           reduce using rule 219 (else -> elseif else .)
    STRING          reduce using rule 219 (else -> elseif else .)
    CHAR            reduce using rule 219 (else -> elseif else .)
    DEF             reduce using rule 219 (else -> elseif else .)
    $end            reduce using rule 219 (else -> elseif else .)
    LLAVE_D         reduce using rule 219 (else -> elseif else .)
    RETURN          reduce using rule 219 (else -> elseif else .)


state 150

    (218) else -> ELSE . LLAVE_I contenido LLAVE_D
    (216) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (217) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    LLAVE_I         shift and go to state 152
    IF              shift and go to state 151


state 151

    (216) elseif -> ELSE IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (217) elseif -> ELSE IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    PAR_I           shift and go to state 229


state 152

    (218) else -> ELSE LLAVE_I . contenido LLAVE_D
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

    contenido                      shift and go to state 230
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 153

    (36) asignacion -> VAR VARIABLE IGUAL . VARIABLE
    (38) asignacion -> VAR VARIABLE IGUAL . aritmetica
    (40) asignacion -> VAR VARIABLE IGUAL . returnfun
    (165) asignacion -> VAR VARIABLE IGUAL . tuple
    (334) asignacionLong -> VAR VARIABLE IGUAL . longvalues
    (328) asignacionInt -> VAR VARIABLE IGUAL . intvalues
    (341) asignacionFloat -> VAR VARIABLE IGUAL . floatvalues
    (348) asignacionDouble -> VAR VARIABLE IGUAL . doublevalues
    (61) asignacionString -> VAR VARIABLE IGUAL . STRING
    (68) asignacionChar -> VAR VARIABLE IGUAL . CHAR
    (74) asignacionBoolean -> VAR VARIABLE IGUAL . booleanos
    (152) array -> VAR VARIABLE IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (159) list -> VAR VARIABLE IGUAL . LISTCLASS PAR_I valores PAR_D
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (142) returnfun -> . returnCastable
    (143) returnfun -> . castingcall
    (164) tuple -> . PAR_I valores PAR_D
    (338) longvalues -> . LONG
    (339) longvalues -> . intvalues
    (340) longvalues -> . stringCastLong
    (332) intvalues -> . INT
    (333) intvalues -> . stringCastInt
    (345) floatvalues -> . FLOAT
    (346) floatvalues -> . longvalues
    (347) floatvalues -> . stringCastFloat
    (352) doublevalues -> . DOUBLE
    (353) doublevalues -> . floatvalues
    (354) doublevalues -> . stringCastDouble
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (144) returnCastable -> . entrada
    (145) returnCastable -> . funcall
    (146) castingcall -> . returnCastable PUNTO castingfun
    (147) castingcall -> . VARIABLE PUNTO castingfun
    (356) stringCastLong -> . STRING PUNTO TO_LONG
    (355) stringCastInt -> . STRING PUNTO TO_INT
    (357) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (358) stringCastDouble -> . STRING PUNTO TO_DOUBLE
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE
    (136) entrada -> . READLINE PAR_I PAR_D
    (137) funcall -> . VARIABLE varparen

    VARIABLE        shift and go to state 231
    STRING          shift and go to state 239
    CHAR            shift and go to state 240
    ARRAYCLASS      shift and go to state 242
    LISTCLASS       shift and go to state 244
    INT             shift and go to state 245
    DOUBLE          shift and go to state 246
    LONG            shift and go to state 247
    FLOAT           shift and go to state 248
    PAR_I           shift and go to state 243
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117
    READLINE        shift and go to state 34

    aritmetica                     shift and go to state 232
    returnfun                      shift and go to state 233
    tuple                          shift and go to state 234
    longvalues                     shift and go to state 235
    intvalues                      shift and go to state 236
    floatvalues                    shift and go to state 237
    doublevalues                   shift and go to state 238
    booleanos                      shift and go to state 241
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    returnCastable                 shift and go to state 114
    castingcall                    shift and go to state 115
    stringCastLong                 shift and go to state 249
    stringCastInt                  shift and go to state 250
    stringCastFloat                shift and go to state 251
    stringCastDouble               shift and go to state 252
    startsWith                     shift and go to state 118
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55
    entrada                        shift and go to state 119
    funcall                        shift and go to state 120

state 154

    (306) asignacion -> VAR VARIABLE DOBLE_PUNTO . dectupla
    (51) asignacionLong -> VAR VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL VARIABLE
    (335) asignacionLong -> VAR VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL longvalues
    (53) asignacionInt -> VAR VARIABLE DOBLE_PUNTO . INTCLASS IGUAL VARIABLE
    (329) asignacionInt -> VAR VARIABLE DOBLE_PUNTO . INTCLASS IGUAL intvalues
    (56) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL VARIABLE
    (342) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL VARIABLE
    (349) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL doublevalues
    (62) asignacionString -> VAR VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL STRING
    (65) asignacionString -> VAR VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL VARIABLE
    (69) asignacionChar -> VAR VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL CHAR
    (72) asignacionChar -> VAR VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL VARIABLE
    (75) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL VARIABLE
    (153) array -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (304) asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO . INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> VAR VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (281) listChar -> VAR VARIABLE DOBLE_PUNTO . LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (279) listString -> VAR VARIABLE DOBLE_PUNTO . LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) dectupla -> . PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
    (309) dectupla -> . PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
    (310) dectupla -> . PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
    (311) dectupla -> . PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D
    (312) dectupla -> . PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
    (313) dectupla -> . PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
    (314) dectupla -> . PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
    (315) dectupla -> . PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D
    (316) dectupla -> . PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
    (317) dectupla -> . PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
    (318) dectupla -> . PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
    (319) dectupla -> . PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D
    (320) dectupla -> . PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
    (321) dectupla -> . PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
    (322) dectupla -> . PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
    (323) dectupla -> . PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D
    (324) dectupla -> . PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
    (325) dectupla -> . PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
    (326) dectupla -> . PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
    (327) dectupla -> . PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    LONGCLASS       shift and go to state 254
    INTCLASS        shift and go to state 255
    FLOATCLASS      shift and go to state 256
    DOUBLECLASS     shift and go to state 257
    STRINGCLASS     shift and go to state 258
    CHARCLASS       shift and go to state 259
    BOOLCLASS       shift and go to state 260
    ARRAYCLASS      shift and go to state 261
    LISTCLASS       shift and go to state 263
    PAR_I           shift and go to state 262

    dectupla                       shift and go to state 253

state 155

    (37) asignacion -> VAL VARIABLE IGUAL . VARIABLE
    (39) asignacion -> VAL VARIABLE IGUAL . aritmetica
    (41) asignacion -> VAL VARIABLE IGUAL . returnfun
    (166) asignacion -> VAL VARIABLE IGUAL . tuple
    (336) asignacionLong -> VAL VARIABLE IGUAL . longvalues
    (330) asignacionInt -> VAL VARIABLE IGUAL . intvalues
    (343) asignacionFloat -> VAL VARIABLE IGUAL . floatvalues
    (350) asignacionDouble -> VAL VARIABLE IGUAL . doublevalues
    (63) asignacionString -> VAL VARIABLE IGUAL . STRING
    (70) asignacionChar -> VAL VARIABLE IGUAL . CHAR
    (76) asignacionBoolean -> VAL VARIABLE IGUAL . booleanos
    (154) array -> VAL VARIABLE IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (158) list -> VAL VARIABLE IGUAL . LISTCLASS PAR_I valores PAR_D
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (142) returnfun -> . returnCastable
    (143) returnfun -> . castingcall
    (164) tuple -> . PAR_I valores PAR_D
    (338) longvalues -> . LONG
    (339) longvalues -> . intvalues
    (340) longvalues -> . stringCastLong
    (332) intvalues -> . INT
    (333) intvalues -> . stringCastInt
    (345) floatvalues -> . FLOAT
    (346) floatvalues -> . longvalues
    (347) floatvalues -> . stringCastFloat
    (352) doublevalues -> . DOUBLE
    (353) doublevalues -> . floatvalues
    (354) doublevalues -> . stringCastDouble
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (144) returnCastable -> . entrada
    (145) returnCastable -> . funcall
    (146) castingcall -> . returnCastable PUNTO castingfun
    (147) castingcall -> . VARIABLE PUNTO castingfun
    (356) stringCastLong -> . STRING PUNTO TO_LONG
    (355) stringCastInt -> . STRING PUNTO TO_INT
    (357) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (358) stringCastDouble -> . STRING PUNTO TO_DOUBLE
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE
    (136) entrada -> . READLINE PAR_I PAR_D
    (137) funcall -> . VARIABLE varparen

    VARIABLE        shift and go to state 264
    STRING          shift and go to state 272
    CHAR            shift and go to state 273
    ARRAYCLASS      shift and go to state 275
    LISTCLASS       shift and go to state 276
    INT             shift and go to state 245
    DOUBLE          shift and go to state 246
    LONG            shift and go to state 247
    FLOAT           shift and go to state 248
    PAR_I           shift and go to state 243
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117
    READLINE        shift and go to state 34

    aritmetica                     shift and go to state 265
    returnfun                      shift and go to state 266
    tuple                          shift and go to state 267
    longvalues                     shift and go to state 268
    intvalues                      shift and go to state 269
    floatvalues                    shift and go to state 270
    doublevalues                   shift and go to state 271
    booleanos                      shift and go to state 274
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    returnCastable                 shift and go to state 114
    castingcall                    shift and go to state 115
    stringCastLong                 shift and go to state 249
    stringCastInt                  shift and go to state 250
    stringCastFloat                shift and go to state 251
    stringCastDouble               shift and go to state 252
    startsWith                     shift and go to state 118
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55
    entrada                        shift and go to state 119
    funcall                        shift and go to state 120

state 156

    (307) asignacion -> VAL VARIABLE DOBLE_PUNTO . dectupla
    (52) asignacionLong -> VAL VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL VARIABLE
    (337) asignacionLong -> VAL VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL longvalues
    (54) asignacionInt -> VAL VARIABLE DOBLE_PUNTO . INTCLASS IGUAL VARIABLE
    (331) asignacionInt -> VAL VARIABLE DOBLE_PUNTO . INTCLASS IGUAL intvalues
    (57) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL VARIABLE
    (344) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL floatvalues
    (59) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL VARIABLE
    (351) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL doublevalues
    (64) asignacionString -> VAL VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL STRING
    (66) asignacionString -> VAL VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL VARIABLE
    (71) asignacionChar -> VAL VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL CHAR
    (73) asignacionChar -> VAL VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL VARIABLE
    (77) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL booleanos
    (79) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL VARIABLE
    (155) array -> VAL VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (305) asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO . INTCLASS IGUAL sumIntChar
    (299) asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL sumIntDouble
    (301) asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL sumDoubleChar
    (303) asignacionSumString -> VAL VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL sumStringChar
    (280) listChar -> VAL VARIABLE DOBLE_PUNTO . LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> VAL VARIABLE DOBLE_PUNTO . LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) dectupla -> . PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
    (309) dectupla -> . PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
    (310) dectupla -> . PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
    (311) dectupla -> . PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D
    (312) dectupla -> . PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
    (313) dectupla -> . PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
    (314) dectupla -> . PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
    (315) dectupla -> . PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D
    (316) dectupla -> . PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
    (317) dectupla -> . PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
    (318) dectupla -> . PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
    (319) dectupla -> . PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D
    (320) dectupla -> . PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
    (321) dectupla -> . PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
    (322) dectupla -> . PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
    (323) dectupla -> . PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D
    (324) dectupla -> . PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
    (325) dectupla -> . PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
    (326) dectupla -> . PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
    (327) dectupla -> . PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    LONGCLASS       shift and go to state 278
    INTCLASS        shift and go to state 279
    FLOATCLASS      shift and go to state 280
    DOUBLECLASS     shift and go to state 281
    STRINGCLASS     shift and go to state 282
    CHARCLASS       shift and go to state 283
    BOOLCLASS       shift and go to state 284
    ARRAYCLASS      shift and go to state 285
    LISTCLASS       shift and go to state 286
    PAR_I           shift and go to state 262

    dectupla                       shift and go to state 277

state 157

    (262) aritmetica -> INT MAS INT .

    MAS             reduce using rule 262 (aritmetica -> INT MAS INT .)
    MENOS           reduce using rule 262 (aritmetica -> INT MAS INT .)
    MULTIPLICACION  reduce using rule 262 (aritmetica -> INT MAS INT .)
    DIVISION        reduce using rule 262 (aritmetica -> INT MAS INT .)
    MOD             reduce using rule 262 (aritmetica -> INT MAS INT .)
    VAR             reduce using rule 262 (aritmetica -> INT MAS INT .)
    VAL             reduce using rule 262 (aritmetica -> INT MAS INT .)
    VARIABLE        reduce using rule 262 (aritmetica -> INT MAS INT .)
    PRINTLN         reduce using rule 262 (aritmetica -> INT MAS INT .)
    PRINT           reduce using rule 262 (aritmetica -> INT MAS INT .)
    READLINE        reduce using rule 262 (aritmetica -> INT MAS INT .)
    WHILE           reduce using rule 262 (aritmetica -> INT MAS INT .)
    FOR             reduce using rule 262 (aritmetica -> INT MAS INT .)
    IF              reduce using rule 262 (aritmetica -> INT MAS INT .)
    INT             reduce using rule 262 (aritmetica -> INT MAS INT .)
    DOUBLE          reduce using rule 262 (aritmetica -> INT MAS INT .)
    LONG            reduce using rule 262 (aritmetica -> INT MAS INT .)
    FLOAT           reduce using rule 262 (aritmetica -> INT MAS INT .)
    STRING          reduce using rule 262 (aritmetica -> INT MAS INT .)
    CHAR            reduce using rule 262 (aritmetica -> INT MAS INT .)
    DEF             reduce using rule 262 (aritmetica -> INT MAS INT .)
    $end            reduce using rule 262 (aritmetica -> INT MAS INT .)
    LLAVE_D         reduce using rule 262 (aritmetica -> INT MAS INT .)
    RETURN          reduce using rule 262 (aritmetica -> INT MAS INT .)
    CASE            reduce using rule 262 (aritmetica -> INT MAS INT .)
    IGUAL_COMPARACION reduce using rule 262 (aritmetica -> INT MAS INT .)
    DIFERENTE       reduce using rule 262 (aritmetica -> INT MAS INT .)
    MAYOR           reduce using rule 262 (aritmetica -> INT MAS INT .)
    MENOR           reduce using rule 262 (aritmetica -> INT MAS INT .)
    AND             reduce using rule 262 (aritmetica -> INT MAS INT .)
    OR              reduce using rule 262 (aritmetica -> INT MAS INT .)
    PAR_D           reduce using rule 262 (aritmetica -> INT MAS INT .)


state 158

    (294) sumIntChar -> INT MAS CHAR .

    MAS             reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    MENOS           reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    MULTIPLICACION  reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    DIVISION        reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    MOD             reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    VAR             reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    VAL             reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    VARIABLE        reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    PRINTLN         reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    PRINT           reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    READLINE        reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    WHILE           reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    FOR             reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    IF              reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    INT             reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    DOUBLE          reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    LONG            reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    FLOAT           reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    STRING          reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    CHAR            reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    DEF             reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    $end            reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    LLAVE_D         reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    RETURN          reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    CASE            reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    IGUAL_COMPARACION reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    DIFERENTE       reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    MAYOR           reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    MENOR           reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    AND             reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    OR              reduce using rule 294 (sumIntChar -> INT MAS CHAR .)
    PAR_D           reduce using rule 294 (sumIntChar -> INT MAS CHAR .)


state 159

    (290) sumIntDouble -> INT MAS DOUBLE .

    MAS             reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    MENOS           reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    MULTIPLICACION  reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    DIVISION        reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    MOD             reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    VAR             reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    VAL             reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    VARIABLE        reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    PRINTLN         reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    PRINT           reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    READLINE        reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    WHILE           reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    FOR             reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    IF              reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    INT             reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    DOUBLE          reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    LONG            reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    FLOAT           reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    STRING          reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    CHAR            reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    DEF             reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    $end            reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    LLAVE_D         reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    RETURN          reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    CASE            reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    IGUAL_COMPARACION reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    DIFERENTE       reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    MAYOR           reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    MENOR           reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    AND             reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    OR              reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)
    PAR_D           reduce using rule 290 (sumIntDouble -> INT MAS DOUBLE .)


state 160

    (132) impresion -> PRINTLN PAR_I valorI . PAR_D

    PAR_D           shift and go to state 287


state 161

    (134) valorI -> valor . MAS valorI
    (135) valorI -> valor .

    MAS             shift and go to state 288
    PAR_D           reduce using rule 135 (valorI -> valor .)


state 162

    (133) impresion -> PRINT PAR_I valorI . PAR_D

    PAR_D           shift and go to state 289


state 163

    (136) entrada -> READLINE PAR_I PAR_D .

    VAR             reduce using rule 136 (entrada -> READLINE PAR_I PAR_D .)
    VAL             reduce using rule 136 (entrada -> READLINE PAR_I PAR_D .)
    VARIABLE        reduce using rule 136 (entrada -> READLINE PAR_I PAR_D .)
    PRINTLN         reduce using rule 136 (entrada -> READLINE PAR_I PAR_D .)
    PRINT           reduce using rule 136 (entrada -> READLINE PAR_I PAR_D .)
    READLINE        reduce using rule 136 (entrada -> READLINE PAR_I PAR_D .)
    WHILE           reduce using rule 136 (entrada -> READLINE PAR_I PAR_D .)
    FOR             reduce using rule 136 (entrada -> READLINE PAR_I PAR_D .)
    IF              reduce using rule 136 (entrada -> READLINE PAR_I PAR_D .)
    INT             reduce using rule 136 (entrada -> READLINE PAR_I PAR_D .)
    DOUBLE          reduce using rule 136 (entrada -> READLINE PAR_I PAR_D .)
    LONG            reduce using rule 136 (entrada -> READLINE PAR_I PAR_D .)
    FLOAT           reduce using rule 136 (entrada -> READLINE PAR_I PAR_D .)
    STRING          reduce using rule 136 (entrada -> READLINE PAR_I PAR_D .)
    CHAR            reduce using rule 136 (entrada -> READLINE PAR_I PAR_D .)
    DEF             reduce using rule 136 (entrada -> READLINE PAR_I PAR_D .)
    $end            reduce using rule 136 (entrada -> READLINE PAR_I PAR_D .)
    LLAVE_D         reduce using rule 136 (entrada -> READLINE PAR_I PAR_D .)
    RETURN          reduce using rule 136 (entrada -> READLINE PAR_I PAR_D .)
    PUNTO           reduce using rule 136 (entrada -> READLINE PAR_I PAR_D .)
    CASE            reduce using rule 136 (entrada -> READLINE PAR_I PAR_D .)


state 164

    (167) while -> WHILE PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 290


state 165

    (220) condicional -> valorC . logicos condicional
    (221) condicional -> valorC .
    (228) logicos -> . AND
    (229) logicos -> . OR

    PAR_D           reduce using rule 221 (condicional -> valorC .)
    AND             shift and go to state 292
    OR              shift and go to state 293

    logicos                        shift and go to state 291

state 166

    (222) valorC -> VARIABLE .
    (237) relacional -> VARIABLE . comparacion numeros
    (239) relacional -> VARIABLE . comparacion booleanos
    (241) relacional -> VARIABLE . comparacion STRING
    (243) relacional -> VARIABLE . comparacion CHAR
    (245) relacional -> VARIABLE . comparacion VARIABLE
    (251) aritmetica -> VARIABLE . aritmeticos numeros
    (253) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (257) aritmetica -> VARIABLE . MAS numeros
    (259) aritmetica -> VARIABLE . MAS VARIABLE
    (246) comparacion -> . IGUAL_COMPARACION
    (247) comparacion -> . DIFERENTE
    (248) comparacion -> . MAYOR
    (249) comparacion -> . MENOR
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD

    AND             reduce using rule 222 (valorC -> VARIABLE .)
    OR              reduce using rule 222 (valorC -> VARIABLE .)
    PAR_D           reduce using rule 222 (valorC -> VARIABLE .)
    MAS             shift and go to state 62
    IGUAL_COMPARACION shift and go to state 295
    DIFERENTE       shift and go to state 296
    MAYOR           shift and go to state 297
    MENOR           shift and go to state 298
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66

    comparacion                    shift and go to state 294
    aritmeticos                    shift and go to state 61

state 167

    (223) valorC -> booleanos .
    (234) relacional -> booleanos . comparacion booleanos
    (240) relacional -> booleanos . comparacion VARIABLE
    (246) comparacion -> . IGUAL_COMPARACION
    (247) comparacion -> . DIFERENTE
    (248) comparacion -> . MAYOR
    (249) comparacion -> . MENOR

    AND             reduce using rule 223 (valorC -> booleanos .)
    OR              reduce using rule 223 (valorC -> booleanos .)
    PAR_D           reduce using rule 223 (valorC -> booleanos .)
    IGUAL_COMPARACION shift and go to state 295
    DIFERENTE       shift and go to state 296
    MAYOR           shift and go to state 297
    MENOR           shift and go to state 298

    comparacion                    shift and go to state 299

state 168

    (224) valorC -> relacional .

    AND             reduce using rule 224 (valorC -> relacional .)
    OR              reduce using rule 224 (valorC -> relacional .)
    PAR_D           reduce using rule 224 (valorC -> relacional .)


state 169

    (225) valorC -> NOT . VARIABLE
    (226) valorC -> NOT . booleanos
    (227) valorC -> NOT . relacional
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (230) relacional -> . numeros comparacion numeros
    (231) relacional -> . aritmetica comparacion aritmetica
    (232) relacional -> . aritmetica comparacion numeros
    (233) relacional -> . numeros comparacion aritmetica
    (234) relacional -> . booleanos comparacion booleanos
    (235) relacional -> . STRING comparacion STRING
    (236) relacional -> . CHAR comparacion CHAR
    (237) relacional -> . VARIABLE comparacion numeros
    (238) relacional -> . numeros comparacion VARIABLE
    (239) relacional -> . VARIABLE comparacion booleanos
    (240) relacional -> . booleanos comparacion VARIABLE
    (241) relacional -> . VARIABLE comparacion STRING
    (242) relacional -> . STRING comparacion VARIABLE
    (243) relacional -> . VARIABLE comparacion CHAR
    (244) relacional -> . CHAR comparacion VARIABLE
    (245) relacional -> . VARIABLE comparacion VARIABLE
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VARIABLE        shift and go to state 300
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117
    STRING          shift and go to state 172
    CHAR            shift and go to state 173
    INT             shift and go to state 174
    LONG            shift and go to state 175
    FLOAT           shift and go to state 176
    DOUBLE          shift and go to state 177

    booleanos                      shift and go to state 301
    relacional                     shift and go to state 302
    startsWith                     shift and go to state 118
    numeros                        shift and go to state 170
    aritmetica                     shift and go to state 171
    suma                           shift and go to state 39
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 170

    (230) relacional -> numeros . comparacion numeros
    (233) relacional -> numeros . comparacion aritmetica
    (238) relacional -> numeros . comparacion VARIABLE
    (250) aritmetica -> numeros . aritmeticos numeros
    (252) aritmetica -> numeros . aritmeticos VARIABLE
    (258) aritmetica -> numeros . MAS VARIABLE
    (246) comparacion -> . IGUAL_COMPARACION
    (247) comparacion -> . DIFERENTE
    (248) comparacion -> . MAYOR
    (249) comparacion -> . MENOR
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD

    MAS             shift and go to state 98
    IGUAL_COMPARACION shift and go to state 295
    DIFERENTE       shift and go to state 296
    MAYOR           shift and go to state 297
    MENOR           shift and go to state 298
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66

    comparacion                    shift and go to state 303
    aritmeticos                    shift and go to state 97

state 171

    (231) relacional -> aritmetica . comparacion aritmetica
    (232) relacional -> aritmetica . comparacion numeros
    (254) aritmetica -> aritmetica . aritmeticos numeros
    (255) aritmetica -> aritmetica . aritmeticos VARIABLE
    (260) aritmetica -> aritmetica . MAS numeros
    (261) aritmetica -> aritmetica . MAS VARIABLE
    (246) comparacion -> . IGUAL_COMPARACION
    (247) comparacion -> . DIFERENTE
    (248) comparacion -> . MAYOR
    (249) comparacion -> . MENOR
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD

    MAS             shift and go to state 74
    IGUAL_COMPARACION shift and go to state 295
    DIFERENTE       shift and go to state 296
    MAYOR           shift and go to state 297
    MENOR           shift and go to state 298
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66

    comparacion                    shift and go to state 304
    aritmeticos                    shift and go to state 73

state 172

    (235) relacional -> STRING . comparacion STRING
    (242) relacional -> STRING . comparacion VARIABLE
    (276) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (296) sumStringChar -> STRING . MAS CHAR
    (246) comparacion -> . IGUAL_COMPARACION
    (247) comparacion -> . DIFERENTE
    (248) comparacion -> . MAYOR
    (249) comparacion -> . MENOR

    PUNTO           shift and go to state 102
    MAS             shift and go to state 103
    IGUAL_COMPARACION shift and go to state 295
    DIFERENTE       shift and go to state 296
    MAYOR           shift and go to state 297
    MENOR           shift and go to state 298

    comparacion                    shift and go to state 305

state 173

    (236) relacional -> CHAR . comparacion CHAR
    (244) relacional -> CHAR . comparacion VARIABLE
    (295) sumIntChar -> CHAR . MAS INT
    (297) sumStringChar -> CHAR . MAS STRING
    (293) sumDoubleChar -> CHAR . MAS DOUBLE
    (246) comparacion -> . IGUAL_COMPARACION
    (247) comparacion -> . DIFERENTE
    (248) comparacion -> . MAYOR
    (249) comparacion -> . MENOR

    MAS             shift and go to state 104
    IGUAL_COMPARACION shift and go to state 295
    DIFERENTE       shift and go to state 296
    MAYOR           shift and go to state 297
    MENOR           shift and go to state 298

    comparacion                    shift and go to state 306

state 174

    (103) numeros -> INT .
    (262) aritmetica -> INT . MAS INT
    (294) sumIntChar -> INT . MAS CHAR
    (290) sumIntDouble -> INT . MAS DOUBLE

  ! shift/reduce conflict for MAS resolved as shift
    IGUAL_COMPARACION reduce using rule 103 (numeros -> INT .)
    DIFERENTE       reduce using rule 103 (numeros -> INT .)
    MAYOR           reduce using rule 103 (numeros -> INT .)
    MENOR           reduce using rule 103 (numeros -> INT .)
    MENOS           reduce using rule 103 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 103 (numeros -> INT .)
    DIVISION        reduce using rule 103 (numeros -> INT .)
    MOD             reduce using rule 103 (numeros -> INT .)
    AND             reduce using rule 103 (numeros -> INT .)
    OR              reduce using rule 103 (numeros -> INT .)
    PAR_D           reduce using rule 103 (numeros -> INT .)
    MAS             shift and go to state 90

  ! MAS             [ reduce using rule 103 (numeros -> INT .) ]


state 175

    (104) numeros -> LONG .
    (264) aritmetica -> LONG . MAS LONG

  ! shift/reduce conflict for MAS resolved as shift
    IGUAL_COMPARACION reduce using rule 104 (numeros -> LONG .)
    DIFERENTE       reduce using rule 104 (numeros -> LONG .)
    MAYOR           reduce using rule 104 (numeros -> LONG .)
    MENOR           reduce using rule 104 (numeros -> LONG .)
    MENOS           reduce using rule 104 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 104 (numeros -> LONG .)
    DIVISION        reduce using rule 104 (numeros -> LONG .)
    MOD             reduce using rule 104 (numeros -> LONG .)
    AND             reduce using rule 104 (numeros -> LONG .)
    OR              reduce using rule 104 (numeros -> LONG .)
    PAR_D           reduce using rule 104 (numeros -> LONG .)
    MAS             shift and go to state 100

  ! MAS             [ reduce using rule 104 (numeros -> LONG .) ]


state 176

    (105) numeros -> FLOAT .
    (265) aritmetica -> FLOAT . MAS FLOAT

  ! shift/reduce conflict for MAS resolved as shift
    IGUAL_COMPARACION reduce using rule 105 (numeros -> FLOAT .)
    DIFERENTE       reduce using rule 105 (numeros -> FLOAT .)
    MAYOR           reduce using rule 105 (numeros -> FLOAT .)
    MENOR           reduce using rule 105 (numeros -> FLOAT .)
    MENOS           reduce using rule 105 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 105 (numeros -> FLOAT .)
    DIVISION        reduce using rule 105 (numeros -> FLOAT .)
    MOD             reduce using rule 105 (numeros -> FLOAT .)
    AND             reduce using rule 105 (numeros -> FLOAT .)
    OR              reduce using rule 105 (numeros -> FLOAT .)
    PAR_D           reduce using rule 105 (numeros -> FLOAT .)
    MAS             shift and go to state 101

  ! MAS             [ reduce using rule 105 (numeros -> FLOAT .) ]


state 177

    (106) numeros -> DOUBLE .
    (263) aritmetica -> DOUBLE . MAS DOUBLE
    (291) sumIntDouble -> DOUBLE . MAS INT
    (292) sumDoubleChar -> DOUBLE . MAS CHAR

  ! shift/reduce conflict for MAS resolved as shift
    IGUAL_COMPARACION reduce using rule 106 (numeros -> DOUBLE .)
    DIFERENTE       reduce using rule 106 (numeros -> DOUBLE .)
    MAYOR           reduce using rule 106 (numeros -> DOUBLE .)
    MENOR           reduce using rule 106 (numeros -> DOUBLE .)
    MENOS           reduce using rule 106 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 106 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 106 (numeros -> DOUBLE .)
    MOD             reduce using rule 106 (numeros -> DOUBLE .)
    AND             reduce using rule 106 (numeros -> DOUBLE .)
    OR              reduce using rule 106 (numeros -> DOUBLE .)
    PAR_D           reduce using rule 106 (numeros -> DOUBLE .)
    MAS             shift and go to state 99

  ! MAS             [ reduce using rule 106 (numeros -> DOUBLE .) ]


state 178

    (168) for -> FOR PAR_I VAR . VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> FOR PAR_I VAR . VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> FOR PAR_I VAR . VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 307


state 179

    (169) for -> FOR PAR_I VARIABLE . ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> FOR PAR_I VARIABLE . ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> FOR PAR_I VARIABLE . ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    ITERATOR        shift and go to state 308


state 180

    (213) if -> IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 309


state 181

    (250) aritmetica -> numeros aritmeticos numeros .

    MAS             reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    MENOS           reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    DIVISION        reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    MOD             reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    VAR             reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    VAL             reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    VARIABLE        reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    PRINTLN         reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    PRINT           reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    READLINE        reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    WHILE           reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    FOR             reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    IF              reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    INT             reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    DOUBLE          reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    LONG            reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    FLOAT           reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    STRING          reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    CHAR            reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    DEF             reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    $end            reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    LLAVE_D         reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    RETURN          reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    CASE            reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    IGUAL_COMPARACION reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    DIFERENTE       reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    MAYOR           reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    MENOR           reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    AND             reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    OR              reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)
    PAR_D           reduce using rule 250 (aritmetica -> numeros aritmeticos numeros .)


state 182

    (252) aritmetica -> numeros aritmeticos VARIABLE .

    MAS             reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    MENOS           reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    DIVISION        reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    MOD             reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    VAR             reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    VAL             reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    PRINT           reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    READLINE        reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    WHILE           reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    FOR             reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    IF              reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    INT             reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    LONG            reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    FLOAT           reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    STRING          reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    CHAR            reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    DEF             reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    $end            reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    RETURN          reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    CASE            reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    IGUAL_COMPARACION reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    MAYOR           reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    MENOR           reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    AND             reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    OR              reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)
    PAR_D           reduce using rule 252 (aritmetica -> numeros aritmeticos VARIABLE .)


state 183

    (258) aritmetica -> numeros MAS VARIABLE .

    MAS             reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    MENOS           reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    MULTIPLICACION  reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    DIVISION        reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    MOD             reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    VAR             reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    VAL             reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    VARIABLE        reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    PRINTLN         reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    PRINT           reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    READLINE        reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    WHILE           reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    FOR             reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    IF              reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    INT             reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    DOUBLE          reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    LONG            reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    FLOAT           reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    STRING          reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    CHAR            reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    DEF             reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    $end            reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    LLAVE_D         reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    RETURN          reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    CASE            reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    IGUAL_COMPARACION reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    DIFERENTE       reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    MAYOR           reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    MENOR           reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    AND             reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    OR              reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)
    PAR_D           reduce using rule 258 (aritmetica -> numeros MAS VARIABLE .)


state 184

    (263) aritmetica -> DOUBLE MAS DOUBLE .

    MAS             reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    MENOS           reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    MULTIPLICACION  reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    DIVISION        reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    MOD             reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    VAR             reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    VAL             reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    VARIABLE        reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    PRINTLN         reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    PRINT           reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    READLINE        reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    WHILE           reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    FOR             reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    IF              reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    INT             reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    DOUBLE          reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    LONG            reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    FLOAT           reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    STRING          reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    CHAR            reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    DEF             reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    $end            reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    LLAVE_D         reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    RETURN          reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    CASE            reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    IGUAL_COMPARACION reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    DIFERENTE       reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    MAYOR           reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    MENOR           reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    AND             reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    OR              reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)
    PAR_D           reduce using rule 263 (aritmetica -> DOUBLE MAS DOUBLE .)


state 185

    (291) sumIntDouble -> DOUBLE MAS INT .

    MAS             reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    MENOS           reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    MULTIPLICACION  reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    DIVISION        reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    MOD             reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    VAR             reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    VAL             reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    VARIABLE        reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    PRINTLN         reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    PRINT           reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    READLINE        reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    WHILE           reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    FOR             reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    IF              reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    INT             reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    DOUBLE          reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    LONG            reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    FLOAT           reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    STRING          reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    CHAR            reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    DEF             reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    $end            reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    LLAVE_D         reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    RETURN          reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    CASE            reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    IGUAL_COMPARACION reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    DIFERENTE       reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    MAYOR           reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    MENOR           reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    AND             reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    OR              reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)
    PAR_D           reduce using rule 291 (sumIntDouble -> DOUBLE MAS INT .)


state 186

    (292) sumDoubleChar -> DOUBLE MAS CHAR .

    MAS             reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    MENOS           reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    MULTIPLICACION  reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    DIVISION        reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    MOD             reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    VAR             reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    VAL             reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    VARIABLE        reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    PRINTLN         reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    PRINT           reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    READLINE        reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    WHILE           reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    FOR             reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    IF              reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    INT             reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    DOUBLE          reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    LONG            reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    FLOAT           reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    STRING          reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    CHAR            reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    DEF             reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    $end            reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    LLAVE_D         reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    RETURN          reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    CASE            reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    IGUAL_COMPARACION reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    DIFERENTE       reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    MAYOR           reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    MENOR           reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    AND             reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    OR              reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)
    PAR_D           reduce using rule 292 (sumDoubleChar -> DOUBLE MAS CHAR .)


state 187

    (264) aritmetica -> LONG MAS LONG .

    MAS             reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    MENOS           reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    MULTIPLICACION  reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    DIVISION        reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    MOD             reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    VAR             reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    VAL             reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    VARIABLE        reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    PRINTLN         reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    PRINT           reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    READLINE        reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    WHILE           reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    FOR             reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    IF              reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    INT             reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    DOUBLE          reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    LONG            reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    FLOAT           reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    STRING          reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    CHAR            reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    DEF             reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    $end            reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    LLAVE_D         reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    RETURN          reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    CASE            reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    IGUAL_COMPARACION reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    DIFERENTE       reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    MAYOR           reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    MENOR           reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    AND             reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    OR              reduce using rule 264 (aritmetica -> LONG MAS LONG .)
    PAR_D           reduce using rule 264 (aritmetica -> LONG MAS LONG .)


state 188

    (265) aritmetica -> FLOAT MAS FLOAT .

    MAS             reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    MENOS           reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    MULTIPLICACION  reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    DIVISION        reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    MOD             reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    VAR             reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    VAL             reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    VARIABLE        reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    PRINTLN         reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    PRINT           reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    READLINE        reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    WHILE           reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    FOR             reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    IF              reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    INT             reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    DOUBLE          reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    LONG            reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    FLOAT           reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    STRING          reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    CHAR            reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    DEF             reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    $end            reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    LLAVE_D         reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    RETURN          reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    CASE            reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    IGUAL_COMPARACION reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    DIFERENTE       reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    MAYOR           reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    MENOR           reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    AND             reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    OR              reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)
    PAR_D           reduce using rule 265 (aritmetica -> FLOAT MAS FLOAT .)


state 189

    (276) startsWith -> STRING PUNTO STARTSWITH . PAR_I STRING PAR_D
    (277) startsWith -> STRING PUNTO STARTSWITH . PAR_I STRING COMA INT PAR_D

    PAR_I           shift and go to state 310


state 190

    (296) sumStringChar -> STRING MAS CHAR .

    MAS             reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    MENOS           reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    MULTIPLICACION  reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    DIVISION        reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    MOD             reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    VAR             reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    VAL             reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    VARIABLE        reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    PRINTLN         reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    PRINT           reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    READLINE        reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    WHILE           reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    FOR             reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    IF              reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    INT             reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    DOUBLE          reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    LONG            reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    FLOAT           reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    STRING          reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    CHAR            reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    DEF             reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    $end            reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    LLAVE_D         reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    RETURN          reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    CASE            reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    IGUAL_COMPARACION reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    DIFERENTE       reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    MAYOR           reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    MENOR           reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    AND             reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    OR              reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)
    PAR_D           reduce using rule 296 (sumStringChar -> STRING MAS CHAR .)


state 191

    (295) sumIntChar -> CHAR MAS INT .

    MAS             reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    MENOS           reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    MULTIPLICACION  reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    DIVISION        reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    MOD             reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    VAR             reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    VAL             reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    VARIABLE        reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    PRINTLN         reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    PRINT           reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    READLINE        reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    WHILE           reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    FOR             reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    IF              reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    INT             reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    DOUBLE          reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    LONG            reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    FLOAT           reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    STRING          reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    CHAR            reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    DEF             reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    $end            reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    LLAVE_D         reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    RETURN          reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    CASE            reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    IGUAL_COMPARACION reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    DIFERENTE       reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    MAYOR           reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    MENOR           reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    AND             reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    OR              reduce using rule 295 (sumIntChar -> CHAR MAS INT .)
    PAR_D           reduce using rule 295 (sumIntChar -> CHAR MAS INT .)


state 192

    (297) sumStringChar -> CHAR MAS STRING .

    MAS             reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    MENOS           reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    MULTIPLICACION  reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    DIVISION        reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    MOD             reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    VAR             reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    VAL             reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    VARIABLE        reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    PRINTLN         reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    PRINT           reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    READLINE        reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    WHILE           reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    FOR             reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    IF              reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    INT             reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    DOUBLE          reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    LONG            reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    FLOAT           reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    STRING          reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    CHAR            reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    DEF             reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    $end            reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    LLAVE_D         reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    RETURN          reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    CASE            reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    IGUAL_COMPARACION reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    DIFERENTE       reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    MAYOR           reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    MENOR           reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    AND             reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    OR              reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)
    PAR_D           reduce using rule 297 (sumStringChar -> CHAR MAS STRING .)


state 193

    (293) sumDoubleChar -> CHAR MAS DOUBLE .

    MAS             reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    MENOS           reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    MULTIPLICACION  reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    DIVISION        reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    MOD             reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    VAR             reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    VAL             reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    VARIABLE        reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    PRINTLN         reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    PRINT           reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    READLINE        reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    WHILE           reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    FOR             reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    IF              reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    INT             reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    DOUBLE          reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    LONG            reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    FLOAT           reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    STRING          reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    CHAR            reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    DEF             reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    $end            reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    LLAVE_D         reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    RETURN          reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    CASE            reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    IGUAL_COMPARACION reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    DIFERENTE       reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    MAYOR           reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    MENOR           reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    AND             reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    OR              reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)
    PAR_D           reduce using rule 293 (sumDoubleChar -> CHAR MAS DOUBLE .)


state 194

    (1) inicio -> OBJECT VARIABLE LLAVE_I cuerpo . LLAVE_D

    LLAVE_D         shift and go to state 311


state 195

    (98) valor -> VARIABLE PAR_I . VARIABLE PAR_D
    (99) valor -> VARIABLE PAR_I . INT PAR_D
    (138) varparen -> PAR_I . valores PAR_D
    (139) varparen -> PAR_I . PAR_D
    (162) valores -> . valor
    (163) valores -> . valor COMA valores
    (93) valor -> . STRING
    (94) valor -> . CHAR
    (95) valor -> . VARIABLE
    (96) valor -> . numeros
    (97) valor -> . booleanos
    (98) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (99) valor -> . VARIABLE PAR_I INT PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    VARIABLE        shift and go to state 312
    INT             shift and go to state 313
    PAR_D           shift and go to state 123
    STRING          shift and go to state 126
    CHAR            shift and go to state 127
    LONG            shift and go to state 129
    FLOAT           shift and go to state 130
    DOUBLE          shift and go to state 131
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117

    valores                        shift and go to state 125
    valor                          shift and go to state 124
    numeros                        shift and go to state 128
    booleanos                      shift and go to state 113
    startsWith                     shift and go to state 118

state 196

    (147) castingcall -> VARIABLE PUNTO . castingfun
    (148) castingfun -> . TO_INT
    (149) castingfun -> . TO_DOUBLE
    (150) castingfun -> . TO_FLOAT
    (151) castingfun -> . TO_LONG

    TO_INT          shift and go to state 315
    TO_DOUBLE       shift and go to state 316
    TO_FLOAT        shift and go to state 317
    TO_LONG         shift and go to state 318

    castingfun                     shift and go to state 314

state 197

    (146) castingcall -> returnCastable PUNTO . castingfun
    (148) castingfun -> . TO_INT
    (149) castingfun -> . TO_DOUBLE
    (150) castingfun -> . TO_FLOAT
    (151) castingfun -> . TO_LONG

    TO_INT          shift and go to state 315
    TO_DOUBLE       shift and go to state 316
    TO_FLOAT        shift and go to state 317
    TO_LONG         shift and go to state 318

    castingfun                     shift and go to state 319

state 198

    (98) valor -> VARIABLE PAR_I . VARIABLE PAR_D
    (99) valor -> VARIABLE PAR_I . INT PAR_D

    VARIABLE        shift and go to state 320
    INT             shift and go to state 321


state 199

    (83) reasignacion -> VARIABLE PAR_I INT PAR_D . IGUAL valor

    IGUAL           shift and go to state 322


state 200

    (163) valores -> valor COMA . valores
    (162) valores -> . valor
    (163) valores -> . valor COMA valores
    (93) valor -> . STRING
    (94) valor -> . CHAR
    (95) valor -> . VARIABLE
    (96) valor -> . numeros
    (97) valor -> . booleanos
    (98) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (99) valor -> . VARIABLE PAR_I INT PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 126
    CHAR            shift and go to state 127
    VARIABLE        shift and go to state 121
    INT             shift and go to state 136
    LONG            shift and go to state 129
    FLOAT           shift and go to state 130
    DOUBLE          shift and go to state 131
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117

    valor                          shift and go to state 124
    valores                        shift and go to state 323
    numeros                        shift and go to state 128
    booleanos                      shift and go to state 113
    startsWith                     shift and go to state 118

state 201

    (138) varparen -> PAR_I valores PAR_D .

    PAR_I           reduce using rule 138 (varparen -> PAR_I valores PAR_D .)
    VAR             reduce using rule 138 (varparen -> PAR_I valores PAR_D .)
    VAL             reduce using rule 138 (varparen -> PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 138 (varparen -> PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 138 (varparen -> PAR_I valores PAR_D .)
    PRINT           reduce using rule 138 (varparen -> PAR_I valores PAR_D .)
    READLINE        reduce using rule 138 (varparen -> PAR_I valores PAR_D .)
    WHILE           reduce using rule 138 (varparen -> PAR_I valores PAR_D .)
    FOR             reduce using rule 138 (varparen -> PAR_I valores PAR_D .)
    IF              reduce using rule 138 (varparen -> PAR_I valores PAR_D .)
    INT             reduce using rule 138 (varparen -> PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 138 (varparen -> PAR_I valores PAR_D .)
    LONG            reduce using rule 138 (varparen -> PAR_I valores PAR_D .)
    FLOAT           reduce using rule 138 (varparen -> PAR_I valores PAR_D .)
    STRING          reduce using rule 138 (varparen -> PAR_I valores PAR_D .)
    CHAR            reduce using rule 138 (varparen -> PAR_I valores PAR_D .)
    DEF             reduce using rule 138 (varparen -> PAR_I valores PAR_D .)
    $end            reduce using rule 138 (varparen -> PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 138 (varparen -> PAR_I valores PAR_D .)
    RETURN          reduce using rule 138 (varparen -> PAR_I valores PAR_D .)
    PUNTO           reduce using rule 138 (varparen -> PAR_I valores PAR_D .)
    CASE            reduce using rule 138 (varparen -> PAR_I valores PAR_D .)


state 202

    (140) varparen -> varparen PAR_I valores . PAR_D

    PAR_D           shift and go to state 324


state 203

    (141) varparen -> varparen PAR_I PAR_D .

    PAR_I           reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)
    VAR             reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)
    VAL             reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)
    VARIABLE        reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)
    PRINTLN         reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)
    PRINT           reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)
    READLINE        reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)
    WHILE           reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)
    FOR             reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)
    IF              reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)
    INT             reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)
    DOUBLE          reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)
    LONG            reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)
    FLOAT           reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)
    STRING          reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)
    CHAR            reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)
    DEF             reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)
    $end            reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)
    LLAVE_D         reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)
    RETURN          reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)
    PUNTO           reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)
    CASE            reduce using rule 141 (varparen -> varparen PAR_I PAR_D .)


state 204

    (174) match -> VARIABLE MATCH LLAVE_I cases . LLAVE_D

    LLAVE_D         shift and go to state 325


state 205

    (175) cases -> casesInt .

    LLAVE_D         reduce using rule 175 (cases -> casesInt .)


state 206

    (176) cases -> casesLgn .

    LLAVE_D         reduce using rule 176 (cases -> casesLgn .)


state 207

    (177) cases -> casesFlt .

    LLAVE_D         reduce using rule 177 (cases -> casesFlt .)


state 208

    (178) cases -> casesDob .

    LLAVE_D         reduce using rule 178 (cases -> casesDob .)


state 209

    (179) cases -> casesStr .

    LLAVE_D         reduce using rule 179 (cases -> casesStr .)


state 210

    (180) cases -> casesChar .

    LLAVE_D         reduce using rule 180 (cases -> casesChar .)


state 211

    (181) cases -> casesBool .

    LLAVE_D         reduce using rule 181 (cases -> casesBool .)


state 212

    (183) casesInt -> caseInt .
    (184) casesInt -> caseInt . casesInt
    (185) casesInt -> caseInt . defcase
    (183) casesInt -> . caseInt
    (184) casesInt -> . caseInt casesInt
    (185) casesInt -> . caseInt defcase
    (210) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (182) caseInt -> . CASE INT FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 183 (casesInt -> caseInt .)
    CASE            shift and go to state 328

    caseInt                        shift and go to state 212
    casesInt                       shift and go to state 326
    defcase                        shift and go to state 327

state 213

    (187) casesLgn -> caseLgn .
    (188) casesLgn -> caseLgn . casesLgn
    (189) casesLgn -> caseLgn . defcase
    (187) casesLgn -> . caseLgn
    (188) casesLgn -> . caseLgn casesLgn
    (189) casesLgn -> . caseLgn defcase
    (210) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (186) caseLgn -> . CASE LONG FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 187 (casesLgn -> caseLgn .)
    CASE            shift and go to state 331

    caseLgn                        shift and go to state 213
    casesLgn                       shift and go to state 329
    defcase                        shift and go to state 330

state 214

    (191) casesFlt -> caseFlt .
    (192) casesFlt -> caseFlt . casesFlt
    (193) casesFlt -> caseFlt . defcase
    (191) casesFlt -> . caseFlt
    (192) casesFlt -> . caseFlt casesFlt
    (193) casesFlt -> . caseFlt defcase
    (210) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (190) caseFlt -> . CASE FLOAT FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 191 (casesFlt -> caseFlt .)
    CASE            shift and go to state 334

    caseFlt                        shift and go to state 214
    casesFlt                       shift and go to state 332
    defcase                        shift and go to state 333

state 215

    (195) casesDob -> caseDob .
    (196) casesDob -> caseDob . casesDob
    (197) casesDob -> caseDob . defcase
    (195) casesDob -> . caseDob
    (196) casesDob -> . caseDob casesDob
    (197) casesDob -> . caseDob defcase
    (210) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (194) caseDob -> . CASE DOUBLE FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 195 (casesDob -> caseDob .)
    CASE            shift and go to state 337

    caseDob                        shift and go to state 215
    casesDob                       shift and go to state 335
    defcase                        shift and go to state 336

state 216

    (199) casesStr -> caseStr .
    (200) casesStr -> caseStr . casesStr
    (201) casesStr -> caseStr . defcase
    (199) casesStr -> . caseStr
    (200) casesStr -> . caseStr casesStr
    (201) casesStr -> . caseStr defcase
    (210) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (198) caseStr -> . CASE STRING FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 199 (casesStr -> caseStr .)
    CASE            shift and go to state 340

    caseStr                        shift and go to state 216
    casesStr                       shift and go to state 338
    defcase                        shift and go to state 339

state 217

    (203) casesChar -> caseChar .
    (204) casesChar -> caseChar . casesChar
    (205) casesChar -> caseChar . defcase
    (203) casesChar -> . caseChar
    (204) casesChar -> . caseChar casesChar
    (205) casesChar -> . caseChar defcase
    (210) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (202) caseChar -> . CASE CHAR FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 203 (casesChar -> caseChar .)
    CASE            shift and go to state 343

    caseChar                       shift and go to state 217
    casesChar                      shift and go to state 341
    defcase                        shift and go to state 342

state 218

    (207) casesBool -> caseBool .
    (208) casesBool -> caseBool . casesBool
    (209) casesBool -> caseBool . defcase
    (207) casesBool -> . caseBool
    (208) casesBool -> . caseBool casesBool
    (209) casesBool -> . caseBool defcase
    (210) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (206) caseBool -> . CASE booleanos FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 207 (casesBool -> caseBool .)
    CASE            shift and go to state 346

    caseBool                       shift and go to state 218
    casesBool                      shift and go to state 344
    defcase                        shift and go to state 345

state 219

    (182) caseInt -> CASE . INT FUNCION_FLECHA codeBlock
    (186) caseLgn -> CASE . LONG FUNCION_FLECHA codeBlock
    (190) caseFlt -> CASE . FLOAT FUNCION_FLECHA codeBlock
    (194) caseDob -> CASE . DOUBLE FUNCION_FLECHA codeBlock
    (198) caseStr -> CASE . STRING FUNCION_FLECHA codeBlock
    (202) caseChar -> CASE . CHAR FUNCION_FLECHA codeBlock
    (206) caseBool -> CASE . booleanos FUNCION_FLECHA codeBlock
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    INT             shift and go to state 347
    LONG            shift and go to state 348
    FLOAT           shift and go to state 349
    DOUBLE          shift and go to state 350
    STRING          shift and go to state 351
    CHAR            shift and go to state 352
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117

    booleanos                      shift and go to state 353
    startsWith                     shift and go to state 118

state 220

    (4) io -> VARIABLE PUNTO VARIABLE . PUNTO VARIABLE PUNTO READLINE

    PUNTO           shift and go to state 354


state 221

    (107) funcion -> DEF VARIABLE parametro IGUAL . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 355


state 222

    (108) funcion -> DEF VARIABLE parametro LLAVE_I . contenido LLAVE_D
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

    contenido                      shift and go to state 356
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 223

    (115) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (116) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (117) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (118) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (119) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I RETURN valor LLAVE_D
    (120) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (121) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (122) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I RETURN aritmetica LLAVE_D

    IGUAL           shift and go to state 357


state 224

    (123) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (124) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D

    IGUAL           shift and go to state 358


state 225

    (126) dectipo -> DOBLE_PUNTO . tipo
    (127) dectipoTupla -> DOBLE_PUNTO . PAR_I tipos PAR_D
    (84) tipo -> . CHARCLASS
    (85) tipo -> . STRINGCLASS
    (86) tipo -> . BOOLCLASS
    (87) tipo -> . INTCLASS
    (88) tipo -> . LONGCLASS
    (89) tipo -> . DOUBLECLASS
    (90) tipo -> . FLOATCLASS
    (91) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (92) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    PAR_I           shift and go to state 360
    CHARCLASS       shift and go to state 361
    STRINGCLASS     shift and go to state 362
    BOOLCLASS       shift and go to state 363
    INTCLASS        shift and go to state 364
    LONGCLASS       shift and go to state 365
    DOUBLECLASS     shift and go to state 366
    FLOATCLASS      shift and go to state 367
    ARRAYCLASS      shift and go to state 368
    LISTCLASS       shift and go to state 369

    tipo                           shift and go to state 359

state 226

    (112) parametro -> PAR_I PAR_D .

    IGUAL           reduce using rule 112 (parametro -> PAR_I PAR_D .)
    LLAVE_I         reduce using rule 112 (parametro -> PAR_I PAR_D .)
    DOBLE_PUNTO     reduce using rule 112 (parametro -> PAR_I PAR_D .)


state 227

    (113) parametros -> PAR_I declaracion . PAR_D
    (114) parametros -> PAR_I declaracion . PAR_D parametros

    PAR_D           shift and go to state 370


state 228

    (109) declaracion -> VARIABLE . DOBLE_PUNTO tipo
    (110) declaracion -> VARIABLE . DOBLE_PUNTO tipo IGUAL valor

    DOBLE_PUNTO     shift and go to state 371


state 229

    (216) elseif -> ELSE IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (217) elseif -> ELSE IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (220) condicional -> . valorC logicos condicional
    (221) condicional -> . valorC
    (222) valorC -> . VARIABLE
    (223) valorC -> . booleanos
    (224) valorC -> . relacional
    (225) valorC -> . NOT VARIABLE
    (226) valorC -> . NOT booleanos
    (227) valorC -> . NOT relacional
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (230) relacional -> . numeros comparacion numeros
    (231) relacional -> . aritmetica comparacion aritmetica
    (232) relacional -> . aritmetica comparacion numeros
    (233) relacional -> . numeros comparacion aritmetica
    (234) relacional -> . booleanos comparacion booleanos
    (235) relacional -> . STRING comparacion STRING
    (236) relacional -> . CHAR comparacion CHAR
    (237) relacional -> . VARIABLE comparacion numeros
    (238) relacional -> . numeros comparacion VARIABLE
    (239) relacional -> . VARIABLE comparacion booleanos
    (240) relacional -> . booleanos comparacion VARIABLE
    (241) relacional -> . VARIABLE comparacion STRING
    (242) relacional -> . STRING comparacion VARIABLE
    (243) relacional -> . VARIABLE comparacion CHAR
    (244) relacional -> . CHAR comparacion VARIABLE
    (245) relacional -> . VARIABLE comparacion VARIABLE
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VARIABLE        shift and go to state 166
    NOT             shift and go to state 169
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117
    STRING          shift and go to state 172
    CHAR            shift and go to state 173
    INT             shift and go to state 174
    LONG            shift and go to state 175
    FLOAT           shift and go to state 176
    DOUBLE          shift and go to state 177

    condicional                    shift and go to state 372
    valorC                         shift and go to state 165
    booleanos                      shift and go to state 167
    relacional                     shift and go to state 168
    startsWith                     shift and go to state 118
    numeros                        shift and go to state 170
    aritmetica                     shift and go to state 171
    suma                           shift and go to state 39
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 230

    (218) else -> ELSE LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 373


state 231

    (36) asignacion -> VAR VARIABLE IGUAL VARIABLE .
    (251) aritmetica -> VARIABLE . aritmeticos numeros
    (253) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (257) aritmetica -> VARIABLE . MAS numeros
    (259) aritmetica -> VARIABLE . MAS VARIABLE
    (147) castingcall -> VARIABLE . PUNTO castingfun
    (137) funcall -> VARIABLE . varparen
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD
    (138) varparen -> . PAR_I valores PAR_D
    (139) varparen -> . PAR_I PAR_D
    (140) varparen -> . varparen PAR_I valores PAR_D
    (141) varparen -> . varparen PAR_I PAR_D

    VAR             reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VAL             reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VARIABLE        reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PRINTLN         reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PRINT           reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    READLINE        reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    WHILE           reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    FOR             reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    IF              reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    INT             reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    DOUBLE          reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    LONG            reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    FLOAT           reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    STRING          reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    CHAR            reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    DEF             reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    $end            reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    RETURN          reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    CASE            reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    MAS             shift and go to state 62
    PUNTO           shift and go to state 196
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66
    PAR_I           shift and go to state 374

    aritmeticos                    shift and go to state 61
    varparen                       shift and go to state 59

state 232

    (38) asignacion -> VAR VARIABLE IGUAL aritmetica .
    (254) aritmetica -> aritmetica . aritmeticos numeros
    (255) aritmetica -> aritmetica . aritmeticos VARIABLE
    (260) aritmetica -> aritmetica . MAS numeros
    (261) aritmetica -> aritmetica . MAS VARIABLE
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD

    VAR             reduce using rule 38 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 38 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 38 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 38 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 38 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 38 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 38 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 38 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 38 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 38 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 38 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 38 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 38 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    STRING          reduce using rule 38 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    CHAR            reduce using rule 38 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    DEF             reduce using rule 38 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    $end            reduce using rule 38 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 38 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 38 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 38 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    MAS             shift and go to state 74
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66

    aritmeticos                    shift and go to state 73

state 233

    (40) asignacion -> VAR VARIABLE IGUAL returnfun .

    VAR             reduce using rule 40 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    VAL             reduce using rule 40 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    VARIABLE        reduce using rule 40 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    PRINTLN         reduce using rule 40 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    PRINT           reduce using rule 40 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    READLINE        reduce using rule 40 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    WHILE           reduce using rule 40 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    FOR             reduce using rule 40 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    IF              reduce using rule 40 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    INT             reduce using rule 40 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    DOUBLE          reduce using rule 40 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    LONG            reduce using rule 40 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    FLOAT           reduce using rule 40 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    STRING          reduce using rule 40 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    CHAR            reduce using rule 40 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    DEF             reduce using rule 40 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    $end            reduce using rule 40 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    LLAVE_D         reduce using rule 40 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    RETURN          reduce using rule 40 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    CASE            reduce using rule 40 (asignacion -> VAR VARIABLE IGUAL returnfun .)


state 234

    (165) asignacion -> VAR VARIABLE IGUAL tuple .

    VAR             reduce using rule 165 (asignacion -> VAR VARIABLE IGUAL tuple .)
    VAL             reduce using rule 165 (asignacion -> VAR VARIABLE IGUAL tuple .)
    VARIABLE        reduce using rule 165 (asignacion -> VAR VARIABLE IGUAL tuple .)
    PRINTLN         reduce using rule 165 (asignacion -> VAR VARIABLE IGUAL tuple .)
    PRINT           reduce using rule 165 (asignacion -> VAR VARIABLE IGUAL tuple .)
    READLINE        reduce using rule 165 (asignacion -> VAR VARIABLE IGUAL tuple .)
    WHILE           reduce using rule 165 (asignacion -> VAR VARIABLE IGUAL tuple .)
    FOR             reduce using rule 165 (asignacion -> VAR VARIABLE IGUAL tuple .)
    IF              reduce using rule 165 (asignacion -> VAR VARIABLE IGUAL tuple .)
    INT             reduce using rule 165 (asignacion -> VAR VARIABLE IGUAL tuple .)
    DOUBLE          reduce using rule 165 (asignacion -> VAR VARIABLE IGUAL tuple .)
    LONG            reduce using rule 165 (asignacion -> VAR VARIABLE IGUAL tuple .)
    FLOAT           reduce using rule 165 (asignacion -> VAR VARIABLE IGUAL tuple .)
    STRING          reduce using rule 165 (asignacion -> VAR VARIABLE IGUAL tuple .)
    CHAR            reduce using rule 165 (asignacion -> VAR VARIABLE IGUAL tuple .)
    DEF             reduce using rule 165 (asignacion -> VAR VARIABLE IGUAL tuple .)
    $end            reduce using rule 165 (asignacion -> VAR VARIABLE IGUAL tuple .)
    LLAVE_D         reduce using rule 165 (asignacion -> VAR VARIABLE IGUAL tuple .)
    RETURN          reduce using rule 165 (asignacion -> VAR VARIABLE IGUAL tuple .)
    CASE            reduce using rule 165 (asignacion -> VAR VARIABLE IGUAL tuple .)


state 235

    (334) asignacionLong -> VAR VARIABLE IGUAL longvalues .
    (346) floatvalues -> longvalues .

  ! reduce/reduce conflict for VAR resolved using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for IF resolved using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for INT resolved using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for CHAR resolved using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for DEF resolved using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for $end resolved using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    VAR             reduce using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    VAL             reduce using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    VARIABLE        reduce using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    PRINTLN         reduce using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    PRINT           reduce using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    READLINE        reduce using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    WHILE           reduce using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    FOR             reduce using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    IF              reduce using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    INT             reduce using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    DOUBLE          reduce using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    LONG            reduce using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    FLOAT           reduce using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    STRING          reduce using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    CHAR            reduce using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    DEF             reduce using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    $end            reduce using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    LLAVE_D         reduce using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    RETURN          reduce using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    CASE            reduce using rule 334 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)

  ! VAR             [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! VAL             [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! VARIABLE        [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! PRINTLN         [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! PRINT           [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! READLINE        [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! WHILE           [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! FOR             [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! IF              [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! INT             [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! DOUBLE          [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! LONG            [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! FLOAT           [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! STRING          [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! CHAR            [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! DEF             [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! $end            [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! LLAVE_D         [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! RETURN          [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! CASE            [ reduce using rule 346 (floatvalues -> longvalues .) ]


state 236

    (328) asignacionInt -> VAR VARIABLE IGUAL intvalues .
    (339) longvalues -> intvalues .

  ! reduce/reduce conflict for VAR resolved using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for IF resolved using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for INT resolved using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for CHAR resolved using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for DEF resolved using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for $end resolved using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    VAR             reduce using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    VAL             reduce using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    VARIABLE        reduce using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    PRINTLN         reduce using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    PRINT           reduce using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    READLINE        reduce using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    WHILE           reduce using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    FOR             reduce using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    IF              reduce using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    INT             reduce using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    DOUBLE          reduce using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    LONG            reduce using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    FLOAT           reduce using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    STRING          reduce using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    CHAR            reduce using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    DEF             reduce using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    $end            reduce using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    LLAVE_D         reduce using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    RETURN          reduce using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    CASE            reduce using rule 328 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)

  ! VAR             [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! VAL             [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! VARIABLE        [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! PRINTLN         [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! PRINT           [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! READLINE        [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! WHILE           [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! FOR             [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! IF              [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! INT             [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! DOUBLE          [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! LONG            [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! FLOAT           [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! STRING          [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! CHAR            [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! DEF             [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! $end            [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! LLAVE_D         [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! RETURN          [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! CASE            [ reduce using rule 339 (longvalues -> intvalues .) ]


state 237

    (341) asignacionFloat -> VAR VARIABLE IGUAL floatvalues .
    (353) doublevalues -> floatvalues .

  ! reduce/reduce conflict for VAR resolved using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for IF resolved using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for INT resolved using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for CHAR resolved using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for DEF resolved using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for $end resolved using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    VAR             reduce using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    VAL             reduce using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    VARIABLE        reduce using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    PRINTLN         reduce using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    PRINT           reduce using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    READLINE        reduce using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    WHILE           reduce using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    FOR             reduce using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    IF              reduce using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    INT             reduce using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    DOUBLE          reduce using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    LONG            reduce using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    FLOAT           reduce using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    STRING          reduce using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    CHAR            reduce using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    DEF             reduce using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    $end            reduce using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    LLAVE_D         reduce using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    RETURN          reduce using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    CASE            reduce using rule 341 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)

  ! VAR             [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! VAL             [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! VARIABLE        [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! PRINTLN         [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! PRINT           [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! READLINE        [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! WHILE           [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! FOR             [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! IF              [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! INT             [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! DOUBLE          [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! LONG            [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! FLOAT           [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! STRING          [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! CHAR            [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! DEF             [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! $end            [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! LLAVE_D         [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! RETURN          [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! CASE            [ reduce using rule 353 (doublevalues -> floatvalues .) ]


state 238

    (348) asignacionDouble -> VAR VARIABLE IGUAL doublevalues .

    VAR             reduce using rule 348 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    VAL             reduce using rule 348 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    VARIABLE        reduce using rule 348 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    PRINTLN         reduce using rule 348 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    PRINT           reduce using rule 348 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    READLINE        reduce using rule 348 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    WHILE           reduce using rule 348 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    FOR             reduce using rule 348 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    IF              reduce using rule 348 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    INT             reduce using rule 348 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    DOUBLE          reduce using rule 348 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    LONG            reduce using rule 348 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    FLOAT           reduce using rule 348 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    STRING          reduce using rule 348 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    CHAR            reduce using rule 348 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    DEF             reduce using rule 348 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    $end            reduce using rule 348 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    LLAVE_D         reduce using rule 348 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    RETURN          reduce using rule 348 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    CASE            reduce using rule 348 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)


state 239

    (61) asignacionString -> VAR VARIABLE IGUAL STRING .
    (356) stringCastLong -> STRING . PUNTO TO_LONG
    (355) stringCastInt -> STRING . PUNTO TO_INT
    (357) stringCastFloat -> STRING . PUNTO TO_FLOAT
    (358) stringCastDouble -> STRING . PUNTO TO_DOUBLE
    (276) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (296) sumStringChar -> STRING . MAS CHAR

    VAR             reduce using rule 61 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VAL             reduce using rule 61 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VARIABLE        reduce using rule 61 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PRINTLN         reduce using rule 61 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PRINT           reduce using rule 61 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    READLINE        reduce using rule 61 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    WHILE           reduce using rule 61 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    FOR             reduce using rule 61 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    IF              reduce using rule 61 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    INT             reduce using rule 61 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    DOUBLE          reduce using rule 61 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    LONG            reduce using rule 61 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    FLOAT           reduce using rule 61 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    STRING          reduce using rule 61 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    CHAR            reduce using rule 61 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    DEF             reduce using rule 61 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    $end            reduce using rule 61 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    LLAVE_D         reduce using rule 61 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    RETURN          reduce using rule 61 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    CASE            reduce using rule 61 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PUNTO           shift and go to state 375
    MAS             shift and go to state 103


state 240

    (68) asignacionChar -> VAR VARIABLE IGUAL CHAR .
    (295) sumIntChar -> CHAR . MAS INT
    (297) sumStringChar -> CHAR . MAS STRING
    (293) sumDoubleChar -> CHAR . MAS DOUBLE

    VAR             reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VAL             reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VARIABLE        reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    PRINTLN         reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    PRINT           reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    READLINE        reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    WHILE           reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    FOR             reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    IF              reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    INT             reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    DOUBLE          reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    LONG            reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    FLOAT           reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    STRING          reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    CHAR            reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    DEF             reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    $end            reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    LLAVE_D         reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    RETURN          reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    CASE            reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    MAS             shift and go to state 104


state 241

    (74) asignacionBoolean -> VAR VARIABLE IGUAL booleanos .

    VAR             reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VAL             reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    PRINTLN         reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    READLINE        reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    FOR             reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    IF              reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    INT             reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    DOUBLE          reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    LONG            reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    FLOAT           reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    STRING          reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    CHAR            reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    DEF             reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    $end            reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    LLAVE_D         reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    RETURN          reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)


state 242

    (152) array -> VAR VARIABLE IGUAL ARRAYCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 376


state 243

    (164) tuple -> PAR_I . valores PAR_D
    (162) valores -> . valor
    (163) valores -> . valor COMA valores
    (93) valor -> . STRING
    (94) valor -> . CHAR
    (95) valor -> . VARIABLE
    (96) valor -> . numeros
    (97) valor -> . booleanos
    (98) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (99) valor -> . VARIABLE PAR_I INT PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 126
    CHAR            shift and go to state 127
    VARIABLE        shift and go to state 121
    INT             shift and go to state 136
    LONG            shift and go to state 129
    FLOAT           shift and go to state 130
    DOUBLE          shift and go to state 131
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117

    valores                        shift and go to state 377
    valor                          shift and go to state 124
    numeros                        shift and go to state 128
    booleanos                      shift and go to state 113
    startsWith                     shift and go to state 118

state 244

    (159) list -> VAR VARIABLE IGUAL LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 378


state 245

    (262) aritmetica -> INT . MAS INT
    (332) intvalues -> INT .
    (103) numeros -> INT .
    (294) sumIntChar -> INT . MAS CHAR
    (290) sumIntDouble -> INT . MAS DOUBLE

  ! shift/reduce conflict for MAS resolved as shift
    MAS             shift and go to state 90
    VAR             reduce using rule 332 (intvalues -> INT .)
    VAL             reduce using rule 332 (intvalues -> INT .)
    VARIABLE        reduce using rule 332 (intvalues -> INT .)
    PRINTLN         reduce using rule 332 (intvalues -> INT .)
    PRINT           reduce using rule 332 (intvalues -> INT .)
    READLINE        reduce using rule 332 (intvalues -> INT .)
    WHILE           reduce using rule 332 (intvalues -> INT .)
    FOR             reduce using rule 332 (intvalues -> INT .)
    IF              reduce using rule 332 (intvalues -> INT .)
    INT             reduce using rule 332 (intvalues -> INT .)
    DOUBLE          reduce using rule 332 (intvalues -> INT .)
    LONG            reduce using rule 332 (intvalues -> INT .)
    FLOAT           reduce using rule 332 (intvalues -> INT .)
    STRING          reduce using rule 332 (intvalues -> INT .)
    CHAR            reduce using rule 332 (intvalues -> INT .)
    DEF             reduce using rule 332 (intvalues -> INT .)
    $end            reduce using rule 332 (intvalues -> INT .)
    LLAVE_D         reduce using rule 332 (intvalues -> INT .)
    RETURN          reduce using rule 332 (intvalues -> INT .)
    CASE            reduce using rule 332 (intvalues -> INT .)
    MENOS           reduce using rule 103 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 103 (numeros -> INT .)
    DIVISION        reduce using rule 103 (numeros -> INT .)
    MOD             reduce using rule 103 (numeros -> INT .)

  ! MAS             [ reduce using rule 103 (numeros -> INT .) ]


state 246

    (263) aritmetica -> DOUBLE . MAS DOUBLE
    (352) doublevalues -> DOUBLE .
    (106) numeros -> DOUBLE .
    (291) sumIntDouble -> DOUBLE . MAS INT
    (292) sumDoubleChar -> DOUBLE . MAS CHAR

  ! shift/reduce conflict for MAS resolved as shift
    MAS             shift and go to state 99
    VAR             reduce using rule 352 (doublevalues -> DOUBLE .)
    VAL             reduce using rule 352 (doublevalues -> DOUBLE .)
    VARIABLE        reduce using rule 352 (doublevalues -> DOUBLE .)
    PRINTLN         reduce using rule 352 (doublevalues -> DOUBLE .)
    PRINT           reduce using rule 352 (doublevalues -> DOUBLE .)
    READLINE        reduce using rule 352 (doublevalues -> DOUBLE .)
    WHILE           reduce using rule 352 (doublevalues -> DOUBLE .)
    FOR             reduce using rule 352 (doublevalues -> DOUBLE .)
    IF              reduce using rule 352 (doublevalues -> DOUBLE .)
    INT             reduce using rule 352 (doublevalues -> DOUBLE .)
    DOUBLE          reduce using rule 352 (doublevalues -> DOUBLE .)
    LONG            reduce using rule 352 (doublevalues -> DOUBLE .)
    FLOAT           reduce using rule 352 (doublevalues -> DOUBLE .)
    STRING          reduce using rule 352 (doublevalues -> DOUBLE .)
    CHAR            reduce using rule 352 (doublevalues -> DOUBLE .)
    DEF             reduce using rule 352 (doublevalues -> DOUBLE .)
    $end            reduce using rule 352 (doublevalues -> DOUBLE .)
    LLAVE_D         reduce using rule 352 (doublevalues -> DOUBLE .)
    RETURN          reduce using rule 352 (doublevalues -> DOUBLE .)
    CASE            reduce using rule 352 (doublevalues -> DOUBLE .)
    MENOS           reduce using rule 106 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 106 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 106 (numeros -> DOUBLE .)
    MOD             reduce using rule 106 (numeros -> DOUBLE .)

  ! MAS             [ reduce using rule 106 (numeros -> DOUBLE .) ]


state 247

    (264) aritmetica -> LONG . MAS LONG
    (338) longvalues -> LONG .
    (104) numeros -> LONG .

  ! shift/reduce conflict for MAS resolved as shift
    MAS             shift and go to state 100
    VAR             reduce using rule 338 (longvalues -> LONG .)
    VAL             reduce using rule 338 (longvalues -> LONG .)
    VARIABLE        reduce using rule 338 (longvalues -> LONG .)
    PRINTLN         reduce using rule 338 (longvalues -> LONG .)
    PRINT           reduce using rule 338 (longvalues -> LONG .)
    READLINE        reduce using rule 338 (longvalues -> LONG .)
    WHILE           reduce using rule 338 (longvalues -> LONG .)
    FOR             reduce using rule 338 (longvalues -> LONG .)
    IF              reduce using rule 338 (longvalues -> LONG .)
    INT             reduce using rule 338 (longvalues -> LONG .)
    DOUBLE          reduce using rule 338 (longvalues -> LONG .)
    LONG            reduce using rule 338 (longvalues -> LONG .)
    FLOAT           reduce using rule 338 (longvalues -> LONG .)
    STRING          reduce using rule 338 (longvalues -> LONG .)
    CHAR            reduce using rule 338 (longvalues -> LONG .)
    DEF             reduce using rule 338 (longvalues -> LONG .)
    $end            reduce using rule 338 (longvalues -> LONG .)
    LLAVE_D         reduce using rule 338 (longvalues -> LONG .)
    RETURN          reduce using rule 338 (longvalues -> LONG .)
    CASE            reduce using rule 338 (longvalues -> LONG .)
    MENOS           reduce using rule 104 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 104 (numeros -> LONG .)
    DIVISION        reduce using rule 104 (numeros -> LONG .)
    MOD             reduce using rule 104 (numeros -> LONG .)

  ! MAS             [ reduce using rule 104 (numeros -> LONG .) ]


state 248

    (265) aritmetica -> FLOAT . MAS FLOAT
    (345) floatvalues -> FLOAT .
    (105) numeros -> FLOAT .

  ! shift/reduce conflict for MAS resolved as shift
    MAS             shift and go to state 101
    VAR             reduce using rule 345 (floatvalues -> FLOAT .)
    VAL             reduce using rule 345 (floatvalues -> FLOAT .)
    VARIABLE        reduce using rule 345 (floatvalues -> FLOAT .)
    PRINTLN         reduce using rule 345 (floatvalues -> FLOAT .)
    PRINT           reduce using rule 345 (floatvalues -> FLOAT .)
    READLINE        reduce using rule 345 (floatvalues -> FLOAT .)
    WHILE           reduce using rule 345 (floatvalues -> FLOAT .)
    FOR             reduce using rule 345 (floatvalues -> FLOAT .)
    IF              reduce using rule 345 (floatvalues -> FLOAT .)
    INT             reduce using rule 345 (floatvalues -> FLOAT .)
    DOUBLE          reduce using rule 345 (floatvalues -> FLOAT .)
    LONG            reduce using rule 345 (floatvalues -> FLOAT .)
    FLOAT           reduce using rule 345 (floatvalues -> FLOAT .)
    STRING          reduce using rule 345 (floatvalues -> FLOAT .)
    CHAR            reduce using rule 345 (floatvalues -> FLOAT .)
    DEF             reduce using rule 345 (floatvalues -> FLOAT .)
    $end            reduce using rule 345 (floatvalues -> FLOAT .)
    LLAVE_D         reduce using rule 345 (floatvalues -> FLOAT .)
    RETURN          reduce using rule 345 (floatvalues -> FLOAT .)
    CASE            reduce using rule 345 (floatvalues -> FLOAT .)
    MENOS           reduce using rule 105 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 105 (numeros -> FLOAT .)
    DIVISION        reduce using rule 105 (numeros -> FLOAT .)
    MOD             reduce using rule 105 (numeros -> FLOAT .)

  ! MAS             [ reduce using rule 105 (numeros -> FLOAT .) ]


state 249

    (340) longvalues -> stringCastLong .

    VAR             reduce using rule 340 (longvalues -> stringCastLong .)
    VAL             reduce using rule 340 (longvalues -> stringCastLong .)
    VARIABLE        reduce using rule 340 (longvalues -> stringCastLong .)
    PRINTLN         reduce using rule 340 (longvalues -> stringCastLong .)
    PRINT           reduce using rule 340 (longvalues -> stringCastLong .)
    READLINE        reduce using rule 340 (longvalues -> stringCastLong .)
    WHILE           reduce using rule 340 (longvalues -> stringCastLong .)
    FOR             reduce using rule 340 (longvalues -> stringCastLong .)
    IF              reduce using rule 340 (longvalues -> stringCastLong .)
    INT             reduce using rule 340 (longvalues -> stringCastLong .)
    DOUBLE          reduce using rule 340 (longvalues -> stringCastLong .)
    LONG            reduce using rule 340 (longvalues -> stringCastLong .)
    FLOAT           reduce using rule 340 (longvalues -> stringCastLong .)
    STRING          reduce using rule 340 (longvalues -> stringCastLong .)
    CHAR            reduce using rule 340 (longvalues -> stringCastLong .)
    DEF             reduce using rule 340 (longvalues -> stringCastLong .)
    $end            reduce using rule 340 (longvalues -> stringCastLong .)
    LLAVE_D         reduce using rule 340 (longvalues -> stringCastLong .)
    RETURN          reduce using rule 340 (longvalues -> stringCastLong .)
    CASE            reduce using rule 340 (longvalues -> stringCastLong .)


state 250

    (333) intvalues -> stringCastInt .

    VAR             reduce using rule 333 (intvalues -> stringCastInt .)
    VAL             reduce using rule 333 (intvalues -> stringCastInt .)
    VARIABLE        reduce using rule 333 (intvalues -> stringCastInt .)
    PRINTLN         reduce using rule 333 (intvalues -> stringCastInt .)
    PRINT           reduce using rule 333 (intvalues -> stringCastInt .)
    READLINE        reduce using rule 333 (intvalues -> stringCastInt .)
    WHILE           reduce using rule 333 (intvalues -> stringCastInt .)
    FOR             reduce using rule 333 (intvalues -> stringCastInt .)
    IF              reduce using rule 333 (intvalues -> stringCastInt .)
    INT             reduce using rule 333 (intvalues -> stringCastInt .)
    DOUBLE          reduce using rule 333 (intvalues -> stringCastInt .)
    LONG            reduce using rule 333 (intvalues -> stringCastInt .)
    FLOAT           reduce using rule 333 (intvalues -> stringCastInt .)
    STRING          reduce using rule 333 (intvalues -> stringCastInt .)
    CHAR            reduce using rule 333 (intvalues -> stringCastInt .)
    DEF             reduce using rule 333 (intvalues -> stringCastInt .)
    $end            reduce using rule 333 (intvalues -> stringCastInt .)
    LLAVE_D         reduce using rule 333 (intvalues -> stringCastInt .)
    RETURN          reduce using rule 333 (intvalues -> stringCastInt .)
    CASE            reduce using rule 333 (intvalues -> stringCastInt .)


state 251

    (347) floatvalues -> stringCastFloat .

    VAR             reduce using rule 347 (floatvalues -> stringCastFloat .)
    VAL             reduce using rule 347 (floatvalues -> stringCastFloat .)
    VARIABLE        reduce using rule 347 (floatvalues -> stringCastFloat .)
    PRINTLN         reduce using rule 347 (floatvalues -> stringCastFloat .)
    PRINT           reduce using rule 347 (floatvalues -> stringCastFloat .)
    READLINE        reduce using rule 347 (floatvalues -> stringCastFloat .)
    WHILE           reduce using rule 347 (floatvalues -> stringCastFloat .)
    FOR             reduce using rule 347 (floatvalues -> stringCastFloat .)
    IF              reduce using rule 347 (floatvalues -> stringCastFloat .)
    INT             reduce using rule 347 (floatvalues -> stringCastFloat .)
    DOUBLE          reduce using rule 347 (floatvalues -> stringCastFloat .)
    LONG            reduce using rule 347 (floatvalues -> stringCastFloat .)
    FLOAT           reduce using rule 347 (floatvalues -> stringCastFloat .)
    STRING          reduce using rule 347 (floatvalues -> stringCastFloat .)
    CHAR            reduce using rule 347 (floatvalues -> stringCastFloat .)
    DEF             reduce using rule 347 (floatvalues -> stringCastFloat .)
    $end            reduce using rule 347 (floatvalues -> stringCastFloat .)
    LLAVE_D         reduce using rule 347 (floatvalues -> stringCastFloat .)
    RETURN          reduce using rule 347 (floatvalues -> stringCastFloat .)
    CASE            reduce using rule 347 (floatvalues -> stringCastFloat .)


state 252

    (354) doublevalues -> stringCastDouble .

    VAR             reduce using rule 354 (doublevalues -> stringCastDouble .)
    VAL             reduce using rule 354 (doublevalues -> stringCastDouble .)
    VARIABLE        reduce using rule 354 (doublevalues -> stringCastDouble .)
    PRINTLN         reduce using rule 354 (doublevalues -> stringCastDouble .)
    PRINT           reduce using rule 354 (doublevalues -> stringCastDouble .)
    READLINE        reduce using rule 354 (doublevalues -> stringCastDouble .)
    WHILE           reduce using rule 354 (doublevalues -> stringCastDouble .)
    FOR             reduce using rule 354 (doublevalues -> stringCastDouble .)
    IF              reduce using rule 354 (doublevalues -> stringCastDouble .)
    INT             reduce using rule 354 (doublevalues -> stringCastDouble .)
    DOUBLE          reduce using rule 354 (doublevalues -> stringCastDouble .)
    LONG            reduce using rule 354 (doublevalues -> stringCastDouble .)
    FLOAT           reduce using rule 354 (doublevalues -> stringCastDouble .)
    STRING          reduce using rule 354 (doublevalues -> stringCastDouble .)
    CHAR            reduce using rule 354 (doublevalues -> stringCastDouble .)
    DEF             reduce using rule 354 (doublevalues -> stringCastDouble .)
    $end            reduce using rule 354 (doublevalues -> stringCastDouble .)
    LLAVE_D         reduce using rule 354 (doublevalues -> stringCastDouble .)
    RETURN          reduce using rule 354 (doublevalues -> stringCastDouble .)
    CASE            reduce using rule 354 (doublevalues -> stringCastDouble .)


state 253

    (306) asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .

    VAR             reduce using rule 306 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    VAL             reduce using rule 306 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    VARIABLE        reduce using rule 306 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    PRINTLN         reduce using rule 306 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    PRINT           reduce using rule 306 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    READLINE        reduce using rule 306 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    WHILE           reduce using rule 306 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    FOR             reduce using rule 306 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    IF              reduce using rule 306 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    INT             reduce using rule 306 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    DOUBLE          reduce using rule 306 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    LONG            reduce using rule 306 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    FLOAT           reduce using rule 306 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    STRING          reduce using rule 306 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    CHAR            reduce using rule 306 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    DEF             reduce using rule 306 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    $end            reduce using rule 306 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    LLAVE_D         reduce using rule 306 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    RETURN          reduce using rule 306 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    CASE            reduce using rule 306 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)


state 254

    (51) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL VARIABLE
    (335) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL longvalues

    IGUAL           shift and go to state 379


state 255

    (53) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS . IGUAL VARIABLE
    (329) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS . IGUAL intvalues
    (304) asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS . IGUAL sumIntChar

    IGUAL           shift and go to state 380


state 256

    (56) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL VARIABLE
    (342) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL floatvalues

    IGUAL           shift and go to state 381


state 257

    (58) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL VARIABLE
    (349) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL doublevalues
    (298) asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL sumIntDouble
    (300) asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL sumDoubleChar

    IGUAL           shift and go to state 382


state 258

    (62) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL STRING
    (65) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL VARIABLE
    (302) asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL sumStringChar

    IGUAL           shift and go to state 383


state 259

    (69) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL CHAR
    (72) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 384


state 260

    (75) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL booleanos
    (78) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 385


state 261

    (153) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (270) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    CORCHETE_I      shift and go to state 386


state 262

    (308) dectupla -> PAR_I . STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
    (309) dectupla -> PAR_I . STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
    (310) dectupla -> PAR_I . STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
    (311) dectupla -> PAR_I . STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D
    (312) dectupla -> PAR_I . FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
    (313) dectupla -> PAR_I . FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
    (314) dectupla -> PAR_I . FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
    (315) dectupla -> PAR_I . FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D
    (316) dectupla -> PAR_I . DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
    (317) dectupla -> PAR_I . DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
    (318) dectupla -> PAR_I . DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
    (319) dectupla -> PAR_I . DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D
    (320) dectupla -> PAR_I . LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
    (321) dectupla -> PAR_I . LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
    (322) dectupla -> PAR_I . LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
    (323) dectupla -> PAR_I . LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D
    (324) dectupla -> PAR_I . INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
    (325) dectupla -> PAR_I . INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
    (326) dectupla -> PAR_I . INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
    (327) dectupla -> PAR_I . INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    STRINGCLASS     shift and go to state 387
    FLOATCLASS      shift and go to state 391
    DOUBLECLASS     shift and go to state 390
    LONGCLASS       shift and go to state 389
    INTCLASS        shift and go to state 388


state 263

    (281) listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS . CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (279) listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS . CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    CORCHETE_I      shift and go to state 392


state 264

    (37) asignacion -> VAL VARIABLE IGUAL VARIABLE .
    (251) aritmetica -> VARIABLE . aritmeticos numeros
    (253) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (257) aritmetica -> VARIABLE . MAS numeros
    (259) aritmetica -> VARIABLE . MAS VARIABLE
    (147) castingcall -> VARIABLE . PUNTO castingfun
    (137) funcall -> VARIABLE . varparen
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD
    (138) varparen -> . PAR_I valores PAR_D
    (139) varparen -> . PAR_I PAR_D
    (140) varparen -> . varparen PAR_I valores PAR_D
    (141) varparen -> . varparen PAR_I PAR_D

    VAR             reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VAL             reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VARIABLE        reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PRINTLN         reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PRINT           reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    READLINE        reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    WHILE           reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    FOR             reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    IF              reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    INT             reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    DOUBLE          reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    LONG            reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    FLOAT           reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    STRING          reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    CHAR            reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    DEF             reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    $end            reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    RETURN          reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    CASE            reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    MAS             shift and go to state 62
    PUNTO           shift and go to state 196
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66
    PAR_I           shift and go to state 374

    aritmeticos                    shift and go to state 61
    varparen                       shift and go to state 59

state 265

    (39) asignacion -> VAL VARIABLE IGUAL aritmetica .
    (254) aritmetica -> aritmetica . aritmeticos numeros
    (255) aritmetica -> aritmetica . aritmeticos VARIABLE
    (260) aritmetica -> aritmetica . MAS numeros
    (261) aritmetica -> aritmetica . MAS VARIABLE
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD

    VAR             reduce using rule 39 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 39 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 39 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 39 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 39 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 39 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 39 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 39 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 39 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 39 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 39 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 39 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 39 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    STRING          reduce using rule 39 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    CHAR            reduce using rule 39 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    DEF             reduce using rule 39 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    $end            reduce using rule 39 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 39 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 39 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 39 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    MAS             shift and go to state 74
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66

    aritmeticos                    shift and go to state 73

state 266

    (41) asignacion -> VAL VARIABLE IGUAL returnfun .

    VAR             reduce using rule 41 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    VAL             reduce using rule 41 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    VARIABLE        reduce using rule 41 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    PRINTLN         reduce using rule 41 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    PRINT           reduce using rule 41 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    READLINE        reduce using rule 41 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    WHILE           reduce using rule 41 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    FOR             reduce using rule 41 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    IF              reduce using rule 41 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    INT             reduce using rule 41 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    DOUBLE          reduce using rule 41 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    LONG            reduce using rule 41 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    FLOAT           reduce using rule 41 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    STRING          reduce using rule 41 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    CHAR            reduce using rule 41 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    DEF             reduce using rule 41 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    $end            reduce using rule 41 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    LLAVE_D         reduce using rule 41 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    RETURN          reduce using rule 41 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    CASE            reduce using rule 41 (asignacion -> VAL VARIABLE IGUAL returnfun .)


state 267

    (166) asignacion -> VAL VARIABLE IGUAL tuple .

    VAR             reduce using rule 166 (asignacion -> VAL VARIABLE IGUAL tuple .)
    VAL             reduce using rule 166 (asignacion -> VAL VARIABLE IGUAL tuple .)
    VARIABLE        reduce using rule 166 (asignacion -> VAL VARIABLE IGUAL tuple .)
    PRINTLN         reduce using rule 166 (asignacion -> VAL VARIABLE IGUAL tuple .)
    PRINT           reduce using rule 166 (asignacion -> VAL VARIABLE IGUAL tuple .)
    READLINE        reduce using rule 166 (asignacion -> VAL VARIABLE IGUAL tuple .)
    WHILE           reduce using rule 166 (asignacion -> VAL VARIABLE IGUAL tuple .)
    FOR             reduce using rule 166 (asignacion -> VAL VARIABLE IGUAL tuple .)
    IF              reduce using rule 166 (asignacion -> VAL VARIABLE IGUAL tuple .)
    INT             reduce using rule 166 (asignacion -> VAL VARIABLE IGUAL tuple .)
    DOUBLE          reduce using rule 166 (asignacion -> VAL VARIABLE IGUAL tuple .)
    LONG            reduce using rule 166 (asignacion -> VAL VARIABLE IGUAL tuple .)
    FLOAT           reduce using rule 166 (asignacion -> VAL VARIABLE IGUAL tuple .)
    STRING          reduce using rule 166 (asignacion -> VAL VARIABLE IGUAL tuple .)
    CHAR            reduce using rule 166 (asignacion -> VAL VARIABLE IGUAL tuple .)
    DEF             reduce using rule 166 (asignacion -> VAL VARIABLE IGUAL tuple .)
    $end            reduce using rule 166 (asignacion -> VAL VARIABLE IGUAL tuple .)
    LLAVE_D         reduce using rule 166 (asignacion -> VAL VARIABLE IGUAL tuple .)
    RETURN          reduce using rule 166 (asignacion -> VAL VARIABLE IGUAL tuple .)
    CASE            reduce using rule 166 (asignacion -> VAL VARIABLE IGUAL tuple .)


state 268

    (336) asignacionLong -> VAL VARIABLE IGUAL longvalues .
    (346) floatvalues -> longvalues .

  ! reduce/reduce conflict for VAR resolved using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for IF resolved using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for INT resolved using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for CHAR resolved using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for DEF resolved using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for $end resolved using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    VAR             reduce using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    VAL             reduce using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    VARIABLE        reduce using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    PRINTLN         reduce using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    PRINT           reduce using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    READLINE        reduce using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    WHILE           reduce using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    FOR             reduce using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    IF              reduce using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    INT             reduce using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    DOUBLE          reduce using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    LONG            reduce using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    FLOAT           reduce using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    STRING          reduce using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    CHAR            reduce using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    DEF             reduce using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    $end            reduce using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    LLAVE_D         reduce using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    RETURN          reduce using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    CASE            reduce using rule 336 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)

  ! VAR             [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! VAL             [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! VARIABLE        [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! PRINTLN         [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! PRINT           [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! READLINE        [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! WHILE           [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! FOR             [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! IF              [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! INT             [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! DOUBLE          [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! LONG            [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! FLOAT           [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! STRING          [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! CHAR            [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! DEF             [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! $end            [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! LLAVE_D         [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! RETURN          [ reduce using rule 346 (floatvalues -> longvalues .) ]
  ! CASE            [ reduce using rule 346 (floatvalues -> longvalues .) ]


state 269

    (330) asignacionInt -> VAL VARIABLE IGUAL intvalues .
    (339) longvalues -> intvalues .

  ! reduce/reduce conflict for VAR resolved using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for IF resolved using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for INT resolved using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for CHAR resolved using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for DEF resolved using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for $end resolved using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    VAR             reduce using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    VAL             reduce using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    VARIABLE        reduce using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    PRINTLN         reduce using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    PRINT           reduce using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    READLINE        reduce using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    WHILE           reduce using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    FOR             reduce using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    IF              reduce using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    INT             reduce using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    DOUBLE          reduce using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    LONG            reduce using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    FLOAT           reduce using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    STRING          reduce using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    CHAR            reduce using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    DEF             reduce using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    $end            reduce using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    LLAVE_D         reduce using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    RETURN          reduce using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    CASE            reduce using rule 330 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)

  ! VAR             [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! VAL             [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! VARIABLE        [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! PRINTLN         [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! PRINT           [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! READLINE        [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! WHILE           [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! FOR             [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! IF              [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! INT             [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! DOUBLE          [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! LONG            [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! FLOAT           [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! STRING          [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! CHAR            [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! DEF             [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! $end            [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! LLAVE_D         [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! RETURN          [ reduce using rule 339 (longvalues -> intvalues .) ]
  ! CASE            [ reduce using rule 339 (longvalues -> intvalues .) ]


state 270

    (343) asignacionFloat -> VAL VARIABLE IGUAL floatvalues .
    (353) doublevalues -> floatvalues .

  ! reduce/reduce conflict for VAR resolved using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for IF resolved using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for INT resolved using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for CHAR resolved using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for DEF resolved using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for $end resolved using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    VAR             reduce using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    VAL             reduce using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    VARIABLE        reduce using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    PRINTLN         reduce using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    PRINT           reduce using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    READLINE        reduce using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    WHILE           reduce using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    FOR             reduce using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    IF              reduce using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    INT             reduce using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    DOUBLE          reduce using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    LONG            reduce using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    FLOAT           reduce using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    STRING          reduce using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    CHAR            reduce using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    DEF             reduce using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    $end            reduce using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    LLAVE_D         reduce using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    RETURN          reduce using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    CASE            reduce using rule 343 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)

  ! VAR             [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! VAL             [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! VARIABLE        [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! PRINTLN         [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! PRINT           [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! READLINE        [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! WHILE           [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! FOR             [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! IF              [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! INT             [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! DOUBLE          [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! LONG            [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! FLOAT           [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! STRING          [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! CHAR            [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! DEF             [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! $end            [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! LLAVE_D         [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! RETURN          [ reduce using rule 353 (doublevalues -> floatvalues .) ]
  ! CASE            [ reduce using rule 353 (doublevalues -> floatvalues .) ]


state 271

    (350) asignacionDouble -> VAL VARIABLE IGUAL doublevalues .

    VAR             reduce using rule 350 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    VAL             reduce using rule 350 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    VARIABLE        reduce using rule 350 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    PRINTLN         reduce using rule 350 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    PRINT           reduce using rule 350 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    READLINE        reduce using rule 350 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    WHILE           reduce using rule 350 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    FOR             reduce using rule 350 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    IF              reduce using rule 350 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    INT             reduce using rule 350 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    DOUBLE          reduce using rule 350 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    LONG            reduce using rule 350 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    FLOAT           reduce using rule 350 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    STRING          reduce using rule 350 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    CHAR            reduce using rule 350 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    DEF             reduce using rule 350 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    $end            reduce using rule 350 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    LLAVE_D         reduce using rule 350 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    RETURN          reduce using rule 350 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    CASE            reduce using rule 350 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)


state 272

    (63) asignacionString -> VAL VARIABLE IGUAL STRING .
    (356) stringCastLong -> STRING . PUNTO TO_LONG
    (355) stringCastInt -> STRING . PUNTO TO_INT
    (357) stringCastFloat -> STRING . PUNTO TO_FLOAT
    (358) stringCastDouble -> STRING . PUNTO TO_DOUBLE
    (276) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (296) sumStringChar -> STRING . MAS CHAR

    VAR             reduce using rule 63 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VAL             reduce using rule 63 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VARIABLE        reduce using rule 63 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PRINTLN         reduce using rule 63 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PRINT           reduce using rule 63 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    READLINE        reduce using rule 63 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    WHILE           reduce using rule 63 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    FOR             reduce using rule 63 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    IF              reduce using rule 63 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    INT             reduce using rule 63 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    DOUBLE          reduce using rule 63 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    LONG            reduce using rule 63 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    FLOAT           reduce using rule 63 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    STRING          reduce using rule 63 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    CHAR            reduce using rule 63 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    DEF             reduce using rule 63 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    $end            reduce using rule 63 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    LLAVE_D         reduce using rule 63 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    RETURN          reduce using rule 63 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    CASE            reduce using rule 63 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PUNTO           shift and go to state 375
    MAS             shift and go to state 103


state 273

    (70) asignacionChar -> VAL VARIABLE IGUAL CHAR .
    (295) sumIntChar -> CHAR . MAS INT
    (297) sumStringChar -> CHAR . MAS STRING
    (293) sumDoubleChar -> CHAR . MAS DOUBLE

    VAR             reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VAL             reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VARIABLE        reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    PRINTLN         reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    PRINT           reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    READLINE        reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    WHILE           reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    FOR             reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    IF              reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    INT             reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    DOUBLE          reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    LONG            reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    FLOAT           reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    STRING          reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    CHAR            reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    DEF             reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    $end            reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    LLAVE_D         reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    RETURN          reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    CASE            reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    MAS             shift and go to state 104


state 274

    (76) asignacionBoolean -> VAL VARIABLE IGUAL booleanos .

    VAR             reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VAL             reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    PRINTLN         reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    READLINE        reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    FOR             reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    IF              reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    INT             reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    DOUBLE          reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    LONG            reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    FLOAT           reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    STRING          reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    CHAR            reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    DEF             reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    $end            reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    LLAVE_D         reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    RETURN          reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)


state 275

    (154) array -> VAL VARIABLE IGUAL ARRAYCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 393


state 276

    (158) list -> VAL VARIABLE IGUAL LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 394


state 277

    (307) asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .

    VAR             reduce using rule 307 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    VAL             reduce using rule 307 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    VARIABLE        reduce using rule 307 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    PRINTLN         reduce using rule 307 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    PRINT           reduce using rule 307 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    READLINE        reduce using rule 307 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    WHILE           reduce using rule 307 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    FOR             reduce using rule 307 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    IF              reduce using rule 307 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    INT             reduce using rule 307 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    DOUBLE          reduce using rule 307 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    LONG            reduce using rule 307 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    FLOAT           reduce using rule 307 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    STRING          reduce using rule 307 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    CHAR            reduce using rule 307 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    DEF             reduce using rule 307 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    $end            reduce using rule 307 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    LLAVE_D         reduce using rule 307 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    RETURN          reduce using rule 307 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    CASE            reduce using rule 307 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)


state 278

    (52) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL VARIABLE
    (337) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL longvalues

    IGUAL           shift and go to state 395


state 279

    (54) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS . IGUAL VARIABLE
    (331) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS . IGUAL intvalues
    (305) asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS . IGUAL sumIntChar

    IGUAL           shift and go to state 396


state 280

    (57) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL VARIABLE
    (344) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL floatvalues

    IGUAL           shift and go to state 397


state 281

    (59) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL VARIABLE
    (351) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL doublevalues
    (299) asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL sumIntDouble
    (301) asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL sumDoubleChar

    IGUAL           shift and go to state 398


state 282

    (64) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL STRING
    (66) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL VARIABLE
    (303) asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL sumStringChar

    IGUAL           shift and go to state 399


state 283

    (71) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL CHAR
    (73) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 400


state 284

    (77) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL booleanos
    (79) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 401


state 285

    (155) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 402


state 286

    (280) listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS . CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS . CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    CORCHETE_I      shift and go to state 403


state 287

    (132) impresion -> PRINTLN PAR_I valorI PAR_D .

    VAR             reduce using rule 132 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VAL             reduce using rule 132 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VARIABLE        reduce using rule 132 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    PRINTLN         reduce using rule 132 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    PRINT           reduce using rule 132 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    READLINE        reduce using rule 132 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    WHILE           reduce using rule 132 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    FOR             reduce using rule 132 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    IF              reduce using rule 132 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    INT             reduce using rule 132 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    DOUBLE          reduce using rule 132 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    LONG            reduce using rule 132 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    FLOAT           reduce using rule 132 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    STRING          reduce using rule 132 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    CHAR            reduce using rule 132 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    DEF             reduce using rule 132 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    $end            reduce using rule 132 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    LLAVE_D         reduce using rule 132 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    RETURN          reduce using rule 132 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    CASE            reduce using rule 132 (impresion -> PRINTLN PAR_I valorI PAR_D .)


state 288

    (134) valorI -> valor MAS . valorI
    (134) valorI -> . valor MAS valorI
    (135) valorI -> . valor
    (93) valor -> . STRING
    (94) valor -> . CHAR
    (95) valor -> . VARIABLE
    (96) valor -> . numeros
    (97) valor -> . booleanos
    (98) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (99) valor -> . VARIABLE PAR_I INT PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 126
    CHAR            shift and go to state 127
    VARIABLE        shift and go to state 121
    INT             shift and go to state 136
    LONG            shift and go to state 129
    FLOAT           shift and go to state 130
    DOUBLE          shift and go to state 131
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117

    valor                          shift and go to state 161
    valorI                         shift and go to state 404
    numeros                        shift and go to state 128
    booleanos                      shift and go to state 113
    startsWith                     shift and go to state 118

state 289

    (133) impresion -> PRINT PAR_I valorI PAR_D .

    VAR             reduce using rule 133 (impresion -> PRINT PAR_I valorI PAR_D .)
    VAL             reduce using rule 133 (impresion -> PRINT PAR_I valorI PAR_D .)
    VARIABLE        reduce using rule 133 (impresion -> PRINT PAR_I valorI PAR_D .)
    PRINTLN         reduce using rule 133 (impresion -> PRINT PAR_I valorI PAR_D .)
    PRINT           reduce using rule 133 (impresion -> PRINT PAR_I valorI PAR_D .)
    READLINE        reduce using rule 133 (impresion -> PRINT PAR_I valorI PAR_D .)
    WHILE           reduce using rule 133 (impresion -> PRINT PAR_I valorI PAR_D .)
    FOR             reduce using rule 133 (impresion -> PRINT PAR_I valorI PAR_D .)
    IF              reduce using rule 133 (impresion -> PRINT PAR_I valorI PAR_D .)
    INT             reduce using rule 133 (impresion -> PRINT PAR_I valorI PAR_D .)
    DOUBLE          reduce using rule 133 (impresion -> PRINT PAR_I valorI PAR_D .)
    LONG            reduce using rule 133 (impresion -> PRINT PAR_I valorI PAR_D .)
    FLOAT           reduce using rule 133 (impresion -> PRINT PAR_I valorI PAR_D .)
    STRING          reduce using rule 133 (impresion -> PRINT PAR_I valorI PAR_D .)
    CHAR            reduce using rule 133 (impresion -> PRINT PAR_I valorI PAR_D .)
    DEF             reduce using rule 133 (impresion -> PRINT PAR_I valorI PAR_D .)
    $end            reduce using rule 133 (impresion -> PRINT PAR_I valorI PAR_D .)
    LLAVE_D         reduce using rule 133 (impresion -> PRINT PAR_I valorI PAR_D .)
    RETURN          reduce using rule 133 (impresion -> PRINT PAR_I valorI PAR_D .)
    CASE            reduce using rule 133 (impresion -> PRINT PAR_I valorI PAR_D .)


state 290

    (167) while -> WHILE PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 405


state 291

    (220) condicional -> valorC logicos . condicional
    (220) condicional -> . valorC logicos condicional
    (221) condicional -> . valorC
    (222) valorC -> . VARIABLE
    (223) valorC -> . booleanos
    (224) valorC -> . relacional
    (225) valorC -> . NOT VARIABLE
    (226) valorC -> . NOT booleanos
    (227) valorC -> . NOT relacional
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (230) relacional -> . numeros comparacion numeros
    (231) relacional -> . aritmetica comparacion aritmetica
    (232) relacional -> . aritmetica comparacion numeros
    (233) relacional -> . numeros comparacion aritmetica
    (234) relacional -> . booleanos comparacion booleanos
    (235) relacional -> . STRING comparacion STRING
    (236) relacional -> . CHAR comparacion CHAR
    (237) relacional -> . VARIABLE comparacion numeros
    (238) relacional -> . numeros comparacion VARIABLE
    (239) relacional -> . VARIABLE comparacion booleanos
    (240) relacional -> . booleanos comparacion VARIABLE
    (241) relacional -> . VARIABLE comparacion STRING
    (242) relacional -> . STRING comparacion VARIABLE
    (243) relacional -> . VARIABLE comparacion CHAR
    (244) relacional -> . CHAR comparacion VARIABLE
    (245) relacional -> . VARIABLE comparacion VARIABLE
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VARIABLE        shift and go to state 166
    NOT             shift and go to state 169
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117
    STRING          shift and go to state 172
    CHAR            shift and go to state 173
    INT             shift and go to state 174
    LONG            shift and go to state 175
    FLOAT           shift and go to state 176
    DOUBLE          shift and go to state 177

    valorC                         shift and go to state 165
    condicional                    shift and go to state 406
    booleanos                      shift and go to state 167
    relacional                     shift and go to state 168
    startsWith                     shift and go to state 118
    numeros                        shift and go to state 170
    aritmetica                     shift and go to state 171
    suma                           shift and go to state 39
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 292

    (228) logicos -> AND .

    VARIABLE        reduce using rule 228 (logicos -> AND .)
    NOT             reduce using rule 228 (logicos -> AND .)
    TRUE            reduce using rule 228 (logicos -> AND .)
    FLASE           reduce using rule 228 (logicos -> AND .)
    STRING          reduce using rule 228 (logicos -> AND .)
    CHAR            reduce using rule 228 (logicos -> AND .)
    INT             reduce using rule 228 (logicos -> AND .)
    LONG            reduce using rule 228 (logicos -> AND .)
    FLOAT           reduce using rule 228 (logicos -> AND .)
    DOUBLE          reduce using rule 228 (logicos -> AND .)


state 293

    (229) logicos -> OR .

    VARIABLE        reduce using rule 229 (logicos -> OR .)
    NOT             reduce using rule 229 (logicos -> OR .)
    TRUE            reduce using rule 229 (logicos -> OR .)
    FLASE           reduce using rule 229 (logicos -> OR .)
    STRING          reduce using rule 229 (logicos -> OR .)
    CHAR            reduce using rule 229 (logicos -> OR .)
    INT             reduce using rule 229 (logicos -> OR .)
    LONG            reduce using rule 229 (logicos -> OR .)
    FLOAT           reduce using rule 229 (logicos -> OR .)
    DOUBLE          reduce using rule 229 (logicos -> OR .)


state 294

    (237) relacional -> VARIABLE comparacion . numeros
    (239) relacional -> VARIABLE comparacion . booleanos
    (241) relacional -> VARIABLE comparacion . STRING
    (243) relacional -> VARIABLE comparacion . CHAR
    (245) relacional -> VARIABLE comparacion . VARIABLE
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 410
    CHAR            shift and go to state 411
    VARIABLE        shift and go to state 407
    INT             shift and go to state 136
    LONG            shift and go to state 129
    FLOAT           shift and go to state 130
    DOUBLE          shift and go to state 131
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117

    numeros                        shift and go to state 408
    booleanos                      shift and go to state 409
    startsWith                     shift and go to state 118

state 295

    (246) comparacion -> IGUAL_COMPARACION .

    STRING          reduce using rule 246 (comparacion -> IGUAL_COMPARACION .)
    CHAR            reduce using rule 246 (comparacion -> IGUAL_COMPARACION .)
    VARIABLE        reduce using rule 246 (comparacion -> IGUAL_COMPARACION .)
    INT             reduce using rule 246 (comparacion -> IGUAL_COMPARACION .)
    LONG            reduce using rule 246 (comparacion -> IGUAL_COMPARACION .)
    FLOAT           reduce using rule 246 (comparacion -> IGUAL_COMPARACION .)
    DOUBLE          reduce using rule 246 (comparacion -> IGUAL_COMPARACION .)
    TRUE            reduce using rule 246 (comparacion -> IGUAL_COMPARACION .)
    FLASE           reduce using rule 246 (comparacion -> IGUAL_COMPARACION .)


state 296

    (247) comparacion -> DIFERENTE .

    STRING          reduce using rule 247 (comparacion -> DIFERENTE .)
    CHAR            reduce using rule 247 (comparacion -> DIFERENTE .)
    VARIABLE        reduce using rule 247 (comparacion -> DIFERENTE .)
    INT             reduce using rule 247 (comparacion -> DIFERENTE .)
    LONG            reduce using rule 247 (comparacion -> DIFERENTE .)
    FLOAT           reduce using rule 247 (comparacion -> DIFERENTE .)
    DOUBLE          reduce using rule 247 (comparacion -> DIFERENTE .)
    TRUE            reduce using rule 247 (comparacion -> DIFERENTE .)
    FLASE           reduce using rule 247 (comparacion -> DIFERENTE .)


state 297

    (248) comparacion -> MAYOR .

    STRING          reduce using rule 248 (comparacion -> MAYOR .)
    CHAR            reduce using rule 248 (comparacion -> MAYOR .)
    VARIABLE        reduce using rule 248 (comparacion -> MAYOR .)
    INT             reduce using rule 248 (comparacion -> MAYOR .)
    LONG            reduce using rule 248 (comparacion -> MAYOR .)
    FLOAT           reduce using rule 248 (comparacion -> MAYOR .)
    DOUBLE          reduce using rule 248 (comparacion -> MAYOR .)
    TRUE            reduce using rule 248 (comparacion -> MAYOR .)
    FLASE           reduce using rule 248 (comparacion -> MAYOR .)


state 298

    (249) comparacion -> MENOR .

    STRING          reduce using rule 249 (comparacion -> MENOR .)
    CHAR            reduce using rule 249 (comparacion -> MENOR .)
    VARIABLE        reduce using rule 249 (comparacion -> MENOR .)
    INT             reduce using rule 249 (comparacion -> MENOR .)
    LONG            reduce using rule 249 (comparacion -> MENOR .)
    FLOAT           reduce using rule 249 (comparacion -> MENOR .)
    DOUBLE          reduce using rule 249 (comparacion -> MENOR .)
    TRUE            reduce using rule 249 (comparacion -> MENOR .)
    FLASE           reduce using rule 249 (comparacion -> MENOR .)


state 299

    (234) relacional -> booleanos comparacion . booleanos
    (240) relacional -> booleanos comparacion . VARIABLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    VARIABLE        shift and go to state 413
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117
    STRING          shift and go to state 414

    booleanos                      shift and go to state 412
    startsWith                     shift and go to state 118

state 300

    (225) valorC -> NOT VARIABLE .
    (237) relacional -> VARIABLE . comparacion numeros
    (239) relacional -> VARIABLE . comparacion booleanos
    (241) relacional -> VARIABLE . comparacion STRING
    (243) relacional -> VARIABLE . comparacion CHAR
    (245) relacional -> VARIABLE . comparacion VARIABLE
    (251) aritmetica -> VARIABLE . aritmeticos numeros
    (253) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (257) aritmetica -> VARIABLE . MAS numeros
    (259) aritmetica -> VARIABLE . MAS VARIABLE
    (246) comparacion -> . IGUAL_COMPARACION
    (247) comparacion -> . DIFERENTE
    (248) comparacion -> . MAYOR
    (249) comparacion -> . MENOR
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD

    AND             reduce using rule 225 (valorC -> NOT VARIABLE .)
    OR              reduce using rule 225 (valorC -> NOT VARIABLE .)
    PAR_D           reduce using rule 225 (valorC -> NOT VARIABLE .)
    MAS             shift and go to state 62
    IGUAL_COMPARACION shift and go to state 295
    DIFERENTE       shift and go to state 296
    MAYOR           shift and go to state 297
    MENOR           shift and go to state 298
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66

    comparacion                    shift and go to state 294
    aritmeticos                    shift and go to state 61

state 301

    (226) valorC -> NOT booleanos .
    (234) relacional -> booleanos . comparacion booleanos
    (240) relacional -> booleanos . comparacion VARIABLE
    (246) comparacion -> . IGUAL_COMPARACION
    (247) comparacion -> . DIFERENTE
    (248) comparacion -> . MAYOR
    (249) comparacion -> . MENOR

    AND             reduce using rule 226 (valorC -> NOT booleanos .)
    OR              reduce using rule 226 (valorC -> NOT booleanos .)
    PAR_D           reduce using rule 226 (valorC -> NOT booleanos .)
    IGUAL_COMPARACION shift and go to state 295
    DIFERENTE       shift and go to state 296
    MAYOR           shift and go to state 297
    MENOR           shift and go to state 298

    comparacion                    shift and go to state 299

state 302

    (227) valorC -> NOT relacional .

    AND             reduce using rule 227 (valorC -> NOT relacional .)
    OR              reduce using rule 227 (valorC -> NOT relacional .)
    PAR_D           reduce using rule 227 (valorC -> NOT relacional .)


state 303

    (230) relacional -> numeros comparacion . numeros
    (233) relacional -> numeros comparacion . aritmetica
    (238) relacional -> numeros comparacion . VARIABLE
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VARIABLE        shift and go to state 417
    INT             shift and go to state 174
    LONG            shift and go to state 175
    FLOAT           shift and go to state 176
    DOUBLE          shift and go to state 177
    CHAR            shift and go to state 47
    STRING          shift and go to state 418

    numeros                        shift and go to state 415
    aritmetica                     shift and go to state 416
    suma                           shift and go to state 39
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 304

    (231) relacional -> aritmetica comparacion . aritmetica
    (232) relacional -> aritmetica comparacion . numeros
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VARIABLE        shift and go to state 421
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    CHAR            shift and go to state 47
    STRING          shift and go to state 418

    aritmetica                     shift and go to state 419
    numeros                        shift and go to state 420
    suma                           shift and go to state 39
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 305

    (235) relacional -> STRING comparacion . STRING
    (242) relacional -> STRING comparacion . VARIABLE

    STRING          shift and go to state 422
    VARIABLE        shift and go to state 423


state 306

    (236) relacional -> CHAR comparacion . CHAR
    (244) relacional -> CHAR comparacion . VARIABLE

    CHAR            shift and go to state 424
    VARIABLE        shift and go to state 425


state 307

    (168) for -> FOR PAR_I VAR VARIABLE . ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> FOR PAR_I VAR VARIABLE . ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> FOR PAR_I VAR VARIABLE . ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    ITERATOR        shift and go to state 426


state 308

    (169) for -> FOR PAR_I VARIABLE ITERATOR . VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> FOR PAR_I VARIABLE ITERATOR . INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> FOR PAR_I VARIABLE ITERATOR . INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 427
    INT             shift and go to state 428


state 309

    (213) if -> IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 429


state 310

    (276) startsWith -> STRING PUNTO STARTSWITH PAR_I . STRING PAR_D
    (277) startsWith -> STRING PUNTO STARTSWITH PAR_I . STRING COMA INT PAR_D

    STRING          shift and go to state 430


state 311

    (1) inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D .

    $end            reduce using rule 1 (inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D .)


state 312

    (98) valor -> VARIABLE PAR_I VARIABLE . PAR_D
    (95) valor -> VARIABLE .
    (98) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (99) valor -> VARIABLE . PAR_I INT PAR_D

  ! shift/reduce conflict for PAR_D resolved as shift
    PAR_D           shift and go to state 431
    COMA            reduce using rule 95 (valor -> VARIABLE .)
    PAR_I           shift and go to state 198

  ! PAR_D           [ reduce using rule 95 (valor -> VARIABLE .) ]


state 313

    (99) valor -> VARIABLE PAR_I INT . PAR_D
    (103) numeros -> INT .

  ! shift/reduce conflict for PAR_D resolved as shift
    PAR_D           shift and go to state 432
    COMA            reduce using rule 103 (numeros -> INT .)

  ! PAR_D           [ reduce using rule 103 (numeros -> INT .) ]


state 314

    (147) castingcall -> VARIABLE PUNTO castingfun .

    VAR             reduce using rule 147 (castingcall -> VARIABLE PUNTO castingfun .)
    VAL             reduce using rule 147 (castingcall -> VARIABLE PUNTO castingfun .)
    VARIABLE        reduce using rule 147 (castingcall -> VARIABLE PUNTO castingfun .)
    PRINTLN         reduce using rule 147 (castingcall -> VARIABLE PUNTO castingfun .)
    PRINT           reduce using rule 147 (castingcall -> VARIABLE PUNTO castingfun .)
    READLINE        reduce using rule 147 (castingcall -> VARIABLE PUNTO castingfun .)
    WHILE           reduce using rule 147 (castingcall -> VARIABLE PUNTO castingfun .)
    FOR             reduce using rule 147 (castingcall -> VARIABLE PUNTO castingfun .)
    IF              reduce using rule 147 (castingcall -> VARIABLE PUNTO castingfun .)
    INT             reduce using rule 147 (castingcall -> VARIABLE PUNTO castingfun .)
    DOUBLE          reduce using rule 147 (castingcall -> VARIABLE PUNTO castingfun .)
    LONG            reduce using rule 147 (castingcall -> VARIABLE PUNTO castingfun .)
    FLOAT           reduce using rule 147 (castingcall -> VARIABLE PUNTO castingfun .)
    STRING          reduce using rule 147 (castingcall -> VARIABLE PUNTO castingfun .)
    CHAR            reduce using rule 147 (castingcall -> VARIABLE PUNTO castingfun .)
    DEF             reduce using rule 147 (castingcall -> VARIABLE PUNTO castingfun .)
    $end            reduce using rule 147 (castingcall -> VARIABLE PUNTO castingfun .)
    LLAVE_D         reduce using rule 147 (castingcall -> VARIABLE PUNTO castingfun .)
    RETURN          reduce using rule 147 (castingcall -> VARIABLE PUNTO castingfun .)
    CASE            reduce using rule 147 (castingcall -> VARIABLE PUNTO castingfun .)


state 315

    (148) castingfun -> TO_INT .

    VAR             reduce using rule 148 (castingfun -> TO_INT .)
    VAL             reduce using rule 148 (castingfun -> TO_INT .)
    VARIABLE        reduce using rule 148 (castingfun -> TO_INT .)
    PRINTLN         reduce using rule 148 (castingfun -> TO_INT .)
    PRINT           reduce using rule 148 (castingfun -> TO_INT .)
    READLINE        reduce using rule 148 (castingfun -> TO_INT .)
    WHILE           reduce using rule 148 (castingfun -> TO_INT .)
    FOR             reduce using rule 148 (castingfun -> TO_INT .)
    IF              reduce using rule 148 (castingfun -> TO_INT .)
    INT             reduce using rule 148 (castingfun -> TO_INT .)
    DOUBLE          reduce using rule 148 (castingfun -> TO_INT .)
    LONG            reduce using rule 148 (castingfun -> TO_INT .)
    FLOAT           reduce using rule 148 (castingfun -> TO_INT .)
    STRING          reduce using rule 148 (castingfun -> TO_INT .)
    CHAR            reduce using rule 148 (castingfun -> TO_INT .)
    DEF             reduce using rule 148 (castingfun -> TO_INT .)
    $end            reduce using rule 148 (castingfun -> TO_INT .)
    LLAVE_D         reduce using rule 148 (castingfun -> TO_INT .)
    RETURN          reduce using rule 148 (castingfun -> TO_INT .)
    CASE            reduce using rule 148 (castingfun -> TO_INT .)


state 316

    (149) castingfun -> TO_DOUBLE .

    VAR             reduce using rule 149 (castingfun -> TO_DOUBLE .)
    VAL             reduce using rule 149 (castingfun -> TO_DOUBLE .)
    VARIABLE        reduce using rule 149 (castingfun -> TO_DOUBLE .)
    PRINTLN         reduce using rule 149 (castingfun -> TO_DOUBLE .)
    PRINT           reduce using rule 149 (castingfun -> TO_DOUBLE .)
    READLINE        reduce using rule 149 (castingfun -> TO_DOUBLE .)
    WHILE           reduce using rule 149 (castingfun -> TO_DOUBLE .)
    FOR             reduce using rule 149 (castingfun -> TO_DOUBLE .)
    IF              reduce using rule 149 (castingfun -> TO_DOUBLE .)
    INT             reduce using rule 149 (castingfun -> TO_DOUBLE .)
    DOUBLE          reduce using rule 149 (castingfun -> TO_DOUBLE .)
    LONG            reduce using rule 149 (castingfun -> TO_DOUBLE .)
    FLOAT           reduce using rule 149 (castingfun -> TO_DOUBLE .)
    STRING          reduce using rule 149 (castingfun -> TO_DOUBLE .)
    CHAR            reduce using rule 149 (castingfun -> TO_DOUBLE .)
    DEF             reduce using rule 149 (castingfun -> TO_DOUBLE .)
    $end            reduce using rule 149 (castingfun -> TO_DOUBLE .)
    LLAVE_D         reduce using rule 149 (castingfun -> TO_DOUBLE .)
    RETURN          reduce using rule 149 (castingfun -> TO_DOUBLE .)
    CASE            reduce using rule 149 (castingfun -> TO_DOUBLE .)


state 317

    (150) castingfun -> TO_FLOAT .

    VAR             reduce using rule 150 (castingfun -> TO_FLOAT .)
    VAL             reduce using rule 150 (castingfun -> TO_FLOAT .)
    VARIABLE        reduce using rule 150 (castingfun -> TO_FLOAT .)
    PRINTLN         reduce using rule 150 (castingfun -> TO_FLOAT .)
    PRINT           reduce using rule 150 (castingfun -> TO_FLOAT .)
    READLINE        reduce using rule 150 (castingfun -> TO_FLOAT .)
    WHILE           reduce using rule 150 (castingfun -> TO_FLOAT .)
    FOR             reduce using rule 150 (castingfun -> TO_FLOAT .)
    IF              reduce using rule 150 (castingfun -> TO_FLOAT .)
    INT             reduce using rule 150 (castingfun -> TO_FLOAT .)
    DOUBLE          reduce using rule 150 (castingfun -> TO_FLOAT .)
    LONG            reduce using rule 150 (castingfun -> TO_FLOAT .)
    FLOAT           reduce using rule 150 (castingfun -> TO_FLOAT .)
    STRING          reduce using rule 150 (castingfun -> TO_FLOAT .)
    CHAR            reduce using rule 150 (castingfun -> TO_FLOAT .)
    DEF             reduce using rule 150 (castingfun -> TO_FLOAT .)
    $end            reduce using rule 150 (castingfun -> TO_FLOAT .)
    LLAVE_D         reduce using rule 150 (castingfun -> TO_FLOAT .)
    RETURN          reduce using rule 150 (castingfun -> TO_FLOAT .)
    CASE            reduce using rule 150 (castingfun -> TO_FLOAT .)


state 318

    (151) castingfun -> TO_LONG .

    VAR             reduce using rule 151 (castingfun -> TO_LONG .)
    VAL             reduce using rule 151 (castingfun -> TO_LONG .)
    VARIABLE        reduce using rule 151 (castingfun -> TO_LONG .)
    PRINTLN         reduce using rule 151 (castingfun -> TO_LONG .)
    PRINT           reduce using rule 151 (castingfun -> TO_LONG .)
    READLINE        reduce using rule 151 (castingfun -> TO_LONG .)
    WHILE           reduce using rule 151 (castingfun -> TO_LONG .)
    FOR             reduce using rule 151 (castingfun -> TO_LONG .)
    IF              reduce using rule 151 (castingfun -> TO_LONG .)
    INT             reduce using rule 151 (castingfun -> TO_LONG .)
    DOUBLE          reduce using rule 151 (castingfun -> TO_LONG .)
    LONG            reduce using rule 151 (castingfun -> TO_LONG .)
    FLOAT           reduce using rule 151 (castingfun -> TO_LONG .)
    STRING          reduce using rule 151 (castingfun -> TO_LONG .)
    CHAR            reduce using rule 151 (castingfun -> TO_LONG .)
    DEF             reduce using rule 151 (castingfun -> TO_LONG .)
    $end            reduce using rule 151 (castingfun -> TO_LONG .)
    LLAVE_D         reduce using rule 151 (castingfun -> TO_LONG .)
    RETURN          reduce using rule 151 (castingfun -> TO_LONG .)
    CASE            reduce using rule 151 (castingfun -> TO_LONG .)


state 319

    (146) castingcall -> returnCastable PUNTO castingfun .

    VAR             reduce using rule 146 (castingcall -> returnCastable PUNTO castingfun .)
    VAL             reduce using rule 146 (castingcall -> returnCastable PUNTO castingfun .)
    VARIABLE        reduce using rule 146 (castingcall -> returnCastable PUNTO castingfun .)
    PRINTLN         reduce using rule 146 (castingcall -> returnCastable PUNTO castingfun .)
    PRINT           reduce using rule 146 (castingcall -> returnCastable PUNTO castingfun .)
    READLINE        reduce using rule 146 (castingcall -> returnCastable PUNTO castingfun .)
    WHILE           reduce using rule 146 (castingcall -> returnCastable PUNTO castingfun .)
    FOR             reduce using rule 146 (castingcall -> returnCastable PUNTO castingfun .)
    IF              reduce using rule 146 (castingcall -> returnCastable PUNTO castingfun .)
    INT             reduce using rule 146 (castingcall -> returnCastable PUNTO castingfun .)
    DOUBLE          reduce using rule 146 (castingcall -> returnCastable PUNTO castingfun .)
    LONG            reduce using rule 146 (castingcall -> returnCastable PUNTO castingfun .)
    FLOAT           reduce using rule 146 (castingcall -> returnCastable PUNTO castingfun .)
    STRING          reduce using rule 146 (castingcall -> returnCastable PUNTO castingfun .)
    CHAR            reduce using rule 146 (castingcall -> returnCastable PUNTO castingfun .)
    DEF             reduce using rule 146 (castingcall -> returnCastable PUNTO castingfun .)
    $end            reduce using rule 146 (castingcall -> returnCastable PUNTO castingfun .)
    LLAVE_D         reduce using rule 146 (castingcall -> returnCastable PUNTO castingfun .)
    RETURN          reduce using rule 146 (castingcall -> returnCastable PUNTO castingfun .)
    CASE            reduce using rule 146 (castingcall -> returnCastable PUNTO castingfun .)


state 320

    (98) valor -> VARIABLE PAR_I VARIABLE . PAR_D

    PAR_D           shift and go to state 431


state 321

    (99) valor -> VARIABLE PAR_I INT . PAR_D

    PAR_D           shift and go to state 432


state 322

    (83) reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL . valor
    (93) valor -> . STRING
    (94) valor -> . CHAR
    (95) valor -> . VARIABLE
    (96) valor -> . numeros
    (97) valor -> . booleanos
    (98) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (99) valor -> . VARIABLE PAR_I INT PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 126
    CHAR            shift and go to state 127
    VARIABLE        shift and go to state 121
    INT             shift and go to state 136
    LONG            shift and go to state 129
    FLOAT           shift and go to state 130
    DOUBLE          shift and go to state 131
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117

    valor                          shift and go to state 433
    numeros                        shift and go to state 128
    booleanos                      shift and go to state 113
    startsWith                     shift and go to state 118

state 323

    (163) valores -> valor COMA valores .

    PAR_D           reduce using rule 163 (valores -> valor COMA valores .)


state 324

    (140) varparen -> varparen PAR_I valores PAR_D .

    PAR_I           reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)
    VAR             reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)
    VAL             reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)
    PRINT           reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)
    READLINE        reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)
    WHILE           reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)
    FOR             reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)
    IF              reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)
    INT             reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)
    LONG            reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)
    FLOAT           reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)
    STRING          reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)
    CHAR            reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)
    DEF             reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)
    $end            reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)
    RETURN          reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)
    PUNTO           reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)
    CASE            reduce using rule 140 (varparen -> varparen PAR_I valores PAR_D .)


state 325

    (174) match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .

    VAR             reduce using rule 174 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VAL             reduce using rule 174 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VARIABLE        reduce using rule 174 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    PRINTLN         reduce using rule 174 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    PRINT           reduce using rule 174 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    READLINE        reduce using rule 174 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    WHILE           reduce using rule 174 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    FOR             reduce using rule 174 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    IF              reduce using rule 174 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    INT             reduce using rule 174 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    DOUBLE          reduce using rule 174 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    LONG            reduce using rule 174 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    FLOAT           reduce using rule 174 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    STRING          reduce using rule 174 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    CHAR            reduce using rule 174 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    DEF             reduce using rule 174 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    $end            reduce using rule 174 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    LLAVE_D         reduce using rule 174 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    RETURN          reduce using rule 174 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)


state 326

    (184) casesInt -> caseInt casesInt .

    LLAVE_D         reduce using rule 184 (casesInt -> caseInt casesInt .)


state 327

    (185) casesInt -> caseInt defcase .

    LLAVE_D         reduce using rule 185 (casesInt -> caseInt defcase .)


state 328

    (210) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (182) caseInt -> CASE . INT FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 434
    INT             shift and go to state 347


state 329

    (188) casesLgn -> caseLgn casesLgn .

    LLAVE_D         reduce using rule 188 (casesLgn -> caseLgn casesLgn .)


state 330

    (189) casesLgn -> caseLgn defcase .

    LLAVE_D         reduce using rule 189 (casesLgn -> caseLgn defcase .)


state 331

    (210) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (186) caseLgn -> CASE . LONG FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 434
    LONG            shift and go to state 348


state 332

    (192) casesFlt -> caseFlt casesFlt .

    LLAVE_D         reduce using rule 192 (casesFlt -> caseFlt casesFlt .)


state 333

    (193) casesFlt -> caseFlt defcase .

    LLAVE_D         reduce using rule 193 (casesFlt -> caseFlt defcase .)


state 334

    (210) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (190) caseFlt -> CASE . FLOAT FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 434
    FLOAT           shift and go to state 349


state 335

    (196) casesDob -> caseDob casesDob .

    LLAVE_D         reduce using rule 196 (casesDob -> caseDob casesDob .)


state 336

    (197) casesDob -> caseDob defcase .

    LLAVE_D         reduce using rule 197 (casesDob -> caseDob defcase .)


state 337

    (210) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (194) caseDob -> CASE . DOUBLE FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 434
    DOUBLE          shift and go to state 350


state 338

    (200) casesStr -> caseStr casesStr .

    LLAVE_D         reduce using rule 200 (casesStr -> caseStr casesStr .)


state 339

    (201) casesStr -> caseStr defcase .

    LLAVE_D         reduce using rule 201 (casesStr -> caseStr defcase .)


state 340

    (210) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (198) caseStr -> CASE . STRING FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 434
    STRING          shift and go to state 435


state 341

    (204) casesChar -> caseChar casesChar .

    LLAVE_D         reduce using rule 204 (casesChar -> caseChar casesChar .)


state 342

    (205) casesChar -> caseChar defcase .

    LLAVE_D         reduce using rule 205 (casesChar -> caseChar defcase .)


state 343

    (210) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (202) caseChar -> CASE . CHAR FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 434
    CHAR            shift and go to state 352


state 344

    (208) casesBool -> caseBool casesBool .

    LLAVE_D         reduce using rule 208 (casesBool -> caseBool casesBool .)


state 345

    (209) casesBool -> caseBool defcase .

    LLAVE_D         reduce using rule 209 (casesBool -> caseBool defcase .)


state 346

    (210) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (206) caseBool -> CASE . booleanos FUNCION_FLECHA codeBlock
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    SUBGUION        shift and go to state 434
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117
    STRING          shift and go to state 414

    booleanos                      shift and go to state 353
    startsWith                     shift and go to state 118

state 347

    (182) caseInt -> CASE INT . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 436


state 348

    (186) caseLgn -> CASE LONG . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 437


state 349

    (190) caseFlt -> CASE FLOAT . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 438


state 350

    (194) caseDob -> CASE DOUBLE . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 439


state 351

    (198) caseStr -> CASE STRING . FUNCION_FLECHA codeBlock
    (276) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    FUNCION_FLECHA  shift and go to state 440
    PUNTO           shift and go to state 102


state 352

    (202) caseChar -> CASE CHAR . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 441


state 353

    (206) caseBool -> CASE booleanos . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 442


state 354

    (4) io -> VARIABLE PUNTO VARIABLE PUNTO . VARIABLE PUNTO READLINE

    VARIABLE        shift and go to state 443


state 355

    (107) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I . contenido LLAVE_D
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

    contenido                      shift and go to state 444
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 356

    (108) funcion -> DEF VARIABLE parametro LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 445


state 357

    (115) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN valor LLAVE_D
    (116) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (117) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN returnfun LLAVE_D
    (118) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN aritmetica LLAVE_D
    (119) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I RETURN valor LLAVE_D
    (120) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I RETURN VARIABLE LLAVE_D
    (121) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I RETURN returnfun LLAVE_D
    (122) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I RETURN aritmetica LLAVE_D

    LLAVE_I         shift and go to state 446


state 358

    (123) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN tuple LLAVE_D
    (124) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN returnfun LLAVE_D

    LLAVE_I         shift and go to state 447


state 359

    (126) dectipo -> DOBLE_PUNTO tipo .

    IGUAL           reduce using rule 126 (dectipo -> DOBLE_PUNTO tipo .)


state 360

    (127) dectipoTupla -> DOBLE_PUNTO PAR_I . tipos PAR_D
    (128) tipos -> . tipo
    (129) tipos -> . tipo tiposentry
    (84) tipo -> . CHARCLASS
    (85) tipo -> . STRINGCLASS
    (86) tipo -> . BOOLCLASS
    (87) tipo -> . INTCLASS
    (88) tipo -> . LONGCLASS
    (89) tipo -> . DOUBLECLASS
    (90) tipo -> . FLOATCLASS
    (91) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (92) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 361
    STRINGCLASS     shift and go to state 362
    BOOLCLASS       shift and go to state 363
    INTCLASS        shift and go to state 364
    LONGCLASS       shift and go to state 365
    DOUBLECLASS     shift and go to state 366
    FLOATCLASS      shift and go to state 367
    ARRAYCLASS      shift and go to state 368
    LISTCLASS       shift and go to state 369

    tipos                          shift and go to state 448
    tipo                           shift and go to state 449

state 361

    (84) tipo -> CHARCLASS .

    IGUAL           reduce using rule 84 (tipo -> CHARCLASS .)
    COMA            reduce using rule 84 (tipo -> CHARCLASS .)
    PAR_D           reduce using rule 84 (tipo -> CHARCLASS .)
    CORCHETE_D      reduce using rule 84 (tipo -> CHARCLASS .)


state 362

    (85) tipo -> STRINGCLASS .

    IGUAL           reduce using rule 85 (tipo -> STRINGCLASS .)
    COMA            reduce using rule 85 (tipo -> STRINGCLASS .)
    PAR_D           reduce using rule 85 (tipo -> STRINGCLASS .)
    CORCHETE_D      reduce using rule 85 (tipo -> STRINGCLASS .)


state 363

    (86) tipo -> BOOLCLASS .

    IGUAL           reduce using rule 86 (tipo -> BOOLCLASS .)
    COMA            reduce using rule 86 (tipo -> BOOLCLASS .)
    PAR_D           reduce using rule 86 (tipo -> BOOLCLASS .)
    CORCHETE_D      reduce using rule 86 (tipo -> BOOLCLASS .)


state 364

    (87) tipo -> INTCLASS .

    IGUAL           reduce using rule 87 (tipo -> INTCLASS .)
    COMA            reduce using rule 87 (tipo -> INTCLASS .)
    PAR_D           reduce using rule 87 (tipo -> INTCLASS .)
    CORCHETE_D      reduce using rule 87 (tipo -> INTCLASS .)


state 365

    (88) tipo -> LONGCLASS .

    IGUAL           reduce using rule 88 (tipo -> LONGCLASS .)
    COMA            reduce using rule 88 (tipo -> LONGCLASS .)
    PAR_D           reduce using rule 88 (tipo -> LONGCLASS .)
    CORCHETE_D      reduce using rule 88 (tipo -> LONGCLASS .)


state 366

    (89) tipo -> DOUBLECLASS .

    IGUAL           reduce using rule 89 (tipo -> DOUBLECLASS .)
    COMA            reduce using rule 89 (tipo -> DOUBLECLASS .)
    PAR_D           reduce using rule 89 (tipo -> DOUBLECLASS .)
    CORCHETE_D      reduce using rule 89 (tipo -> DOUBLECLASS .)


state 367

    (90) tipo -> FLOATCLASS .

    IGUAL           reduce using rule 90 (tipo -> FLOATCLASS .)
    COMA            reduce using rule 90 (tipo -> FLOATCLASS .)
    PAR_D           reduce using rule 90 (tipo -> FLOATCLASS .)
    CORCHETE_D      reduce using rule 90 (tipo -> FLOATCLASS .)


state 368

    (91) tipo -> ARRAYCLASS . CORCHETE_I tipo CORCHETE_D

    CORCHETE_I      shift and go to state 450


state 369

    (92) tipo -> LISTCLASS . CORCHETE_I tipo CORCHETE_D

    CORCHETE_I      shift and go to state 451


state 370

    (113) parametros -> PAR_I declaracion PAR_D .
    (114) parametros -> PAR_I declaracion PAR_D . parametros
    (113) parametros -> . PAR_I declaracion PAR_D
    (114) parametros -> . PAR_I declaracion PAR_D parametros

    IGUAL           reduce using rule 113 (parametros -> PAR_I declaracion PAR_D .)
    LLAVE_I         reduce using rule 113 (parametros -> PAR_I declaracion PAR_D .)
    DOBLE_PUNTO     reduce using rule 113 (parametros -> PAR_I declaracion PAR_D .)
    PAR_I           shift and go to state 452

    parametros                     shift and go to state 453

state 371

    (109) declaracion -> VARIABLE DOBLE_PUNTO . tipo
    (110) declaracion -> VARIABLE DOBLE_PUNTO . tipo IGUAL valor
    (84) tipo -> . CHARCLASS
    (85) tipo -> . STRINGCLASS
    (86) tipo -> . BOOLCLASS
    (87) tipo -> . INTCLASS
    (88) tipo -> . LONGCLASS
    (89) tipo -> . DOUBLECLASS
    (90) tipo -> . FLOATCLASS
    (91) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (92) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 361
    STRINGCLASS     shift and go to state 362
    BOOLCLASS       shift and go to state 363
    INTCLASS        shift and go to state 364
    LONGCLASS       shift and go to state 365
    DOUBLECLASS     shift and go to state 366
    FLOATCLASS      shift and go to state 367
    ARRAYCLASS      shift and go to state 368
    LISTCLASS       shift and go to state 369

    tipo                           shift and go to state 454

state 372

    (216) elseif -> ELSE IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D
    (217) elseif -> ELSE IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D elseif

    PAR_D           shift and go to state 455


state 373

    (218) else -> ELSE LLAVE_I contenido LLAVE_D .

    ELSE            reduce using rule 218 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 218 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 218 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 218 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 218 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 218 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 218 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 218 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 218 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 218 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 218 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 218 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 218 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 218 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 218 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 218 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 218 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 218 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 218 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 218 (else -> ELSE LLAVE_I contenido LLAVE_D .)


state 374

    (138) varparen -> PAR_I . valores PAR_D
    (139) varparen -> PAR_I . PAR_D
    (162) valores -> . valor
    (163) valores -> . valor COMA valores
    (93) valor -> . STRING
    (94) valor -> . CHAR
    (95) valor -> . VARIABLE
    (96) valor -> . numeros
    (97) valor -> . booleanos
    (98) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (99) valor -> . VARIABLE PAR_I INT PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    PAR_D           shift and go to state 123
    STRING          shift and go to state 126
    CHAR            shift and go to state 127
    VARIABLE        shift and go to state 121
    INT             shift and go to state 136
    LONG            shift and go to state 129
    FLOAT           shift and go to state 130
    DOUBLE          shift and go to state 131
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117

    valores                        shift and go to state 125
    valor                          shift and go to state 124
    numeros                        shift and go to state 128
    booleanos                      shift and go to state 113
    startsWith                     shift and go to state 118

state 375

    (356) stringCastLong -> STRING PUNTO . TO_LONG
    (355) stringCastInt -> STRING PUNTO . TO_INT
    (357) stringCastFloat -> STRING PUNTO . TO_FLOAT
    (358) stringCastDouble -> STRING PUNTO . TO_DOUBLE
    (276) startsWith -> STRING PUNTO . STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> STRING PUNTO . STARTSWITH PAR_I STRING COMA INT PAR_D

    TO_LONG         shift and go to state 456
    TO_INT          shift and go to state 457
    TO_FLOAT        shift and go to state 458
    TO_DOUBLE       shift and go to state 459
    STARTSWITH      shift and go to state 189


state 376

    (152) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (162) valores -> . valor
    (163) valores -> . valor COMA valores
    (93) valor -> . STRING
    (94) valor -> . CHAR
    (95) valor -> . VARIABLE
    (96) valor -> . numeros
    (97) valor -> . booleanos
    (98) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (99) valor -> . VARIABLE PAR_I INT PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 126
    CHAR            shift and go to state 127
    VARIABLE        shift and go to state 121
    INT             shift and go to state 136
    LONG            shift and go to state 129
    FLOAT           shift and go to state 130
    DOUBLE          shift and go to state 131
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117

    valores                        shift and go to state 460
    valor                          shift and go to state 124
    numeros                        shift and go to state 128
    booleanos                      shift and go to state 113
    startsWith                     shift and go to state 118

state 377

    (164) tuple -> PAR_I valores . PAR_D

    PAR_D           shift and go to state 461


state 378

    (159) list -> VAR VARIABLE IGUAL LISTCLASS PAR_I . valores PAR_D
    (162) valores -> . valor
    (163) valores -> . valor COMA valores
    (93) valor -> . STRING
    (94) valor -> . CHAR
    (95) valor -> . VARIABLE
    (96) valor -> . numeros
    (97) valor -> . booleanos
    (98) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (99) valor -> . VARIABLE PAR_I INT PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 126
    CHAR            shift and go to state 127
    VARIABLE        shift and go to state 121
    INT             shift and go to state 136
    LONG            shift and go to state 129
    FLOAT           shift and go to state 130
    DOUBLE          shift and go to state 131
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117

    valores                        shift and go to state 462
    valor                          shift and go to state 124
    numeros                        shift and go to state 128
    booleanos                      shift and go to state 113
    startsWith                     shift and go to state 118

state 379

    (51) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . VARIABLE
    (335) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . longvalues
    (338) longvalues -> . LONG
    (339) longvalues -> . intvalues
    (340) longvalues -> . stringCastLong
    (332) intvalues -> . INT
    (333) intvalues -> . stringCastInt
    (356) stringCastLong -> . STRING PUNTO TO_LONG
    (355) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 463
    LONG            shift and go to state 465
    INT             shift and go to state 467
    STRING          shift and go to state 468

    longvalues                     shift and go to state 464
    intvalues                      shift and go to state 466
    stringCastLong                 shift and go to state 249
    stringCastInt                  shift and go to state 250

state 380

    (53) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL . VARIABLE
    (329) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL . intvalues
    (304) asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL . sumIntChar
    (332) intvalues -> . INT
    (333) intvalues -> . stringCastInt
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (355) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 469
    INT             shift and go to state 472
    CHAR            shift and go to state 473
    STRING          shift and go to state 474

    intvalues                      shift and go to state 470
    sumIntChar                     shift and go to state 471
    stringCastInt                  shift and go to state 250

state 381

    (56) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . VARIABLE
    (342) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . floatvalues
    (345) floatvalues -> . FLOAT
    (346) floatvalues -> . longvalues
    (347) floatvalues -> . stringCastFloat
    (338) longvalues -> . LONG
    (339) longvalues -> . intvalues
    (340) longvalues -> . stringCastLong
    (357) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (332) intvalues -> . INT
    (333) intvalues -> . stringCastInt
    (356) stringCastLong -> . STRING PUNTO TO_LONG
    (355) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 475
    FLOAT           shift and go to state 477
    LONG            shift and go to state 465
    STRING          shift and go to state 479
    INT             shift and go to state 467

    floatvalues                    shift and go to state 476
    longvalues                     shift and go to state 478
    stringCastFloat                shift and go to state 251
    intvalues                      shift and go to state 466
    stringCastLong                 shift and go to state 249
    stringCastInt                  shift and go to state 250

state 382

    (58) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . VARIABLE
    (349) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . doublevalues
    (298) asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . sumIntDouble
    (300) asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . sumDoubleChar
    (352) doublevalues -> . DOUBLE
    (353) doublevalues -> . floatvalues
    (354) doublevalues -> . stringCastDouble
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE
    (345) floatvalues -> . FLOAT
    (346) floatvalues -> . longvalues
    (347) floatvalues -> . stringCastFloat
    (358) stringCastDouble -> . STRING PUNTO TO_DOUBLE
    (338) longvalues -> . LONG
    (339) longvalues -> . intvalues
    (340) longvalues -> . stringCastLong
    (357) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (332) intvalues -> . INT
    (333) intvalues -> . stringCastInt
    (356) stringCastLong -> . STRING PUNTO TO_LONG
    (355) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 480
    DOUBLE          shift and go to state 484
    INT             shift and go to state 486
    CHAR            shift and go to state 487
    FLOAT           shift and go to state 477
    STRING          shift and go to state 488
    LONG            shift and go to state 465

    doublevalues                   shift and go to state 481
    sumIntDouble                   shift and go to state 482
    sumDoubleChar                  shift and go to state 483
    floatvalues                    shift and go to state 485
    stringCastDouble               shift and go to state 252
    longvalues                     shift and go to state 478
    stringCastFloat                shift and go to state 251
    intvalues                      shift and go to state 466
    stringCastLong                 shift and go to state 249
    stringCastInt                  shift and go to state 250

state 383

    (62) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . STRING
    (65) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . VARIABLE
    (302) asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . sumStringChar
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING

    STRING          shift and go to state 490
    VARIABLE        shift and go to state 489
    CHAR            shift and go to state 492

    sumStringChar                  shift and go to state 491

state 384

    (69) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . CHAR
    (72) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . VARIABLE

    CHAR            shift and go to state 494
    VARIABLE        shift and go to state 493


state 385

    (75) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . booleanos
    (78) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . VARIABLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    VARIABLE        shift and go to state 495
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117
    STRING          shift and go to state 414

    booleanos                      shift and go to state 496
    startsWith                     shift and go to state 118

state 386

    (153) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (270) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (84) tipo -> . CHARCLASS
    (85) tipo -> . STRINGCLASS
    (86) tipo -> . BOOLCLASS
    (87) tipo -> . INTCLASS
    (88) tipo -> . LONGCLASS
    (89) tipo -> . DOUBLECLASS
    (90) tipo -> . FLOATCLASS
    (91) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (92) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    INTCLASS        shift and go to state 498
    DOUBLECLASS     shift and go to state 499
    CHARCLASS       shift and go to state 361
    STRINGCLASS     shift and go to state 362
    BOOLCLASS       shift and go to state 363
    LONGCLASS       shift and go to state 365
    FLOATCLASS      shift and go to state 367
    ARRAYCLASS      shift and go to state 368
    LISTCLASS       shift and go to state 369

    tipo                           shift and go to state 497

state 387

    (308) dectupla -> PAR_I STRINGCLASS . COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
    (309) dectupla -> PAR_I STRINGCLASS . COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
    (310) dectupla -> PAR_I STRINGCLASS . COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
    (311) dectupla -> PAR_I STRINGCLASS . COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D

    COMA            shift and go to state 500


state 388

    (324) dectupla -> PAR_I INTCLASS . COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
    (325) dectupla -> PAR_I INTCLASS . COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
    (326) dectupla -> PAR_I INTCLASS . COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
    (327) dectupla -> PAR_I INTCLASS . COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    COMA            shift and go to state 501


state 389

    (320) dectupla -> PAR_I LONGCLASS . COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
    (321) dectupla -> PAR_I LONGCLASS . COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
    (322) dectupla -> PAR_I LONGCLASS . COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
    (323) dectupla -> PAR_I LONGCLASS . COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D

    COMA            shift and go to state 502


state 390

    (316) dectupla -> PAR_I DOUBLECLASS . COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
    (317) dectupla -> PAR_I DOUBLECLASS . COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
    (318) dectupla -> PAR_I DOUBLECLASS . COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
    (319) dectupla -> PAR_I DOUBLECLASS . COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D

    COMA            shift and go to state 503


state 391

    (312) dectupla -> PAR_I FLOATCLASS . COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
    (313) dectupla -> PAR_I FLOATCLASS . COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
    (314) dectupla -> PAR_I FLOATCLASS . COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
    (315) dectupla -> PAR_I FLOATCLASS . COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D

    COMA            shift and go to state 504


state 392

    (281) listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I . CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (279) listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I . STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    CHARCLASS       shift and go to state 505
    STRINGCLASS     shift and go to state 506


state 393

    (154) array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (162) valores -> . valor
    (163) valores -> . valor COMA valores
    (93) valor -> . STRING
    (94) valor -> . CHAR
    (95) valor -> . VARIABLE
    (96) valor -> . numeros
    (97) valor -> . booleanos
    (98) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (99) valor -> . VARIABLE PAR_I INT PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 126
    CHAR            shift and go to state 127
    VARIABLE        shift and go to state 121
    INT             shift and go to state 136
    LONG            shift and go to state 129
    FLOAT           shift and go to state 130
    DOUBLE          shift and go to state 131
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117

    valores                        shift and go to state 507
    valor                          shift and go to state 124
    numeros                        shift and go to state 128
    booleanos                      shift and go to state 113
    startsWith                     shift and go to state 118

state 394

    (158) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I . valores PAR_D
    (162) valores -> . valor
    (163) valores -> . valor COMA valores
    (93) valor -> . STRING
    (94) valor -> . CHAR
    (95) valor -> . VARIABLE
    (96) valor -> . numeros
    (97) valor -> . booleanos
    (98) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (99) valor -> . VARIABLE PAR_I INT PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 126
    CHAR            shift and go to state 127
    VARIABLE        shift and go to state 121
    INT             shift and go to state 136
    LONG            shift and go to state 129
    FLOAT           shift and go to state 130
    DOUBLE          shift and go to state 131
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117

    valores                        shift and go to state 508
    valor                          shift and go to state 124
    numeros                        shift and go to state 128
    booleanos                      shift and go to state 113
    startsWith                     shift and go to state 118

state 395

    (52) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . VARIABLE
    (337) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . longvalues
    (338) longvalues -> . LONG
    (339) longvalues -> . intvalues
    (340) longvalues -> . stringCastLong
    (332) intvalues -> . INT
    (333) intvalues -> . stringCastInt
    (356) stringCastLong -> . STRING PUNTO TO_LONG
    (355) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 509
    LONG            shift and go to state 465
    INT             shift and go to state 467
    STRING          shift and go to state 468

    longvalues                     shift and go to state 510
    intvalues                      shift and go to state 466
    stringCastLong                 shift and go to state 249
    stringCastInt                  shift and go to state 250

state 396

    (54) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL . VARIABLE
    (331) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL . intvalues
    (305) asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL . sumIntChar
    (332) intvalues -> . INT
    (333) intvalues -> . stringCastInt
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (355) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 511
    INT             shift and go to state 472
    CHAR            shift and go to state 473
    STRING          shift and go to state 474

    intvalues                      shift and go to state 512
    sumIntChar                     shift and go to state 513
    stringCastInt                  shift and go to state 250

state 397

    (57) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . VARIABLE
    (344) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . floatvalues
    (345) floatvalues -> . FLOAT
    (346) floatvalues -> . longvalues
    (347) floatvalues -> . stringCastFloat
    (338) longvalues -> . LONG
    (339) longvalues -> . intvalues
    (340) longvalues -> . stringCastLong
    (357) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (332) intvalues -> . INT
    (333) intvalues -> . stringCastInt
    (356) stringCastLong -> . STRING PUNTO TO_LONG
    (355) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 514
    FLOAT           shift and go to state 477
    LONG            shift and go to state 465
    STRING          shift and go to state 479
    INT             shift and go to state 467

    floatvalues                    shift and go to state 515
    longvalues                     shift and go to state 478
    stringCastFloat                shift and go to state 251
    intvalues                      shift and go to state 466
    stringCastLong                 shift and go to state 249
    stringCastInt                  shift and go to state 250

state 398

    (59) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . VARIABLE
    (351) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . doublevalues
    (299) asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . sumIntDouble
    (301) asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . sumDoubleChar
    (352) doublevalues -> . DOUBLE
    (353) doublevalues -> . floatvalues
    (354) doublevalues -> . stringCastDouble
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE
    (345) floatvalues -> . FLOAT
    (346) floatvalues -> . longvalues
    (347) floatvalues -> . stringCastFloat
    (358) stringCastDouble -> . STRING PUNTO TO_DOUBLE
    (338) longvalues -> . LONG
    (339) longvalues -> . intvalues
    (340) longvalues -> . stringCastLong
    (357) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (332) intvalues -> . INT
    (333) intvalues -> . stringCastInt
    (356) stringCastLong -> . STRING PUNTO TO_LONG
    (355) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 516
    DOUBLE          shift and go to state 484
    INT             shift and go to state 486
    CHAR            shift and go to state 487
    FLOAT           shift and go to state 477
    STRING          shift and go to state 488
    LONG            shift and go to state 465

    doublevalues                   shift and go to state 517
    sumIntDouble                   shift and go to state 518
    sumDoubleChar                  shift and go to state 519
    floatvalues                    shift and go to state 485
    stringCastDouble               shift and go to state 252
    longvalues                     shift and go to state 478
    stringCastFloat                shift and go to state 251
    intvalues                      shift and go to state 466
    stringCastLong                 shift and go to state 249
    stringCastInt                  shift and go to state 250

state 399

    (64) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . STRING
    (66) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . VARIABLE
    (303) asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . sumStringChar
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING

    STRING          shift and go to state 521
    VARIABLE        shift and go to state 520
    CHAR            shift and go to state 492

    sumStringChar                  shift and go to state 522

state 400

    (71) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . CHAR
    (73) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . VARIABLE

    CHAR            shift and go to state 524
    VARIABLE        shift and go to state 523


state 401

    (77) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . booleanos
    (79) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . VARIABLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    VARIABLE        shift and go to state 525
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117
    STRING          shift and go to state 414

    booleanos                      shift and go to state 526
    startsWith                     shift and go to state 118

state 402

    (155) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (84) tipo -> . CHARCLASS
    (85) tipo -> . STRINGCLASS
    (86) tipo -> . BOOLCLASS
    (87) tipo -> . INTCLASS
    (88) tipo -> . LONGCLASS
    (89) tipo -> . DOUBLECLASS
    (90) tipo -> . FLOATCLASS
    (91) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (92) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 361
    STRINGCLASS     shift and go to state 362
    BOOLCLASS       shift and go to state 363
    INTCLASS        shift and go to state 364
    LONGCLASS       shift and go to state 365
    DOUBLECLASS     shift and go to state 366
    FLOATCLASS      shift and go to state 367
    ARRAYCLASS      shift and go to state 368
    LISTCLASS       shift and go to state 369

    tipo                           shift and go to state 527

state 403

    (280) listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I . CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I . STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    CHARCLASS       shift and go to state 528
    STRINGCLASS     shift and go to state 529


state 404

    (134) valorI -> valor MAS valorI .

    PAR_D           reduce using rule 134 (valorI -> valor MAS valorI .)


state 405

    (167) while -> WHILE PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

    contenido                      shift and go to state 530
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 406

    (220) condicional -> valorC logicos condicional .

    PAR_D           reduce using rule 220 (condicional -> valorC logicos condicional .)


state 407

    (245) relacional -> VARIABLE comparacion VARIABLE .

    AND             reduce using rule 245 (relacional -> VARIABLE comparacion VARIABLE .)
    OR              reduce using rule 245 (relacional -> VARIABLE comparacion VARIABLE .)
    PAR_D           reduce using rule 245 (relacional -> VARIABLE comparacion VARIABLE .)


state 408

    (237) relacional -> VARIABLE comparacion numeros .

    AND             reduce using rule 237 (relacional -> VARIABLE comparacion numeros .)
    OR              reduce using rule 237 (relacional -> VARIABLE comparacion numeros .)
    PAR_D           reduce using rule 237 (relacional -> VARIABLE comparacion numeros .)


state 409

    (239) relacional -> VARIABLE comparacion booleanos .

    AND             reduce using rule 239 (relacional -> VARIABLE comparacion booleanos .)
    OR              reduce using rule 239 (relacional -> VARIABLE comparacion booleanos .)
    PAR_D           reduce using rule 239 (relacional -> VARIABLE comparacion booleanos .)


state 410

    (241) relacional -> VARIABLE comparacion STRING .
    (276) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    AND             reduce using rule 241 (relacional -> VARIABLE comparacion STRING .)
    OR              reduce using rule 241 (relacional -> VARIABLE comparacion STRING .)
    PAR_D           reduce using rule 241 (relacional -> VARIABLE comparacion STRING .)
    PUNTO           shift and go to state 102


state 411

    (243) relacional -> VARIABLE comparacion CHAR .

    AND             reduce using rule 243 (relacional -> VARIABLE comparacion CHAR .)
    OR              reduce using rule 243 (relacional -> VARIABLE comparacion CHAR .)
    PAR_D           reduce using rule 243 (relacional -> VARIABLE comparacion CHAR .)


state 412

    (234) relacional -> booleanos comparacion booleanos .

    AND             reduce using rule 234 (relacional -> booleanos comparacion booleanos .)
    OR              reduce using rule 234 (relacional -> booleanos comparacion booleanos .)
    PAR_D           reduce using rule 234 (relacional -> booleanos comparacion booleanos .)


state 413

    (240) relacional -> booleanos comparacion VARIABLE .

    AND             reduce using rule 240 (relacional -> booleanos comparacion VARIABLE .)
    OR              reduce using rule 240 (relacional -> booleanos comparacion VARIABLE .)
    PAR_D           reduce using rule 240 (relacional -> booleanos comparacion VARIABLE .)


state 414

    (276) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    PUNTO           shift and go to state 102


state 415

    (230) relacional -> numeros comparacion numeros .
    (250) aritmetica -> numeros . aritmeticos numeros
    (252) aritmetica -> numeros . aritmeticos VARIABLE
    (258) aritmetica -> numeros . MAS VARIABLE
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD

    AND             reduce using rule 230 (relacional -> numeros comparacion numeros .)
    OR              reduce using rule 230 (relacional -> numeros comparacion numeros .)
    PAR_D           reduce using rule 230 (relacional -> numeros comparacion numeros .)
    MAS             shift and go to state 98
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66

    aritmeticos                    shift and go to state 97

state 416

    (233) relacional -> numeros comparacion aritmetica .
    (254) aritmetica -> aritmetica . aritmeticos numeros
    (255) aritmetica -> aritmetica . aritmeticos VARIABLE
    (260) aritmetica -> aritmetica . MAS numeros
    (261) aritmetica -> aritmetica . MAS VARIABLE
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD

    AND             reduce using rule 233 (relacional -> numeros comparacion aritmetica .)
    OR              reduce using rule 233 (relacional -> numeros comparacion aritmetica .)
    PAR_D           reduce using rule 233 (relacional -> numeros comparacion aritmetica .)
    MAS             shift and go to state 74
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66

    aritmeticos                    shift and go to state 73

state 417

    (238) relacional -> numeros comparacion VARIABLE .
    (251) aritmetica -> VARIABLE . aritmeticos numeros
    (253) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (257) aritmetica -> VARIABLE . MAS numeros
    (259) aritmetica -> VARIABLE . MAS VARIABLE
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD

    AND             reduce using rule 238 (relacional -> numeros comparacion VARIABLE .)
    OR              reduce using rule 238 (relacional -> numeros comparacion VARIABLE .)
    PAR_D           reduce using rule 238 (relacional -> numeros comparacion VARIABLE .)
    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66

    aritmeticos                    shift and go to state 61

state 418

    (296) sumStringChar -> STRING . MAS CHAR

    MAS             shift and go to state 103


state 419

    (231) relacional -> aritmetica comparacion aritmetica .
    (254) aritmetica -> aritmetica . aritmeticos numeros
    (255) aritmetica -> aritmetica . aritmeticos VARIABLE
    (260) aritmetica -> aritmetica . MAS numeros
    (261) aritmetica -> aritmetica . MAS VARIABLE
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD

    AND             reduce using rule 231 (relacional -> aritmetica comparacion aritmetica .)
    OR              reduce using rule 231 (relacional -> aritmetica comparacion aritmetica .)
    PAR_D           reduce using rule 231 (relacional -> aritmetica comparacion aritmetica .)
    MAS             shift and go to state 74
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66

    aritmeticos                    shift and go to state 73

state 420

    (232) relacional -> aritmetica comparacion numeros .
    (250) aritmetica -> numeros . aritmeticos numeros
    (252) aritmetica -> numeros . aritmeticos VARIABLE
    (258) aritmetica -> numeros . MAS VARIABLE
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD

    AND             reduce using rule 232 (relacional -> aritmetica comparacion numeros .)
    OR              reduce using rule 232 (relacional -> aritmetica comparacion numeros .)
    PAR_D           reduce using rule 232 (relacional -> aritmetica comparacion numeros .)
    MAS             shift and go to state 98
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66

    aritmeticos                    shift and go to state 97

state 421

    (251) aritmetica -> VARIABLE . aritmeticos numeros
    (253) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (257) aritmetica -> VARIABLE . MAS numeros
    (259) aritmetica -> VARIABLE . MAS VARIABLE
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD

    MAS             shift and go to state 62
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66

    aritmeticos                    shift and go to state 61

state 422

    (235) relacional -> STRING comparacion STRING .

    AND             reduce using rule 235 (relacional -> STRING comparacion STRING .)
    OR              reduce using rule 235 (relacional -> STRING comparacion STRING .)
    PAR_D           reduce using rule 235 (relacional -> STRING comparacion STRING .)


state 423

    (242) relacional -> STRING comparacion VARIABLE .

    AND             reduce using rule 242 (relacional -> STRING comparacion VARIABLE .)
    OR              reduce using rule 242 (relacional -> STRING comparacion VARIABLE .)
    PAR_D           reduce using rule 242 (relacional -> STRING comparacion VARIABLE .)


state 424

    (236) relacional -> CHAR comparacion CHAR .

    AND             reduce using rule 236 (relacional -> CHAR comparacion CHAR .)
    OR              reduce using rule 236 (relacional -> CHAR comparacion CHAR .)
    PAR_D           reduce using rule 236 (relacional -> CHAR comparacion CHAR .)


state 425

    (244) relacional -> CHAR comparacion VARIABLE .

    AND             reduce using rule 244 (relacional -> CHAR comparacion VARIABLE .)
    OR              reduce using rule 244 (relacional -> CHAR comparacion VARIABLE .)
    PAR_D           reduce using rule 244 (relacional -> CHAR comparacion VARIABLE .)


state 426

    (168) for -> FOR PAR_I VAR VARIABLE ITERATOR . VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR . INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> FOR PAR_I VAR VARIABLE ITERATOR . INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 531
    INT             shift and go to state 532


state 427

    (169) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 533


state 428

    (170) for -> FOR PAR_I VARIABLE ITERATOR INT . TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> FOR PAR_I VARIABLE ITERATOR INT . UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    TO              shift and go to state 534
    UNTIL           shift and go to state 535


state 429

    (213) if -> IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

    contenido                      shift and go to state 536
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 430

    (276) startsWith -> STRING PUNTO STARTSWITH PAR_I STRING . PAR_D
    (277) startsWith -> STRING PUNTO STARTSWITH PAR_I STRING . COMA INT PAR_D

    PAR_D           shift and go to state 537
    COMA            shift and go to state 538


state 431

    (98) valor -> VARIABLE PAR_I VARIABLE PAR_D .

    VAR             reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    VAL             reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    VARIABLE        reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    PRINTLN         reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    PRINT           reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    READLINE        reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    WHILE           reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    FOR             reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    IF              reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    INT             reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    DOUBLE          reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    LONG            reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    FLOAT           reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    STRING          reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    CHAR            reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    DEF             reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    $end            reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    LLAVE_D         reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    RETURN          reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    CASE            reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    COMA            reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    PAR_D           reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    MAS             reduce using rule 98 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)


state 432

    (99) valor -> VARIABLE PAR_I INT PAR_D .

    VAR             reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    VAL             reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    VARIABLE        reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    PRINTLN         reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    PRINT           reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    READLINE        reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    WHILE           reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    FOR             reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    IF              reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    INT             reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    DOUBLE          reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    LONG            reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    FLOAT           reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    STRING          reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    CHAR            reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    DEF             reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    $end            reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    LLAVE_D         reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    RETURN          reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    CASE            reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    COMA            reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    PAR_D           reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)
    MAS             reduce using rule 99 (valor -> VARIABLE PAR_I INT PAR_D .)


state 433

    (83) reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .

    VAR             reduce using rule 83 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    VAL             reduce using rule 83 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    VARIABLE        reduce using rule 83 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    PRINTLN         reduce using rule 83 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    PRINT           reduce using rule 83 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    READLINE        reduce using rule 83 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    WHILE           reduce using rule 83 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    FOR             reduce using rule 83 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    IF              reduce using rule 83 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    INT             reduce using rule 83 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    DOUBLE          reduce using rule 83 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    LONG            reduce using rule 83 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    FLOAT           reduce using rule 83 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    STRING          reduce using rule 83 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    CHAR            reduce using rule 83 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    DEF             reduce using rule 83 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    $end            reduce using rule 83 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    LLAVE_D         reduce using rule 83 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    RETURN          reduce using rule 83 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    CASE            reduce using rule 83 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)


state 434

    (210) defcase -> CASE SUBGUION . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 539


state 435

    (198) caseStr -> CASE STRING . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 440


state 436

    (182) caseInt -> CASE INT FUNCION_FLECHA . codeBlock
    (211) codeBlock -> . contenidoLine
    (212) codeBlock -> . LLAVE_I contenido LLAVE_D
    (31) contenidoLine -> . asignacion
    (32) contenidoLine -> . reasignacion
    (33) contenidoLine -> . funcall
    (34) contenidoLine -> . impresion
    (35) contenidoLine -> . entrada
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    LLAVE_I         shift and go to state 542
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 548
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34

    codeBlock                      shift and go to state 540
    contenidoLine                  shift and go to state 541
    asignacion                     shift and go to state 543
    reasignacion                   shift and go to state 544
    funcall                        shift and go to state 545
    impresion                      shift and go to state 546
    entrada                        shift and go to state 547
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51

state 437

    (186) caseLgn -> CASE LONG FUNCION_FLECHA . codeBlock
    (211) codeBlock -> . contenidoLine
    (212) codeBlock -> . LLAVE_I contenido LLAVE_D
    (31) contenidoLine -> . asignacion
    (32) contenidoLine -> . reasignacion
    (33) contenidoLine -> . funcall
    (34) contenidoLine -> . impresion
    (35) contenidoLine -> . entrada
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    LLAVE_I         shift and go to state 542
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 548
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34

    codeBlock                      shift and go to state 549
    contenidoLine                  shift and go to state 541
    asignacion                     shift and go to state 543
    reasignacion                   shift and go to state 544
    funcall                        shift and go to state 545
    impresion                      shift and go to state 546
    entrada                        shift and go to state 547
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51

state 438

    (190) caseFlt -> CASE FLOAT FUNCION_FLECHA . codeBlock
    (211) codeBlock -> . contenidoLine
    (212) codeBlock -> . LLAVE_I contenido LLAVE_D
    (31) contenidoLine -> . asignacion
    (32) contenidoLine -> . reasignacion
    (33) contenidoLine -> . funcall
    (34) contenidoLine -> . impresion
    (35) contenidoLine -> . entrada
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    LLAVE_I         shift and go to state 542
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 548
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34

    codeBlock                      shift and go to state 550
    contenidoLine                  shift and go to state 541
    asignacion                     shift and go to state 543
    reasignacion                   shift and go to state 544
    funcall                        shift and go to state 545
    impresion                      shift and go to state 546
    entrada                        shift and go to state 547
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51

state 439

    (194) caseDob -> CASE DOUBLE FUNCION_FLECHA . codeBlock
    (211) codeBlock -> . contenidoLine
    (212) codeBlock -> . LLAVE_I contenido LLAVE_D
    (31) contenidoLine -> . asignacion
    (32) contenidoLine -> . reasignacion
    (33) contenidoLine -> . funcall
    (34) contenidoLine -> . impresion
    (35) contenidoLine -> . entrada
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    LLAVE_I         shift and go to state 542
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 548
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34

    codeBlock                      shift and go to state 551
    contenidoLine                  shift and go to state 541
    asignacion                     shift and go to state 543
    reasignacion                   shift and go to state 544
    funcall                        shift and go to state 545
    impresion                      shift and go to state 546
    entrada                        shift and go to state 547
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51

state 440

    (198) caseStr -> CASE STRING FUNCION_FLECHA . codeBlock
    (211) codeBlock -> . contenidoLine
    (212) codeBlock -> . LLAVE_I contenido LLAVE_D
    (31) contenidoLine -> . asignacion
    (32) contenidoLine -> . reasignacion
    (33) contenidoLine -> . funcall
    (34) contenidoLine -> . impresion
    (35) contenidoLine -> . entrada
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    LLAVE_I         shift and go to state 542
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 548
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34

    codeBlock                      shift and go to state 552
    contenidoLine                  shift and go to state 541
    asignacion                     shift and go to state 543
    reasignacion                   shift and go to state 544
    funcall                        shift and go to state 545
    impresion                      shift and go to state 546
    entrada                        shift and go to state 547
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51

state 441

    (202) caseChar -> CASE CHAR FUNCION_FLECHA . codeBlock
    (211) codeBlock -> . contenidoLine
    (212) codeBlock -> . LLAVE_I contenido LLAVE_D
    (31) contenidoLine -> . asignacion
    (32) contenidoLine -> . reasignacion
    (33) contenidoLine -> . funcall
    (34) contenidoLine -> . impresion
    (35) contenidoLine -> . entrada
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    LLAVE_I         shift and go to state 542
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 548
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34

    codeBlock                      shift and go to state 553
    contenidoLine                  shift and go to state 541
    asignacion                     shift and go to state 543
    reasignacion                   shift and go to state 544
    funcall                        shift and go to state 545
    impresion                      shift and go to state 546
    entrada                        shift and go to state 547
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51

state 442

    (206) caseBool -> CASE booleanos FUNCION_FLECHA . codeBlock
    (211) codeBlock -> . contenidoLine
    (212) codeBlock -> . LLAVE_I contenido LLAVE_D
    (31) contenidoLine -> . asignacion
    (32) contenidoLine -> . reasignacion
    (33) contenidoLine -> . funcall
    (34) contenidoLine -> . impresion
    (35) contenidoLine -> . entrada
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    LLAVE_I         shift and go to state 542
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 548
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34

    codeBlock                      shift and go to state 554
    contenidoLine                  shift and go to state 541
    asignacion                     shift and go to state 543
    reasignacion                   shift and go to state 544
    funcall                        shift and go to state 545
    impresion                      shift and go to state 546
    entrada                        shift and go to state 547
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51

state 443

    (4) io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE . PUNTO READLINE

    PUNTO           shift and go to state 555


state 444

    (107) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 556


state 445

    (108) funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 108 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 108 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 108 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 108 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 108 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 108 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 108 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 108 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 108 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 108 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 108 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 108 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 108 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 108 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 108 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 108 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 108 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 108 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)


state 446

    (115) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN valor LLAVE_D
    (116) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN VARIABLE LLAVE_D
    (117) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN returnfun LLAVE_D
    (118) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN aritmetica LLAVE_D
    (119) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . RETURN valor LLAVE_D
    (120) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . RETURN VARIABLE LLAVE_D
    (121) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . RETURN returnfun LLAVE_D
    (122) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . RETURN aritmetica LLAVE_D
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    RETURN          shift and go to state 558
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

    contenido                      shift and go to state 557
    aritmetica                     shift and go to state 9
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 447

    (123) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN tuple LLAVE_D
    (124) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN returnfun LLAVE_D
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

    contenido                      shift and go to state 559
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 448

    (127) dectipoTupla -> DOBLE_PUNTO PAR_I tipos . PAR_D

    PAR_D           shift and go to state 560


state 449

    (128) tipos -> tipo .
    (129) tipos -> tipo . tiposentry
    (130) tiposentry -> . COMA tipo
    (131) tiposentry -> . COMA tipo tiposentry

    PAR_D           reduce using rule 128 (tipos -> tipo .)
    COMA            shift and go to state 562

    tiposentry                     shift and go to state 561

state 450

    (91) tipo -> ARRAYCLASS CORCHETE_I . tipo CORCHETE_D
    (84) tipo -> . CHARCLASS
    (85) tipo -> . STRINGCLASS
    (86) tipo -> . BOOLCLASS
    (87) tipo -> . INTCLASS
    (88) tipo -> . LONGCLASS
    (89) tipo -> . DOUBLECLASS
    (90) tipo -> . FLOATCLASS
    (91) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (92) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 361
    STRINGCLASS     shift and go to state 362
    BOOLCLASS       shift and go to state 363
    INTCLASS        shift and go to state 364
    LONGCLASS       shift and go to state 365
    DOUBLECLASS     shift and go to state 366
    FLOATCLASS      shift and go to state 367
    ARRAYCLASS      shift and go to state 368
    LISTCLASS       shift and go to state 369

    tipo                           shift and go to state 563

state 451

    (92) tipo -> LISTCLASS CORCHETE_I . tipo CORCHETE_D
    (84) tipo -> . CHARCLASS
    (85) tipo -> . STRINGCLASS
    (86) tipo -> . BOOLCLASS
    (87) tipo -> . INTCLASS
    (88) tipo -> . LONGCLASS
    (89) tipo -> . DOUBLECLASS
    (90) tipo -> . FLOATCLASS
    (91) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (92) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 361
    STRINGCLASS     shift and go to state 362
    BOOLCLASS       shift and go to state 363
    INTCLASS        shift and go to state 364
    LONGCLASS       shift and go to state 365
    DOUBLECLASS     shift and go to state 366
    FLOATCLASS      shift and go to state 367
    ARRAYCLASS      shift and go to state 368
    LISTCLASS       shift and go to state 369

    tipo                           shift and go to state 564

state 452

    (113) parametros -> PAR_I . declaracion PAR_D
    (114) parametros -> PAR_I . declaracion PAR_D parametros
    (109) declaracion -> . VARIABLE DOBLE_PUNTO tipo
    (110) declaracion -> . VARIABLE DOBLE_PUNTO tipo IGUAL valor

    VARIABLE        shift and go to state 228

    declaracion                    shift and go to state 227

state 453

    (114) parametros -> PAR_I declaracion PAR_D parametros .

    IGUAL           reduce using rule 114 (parametros -> PAR_I declaracion PAR_D parametros .)
    LLAVE_I         reduce using rule 114 (parametros -> PAR_I declaracion PAR_D parametros .)
    DOBLE_PUNTO     reduce using rule 114 (parametros -> PAR_I declaracion PAR_D parametros .)


state 454

    (109) declaracion -> VARIABLE DOBLE_PUNTO tipo .
    (110) declaracion -> VARIABLE DOBLE_PUNTO tipo . IGUAL valor

    PAR_D           reduce using rule 109 (declaracion -> VARIABLE DOBLE_PUNTO tipo .)
    IGUAL           shift and go to state 565


state 455

    (216) elseif -> ELSE IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D
    (217) elseif -> ELSE IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D elseif

    LLAVE_I         shift and go to state 566


state 456

    (356) stringCastLong -> STRING PUNTO TO_LONG .

    VAR             reduce using rule 356 (stringCastLong -> STRING PUNTO TO_LONG .)
    VAL             reduce using rule 356 (stringCastLong -> STRING PUNTO TO_LONG .)
    VARIABLE        reduce using rule 356 (stringCastLong -> STRING PUNTO TO_LONG .)
    PRINTLN         reduce using rule 356 (stringCastLong -> STRING PUNTO TO_LONG .)
    PRINT           reduce using rule 356 (stringCastLong -> STRING PUNTO TO_LONG .)
    READLINE        reduce using rule 356 (stringCastLong -> STRING PUNTO TO_LONG .)
    WHILE           reduce using rule 356 (stringCastLong -> STRING PUNTO TO_LONG .)
    FOR             reduce using rule 356 (stringCastLong -> STRING PUNTO TO_LONG .)
    IF              reduce using rule 356 (stringCastLong -> STRING PUNTO TO_LONG .)
    INT             reduce using rule 356 (stringCastLong -> STRING PUNTO TO_LONG .)
    DOUBLE          reduce using rule 356 (stringCastLong -> STRING PUNTO TO_LONG .)
    LONG            reduce using rule 356 (stringCastLong -> STRING PUNTO TO_LONG .)
    FLOAT           reduce using rule 356 (stringCastLong -> STRING PUNTO TO_LONG .)
    STRING          reduce using rule 356 (stringCastLong -> STRING PUNTO TO_LONG .)
    CHAR            reduce using rule 356 (stringCastLong -> STRING PUNTO TO_LONG .)
    DEF             reduce using rule 356 (stringCastLong -> STRING PUNTO TO_LONG .)
    $end            reduce using rule 356 (stringCastLong -> STRING PUNTO TO_LONG .)
    LLAVE_D         reduce using rule 356 (stringCastLong -> STRING PUNTO TO_LONG .)
    RETURN          reduce using rule 356 (stringCastLong -> STRING PUNTO TO_LONG .)
    CASE            reduce using rule 356 (stringCastLong -> STRING PUNTO TO_LONG .)


state 457

    (355) stringCastInt -> STRING PUNTO TO_INT .

    VAR             reduce using rule 355 (stringCastInt -> STRING PUNTO TO_INT .)
    VAL             reduce using rule 355 (stringCastInt -> STRING PUNTO TO_INT .)
    VARIABLE        reduce using rule 355 (stringCastInt -> STRING PUNTO TO_INT .)
    PRINTLN         reduce using rule 355 (stringCastInt -> STRING PUNTO TO_INT .)
    PRINT           reduce using rule 355 (stringCastInt -> STRING PUNTO TO_INT .)
    READLINE        reduce using rule 355 (stringCastInt -> STRING PUNTO TO_INT .)
    WHILE           reduce using rule 355 (stringCastInt -> STRING PUNTO TO_INT .)
    FOR             reduce using rule 355 (stringCastInt -> STRING PUNTO TO_INT .)
    IF              reduce using rule 355 (stringCastInt -> STRING PUNTO TO_INT .)
    INT             reduce using rule 355 (stringCastInt -> STRING PUNTO TO_INT .)
    DOUBLE          reduce using rule 355 (stringCastInt -> STRING PUNTO TO_INT .)
    LONG            reduce using rule 355 (stringCastInt -> STRING PUNTO TO_INT .)
    FLOAT           reduce using rule 355 (stringCastInt -> STRING PUNTO TO_INT .)
    STRING          reduce using rule 355 (stringCastInt -> STRING PUNTO TO_INT .)
    CHAR            reduce using rule 355 (stringCastInt -> STRING PUNTO TO_INT .)
    DEF             reduce using rule 355 (stringCastInt -> STRING PUNTO TO_INT .)
    $end            reduce using rule 355 (stringCastInt -> STRING PUNTO TO_INT .)
    LLAVE_D         reduce using rule 355 (stringCastInt -> STRING PUNTO TO_INT .)
    RETURN          reduce using rule 355 (stringCastInt -> STRING PUNTO TO_INT .)
    CASE            reduce using rule 355 (stringCastInt -> STRING PUNTO TO_INT .)


state 458

    (357) stringCastFloat -> STRING PUNTO TO_FLOAT .

    VAR             reduce using rule 357 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    VAL             reduce using rule 357 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    VARIABLE        reduce using rule 357 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    PRINTLN         reduce using rule 357 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    PRINT           reduce using rule 357 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    READLINE        reduce using rule 357 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    WHILE           reduce using rule 357 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    FOR             reduce using rule 357 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    IF              reduce using rule 357 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    INT             reduce using rule 357 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    DOUBLE          reduce using rule 357 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    LONG            reduce using rule 357 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    FLOAT           reduce using rule 357 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    STRING          reduce using rule 357 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    CHAR            reduce using rule 357 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    DEF             reduce using rule 357 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    $end            reduce using rule 357 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    LLAVE_D         reduce using rule 357 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    RETURN          reduce using rule 357 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    CASE            reduce using rule 357 (stringCastFloat -> STRING PUNTO TO_FLOAT .)


state 459

    (358) stringCastDouble -> STRING PUNTO TO_DOUBLE .

    VAR             reduce using rule 358 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    VAL             reduce using rule 358 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    VARIABLE        reduce using rule 358 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    PRINTLN         reduce using rule 358 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    PRINT           reduce using rule 358 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    READLINE        reduce using rule 358 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    WHILE           reduce using rule 358 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    FOR             reduce using rule 358 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    IF              reduce using rule 358 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    INT             reduce using rule 358 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    DOUBLE          reduce using rule 358 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    LONG            reduce using rule 358 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    FLOAT           reduce using rule 358 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    STRING          reduce using rule 358 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    CHAR            reduce using rule 358 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    DEF             reduce using rule 358 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    $end            reduce using rule 358 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    LLAVE_D         reduce using rule 358 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    RETURN          reduce using rule 358 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    CASE            reduce using rule 358 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)


state 460

    (152) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 567


state 461

    (164) tuple -> PAR_I valores PAR_D .

    VAR             reduce using rule 164 (tuple -> PAR_I valores PAR_D .)
    VAL             reduce using rule 164 (tuple -> PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 164 (tuple -> PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 164 (tuple -> PAR_I valores PAR_D .)
    PRINT           reduce using rule 164 (tuple -> PAR_I valores PAR_D .)
    READLINE        reduce using rule 164 (tuple -> PAR_I valores PAR_D .)
    WHILE           reduce using rule 164 (tuple -> PAR_I valores PAR_D .)
    FOR             reduce using rule 164 (tuple -> PAR_I valores PAR_D .)
    IF              reduce using rule 164 (tuple -> PAR_I valores PAR_D .)
    INT             reduce using rule 164 (tuple -> PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 164 (tuple -> PAR_I valores PAR_D .)
    LONG            reduce using rule 164 (tuple -> PAR_I valores PAR_D .)
    FLOAT           reduce using rule 164 (tuple -> PAR_I valores PAR_D .)
    STRING          reduce using rule 164 (tuple -> PAR_I valores PAR_D .)
    CHAR            reduce using rule 164 (tuple -> PAR_I valores PAR_D .)
    DEF             reduce using rule 164 (tuple -> PAR_I valores PAR_D .)
    $end            reduce using rule 164 (tuple -> PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 164 (tuple -> PAR_I valores PAR_D .)
    RETURN          reduce using rule 164 (tuple -> PAR_I valores PAR_D .)
    CASE            reduce using rule 164 (tuple -> PAR_I valores PAR_D .)


state 462

    (159) list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 568


state 463

    (51) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .

    VAR             reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    DEF             reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)


state 464

    (335) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .

    VAR             reduce using rule 335 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VAL             reduce using rule 335 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VARIABLE        reduce using rule 335 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    PRINTLN         reduce using rule 335 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    PRINT           reduce using rule 335 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    READLINE        reduce using rule 335 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    WHILE           reduce using rule 335 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    FOR             reduce using rule 335 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    IF              reduce using rule 335 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    INT             reduce using rule 335 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    DOUBLE          reduce using rule 335 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    LONG            reduce using rule 335 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    FLOAT           reduce using rule 335 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    STRING          reduce using rule 335 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    CHAR            reduce using rule 335 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    DEF             reduce using rule 335 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    $end            reduce using rule 335 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    LLAVE_D         reduce using rule 335 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    RETURN          reduce using rule 335 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    CASE            reduce using rule 335 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)


state 465

    (338) longvalues -> LONG .

    VAR             reduce using rule 338 (longvalues -> LONG .)
    VAL             reduce using rule 338 (longvalues -> LONG .)
    VARIABLE        reduce using rule 338 (longvalues -> LONG .)
    PRINTLN         reduce using rule 338 (longvalues -> LONG .)
    PRINT           reduce using rule 338 (longvalues -> LONG .)
    READLINE        reduce using rule 338 (longvalues -> LONG .)
    WHILE           reduce using rule 338 (longvalues -> LONG .)
    FOR             reduce using rule 338 (longvalues -> LONG .)
    IF              reduce using rule 338 (longvalues -> LONG .)
    INT             reduce using rule 338 (longvalues -> LONG .)
    DOUBLE          reduce using rule 338 (longvalues -> LONG .)
    LONG            reduce using rule 338 (longvalues -> LONG .)
    FLOAT           reduce using rule 338 (longvalues -> LONG .)
    STRING          reduce using rule 338 (longvalues -> LONG .)
    CHAR            reduce using rule 338 (longvalues -> LONG .)
    DEF             reduce using rule 338 (longvalues -> LONG .)
    $end            reduce using rule 338 (longvalues -> LONG .)
    LLAVE_D         reduce using rule 338 (longvalues -> LONG .)
    RETURN          reduce using rule 338 (longvalues -> LONG .)
    CASE            reduce using rule 338 (longvalues -> LONG .)


state 466

    (339) longvalues -> intvalues .

    VAR             reduce using rule 339 (longvalues -> intvalues .)
    VAL             reduce using rule 339 (longvalues -> intvalues .)
    VARIABLE        reduce using rule 339 (longvalues -> intvalues .)
    PRINTLN         reduce using rule 339 (longvalues -> intvalues .)
    PRINT           reduce using rule 339 (longvalues -> intvalues .)
    READLINE        reduce using rule 339 (longvalues -> intvalues .)
    WHILE           reduce using rule 339 (longvalues -> intvalues .)
    FOR             reduce using rule 339 (longvalues -> intvalues .)
    IF              reduce using rule 339 (longvalues -> intvalues .)
    INT             reduce using rule 339 (longvalues -> intvalues .)
    DOUBLE          reduce using rule 339 (longvalues -> intvalues .)
    LONG            reduce using rule 339 (longvalues -> intvalues .)
    FLOAT           reduce using rule 339 (longvalues -> intvalues .)
    STRING          reduce using rule 339 (longvalues -> intvalues .)
    CHAR            reduce using rule 339 (longvalues -> intvalues .)
    DEF             reduce using rule 339 (longvalues -> intvalues .)
    $end            reduce using rule 339 (longvalues -> intvalues .)
    LLAVE_D         reduce using rule 339 (longvalues -> intvalues .)
    RETURN          reduce using rule 339 (longvalues -> intvalues .)
    CASE            reduce using rule 339 (longvalues -> intvalues .)


state 467

    (332) intvalues -> INT .

    VAR             reduce using rule 332 (intvalues -> INT .)
    VAL             reduce using rule 332 (intvalues -> INT .)
    VARIABLE        reduce using rule 332 (intvalues -> INT .)
    PRINTLN         reduce using rule 332 (intvalues -> INT .)
    PRINT           reduce using rule 332 (intvalues -> INT .)
    READLINE        reduce using rule 332 (intvalues -> INT .)
    WHILE           reduce using rule 332 (intvalues -> INT .)
    FOR             reduce using rule 332 (intvalues -> INT .)
    IF              reduce using rule 332 (intvalues -> INT .)
    INT             reduce using rule 332 (intvalues -> INT .)
    DOUBLE          reduce using rule 332 (intvalues -> INT .)
    LONG            reduce using rule 332 (intvalues -> INT .)
    FLOAT           reduce using rule 332 (intvalues -> INT .)
    STRING          reduce using rule 332 (intvalues -> INT .)
    CHAR            reduce using rule 332 (intvalues -> INT .)
    DEF             reduce using rule 332 (intvalues -> INT .)
    $end            reduce using rule 332 (intvalues -> INT .)
    LLAVE_D         reduce using rule 332 (intvalues -> INT .)
    RETURN          reduce using rule 332 (intvalues -> INT .)
    CASE            reduce using rule 332 (intvalues -> INT .)


state 468

    (356) stringCastLong -> STRING . PUNTO TO_LONG
    (355) stringCastInt -> STRING . PUNTO TO_INT

    PUNTO           shift and go to state 569


state 469

    (53) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .

    VAR             reduce using rule 53 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 53 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 53 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 53 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 53 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 53 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 53 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 53 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    IF              reduce using rule 53 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    INT             reduce using rule 53 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 53 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 53 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 53 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 53 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 53 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    DEF             reduce using rule 53 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    $end            reduce using rule 53 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 53 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 53 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 53 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)


state 470

    (329) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .

    VAR             reduce using rule 329 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VAL             reduce using rule 329 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VARIABLE        reduce using rule 329 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    PRINTLN         reduce using rule 329 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    PRINT           reduce using rule 329 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    READLINE        reduce using rule 329 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    WHILE           reduce using rule 329 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    FOR             reduce using rule 329 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    IF              reduce using rule 329 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    INT             reduce using rule 329 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    DOUBLE          reduce using rule 329 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    LONG            reduce using rule 329 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    FLOAT           reduce using rule 329 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    STRING          reduce using rule 329 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    CHAR            reduce using rule 329 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    DEF             reduce using rule 329 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    $end            reduce using rule 329 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    LLAVE_D         reduce using rule 329 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    RETURN          reduce using rule 329 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    CASE            reduce using rule 329 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)


state 471

    (304) asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .

    VAR             reduce using rule 304 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    VAL             reduce using rule 304 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    VARIABLE        reduce using rule 304 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    PRINTLN         reduce using rule 304 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    PRINT           reduce using rule 304 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    READLINE        reduce using rule 304 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    WHILE           reduce using rule 304 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    FOR             reduce using rule 304 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    IF              reduce using rule 304 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    INT             reduce using rule 304 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    DOUBLE          reduce using rule 304 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    LONG            reduce using rule 304 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    FLOAT           reduce using rule 304 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    STRING          reduce using rule 304 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    CHAR            reduce using rule 304 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    DEF             reduce using rule 304 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    $end            reduce using rule 304 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    LLAVE_D         reduce using rule 304 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    RETURN          reduce using rule 304 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    CASE            reduce using rule 304 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)


state 472

    (332) intvalues -> INT .
    (294) sumIntChar -> INT . MAS CHAR

    VAR             reduce using rule 332 (intvalues -> INT .)
    VAL             reduce using rule 332 (intvalues -> INT .)
    VARIABLE        reduce using rule 332 (intvalues -> INT .)
    PRINTLN         reduce using rule 332 (intvalues -> INT .)
    PRINT           reduce using rule 332 (intvalues -> INT .)
    READLINE        reduce using rule 332 (intvalues -> INT .)
    WHILE           reduce using rule 332 (intvalues -> INT .)
    FOR             reduce using rule 332 (intvalues -> INT .)
    IF              reduce using rule 332 (intvalues -> INT .)
    INT             reduce using rule 332 (intvalues -> INT .)
    DOUBLE          reduce using rule 332 (intvalues -> INT .)
    LONG            reduce using rule 332 (intvalues -> INT .)
    FLOAT           reduce using rule 332 (intvalues -> INT .)
    STRING          reduce using rule 332 (intvalues -> INT .)
    CHAR            reduce using rule 332 (intvalues -> INT .)
    DEF             reduce using rule 332 (intvalues -> INT .)
    $end            reduce using rule 332 (intvalues -> INT .)
    LLAVE_D         reduce using rule 332 (intvalues -> INT .)
    RETURN          reduce using rule 332 (intvalues -> INT .)
    CASE            reduce using rule 332 (intvalues -> INT .)
    MAS             shift and go to state 570


state 473

    (295) sumIntChar -> CHAR . MAS INT

    MAS             shift and go to state 571


state 474

    (355) stringCastInt -> STRING . PUNTO TO_INT

    PUNTO           shift and go to state 572


state 475

    (56) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .

    VAR             reduce using rule 56 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 56 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 56 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 56 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 56 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 56 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 56 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 56 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    IF              reduce using rule 56 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    INT             reduce using rule 56 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 56 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 56 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 56 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 56 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 56 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    DEF             reduce using rule 56 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    $end            reduce using rule 56 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 56 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 56 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 56 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)


state 476

    (342) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .

    VAR             reduce using rule 342 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VAL             reduce using rule 342 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VARIABLE        reduce using rule 342 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    PRINTLN         reduce using rule 342 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    PRINT           reduce using rule 342 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    READLINE        reduce using rule 342 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    WHILE           reduce using rule 342 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    FOR             reduce using rule 342 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    IF              reduce using rule 342 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    INT             reduce using rule 342 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    DOUBLE          reduce using rule 342 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    LONG            reduce using rule 342 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    FLOAT           reduce using rule 342 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    STRING          reduce using rule 342 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    CHAR            reduce using rule 342 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    DEF             reduce using rule 342 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    $end            reduce using rule 342 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    LLAVE_D         reduce using rule 342 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    RETURN          reduce using rule 342 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    CASE            reduce using rule 342 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)


state 477

    (345) floatvalues -> FLOAT .

    VAR             reduce using rule 345 (floatvalues -> FLOAT .)
    VAL             reduce using rule 345 (floatvalues -> FLOAT .)
    VARIABLE        reduce using rule 345 (floatvalues -> FLOAT .)
    PRINTLN         reduce using rule 345 (floatvalues -> FLOAT .)
    PRINT           reduce using rule 345 (floatvalues -> FLOAT .)
    READLINE        reduce using rule 345 (floatvalues -> FLOAT .)
    WHILE           reduce using rule 345 (floatvalues -> FLOAT .)
    FOR             reduce using rule 345 (floatvalues -> FLOAT .)
    IF              reduce using rule 345 (floatvalues -> FLOAT .)
    INT             reduce using rule 345 (floatvalues -> FLOAT .)
    DOUBLE          reduce using rule 345 (floatvalues -> FLOAT .)
    LONG            reduce using rule 345 (floatvalues -> FLOAT .)
    FLOAT           reduce using rule 345 (floatvalues -> FLOAT .)
    STRING          reduce using rule 345 (floatvalues -> FLOAT .)
    CHAR            reduce using rule 345 (floatvalues -> FLOAT .)
    DEF             reduce using rule 345 (floatvalues -> FLOAT .)
    $end            reduce using rule 345 (floatvalues -> FLOAT .)
    LLAVE_D         reduce using rule 345 (floatvalues -> FLOAT .)
    RETURN          reduce using rule 345 (floatvalues -> FLOAT .)
    CASE            reduce using rule 345 (floatvalues -> FLOAT .)


state 478

    (346) floatvalues -> longvalues .

    VAR             reduce using rule 346 (floatvalues -> longvalues .)
    VAL             reduce using rule 346 (floatvalues -> longvalues .)
    VARIABLE        reduce using rule 346 (floatvalues -> longvalues .)
    PRINTLN         reduce using rule 346 (floatvalues -> longvalues .)
    PRINT           reduce using rule 346 (floatvalues -> longvalues .)
    READLINE        reduce using rule 346 (floatvalues -> longvalues .)
    WHILE           reduce using rule 346 (floatvalues -> longvalues .)
    FOR             reduce using rule 346 (floatvalues -> longvalues .)
    IF              reduce using rule 346 (floatvalues -> longvalues .)
    INT             reduce using rule 346 (floatvalues -> longvalues .)
    DOUBLE          reduce using rule 346 (floatvalues -> longvalues .)
    LONG            reduce using rule 346 (floatvalues -> longvalues .)
    FLOAT           reduce using rule 346 (floatvalues -> longvalues .)
    STRING          reduce using rule 346 (floatvalues -> longvalues .)
    CHAR            reduce using rule 346 (floatvalues -> longvalues .)
    DEF             reduce using rule 346 (floatvalues -> longvalues .)
    $end            reduce using rule 346 (floatvalues -> longvalues .)
    LLAVE_D         reduce using rule 346 (floatvalues -> longvalues .)
    RETURN          reduce using rule 346 (floatvalues -> longvalues .)
    CASE            reduce using rule 346 (floatvalues -> longvalues .)


state 479

    (357) stringCastFloat -> STRING . PUNTO TO_FLOAT
    (356) stringCastLong -> STRING . PUNTO TO_LONG
    (355) stringCastInt -> STRING . PUNTO TO_INT

    PUNTO           shift and go to state 573


state 480

    (58) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .

    VAR             reduce using rule 58 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAL             reduce using rule 58 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 58 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 58 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 58 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 58 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 58 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FOR             reduce using rule 58 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    IF              reduce using rule 58 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    INT             reduce using rule 58 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 58 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LONG            reduce using rule 58 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 58 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    STRING          reduce using rule 58 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 58 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    DEF             reduce using rule 58 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    $end            reduce using rule 58 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 58 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 58 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    CASE            reduce using rule 58 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)


state 481

    (349) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .

    VAR             reduce using rule 349 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VAL             reduce using rule 349 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VARIABLE        reduce using rule 349 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    PRINTLN         reduce using rule 349 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    PRINT           reduce using rule 349 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    READLINE        reduce using rule 349 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    WHILE           reduce using rule 349 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    FOR             reduce using rule 349 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    IF              reduce using rule 349 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    INT             reduce using rule 349 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    DOUBLE          reduce using rule 349 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    LONG            reduce using rule 349 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    FLOAT           reduce using rule 349 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    STRING          reduce using rule 349 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    CHAR            reduce using rule 349 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    DEF             reduce using rule 349 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    $end            reduce using rule 349 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    LLAVE_D         reduce using rule 349 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    RETURN          reduce using rule 349 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    CASE            reduce using rule 349 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)


state 482

    (298) asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .

    VAR             reduce using rule 298 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    VAL             reduce using rule 298 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    VARIABLE        reduce using rule 298 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    PRINTLN         reduce using rule 298 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    PRINT           reduce using rule 298 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    READLINE        reduce using rule 298 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    WHILE           reduce using rule 298 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    FOR             reduce using rule 298 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    IF              reduce using rule 298 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    INT             reduce using rule 298 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    DOUBLE          reduce using rule 298 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    LONG            reduce using rule 298 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    FLOAT           reduce using rule 298 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    STRING          reduce using rule 298 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    CHAR            reduce using rule 298 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    DEF             reduce using rule 298 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    $end            reduce using rule 298 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    LLAVE_D         reduce using rule 298 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    RETURN          reduce using rule 298 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    CASE            reduce using rule 298 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)


state 483

    (300) asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .

    VAR             reduce using rule 300 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    VAL             reduce using rule 300 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    VARIABLE        reduce using rule 300 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    PRINTLN         reduce using rule 300 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    PRINT           reduce using rule 300 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    READLINE        reduce using rule 300 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    WHILE           reduce using rule 300 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    FOR             reduce using rule 300 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    IF              reduce using rule 300 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    INT             reduce using rule 300 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    DOUBLE          reduce using rule 300 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    LONG            reduce using rule 300 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    FLOAT           reduce using rule 300 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    STRING          reduce using rule 300 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    CHAR            reduce using rule 300 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    DEF             reduce using rule 300 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    $end            reduce using rule 300 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    LLAVE_D         reduce using rule 300 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    RETURN          reduce using rule 300 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    CASE            reduce using rule 300 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)


state 484

    (352) doublevalues -> DOUBLE .
    (291) sumIntDouble -> DOUBLE . MAS INT
    (292) sumDoubleChar -> DOUBLE . MAS CHAR

    VAR             reduce using rule 352 (doublevalues -> DOUBLE .)
    VAL             reduce using rule 352 (doublevalues -> DOUBLE .)
    VARIABLE        reduce using rule 352 (doublevalues -> DOUBLE .)
    PRINTLN         reduce using rule 352 (doublevalues -> DOUBLE .)
    PRINT           reduce using rule 352 (doublevalues -> DOUBLE .)
    READLINE        reduce using rule 352 (doublevalues -> DOUBLE .)
    WHILE           reduce using rule 352 (doublevalues -> DOUBLE .)
    FOR             reduce using rule 352 (doublevalues -> DOUBLE .)
    IF              reduce using rule 352 (doublevalues -> DOUBLE .)
    INT             reduce using rule 352 (doublevalues -> DOUBLE .)
    DOUBLE          reduce using rule 352 (doublevalues -> DOUBLE .)
    LONG            reduce using rule 352 (doublevalues -> DOUBLE .)
    FLOAT           reduce using rule 352 (doublevalues -> DOUBLE .)
    STRING          reduce using rule 352 (doublevalues -> DOUBLE .)
    CHAR            reduce using rule 352 (doublevalues -> DOUBLE .)
    DEF             reduce using rule 352 (doublevalues -> DOUBLE .)
    $end            reduce using rule 352 (doublevalues -> DOUBLE .)
    LLAVE_D         reduce using rule 352 (doublevalues -> DOUBLE .)
    RETURN          reduce using rule 352 (doublevalues -> DOUBLE .)
    CASE            reduce using rule 352 (doublevalues -> DOUBLE .)
    MAS             shift and go to state 574


state 485

    (353) doublevalues -> floatvalues .

    VAR             reduce using rule 353 (doublevalues -> floatvalues .)
    VAL             reduce using rule 353 (doublevalues -> floatvalues .)
    VARIABLE        reduce using rule 353 (doublevalues -> floatvalues .)
    PRINTLN         reduce using rule 353 (doublevalues -> floatvalues .)
    PRINT           reduce using rule 353 (doublevalues -> floatvalues .)
    READLINE        reduce using rule 353 (doublevalues -> floatvalues .)
    WHILE           reduce using rule 353 (doublevalues -> floatvalues .)
    FOR             reduce using rule 353 (doublevalues -> floatvalues .)
    IF              reduce using rule 353 (doublevalues -> floatvalues .)
    INT             reduce using rule 353 (doublevalues -> floatvalues .)
    DOUBLE          reduce using rule 353 (doublevalues -> floatvalues .)
    LONG            reduce using rule 353 (doublevalues -> floatvalues .)
    FLOAT           reduce using rule 353 (doublevalues -> floatvalues .)
    STRING          reduce using rule 353 (doublevalues -> floatvalues .)
    CHAR            reduce using rule 353 (doublevalues -> floatvalues .)
    DEF             reduce using rule 353 (doublevalues -> floatvalues .)
    $end            reduce using rule 353 (doublevalues -> floatvalues .)
    LLAVE_D         reduce using rule 353 (doublevalues -> floatvalues .)
    RETURN          reduce using rule 353 (doublevalues -> floatvalues .)
    CASE            reduce using rule 353 (doublevalues -> floatvalues .)


state 486

    (290) sumIntDouble -> INT . MAS DOUBLE
    (332) intvalues -> INT .

    MAS             shift and go to state 575
    VAR             reduce using rule 332 (intvalues -> INT .)
    VAL             reduce using rule 332 (intvalues -> INT .)
    VARIABLE        reduce using rule 332 (intvalues -> INT .)
    PRINTLN         reduce using rule 332 (intvalues -> INT .)
    PRINT           reduce using rule 332 (intvalues -> INT .)
    READLINE        reduce using rule 332 (intvalues -> INT .)
    WHILE           reduce using rule 332 (intvalues -> INT .)
    FOR             reduce using rule 332 (intvalues -> INT .)
    IF              reduce using rule 332 (intvalues -> INT .)
    INT             reduce using rule 332 (intvalues -> INT .)
    DOUBLE          reduce using rule 332 (intvalues -> INT .)
    LONG            reduce using rule 332 (intvalues -> INT .)
    FLOAT           reduce using rule 332 (intvalues -> INT .)
    STRING          reduce using rule 332 (intvalues -> INT .)
    CHAR            reduce using rule 332 (intvalues -> INT .)
    DEF             reduce using rule 332 (intvalues -> INT .)
    $end            reduce using rule 332 (intvalues -> INT .)
    LLAVE_D         reduce using rule 332 (intvalues -> INT .)
    RETURN          reduce using rule 332 (intvalues -> INT .)
    CASE            reduce using rule 332 (intvalues -> INT .)


state 487

    (293) sumDoubleChar -> CHAR . MAS DOUBLE

    MAS             shift and go to state 576


state 488

    (358) stringCastDouble -> STRING . PUNTO TO_DOUBLE
    (357) stringCastFloat -> STRING . PUNTO TO_FLOAT
    (356) stringCastLong -> STRING . PUNTO TO_LONG
    (355) stringCastInt -> STRING . PUNTO TO_INT

    PUNTO           shift and go to state 577


state 489

    (65) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .

    VAR             reduce using rule 65 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 65 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 65 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 65 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 65 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 65 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 65 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 65 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 65 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 65 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 65 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 65 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 65 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 65 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 65 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    DEF             reduce using rule 65 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 65 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 65 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 65 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 65 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)


state 490

    (62) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .
    (296) sumStringChar -> STRING . MAS CHAR

    VAR             reduce using rule 62 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAL             reduce using rule 62 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VARIABLE        reduce using rule 62 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINTLN         reduce using rule 62 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINT           reduce using rule 62 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    READLINE        reduce using rule 62 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    WHILE           reduce using rule 62 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FOR             reduce using rule 62 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    IF              reduce using rule 62 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    INT             reduce using rule 62 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    DOUBLE          reduce using rule 62 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LONG            reduce using rule 62 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FLOAT           reduce using rule 62 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    STRING          reduce using rule 62 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    CHAR            reduce using rule 62 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    DEF             reduce using rule 62 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    $end            reduce using rule 62 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LLAVE_D         reduce using rule 62 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    RETURN          reduce using rule 62 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    CASE            reduce using rule 62 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    MAS             shift and go to state 103


state 491

    (302) asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .

    VAR             reduce using rule 302 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    VAL             reduce using rule 302 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    VARIABLE        reduce using rule 302 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    PRINTLN         reduce using rule 302 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    PRINT           reduce using rule 302 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    READLINE        reduce using rule 302 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    WHILE           reduce using rule 302 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    FOR             reduce using rule 302 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    IF              reduce using rule 302 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    INT             reduce using rule 302 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    DOUBLE          reduce using rule 302 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    LONG            reduce using rule 302 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    FLOAT           reduce using rule 302 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    STRING          reduce using rule 302 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    CHAR            reduce using rule 302 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    DEF             reduce using rule 302 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    $end            reduce using rule 302 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    LLAVE_D         reduce using rule 302 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    RETURN          reduce using rule 302 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    CASE            reduce using rule 302 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)


state 492

    (297) sumStringChar -> CHAR . MAS STRING

    MAS             shift and go to state 578


state 493

    (72) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .

    VAR             reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    IF              reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    INT             reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    DEF             reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    $end            reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)


state 494

    (69) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .

    VAR             reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAL             reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VARIABLE        reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINTLN         reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINT           reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    READLINE        reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    WHILE           reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FOR             reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    IF              reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    INT             reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    DOUBLE          reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LONG            reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FLOAT           reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    STRING          reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    CHAR            reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    DEF             reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    $end            reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LLAVE_D         reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    RETURN          reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    CASE            reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)


state 495

    (78) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .

    VAR             reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    IF              reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    INT             reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    DEF             reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    $end            reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)


state 496

    (75) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .

    VAR             reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAL             reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VARIABLE        reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINTLN         reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINT           reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    READLINE        reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    WHILE           reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FOR             reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    IF              reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    INT             reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    DOUBLE          reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LONG            reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FLOAT           reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    STRING          reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    CHAR            reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    DEF             reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    $end            reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LLAVE_D         reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    RETURN          reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    CASE            reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)


state 497

    (153) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 579


state 498

    (270) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS . CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (87) tipo -> INTCLASS .

  ! shift/reduce conflict for CORCHETE_D resolved as shift
    CORCHETE_D      shift and go to state 580

  ! CORCHETE_D      [ reduce using rule 87 (tipo -> INTCLASS .) ]


state 499

    (271) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS . CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (89) tipo -> DOUBLECLASS .

  ! shift/reduce conflict for CORCHETE_D resolved as shift
    CORCHETE_D      shift and go to state 581

  ! CORCHETE_D      [ reduce using rule 89 (tipo -> DOUBLECLASS .) ]


state 500

    (308) dectupla -> PAR_I STRINGCLASS COMA . INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
    (309) dectupla -> PAR_I STRINGCLASS COMA . LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
    (310) dectupla -> PAR_I STRINGCLASS COMA . DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
    (311) dectupla -> PAR_I STRINGCLASS COMA . FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D

    INTCLASS        shift and go to state 582
    LONGCLASS       shift and go to state 583
    DOUBLECLASS     shift and go to state 584
    FLOATCLASS      shift and go to state 585


state 501

    (324) dectupla -> PAR_I INTCLASS COMA . STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
    (325) dectupla -> PAR_I INTCLASS COMA . LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
    (326) dectupla -> PAR_I INTCLASS COMA . DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
    (327) dectupla -> PAR_I INTCLASS COMA . FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    STRINGCLASS     shift and go to state 586
    LONGCLASS       shift and go to state 587
    DOUBLECLASS     shift and go to state 588
    FLOATCLASS      shift and go to state 589


state 502

    (320) dectupla -> PAR_I LONGCLASS COMA . STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
    (321) dectupla -> PAR_I LONGCLASS COMA . INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
    (322) dectupla -> PAR_I LONGCLASS COMA . DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
    (323) dectupla -> PAR_I LONGCLASS COMA . FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D

    STRINGCLASS     shift and go to state 590
    INTCLASS        shift and go to state 591
    DOUBLECLASS     shift and go to state 592
    FLOATCLASS      shift and go to state 593


state 503

    (316) dectupla -> PAR_I DOUBLECLASS COMA . STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
    (317) dectupla -> PAR_I DOUBLECLASS COMA . LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
    (318) dectupla -> PAR_I DOUBLECLASS COMA . FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
    (319) dectupla -> PAR_I DOUBLECLASS COMA . INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D

    STRINGCLASS     shift and go to state 594
    LONGCLASS       shift and go to state 595
    FLOATCLASS      shift and go to state 596
    INTCLASS        shift and go to state 597


state 504

    (312) dectupla -> PAR_I FLOATCLASS COMA . STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
    (313) dectupla -> PAR_I FLOATCLASS COMA . LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
    (314) dectupla -> PAR_I FLOATCLASS COMA . DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
    (315) dectupla -> PAR_I FLOATCLASS COMA . INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D

    STRINGCLASS     shift and go to state 598
    LONGCLASS       shift and go to state 599
    DOUBLECLASS     shift and go to state 600
    INTCLASS        shift and go to state 601


state 505

    (281) listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS . CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D

    CORCHETE_D      shift and go to state 602


state 506

    (279) listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS . CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    CORCHETE_D      shift and go to state 603


state 507

    (154) array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 604


state 508

    (158) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 605


state 509

    (52) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .

    VAR             reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    DEF             reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)


state 510

    (337) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .

    VAR             reduce using rule 337 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VAL             reduce using rule 337 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VARIABLE        reduce using rule 337 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    PRINTLN         reduce using rule 337 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    PRINT           reduce using rule 337 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    READLINE        reduce using rule 337 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    WHILE           reduce using rule 337 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    FOR             reduce using rule 337 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    IF              reduce using rule 337 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    INT             reduce using rule 337 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    DOUBLE          reduce using rule 337 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    LONG            reduce using rule 337 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    FLOAT           reduce using rule 337 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    STRING          reduce using rule 337 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    CHAR            reduce using rule 337 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    DEF             reduce using rule 337 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    $end            reduce using rule 337 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    LLAVE_D         reduce using rule 337 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    RETURN          reduce using rule 337 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    CASE            reduce using rule 337 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)


state 511

    (54) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .

    VAR             reduce using rule 54 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 54 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 54 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 54 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 54 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 54 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 54 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 54 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    IF              reduce using rule 54 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    INT             reduce using rule 54 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 54 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 54 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 54 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 54 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 54 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    DEF             reduce using rule 54 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    $end            reduce using rule 54 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 54 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 54 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 54 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)


state 512

    (331) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .

    VAR             reduce using rule 331 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VAL             reduce using rule 331 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VARIABLE        reduce using rule 331 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    PRINTLN         reduce using rule 331 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    PRINT           reduce using rule 331 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    READLINE        reduce using rule 331 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    WHILE           reduce using rule 331 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    FOR             reduce using rule 331 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    IF              reduce using rule 331 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    INT             reduce using rule 331 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    DOUBLE          reduce using rule 331 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    LONG            reduce using rule 331 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    FLOAT           reduce using rule 331 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    STRING          reduce using rule 331 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    CHAR            reduce using rule 331 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    DEF             reduce using rule 331 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    $end            reduce using rule 331 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    LLAVE_D         reduce using rule 331 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    RETURN          reduce using rule 331 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    CASE            reduce using rule 331 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)


state 513

    (305) asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .

    VAR             reduce using rule 305 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    VAL             reduce using rule 305 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    VARIABLE        reduce using rule 305 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    PRINTLN         reduce using rule 305 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    PRINT           reduce using rule 305 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    READLINE        reduce using rule 305 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    WHILE           reduce using rule 305 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    FOR             reduce using rule 305 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    IF              reduce using rule 305 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    INT             reduce using rule 305 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    DOUBLE          reduce using rule 305 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    LONG            reduce using rule 305 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    FLOAT           reduce using rule 305 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    STRING          reduce using rule 305 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    CHAR            reduce using rule 305 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    DEF             reduce using rule 305 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    $end            reduce using rule 305 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    LLAVE_D         reduce using rule 305 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    RETURN          reduce using rule 305 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    CASE            reduce using rule 305 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)


state 514

    (57) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .

    VAR             reduce using rule 57 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 57 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 57 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 57 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 57 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 57 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 57 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 57 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    IF              reduce using rule 57 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    INT             reduce using rule 57 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 57 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 57 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 57 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 57 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 57 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    DEF             reduce using rule 57 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    $end            reduce using rule 57 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 57 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 57 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 57 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)


state 515

    (344) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .

    VAR             reduce using rule 344 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VAL             reduce using rule 344 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VARIABLE        reduce using rule 344 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    PRINTLN         reduce using rule 344 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    PRINT           reduce using rule 344 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    READLINE        reduce using rule 344 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    WHILE           reduce using rule 344 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    FOR             reduce using rule 344 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    IF              reduce using rule 344 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    INT             reduce using rule 344 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    DOUBLE          reduce using rule 344 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    LONG            reduce using rule 344 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    FLOAT           reduce using rule 344 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    STRING          reduce using rule 344 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    CHAR            reduce using rule 344 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    DEF             reduce using rule 344 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    $end            reduce using rule 344 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    LLAVE_D         reduce using rule 344 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    RETURN          reduce using rule 344 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    CASE            reduce using rule 344 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)


state 516

    (59) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .

    VAR             reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAL             reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FOR             reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    IF              reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    INT             reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LONG            reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    STRING          reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    DEF             reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    $end            reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    CASE            reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)


state 517

    (351) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .

    VAR             reduce using rule 351 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VAL             reduce using rule 351 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VARIABLE        reduce using rule 351 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    PRINTLN         reduce using rule 351 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    PRINT           reduce using rule 351 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    READLINE        reduce using rule 351 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    WHILE           reduce using rule 351 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    FOR             reduce using rule 351 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    IF              reduce using rule 351 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    INT             reduce using rule 351 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    DOUBLE          reduce using rule 351 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    LONG            reduce using rule 351 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    FLOAT           reduce using rule 351 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    STRING          reduce using rule 351 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    CHAR            reduce using rule 351 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    DEF             reduce using rule 351 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    $end            reduce using rule 351 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    LLAVE_D         reduce using rule 351 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    RETURN          reduce using rule 351 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    CASE            reduce using rule 351 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)


state 518

    (299) asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .

    VAR             reduce using rule 299 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    VAL             reduce using rule 299 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    VARIABLE        reduce using rule 299 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    PRINTLN         reduce using rule 299 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    PRINT           reduce using rule 299 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    READLINE        reduce using rule 299 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    WHILE           reduce using rule 299 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    FOR             reduce using rule 299 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    IF              reduce using rule 299 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    INT             reduce using rule 299 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    DOUBLE          reduce using rule 299 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    LONG            reduce using rule 299 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    FLOAT           reduce using rule 299 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    STRING          reduce using rule 299 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    CHAR            reduce using rule 299 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    DEF             reduce using rule 299 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    $end            reduce using rule 299 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    LLAVE_D         reduce using rule 299 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    RETURN          reduce using rule 299 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    CASE            reduce using rule 299 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)


state 519

    (301) asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .

    VAR             reduce using rule 301 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    VAL             reduce using rule 301 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    VARIABLE        reduce using rule 301 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    PRINTLN         reduce using rule 301 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    PRINT           reduce using rule 301 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    READLINE        reduce using rule 301 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    WHILE           reduce using rule 301 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    FOR             reduce using rule 301 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    IF              reduce using rule 301 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    INT             reduce using rule 301 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    DOUBLE          reduce using rule 301 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    LONG            reduce using rule 301 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    FLOAT           reduce using rule 301 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    STRING          reduce using rule 301 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    CHAR            reduce using rule 301 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    DEF             reduce using rule 301 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    $end            reduce using rule 301 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    LLAVE_D         reduce using rule 301 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    RETURN          reduce using rule 301 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    CASE            reduce using rule 301 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)


state 520

    (66) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .

    VAR             reduce using rule 66 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 66 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 66 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 66 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 66 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 66 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 66 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 66 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 66 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 66 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 66 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 66 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 66 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 66 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 66 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    DEF             reduce using rule 66 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 66 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 66 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 66 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 66 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)


state 521

    (64) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .
    (296) sumStringChar -> STRING . MAS CHAR

    VAR             reduce using rule 64 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAL             reduce using rule 64 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VARIABLE        reduce using rule 64 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINTLN         reduce using rule 64 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINT           reduce using rule 64 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    READLINE        reduce using rule 64 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    WHILE           reduce using rule 64 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FOR             reduce using rule 64 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    IF              reduce using rule 64 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    INT             reduce using rule 64 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    DOUBLE          reduce using rule 64 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LONG            reduce using rule 64 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FLOAT           reduce using rule 64 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    STRING          reduce using rule 64 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    CHAR            reduce using rule 64 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    DEF             reduce using rule 64 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    $end            reduce using rule 64 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LLAVE_D         reduce using rule 64 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    RETURN          reduce using rule 64 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    CASE            reduce using rule 64 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    MAS             shift and go to state 103


state 522

    (303) asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .

    VAR             reduce using rule 303 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    VAL             reduce using rule 303 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    VARIABLE        reduce using rule 303 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    PRINTLN         reduce using rule 303 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    PRINT           reduce using rule 303 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    READLINE        reduce using rule 303 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    WHILE           reduce using rule 303 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    FOR             reduce using rule 303 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    IF              reduce using rule 303 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    INT             reduce using rule 303 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    DOUBLE          reduce using rule 303 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    LONG            reduce using rule 303 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    FLOAT           reduce using rule 303 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    STRING          reduce using rule 303 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    CHAR            reduce using rule 303 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    DEF             reduce using rule 303 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    $end            reduce using rule 303 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    LLAVE_D         reduce using rule 303 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    RETURN          reduce using rule 303 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    CASE            reduce using rule 303 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)


state 523

    (73) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .

    VAR             reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    IF              reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    INT             reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    DEF             reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    $end            reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)


state 524

    (71) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .

    VAR             reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAL             reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VARIABLE        reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINTLN         reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINT           reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    READLINE        reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    WHILE           reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FOR             reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    IF              reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    INT             reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    DOUBLE          reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LONG            reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FLOAT           reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    STRING          reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    CHAR            reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    DEF             reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    $end            reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LLAVE_D         reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    RETURN          reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    CASE            reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)


state 525

    (79) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .

    VAR             reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    IF              reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    INT             reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    DEF             reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    $end            reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)


state 526

    (77) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .

    VAR             reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAL             reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VARIABLE        reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINTLN         reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINT           reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    READLINE        reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    WHILE           reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FOR             reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    IF              reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    INT             reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    DOUBLE          reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LONG            reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FLOAT           reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    STRING          reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    CHAR            reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    DEF             reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    $end            reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LLAVE_D         reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    RETURN          reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    CASE            reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)


state 527

    (155) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 606


state 528

    (280) listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS . CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D

    CORCHETE_D      shift and go to state 607


state 529

    (278) listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS . CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    CORCHETE_D      shift and go to state 608


state 530

    (167) while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 609


state 531

    (168) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 610


state 532

    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR INT . TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> FOR PAR_I VAR VARIABLE ITERATOR INT . UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    TO              shift and go to state 611
    UNTIL           shift and go to state 612


state 533

    (169) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 613


state 534

    (170) for -> FOR PAR_I VARIABLE ITERATOR INT TO . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 614


state 535

    (171) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 615


state 536

    (213) if -> IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 616


state 537

    (276) startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .

    VAR             reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    VAL             reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    VARIABLE        reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    PRINTLN         reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    PRINT           reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    READLINE        reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    WHILE           reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    FOR             reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    IF              reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    INT             reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    DOUBLE          reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    LONG            reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    FLOAT           reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    STRING          reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    CHAR            reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    DEF             reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    $end            reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    LLAVE_D         reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    RETURN          reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    CASE            reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    COMA            reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    PAR_D           reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    MAS             reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    IGUAL_COMPARACION reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    DIFERENTE       reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    MAYOR           reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    MENOR           reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    AND             reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    OR              reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    FUNCION_FLECHA  reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)


state 538

    (277) startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA . INT PAR_D

    INT             shift and go to state 617


state 539

    (210) defcase -> CASE SUBGUION FUNCION_FLECHA . codeBlock
    (211) codeBlock -> . contenidoLine
    (212) codeBlock -> . LLAVE_I contenido LLAVE_D
    (31) contenidoLine -> . asignacion
    (32) contenidoLine -> . reasignacion
    (33) contenidoLine -> . funcall
    (34) contenidoLine -> . impresion
    (35) contenidoLine -> . entrada
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    LLAVE_I         shift and go to state 542
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 548
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34

    codeBlock                      shift and go to state 618
    contenidoLine                  shift and go to state 541
    asignacion                     shift and go to state 543
    reasignacion                   shift and go to state 544
    funcall                        shift and go to state 545
    impresion                      shift and go to state 546
    entrada                        shift and go to state 547
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51

state 540

    (182) caseInt -> CASE INT FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 182 (caseInt -> CASE INT FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 182 (caseInt -> CASE INT FUNCION_FLECHA codeBlock .)


state 541

    (211) codeBlock -> contenidoLine .

    CASE            reduce using rule 211 (codeBlock -> contenidoLine .)
    LLAVE_D         reduce using rule 211 (codeBlock -> contenidoLine .)


state 542

    (212) codeBlock -> LLAVE_I . contenido LLAVE_D
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

    contenido                      shift and go to state 619
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 543

    (31) contenidoLine -> asignacion .

    CASE            reduce using rule 31 (contenidoLine -> asignacion .)
    LLAVE_D         reduce using rule 31 (contenidoLine -> asignacion .)


state 544

    (32) contenidoLine -> reasignacion .

    CASE            reduce using rule 32 (contenidoLine -> reasignacion .)
    LLAVE_D         reduce using rule 32 (contenidoLine -> reasignacion .)


state 545

    (33) contenidoLine -> funcall .

    CASE            reduce using rule 33 (contenidoLine -> funcall .)
    LLAVE_D         reduce using rule 33 (contenidoLine -> funcall .)


state 546

    (34) contenidoLine -> impresion .

    CASE            reduce using rule 34 (contenidoLine -> impresion .)
    LLAVE_D         reduce using rule 34 (contenidoLine -> impresion .)


state 547

    (35) contenidoLine -> entrada .

    CASE            reduce using rule 35 (contenidoLine -> entrada .)
    LLAVE_D         reduce using rule 35 (contenidoLine -> entrada .)


state 548

    (80) reasignacion -> VARIABLE . IGUAL valor
    (81) reasignacion -> VARIABLE . IGUAL returnfun
    (82) reasignacion -> VARIABLE . IGUAL aritmetica
    (83) reasignacion -> VARIABLE . PAR_I INT PAR_D IGUAL valor
    (137) funcall -> VARIABLE . varparen
    (138) varparen -> . PAR_I valores PAR_D
    (139) varparen -> . PAR_I PAR_D
    (140) varparen -> . varparen PAR_I valores PAR_D
    (141) varparen -> . varparen PAR_I PAR_D

    IGUAL           shift and go to state 57
    PAR_I           shift and go to state 58

    varparen                       shift and go to state 59

state 549

    (186) caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 186 (caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 186 (caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .)


state 550

    (190) caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 190 (caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 190 (caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .)


state 551

    (194) caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 194 (caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 194 (caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .)


state 552

    (198) caseStr -> CASE STRING FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 198 (caseStr -> CASE STRING FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 198 (caseStr -> CASE STRING FUNCION_FLECHA codeBlock .)


state 553

    (202) caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 202 (caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 202 (caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .)


state 554

    (206) caseBool -> CASE booleanos FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 206 (caseBool -> CASE booleanos FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 206 (caseBool -> CASE booleanos FUNCION_FLECHA codeBlock .)


state 555

    (4) io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO . READLINE

    READLINE        shift and go to state 620


state 556

    (107) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)


state 557

    (115) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN valor LLAVE_D
    (116) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN VARIABLE LLAVE_D
    (117) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN returnfun LLAVE_D
    (118) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN aritmetica LLAVE_D

    RETURN          shift and go to state 621


state 558

    (119) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN . valor LLAVE_D
    (120) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN . VARIABLE LLAVE_D
    (121) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN . returnfun LLAVE_D
    (122) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN . aritmetica LLAVE_D
    (93) valor -> . STRING
    (94) valor -> . CHAR
    (95) valor -> . VARIABLE
    (96) valor -> . numeros
    (97) valor -> . booleanos
    (98) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (99) valor -> . VARIABLE PAR_I INT PAR_D
    (142) returnfun -> . returnCastable
    (143) returnfun -> . castingcall
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (144) returnCastable -> . entrada
    (145) returnCastable -> . funcall
    (146) castingcall -> . returnCastable PUNTO castingfun
    (147) castingcall -> . VARIABLE PUNTO castingfun
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (137) funcall -> . VARIABLE varparen
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VARIABLE        shift and go to state 622
    STRING          shift and go to state 110
    CHAR            shift and go to state 111
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117
    READLINE        shift and go to state 34

    valor                          shift and go to state 623
    returnfun                      shift and go to state 624
    aritmetica                     shift and go to state 625
    numeros                        shift and go to state 112
    booleanos                      shift and go to state 113
    returnCastable                 shift and go to state 114
    castingcall                    shift and go to state 115
    suma                           shift and go to state 39
    startsWith                     shift and go to state 118
    entrada                        shift and go to state 119
    funcall                        shift and go to state 120
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 559

    (123) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN tuple LLAVE_D
    (124) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN VARIABLE LLAVE_D
    (125) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN returnfun LLAVE_D

    RETURN          shift and go to state 626


state 560

    (127) dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D .

    IGUAL           reduce using rule 127 (dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D .)


state 561

    (129) tipos -> tipo tiposentry .

    PAR_D           reduce using rule 129 (tipos -> tipo tiposentry .)


state 562

    (130) tiposentry -> COMA . tipo
    (131) tiposentry -> COMA . tipo tiposentry
    (84) tipo -> . CHARCLASS
    (85) tipo -> . STRINGCLASS
    (86) tipo -> . BOOLCLASS
    (87) tipo -> . INTCLASS
    (88) tipo -> . LONGCLASS
    (89) tipo -> . DOUBLECLASS
    (90) tipo -> . FLOATCLASS
    (91) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (92) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 361
    STRINGCLASS     shift and go to state 362
    BOOLCLASS       shift and go to state 363
    INTCLASS        shift and go to state 364
    LONGCLASS       shift and go to state 365
    DOUBLECLASS     shift and go to state 366
    FLOATCLASS      shift and go to state 367
    ARRAYCLASS      shift and go to state 368
    LISTCLASS       shift and go to state 369

    tipo                           shift and go to state 627

state 563

    (91) tipo -> ARRAYCLASS CORCHETE_I tipo . CORCHETE_D

    CORCHETE_D      shift and go to state 628


state 564

    (92) tipo -> LISTCLASS CORCHETE_I tipo . CORCHETE_D

    CORCHETE_D      shift and go to state 629


state 565

    (110) declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL . valor
    (93) valor -> . STRING
    (94) valor -> . CHAR
    (95) valor -> . VARIABLE
    (96) valor -> . numeros
    (97) valor -> . booleanos
    (98) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (99) valor -> . VARIABLE PAR_I INT PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 126
    CHAR            shift and go to state 127
    VARIABLE        shift and go to state 121
    INT             shift and go to state 136
    LONG            shift and go to state 129
    FLOAT           shift and go to state 130
    DOUBLE          shift and go to state 131
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117

    valor                          shift and go to state 630
    numeros                        shift and go to state 128
    booleanos                      shift and go to state 113
    startsWith                     shift and go to state 118

state 566

    (216) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (217) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D elseif
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

    contenido                      shift and go to state 631
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 567

    (152) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .

    VAR             reduce using rule 152 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 152 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 152 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 152 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 152 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 152 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 152 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 152 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 152 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 152 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 152 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 152 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 152 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    STRING          reduce using rule 152 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CHAR            reduce using rule 152 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DEF             reduce using rule 152 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 152 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 152 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 152 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 152 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 568

    (159) list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .

    VAR             reduce using rule 159 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 159 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 159 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 159 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 159 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 159 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 159 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 159 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 159 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 159 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 159 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 159 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 159 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    STRING          reduce using rule 159 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    CHAR            reduce using rule 159 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    DEF             reduce using rule 159 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 159 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 159 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 159 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 159 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)


state 569

    (356) stringCastLong -> STRING PUNTO . TO_LONG
    (355) stringCastInt -> STRING PUNTO . TO_INT

    TO_LONG         shift and go to state 456
    TO_INT          shift and go to state 457


state 570

    (294) sumIntChar -> INT MAS . CHAR

    CHAR            shift and go to state 158


state 571

    (295) sumIntChar -> CHAR MAS . INT

    INT             shift and go to state 191


state 572

    (355) stringCastInt -> STRING PUNTO . TO_INT

    TO_INT          shift and go to state 457


state 573

    (357) stringCastFloat -> STRING PUNTO . TO_FLOAT
    (356) stringCastLong -> STRING PUNTO . TO_LONG
    (355) stringCastInt -> STRING PUNTO . TO_INT

    TO_FLOAT        shift and go to state 458
    TO_LONG         shift and go to state 456
    TO_INT          shift and go to state 457


state 574

    (291) sumIntDouble -> DOUBLE MAS . INT
    (292) sumDoubleChar -> DOUBLE MAS . CHAR

    INT             shift and go to state 185
    CHAR            shift and go to state 186


state 575

    (290) sumIntDouble -> INT MAS . DOUBLE

    DOUBLE          shift and go to state 159


state 576

    (293) sumDoubleChar -> CHAR MAS . DOUBLE

    DOUBLE          shift and go to state 193


state 577

    (358) stringCastDouble -> STRING PUNTO . TO_DOUBLE
    (357) stringCastFloat -> STRING PUNTO . TO_FLOAT
    (356) stringCastLong -> STRING PUNTO . TO_LONG
    (355) stringCastInt -> STRING PUNTO . TO_INT

    TO_DOUBLE       shift and go to state 459
    TO_FLOAT        shift and go to state 458
    TO_LONG         shift and go to state 456
    TO_INT          shift and go to state 457


state 578

    (297) sumStringChar -> CHAR MAS . STRING

    STRING          shift and go to state 192


state 579

    (153) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    IGUAL           shift and go to state 632


state 580

    (270) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D . IGUAL ARRAYCLASS PAR_I valoresInt PAR_D

    IGUAL           shift and go to state 633


state 581

    (271) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D . IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    IGUAL           shift and go to state 634


state 582

    (308) dectupla -> PAR_I STRINGCLASS COMA INTCLASS . PAR_D IGUAL PAR_I STRING COMA INT PAR_D

    PAR_D           shift and go to state 635


state 583

    (309) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS . PAR_D IGUAL PAR_I STRING COMA LONG PAR_D

    PAR_D           shift and go to state 636


state 584

    (310) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS . PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D

    PAR_D           shift and go to state 637


state 585

    (311) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS . PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D

    PAR_D           shift and go to state 638


state 586

    (324) dectupla -> PAR_I INTCLASS COMA STRINGCLASS . PAR_D IGUAL PAR_I INT COMA STRING PAR_D

    PAR_D           shift and go to state 639


state 587

    (325) dectupla -> PAR_I INTCLASS COMA LONGCLASS . PAR_D IGUAL PAR_I INT COMA LONG PAR_D

    PAR_D           shift and go to state 640


state 588

    (326) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS . PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D

    PAR_D           shift and go to state 641


state 589

    (327) dectupla -> PAR_I INTCLASS COMA FLOATCLASS . PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    PAR_D           shift and go to state 642


state 590

    (320) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS . PAR_D IGUAL PAR_I LONG COMA STRING PAR_D

    PAR_D           shift and go to state 643


state 591

    (321) dectupla -> PAR_I LONGCLASS COMA INTCLASS . PAR_D IGUAL PAR_I LONG COMA INT PAR_D

    PAR_D           shift and go to state 644


state 592

    (322) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS . PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D

    PAR_D           shift and go to state 645


state 593

    (323) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS . PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D

    PAR_D           shift and go to state 646


state 594

    (316) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS . PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D

    PAR_D           shift and go to state 647


state 595

    (317) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS . PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D

    PAR_D           shift and go to state 648


state 596

    (318) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS . PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D

    PAR_D           shift and go to state 649


state 597

    (319) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS . PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D

    PAR_D           shift and go to state 650


state 598

    (312) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS . PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D

    PAR_D           shift and go to state 651


state 599

    (313) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS . PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D

    PAR_D           shift and go to state 652


state 600

    (314) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS . PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D

    PAR_D           shift and go to state 653


state 601

    (315) dectupla -> PAR_I FLOATCLASS COMA INTCLASS . PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D

    PAR_D           shift and go to state 654


state 602

    (281) listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D . IGUAL LISTCLASS PAR_I valoresChar PAR_D

    IGUAL           shift and go to state 655


state 603

    (279) listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D . IGUAL LISTCLASS PAR_I valoresString PAR_D

    IGUAL           shift and go to state 656


state 604

    (154) array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .

    VAR             reduce using rule 154 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 154 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 154 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 154 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 154 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 154 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 154 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 154 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 154 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 154 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 154 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 154 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 154 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    STRING          reduce using rule 154 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CHAR            reduce using rule 154 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DEF             reduce using rule 154 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 154 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 154 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 154 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 154 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 605

    (158) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .

    VAR             reduce using rule 158 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 158 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 158 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 158 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 158 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 158 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 158 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 158 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 158 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 158 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 158 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 158 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 158 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    STRING          reduce using rule 158 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    CHAR            reduce using rule 158 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    DEF             reduce using rule 158 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 158 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 158 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 158 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 158 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)


state 606

    (155) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    IGUAL           shift and go to state 657


state 607

    (280) listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D . IGUAL LISTCLASS PAR_I valoresChar PAR_D

    IGUAL           shift and go to state 658


state 608

    (278) listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D . IGUAL LISTCLASS PAR_I valoresString PAR_D

    IGUAL           shift and go to state 659


state 609

    (167) while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .

    VAR             reduce using rule 167 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 167 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 167 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 167 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 167 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 167 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 167 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 167 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 167 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 167 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 167 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 167 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 167 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 167 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 167 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 167 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 167 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 167 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 167 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)


state 610

    (168) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 660


state 611

    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 661


state 612

    (173) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 662


state 613

    (169) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I . contenido LLAVE_D
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

    contenido                      shift and go to state 663
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 614

    (170) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 664


state 615

    (171) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 665


state 616

    (213) if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .

    ELSE            reduce using rule 213 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 213 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 213 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 213 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 213 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 213 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 213 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 213 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 213 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 213 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 213 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 213 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 213 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 213 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 213 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 213 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 213 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 213 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 213 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 213 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)


state 617

    (277) startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT . PAR_D

    PAR_D           shift and go to state 666


state 618

    (210) defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock .

    LLAVE_D         reduce using rule 210 (defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock .)


state 619

    (212) codeBlock -> LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 667


state 620

    (4) io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .

    OBJECT          reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    IMPORT          reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    DEF             reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    VAR             reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    VAL             reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    VARIABLE        reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    PRINTLN         reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    PRINT           reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    READLINE        reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    WHILE           reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    FOR             reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    IF              reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    INT             reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    DOUBLE          reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    LONG            reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    FLOAT           reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    STRING          reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    CHAR            reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)


state 621

    (115) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . valor LLAVE_D
    (116) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . VARIABLE LLAVE_D
    (117) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . returnfun LLAVE_D
    (118) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . aritmetica LLAVE_D
    (93) valor -> . STRING
    (94) valor -> . CHAR
    (95) valor -> . VARIABLE
    (96) valor -> . numeros
    (97) valor -> . booleanos
    (98) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (99) valor -> . VARIABLE PAR_I INT PAR_D
    (142) returnfun -> . returnCastable
    (143) returnfun -> . castingcall
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (100) booleanos -> . TRUE
    (101) booleanos -> . FLASE
    (102) booleanos -> . startsWith
    (144) returnCastable -> . entrada
    (145) returnCastable -> . funcall
    (146) castingcall -> . returnCastable PUNTO castingfun
    (147) castingcall -> . VARIABLE PUNTO castingfun
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (137) funcall -> . VARIABLE varparen
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VARIABLE        shift and go to state 668
    STRING          shift and go to state 110
    CHAR            shift and go to state 111
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    TRUE            shift and go to state 116
    FLASE           shift and go to state 117
    READLINE        shift and go to state 34

    valor                          shift and go to state 669
    returnfun                      shift and go to state 670
    aritmetica                     shift and go to state 671
    numeros                        shift and go to state 112
    booleanos                      shift and go to state 113
    returnCastable                 shift and go to state 114
    castingcall                    shift and go to state 115
    suma                           shift and go to state 39
    startsWith                     shift and go to state 118
    entrada                        shift and go to state 119
    funcall                        shift and go to state 120
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 622

    (120) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE . LLAVE_D
    (95) valor -> VARIABLE .
    (98) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (99) valor -> VARIABLE . PAR_I INT PAR_D
    (251) aritmetica -> VARIABLE . aritmeticos numeros
    (253) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (257) aritmetica -> VARIABLE . MAS numeros
    (259) aritmetica -> VARIABLE . MAS VARIABLE
    (147) castingcall -> VARIABLE . PUNTO castingfun
    (137) funcall -> VARIABLE . varparen
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD
    (138) varparen -> . PAR_I valores PAR_D
    (139) varparen -> . PAR_I PAR_D
    (140) varparen -> . varparen PAR_I valores PAR_D
    (141) varparen -> . varparen PAR_I PAR_D

  ! shift/reduce conflict for LLAVE_D resolved as shift
    LLAVE_D         shift and go to state 672
    PAR_I           shift and go to state 195
    MAS             shift and go to state 62
    PUNTO           shift and go to state 196
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66

  ! LLAVE_D         [ reduce using rule 95 (valor -> VARIABLE .) ]

    aritmeticos                    shift and go to state 61
    varparen                       shift and go to state 59

state 623

    (119) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor . LLAVE_D

    LLAVE_D         shift and go to state 673


state 624

    (121) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun . LLAVE_D

    LLAVE_D         shift and go to state 674


state 625

    (122) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica . LLAVE_D
    (254) aritmetica -> aritmetica . aritmeticos numeros
    (255) aritmetica -> aritmetica . aritmeticos VARIABLE
    (260) aritmetica -> aritmetica . MAS numeros
    (261) aritmetica -> aritmetica . MAS VARIABLE
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD

    LLAVE_D         shift and go to state 675
    MAS             shift and go to state 74
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66

    aritmeticos                    shift and go to state 73

state 626

    (123) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . tuple LLAVE_D
    (124) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . VARIABLE LLAVE_D
    (125) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . returnfun LLAVE_D
    (164) tuple -> . PAR_I valores PAR_D
    (142) returnfun -> . returnCastable
    (143) returnfun -> . castingcall
    (144) returnCastable -> . entrada
    (145) returnCastable -> . funcall
    (146) castingcall -> . returnCastable PUNTO castingfun
    (147) castingcall -> . VARIABLE PUNTO castingfun
    (136) entrada -> . READLINE PAR_I PAR_D
    (137) funcall -> . VARIABLE varparen

    VARIABLE        shift and go to state 676
    PAR_I           shift and go to state 243
    READLINE        shift and go to state 34

    tuple                          shift and go to state 677
    returnfun                      shift and go to state 678
    returnCastable                 shift and go to state 114
    castingcall                    shift and go to state 115
    entrada                        shift and go to state 119
    funcall                        shift and go to state 120

state 627

    (130) tiposentry -> COMA tipo .
    (131) tiposentry -> COMA tipo . tiposentry
    (130) tiposentry -> . COMA tipo
    (131) tiposentry -> . COMA tipo tiposentry

    PAR_D           reduce using rule 130 (tiposentry -> COMA tipo .)
    COMA            shift and go to state 562

    tiposentry                     shift and go to state 679

state 628

    (91) tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .

    IGUAL           reduce using rule 91 (tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .)
    COMA            reduce using rule 91 (tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .)
    PAR_D           reduce using rule 91 (tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .)
    CORCHETE_D      reduce using rule 91 (tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .)


state 629

    (92) tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .

    IGUAL           reduce using rule 92 (tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .)
    COMA            reduce using rule 92 (tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .)
    PAR_D           reduce using rule 92 (tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .)
    CORCHETE_D      reduce using rule 92 (tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .)


state 630

    (110) declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor .

    PAR_D           reduce using rule 110 (declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor .)


state 631

    (216) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D
    (217) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D elseif

    LLAVE_D         shift and go to state 680


state 632

    (153) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    NEW             shift and go to state 681


state 633

    (270) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL . ARRAYCLASS PAR_I valoresInt PAR_D

    ARRAYCLASS      shift and go to state 682


state 634

    (271) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL . ARRAYCLASS PAR_I valoresDouble PAR_D

    ARRAYCLASS      shift and go to state 683


state 635

    (308) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D . IGUAL PAR_I STRING COMA INT PAR_D

    IGUAL           shift and go to state 684


state 636

    (309) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D . IGUAL PAR_I STRING COMA LONG PAR_D

    IGUAL           shift and go to state 685


state 637

    (310) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D . IGUAL PAR_I STRING COMA DOUBLE PAR_D

    IGUAL           shift and go to state 686


state 638

    (311) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D . IGUAL PAR_I STRING COMA FLOAT PAR_D

    IGUAL           shift and go to state 687


state 639

    (324) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D . IGUAL PAR_I INT COMA STRING PAR_D

    IGUAL           shift and go to state 688


state 640

    (325) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D . IGUAL PAR_I INT COMA LONG PAR_D

    IGUAL           shift and go to state 689


state 641

    (326) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D . IGUAL PAR_I INT COMA DOUBLE PAR_D

    IGUAL           shift and go to state 690


state 642

    (327) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D . IGUAL PAR_I INT COMA FLOAT PAR_D

    IGUAL           shift and go to state 691


state 643

    (320) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D . IGUAL PAR_I LONG COMA STRING PAR_D

    IGUAL           shift and go to state 692


state 644

    (321) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D . IGUAL PAR_I LONG COMA INT PAR_D

    IGUAL           shift and go to state 693


state 645

    (322) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D . IGUAL PAR_I LONG COMA DOUBLE PAR_D

    IGUAL           shift and go to state 694


state 646

    (323) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D . IGUAL PAR_I LONG COMA FLOAT PAR_D

    IGUAL           shift and go to state 695


state 647

    (316) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D . IGUAL PAR_I DOUBLE COMA STRING PAR_D

    IGUAL           shift and go to state 696


state 648

    (317) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D . IGUAL PAR_I DOUBLE COMA LONG PAR_D

    IGUAL           shift and go to state 697


state 649

    (318) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D . IGUAL PAR_I DOUBLE COMA FLOAT PAR_D

    IGUAL           shift and go to state 698


state 650

    (319) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D . IGUAL PAR_I DOUBLE COMA INT PAR_D

    IGUAL           shift and go to state 699


state 651

    (312) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D . IGUAL PAR_I FLOAT COMA STRING PAR_D

    IGUAL           shift and go to state 700


state 652

    (313) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D . IGUAL PAR_I FLOAT COMA LONG PAR_D

    IGUAL           shift and go to state 701


state 653

    (314) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D . IGUAL PAR_I FLOAT COMA DOUBLE PAR_D

    IGUAL           shift and go to state 702


state 654

    (315) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D . IGUAL PAR_I FLOAT COMA INT PAR_D

    IGUAL           shift and go to state 703


state 655

    (281) listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL . LISTCLASS PAR_I valoresChar PAR_D

    LISTCLASS       shift and go to state 704


state 656

    (279) listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL . LISTCLASS PAR_I valoresString PAR_D

    LISTCLASS       shift and go to state 705


state 657

    (155) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    NEW             shift and go to state 706


state 658

    (280) listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL . LISTCLASS PAR_I valoresChar PAR_D

    LISTCLASS       shift and go to state 707


state 659

    (278) listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL . LISTCLASS PAR_I valoresString PAR_D

    LISTCLASS       shift and go to state 708


state 660

    (168) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I . contenido LLAVE_D
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

    contenido                      shift and go to state 709
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 661

    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 710


state 662

    (173) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 711


state 663

    (169) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 712


state 664

    (170) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 713


state 665

    (171) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 714


state 666

    (277) startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .

    VAR             reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    VAL             reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    VARIABLE        reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    PRINTLN         reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    PRINT           reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    READLINE        reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    WHILE           reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    FOR             reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    IF              reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    INT             reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    DOUBLE          reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    LONG            reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    FLOAT           reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    STRING          reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    CHAR            reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    DEF             reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    $end            reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    LLAVE_D         reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    RETURN          reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    CASE            reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    COMA            reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    PAR_D           reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    MAS             reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    IGUAL_COMPARACION reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    DIFERENTE       reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    MAYOR           reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    MENOR           reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    AND             reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    OR              reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    FUNCION_FLECHA  reduce using rule 277 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)


state 667

    (212) codeBlock -> LLAVE_I contenido LLAVE_D .

    CASE            reduce using rule 212 (codeBlock -> LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 212 (codeBlock -> LLAVE_I contenido LLAVE_D .)


state 668

    (116) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE . LLAVE_D
    (95) valor -> VARIABLE .
    (98) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (99) valor -> VARIABLE . PAR_I INT PAR_D
    (251) aritmetica -> VARIABLE . aritmeticos numeros
    (253) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (257) aritmetica -> VARIABLE . MAS numeros
    (259) aritmetica -> VARIABLE . MAS VARIABLE
    (147) castingcall -> VARIABLE . PUNTO castingfun
    (137) funcall -> VARIABLE . varparen
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD
    (138) varparen -> . PAR_I valores PAR_D
    (139) varparen -> . PAR_I PAR_D
    (140) varparen -> . varparen PAR_I valores PAR_D
    (141) varparen -> . varparen PAR_I PAR_D

  ! shift/reduce conflict for LLAVE_D resolved as shift
    LLAVE_D         shift and go to state 715
    PAR_I           shift and go to state 195
    MAS             shift and go to state 62
    PUNTO           shift and go to state 196
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66

  ! LLAVE_D         [ reduce using rule 95 (valor -> VARIABLE .) ]

    aritmeticos                    shift and go to state 61
    varparen                       shift and go to state 59

state 669

    (115) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor . LLAVE_D

    LLAVE_D         shift and go to state 716


state 670

    (117) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun . LLAVE_D

    LLAVE_D         shift and go to state 717


state 671

    (118) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica . LLAVE_D
    (254) aritmetica -> aritmetica . aritmeticos numeros
    (255) aritmetica -> aritmetica . aritmeticos VARIABLE
    (260) aritmetica -> aritmetica . MAS numeros
    (261) aritmetica -> aritmetica . MAS VARIABLE
    (266) aritmeticos -> . MENOS
    (267) aritmeticos -> . MULTIPLICACION
    (268) aritmeticos -> . DIVISION
    (269) aritmeticos -> . MOD

    LLAVE_D         shift and go to state 718
    MAS             shift and go to state 74
    MENOS           shift and go to state 63
    MULTIPLICACION  shift and go to state 64
    DIVISION        shift and go to state 65
    MOD             shift and go to state 66

    aritmeticos                    shift and go to state 73

state 672

    (120) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .

    DEF             reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    VAR             reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    VAL             reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    VARIABLE        reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    PRINTLN         reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    PRINT           reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    READLINE        reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    WHILE           reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    FOR             reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    IF              reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    INT             reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    DOUBLE          reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    LONG            reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    FLOAT           reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    STRING          reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    CHAR            reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    $end            reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    LLAVE_D         reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)


state 673

    (119) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .

    DEF             reduce using rule 119 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    VAR             reduce using rule 119 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    VAL             reduce using rule 119 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    VARIABLE        reduce using rule 119 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    PRINTLN         reduce using rule 119 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    PRINT           reduce using rule 119 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    READLINE        reduce using rule 119 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    WHILE           reduce using rule 119 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    FOR             reduce using rule 119 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    IF              reduce using rule 119 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    INT             reduce using rule 119 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    DOUBLE          reduce using rule 119 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    LONG            reduce using rule 119 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    FLOAT           reduce using rule 119 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    STRING          reduce using rule 119 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    CHAR            reduce using rule 119 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    $end            reduce using rule 119 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    LLAVE_D         reduce using rule 119 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)


state 674

    (121) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .

    DEF             reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    VAR             reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    VAL             reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    VARIABLE        reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    PRINTLN         reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    PRINT           reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    READLINE        reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    WHILE           reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    FOR             reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    IF              reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    INT             reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    DOUBLE          reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    LONG            reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    FLOAT           reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    STRING          reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    CHAR            reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    $end            reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    LLAVE_D         reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)


state 675

    (122) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .

    DEF             reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    VAR             reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    VAL             reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    VARIABLE        reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    PRINTLN         reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    PRINT           reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    READLINE        reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    WHILE           reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    FOR             reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    IF              reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    INT             reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    DOUBLE          reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    LONG            reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    FLOAT           reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    STRING          reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    CHAR            reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    $end            reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    LLAVE_D         reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)


state 676

    (124) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE . LLAVE_D
    (147) castingcall -> VARIABLE . PUNTO castingfun
    (137) funcall -> VARIABLE . varparen
    (138) varparen -> . PAR_I valores PAR_D
    (139) varparen -> . PAR_I PAR_D
    (140) varparen -> . varparen PAR_I valores PAR_D
    (141) varparen -> . varparen PAR_I PAR_D

    LLAVE_D         shift and go to state 719
    PUNTO           shift and go to state 196
    PAR_I           shift and go to state 374

    varparen                       shift and go to state 59

state 677

    (123) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple . LLAVE_D

    LLAVE_D         shift and go to state 720


state 678

    (125) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun . LLAVE_D

    LLAVE_D         shift and go to state 721


state 679

    (131) tiposentry -> COMA tipo tiposentry .

    PAR_D           reduce using rule 131 (tiposentry -> COMA tipo tiposentry .)


state 680

    (216) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .
    (217) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D . elseif
    (216) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (217) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

  ! shift/reduce conflict for ELSE resolved as shift
    VAR             reduce using rule 216 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 216 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 216 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 216 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 216 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 216 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 216 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 216 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 216 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 216 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 216 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 216 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 216 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 216 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 216 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 216 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 216 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 216 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 216 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    ELSE            shift and go to state 722

  ! ELSE            [ reduce using rule 216 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .) ]

    elseif                         shift and go to state 723

state 681

    (153) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW . ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    ARRAYCLASS      shift and go to state 724


state 682

    (270) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS . PAR_I valoresInt PAR_D

    PAR_I           shift and go to state 725


state 683

    (271) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS . PAR_I valoresDouble PAR_D

    PAR_I           shift and go to state 726


state 684

    (308) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL . PAR_I STRING COMA INT PAR_D

    PAR_I           shift and go to state 727


state 685

    (309) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL . PAR_I STRING COMA LONG PAR_D

    PAR_I           shift and go to state 728


state 686

    (310) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL . PAR_I STRING COMA DOUBLE PAR_D

    PAR_I           shift and go to state 729


state 687

    (311) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL . PAR_I STRING COMA FLOAT PAR_D

    PAR_I           shift and go to state 730


state 688

    (324) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL . PAR_I INT COMA STRING PAR_D

    PAR_I           shift and go to state 731


state 689

    (325) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL . PAR_I INT COMA LONG PAR_D

    PAR_I           shift and go to state 732


state 690

    (326) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL . PAR_I INT COMA DOUBLE PAR_D

    PAR_I           shift and go to state 733


state 691

    (327) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL . PAR_I INT COMA FLOAT PAR_D

    PAR_I           shift and go to state 734


state 692

    (320) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL . PAR_I LONG COMA STRING PAR_D

    PAR_I           shift and go to state 735


state 693

    (321) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL . PAR_I LONG COMA INT PAR_D

    PAR_I           shift and go to state 736


state 694

    (322) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL . PAR_I LONG COMA DOUBLE PAR_D

    PAR_I           shift and go to state 737


state 695

    (323) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL . PAR_I LONG COMA FLOAT PAR_D

    PAR_I           shift and go to state 738


state 696

    (316) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL . PAR_I DOUBLE COMA STRING PAR_D

    PAR_I           shift and go to state 739


state 697

    (317) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL . PAR_I DOUBLE COMA LONG PAR_D

    PAR_I           shift and go to state 740


state 698

    (318) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL . PAR_I DOUBLE COMA FLOAT PAR_D

    PAR_I           shift and go to state 741


state 699

    (319) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL . PAR_I DOUBLE COMA INT PAR_D

    PAR_I           shift and go to state 742


state 700

    (312) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL . PAR_I FLOAT COMA STRING PAR_D

    PAR_I           shift and go to state 743


state 701

    (313) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL . PAR_I FLOAT COMA LONG PAR_D

    PAR_I           shift and go to state 744


state 702

    (314) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL . PAR_I FLOAT COMA DOUBLE PAR_D

    PAR_I           shift and go to state 745


state 703

    (315) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL . PAR_I FLOAT COMA INT PAR_D

    PAR_I           shift and go to state 746


state 704

    (281) listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS . PAR_I valoresChar PAR_D

    PAR_I           shift and go to state 747


state 705

    (279) listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS . PAR_I valoresString PAR_D

    PAR_I           shift and go to state 748


state 706

    (155) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW . ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    ARRAYCLASS      shift and go to state 749


state 707

    (280) listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS . PAR_I valoresChar PAR_D

    PAR_I           shift and go to state 750


state 708

    (278) listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS . PAR_I valoresString PAR_D

    PAR_I           shift and go to state 751


state 709

    (168) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 752


state 710

    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 753


state 711

    (173) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 754


state 712

    (169) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .

    VAR             reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)


state 713

    (170) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I . contenido LLAVE_D
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

    contenido                      shift and go to state 755
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 714

    (171) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I . contenido LLAVE_D
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

    contenido                      shift and go to state 756
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 715

    (116) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .

    DEF             reduce using rule 116 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAR             reduce using rule 116 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAL             reduce using rule 116 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VARIABLE        reduce using rule 116 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINTLN         reduce using rule 116 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINT           reduce using rule 116 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    READLINE        reduce using rule 116 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    WHILE           reduce using rule 116 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    FOR             reduce using rule 116 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    IF              reduce using rule 116 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    INT             reduce using rule 116 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    DOUBLE          reduce using rule 116 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    LONG            reduce using rule 116 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    FLOAT           reduce using rule 116 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    STRING          reduce using rule 116 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    CHAR            reduce using rule 116 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    $end            reduce using rule 116 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    LLAVE_D         reduce using rule 116 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)


state 716

    (115) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .

    DEF             reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAR             reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAL             reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VARIABLE        reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    PRINTLN         reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    PRINT           reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    READLINE        reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    WHILE           reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    FOR             reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    IF              reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    INT             reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    DOUBLE          reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    LONG            reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    FLOAT           reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    STRING          reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    CHAR            reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    $end            reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    LLAVE_D         reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)


state 717

    (117) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .

    DEF             reduce using rule 117 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAR             reduce using rule 117 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAL             reduce using rule 117 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VARIABLE        reduce using rule 117 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINTLN         reduce using rule 117 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINT           reduce using rule 117 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    READLINE        reduce using rule 117 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    WHILE           reduce using rule 117 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    FOR             reduce using rule 117 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    IF              reduce using rule 117 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    INT             reduce using rule 117 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    DOUBLE          reduce using rule 117 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    LONG            reduce using rule 117 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    FLOAT           reduce using rule 117 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    STRING          reduce using rule 117 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    CHAR            reduce using rule 117 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    $end            reduce using rule 117 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    LLAVE_D         reduce using rule 117 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)


state 718

    (118) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .

    DEF             reduce using rule 118 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    VAR             reduce using rule 118 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    VAL             reduce using rule 118 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    VARIABLE        reduce using rule 118 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    PRINTLN         reduce using rule 118 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    PRINT           reduce using rule 118 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    READLINE        reduce using rule 118 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    WHILE           reduce using rule 118 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    FOR             reduce using rule 118 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    IF              reduce using rule 118 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    INT             reduce using rule 118 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    DOUBLE          reduce using rule 118 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    LONG            reduce using rule 118 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    FLOAT           reduce using rule 118 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    STRING          reduce using rule 118 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    CHAR            reduce using rule 118 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    $end            reduce using rule 118 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    LLAVE_D         reduce using rule 118 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)


state 719

    (124) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .

    DEF             reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAR             reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAL             reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VARIABLE        reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINTLN         reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINT           reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    READLINE        reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    WHILE           reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    FOR             reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    IF              reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    INT             reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    DOUBLE          reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    LONG            reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    FLOAT           reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    STRING          reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    CHAR            reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    $end            reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    LLAVE_D         reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)


state 720

    (123) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .

    DEF             reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    VAR             reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    VAL             reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    VARIABLE        reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    PRINTLN         reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    PRINT           reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    READLINE        reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    WHILE           reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    FOR             reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    IF              reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    INT             reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    DOUBLE          reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    LONG            reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    FLOAT           reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    STRING          reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    CHAR            reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    $end            reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    LLAVE_D         reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)


state 721

    (125) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .

    DEF             reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAR             reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAL             reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VARIABLE        reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINTLN         reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINT           reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    READLINE        reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    WHILE           reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    FOR             reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    IF              reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    INT             reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    DOUBLE          reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    LONG            reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    FLOAT           reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    STRING          reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    CHAR            reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    $end            reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    LLAVE_D         reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)


state 722

    (216) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (217) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    IF              shift and go to state 151


state 723

    (217) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .

    ELSE            reduce using rule 217 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    VAR             reduce using rule 217 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    VAL             reduce using rule 217 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    VARIABLE        reduce using rule 217 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    PRINTLN         reduce using rule 217 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    PRINT           reduce using rule 217 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    READLINE        reduce using rule 217 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    WHILE           reduce using rule 217 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    FOR             reduce using rule 217 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    IF              reduce using rule 217 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    INT             reduce using rule 217 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    DOUBLE          reduce using rule 217 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    LONG            reduce using rule 217 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    FLOAT           reduce using rule 217 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    STRING          reduce using rule 217 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    CHAR            reduce using rule 217 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    DEF             reduce using rule 217 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    $end            reduce using rule 217 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    LLAVE_D         reduce using rule 217 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    RETURN          reduce using rule 217 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)


state 724

    (153) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS . CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 757


state 725

    (270) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I . valoresInt PAR_D
    (272) valoresInt -> . INT
    (273) valoresInt -> . valoresInt COMA INT

    INT             shift and go to state 759

    valoresInt                     shift and go to state 758

state 726

    (271) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I . valoresDouble PAR_D
    (274) valoresDouble -> . DOUBLE
    (275) valoresDouble -> . valoresDouble COMA DOUBLE

    DOUBLE          shift and go to state 761

    valoresDouble                  shift and go to state 760

state 727

    (308) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I . STRING COMA INT PAR_D

    STRING          shift and go to state 762


state 728

    (309) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I . STRING COMA LONG PAR_D

    STRING          shift and go to state 763


state 729

    (310) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I . STRING COMA DOUBLE PAR_D

    STRING          shift and go to state 764


state 730

    (311) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I . STRING COMA FLOAT PAR_D

    STRING          shift and go to state 765


state 731

    (324) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I . INT COMA STRING PAR_D

    INT             shift and go to state 766


state 732

    (325) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I . INT COMA LONG PAR_D

    INT             shift and go to state 767


state 733

    (326) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I . INT COMA DOUBLE PAR_D

    INT             shift and go to state 768


state 734

    (327) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I . INT COMA FLOAT PAR_D

    INT             shift and go to state 769


state 735

    (320) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I . LONG COMA STRING PAR_D

    LONG            shift and go to state 770


state 736

    (321) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I . LONG COMA INT PAR_D

    LONG            shift and go to state 771


state 737

    (322) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I . LONG COMA DOUBLE PAR_D

    LONG            shift and go to state 772


state 738

    (323) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I . LONG COMA FLOAT PAR_D

    LONG            shift and go to state 773


state 739

    (316) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I . DOUBLE COMA STRING PAR_D

    DOUBLE          shift and go to state 774


state 740

    (317) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I . DOUBLE COMA LONG PAR_D

    DOUBLE          shift and go to state 775


state 741

    (318) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I . DOUBLE COMA FLOAT PAR_D

    DOUBLE          shift and go to state 776


state 742

    (319) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I . DOUBLE COMA INT PAR_D

    DOUBLE          shift and go to state 777


state 743

    (312) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I . FLOAT COMA STRING PAR_D

    FLOAT           shift and go to state 778


state 744

    (313) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I . FLOAT COMA LONG PAR_D

    FLOAT           shift and go to state 779


state 745

    (314) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I . FLOAT COMA DOUBLE PAR_D

    FLOAT           shift and go to state 780


state 746

    (315) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I . FLOAT COMA INT PAR_D

    FLOAT           shift and go to state 781


state 747

    (281) listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I . valoresChar PAR_D
    (284) valoresChar -> . CHAR
    (285) valoresChar -> . valoresChar COMA CHAR

    CHAR            shift and go to state 783

    valoresChar                    shift and go to state 782

state 748

    (279) listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I . valoresString PAR_D
    (282) valoresString -> . STRING
    (283) valoresString -> . valoresString COMA STRING

    STRING          shift and go to state 785

    valoresString                  shift and go to state 784

state 749

    (155) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS . CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 786


state 750

    (280) listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I . valoresChar PAR_D
    (284) valoresChar -> . CHAR
    (285) valoresChar -> . valoresChar COMA CHAR

    CHAR            shift and go to state 783

    valoresChar                    shift and go to state 787

state 751

    (278) listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I . valoresString PAR_D
    (282) valoresString -> . STRING
    (283) valoresString -> . valoresString COMA STRING

    STRING          shift and go to state 785

    valoresString                  shift and go to state 788

state 752

    (168) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .

    VAR             reduce using rule 168 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 168 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 168 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 168 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 168 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 168 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 168 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 168 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 168 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 168 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 168 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 168 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 168 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 168 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 168 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 168 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 168 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 168 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 168 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)


state 753

    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I . contenido LLAVE_D
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

    contenido                      shift and go to state 789
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 754

    (173) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I . contenido LLAVE_D
    (9) contenido -> . asignacion
    (10) contenido -> . reasignacion
    (11) contenido -> . funcall
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . match
    (17) contenido -> . if
    (18) contenido -> . aritmetica
    (19) contenido -> . startsWith
    (20) contenido -> . asignacion contenido
    (21) contenido -> . reasignacion contenido
    (22) contenido -> . funcall contenido
    (23) contenido -> . impresion contenido
    (24) contenido -> . entrada contenido
    (25) contenido -> . while contenido
    (26) contenido -> . for contenido
    (27) contenido -> . if contenido
    (28) contenido -> . match contenido
    (29) contenido -> . aritmetica contenido
    (30) contenido -> . startsWith contenido
    (36) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (37) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (38) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (39) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (40) asignacion -> . VAR VARIABLE IGUAL returnfun
    (41) asignacion -> . VAL VARIABLE IGUAL returnfun
    (42) asignacion -> . asignacionLong
    (43) asignacion -> . asignacionInt
    (44) asignacion -> . asignacionFloat
    (45) asignacion -> . asignacionDouble
    (46) asignacion -> . asignacionString
    (47) asignacion -> . asignacionChar
    (48) asignacion -> . asignacionBoolean
    (49) asignacion -> . array
    (50) asignacion -> . list
    (165) asignacion -> . VAR VARIABLE IGUAL tuple
    (166) asignacion -> . VAL VARIABLE IGUAL tuple
    (306) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (307) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (80) reasignacion -> . VARIABLE IGUAL valor
    (81) reasignacion -> . VARIABLE IGUAL returnfun
    (82) reasignacion -> . VARIABLE IGUAL aritmetica
    (83) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (137) funcall -> . VARIABLE varparen
    (132) impresion -> . PRINTLN PAR_I valorI PAR_D
    (133) impresion -> . PRINT PAR_I valorI PAR_D
    (136) entrada -> . READLINE PAR_I PAR_D
    (167) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (174) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (213) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (214) if -> . if elseif
    (215) if -> . if else
    (250) aritmetica -> . numeros aritmeticos numeros
    (251) aritmetica -> . VARIABLE aritmeticos numeros
    (252) aritmetica -> . numeros aritmeticos VARIABLE
    (253) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (254) aritmetica -> . aritmetica aritmeticos numeros
    (255) aritmetica -> . aritmetica aritmeticos VARIABLE
    (256) aritmetica -> . suma
    (257) aritmetica -> . VARIABLE MAS numeros
    (258) aritmetica -> . numeros MAS VARIABLE
    (259) aritmetica -> . VARIABLE MAS VARIABLE
    (260) aritmetica -> . aritmetica MAS numeros
    (261) aritmetica -> . aritmetica MAS VARIABLE
    (262) aritmetica -> . INT MAS INT
    (263) aritmetica -> . DOUBLE MAS DOUBLE
    (264) aritmetica -> . LONG MAS LONG
    (265) aritmetica -> . FLOAT MAS FLOAT
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (277) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (334) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (335) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (336) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (337) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (53) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (54) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (55) asignacionInt -> . asignacionSumInt
    (328) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (329) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (330) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (331) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (56) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (57) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (341) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (342) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (343) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (344) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (58) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (60) asignacionDouble -> . asignacionSumDouble
    (348) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (349) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (350) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (351) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (61) asignacionString -> . VAR VARIABLE IGUAL STRING
    (62) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (63) asignacionString -> . VAL VARIABLE IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (65) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (66) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . asignacionSumString
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (152) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (153) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (154) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (156) array -> . arrayInt
    (157) array -> . arrayDouble
    (158) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (159) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (160) list -> . listChar
    (161) list -> . listString
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (286) suma -> . sumIntChar
    (287) suma -> . sumStringChar
    (288) suma -> . sumIntDouble
    (289) suma -> . sumDoubleChar
    (304) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (305) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (298) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (299) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (300) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (301) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (302) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (303) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (270) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (271) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (280) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (281) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (278) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (279) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (294) sumIntChar -> . INT MAS CHAR
    (295) sumIntChar -> . CHAR MAS INT
    (296) sumStringChar -> . STRING MAS CHAR
    (297) sumStringChar -> . CHAR MAS STRING
    (290) sumIntDouble -> . INT MAS DOUBLE
    (291) sumIntDouble -> . DOUBLE MAS INT
    (292) sumDoubleChar -> . DOUBLE MAS CHAR
    (293) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 32
    PRINT           shift and go to state 33
    READLINE        shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    IF              shift and go to state 37
    INT             shift and go to state 31
    DOUBLE          shift and go to state 40
    LONG            shift and go to state 41
    FLOAT           shift and go to state 42
    STRING          shift and go to state 43
    CHAR            shift and go to state 47

    contenido                      shift and go to state 790
    asignacion                     shift and go to state 10
    reasignacion                   shift and go to state 11
    funcall                        shift and go to state 12
    impresion                      shift and go to state 13
    entrada                        shift and go to state 14
    while                          shift and go to state 15
    for                            shift and go to state 16
    match                          shift and go to state 17
    if                             shift and go to state 18
    aritmetica                     shift and go to state 9
    startsWith                     shift and go to state 19
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 38
    suma                           shift and go to state 39
    asignacionSumInt               shift and go to state 44
    asignacionSumDouble            shift and go to state 45
    asignacionSumString            shift and go to state 46
    arrayInt                       shift and go to state 48
    arrayDouble                    shift and go to state 49
    listChar                       shift and go to state 50
    listString                     shift and go to state 51
    sumIntChar                     shift and go to state 52
    sumStringChar                  shift and go to state 53
    sumIntDouble                   shift and go to state 54
    sumDoubleChar                  shift and go to state 55

state 755

    (170) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 791


state 756

    (171) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 792


state 757

    (153) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I . tipo CORCHETE_D PAR_I INT PAR_D
    (84) tipo -> . CHARCLASS
    (85) tipo -> . STRINGCLASS
    (86) tipo -> . BOOLCLASS
    (87) tipo -> . INTCLASS
    (88) tipo -> . LONGCLASS
    (89) tipo -> . DOUBLECLASS
    (90) tipo -> . FLOATCLASS
    (91) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (92) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 361
    STRINGCLASS     shift and go to state 362
    BOOLCLASS       shift and go to state 363
    INTCLASS        shift and go to state 364
    LONGCLASS       shift and go to state 365
    DOUBLECLASS     shift and go to state 366
    FLOATCLASS      shift and go to state 367
    ARRAYCLASS      shift and go to state 368
    LISTCLASS       shift and go to state 369

    tipo                           shift and go to state 793

state 758

    (270) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt . PAR_D
    (273) valoresInt -> valoresInt . COMA INT

    PAR_D           shift and go to state 794
    COMA            shift and go to state 795


state 759

    (272) valoresInt -> INT .

    PAR_D           reduce using rule 272 (valoresInt -> INT .)
    COMA            reduce using rule 272 (valoresInt -> INT .)


state 760

    (271) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble . PAR_D
    (275) valoresDouble -> valoresDouble . COMA DOUBLE

    PAR_D           shift and go to state 796
    COMA            shift and go to state 797


state 761

    (274) valoresDouble -> DOUBLE .

    PAR_D           reduce using rule 274 (valoresDouble -> DOUBLE .)
    COMA            reduce using rule 274 (valoresDouble -> DOUBLE .)


state 762

    (308) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING . COMA INT PAR_D

    COMA            shift and go to state 798


state 763

    (309) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING . COMA LONG PAR_D

    COMA            shift and go to state 799


state 764

    (310) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING . COMA DOUBLE PAR_D

    COMA            shift and go to state 800


state 765

    (311) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING . COMA FLOAT PAR_D

    COMA            shift and go to state 801


state 766

    (324) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT . COMA STRING PAR_D

    COMA            shift and go to state 802


state 767

    (325) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT . COMA LONG PAR_D

    COMA            shift and go to state 803


state 768

    (326) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT . COMA DOUBLE PAR_D

    COMA            shift and go to state 804


state 769

    (327) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT . COMA FLOAT PAR_D

    COMA            shift and go to state 805


state 770

    (320) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG . COMA STRING PAR_D

    COMA            shift and go to state 806


state 771

    (321) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG . COMA INT PAR_D

    COMA            shift and go to state 807


state 772

    (322) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG . COMA DOUBLE PAR_D

    COMA            shift and go to state 808


state 773

    (323) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG . COMA FLOAT PAR_D

    COMA            shift and go to state 809


state 774

    (316) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE . COMA STRING PAR_D

    COMA            shift and go to state 810


state 775

    (317) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE . COMA LONG PAR_D

    COMA            shift and go to state 811


state 776

    (318) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE . COMA FLOAT PAR_D

    COMA            shift and go to state 812


state 777

    (319) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE . COMA INT PAR_D

    COMA            shift and go to state 813


state 778

    (312) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT . COMA STRING PAR_D

    COMA            shift and go to state 814


state 779

    (313) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT . COMA LONG PAR_D

    COMA            shift and go to state 815


state 780

    (314) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT . COMA DOUBLE PAR_D

    COMA            shift and go to state 816


state 781

    (315) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT . COMA INT PAR_D

    COMA            shift and go to state 817


state 782

    (281) listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar . PAR_D
    (285) valoresChar -> valoresChar . COMA CHAR

    PAR_D           shift and go to state 818
    COMA            shift and go to state 819


state 783

    (284) valoresChar -> CHAR .

    PAR_D           reduce using rule 284 (valoresChar -> CHAR .)
    COMA            reduce using rule 284 (valoresChar -> CHAR .)


state 784

    (279) listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString . PAR_D
    (283) valoresString -> valoresString . COMA STRING

    PAR_D           shift and go to state 820
    COMA            shift and go to state 821


state 785

    (282) valoresString -> STRING .

    PAR_D           reduce using rule 282 (valoresString -> STRING .)
    COMA            reduce using rule 282 (valoresString -> STRING .)


state 786

    (155) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I . tipo CORCHETE_D PAR_I INT PAR_D
    (84) tipo -> . CHARCLASS
    (85) tipo -> . STRINGCLASS
    (86) tipo -> . BOOLCLASS
    (87) tipo -> . INTCLASS
    (88) tipo -> . LONGCLASS
    (89) tipo -> . DOUBLECLASS
    (90) tipo -> . FLOATCLASS
    (91) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (92) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 361
    STRINGCLASS     shift and go to state 362
    BOOLCLASS       shift and go to state 363
    INTCLASS        shift and go to state 364
    LONGCLASS       shift and go to state 365
    DOUBLECLASS     shift and go to state 366
    FLOATCLASS      shift and go to state 367
    ARRAYCLASS      shift and go to state 368
    LISTCLASS       shift and go to state 369

    tipo                           shift and go to state 822

state 787

    (280) listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar . PAR_D
    (285) valoresChar -> valoresChar . COMA CHAR

    PAR_D           shift and go to state 823
    COMA            shift and go to state 819


state 788

    (278) listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString . PAR_D
    (283) valoresString -> valoresString . COMA STRING

    PAR_D           shift and go to state 824
    COMA            shift and go to state 821


state 789

    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 825


state 790

    (173) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 826


state 791

    (170) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .

    VAR             reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)


state 792

    (171) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .

    VAR             reduce using rule 171 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 171 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 171 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 171 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 171 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 171 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 171 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 171 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 171 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 171 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 171 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 171 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 171 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 171 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 171 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 171 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 171 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 171 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 171 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)


state 793

    (153) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo . CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 827


state 794

    (270) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .

    VAR             reduce using rule 270 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    VAL             reduce using rule 270 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    VARIABLE        reduce using rule 270 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    PRINTLN         reduce using rule 270 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    PRINT           reduce using rule 270 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    READLINE        reduce using rule 270 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    WHILE           reduce using rule 270 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    FOR             reduce using rule 270 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    IF              reduce using rule 270 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    INT             reduce using rule 270 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    DOUBLE          reduce using rule 270 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    LONG            reduce using rule 270 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    FLOAT           reduce using rule 270 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    STRING          reduce using rule 270 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    CHAR            reduce using rule 270 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    DEF             reduce using rule 270 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    $end            reduce using rule 270 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    LLAVE_D         reduce using rule 270 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    RETURN          reduce using rule 270 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    CASE            reduce using rule 270 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)


state 795

    (273) valoresInt -> valoresInt COMA . INT

    INT             shift and go to state 828


state 796

    (271) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .

    VAR             reduce using rule 271 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    VAL             reduce using rule 271 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    VARIABLE        reduce using rule 271 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    PRINTLN         reduce using rule 271 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    PRINT           reduce using rule 271 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    READLINE        reduce using rule 271 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    WHILE           reduce using rule 271 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    FOR             reduce using rule 271 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    IF              reduce using rule 271 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    INT             reduce using rule 271 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    DOUBLE          reduce using rule 271 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    LONG            reduce using rule 271 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    FLOAT           reduce using rule 271 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    STRING          reduce using rule 271 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    CHAR            reduce using rule 271 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    DEF             reduce using rule 271 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    $end            reduce using rule 271 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    LLAVE_D         reduce using rule 271 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    RETURN          reduce using rule 271 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    CASE            reduce using rule 271 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)


state 797

    (275) valoresDouble -> valoresDouble COMA . DOUBLE

    DOUBLE          shift and go to state 829


state 798

    (308) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA . INT PAR_D

    INT             shift and go to state 830


state 799

    (309) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA . LONG PAR_D

    LONG            shift and go to state 831


state 800

    (310) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA . DOUBLE PAR_D

    DOUBLE          shift and go to state 832


state 801

    (311) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA . FLOAT PAR_D

    FLOAT           shift and go to state 833


state 802

    (324) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA . STRING PAR_D

    STRING          shift and go to state 834


state 803

    (325) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA . LONG PAR_D

    LONG            shift and go to state 835


state 804

    (326) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA . DOUBLE PAR_D

    DOUBLE          shift and go to state 836


state 805

    (327) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA . FLOAT PAR_D

    FLOAT           shift and go to state 837


state 806

    (320) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA . STRING PAR_D

    STRING          shift and go to state 838


state 807

    (321) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA . INT PAR_D

    INT             shift and go to state 839


state 808

    (322) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA . DOUBLE PAR_D

    DOUBLE          shift and go to state 840


state 809

    (323) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA . FLOAT PAR_D

    FLOAT           shift and go to state 841


state 810

    (316) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA . STRING PAR_D

    STRING          shift and go to state 842


state 811

    (317) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA . LONG PAR_D

    LONG            shift and go to state 843


state 812

    (318) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA . FLOAT PAR_D

    FLOAT           shift and go to state 844


state 813

    (319) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA . INT PAR_D

    INT             shift and go to state 845


state 814

    (312) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA . STRING PAR_D

    STRING          shift and go to state 846


state 815

    (313) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA . LONG PAR_D

    LONG            shift and go to state 847


state 816

    (314) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA . DOUBLE PAR_D

    DOUBLE          shift and go to state 848


state 817

    (315) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA . INT PAR_D

    INT             shift and go to state 849


state 818

    (281) listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .

    VAR             reduce using rule 281 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    VAL             reduce using rule 281 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    VARIABLE        reduce using rule 281 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    PRINTLN         reduce using rule 281 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    PRINT           reduce using rule 281 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    READLINE        reduce using rule 281 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    WHILE           reduce using rule 281 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    FOR             reduce using rule 281 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    IF              reduce using rule 281 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    INT             reduce using rule 281 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    DOUBLE          reduce using rule 281 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    LONG            reduce using rule 281 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    FLOAT           reduce using rule 281 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    STRING          reduce using rule 281 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    CHAR            reduce using rule 281 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    DEF             reduce using rule 281 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    $end            reduce using rule 281 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    LLAVE_D         reduce using rule 281 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    RETURN          reduce using rule 281 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    CASE            reduce using rule 281 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)


state 819

    (285) valoresChar -> valoresChar COMA . CHAR

    CHAR            shift and go to state 850


state 820

    (279) listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .

    VAR             reduce using rule 279 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    VAL             reduce using rule 279 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    VARIABLE        reduce using rule 279 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    PRINTLN         reduce using rule 279 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    PRINT           reduce using rule 279 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    READLINE        reduce using rule 279 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    WHILE           reduce using rule 279 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    FOR             reduce using rule 279 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    IF              reduce using rule 279 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    INT             reduce using rule 279 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    DOUBLE          reduce using rule 279 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    LONG            reduce using rule 279 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    FLOAT           reduce using rule 279 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    STRING          reduce using rule 279 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    CHAR            reduce using rule 279 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    DEF             reduce using rule 279 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    $end            reduce using rule 279 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    LLAVE_D         reduce using rule 279 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    RETURN          reduce using rule 279 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    CASE            reduce using rule 279 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)


state 821

    (283) valoresString -> valoresString COMA . STRING

    STRING          shift and go to state 851


state 822

    (155) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo . CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 852


state 823

    (280) listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .

    VAR             reduce using rule 280 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    VAL             reduce using rule 280 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    VARIABLE        reduce using rule 280 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    PRINTLN         reduce using rule 280 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    PRINT           reduce using rule 280 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    READLINE        reduce using rule 280 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    WHILE           reduce using rule 280 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    FOR             reduce using rule 280 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    IF              reduce using rule 280 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    INT             reduce using rule 280 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    DOUBLE          reduce using rule 280 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    LONG            reduce using rule 280 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    FLOAT           reduce using rule 280 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    STRING          reduce using rule 280 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    CHAR            reduce using rule 280 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    DEF             reduce using rule 280 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    $end            reduce using rule 280 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    LLAVE_D         reduce using rule 280 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    RETURN          reduce using rule 280 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    CASE            reduce using rule 280 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)


state 824

    (278) listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .

    VAR             reduce using rule 278 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    VAL             reduce using rule 278 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    VARIABLE        reduce using rule 278 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    PRINTLN         reduce using rule 278 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    PRINT           reduce using rule 278 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    READLINE        reduce using rule 278 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    WHILE           reduce using rule 278 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    FOR             reduce using rule 278 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    IF              reduce using rule 278 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    INT             reduce using rule 278 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    DOUBLE          reduce using rule 278 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    LONG            reduce using rule 278 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    FLOAT           reduce using rule 278 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    STRING          reduce using rule 278 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    CHAR            reduce using rule 278 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    DEF             reduce using rule 278 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    $end            reduce using rule 278 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    LLAVE_D         reduce using rule 278 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    RETURN          reduce using rule 278 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    CASE            reduce using rule 278 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)


state 825

    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .

    VAR             reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)


state 826

    (173) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .

    VAR             reduce using rule 173 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 173 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 173 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 173 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 173 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 173 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 173 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 173 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 173 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 173 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 173 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 173 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 173 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 173 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 173 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 173 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 173 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 173 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 173 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)


state 827

    (153) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D . PAR_I INT PAR_D

    PAR_I           shift and go to state 853


state 828

    (273) valoresInt -> valoresInt COMA INT .

    PAR_D           reduce using rule 273 (valoresInt -> valoresInt COMA INT .)
    COMA            reduce using rule 273 (valoresInt -> valoresInt COMA INT .)


state 829

    (275) valoresDouble -> valoresDouble COMA DOUBLE .

    PAR_D           reduce using rule 275 (valoresDouble -> valoresDouble COMA DOUBLE .)
    COMA            reduce using rule 275 (valoresDouble -> valoresDouble COMA DOUBLE .)


state 830

    (308) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT . PAR_D

    PAR_D           shift and go to state 854


state 831

    (309) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG . PAR_D

    PAR_D           shift and go to state 855


state 832

    (310) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE . PAR_D

    PAR_D           shift and go to state 856


state 833

    (311) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT . PAR_D

    PAR_D           shift and go to state 857


state 834

    (324) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING . PAR_D

    PAR_D           shift and go to state 858


state 835

    (325) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG . PAR_D

    PAR_D           shift and go to state 859


state 836

    (326) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE . PAR_D

    PAR_D           shift and go to state 860


state 837

    (327) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT . PAR_D

    PAR_D           shift and go to state 861


state 838

    (320) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING . PAR_D

    PAR_D           shift and go to state 862


state 839

    (321) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT . PAR_D

    PAR_D           shift and go to state 863


state 840

    (322) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE . PAR_D

    PAR_D           shift and go to state 864


state 841

    (323) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT . PAR_D

    PAR_D           shift and go to state 865


state 842

    (316) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING . PAR_D

    PAR_D           shift and go to state 866


state 843

    (317) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG . PAR_D

    PAR_D           shift and go to state 867


state 844

    (318) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT . PAR_D

    PAR_D           shift and go to state 868


state 845

    (319) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT . PAR_D

    PAR_D           shift and go to state 869


state 846

    (312) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING . PAR_D

    PAR_D           shift and go to state 870


state 847

    (313) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG . PAR_D

    PAR_D           shift and go to state 871


state 848

    (314) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE . PAR_D

    PAR_D           shift and go to state 872


state 849

    (315) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT . PAR_D

    PAR_D           shift and go to state 873


state 850

    (285) valoresChar -> valoresChar COMA CHAR .

    PAR_D           reduce using rule 285 (valoresChar -> valoresChar COMA CHAR .)
    COMA            reduce using rule 285 (valoresChar -> valoresChar COMA CHAR .)


state 851

    (283) valoresString -> valoresString COMA STRING .

    PAR_D           reduce using rule 283 (valoresString -> valoresString COMA STRING .)
    COMA            reduce using rule 283 (valoresString -> valoresString COMA STRING .)


state 852

    (155) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D . PAR_I INT PAR_D

    PAR_I           shift and go to state 874


state 853

    (153) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I . INT PAR_D

    INT             shift and go to state 875


state 854

    (308) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .

    VAR             reduce using rule 308 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    VAL             reduce using rule 308 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    VARIABLE        reduce using rule 308 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    PRINTLN         reduce using rule 308 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    PRINT           reduce using rule 308 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    READLINE        reduce using rule 308 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    WHILE           reduce using rule 308 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    FOR             reduce using rule 308 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    IF              reduce using rule 308 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    INT             reduce using rule 308 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    DOUBLE          reduce using rule 308 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    LONG            reduce using rule 308 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    FLOAT           reduce using rule 308 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    STRING          reduce using rule 308 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    CHAR            reduce using rule 308 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    DEF             reduce using rule 308 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    $end            reduce using rule 308 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    LLAVE_D         reduce using rule 308 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    RETURN          reduce using rule 308 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    CASE            reduce using rule 308 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)


state 855

    (309) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .

    VAR             reduce using rule 309 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    VAL             reduce using rule 309 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    VARIABLE        reduce using rule 309 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    PRINTLN         reduce using rule 309 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    PRINT           reduce using rule 309 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    READLINE        reduce using rule 309 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    WHILE           reduce using rule 309 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    FOR             reduce using rule 309 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    IF              reduce using rule 309 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    INT             reduce using rule 309 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    DOUBLE          reduce using rule 309 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    LONG            reduce using rule 309 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    FLOAT           reduce using rule 309 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    STRING          reduce using rule 309 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    CHAR            reduce using rule 309 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    DEF             reduce using rule 309 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    $end            reduce using rule 309 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    LLAVE_D         reduce using rule 309 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    RETURN          reduce using rule 309 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    CASE            reduce using rule 309 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)


state 856

    (310) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .

    VAR             reduce using rule 310 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    VAL             reduce using rule 310 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    VARIABLE        reduce using rule 310 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    PRINTLN         reduce using rule 310 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    PRINT           reduce using rule 310 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    READLINE        reduce using rule 310 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    WHILE           reduce using rule 310 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    FOR             reduce using rule 310 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    IF              reduce using rule 310 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    INT             reduce using rule 310 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    DOUBLE          reduce using rule 310 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    LONG            reduce using rule 310 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    FLOAT           reduce using rule 310 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    STRING          reduce using rule 310 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    CHAR            reduce using rule 310 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    DEF             reduce using rule 310 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    $end            reduce using rule 310 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    LLAVE_D         reduce using rule 310 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    RETURN          reduce using rule 310 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    CASE            reduce using rule 310 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)


state 857

    (311) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .

    VAR             reduce using rule 311 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    VAL             reduce using rule 311 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    VARIABLE        reduce using rule 311 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    PRINTLN         reduce using rule 311 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    PRINT           reduce using rule 311 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    READLINE        reduce using rule 311 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    WHILE           reduce using rule 311 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    FOR             reduce using rule 311 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    IF              reduce using rule 311 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    INT             reduce using rule 311 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    DOUBLE          reduce using rule 311 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    LONG            reduce using rule 311 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    FLOAT           reduce using rule 311 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    STRING          reduce using rule 311 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    CHAR            reduce using rule 311 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    DEF             reduce using rule 311 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    $end            reduce using rule 311 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    LLAVE_D         reduce using rule 311 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    RETURN          reduce using rule 311 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    CASE            reduce using rule 311 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)


state 858

    (324) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .

    VAR             reduce using rule 324 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    VAL             reduce using rule 324 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    VARIABLE        reduce using rule 324 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    PRINTLN         reduce using rule 324 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    PRINT           reduce using rule 324 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    READLINE        reduce using rule 324 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    WHILE           reduce using rule 324 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    FOR             reduce using rule 324 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    IF              reduce using rule 324 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    INT             reduce using rule 324 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    DOUBLE          reduce using rule 324 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    LONG            reduce using rule 324 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    FLOAT           reduce using rule 324 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    STRING          reduce using rule 324 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    CHAR            reduce using rule 324 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    DEF             reduce using rule 324 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    $end            reduce using rule 324 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    LLAVE_D         reduce using rule 324 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    RETURN          reduce using rule 324 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    CASE            reduce using rule 324 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)


state 859

    (325) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .

    VAR             reduce using rule 325 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    VAL             reduce using rule 325 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    VARIABLE        reduce using rule 325 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    PRINTLN         reduce using rule 325 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    PRINT           reduce using rule 325 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    READLINE        reduce using rule 325 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    WHILE           reduce using rule 325 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    FOR             reduce using rule 325 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    IF              reduce using rule 325 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    INT             reduce using rule 325 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    DOUBLE          reduce using rule 325 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    LONG            reduce using rule 325 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    FLOAT           reduce using rule 325 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    STRING          reduce using rule 325 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    CHAR            reduce using rule 325 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    DEF             reduce using rule 325 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    $end            reduce using rule 325 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    LLAVE_D         reduce using rule 325 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    RETURN          reduce using rule 325 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    CASE            reduce using rule 325 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)


state 860

    (326) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .

    VAR             reduce using rule 326 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    VAL             reduce using rule 326 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    VARIABLE        reduce using rule 326 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    PRINTLN         reduce using rule 326 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    PRINT           reduce using rule 326 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    READLINE        reduce using rule 326 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    WHILE           reduce using rule 326 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    FOR             reduce using rule 326 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    IF              reduce using rule 326 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    INT             reduce using rule 326 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    DOUBLE          reduce using rule 326 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    LONG            reduce using rule 326 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    FLOAT           reduce using rule 326 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    STRING          reduce using rule 326 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    CHAR            reduce using rule 326 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    DEF             reduce using rule 326 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    $end            reduce using rule 326 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    LLAVE_D         reduce using rule 326 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    RETURN          reduce using rule 326 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    CASE            reduce using rule 326 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)


state 861

    (327) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .

    VAR             reduce using rule 327 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    VAL             reduce using rule 327 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    VARIABLE        reduce using rule 327 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    PRINTLN         reduce using rule 327 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    PRINT           reduce using rule 327 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    READLINE        reduce using rule 327 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    WHILE           reduce using rule 327 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    FOR             reduce using rule 327 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    IF              reduce using rule 327 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    INT             reduce using rule 327 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    DOUBLE          reduce using rule 327 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    LONG            reduce using rule 327 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    FLOAT           reduce using rule 327 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    STRING          reduce using rule 327 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    CHAR            reduce using rule 327 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    DEF             reduce using rule 327 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    $end            reduce using rule 327 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    LLAVE_D         reduce using rule 327 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    RETURN          reduce using rule 327 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    CASE            reduce using rule 327 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)


state 862

    (320) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .

    VAR             reduce using rule 320 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    VAL             reduce using rule 320 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    VARIABLE        reduce using rule 320 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    PRINTLN         reduce using rule 320 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    PRINT           reduce using rule 320 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    READLINE        reduce using rule 320 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    WHILE           reduce using rule 320 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    FOR             reduce using rule 320 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    IF              reduce using rule 320 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    INT             reduce using rule 320 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    DOUBLE          reduce using rule 320 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    LONG            reduce using rule 320 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    FLOAT           reduce using rule 320 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    STRING          reduce using rule 320 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    CHAR            reduce using rule 320 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    DEF             reduce using rule 320 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    $end            reduce using rule 320 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    LLAVE_D         reduce using rule 320 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    RETURN          reduce using rule 320 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    CASE            reduce using rule 320 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)


state 863

    (321) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .

    VAR             reduce using rule 321 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    VAL             reduce using rule 321 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    VARIABLE        reduce using rule 321 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    PRINTLN         reduce using rule 321 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    PRINT           reduce using rule 321 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    READLINE        reduce using rule 321 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    WHILE           reduce using rule 321 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    FOR             reduce using rule 321 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    IF              reduce using rule 321 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    INT             reduce using rule 321 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    DOUBLE          reduce using rule 321 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    LONG            reduce using rule 321 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    FLOAT           reduce using rule 321 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    STRING          reduce using rule 321 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    CHAR            reduce using rule 321 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    DEF             reduce using rule 321 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    $end            reduce using rule 321 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    LLAVE_D         reduce using rule 321 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    RETURN          reduce using rule 321 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    CASE            reduce using rule 321 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)


state 864

    (322) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .

    VAR             reduce using rule 322 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    VAL             reduce using rule 322 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    VARIABLE        reduce using rule 322 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    PRINTLN         reduce using rule 322 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    PRINT           reduce using rule 322 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    READLINE        reduce using rule 322 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    WHILE           reduce using rule 322 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    FOR             reduce using rule 322 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    IF              reduce using rule 322 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    INT             reduce using rule 322 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    DOUBLE          reduce using rule 322 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    LONG            reduce using rule 322 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    FLOAT           reduce using rule 322 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    STRING          reduce using rule 322 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    CHAR            reduce using rule 322 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    DEF             reduce using rule 322 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    $end            reduce using rule 322 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    LLAVE_D         reduce using rule 322 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    RETURN          reduce using rule 322 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    CASE            reduce using rule 322 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)


state 865

    (323) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .

    VAR             reduce using rule 323 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    VAL             reduce using rule 323 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    VARIABLE        reduce using rule 323 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    PRINTLN         reduce using rule 323 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    PRINT           reduce using rule 323 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    READLINE        reduce using rule 323 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    WHILE           reduce using rule 323 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    FOR             reduce using rule 323 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    IF              reduce using rule 323 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    INT             reduce using rule 323 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    DOUBLE          reduce using rule 323 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    LONG            reduce using rule 323 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    FLOAT           reduce using rule 323 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    STRING          reduce using rule 323 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    CHAR            reduce using rule 323 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    DEF             reduce using rule 323 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    $end            reduce using rule 323 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    LLAVE_D         reduce using rule 323 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    RETURN          reduce using rule 323 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    CASE            reduce using rule 323 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)


state 866

    (316) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .

    VAR             reduce using rule 316 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    VAL             reduce using rule 316 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    VARIABLE        reduce using rule 316 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    PRINTLN         reduce using rule 316 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    PRINT           reduce using rule 316 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    READLINE        reduce using rule 316 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    WHILE           reduce using rule 316 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    FOR             reduce using rule 316 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    IF              reduce using rule 316 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    INT             reduce using rule 316 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    DOUBLE          reduce using rule 316 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    LONG            reduce using rule 316 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    FLOAT           reduce using rule 316 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    STRING          reduce using rule 316 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    CHAR            reduce using rule 316 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    DEF             reduce using rule 316 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    $end            reduce using rule 316 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    LLAVE_D         reduce using rule 316 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    RETURN          reduce using rule 316 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    CASE            reduce using rule 316 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)


state 867

    (317) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .

    VAR             reduce using rule 317 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    VAL             reduce using rule 317 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    VARIABLE        reduce using rule 317 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    PRINTLN         reduce using rule 317 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    PRINT           reduce using rule 317 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    READLINE        reduce using rule 317 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    WHILE           reduce using rule 317 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    FOR             reduce using rule 317 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    IF              reduce using rule 317 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    INT             reduce using rule 317 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    DOUBLE          reduce using rule 317 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    LONG            reduce using rule 317 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    FLOAT           reduce using rule 317 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    STRING          reduce using rule 317 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    CHAR            reduce using rule 317 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    DEF             reduce using rule 317 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    $end            reduce using rule 317 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    LLAVE_D         reduce using rule 317 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    RETURN          reduce using rule 317 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    CASE            reduce using rule 317 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)


state 868

    (318) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .

    VAR             reduce using rule 318 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    VAL             reduce using rule 318 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    VARIABLE        reduce using rule 318 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    PRINTLN         reduce using rule 318 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    PRINT           reduce using rule 318 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    READLINE        reduce using rule 318 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    WHILE           reduce using rule 318 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    FOR             reduce using rule 318 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    IF              reduce using rule 318 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    INT             reduce using rule 318 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    DOUBLE          reduce using rule 318 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    LONG            reduce using rule 318 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    FLOAT           reduce using rule 318 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    STRING          reduce using rule 318 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    CHAR            reduce using rule 318 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    DEF             reduce using rule 318 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    $end            reduce using rule 318 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    LLAVE_D         reduce using rule 318 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    RETURN          reduce using rule 318 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    CASE            reduce using rule 318 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)


state 869

    (319) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .

    VAR             reduce using rule 319 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    VAL             reduce using rule 319 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    VARIABLE        reduce using rule 319 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    PRINTLN         reduce using rule 319 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    PRINT           reduce using rule 319 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    READLINE        reduce using rule 319 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    WHILE           reduce using rule 319 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    FOR             reduce using rule 319 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    IF              reduce using rule 319 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    INT             reduce using rule 319 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    DOUBLE          reduce using rule 319 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    LONG            reduce using rule 319 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    FLOAT           reduce using rule 319 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    STRING          reduce using rule 319 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    CHAR            reduce using rule 319 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    DEF             reduce using rule 319 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    $end            reduce using rule 319 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    LLAVE_D         reduce using rule 319 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    RETURN          reduce using rule 319 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    CASE            reduce using rule 319 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)


state 870

    (312) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .

    VAR             reduce using rule 312 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    VAL             reduce using rule 312 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    VARIABLE        reduce using rule 312 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    PRINTLN         reduce using rule 312 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    PRINT           reduce using rule 312 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    READLINE        reduce using rule 312 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    WHILE           reduce using rule 312 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    FOR             reduce using rule 312 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    IF              reduce using rule 312 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    INT             reduce using rule 312 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    DOUBLE          reduce using rule 312 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    LONG            reduce using rule 312 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    FLOAT           reduce using rule 312 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    STRING          reduce using rule 312 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    CHAR            reduce using rule 312 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    DEF             reduce using rule 312 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    $end            reduce using rule 312 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    LLAVE_D         reduce using rule 312 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    RETURN          reduce using rule 312 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    CASE            reduce using rule 312 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)


state 871

    (313) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .

    VAR             reduce using rule 313 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    VAL             reduce using rule 313 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    VARIABLE        reduce using rule 313 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    PRINTLN         reduce using rule 313 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    PRINT           reduce using rule 313 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    READLINE        reduce using rule 313 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    WHILE           reduce using rule 313 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    FOR             reduce using rule 313 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    IF              reduce using rule 313 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    INT             reduce using rule 313 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    DOUBLE          reduce using rule 313 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    LONG            reduce using rule 313 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    FLOAT           reduce using rule 313 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    STRING          reduce using rule 313 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    CHAR            reduce using rule 313 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    DEF             reduce using rule 313 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    $end            reduce using rule 313 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    LLAVE_D         reduce using rule 313 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    RETURN          reduce using rule 313 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    CASE            reduce using rule 313 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)


state 872

    (314) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .

    VAR             reduce using rule 314 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    VAL             reduce using rule 314 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    VARIABLE        reduce using rule 314 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    PRINTLN         reduce using rule 314 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    PRINT           reduce using rule 314 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    READLINE        reduce using rule 314 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    WHILE           reduce using rule 314 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    FOR             reduce using rule 314 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    IF              reduce using rule 314 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    INT             reduce using rule 314 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    DOUBLE          reduce using rule 314 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    LONG            reduce using rule 314 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    FLOAT           reduce using rule 314 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    STRING          reduce using rule 314 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    CHAR            reduce using rule 314 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    DEF             reduce using rule 314 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    $end            reduce using rule 314 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    LLAVE_D         reduce using rule 314 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    RETURN          reduce using rule 314 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    CASE            reduce using rule 314 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)


state 873

    (315) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .

    VAR             reduce using rule 315 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    VAL             reduce using rule 315 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    VARIABLE        reduce using rule 315 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    PRINTLN         reduce using rule 315 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    PRINT           reduce using rule 315 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    READLINE        reduce using rule 315 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    WHILE           reduce using rule 315 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    FOR             reduce using rule 315 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    IF              reduce using rule 315 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    INT             reduce using rule 315 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    DOUBLE          reduce using rule 315 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    LONG            reduce using rule 315 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    FLOAT           reduce using rule 315 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    STRING          reduce using rule 315 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    CHAR            reduce using rule 315 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    DEF             reduce using rule 315 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    $end            reduce using rule 315 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    LLAVE_D         reduce using rule 315 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    RETURN          reduce using rule 315 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    CASE            reduce using rule 315 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)


state 874

    (155) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I . INT PAR_D

    INT             shift and go to state 876


state 875

    (153) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT . PAR_D

    PAR_D           shift and go to state 877


state 876

    (155) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT . PAR_D

    PAR_D           shift and go to state 878


state 877

    (153) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .

    VAR             reduce using rule 153 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAL             reduce using rule 153 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VARIABLE        reduce using rule 153 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINTLN         reduce using rule 153 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINT           reduce using rule 153 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    READLINE        reduce using rule 153 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    WHILE           reduce using rule 153 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FOR             reduce using rule 153 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    IF              reduce using rule 153 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    INT             reduce using rule 153 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    DOUBLE          reduce using rule 153 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LONG            reduce using rule 153 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FLOAT           reduce using rule 153 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    STRING          reduce using rule 153 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    CHAR            reduce using rule 153 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    DEF             reduce using rule 153 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    $end            reduce using rule 153 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LLAVE_D         reduce using rule 153 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    RETURN          reduce using rule 153 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    CASE            reduce using rule 153 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)


state 878

    (155) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .

    VAR             reduce using rule 155 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAL             reduce using rule 155 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VARIABLE        reduce using rule 155 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINTLN         reduce using rule 155 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINT           reduce using rule 155 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    READLINE        reduce using rule 155 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    WHILE           reduce using rule 155 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FOR             reduce using rule 155 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    IF              reduce using rule 155 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    INT             reduce using rule 155 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    DOUBLE          reduce using rule 155 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LONG            reduce using rule 155 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FLOAT           reduce using rule 155 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    STRING          reduce using rule 155 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    CHAR            reduce using rule 155 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    DEF             reduce using rule 155 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    $end            reduce using rule 155 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LLAVE_D         reduce using rule 155 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    RETURN          reduce using rule 155 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    CASE            reduce using rule 155 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 9 resolved as shift
WARNING: shift/reduce conflict for VAL in state 9 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 9 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 9 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 9 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 9 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 9 resolved as shift
WARNING: shift/reduce conflict for FOR in state 9 resolved as shift
WARNING: shift/reduce conflict for IF in state 9 resolved as shift
WARNING: shift/reduce conflict for INT in state 9 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 9 resolved as shift
WARNING: shift/reduce conflict for LONG in state 9 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 9 resolved as shift
WARNING: shift/reduce conflict for STRING in state 9 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 9 resolved as shift
WARNING: shift/reduce conflict for VAR in state 10 resolved as shift
WARNING: shift/reduce conflict for VAL in state 10 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 10 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 10 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 10 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 10 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 10 resolved as shift
WARNING: shift/reduce conflict for FOR in state 10 resolved as shift
WARNING: shift/reduce conflict for IF in state 10 resolved as shift
WARNING: shift/reduce conflict for INT in state 10 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 10 resolved as shift
WARNING: shift/reduce conflict for LONG in state 10 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 10 resolved as shift
WARNING: shift/reduce conflict for STRING in state 10 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 10 resolved as shift
WARNING: shift/reduce conflict for VAR in state 11 resolved as shift
WARNING: shift/reduce conflict for VAL in state 11 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 11 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 11 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 11 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 11 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 11 resolved as shift
WARNING: shift/reduce conflict for FOR in state 11 resolved as shift
WARNING: shift/reduce conflict for IF in state 11 resolved as shift
WARNING: shift/reduce conflict for INT in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 11 resolved as shift
WARNING: shift/reduce conflict for LONG in state 11 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 11 resolved as shift
WARNING: shift/reduce conflict for STRING in state 11 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 11 resolved as shift
WARNING: shift/reduce conflict for VAR in state 12 resolved as shift
WARNING: shift/reduce conflict for VAL in state 12 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 12 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 12 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 12 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 12 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 12 resolved as shift
WARNING: shift/reduce conflict for FOR in state 12 resolved as shift
WARNING: shift/reduce conflict for IF in state 12 resolved as shift
WARNING: shift/reduce conflict for INT in state 12 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 12 resolved as shift
WARNING: shift/reduce conflict for LONG in state 12 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 12 resolved as shift
WARNING: shift/reduce conflict for STRING in state 12 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 12 resolved as shift
WARNING: shift/reduce conflict for VAR in state 13 resolved as shift
WARNING: shift/reduce conflict for VAL in state 13 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 13 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 13 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 13 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 13 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 13 resolved as shift
WARNING: shift/reduce conflict for FOR in state 13 resolved as shift
WARNING: shift/reduce conflict for IF in state 13 resolved as shift
WARNING: shift/reduce conflict for INT in state 13 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 13 resolved as shift
WARNING: shift/reduce conflict for LONG in state 13 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 13 resolved as shift
WARNING: shift/reduce conflict for STRING in state 13 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 13 resolved as shift
WARNING: shift/reduce conflict for VAR in state 14 resolved as shift
WARNING: shift/reduce conflict for VAL in state 14 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 14 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 14 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 14 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 14 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 14 resolved as shift
WARNING: shift/reduce conflict for FOR in state 14 resolved as shift
WARNING: shift/reduce conflict for IF in state 14 resolved as shift
WARNING: shift/reduce conflict for INT in state 14 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 14 resolved as shift
WARNING: shift/reduce conflict for LONG in state 14 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 14 resolved as shift
WARNING: shift/reduce conflict for STRING in state 14 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 14 resolved as shift
WARNING: shift/reduce conflict for VAR in state 15 resolved as shift
WARNING: shift/reduce conflict for VAL in state 15 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 15 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 15 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 15 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 15 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 15 resolved as shift
WARNING: shift/reduce conflict for FOR in state 15 resolved as shift
WARNING: shift/reduce conflict for IF in state 15 resolved as shift
WARNING: shift/reduce conflict for INT in state 15 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 15 resolved as shift
WARNING: shift/reduce conflict for LONG in state 15 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 15 resolved as shift
WARNING: shift/reduce conflict for STRING in state 15 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 15 resolved as shift
WARNING: shift/reduce conflict for VAR in state 16 resolved as shift
WARNING: shift/reduce conflict for VAL in state 16 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 16 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 16 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 16 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 16 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 16 resolved as shift
WARNING: shift/reduce conflict for FOR in state 16 resolved as shift
WARNING: shift/reduce conflict for IF in state 16 resolved as shift
WARNING: shift/reduce conflict for INT in state 16 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 16 resolved as shift
WARNING: shift/reduce conflict for LONG in state 16 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 16 resolved as shift
WARNING: shift/reduce conflict for STRING in state 16 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 16 resolved as shift
WARNING: shift/reduce conflict for VAR in state 17 resolved as shift
WARNING: shift/reduce conflict for VAL in state 17 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 17 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 17 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 17 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 17 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 17 resolved as shift
WARNING: shift/reduce conflict for FOR in state 17 resolved as shift
WARNING: shift/reduce conflict for IF in state 17 resolved as shift
WARNING: shift/reduce conflict for INT in state 17 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 17 resolved as shift
WARNING: shift/reduce conflict for LONG in state 17 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 17 resolved as shift
WARNING: shift/reduce conflict for STRING in state 17 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 17 resolved as shift
WARNING: shift/reduce conflict for VAR in state 18 resolved as shift
WARNING: shift/reduce conflict for VAL in state 18 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 18 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 18 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 18 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 18 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 18 resolved as shift
WARNING: shift/reduce conflict for FOR in state 18 resolved as shift
WARNING: shift/reduce conflict for IF in state 18 resolved as shift
WARNING: shift/reduce conflict for INT in state 18 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 18 resolved as shift
WARNING: shift/reduce conflict for LONG in state 18 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 18 resolved as shift
WARNING: shift/reduce conflict for STRING in state 18 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 18 resolved as shift
WARNING: shift/reduce conflict for VAR in state 19 resolved as shift
WARNING: shift/reduce conflict for VAL in state 19 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 19 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 19 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 19 resolved as shift
WARNING: shift/reduce conflict for READLINE in state 19 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 19 resolved as shift
WARNING: shift/reduce conflict for FOR in state 19 resolved as shift
WARNING: shift/reduce conflict for IF in state 19 resolved as shift
WARNING: shift/reduce conflict for INT in state 19 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 19 resolved as shift
WARNING: shift/reduce conflict for LONG in state 19 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 19 resolved as shift
WARNING: shift/reduce conflict for STRING in state 19 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 19 resolved as shift
WARNING: shift/reduce conflict for MAS in state 31 resolved as shift
WARNING: shift/reduce conflict for MAS in state 40 resolved as shift
WARNING: shift/reduce conflict for MAS in state 41 resolved as shift
WARNING: shift/reduce conflict for MAS in state 42 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 84 resolved as shift
WARNING: shift/reduce conflict for PAR_D in state 122 resolved as shift
WARNING: shift/reduce conflict for MAS in state 174 resolved as shift
WARNING: shift/reduce conflict for MAS in state 175 resolved as shift
WARNING: shift/reduce conflict for MAS in state 176 resolved as shift
WARNING: shift/reduce conflict for MAS in state 177 resolved as shift
WARNING: shift/reduce conflict for MAS in state 245 resolved as shift
WARNING: shift/reduce conflict for MAS in state 246 resolved as shift
WARNING: shift/reduce conflict for MAS in state 247 resolved as shift
WARNING: shift/reduce conflict for MAS in state 248 resolved as shift
WARNING: shift/reduce conflict for PAR_D in state 312 resolved as shift
WARNING: shift/reduce conflict for PAR_D in state 313 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_D in state 498 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_D in state 499 resolved as shift
WARNING: shift/reduce conflict for LLAVE_D in state 622 resolved as shift
WARNING: shift/reduce conflict for LLAVE_D in state 668 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 680 resolved as shift
WARNING: reduce/reduce conflict in state 235 resolved using rule (asignacionLong -> VAR VARIABLE IGUAL longvalues)
WARNING: rejected rule (floatvalues -> longvalues) in state 235
WARNING: reduce/reduce conflict in state 236 resolved using rule (asignacionInt -> VAR VARIABLE IGUAL intvalues)
WARNING: rejected rule (longvalues -> intvalues) in state 236
WARNING: reduce/reduce conflict in state 237 resolved using rule (asignacionFloat -> VAR VARIABLE IGUAL floatvalues)
WARNING: rejected rule (doublevalues -> floatvalues) in state 237
WARNING: reduce/reduce conflict in state 268 resolved using rule (asignacionLong -> VAL VARIABLE IGUAL longvalues)
WARNING: rejected rule (floatvalues -> longvalues) in state 268
WARNING: reduce/reduce conflict in state 269 resolved using rule (asignacionInt -> VAL VARIABLE IGUAL intvalues)
WARNING: rejected rule (longvalues -> intvalues) in state 269
WARNING: reduce/reduce conflict in state 270 resolved using rule (asignacionFloat -> VAL VARIABLE IGUAL floatvalues)
WARNING: rejected rule (doublevalues -> floatvalues) in state 270

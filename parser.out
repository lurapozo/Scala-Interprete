Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ARROBA
    BACKTICK
    CASE
    CATCH
    CLASS
    DO
    EXTENDS
    FINAL
    FINALLY
    FOR_SOME
    FUNCION_FLECHA
    HASHTAG
    IMPLICIT
    IMPORT
    LAZY
    LIBRERIA_IO
    MACRO
    MATCH
    MAYOR_IGUAL
    MENOR_IGUAL
    NEW
    NULL
    OBJECT
    OVERRIDE
    PACKAGE
    PRIVATE
    PROTECTED
    PUNTO
    REVERSE
    SEALED
    SUBGUION
    SUPER
    THIS
    THROW
    TO_DOUBLE
    TO_FLOAT
    TO_INT
    TO_LONG
    TRAIT
    TRY
    TYPE
    WITH
    YIELD

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> funcion
Rule 2     cuerpo -> asignacion
Rule 3     cuerpo -> while
Rule 4     cuerpo -> for
Rule 5     cuerpo -> if
Rule 6     cuerpo -> funcion cuerpo
Rule 7     cuerpo -> asignacion cuerpo
Rule 8     cuerpo -> while cuerpo
Rule 9     cuerpo -> for cuerpo
Rule 10    cuerpo -> if cuerpo
Rule 11    contenido -> asignacion
Rule 12    contenido -> impresion
Rule 13    contenido -> entrada
Rule 14    contenido -> while
Rule 15    contenido -> for
Rule 16    contenido -> if
Rule 17    contenido -> aritmetica
Rule 18    contenido -> asignacion contenido
Rule 19    contenido -> impresion contenido
Rule 20    contenido -> entrada contenido
Rule 21    contenido -> while contenido
Rule 22    contenido -> for contenido
Rule 23    contenido -> if contenido
Rule 24    contenido -> aritmetica contenido
Rule 25    asignacion -> VAR VARIABLE IGUAL VARIABLE
Rule 26    asignacion -> VAL VARIABLE IGUAL VARIABLE
Rule 27    asignacion -> VAR VARIABLE IGUAL aritmetica
Rule 28    asignacion -> VAL VARIABLE IGUAL aritmetica
Rule 29    asignacion -> asignacionLong
Rule 30    asignacion -> asignacionInt
Rule 31    asignacion -> asignacionFloat
Rule 32    asignacion -> asignacionDouble
Rule 33    asignacion -> asignacionString
Rule 34    asignacion -> asignacionChar
Rule 35    asignacion -> asignacionBoolean
Rule 36    asignacion -> array
Rule 37    asignacion -> list
Rule 38    asignacionLong -> VAR VARIABLE IGUAL LONG
Rule 39    asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
Rule 40    asignacionLong -> VAL VARIABLE IGUAL LONG
Rule 41    asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
Rule 42    asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
Rule 43    asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
Rule 44    asignacionInt -> VAR VARIABLE IGUAL INT
Rule 45    asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
Rule 46    asignacionInt -> VAL VARIABLE IGUAL INT
Rule 47    asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
Rule 48    asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
Rule 49    asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
Rule 50    asignacionFloat -> VAR VARIABLE IGUAL FLOAT
Rule 51    asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
Rule 52    asignacionFloat -> VAL VARIABLE IGUAL FLOAT
Rule 53    asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
Rule 54    asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
Rule 55    asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
Rule 56    asignacionDouble -> VAR VARIABLE IGUAL DOUBLE
Rule 57    asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
Rule 58    asignacionDouble -> VAL VARIABLE IGUAL DOUBLE
Rule 59    asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
Rule 60    asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
Rule 61    asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
Rule 62    asignacionString -> VAR VARIABLE IGUAL STRING
Rule 63    asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
Rule 64    asignacionString -> VAL VARIABLE IGUAL STRING
Rule 65    asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
Rule 66    asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
Rule 67    asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
Rule 68    asignacionChar -> VAR VARIABLE IGUAL CHAR
Rule 69    asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
Rule 70    asignacionChar -> VAL VARIABLE IGUAL CHAR
Rule 71    asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
Rule 72    asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
Rule 73    asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
Rule 74    asignacionBoolean -> VAR VARIABLE IGUAL booleanos
Rule 75    asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
Rule 76    asignacionBoolean -> VAL VARIABLE IGUAL booleanos
Rule 77    asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
Rule 78    asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
Rule 79    asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
Rule 80    tipo -> CHARCLASS
Rule 81    tipo -> STRINGCLASS
Rule 82    tipo -> BOOLCLASS
Rule 83    tipo -> INTCLASS
Rule 84    tipo -> LONGCLASS
Rule 85    tipo -> DOUBLECLASS
Rule 86    tipo -> FLOATCLASS
Rule 87    valor -> STRING
Rule 88    valor -> CHAR
Rule 89    valor -> VARIABLE
Rule 90    valor -> numeros
Rule 91    valor -> booleanos
Rule 92    booleanos -> TRUE
Rule 93    booleanos -> FLASE
Rule 94    numeros -> INT
Rule 95    numeros -> LONG
Rule 96    numeros -> FLOAT
Rule 97    numeros -> DOUBLE
Rule 98    funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
Rule 99    declaracion -> VARIABLE DOBLE_PUNTO tipo
Rule 100   declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor
Rule 101   parametro -> parametros
Rule 102   parametro -> PAR_I PAR_D
Rule 103   parametros -> PAR_I declaracion PAR_D
Rule 104   parametros -> PAR_I declaracion PAR_D parametros
Rule 105   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
Rule 106   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D
Rule 107   dectipo -> DOBLE_PUNTO tipo
Rule 108   dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D
Rule 109   tipos -> tipo
Rule 110   tipos -> tipo tiposentry
Rule 111   tiposentry -> COMA tipo
Rule 112   tiposentry -> COMA tipo tiposentry
Rule 113   impresion -> PRINTLN PAR_I valorI PAR_D
Rule 114   impresion -> PRINT PAR_I valorI PAR_D
Rule 115   valorI -> valor MAS valorI
Rule 116   valorI -> valor
Rule 117   entrada -> READLINE PAR_I PAR_D
Rule 118   array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 119   array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 120   array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
Rule 121   list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
Rule 122   list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
Rule 123   valores -> valor
Rule 124   valores -> valor COMA valores
Rule 125   while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 126   for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
Rule 127   for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
Rule 128   for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
Rule 129   for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
Rule 130   for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
Rule 131   for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
Rule 132   if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 133   if -> if elseif
Rule 134   if -> if else
Rule 135   elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 136   else -> ELSE LLAVE_I contenido LLAVE_D
Rule 137   else -> elseif else
Rule 138   condicional -> valorC logicos condicional
Rule 139   condicional -> valorC
Rule 140   valorC -> VARIABLE
Rule 141   valorC -> booleanos
Rule 142   valorC -> relacional
Rule 143   valorC -> NOT VARIABLE
Rule 144   valorC -> NOT booleanos
Rule 145   valorC -> NOT relacional
Rule 146   logicos -> AND
Rule 147   logicos -> OR
Rule 148   logicos -> NOT
Rule 149   relacional -> numeros comparacion numeros
Rule 150   relacional -> aritmetica comparacion aritmetica
Rule 151   relacional -> aritmetica comparacion numeros
Rule 152   relacional -> numeros comparacion aritmetica
Rule 153   relacional -> booleanos comparacion booleanos
Rule 154   relacional -> STRING comparacion STRING
Rule 155   relacional -> CHAR comparacion CHAR
Rule 156   relacional -> VARIABLE comparacion numeros
Rule 157   relacional -> numeros comparacion VARIABLE
Rule 158   relacional -> VARIABLE comparacion booleanos
Rule 159   relacional -> booleanos comparacion VARIABLE
Rule 160   relacional -> VARIABLE comparacion STRING
Rule 161   relacional -> STRING comparacion VARIABLE
Rule 162   relacional -> VARIABLE comparacion CHAR
Rule 163   relacional -> CHAR comparacion VARIABLE
Rule 164   relacional -> VARIABLE comparacion VARIABLE
Rule 165   comparacion -> IGUAL_COMPARACION
Rule 166   comparacion -> DIFERENTE
Rule 167   comparacion -> MAYOR
Rule 168   comparacion -> MENOR
Rule 169   aritmetica -> numeros aritmeticos numeros
Rule 170   aritmetica -> VARIABLE aritmeticos numeros
Rule 171   aritmetica -> numeros aritmeticos VARIABLE
Rule 172   aritmetica -> VARIABLE aritmeticos VARIABLE
Rule 173   aritmetica -> aritmetica aritmeticos numeros
Rule 174   aritmetica -> aritmetica aritmeticos VARIABLE
Rule 175   aritmeticos -> MENOS
Rule 176   aritmeticos -> MAS
Rule 177   aritmeticos -> MULTIPLICACION
Rule 178   aritmeticos -> DIVISION
Rule 179   aritmeticos -> MOD

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 146
ARRAYCLASS           : 118 119 119 120 120
ARROBA               : 
BACKTICK             : 
BOOLCLASS            : 75 77 78 79 82
CASE                 : 
CATCH                : 
CHAR                 : 68 69 70 71 88 155 155 162 163
CHARCLASS            : 69 71 72 73 80
CLASS                : 
COMA                 : 111 112 124
CORCHETE_D           : 119 120 120 122
CORCHETE_I           : 119 120 120 122
DEF                  : 98 105 106
DIFERENTE            : 166
DIVISION             : 178
DO                   : 
DOBLE_PUNTO          : 39 41 42 43 45 47 48 49 51 53 54 55 57 59 60 61 63 65 66 67 69 71 72 73 75 77 78 79 99 100 107 108 119 120 122
DOUBLE               : 56 57 58 59 97
DOUBLECLASS          : 57 59 60 61 85
ELSE                 : 135 136
EXTENDS              : 
FINAL                : 
FINALLY              : 
FLASE                : 93
FLOAT                : 50 51 52 53 96
FLOATCLASS           : 51 53 54 55 86
FOR                  : 126 127 128 129 130 131
FOR_SOME             : 
FUNCION_FLECHA       : 
HASHTAG              : 
IF                   : 132 135
IGUAL                : 25 26 27 28 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 98 100 105 106 118 119 120 121 122
IGUAL_COMPARACION    : 165
IMPLICIT             : 
IMPORT               : 
INT                  : 44 45 46 47 94 120 128 128 129 129 130 130 131 131
INTCLASS             : 45 47 48 49 83
ITERATOR             : 126 127 128 129 130 131
LAZY                 : 
LIBRERIA_IO          : 
LISTCLASS            : 121 122 122
LLAVE_D              : 98 105 106 125 126 127 128 129 130 131 132 135 136
LLAVE_I              : 98 105 106 125 126 127 128 129 130 131 132 135 136
LONG                 : 38 39 40 41 95
LONGCLASS            : 39 41 42 43 84
MACRO                : 
MAS                  : 115 176
MATCH                : 
MAYOR                : 167
MAYOR_IGUAL          : 
MENOR                : 168
MENOR_IGUAL          : 
MENOS                : 175
MOD                  : 179
MULTIPLICACION       : 177
NEW                  : 
NOT                  : 143 144 145 148
NULL                 : 
OBJECT               : 
OR                   : 147
OVERRIDE             : 
PACKAGE              : 
PAR_D                : 102 103 104 108 113 114 117 118 119 120 121 122 125 126 127 128 129 130 131 132 135
PAR_I                : 102 103 104 108 113 114 117 118 119 120 121 122 125 126 127 128 129 130 131 132 135
PRINT                : 114
PRINTLN              : 113
PRIVATE              : 
PROTECTED            : 
PUNTO                : 
READLINE             : 117
RETURN               : 105 106
REVERSE              : 
SEALED               : 
STRING               : 62 63 64 65 87 154 154 160 161
STRINGCLASS          : 63 65 66 67 81
SUBGUION             : 
SUPER                : 
THIS                 : 
THROW                : 
TO                   : 128 130
TO_DOUBLE            : 
TO_FLOAT             : 
TO_INT               : 
TO_LONG              : 
TRAIT                : 
TRUE                 : 92
TRY                  : 
TYPE                 : 
UNTIL                : 129 131
VAL                  : 26 28 40 41 43 46 47 49 52 53 55 58 59 61 64 65 67 70 71 73 76 77 79 121 122
VAR                  : 25 27 38 39 42 44 45 48 50 51 54 56 57 60 62 63 66 68 69 72 74 75 78 118 119 120 126 130 131
VARIABLE             : 25 25 26 26 27 28 38 39 40 41 42 42 43 43 44 45 46 47 48 48 49 49 50 51 52 53 54 54 55 55 56 57 58 59 60 60 61 61 62 63 64 65 66 66 67 67 68 69 70 71 72 72 73 73 74 75 76 77 78 78 79 79 89 98 99 100 105 106 118 119 120 121 122 126 126 127 127 128 129 130 131 140 143 156 157 158 159 160 161 162 163 164 164 170 171 172 172 174
WHILE                : 125
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

aritmetica           : 17 24 27 28 150 150 151 152 173 174
aritmeticos          : 169 170 171 172 173 174
array                : 36
asignacion           : 2 7 11 18
asignacionBoolean    : 35
asignacionChar       : 34
asignacionDouble     : 32
asignacionFloat      : 31
asignacionInt        : 30
asignacionLong       : 29
asignacionString     : 33
booleanos            : 74 75 76 77 91 141 144 153 153 158 159
comparacion          : 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164
condicional          : 125 132 135 138
contenido            : 18 19 20 21 22 23 24 98 105 106 125 126 127 128 129 130 131 132 135 136
cuerpo               : 6 7 8 9 10 0
declaracion          : 103 104
dectipo              : 105
dectipoTupla         : 106
else                 : 134 137
elseif               : 133 137
entrada              : 13 20
for                  : 4 9 15 22
funcion              : 1 6
if                   : 5 10 16 23 133 134
impresion            : 12 19
list                 : 37
logicos              : 138
numeros              : 90 149 149 151 152 156 157 169 169 170 171 173
parametro            : 98 105 106
parametros           : 101 104
relacional           : 142 145
tipo                 : 99 100 107 109 110 111 112 119 120 120 122
tipos                : 108
tiposentry           : 110 112
valor                : 100 105 106 115 116 123 124
valorC               : 138 139
valorI               : 113 114 115
valores              : 118 119 121 122 124
while                : 3 8 14 21

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . while
    (4) cuerpo -> . for
    (5) cuerpo -> . if
    (6) cuerpo -> . funcion cuerpo
    (7) cuerpo -> . asignacion cuerpo
    (8) cuerpo -> . while cuerpo
    (9) cuerpo -> . for cuerpo
    (10) cuerpo -> . if cuerpo
    (98) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (105) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (106) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    DEF             shift and go to state 7
    VAR             shift and go to state 8
    VAL             shift and go to state 9
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21

    cuerpo                         shift and go to state 1
    funcion                        shift and go to state 2
    asignacion                     shift and go to state 3
    while                          shift and go to state 4
    for                            shift and go to state 5
    if                             shift and go to state 6
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> funcion .
    (6) cuerpo -> funcion . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . while
    (4) cuerpo -> . for
    (5) cuerpo -> . if
    (6) cuerpo -> . funcion cuerpo
    (7) cuerpo -> . asignacion cuerpo
    (8) cuerpo -> . while cuerpo
    (9) cuerpo -> . for cuerpo
    (10) cuerpo -> . if cuerpo
    (98) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (105) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (106) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 1 (cuerpo -> funcion .)
    DEF             shift and go to state 7
    VAR             shift and go to state 8
    VAL             shift and go to state 9
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21

    funcion                        shift and go to state 2
    cuerpo                         shift and go to state 22
    asignacion                     shift and go to state 3
    while                          shift and go to state 4
    for                            shift and go to state 5
    if                             shift and go to state 6
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18

state 3

    (2) cuerpo -> asignacion .
    (7) cuerpo -> asignacion . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . while
    (4) cuerpo -> . for
    (5) cuerpo -> . if
    (6) cuerpo -> . funcion cuerpo
    (7) cuerpo -> . asignacion cuerpo
    (8) cuerpo -> . while cuerpo
    (9) cuerpo -> . for cuerpo
    (10) cuerpo -> . if cuerpo
    (98) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (105) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (106) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 2 (cuerpo -> asignacion .)
    DEF             shift and go to state 7
    VAR             shift and go to state 8
    VAL             shift and go to state 9
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21

    asignacion                     shift and go to state 3
    cuerpo                         shift and go to state 23
    funcion                        shift and go to state 2
    while                          shift and go to state 4
    for                            shift and go to state 5
    if                             shift and go to state 6
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18

state 4

    (3) cuerpo -> while .
    (8) cuerpo -> while . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . while
    (4) cuerpo -> . for
    (5) cuerpo -> . if
    (6) cuerpo -> . funcion cuerpo
    (7) cuerpo -> . asignacion cuerpo
    (8) cuerpo -> . while cuerpo
    (9) cuerpo -> . for cuerpo
    (10) cuerpo -> . if cuerpo
    (98) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (105) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (106) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 3 (cuerpo -> while .)
    DEF             shift and go to state 7
    VAR             shift and go to state 8
    VAL             shift and go to state 9
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21

    while                          shift and go to state 4
    cuerpo                         shift and go to state 24
    funcion                        shift and go to state 2
    asignacion                     shift and go to state 3
    for                            shift and go to state 5
    if                             shift and go to state 6
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18

state 5

    (4) cuerpo -> for .
    (9) cuerpo -> for . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . while
    (4) cuerpo -> . for
    (5) cuerpo -> . if
    (6) cuerpo -> . funcion cuerpo
    (7) cuerpo -> . asignacion cuerpo
    (8) cuerpo -> . while cuerpo
    (9) cuerpo -> . for cuerpo
    (10) cuerpo -> . if cuerpo
    (98) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (105) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (106) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 4 (cuerpo -> for .)
    DEF             shift and go to state 7
    VAR             shift and go to state 8
    VAL             shift and go to state 9
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21

    for                            shift and go to state 5
    cuerpo                         shift and go to state 25
    funcion                        shift and go to state 2
    asignacion                     shift and go to state 3
    while                          shift and go to state 4
    if                             shift and go to state 6
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18

state 6

    (5) cuerpo -> if .
    (10) cuerpo -> if . cuerpo
    (133) if -> if . elseif
    (134) if -> if . else
    (1) cuerpo -> . funcion
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . while
    (4) cuerpo -> . for
    (5) cuerpo -> . if
    (6) cuerpo -> . funcion cuerpo
    (7) cuerpo -> . asignacion cuerpo
    (8) cuerpo -> . while cuerpo
    (9) cuerpo -> . for cuerpo
    (10) cuerpo -> . if cuerpo
    (135) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (136) else -> . ELSE LLAVE_I contenido LLAVE_D
    (137) else -> . elseif else
    (98) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (105) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (106) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 5 (cuerpo -> if .)
    ELSE            shift and go to state 29
    DEF             shift and go to state 7
    VAR             shift and go to state 8
    VAL             shift and go to state 9
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21

    if                             shift and go to state 6
    cuerpo                         shift and go to state 26
    elseif                         shift and go to state 27
    else                           shift and go to state 28
    funcion                        shift and go to state 2
    asignacion                     shift and go to state 3
    while                          shift and go to state 4
    for                            shift and go to state 5
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18

state 7

    (98) funcion -> DEF . VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (105) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (106) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D

    VARIABLE        shift and go to state 30


state 8

    (25) asignacion -> VAR . VARIABLE IGUAL VARIABLE
    (27) asignacion -> VAR . VARIABLE IGUAL aritmetica
    (38) asignacionLong -> VAR . VARIABLE IGUAL LONG
    (39) asignacionLong -> VAR . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> VAR . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> VAR . VARIABLE IGUAL INT
    (45) asignacionInt -> VAR . VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> VAR . VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> VAR . VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> VAR . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> VAR . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> VAR . VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> VAR . VARIABLE IGUAL STRING
    (63) asignacionString -> VAR . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> VAR . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> VAR . VARIABLE IGUAL CHAR
    (69) asignacionChar -> VAR . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> VAR . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> VAR . VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> VAR . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> VAR . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> VAR . VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    VARIABLE        shift and go to state 31


state 9

    (26) asignacion -> VAL . VARIABLE IGUAL VARIABLE
    (28) asignacion -> VAL . VARIABLE IGUAL aritmetica
    (40) asignacionLong -> VAL . VARIABLE IGUAL LONG
    (41) asignacionLong -> VAL . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (43) asignacionLong -> VAL . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (46) asignacionInt -> VAL . VARIABLE IGUAL INT
    (47) asignacionInt -> VAL . VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (49) asignacionInt -> VAL . VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (52) asignacionFloat -> VAL . VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> VAL . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (55) asignacionFloat -> VAL . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (58) asignacionDouble -> VAL . VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (61) asignacionDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (64) asignacionString -> VAL . VARIABLE IGUAL STRING
    (65) asignacionString -> VAL . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (67) asignacionString -> VAL . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (70) asignacionChar -> VAL . VARIABLE IGUAL CHAR
    (71) asignacionChar -> VAL . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (73) asignacionChar -> VAL . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (76) asignacionBoolean -> VAL . VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> VAL . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (79) asignacionBoolean -> VAL . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (121) list -> VAL . VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> VAL . VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    VARIABLE        shift and go to state 32


state 10

    (29) asignacion -> asignacionLong .

    DEF             reduce using rule 29 (asignacion -> asignacionLong .)
    VAR             reduce using rule 29 (asignacion -> asignacionLong .)
    VAL             reduce using rule 29 (asignacion -> asignacionLong .)
    WHILE           reduce using rule 29 (asignacion -> asignacionLong .)
    FOR             reduce using rule 29 (asignacion -> asignacionLong .)
    IF              reduce using rule 29 (asignacion -> asignacionLong .)
    $end            reduce using rule 29 (asignacion -> asignacionLong .)
    PRINTLN         reduce using rule 29 (asignacion -> asignacionLong .)
    PRINT           reduce using rule 29 (asignacion -> asignacionLong .)
    READLINE        reduce using rule 29 (asignacion -> asignacionLong .)
    VARIABLE        reduce using rule 29 (asignacion -> asignacionLong .)
    INT             reduce using rule 29 (asignacion -> asignacionLong .)
    LONG            reduce using rule 29 (asignacion -> asignacionLong .)
    FLOAT           reduce using rule 29 (asignacion -> asignacionLong .)
    DOUBLE          reduce using rule 29 (asignacion -> asignacionLong .)
    LLAVE_D         reduce using rule 29 (asignacion -> asignacionLong .)
    RETURN          reduce using rule 29 (asignacion -> asignacionLong .)


state 11

    (30) asignacion -> asignacionInt .

    DEF             reduce using rule 30 (asignacion -> asignacionInt .)
    VAR             reduce using rule 30 (asignacion -> asignacionInt .)
    VAL             reduce using rule 30 (asignacion -> asignacionInt .)
    WHILE           reduce using rule 30 (asignacion -> asignacionInt .)
    FOR             reduce using rule 30 (asignacion -> asignacionInt .)
    IF              reduce using rule 30 (asignacion -> asignacionInt .)
    $end            reduce using rule 30 (asignacion -> asignacionInt .)
    PRINTLN         reduce using rule 30 (asignacion -> asignacionInt .)
    PRINT           reduce using rule 30 (asignacion -> asignacionInt .)
    READLINE        reduce using rule 30 (asignacion -> asignacionInt .)
    VARIABLE        reduce using rule 30 (asignacion -> asignacionInt .)
    INT             reduce using rule 30 (asignacion -> asignacionInt .)
    LONG            reduce using rule 30 (asignacion -> asignacionInt .)
    FLOAT           reduce using rule 30 (asignacion -> asignacionInt .)
    DOUBLE          reduce using rule 30 (asignacion -> asignacionInt .)
    LLAVE_D         reduce using rule 30 (asignacion -> asignacionInt .)
    RETURN          reduce using rule 30 (asignacion -> asignacionInt .)


state 12

    (31) asignacion -> asignacionFloat .

    DEF             reduce using rule 31 (asignacion -> asignacionFloat .)
    VAR             reduce using rule 31 (asignacion -> asignacionFloat .)
    VAL             reduce using rule 31 (asignacion -> asignacionFloat .)
    WHILE           reduce using rule 31 (asignacion -> asignacionFloat .)
    FOR             reduce using rule 31 (asignacion -> asignacionFloat .)
    IF              reduce using rule 31 (asignacion -> asignacionFloat .)
    $end            reduce using rule 31 (asignacion -> asignacionFloat .)
    PRINTLN         reduce using rule 31 (asignacion -> asignacionFloat .)
    PRINT           reduce using rule 31 (asignacion -> asignacionFloat .)
    READLINE        reduce using rule 31 (asignacion -> asignacionFloat .)
    VARIABLE        reduce using rule 31 (asignacion -> asignacionFloat .)
    INT             reduce using rule 31 (asignacion -> asignacionFloat .)
    LONG            reduce using rule 31 (asignacion -> asignacionFloat .)
    FLOAT           reduce using rule 31 (asignacion -> asignacionFloat .)
    DOUBLE          reduce using rule 31 (asignacion -> asignacionFloat .)
    LLAVE_D         reduce using rule 31 (asignacion -> asignacionFloat .)
    RETURN          reduce using rule 31 (asignacion -> asignacionFloat .)


state 13

    (32) asignacion -> asignacionDouble .

    DEF             reduce using rule 32 (asignacion -> asignacionDouble .)
    VAR             reduce using rule 32 (asignacion -> asignacionDouble .)
    VAL             reduce using rule 32 (asignacion -> asignacionDouble .)
    WHILE           reduce using rule 32 (asignacion -> asignacionDouble .)
    FOR             reduce using rule 32 (asignacion -> asignacionDouble .)
    IF              reduce using rule 32 (asignacion -> asignacionDouble .)
    $end            reduce using rule 32 (asignacion -> asignacionDouble .)
    PRINTLN         reduce using rule 32 (asignacion -> asignacionDouble .)
    PRINT           reduce using rule 32 (asignacion -> asignacionDouble .)
    READLINE        reduce using rule 32 (asignacion -> asignacionDouble .)
    VARIABLE        reduce using rule 32 (asignacion -> asignacionDouble .)
    INT             reduce using rule 32 (asignacion -> asignacionDouble .)
    LONG            reduce using rule 32 (asignacion -> asignacionDouble .)
    FLOAT           reduce using rule 32 (asignacion -> asignacionDouble .)
    DOUBLE          reduce using rule 32 (asignacion -> asignacionDouble .)
    LLAVE_D         reduce using rule 32 (asignacion -> asignacionDouble .)
    RETURN          reduce using rule 32 (asignacion -> asignacionDouble .)


state 14

    (33) asignacion -> asignacionString .

    DEF             reduce using rule 33 (asignacion -> asignacionString .)
    VAR             reduce using rule 33 (asignacion -> asignacionString .)
    VAL             reduce using rule 33 (asignacion -> asignacionString .)
    WHILE           reduce using rule 33 (asignacion -> asignacionString .)
    FOR             reduce using rule 33 (asignacion -> asignacionString .)
    IF              reduce using rule 33 (asignacion -> asignacionString .)
    $end            reduce using rule 33 (asignacion -> asignacionString .)
    PRINTLN         reduce using rule 33 (asignacion -> asignacionString .)
    PRINT           reduce using rule 33 (asignacion -> asignacionString .)
    READLINE        reduce using rule 33 (asignacion -> asignacionString .)
    VARIABLE        reduce using rule 33 (asignacion -> asignacionString .)
    INT             reduce using rule 33 (asignacion -> asignacionString .)
    LONG            reduce using rule 33 (asignacion -> asignacionString .)
    FLOAT           reduce using rule 33 (asignacion -> asignacionString .)
    DOUBLE          reduce using rule 33 (asignacion -> asignacionString .)
    LLAVE_D         reduce using rule 33 (asignacion -> asignacionString .)
    RETURN          reduce using rule 33 (asignacion -> asignacionString .)


state 15

    (34) asignacion -> asignacionChar .

    DEF             reduce using rule 34 (asignacion -> asignacionChar .)
    VAR             reduce using rule 34 (asignacion -> asignacionChar .)
    VAL             reduce using rule 34 (asignacion -> asignacionChar .)
    WHILE           reduce using rule 34 (asignacion -> asignacionChar .)
    FOR             reduce using rule 34 (asignacion -> asignacionChar .)
    IF              reduce using rule 34 (asignacion -> asignacionChar .)
    $end            reduce using rule 34 (asignacion -> asignacionChar .)
    PRINTLN         reduce using rule 34 (asignacion -> asignacionChar .)
    PRINT           reduce using rule 34 (asignacion -> asignacionChar .)
    READLINE        reduce using rule 34 (asignacion -> asignacionChar .)
    VARIABLE        reduce using rule 34 (asignacion -> asignacionChar .)
    INT             reduce using rule 34 (asignacion -> asignacionChar .)
    LONG            reduce using rule 34 (asignacion -> asignacionChar .)
    FLOAT           reduce using rule 34 (asignacion -> asignacionChar .)
    DOUBLE          reduce using rule 34 (asignacion -> asignacionChar .)
    LLAVE_D         reduce using rule 34 (asignacion -> asignacionChar .)
    RETURN          reduce using rule 34 (asignacion -> asignacionChar .)


state 16

    (35) asignacion -> asignacionBoolean .

    DEF             reduce using rule 35 (asignacion -> asignacionBoolean .)
    VAR             reduce using rule 35 (asignacion -> asignacionBoolean .)
    VAL             reduce using rule 35 (asignacion -> asignacionBoolean .)
    WHILE           reduce using rule 35 (asignacion -> asignacionBoolean .)
    FOR             reduce using rule 35 (asignacion -> asignacionBoolean .)
    IF              reduce using rule 35 (asignacion -> asignacionBoolean .)
    $end            reduce using rule 35 (asignacion -> asignacionBoolean .)
    PRINTLN         reduce using rule 35 (asignacion -> asignacionBoolean .)
    PRINT           reduce using rule 35 (asignacion -> asignacionBoolean .)
    READLINE        reduce using rule 35 (asignacion -> asignacionBoolean .)
    VARIABLE        reduce using rule 35 (asignacion -> asignacionBoolean .)
    INT             reduce using rule 35 (asignacion -> asignacionBoolean .)
    LONG            reduce using rule 35 (asignacion -> asignacionBoolean .)
    FLOAT           reduce using rule 35 (asignacion -> asignacionBoolean .)
    DOUBLE          reduce using rule 35 (asignacion -> asignacionBoolean .)
    LLAVE_D         reduce using rule 35 (asignacion -> asignacionBoolean .)
    RETURN          reduce using rule 35 (asignacion -> asignacionBoolean .)


state 17

    (36) asignacion -> array .

    DEF             reduce using rule 36 (asignacion -> array .)
    VAR             reduce using rule 36 (asignacion -> array .)
    VAL             reduce using rule 36 (asignacion -> array .)
    WHILE           reduce using rule 36 (asignacion -> array .)
    FOR             reduce using rule 36 (asignacion -> array .)
    IF              reduce using rule 36 (asignacion -> array .)
    $end            reduce using rule 36 (asignacion -> array .)
    PRINTLN         reduce using rule 36 (asignacion -> array .)
    PRINT           reduce using rule 36 (asignacion -> array .)
    READLINE        reduce using rule 36 (asignacion -> array .)
    VARIABLE        reduce using rule 36 (asignacion -> array .)
    INT             reduce using rule 36 (asignacion -> array .)
    LONG            reduce using rule 36 (asignacion -> array .)
    FLOAT           reduce using rule 36 (asignacion -> array .)
    DOUBLE          reduce using rule 36 (asignacion -> array .)
    LLAVE_D         reduce using rule 36 (asignacion -> array .)
    RETURN          reduce using rule 36 (asignacion -> array .)


state 18

    (37) asignacion -> list .

    DEF             reduce using rule 37 (asignacion -> list .)
    VAR             reduce using rule 37 (asignacion -> list .)
    VAL             reduce using rule 37 (asignacion -> list .)
    WHILE           reduce using rule 37 (asignacion -> list .)
    FOR             reduce using rule 37 (asignacion -> list .)
    IF              reduce using rule 37 (asignacion -> list .)
    $end            reduce using rule 37 (asignacion -> list .)
    PRINTLN         reduce using rule 37 (asignacion -> list .)
    PRINT           reduce using rule 37 (asignacion -> list .)
    READLINE        reduce using rule 37 (asignacion -> list .)
    VARIABLE        reduce using rule 37 (asignacion -> list .)
    INT             reduce using rule 37 (asignacion -> list .)
    LONG            reduce using rule 37 (asignacion -> list .)
    FLOAT           reduce using rule 37 (asignacion -> list .)
    DOUBLE          reduce using rule 37 (asignacion -> list .)
    LLAVE_D         reduce using rule 37 (asignacion -> list .)
    RETURN          reduce using rule 37 (asignacion -> list .)


state 19

    (125) while -> WHILE . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 33


state 20

    (126) for -> FOR . PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> FOR . PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> FOR . PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> FOR . PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> FOR . PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> FOR . PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 34


state 21

    (132) if -> IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 35


state 22

    (6) cuerpo -> funcion cuerpo .

    $end            reduce using rule 6 (cuerpo -> funcion cuerpo .)


state 23

    (7) cuerpo -> asignacion cuerpo .

    $end            reduce using rule 7 (cuerpo -> asignacion cuerpo .)


state 24

    (8) cuerpo -> while cuerpo .

    $end            reduce using rule 8 (cuerpo -> while cuerpo .)


state 25

    (9) cuerpo -> for cuerpo .

    $end            reduce using rule 9 (cuerpo -> for cuerpo .)


state 26

    (10) cuerpo -> if cuerpo .

    $end            reduce using rule 10 (cuerpo -> if cuerpo .)


state 27

    (133) if -> if elseif .
    (137) else -> elseif . else
    (136) else -> . ELSE LLAVE_I contenido LLAVE_D
    (137) else -> . elseif else
    (135) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

  ! shift/reduce conflict for ELSE resolved as shift
    DEF             reduce using rule 133 (if -> if elseif .)
    VAR             reduce using rule 133 (if -> if elseif .)
    VAL             reduce using rule 133 (if -> if elseif .)
    WHILE           reduce using rule 133 (if -> if elseif .)
    FOR             reduce using rule 133 (if -> if elseif .)
    IF              reduce using rule 133 (if -> if elseif .)
    $end            reduce using rule 133 (if -> if elseif .)
    PRINTLN         reduce using rule 133 (if -> if elseif .)
    PRINT           reduce using rule 133 (if -> if elseif .)
    READLINE        reduce using rule 133 (if -> if elseif .)
    VARIABLE        reduce using rule 133 (if -> if elseif .)
    INT             reduce using rule 133 (if -> if elseif .)
    LONG            reduce using rule 133 (if -> if elseif .)
    FLOAT           reduce using rule 133 (if -> if elseif .)
    DOUBLE          reduce using rule 133 (if -> if elseif .)
    LLAVE_D         reduce using rule 133 (if -> if elseif .)
    RETURN          reduce using rule 133 (if -> if elseif .)
    ELSE            shift and go to state 38

  ! ELSE            [ reduce using rule 133 (if -> if elseif .) ]

    elseif                         shift and go to state 36
    else                           shift and go to state 37

state 28

    (134) if -> if else .

    ELSE            reduce using rule 134 (if -> if else .)
    DEF             reduce using rule 134 (if -> if else .)
    VAR             reduce using rule 134 (if -> if else .)
    VAL             reduce using rule 134 (if -> if else .)
    WHILE           reduce using rule 134 (if -> if else .)
    FOR             reduce using rule 134 (if -> if else .)
    IF              reduce using rule 134 (if -> if else .)
    $end            reduce using rule 134 (if -> if else .)
    PRINTLN         reduce using rule 134 (if -> if else .)
    PRINT           reduce using rule 134 (if -> if else .)
    READLINE        reduce using rule 134 (if -> if else .)
    VARIABLE        reduce using rule 134 (if -> if else .)
    INT             reduce using rule 134 (if -> if else .)
    LONG            reduce using rule 134 (if -> if else .)
    FLOAT           reduce using rule 134 (if -> if else .)
    DOUBLE          reduce using rule 134 (if -> if else .)
    LLAVE_D         reduce using rule 134 (if -> if else .)
    RETURN          reduce using rule 134 (if -> if else .)


state 29

    (135) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (136) else -> ELSE . LLAVE_I contenido LLAVE_D

    IF              shift and go to state 39
    LLAVE_I         shift and go to state 40


state 30

    (98) funcion -> DEF VARIABLE . parametro IGUAL LLAVE_I contenido LLAVE_D
    (105) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (106) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (101) parametro -> . parametros
    (102) parametro -> . PAR_I PAR_D
    (103) parametros -> . PAR_I declaracion PAR_D
    (104) parametros -> . PAR_I declaracion PAR_D parametros

    PAR_I           shift and go to state 43

    parametro                      shift and go to state 41
    parametros                     shift and go to state 42

state 31

    (25) asignacion -> VAR VARIABLE . IGUAL VARIABLE
    (27) asignacion -> VAR VARIABLE . IGUAL aritmetica
    (38) asignacionLong -> VAR VARIABLE . IGUAL LONG
    (39) asignacionLong -> VAR VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> VAR VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> VAR VARIABLE . IGUAL INT
    (45) asignacionInt -> VAR VARIABLE . DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> VAR VARIABLE . DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> VAR VARIABLE . IGUAL FLOAT
    (51) asignacionFloat -> VAR VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> VAR VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> VAR VARIABLE . IGUAL DOUBLE
    (57) asignacionDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> VAR VARIABLE . IGUAL STRING
    (63) asignacionString -> VAR VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> VAR VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> VAR VARIABLE . IGUAL CHAR
    (69) asignacionChar -> VAR VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> VAR VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> VAR VARIABLE . IGUAL booleanos
    (75) asignacionBoolean -> VAR VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> VAR VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> VAR VARIABLE . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    IGUAL           shift and go to state 44
    DOBLE_PUNTO     shift and go to state 45


state 32

    (26) asignacion -> VAL VARIABLE . IGUAL VARIABLE
    (28) asignacion -> VAL VARIABLE . IGUAL aritmetica
    (40) asignacionLong -> VAL VARIABLE . IGUAL LONG
    (41) asignacionLong -> VAL VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL LONG
    (43) asignacionLong -> VAL VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (46) asignacionInt -> VAL VARIABLE . IGUAL INT
    (47) asignacionInt -> VAL VARIABLE . DOBLE_PUNTO INTCLASS IGUAL INT
    (49) asignacionInt -> VAL VARIABLE . DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (52) asignacionFloat -> VAL VARIABLE . IGUAL FLOAT
    (53) asignacionFloat -> VAL VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (55) asignacionFloat -> VAL VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (58) asignacionDouble -> VAL VARIABLE . IGUAL DOUBLE
    (59) asignacionDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (61) asignacionDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (64) asignacionString -> VAL VARIABLE . IGUAL STRING
    (65) asignacionString -> VAL VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (67) asignacionString -> VAL VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (70) asignacionChar -> VAL VARIABLE . IGUAL CHAR
    (71) asignacionChar -> VAL VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (73) asignacionChar -> VAL VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (76) asignacionBoolean -> VAL VARIABLE . IGUAL booleanos
    (77) asignacionBoolean -> VAL VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (79) asignacionBoolean -> VAL VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (121) list -> VAL VARIABLE . IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> VAL VARIABLE . DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    IGUAL           shift and go to state 46
    DOBLE_PUNTO     shift and go to state 47


state 33

    (125) while -> WHILE PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (138) condicional -> . valorC logicos condicional
    (139) condicional -> . valorC
    (140) valorC -> . VARIABLE
    (141) valorC -> . booleanos
    (142) valorC -> . relacional
    (143) valorC -> . NOT VARIABLE
    (144) valorC -> . NOT booleanos
    (145) valorC -> . NOT relacional
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE
    (149) relacional -> . numeros comparacion numeros
    (150) relacional -> . aritmetica comparacion aritmetica
    (151) relacional -> . aritmetica comparacion numeros
    (152) relacional -> . numeros comparacion aritmetica
    (153) relacional -> . booleanos comparacion booleanos
    (154) relacional -> . STRING comparacion STRING
    (155) relacional -> . CHAR comparacion CHAR
    (156) relacional -> . VARIABLE comparacion numeros
    (157) relacional -> . numeros comparacion VARIABLE
    (158) relacional -> . VARIABLE comparacion booleanos
    (159) relacional -> . booleanos comparacion VARIABLE
    (160) relacional -> . VARIABLE comparacion STRING
    (161) relacional -> . STRING comparacion VARIABLE
    (162) relacional -> . VARIABLE comparacion CHAR
    (163) relacional -> . CHAR comparacion VARIABLE
    (164) relacional -> . VARIABLE comparacion VARIABLE
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 50
    NOT             shift and go to state 53
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55
    STRING          shift and go to state 58
    CHAR            shift and go to state 59
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    condicional                    shift and go to state 48
    valorC                         shift and go to state 49
    booleanos                      shift and go to state 51
    relacional                     shift and go to state 52
    numeros                        shift and go to state 56
    aritmetica                     shift and go to state 57

state 34

    (126) for -> FOR PAR_I . VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> FOR PAR_I . VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> FOR PAR_I . VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> FOR PAR_I . VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> FOR PAR_I . VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> FOR PAR_I . VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VAR             shift and go to state 64
    VARIABLE        shift and go to state 65


state 35

    (132) if -> IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (138) condicional -> . valorC logicos condicional
    (139) condicional -> . valorC
    (140) valorC -> . VARIABLE
    (141) valorC -> . booleanos
    (142) valorC -> . relacional
    (143) valorC -> . NOT VARIABLE
    (144) valorC -> . NOT booleanos
    (145) valorC -> . NOT relacional
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE
    (149) relacional -> . numeros comparacion numeros
    (150) relacional -> . aritmetica comparacion aritmetica
    (151) relacional -> . aritmetica comparacion numeros
    (152) relacional -> . numeros comparacion aritmetica
    (153) relacional -> . booleanos comparacion booleanos
    (154) relacional -> . STRING comparacion STRING
    (155) relacional -> . CHAR comparacion CHAR
    (156) relacional -> . VARIABLE comparacion numeros
    (157) relacional -> . numeros comparacion VARIABLE
    (158) relacional -> . VARIABLE comparacion booleanos
    (159) relacional -> . booleanos comparacion VARIABLE
    (160) relacional -> . VARIABLE comparacion STRING
    (161) relacional -> . STRING comparacion VARIABLE
    (162) relacional -> . VARIABLE comparacion CHAR
    (163) relacional -> . CHAR comparacion VARIABLE
    (164) relacional -> . VARIABLE comparacion VARIABLE
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 50
    NOT             shift and go to state 53
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55
    STRING          shift and go to state 58
    CHAR            shift and go to state 59
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    condicional                    shift and go to state 66
    valorC                         shift and go to state 49
    booleanos                      shift and go to state 51
    relacional                     shift and go to state 52
    numeros                        shift and go to state 56
    aritmetica                     shift and go to state 57

state 36

    (137) else -> elseif . else
    (136) else -> . ELSE LLAVE_I contenido LLAVE_D
    (137) else -> . elseif else
    (135) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    ELSE            shift and go to state 38

    elseif                         shift and go to state 36
    else                           shift and go to state 37

state 37

    (137) else -> elseif else .

    ELSE            reduce using rule 137 (else -> elseif else .)
    DEF             reduce using rule 137 (else -> elseif else .)
    VAR             reduce using rule 137 (else -> elseif else .)
    VAL             reduce using rule 137 (else -> elseif else .)
    WHILE           reduce using rule 137 (else -> elseif else .)
    FOR             reduce using rule 137 (else -> elseif else .)
    IF              reduce using rule 137 (else -> elseif else .)
    $end            reduce using rule 137 (else -> elseif else .)
    PRINTLN         reduce using rule 137 (else -> elseif else .)
    PRINT           reduce using rule 137 (else -> elseif else .)
    READLINE        reduce using rule 137 (else -> elseif else .)
    VARIABLE        reduce using rule 137 (else -> elseif else .)
    INT             reduce using rule 137 (else -> elseif else .)
    LONG            reduce using rule 137 (else -> elseif else .)
    FLOAT           reduce using rule 137 (else -> elseif else .)
    DOUBLE          reduce using rule 137 (else -> elseif else .)
    LLAVE_D         reduce using rule 137 (else -> elseif else .)
    RETURN          reduce using rule 137 (else -> elseif else .)


state 38

    (136) else -> ELSE . LLAVE_I contenido LLAVE_D
    (135) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 40
    IF              shift and go to state 39


state 39

    (135) elseif -> ELSE IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 67


state 40

    (136) else -> ELSE LLAVE_I . contenido LLAVE_D
    (11) contenido -> . asignacion
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . if
    (17) contenido -> . aritmetica
    (18) contenido -> . asignacion contenido
    (19) contenido -> . impresion contenido
    (20) contenido -> . entrada contenido
    (21) contenido -> . while contenido
    (22) contenido -> . for contenido
    (23) contenido -> . if contenido
    (24) contenido -> . aritmetica contenido
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (113) impresion -> . PRINTLN PAR_I valorI PAR_D
    (114) impresion -> . PRINT PAR_I valorI PAR_D
    (117) entrada -> . READLINE PAR_I PAR_D
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    VAR             shift and go to state 8
    VAL             shift and go to state 9
    PRINTLN         shift and go to state 77
    PRINT           shift and go to state 78
    READLINE        shift and go to state 79
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21
    VARIABLE        shift and go to state 76
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    contenido                      shift and go to state 68
    asignacion                     shift and go to state 69
    impresion                      shift and go to state 70
    entrada                        shift and go to state 71
    while                          shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    aritmetica                     shift and go to state 75
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18
    numeros                        shift and go to state 80

state 41

    (98) funcion -> DEF VARIABLE parametro . IGUAL LLAVE_I contenido LLAVE_D
    (105) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (106) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (107) dectipo -> . DOBLE_PUNTO tipo
    (108) dectipoTupla -> . DOBLE_PUNTO PAR_I tipos PAR_D

    IGUAL           shift and go to state 81
    DOBLE_PUNTO     shift and go to state 84

    dectipo                        shift and go to state 82
    dectipoTupla                   shift and go to state 83

state 42

    (101) parametro -> parametros .

    IGUAL           reduce using rule 101 (parametro -> parametros .)
    DOBLE_PUNTO     reduce using rule 101 (parametro -> parametros .)


state 43

    (102) parametro -> PAR_I . PAR_D
    (103) parametros -> PAR_I . declaracion PAR_D
    (104) parametros -> PAR_I . declaracion PAR_D parametros
    (99) declaracion -> . VARIABLE DOBLE_PUNTO tipo
    (100) declaracion -> . VARIABLE DOBLE_PUNTO tipo IGUAL valor

    PAR_D           shift and go to state 85
    VARIABLE        shift and go to state 87

    declaracion                    shift and go to state 86

state 44

    (25) asignacion -> VAR VARIABLE IGUAL . VARIABLE
    (27) asignacion -> VAR VARIABLE IGUAL . aritmetica
    (38) asignacionLong -> VAR VARIABLE IGUAL . LONG
    (44) asignacionInt -> VAR VARIABLE IGUAL . INT
    (50) asignacionFloat -> VAR VARIABLE IGUAL . FLOAT
    (56) asignacionDouble -> VAR VARIABLE IGUAL . DOUBLE
    (62) asignacionString -> VAR VARIABLE IGUAL . STRING
    (68) asignacionChar -> VAR VARIABLE IGUAL . CHAR
    (74) asignacionBoolean -> VAR VARIABLE IGUAL . booleanos
    (118) array -> VAR VARIABLE IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    VARIABLE        shift and go to state 88
    LONG            shift and go to state 90
    INT             shift and go to state 91
    FLOAT           shift and go to state 92
    DOUBLE          shift and go to state 93
    STRING          shift and go to state 94
    CHAR            shift and go to state 95
    ARRAYCLASS      shift and go to state 97
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55

    aritmetica                     shift and go to state 89
    booleanos                      shift and go to state 96
    numeros                        shift and go to state 80

state 45

    (39) asignacionLong -> VAR VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL LONG
    (42) asignacionLong -> VAR VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL VARIABLE
    (45) asignacionInt -> VAR VARIABLE DOBLE_PUNTO . INTCLASS IGUAL INT
    (48) asignacionInt -> VAR VARIABLE DOBLE_PUNTO . INTCLASS IGUAL VARIABLE
    (51) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL VARIABLE
    (57) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL VARIABLE
    (63) asignacionString -> VAR VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL STRING
    (66) asignacionString -> VAR VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL VARIABLE
    (69) asignacionChar -> VAR VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL CHAR
    (72) asignacionChar -> VAR VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL VARIABLE
    (75) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL VARIABLE
    (119) array -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    LONGCLASS       shift and go to state 98
    INTCLASS        shift and go to state 99
    FLOATCLASS      shift and go to state 100
    DOUBLECLASS     shift and go to state 101
    STRINGCLASS     shift and go to state 102
    CHARCLASS       shift and go to state 103
    BOOLCLASS       shift and go to state 104
    ARRAYCLASS      shift and go to state 105


state 46

    (26) asignacion -> VAL VARIABLE IGUAL . VARIABLE
    (28) asignacion -> VAL VARIABLE IGUAL . aritmetica
    (40) asignacionLong -> VAL VARIABLE IGUAL . LONG
    (46) asignacionInt -> VAL VARIABLE IGUAL . INT
    (52) asignacionFloat -> VAL VARIABLE IGUAL . FLOAT
    (58) asignacionDouble -> VAL VARIABLE IGUAL . DOUBLE
    (64) asignacionString -> VAL VARIABLE IGUAL . STRING
    (70) asignacionChar -> VAL VARIABLE IGUAL . CHAR
    (76) asignacionBoolean -> VAL VARIABLE IGUAL . booleanos
    (121) list -> VAL VARIABLE IGUAL . LISTCLASS PAR_I valores PAR_D
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    VARIABLE        shift and go to state 106
    LONG            shift and go to state 108
    INT             shift and go to state 109
    FLOAT           shift and go to state 110
    DOUBLE          shift and go to state 111
    STRING          shift and go to state 112
    CHAR            shift and go to state 113
    LISTCLASS       shift and go to state 115
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55

    aritmetica                     shift and go to state 107
    booleanos                      shift and go to state 114
    numeros                        shift and go to state 80

state 47

    (41) asignacionLong -> VAL VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL LONG
    (43) asignacionLong -> VAL VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL VARIABLE
    (47) asignacionInt -> VAL VARIABLE DOBLE_PUNTO . INTCLASS IGUAL INT
    (49) asignacionInt -> VAL VARIABLE DOBLE_PUNTO . INTCLASS IGUAL VARIABLE
    (53) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL FLOAT
    (55) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL VARIABLE
    (59) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL DOUBLE
    (61) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL VARIABLE
    (65) asignacionString -> VAL VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL STRING
    (67) asignacionString -> VAL VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL VARIABLE
    (71) asignacionChar -> VAL VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL CHAR
    (73) asignacionChar -> VAL VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL VARIABLE
    (77) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL booleanos
    (79) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL VARIABLE
    (122) list -> VAL VARIABLE DOBLE_PUNTO . LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LONGCLASS       shift and go to state 116
    INTCLASS        shift and go to state 117
    FLOATCLASS      shift and go to state 118
    DOUBLECLASS     shift and go to state 119
    STRINGCLASS     shift and go to state 120
    CHARCLASS       shift and go to state 121
    BOOLCLASS       shift and go to state 122
    LISTCLASS       shift and go to state 123


state 48

    (125) while -> WHILE PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 124


state 49

    (138) condicional -> valorC . logicos condicional
    (139) condicional -> valorC .
    (146) logicos -> . AND
    (147) logicos -> . OR
    (148) logicos -> . NOT

    PAR_D           reduce using rule 139 (condicional -> valorC .)
    AND             shift and go to state 126
    OR              shift and go to state 127
    NOT             shift and go to state 128

    logicos                        shift and go to state 125

state 50

    (140) valorC -> VARIABLE .
    (156) relacional -> VARIABLE . comparacion numeros
    (158) relacional -> VARIABLE . comparacion booleanos
    (160) relacional -> VARIABLE . comparacion STRING
    (162) relacional -> VARIABLE . comparacion CHAR
    (164) relacional -> VARIABLE . comparacion VARIABLE
    (170) aritmetica -> VARIABLE . aritmeticos numeros
    (172) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (165) comparacion -> . IGUAL_COMPARACION
    (166) comparacion -> . DIFERENTE
    (167) comparacion -> . MAYOR
    (168) comparacion -> . MENOR
    (175) aritmeticos -> . MENOS
    (176) aritmeticos -> . MAS
    (177) aritmeticos -> . MULTIPLICACION
    (178) aritmeticos -> . DIVISION
    (179) aritmeticos -> . MOD

    AND             reduce using rule 140 (valorC -> VARIABLE .)
    OR              reduce using rule 140 (valorC -> VARIABLE .)
    NOT             reduce using rule 140 (valorC -> VARIABLE .)
    PAR_D           reduce using rule 140 (valorC -> VARIABLE .)
    IGUAL_COMPARACION shift and go to state 131
    DIFERENTE       shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MENOS           shift and go to state 135
    MAS             shift and go to state 136
    MULTIPLICACION  shift and go to state 137
    DIVISION        shift and go to state 138
    MOD             shift and go to state 139

    comparacion                    shift and go to state 129
    aritmeticos                    shift and go to state 130

state 51

    (141) valorC -> booleanos .
    (153) relacional -> booleanos . comparacion booleanos
    (159) relacional -> booleanos . comparacion VARIABLE
    (165) comparacion -> . IGUAL_COMPARACION
    (166) comparacion -> . DIFERENTE
    (167) comparacion -> . MAYOR
    (168) comparacion -> . MENOR

    AND             reduce using rule 141 (valorC -> booleanos .)
    OR              reduce using rule 141 (valorC -> booleanos .)
    NOT             reduce using rule 141 (valorC -> booleanos .)
    PAR_D           reduce using rule 141 (valorC -> booleanos .)
    IGUAL_COMPARACION shift and go to state 131
    DIFERENTE       shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134

    comparacion                    shift and go to state 140

state 52

    (142) valorC -> relacional .

    AND             reduce using rule 142 (valorC -> relacional .)
    OR              reduce using rule 142 (valorC -> relacional .)
    NOT             reduce using rule 142 (valorC -> relacional .)
    PAR_D           reduce using rule 142 (valorC -> relacional .)


state 53

    (143) valorC -> NOT . VARIABLE
    (144) valorC -> NOT . booleanos
    (145) valorC -> NOT . relacional
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE
    (149) relacional -> . numeros comparacion numeros
    (150) relacional -> . aritmetica comparacion aritmetica
    (151) relacional -> . aritmetica comparacion numeros
    (152) relacional -> . numeros comparacion aritmetica
    (153) relacional -> . booleanos comparacion booleanos
    (154) relacional -> . STRING comparacion STRING
    (155) relacional -> . CHAR comparacion CHAR
    (156) relacional -> . VARIABLE comparacion numeros
    (157) relacional -> . numeros comparacion VARIABLE
    (158) relacional -> . VARIABLE comparacion booleanos
    (159) relacional -> . booleanos comparacion VARIABLE
    (160) relacional -> . VARIABLE comparacion STRING
    (161) relacional -> . STRING comparacion VARIABLE
    (162) relacional -> . VARIABLE comparacion CHAR
    (163) relacional -> . CHAR comparacion VARIABLE
    (164) relacional -> . VARIABLE comparacion VARIABLE
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 141
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55
    STRING          shift and go to state 58
    CHAR            shift and go to state 59
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    booleanos                      shift and go to state 142
    relacional                     shift and go to state 143
    numeros                        shift and go to state 56
    aritmetica                     shift and go to state 57

state 54

    (92) booleanos -> TRUE .

    IGUAL_COMPARACION reduce using rule 92 (booleanos -> TRUE .)
    DIFERENTE       reduce using rule 92 (booleanos -> TRUE .)
    MAYOR           reduce using rule 92 (booleanos -> TRUE .)
    MENOR           reduce using rule 92 (booleanos -> TRUE .)
    AND             reduce using rule 92 (booleanos -> TRUE .)
    OR              reduce using rule 92 (booleanos -> TRUE .)
    NOT             reduce using rule 92 (booleanos -> TRUE .)
    PAR_D           reduce using rule 92 (booleanos -> TRUE .)
    DEF             reduce using rule 92 (booleanos -> TRUE .)
    VAR             reduce using rule 92 (booleanos -> TRUE .)
    VAL             reduce using rule 92 (booleanos -> TRUE .)
    WHILE           reduce using rule 92 (booleanos -> TRUE .)
    FOR             reduce using rule 92 (booleanos -> TRUE .)
    IF              reduce using rule 92 (booleanos -> TRUE .)
    $end            reduce using rule 92 (booleanos -> TRUE .)
    PRINTLN         reduce using rule 92 (booleanos -> TRUE .)
    PRINT           reduce using rule 92 (booleanos -> TRUE .)
    READLINE        reduce using rule 92 (booleanos -> TRUE .)
    VARIABLE        reduce using rule 92 (booleanos -> TRUE .)
    INT             reduce using rule 92 (booleanos -> TRUE .)
    LONG            reduce using rule 92 (booleanos -> TRUE .)
    FLOAT           reduce using rule 92 (booleanos -> TRUE .)
    DOUBLE          reduce using rule 92 (booleanos -> TRUE .)
    LLAVE_D         reduce using rule 92 (booleanos -> TRUE .)
    RETURN          reduce using rule 92 (booleanos -> TRUE .)
    MAS             reduce using rule 92 (booleanos -> TRUE .)
    COMA            reduce using rule 92 (booleanos -> TRUE .)


state 55

    (93) booleanos -> FLASE .

    IGUAL_COMPARACION reduce using rule 93 (booleanos -> FLASE .)
    DIFERENTE       reduce using rule 93 (booleanos -> FLASE .)
    MAYOR           reduce using rule 93 (booleanos -> FLASE .)
    MENOR           reduce using rule 93 (booleanos -> FLASE .)
    AND             reduce using rule 93 (booleanos -> FLASE .)
    OR              reduce using rule 93 (booleanos -> FLASE .)
    NOT             reduce using rule 93 (booleanos -> FLASE .)
    PAR_D           reduce using rule 93 (booleanos -> FLASE .)
    DEF             reduce using rule 93 (booleanos -> FLASE .)
    VAR             reduce using rule 93 (booleanos -> FLASE .)
    VAL             reduce using rule 93 (booleanos -> FLASE .)
    WHILE           reduce using rule 93 (booleanos -> FLASE .)
    FOR             reduce using rule 93 (booleanos -> FLASE .)
    IF              reduce using rule 93 (booleanos -> FLASE .)
    $end            reduce using rule 93 (booleanos -> FLASE .)
    PRINTLN         reduce using rule 93 (booleanos -> FLASE .)
    PRINT           reduce using rule 93 (booleanos -> FLASE .)
    READLINE        reduce using rule 93 (booleanos -> FLASE .)
    VARIABLE        reduce using rule 93 (booleanos -> FLASE .)
    INT             reduce using rule 93 (booleanos -> FLASE .)
    LONG            reduce using rule 93 (booleanos -> FLASE .)
    FLOAT           reduce using rule 93 (booleanos -> FLASE .)
    DOUBLE          reduce using rule 93 (booleanos -> FLASE .)
    LLAVE_D         reduce using rule 93 (booleanos -> FLASE .)
    RETURN          reduce using rule 93 (booleanos -> FLASE .)
    MAS             reduce using rule 93 (booleanos -> FLASE .)
    COMA            reduce using rule 93 (booleanos -> FLASE .)


state 56

    (149) relacional -> numeros . comparacion numeros
    (152) relacional -> numeros . comparacion aritmetica
    (157) relacional -> numeros . comparacion VARIABLE
    (169) aritmetica -> numeros . aritmeticos numeros
    (171) aritmetica -> numeros . aritmeticos VARIABLE
    (165) comparacion -> . IGUAL_COMPARACION
    (166) comparacion -> . DIFERENTE
    (167) comparacion -> . MAYOR
    (168) comparacion -> . MENOR
    (175) aritmeticos -> . MENOS
    (176) aritmeticos -> . MAS
    (177) aritmeticos -> . MULTIPLICACION
    (178) aritmeticos -> . DIVISION
    (179) aritmeticos -> . MOD

    IGUAL_COMPARACION shift and go to state 131
    DIFERENTE       shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MENOS           shift and go to state 135
    MAS             shift and go to state 136
    MULTIPLICACION  shift and go to state 137
    DIVISION        shift and go to state 138
    MOD             shift and go to state 139

    comparacion                    shift and go to state 144
    aritmeticos                    shift and go to state 145

state 57

    (150) relacional -> aritmetica . comparacion aritmetica
    (151) relacional -> aritmetica . comparacion numeros
    (173) aritmetica -> aritmetica . aritmeticos numeros
    (174) aritmetica -> aritmetica . aritmeticos VARIABLE
    (165) comparacion -> . IGUAL_COMPARACION
    (166) comparacion -> . DIFERENTE
    (167) comparacion -> . MAYOR
    (168) comparacion -> . MENOR
    (175) aritmeticos -> . MENOS
    (176) aritmeticos -> . MAS
    (177) aritmeticos -> . MULTIPLICACION
    (178) aritmeticos -> . DIVISION
    (179) aritmeticos -> . MOD

    IGUAL_COMPARACION shift and go to state 131
    DIFERENTE       shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MENOS           shift and go to state 135
    MAS             shift and go to state 136
    MULTIPLICACION  shift and go to state 137
    DIVISION        shift and go to state 138
    MOD             shift and go to state 139

    comparacion                    shift and go to state 146
    aritmeticos                    shift and go to state 147

state 58

    (154) relacional -> STRING . comparacion STRING
    (161) relacional -> STRING . comparacion VARIABLE
    (165) comparacion -> . IGUAL_COMPARACION
    (166) comparacion -> . DIFERENTE
    (167) comparacion -> . MAYOR
    (168) comparacion -> . MENOR

    IGUAL_COMPARACION shift and go to state 131
    DIFERENTE       shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134

    comparacion                    shift and go to state 148

state 59

    (155) relacional -> CHAR . comparacion CHAR
    (163) relacional -> CHAR . comparacion VARIABLE
    (165) comparacion -> . IGUAL_COMPARACION
    (166) comparacion -> . DIFERENTE
    (167) comparacion -> . MAYOR
    (168) comparacion -> . MENOR

    IGUAL_COMPARACION shift and go to state 131
    DIFERENTE       shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134

    comparacion                    shift and go to state 149

state 60

    (94) numeros -> INT .

    IGUAL_COMPARACION reduce using rule 94 (numeros -> INT .)
    DIFERENTE       reduce using rule 94 (numeros -> INT .)
    MAYOR           reduce using rule 94 (numeros -> INT .)
    MENOR           reduce using rule 94 (numeros -> INT .)
    MENOS           reduce using rule 94 (numeros -> INT .)
    MAS             reduce using rule 94 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 94 (numeros -> INT .)
    DIVISION        reduce using rule 94 (numeros -> INT .)
    MOD             reduce using rule 94 (numeros -> INT .)
    AND             reduce using rule 94 (numeros -> INT .)
    OR              reduce using rule 94 (numeros -> INT .)
    NOT             reduce using rule 94 (numeros -> INT .)
    PAR_D           reduce using rule 94 (numeros -> INT .)
    VAR             reduce using rule 94 (numeros -> INT .)
    VAL             reduce using rule 94 (numeros -> INT .)
    PRINTLN         reduce using rule 94 (numeros -> INT .)
    PRINT           reduce using rule 94 (numeros -> INT .)
    READLINE        reduce using rule 94 (numeros -> INT .)
    WHILE           reduce using rule 94 (numeros -> INT .)
    FOR             reduce using rule 94 (numeros -> INT .)
    IF              reduce using rule 94 (numeros -> INT .)
    VARIABLE        reduce using rule 94 (numeros -> INT .)
    INT             reduce using rule 94 (numeros -> INT .)
    LONG            reduce using rule 94 (numeros -> INT .)
    FLOAT           reduce using rule 94 (numeros -> INT .)
    DOUBLE          reduce using rule 94 (numeros -> INT .)
    LLAVE_D         reduce using rule 94 (numeros -> INT .)
    DEF             reduce using rule 94 (numeros -> INT .)
    $end            reduce using rule 94 (numeros -> INT .)
    RETURN          reduce using rule 94 (numeros -> INT .)
    COMA            reduce using rule 94 (numeros -> INT .)


state 61

    (95) numeros -> LONG .

    IGUAL_COMPARACION reduce using rule 95 (numeros -> LONG .)
    DIFERENTE       reduce using rule 95 (numeros -> LONG .)
    MAYOR           reduce using rule 95 (numeros -> LONG .)
    MENOR           reduce using rule 95 (numeros -> LONG .)
    MENOS           reduce using rule 95 (numeros -> LONG .)
    MAS             reduce using rule 95 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 95 (numeros -> LONG .)
    DIVISION        reduce using rule 95 (numeros -> LONG .)
    MOD             reduce using rule 95 (numeros -> LONG .)
    AND             reduce using rule 95 (numeros -> LONG .)
    OR              reduce using rule 95 (numeros -> LONG .)
    NOT             reduce using rule 95 (numeros -> LONG .)
    PAR_D           reduce using rule 95 (numeros -> LONG .)
    VAR             reduce using rule 95 (numeros -> LONG .)
    VAL             reduce using rule 95 (numeros -> LONG .)
    PRINTLN         reduce using rule 95 (numeros -> LONG .)
    PRINT           reduce using rule 95 (numeros -> LONG .)
    READLINE        reduce using rule 95 (numeros -> LONG .)
    WHILE           reduce using rule 95 (numeros -> LONG .)
    FOR             reduce using rule 95 (numeros -> LONG .)
    IF              reduce using rule 95 (numeros -> LONG .)
    VARIABLE        reduce using rule 95 (numeros -> LONG .)
    INT             reduce using rule 95 (numeros -> LONG .)
    LONG            reduce using rule 95 (numeros -> LONG .)
    FLOAT           reduce using rule 95 (numeros -> LONG .)
    DOUBLE          reduce using rule 95 (numeros -> LONG .)
    LLAVE_D         reduce using rule 95 (numeros -> LONG .)
    DEF             reduce using rule 95 (numeros -> LONG .)
    $end            reduce using rule 95 (numeros -> LONG .)
    RETURN          reduce using rule 95 (numeros -> LONG .)
    COMA            reduce using rule 95 (numeros -> LONG .)


state 62

    (96) numeros -> FLOAT .

    IGUAL_COMPARACION reduce using rule 96 (numeros -> FLOAT .)
    DIFERENTE       reduce using rule 96 (numeros -> FLOAT .)
    MAYOR           reduce using rule 96 (numeros -> FLOAT .)
    MENOR           reduce using rule 96 (numeros -> FLOAT .)
    MENOS           reduce using rule 96 (numeros -> FLOAT .)
    MAS             reduce using rule 96 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 96 (numeros -> FLOAT .)
    DIVISION        reduce using rule 96 (numeros -> FLOAT .)
    MOD             reduce using rule 96 (numeros -> FLOAT .)
    AND             reduce using rule 96 (numeros -> FLOAT .)
    OR              reduce using rule 96 (numeros -> FLOAT .)
    NOT             reduce using rule 96 (numeros -> FLOAT .)
    PAR_D           reduce using rule 96 (numeros -> FLOAT .)
    VAR             reduce using rule 96 (numeros -> FLOAT .)
    VAL             reduce using rule 96 (numeros -> FLOAT .)
    PRINTLN         reduce using rule 96 (numeros -> FLOAT .)
    PRINT           reduce using rule 96 (numeros -> FLOAT .)
    READLINE        reduce using rule 96 (numeros -> FLOAT .)
    WHILE           reduce using rule 96 (numeros -> FLOAT .)
    FOR             reduce using rule 96 (numeros -> FLOAT .)
    IF              reduce using rule 96 (numeros -> FLOAT .)
    VARIABLE        reduce using rule 96 (numeros -> FLOAT .)
    INT             reduce using rule 96 (numeros -> FLOAT .)
    LONG            reduce using rule 96 (numeros -> FLOAT .)
    FLOAT           reduce using rule 96 (numeros -> FLOAT .)
    DOUBLE          reduce using rule 96 (numeros -> FLOAT .)
    LLAVE_D         reduce using rule 96 (numeros -> FLOAT .)
    DEF             reduce using rule 96 (numeros -> FLOAT .)
    $end            reduce using rule 96 (numeros -> FLOAT .)
    RETURN          reduce using rule 96 (numeros -> FLOAT .)
    COMA            reduce using rule 96 (numeros -> FLOAT .)


state 63

    (97) numeros -> DOUBLE .

    IGUAL_COMPARACION reduce using rule 97 (numeros -> DOUBLE .)
    DIFERENTE       reduce using rule 97 (numeros -> DOUBLE .)
    MAYOR           reduce using rule 97 (numeros -> DOUBLE .)
    MENOR           reduce using rule 97 (numeros -> DOUBLE .)
    MENOS           reduce using rule 97 (numeros -> DOUBLE .)
    MAS             reduce using rule 97 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 97 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 97 (numeros -> DOUBLE .)
    MOD             reduce using rule 97 (numeros -> DOUBLE .)
    AND             reduce using rule 97 (numeros -> DOUBLE .)
    OR              reduce using rule 97 (numeros -> DOUBLE .)
    NOT             reduce using rule 97 (numeros -> DOUBLE .)
    PAR_D           reduce using rule 97 (numeros -> DOUBLE .)
    VAR             reduce using rule 97 (numeros -> DOUBLE .)
    VAL             reduce using rule 97 (numeros -> DOUBLE .)
    PRINTLN         reduce using rule 97 (numeros -> DOUBLE .)
    PRINT           reduce using rule 97 (numeros -> DOUBLE .)
    READLINE        reduce using rule 97 (numeros -> DOUBLE .)
    WHILE           reduce using rule 97 (numeros -> DOUBLE .)
    FOR             reduce using rule 97 (numeros -> DOUBLE .)
    IF              reduce using rule 97 (numeros -> DOUBLE .)
    VARIABLE        reduce using rule 97 (numeros -> DOUBLE .)
    INT             reduce using rule 97 (numeros -> DOUBLE .)
    LONG            reduce using rule 97 (numeros -> DOUBLE .)
    FLOAT           reduce using rule 97 (numeros -> DOUBLE .)
    DOUBLE          reduce using rule 97 (numeros -> DOUBLE .)
    LLAVE_D         reduce using rule 97 (numeros -> DOUBLE .)
    DEF             reduce using rule 97 (numeros -> DOUBLE .)
    $end            reduce using rule 97 (numeros -> DOUBLE .)
    RETURN          reduce using rule 97 (numeros -> DOUBLE .)
    COMA            reduce using rule 97 (numeros -> DOUBLE .)


state 64

    (126) for -> FOR PAR_I VAR . VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> FOR PAR_I VAR . VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> FOR PAR_I VAR . VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 150


state 65

    (127) for -> FOR PAR_I VARIABLE . ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> FOR PAR_I VARIABLE . ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> FOR PAR_I VARIABLE . ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    ITERATOR        shift and go to state 151


state 66

    (132) if -> IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 152


state 67

    (135) elseif -> ELSE IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (138) condicional -> . valorC logicos condicional
    (139) condicional -> . valorC
    (140) valorC -> . VARIABLE
    (141) valorC -> . booleanos
    (142) valorC -> . relacional
    (143) valorC -> . NOT VARIABLE
    (144) valorC -> . NOT booleanos
    (145) valorC -> . NOT relacional
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE
    (149) relacional -> . numeros comparacion numeros
    (150) relacional -> . aritmetica comparacion aritmetica
    (151) relacional -> . aritmetica comparacion numeros
    (152) relacional -> . numeros comparacion aritmetica
    (153) relacional -> . booleanos comparacion booleanos
    (154) relacional -> . STRING comparacion STRING
    (155) relacional -> . CHAR comparacion CHAR
    (156) relacional -> . VARIABLE comparacion numeros
    (157) relacional -> . numeros comparacion VARIABLE
    (158) relacional -> . VARIABLE comparacion booleanos
    (159) relacional -> . booleanos comparacion VARIABLE
    (160) relacional -> . VARIABLE comparacion STRING
    (161) relacional -> . STRING comparacion VARIABLE
    (162) relacional -> . VARIABLE comparacion CHAR
    (163) relacional -> . CHAR comparacion VARIABLE
    (164) relacional -> . VARIABLE comparacion VARIABLE
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 50
    NOT             shift and go to state 53
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55
    STRING          shift and go to state 58
    CHAR            shift and go to state 59
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    condicional                    shift and go to state 153
    valorC                         shift and go to state 49
    booleanos                      shift and go to state 51
    relacional                     shift and go to state 52
    numeros                        shift and go to state 56
    aritmetica                     shift and go to state 57

state 68

    (136) else -> ELSE LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 154


state 69

    (11) contenido -> asignacion .
    (18) contenido -> asignacion . contenido
    (11) contenido -> . asignacion
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . if
    (17) contenido -> . aritmetica
    (18) contenido -> . asignacion contenido
    (19) contenido -> . impresion contenido
    (20) contenido -> . entrada contenido
    (21) contenido -> . while contenido
    (22) contenido -> . for contenido
    (23) contenido -> . if contenido
    (24) contenido -> . aritmetica contenido
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (113) impresion -> . PRINTLN PAR_I valorI PAR_D
    (114) impresion -> . PRINT PAR_I valorI PAR_D
    (117) entrada -> . READLINE PAR_I PAR_D
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 11 (contenido -> asignacion .)
    RETURN          reduce using rule 11 (contenido -> asignacion .)
    VAR             shift and go to state 8
    VAL             shift and go to state 9
    PRINTLN         shift and go to state 77
    PRINT           shift and go to state 78
    READLINE        shift and go to state 79
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21
    VARIABLE        shift and go to state 76
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    asignacion                     shift and go to state 69
    contenido                      shift and go to state 155
    impresion                      shift and go to state 70
    entrada                        shift and go to state 71
    while                          shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    aritmetica                     shift and go to state 75
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18
    numeros                        shift and go to state 80

state 70

    (12) contenido -> impresion .
    (19) contenido -> impresion . contenido
    (11) contenido -> . asignacion
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . if
    (17) contenido -> . aritmetica
    (18) contenido -> . asignacion contenido
    (19) contenido -> . impresion contenido
    (20) contenido -> . entrada contenido
    (21) contenido -> . while contenido
    (22) contenido -> . for contenido
    (23) contenido -> . if contenido
    (24) contenido -> . aritmetica contenido
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (113) impresion -> . PRINTLN PAR_I valorI PAR_D
    (114) impresion -> . PRINT PAR_I valorI PAR_D
    (117) entrada -> . READLINE PAR_I PAR_D
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 12 (contenido -> impresion .)
    RETURN          reduce using rule 12 (contenido -> impresion .)
    VAR             shift and go to state 8
    VAL             shift and go to state 9
    PRINTLN         shift and go to state 77
    PRINT           shift and go to state 78
    READLINE        shift and go to state 79
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21
    VARIABLE        shift and go to state 76
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    impresion                      shift and go to state 70
    contenido                      shift and go to state 156
    asignacion                     shift and go to state 69
    entrada                        shift and go to state 71
    while                          shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    aritmetica                     shift and go to state 75
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18
    numeros                        shift and go to state 80

state 71

    (13) contenido -> entrada .
    (20) contenido -> entrada . contenido
    (11) contenido -> . asignacion
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . if
    (17) contenido -> . aritmetica
    (18) contenido -> . asignacion contenido
    (19) contenido -> . impresion contenido
    (20) contenido -> . entrada contenido
    (21) contenido -> . while contenido
    (22) contenido -> . for contenido
    (23) contenido -> . if contenido
    (24) contenido -> . aritmetica contenido
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (113) impresion -> . PRINTLN PAR_I valorI PAR_D
    (114) impresion -> . PRINT PAR_I valorI PAR_D
    (117) entrada -> . READLINE PAR_I PAR_D
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 13 (contenido -> entrada .)
    RETURN          reduce using rule 13 (contenido -> entrada .)
    VAR             shift and go to state 8
    VAL             shift and go to state 9
    PRINTLN         shift and go to state 77
    PRINT           shift and go to state 78
    READLINE        shift and go to state 79
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21
    VARIABLE        shift and go to state 76
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    entrada                        shift and go to state 71
    contenido                      shift and go to state 157
    asignacion                     shift and go to state 69
    impresion                      shift and go to state 70
    while                          shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    aritmetica                     shift and go to state 75
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18
    numeros                        shift and go to state 80

state 72

    (14) contenido -> while .
    (21) contenido -> while . contenido
    (11) contenido -> . asignacion
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . if
    (17) contenido -> . aritmetica
    (18) contenido -> . asignacion contenido
    (19) contenido -> . impresion contenido
    (20) contenido -> . entrada contenido
    (21) contenido -> . while contenido
    (22) contenido -> . for contenido
    (23) contenido -> . if contenido
    (24) contenido -> . aritmetica contenido
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (113) impresion -> . PRINTLN PAR_I valorI PAR_D
    (114) impresion -> . PRINT PAR_I valorI PAR_D
    (117) entrada -> . READLINE PAR_I PAR_D
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 14 (contenido -> while .)
    RETURN          reduce using rule 14 (contenido -> while .)
    VAR             shift and go to state 8
    VAL             shift and go to state 9
    PRINTLN         shift and go to state 77
    PRINT           shift and go to state 78
    READLINE        shift and go to state 79
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21
    VARIABLE        shift and go to state 76
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    while                          shift and go to state 72
    contenido                      shift and go to state 158
    asignacion                     shift and go to state 69
    impresion                      shift and go to state 70
    entrada                        shift and go to state 71
    for                            shift and go to state 73
    if                             shift and go to state 74
    aritmetica                     shift and go to state 75
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18
    numeros                        shift and go to state 80

state 73

    (15) contenido -> for .
    (22) contenido -> for . contenido
    (11) contenido -> . asignacion
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . if
    (17) contenido -> . aritmetica
    (18) contenido -> . asignacion contenido
    (19) contenido -> . impresion contenido
    (20) contenido -> . entrada contenido
    (21) contenido -> . while contenido
    (22) contenido -> . for contenido
    (23) contenido -> . if contenido
    (24) contenido -> . aritmetica contenido
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (113) impresion -> . PRINTLN PAR_I valorI PAR_D
    (114) impresion -> . PRINT PAR_I valorI PAR_D
    (117) entrada -> . READLINE PAR_I PAR_D
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 15 (contenido -> for .)
    RETURN          reduce using rule 15 (contenido -> for .)
    VAR             shift and go to state 8
    VAL             shift and go to state 9
    PRINTLN         shift and go to state 77
    PRINT           shift and go to state 78
    READLINE        shift and go to state 79
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21
    VARIABLE        shift and go to state 76
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    for                            shift and go to state 73
    contenido                      shift and go to state 159
    asignacion                     shift and go to state 69
    impresion                      shift and go to state 70
    entrada                        shift and go to state 71
    while                          shift and go to state 72
    if                             shift and go to state 74
    aritmetica                     shift and go to state 75
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18
    numeros                        shift and go to state 80

state 74

    (16) contenido -> if .
    (23) contenido -> if . contenido
    (133) if -> if . elseif
    (134) if -> if . else
    (11) contenido -> . asignacion
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . if
    (17) contenido -> . aritmetica
    (18) contenido -> . asignacion contenido
    (19) contenido -> . impresion contenido
    (20) contenido -> . entrada contenido
    (21) contenido -> . while contenido
    (22) contenido -> . for contenido
    (23) contenido -> . if contenido
    (24) contenido -> . aritmetica contenido
    (135) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (136) else -> . ELSE LLAVE_I contenido LLAVE_D
    (137) else -> . elseif else
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (113) impresion -> . PRINTLN PAR_I valorI PAR_D
    (114) impresion -> . PRINT PAR_I valorI PAR_D
    (117) entrada -> . READLINE PAR_I PAR_D
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 16 (contenido -> if .)
    RETURN          reduce using rule 16 (contenido -> if .)
    ELSE            shift and go to state 29
    VAR             shift and go to state 8
    VAL             shift and go to state 9
    PRINTLN         shift and go to state 77
    PRINT           shift and go to state 78
    READLINE        shift and go to state 79
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21
    VARIABLE        shift and go to state 76
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    if                             shift and go to state 74
    contenido                      shift and go to state 160
    elseif                         shift and go to state 27
    else                           shift and go to state 28
    asignacion                     shift and go to state 69
    impresion                      shift and go to state 70
    entrada                        shift and go to state 71
    while                          shift and go to state 72
    for                            shift and go to state 73
    aritmetica                     shift and go to state 75
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18
    numeros                        shift and go to state 80

state 75

    (17) contenido -> aritmetica .
    (24) contenido -> aritmetica . contenido
    (173) aritmetica -> aritmetica . aritmeticos numeros
    (174) aritmetica -> aritmetica . aritmeticos VARIABLE
    (11) contenido -> . asignacion
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . if
    (17) contenido -> . aritmetica
    (18) contenido -> . asignacion contenido
    (19) contenido -> . impresion contenido
    (20) contenido -> . entrada contenido
    (21) contenido -> . while contenido
    (22) contenido -> . for contenido
    (23) contenido -> . if contenido
    (24) contenido -> . aritmetica contenido
    (175) aritmeticos -> . MENOS
    (176) aritmeticos -> . MAS
    (177) aritmeticos -> . MULTIPLICACION
    (178) aritmeticos -> . DIVISION
    (179) aritmeticos -> . MOD
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (113) impresion -> . PRINTLN PAR_I valorI PAR_D
    (114) impresion -> . PRINT PAR_I valorI PAR_D
    (117) entrada -> . READLINE PAR_I PAR_D
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 17 (contenido -> aritmetica .)
    RETURN          reduce using rule 17 (contenido -> aritmetica .)
    MENOS           shift and go to state 135
    MAS             shift and go to state 136
    MULTIPLICACION  shift and go to state 137
    DIVISION        shift and go to state 138
    MOD             shift and go to state 139
    VAR             shift and go to state 8
    VAL             shift and go to state 9
    PRINTLN         shift and go to state 77
    PRINT           shift and go to state 78
    READLINE        shift and go to state 79
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21
    VARIABLE        shift and go to state 76
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    aritmetica                     shift and go to state 75
    contenido                      shift and go to state 161
    aritmeticos                    shift and go to state 147
    numeros                        shift and go to state 80
    asignacion                     shift and go to state 69
    impresion                      shift and go to state 70
    entrada                        shift and go to state 71
    while                          shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18

state 76

    (170) aritmetica -> VARIABLE . aritmeticos numeros
    (172) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (175) aritmeticos -> . MENOS
    (176) aritmeticos -> . MAS
    (177) aritmeticos -> . MULTIPLICACION
    (178) aritmeticos -> . DIVISION
    (179) aritmeticos -> . MOD

    MENOS           shift and go to state 135
    MAS             shift and go to state 136
    MULTIPLICACION  shift and go to state 137
    DIVISION        shift and go to state 138
    MOD             shift and go to state 139

    aritmeticos                    shift and go to state 130

state 77

    (113) impresion -> PRINTLN . PAR_I valorI PAR_D

    PAR_I           shift and go to state 162


state 78

    (114) impresion -> PRINT . PAR_I valorI PAR_D

    PAR_I           shift and go to state 163


state 79

    (117) entrada -> READLINE . PAR_I PAR_D

    PAR_I           shift and go to state 164


state 80

    (169) aritmetica -> numeros . aritmeticos numeros
    (171) aritmetica -> numeros . aritmeticos VARIABLE
    (175) aritmeticos -> . MENOS
    (176) aritmeticos -> . MAS
    (177) aritmeticos -> . MULTIPLICACION
    (178) aritmeticos -> . DIVISION
    (179) aritmeticos -> . MOD

    MENOS           shift and go to state 135
    MAS             shift and go to state 136
    MULTIPLICACION  shift and go to state 137
    DIVISION        shift and go to state 138
    MOD             shift and go to state 139

    aritmeticos                    shift and go to state 145

state 81

    (98) funcion -> DEF VARIABLE parametro IGUAL . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 165


state 82

    (105) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN valor LLAVE_D

    IGUAL           shift and go to state 166


state 83

    (106) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN valor LLAVE_D

    IGUAL           shift and go to state 167


state 84

    (107) dectipo -> DOBLE_PUNTO . tipo
    (108) dectipoTupla -> DOBLE_PUNTO . PAR_I tipos PAR_D
    (80) tipo -> . CHARCLASS
    (81) tipo -> . STRINGCLASS
    (82) tipo -> . BOOLCLASS
    (83) tipo -> . INTCLASS
    (84) tipo -> . LONGCLASS
    (85) tipo -> . DOUBLECLASS
    (86) tipo -> . FLOATCLASS

    PAR_I           shift and go to state 169
    CHARCLASS       shift and go to state 170
    STRINGCLASS     shift and go to state 171
    BOOLCLASS       shift and go to state 172
    INTCLASS        shift and go to state 173
    LONGCLASS       shift and go to state 174
    DOUBLECLASS     shift and go to state 175
    FLOATCLASS      shift and go to state 176

    tipo                           shift and go to state 168

state 85

    (102) parametro -> PAR_I PAR_D .

    IGUAL           reduce using rule 102 (parametro -> PAR_I PAR_D .)
    DOBLE_PUNTO     reduce using rule 102 (parametro -> PAR_I PAR_D .)


state 86

    (103) parametros -> PAR_I declaracion . PAR_D
    (104) parametros -> PAR_I declaracion . PAR_D parametros

    PAR_D           shift and go to state 177


state 87

    (99) declaracion -> VARIABLE . DOBLE_PUNTO tipo
    (100) declaracion -> VARIABLE . DOBLE_PUNTO tipo IGUAL valor

    DOBLE_PUNTO     shift and go to state 178


state 88

    (25) asignacion -> VAR VARIABLE IGUAL VARIABLE .
    (170) aritmetica -> VARIABLE . aritmeticos numeros
    (172) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (175) aritmeticos -> . MENOS
    (176) aritmeticos -> . MAS
    (177) aritmeticos -> . MULTIPLICACION
    (178) aritmeticos -> . DIVISION
    (179) aritmeticos -> . MOD

    DEF             reduce using rule 25 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VAR             reduce using rule 25 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VAL             reduce using rule 25 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    WHILE           reduce using rule 25 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    FOR             reduce using rule 25 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    IF              reduce using rule 25 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    $end            reduce using rule 25 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PRINTLN         reduce using rule 25 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PRINT           reduce using rule 25 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    READLINE        reduce using rule 25 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VARIABLE        reduce using rule 25 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    INT             reduce using rule 25 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    LONG            reduce using rule 25 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    FLOAT           reduce using rule 25 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    DOUBLE          reduce using rule 25 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 25 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    RETURN          reduce using rule 25 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    MENOS           shift and go to state 135
    MAS             shift and go to state 136
    MULTIPLICACION  shift and go to state 137
    DIVISION        shift and go to state 138
    MOD             shift and go to state 139

    aritmeticos                    shift and go to state 130

state 89

    (27) asignacion -> VAR VARIABLE IGUAL aritmetica .
    (173) aritmetica -> aritmetica . aritmeticos numeros
    (174) aritmetica -> aritmetica . aritmeticos VARIABLE
    (175) aritmeticos -> . MENOS
    (176) aritmeticos -> . MAS
    (177) aritmeticos -> . MULTIPLICACION
    (178) aritmeticos -> . DIVISION
    (179) aritmeticos -> . MOD

    DEF             reduce using rule 27 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VAR             reduce using rule 27 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 27 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 27 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 27 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 27 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    $end            reduce using rule 27 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 27 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 27 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 27 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 27 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 27 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 27 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 27 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 27 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 27 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 27 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    MENOS           shift and go to state 135
    MAS             shift and go to state 136
    MULTIPLICACION  shift and go to state 137
    DIVISION        shift and go to state 138
    MOD             shift and go to state 139

    aritmeticos                    shift and go to state 147

state 90

    (38) asignacionLong -> VAR VARIABLE IGUAL LONG .
    (95) numeros -> LONG .

    DEF             reduce using rule 38 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    VAR             reduce using rule 38 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    VAL             reduce using rule 38 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    WHILE           reduce using rule 38 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    FOR             reduce using rule 38 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    IF              reduce using rule 38 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    $end            reduce using rule 38 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    PRINTLN         reduce using rule 38 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    PRINT           reduce using rule 38 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    READLINE        reduce using rule 38 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    VARIABLE        reduce using rule 38 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    INT             reduce using rule 38 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    LONG            reduce using rule 38 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    FLOAT           reduce using rule 38 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    DOUBLE          reduce using rule 38 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    LLAVE_D         reduce using rule 38 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    RETURN          reduce using rule 38 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    MENOS           reduce using rule 95 (numeros -> LONG .)
    MAS             reduce using rule 95 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 95 (numeros -> LONG .)
    DIVISION        reduce using rule 95 (numeros -> LONG .)
    MOD             reduce using rule 95 (numeros -> LONG .)


state 91

    (44) asignacionInt -> VAR VARIABLE IGUAL INT .
    (94) numeros -> INT .

    DEF             reduce using rule 44 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    VAR             reduce using rule 44 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    VAL             reduce using rule 44 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    WHILE           reduce using rule 44 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    FOR             reduce using rule 44 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    IF              reduce using rule 44 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    $end            reduce using rule 44 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    PRINTLN         reduce using rule 44 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    PRINT           reduce using rule 44 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    READLINE        reduce using rule 44 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    VARIABLE        reduce using rule 44 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    INT             reduce using rule 44 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    LONG            reduce using rule 44 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    FLOAT           reduce using rule 44 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    DOUBLE          reduce using rule 44 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    LLAVE_D         reduce using rule 44 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    RETURN          reduce using rule 44 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    MENOS           reduce using rule 94 (numeros -> INT .)
    MAS             reduce using rule 94 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 94 (numeros -> INT .)
    DIVISION        reduce using rule 94 (numeros -> INT .)
    MOD             reduce using rule 94 (numeros -> INT .)


state 92

    (50) asignacionFloat -> VAR VARIABLE IGUAL FLOAT .
    (96) numeros -> FLOAT .

    DEF             reduce using rule 50 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    VAR             reduce using rule 50 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    VAL             reduce using rule 50 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    WHILE           reduce using rule 50 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    FOR             reduce using rule 50 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    IF              reduce using rule 50 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    $end            reduce using rule 50 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    PRINTLN         reduce using rule 50 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    PRINT           reduce using rule 50 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    READLINE        reduce using rule 50 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    VARIABLE        reduce using rule 50 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    INT             reduce using rule 50 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    LONG            reduce using rule 50 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    FLOAT           reduce using rule 50 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    DOUBLE          reduce using rule 50 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    LLAVE_D         reduce using rule 50 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    RETURN          reduce using rule 50 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    MENOS           reduce using rule 96 (numeros -> FLOAT .)
    MAS             reduce using rule 96 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 96 (numeros -> FLOAT .)
    DIVISION        reduce using rule 96 (numeros -> FLOAT .)
    MOD             reduce using rule 96 (numeros -> FLOAT .)


state 93

    (56) asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .
    (97) numeros -> DOUBLE .

    DEF             reduce using rule 56 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    VAR             reduce using rule 56 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    VAL             reduce using rule 56 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    WHILE           reduce using rule 56 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    FOR             reduce using rule 56 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    IF              reduce using rule 56 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    $end            reduce using rule 56 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    PRINTLN         reduce using rule 56 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    PRINT           reduce using rule 56 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    READLINE        reduce using rule 56 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    VARIABLE        reduce using rule 56 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    INT             reduce using rule 56 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    LONG            reduce using rule 56 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    FLOAT           reduce using rule 56 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    DOUBLE          reduce using rule 56 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    LLAVE_D         reduce using rule 56 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    RETURN          reduce using rule 56 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    MENOS           reduce using rule 97 (numeros -> DOUBLE .)
    MAS             reduce using rule 97 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 97 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 97 (numeros -> DOUBLE .)
    MOD             reduce using rule 97 (numeros -> DOUBLE .)


state 94

    (62) asignacionString -> VAR VARIABLE IGUAL STRING .

    DEF             reduce using rule 62 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VAR             reduce using rule 62 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VAL             reduce using rule 62 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    WHILE           reduce using rule 62 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    FOR             reduce using rule 62 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    IF              reduce using rule 62 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    $end            reduce using rule 62 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PRINTLN         reduce using rule 62 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PRINT           reduce using rule 62 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    READLINE        reduce using rule 62 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VARIABLE        reduce using rule 62 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    INT             reduce using rule 62 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    LONG            reduce using rule 62 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    FLOAT           reduce using rule 62 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    DOUBLE          reduce using rule 62 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    LLAVE_D         reduce using rule 62 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    RETURN          reduce using rule 62 (asignacionString -> VAR VARIABLE IGUAL STRING .)


state 95

    (68) asignacionChar -> VAR VARIABLE IGUAL CHAR .

    DEF             reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VAR             reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VAL             reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    WHILE           reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    FOR             reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    IF              reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    $end            reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    PRINTLN         reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    PRINT           reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    READLINE        reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VARIABLE        reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    INT             reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    LONG            reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    FLOAT           reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    DOUBLE          reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    LLAVE_D         reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    RETURN          reduce using rule 68 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)


state 96

    (74) asignacionBoolean -> VAR VARIABLE IGUAL booleanos .

    DEF             reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VAR             reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VAL             reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    FOR             reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    IF              reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    $end            reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    PRINTLN         reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    READLINE        reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    INT             reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    LONG            reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    FLOAT           reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    DOUBLE          reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    LLAVE_D         reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    RETURN          reduce using rule 74 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)


state 97

    (118) array -> VAR VARIABLE IGUAL ARRAYCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 179


state 98

    (39) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL LONG
    (42) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 180


state 99

    (45) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS . IGUAL INT
    (48) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 181


state 100

    (51) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL FLOAT
    (54) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 182


state 101

    (57) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL DOUBLE
    (60) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 183


state 102

    (63) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL STRING
    (66) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 184


state 103

    (69) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL CHAR
    (72) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 185


state 104

    (75) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL booleanos
    (78) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 186


state 105

    (119) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 187


state 106

    (26) asignacion -> VAL VARIABLE IGUAL VARIABLE .
    (170) aritmetica -> VARIABLE . aritmeticos numeros
    (172) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (175) aritmeticos -> . MENOS
    (176) aritmeticos -> . MAS
    (177) aritmeticos -> . MULTIPLICACION
    (178) aritmeticos -> . DIVISION
    (179) aritmeticos -> . MOD

    DEF             reduce using rule 26 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VAR             reduce using rule 26 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VAL             reduce using rule 26 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    WHILE           reduce using rule 26 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    FOR             reduce using rule 26 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    IF              reduce using rule 26 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    $end            reduce using rule 26 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PRINTLN         reduce using rule 26 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PRINT           reduce using rule 26 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    READLINE        reduce using rule 26 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VARIABLE        reduce using rule 26 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    INT             reduce using rule 26 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    LONG            reduce using rule 26 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    FLOAT           reduce using rule 26 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    DOUBLE          reduce using rule 26 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 26 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    RETURN          reduce using rule 26 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    MENOS           shift and go to state 135
    MAS             shift and go to state 136
    MULTIPLICACION  shift and go to state 137
    DIVISION        shift and go to state 138
    MOD             shift and go to state 139

    aritmeticos                    shift and go to state 130

state 107

    (28) asignacion -> VAL VARIABLE IGUAL aritmetica .
    (173) aritmetica -> aritmetica . aritmeticos numeros
    (174) aritmetica -> aritmetica . aritmeticos VARIABLE
    (175) aritmeticos -> . MENOS
    (176) aritmeticos -> . MAS
    (177) aritmeticos -> . MULTIPLICACION
    (178) aritmeticos -> . DIVISION
    (179) aritmeticos -> . MOD

    DEF             reduce using rule 28 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VAR             reduce using rule 28 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 28 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 28 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 28 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 28 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    $end            reduce using rule 28 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 28 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 28 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 28 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 28 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 28 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 28 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 28 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 28 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 28 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 28 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    MENOS           shift and go to state 135
    MAS             shift and go to state 136
    MULTIPLICACION  shift and go to state 137
    DIVISION        shift and go to state 138
    MOD             shift and go to state 139

    aritmeticos                    shift and go to state 147

state 108

    (40) asignacionLong -> VAL VARIABLE IGUAL LONG .
    (95) numeros -> LONG .

    DEF             reduce using rule 40 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    VAR             reduce using rule 40 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    VAL             reduce using rule 40 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    WHILE           reduce using rule 40 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    FOR             reduce using rule 40 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    IF              reduce using rule 40 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    $end            reduce using rule 40 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    PRINTLN         reduce using rule 40 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    PRINT           reduce using rule 40 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    READLINE        reduce using rule 40 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    VARIABLE        reduce using rule 40 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    INT             reduce using rule 40 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    LONG            reduce using rule 40 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    FLOAT           reduce using rule 40 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    DOUBLE          reduce using rule 40 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    LLAVE_D         reduce using rule 40 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    RETURN          reduce using rule 40 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    MENOS           reduce using rule 95 (numeros -> LONG .)
    MAS             reduce using rule 95 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 95 (numeros -> LONG .)
    DIVISION        reduce using rule 95 (numeros -> LONG .)
    MOD             reduce using rule 95 (numeros -> LONG .)


state 109

    (46) asignacionInt -> VAL VARIABLE IGUAL INT .
    (94) numeros -> INT .

    DEF             reduce using rule 46 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    VAR             reduce using rule 46 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    VAL             reduce using rule 46 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    WHILE           reduce using rule 46 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    FOR             reduce using rule 46 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    IF              reduce using rule 46 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    $end            reduce using rule 46 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    PRINTLN         reduce using rule 46 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    PRINT           reduce using rule 46 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    READLINE        reduce using rule 46 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    VARIABLE        reduce using rule 46 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    INT             reduce using rule 46 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    LONG            reduce using rule 46 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    FLOAT           reduce using rule 46 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    DOUBLE          reduce using rule 46 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    LLAVE_D         reduce using rule 46 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    RETURN          reduce using rule 46 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    MENOS           reduce using rule 94 (numeros -> INT .)
    MAS             reduce using rule 94 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 94 (numeros -> INT .)
    DIVISION        reduce using rule 94 (numeros -> INT .)
    MOD             reduce using rule 94 (numeros -> INT .)


state 110

    (52) asignacionFloat -> VAL VARIABLE IGUAL FLOAT .
    (96) numeros -> FLOAT .

    DEF             reduce using rule 52 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    VAR             reduce using rule 52 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    VAL             reduce using rule 52 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    WHILE           reduce using rule 52 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    FOR             reduce using rule 52 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    IF              reduce using rule 52 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    $end            reduce using rule 52 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    PRINTLN         reduce using rule 52 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    PRINT           reduce using rule 52 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    READLINE        reduce using rule 52 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    VARIABLE        reduce using rule 52 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    INT             reduce using rule 52 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    LONG            reduce using rule 52 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    FLOAT           reduce using rule 52 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    DOUBLE          reduce using rule 52 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    LLAVE_D         reduce using rule 52 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    RETURN          reduce using rule 52 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    MENOS           reduce using rule 96 (numeros -> FLOAT .)
    MAS             reduce using rule 96 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 96 (numeros -> FLOAT .)
    DIVISION        reduce using rule 96 (numeros -> FLOAT .)
    MOD             reduce using rule 96 (numeros -> FLOAT .)


state 111

    (58) asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .
    (97) numeros -> DOUBLE .

    DEF             reduce using rule 58 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    VAR             reduce using rule 58 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    VAL             reduce using rule 58 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    WHILE           reduce using rule 58 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    FOR             reduce using rule 58 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    IF              reduce using rule 58 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    $end            reduce using rule 58 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    PRINTLN         reduce using rule 58 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    PRINT           reduce using rule 58 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    READLINE        reduce using rule 58 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    VARIABLE        reduce using rule 58 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    INT             reduce using rule 58 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    LONG            reduce using rule 58 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    FLOAT           reduce using rule 58 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    DOUBLE          reduce using rule 58 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    LLAVE_D         reduce using rule 58 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    RETURN          reduce using rule 58 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    MENOS           reduce using rule 97 (numeros -> DOUBLE .)
    MAS             reduce using rule 97 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 97 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 97 (numeros -> DOUBLE .)
    MOD             reduce using rule 97 (numeros -> DOUBLE .)


state 112

    (64) asignacionString -> VAL VARIABLE IGUAL STRING .

    DEF             reduce using rule 64 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VAR             reduce using rule 64 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VAL             reduce using rule 64 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    WHILE           reduce using rule 64 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    FOR             reduce using rule 64 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    IF              reduce using rule 64 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    $end            reduce using rule 64 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PRINTLN         reduce using rule 64 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PRINT           reduce using rule 64 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    READLINE        reduce using rule 64 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VARIABLE        reduce using rule 64 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    INT             reduce using rule 64 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    LONG            reduce using rule 64 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    FLOAT           reduce using rule 64 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    DOUBLE          reduce using rule 64 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    LLAVE_D         reduce using rule 64 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    RETURN          reduce using rule 64 (asignacionString -> VAL VARIABLE IGUAL STRING .)


state 113

    (70) asignacionChar -> VAL VARIABLE IGUAL CHAR .

    DEF             reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VAR             reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VAL             reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    WHILE           reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    FOR             reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    IF              reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    $end            reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    PRINTLN         reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    PRINT           reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    READLINE        reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VARIABLE        reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    INT             reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    LONG            reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    FLOAT           reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    DOUBLE          reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    LLAVE_D         reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    RETURN          reduce using rule 70 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)


state 114

    (76) asignacionBoolean -> VAL VARIABLE IGUAL booleanos .

    DEF             reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VAR             reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VAL             reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    FOR             reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    IF              reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    $end            reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    PRINTLN         reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    READLINE        reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    INT             reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    LONG            reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    FLOAT           reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    DOUBLE          reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    LLAVE_D         reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    RETURN          reduce using rule 76 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)


state 115

    (121) list -> VAL VARIABLE IGUAL LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 188


state 116

    (41) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL LONG
    (43) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 189


state 117

    (47) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS . IGUAL INT
    (49) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 190


state 118

    (53) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL FLOAT
    (55) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 191


state 119

    (59) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL DOUBLE
    (61) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 192


state 120

    (65) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL STRING
    (67) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 193


state 121

    (71) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL CHAR
    (73) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 194


state 122

    (77) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL booleanos
    (79) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 195


state 123

    (122) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS . CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    CORCHETE_I      shift and go to state 196


state 124

    (125) while -> WHILE PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 197


state 125

    (138) condicional -> valorC logicos . condicional
    (138) condicional -> . valorC logicos condicional
    (139) condicional -> . valorC
    (140) valorC -> . VARIABLE
    (141) valorC -> . booleanos
    (142) valorC -> . relacional
    (143) valorC -> . NOT VARIABLE
    (144) valorC -> . NOT booleanos
    (145) valorC -> . NOT relacional
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE
    (149) relacional -> . numeros comparacion numeros
    (150) relacional -> . aritmetica comparacion aritmetica
    (151) relacional -> . aritmetica comparacion numeros
    (152) relacional -> . numeros comparacion aritmetica
    (153) relacional -> . booleanos comparacion booleanos
    (154) relacional -> . STRING comparacion STRING
    (155) relacional -> . CHAR comparacion CHAR
    (156) relacional -> . VARIABLE comparacion numeros
    (157) relacional -> . numeros comparacion VARIABLE
    (158) relacional -> . VARIABLE comparacion booleanos
    (159) relacional -> . booleanos comparacion VARIABLE
    (160) relacional -> . VARIABLE comparacion STRING
    (161) relacional -> . STRING comparacion VARIABLE
    (162) relacional -> . VARIABLE comparacion CHAR
    (163) relacional -> . CHAR comparacion VARIABLE
    (164) relacional -> . VARIABLE comparacion VARIABLE
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 50
    NOT             shift and go to state 53
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55
    STRING          shift and go to state 58
    CHAR            shift and go to state 59
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    valorC                         shift and go to state 49
    condicional                    shift and go to state 198
    booleanos                      shift and go to state 51
    relacional                     shift and go to state 52
    numeros                        shift and go to state 56
    aritmetica                     shift and go to state 57

state 126

    (146) logicos -> AND .

    VARIABLE        reduce using rule 146 (logicos -> AND .)
    NOT             reduce using rule 146 (logicos -> AND .)
    TRUE            reduce using rule 146 (logicos -> AND .)
    FLASE           reduce using rule 146 (logicos -> AND .)
    STRING          reduce using rule 146 (logicos -> AND .)
    CHAR            reduce using rule 146 (logicos -> AND .)
    INT             reduce using rule 146 (logicos -> AND .)
    LONG            reduce using rule 146 (logicos -> AND .)
    FLOAT           reduce using rule 146 (logicos -> AND .)
    DOUBLE          reduce using rule 146 (logicos -> AND .)


state 127

    (147) logicos -> OR .

    VARIABLE        reduce using rule 147 (logicos -> OR .)
    NOT             reduce using rule 147 (logicos -> OR .)
    TRUE            reduce using rule 147 (logicos -> OR .)
    FLASE           reduce using rule 147 (logicos -> OR .)
    STRING          reduce using rule 147 (logicos -> OR .)
    CHAR            reduce using rule 147 (logicos -> OR .)
    INT             reduce using rule 147 (logicos -> OR .)
    LONG            reduce using rule 147 (logicos -> OR .)
    FLOAT           reduce using rule 147 (logicos -> OR .)
    DOUBLE          reduce using rule 147 (logicos -> OR .)


state 128

    (148) logicos -> NOT .

    VARIABLE        reduce using rule 148 (logicos -> NOT .)
    NOT             reduce using rule 148 (logicos -> NOT .)
    TRUE            reduce using rule 148 (logicos -> NOT .)
    FLASE           reduce using rule 148 (logicos -> NOT .)
    STRING          reduce using rule 148 (logicos -> NOT .)
    CHAR            reduce using rule 148 (logicos -> NOT .)
    INT             reduce using rule 148 (logicos -> NOT .)
    LONG            reduce using rule 148 (logicos -> NOT .)
    FLOAT           reduce using rule 148 (logicos -> NOT .)
    DOUBLE          reduce using rule 148 (logicos -> NOT .)


state 129

    (156) relacional -> VARIABLE comparacion . numeros
    (158) relacional -> VARIABLE comparacion . booleanos
    (160) relacional -> VARIABLE comparacion . STRING
    (162) relacional -> VARIABLE comparacion . CHAR
    (164) relacional -> VARIABLE comparacion . VARIABLE
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE

    STRING          shift and go to state 202
    CHAR            shift and go to state 203
    VARIABLE        shift and go to state 199
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55

    numeros                        shift and go to state 200
    booleanos                      shift and go to state 201

state 130

    (170) aritmetica -> VARIABLE aritmeticos . numeros
    (172) aritmetica -> VARIABLE aritmeticos . VARIABLE
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    VARIABLE        shift and go to state 204
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    numeros                        shift and go to state 205

state 131

    (165) comparacion -> IGUAL_COMPARACION .

    STRING          reduce using rule 165 (comparacion -> IGUAL_COMPARACION .)
    CHAR            reduce using rule 165 (comparacion -> IGUAL_COMPARACION .)
    VARIABLE        reduce using rule 165 (comparacion -> IGUAL_COMPARACION .)
    INT             reduce using rule 165 (comparacion -> IGUAL_COMPARACION .)
    LONG            reduce using rule 165 (comparacion -> IGUAL_COMPARACION .)
    FLOAT           reduce using rule 165 (comparacion -> IGUAL_COMPARACION .)
    DOUBLE          reduce using rule 165 (comparacion -> IGUAL_COMPARACION .)
    TRUE            reduce using rule 165 (comparacion -> IGUAL_COMPARACION .)
    FLASE           reduce using rule 165 (comparacion -> IGUAL_COMPARACION .)


state 132

    (166) comparacion -> DIFERENTE .

    STRING          reduce using rule 166 (comparacion -> DIFERENTE .)
    CHAR            reduce using rule 166 (comparacion -> DIFERENTE .)
    VARIABLE        reduce using rule 166 (comparacion -> DIFERENTE .)
    INT             reduce using rule 166 (comparacion -> DIFERENTE .)
    LONG            reduce using rule 166 (comparacion -> DIFERENTE .)
    FLOAT           reduce using rule 166 (comparacion -> DIFERENTE .)
    DOUBLE          reduce using rule 166 (comparacion -> DIFERENTE .)
    TRUE            reduce using rule 166 (comparacion -> DIFERENTE .)
    FLASE           reduce using rule 166 (comparacion -> DIFERENTE .)


state 133

    (167) comparacion -> MAYOR .

    STRING          reduce using rule 167 (comparacion -> MAYOR .)
    CHAR            reduce using rule 167 (comparacion -> MAYOR .)
    VARIABLE        reduce using rule 167 (comparacion -> MAYOR .)
    INT             reduce using rule 167 (comparacion -> MAYOR .)
    LONG            reduce using rule 167 (comparacion -> MAYOR .)
    FLOAT           reduce using rule 167 (comparacion -> MAYOR .)
    DOUBLE          reduce using rule 167 (comparacion -> MAYOR .)
    TRUE            reduce using rule 167 (comparacion -> MAYOR .)
    FLASE           reduce using rule 167 (comparacion -> MAYOR .)


state 134

    (168) comparacion -> MENOR .

    STRING          reduce using rule 168 (comparacion -> MENOR .)
    CHAR            reduce using rule 168 (comparacion -> MENOR .)
    VARIABLE        reduce using rule 168 (comparacion -> MENOR .)
    INT             reduce using rule 168 (comparacion -> MENOR .)
    LONG            reduce using rule 168 (comparacion -> MENOR .)
    FLOAT           reduce using rule 168 (comparacion -> MENOR .)
    DOUBLE          reduce using rule 168 (comparacion -> MENOR .)
    TRUE            reduce using rule 168 (comparacion -> MENOR .)
    FLASE           reduce using rule 168 (comparacion -> MENOR .)


state 135

    (175) aritmeticos -> MENOS .

    VARIABLE        reduce using rule 175 (aritmeticos -> MENOS .)
    INT             reduce using rule 175 (aritmeticos -> MENOS .)
    LONG            reduce using rule 175 (aritmeticos -> MENOS .)
    FLOAT           reduce using rule 175 (aritmeticos -> MENOS .)
    DOUBLE          reduce using rule 175 (aritmeticos -> MENOS .)


state 136

    (176) aritmeticos -> MAS .

    VARIABLE        reduce using rule 176 (aritmeticos -> MAS .)
    INT             reduce using rule 176 (aritmeticos -> MAS .)
    LONG            reduce using rule 176 (aritmeticos -> MAS .)
    FLOAT           reduce using rule 176 (aritmeticos -> MAS .)
    DOUBLE          reduce using rule 176 (aritmeticos -> MAS .)


state 137

    (177) aritmeticos -> MULTIPLICACION .

    VARIABLE        reduce using rule 177 (aritmeticos -> MULTIPLICACION .)
    INT             reduce using rule 177 (aritmeticos -> MULTIPLICACION .)
    LONG            reduce using rule 177 (aritmeticos -> MULTIPLICACION .)
    FLOAT           reduce using rule 177 (aritmeticos -> MULTIPLICACION .)
    DOUBLE          reduce using rule 177 (aritmeticos -> MULTIPLICACION .)


state 138

    (178) aritmeticos -> DIVISION .

    VARIABLE        reduce using rule 178 (aritmeticos -> DIVISION .)
    INT             reduce using rule 178 (aritmeticos -> DIVISION .)
    LONG            reduce using rule 178 (aritmeticos -> DIVISION .)
    FLOAT           reduce using rule 178 (aritmeticos -> DIVISION .)
    DOUBLE          reduce using rule 178 (aritmeticos -> DIVISION .)


state 139

    (179) aritmeticos -> MOD .

    VARIABLE        reduce using rule 179 (aritmeticos -> MOD .)
    INT             reduce using rule 179 (aritmeticos -> MOD .)
    LONG            reduce using rule 179 (aritmeticos -> MOD .)
    FLOAT           reduce using rule 179 (aritmeticos -> MOD .)
    DOUBLE          reduce using rule 179 (aritmeticos -> MOD .)


state 140

    (153) relacional -> booleanos comparacion . booleanos
    (159) relacional -> booleanos comparacion . VARIABLE
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE

    VARIABLE        shift and go to state 207
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55

    booleanos                      shift and go to state 206

state 141

    (143) valorC -> NOT VARIABLE .
    (156) relacional -> VARIABLE . comparacion numeros
    (158) relacional -> VARIABLE . comparacion booleanos
    (160) relacional -> VARIABLE . comparacion STRING
    (162) relacional -> VARIABLE . comparacion CHAR
    (164) relacional -> VARIABLE . comparacion VARIABLE
    (170) aritmetica -> VARIABLE . aritmeticos numeros
    (172) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (165) comparacion -> . IGUAL_COMPARACION
    (166) comparacion -> . DIFERENTE
    (167) comparacion -> . MAYOR
    (168) comparacion -> . MENOR
    (175) aritmeticos -> . MENOS
    (176) aritmeticos -> . MAS
    (177) aritmeticos -> . MULTIPLICACION
    (178) aritmeticos -> . DIVISION
    (179) aritmeticos -> . MOD

    AND             reduce using rule 143 (valorC -> NOT VARIABLE .)
    OR              reduce using rule 143 (valorC -> NOT VARIABLE .)
    NOT             reduce using rule 143 (valorC -> NOT VARIABLE .)
    PAR_D           reduce using rule 143 (valorC -> NOT VARIABLE .)
    IGUAL_COMPARACION shift and go to state 131
    DIFERENTE       shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MENOS           shift and go to state 135
    MAS             shift and go to state 136
    MULTIPLICACION  shift and go to state 137
    DIVISION        shift and go to state 138
    MOD             shift and go to state 139

    comparacion                    shift and go to state 129
    aritmeticos                    shift and go to state 130

state 142

    (144) valorC -> NOT booleanos .
    (153) relacional -> booleanos . comparacion booleanos
    (159) relacional -> booleanos . comparacion VARIABLE
    (165) comparacion -> . IGUAL_COMPARACION
    (166) comparacion -> . DIFERENTE
    (167) comparacion -> . MAYOR
    (168) comparacion -> . MENOR

    AND             reduce using rule 144 (valorC -> NOT booleanos .)
    OR              reduce using rule 144 (valorC -> NOT booleanos .)
    NOT             reduce using rule 144 (valorC -> NOT booleanos .)
    PAR_D           reduce using rule 144 (valorC -> NOT booleanos .)
    IGUAL_COMPARACION shift and go to state 131
    DIFERENTE       shift and go to state 132
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134

    comparacion                    shift and go to state 140

state 143

    (145) valorC -> NOT relacional .

    AND             reduce using rule 145 (valorC -> NOT relacional .)
    OR              reduce using rule 145 (valorC -> NOT relacional .)
    NOT             reduce using rule 145 (valorC -> NOT relacional .)
    PAR_D           reduce using rule 145 (valorC -> NOT relacional .)


state 144

    (149) relacional -> numeros comparacion . numeros
    (152) relacional -> numeros comparacion . aritmetica
    (157) relacional -> numeros comparacion . VARIABLE
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 210
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    numeros                        shift and go to state 208
    aritmetica                     shift and go to state 209

state 145

    (169) aritmetica -> numeros aritmeticos . numeros
    (171) aritmetica -> numeros aritmeticos . VARIABLE
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    VARIABLE        shift and go to state 212
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    numeros                        shift and go to state 211

state 146

    (150) relacional -> aritmetica comparacion . aritmetica
    (151) relacional -> aritmetica comparacion . numeros
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    VARIABLE        shift and go to state 76
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    aritmetica                     shift and go to state 213
    numeros                        shift and go to state 214

state 147

    (173) aritmetica -> aritmetica aritmeticos . numeros
    (174) aritmetica -> aritmetica aritmeticos . VARIABLE
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    VARIABLE        shift and go to state 216
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    numeros                        shift and go to state 215

state 148

    (154) relacional -> STRING comparacion . STRING
    (161) relacional -> STRING comparacion . VARIABLE

    STRING          shift and go to state 217
    VARIABLE        shift and go to state 218


state 149

    (155) relacional -> CHAR comparacion . CHAR
    (163) relacional -> CHAR comparacion . VARIABLE

    CHAR            shift and go to state 219
    VARIABLE        shift and go to state 220


state 150

    (126) for -> FOR PAR_I VAR VARIABLE . ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> FOR PAR_I VAR VARIABLE . ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> FOR PAR_I VAR VARIABLE . ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    ITERATOR        shift and go to state 221


state 151

    (127) for -> FOR PAR_I VARIABLE ITERATOR . VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> FOR PAR_I VARIABLE ITERATOR . INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> FOR PAR_I VARIABLE ITERATOR . INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 222
    INT             shift and go to state 223


state 152

    (132) if -> IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 224


state 153

    (135) elseif -> ELSE IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 225


state 154

    (136) else -> ELSE LLAVE_I contenido LLAVE_D .

    ELSE            reduce using rule 136 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 136 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 136 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 136 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 136 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 136 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 136 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 136 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 136 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 136 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 136 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 136 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 136 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 136 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 136 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 136 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 136 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 136 (else -> ELSE LLAVE_I contenido LLAVE_D .)


state 155

    (18) contenido -> asignacion contenido .

    LLAVE_D         reduce using rule 18 (contenido -> asignacion contenido .)
    RETURN          reduce using rule 18 (contenido -> asignacion contenido .)


state 156

    (19) contenido -> impresion contenido .

    LLAVE_D         reduce using rule 19 (contenido -> impresion contenido .)
    RETURN          reduce using rule 19 (contenido -> impresion contenido .)


state 157

    (20) contenido -> entrada contenido .

    LLAVE_D         reduce using rule 20 (contenido -> entrada contenido .)
    RETURN          reduce using rule 20 (contenido -> entrada contenido .)


state 158

    (21) contenido -> while contenido .

    LLAVE_D         reduce using rule 21 (contenido -> while contenido .)
    RETURN          reduce using rule 21 (contenido -> while contenido .)


state 159

    (22) contenido -> for contenido .

    LLAVE_D         reduce using rule 22 (contenido -> for contenido .)
    RETURN          reduce using rule 22 (contenido -> for contenido .)


state 160

    (23) contenido -> if contenido .

    LLAVE_D         reduce using rule 23 (contenido -> if contenido .)
    RETURN          reduce using rule 23 (contenido -> if contenido .)


state 161

    (24) contenido -> aritmetica contenido .

    LLAVE_D         reduce using rule 24 (contenido -> aritmetica contenido .)
    RETURN          reduce using rule 24 (contenido -> aritmetica contenido .)


state 162

    (113) impresion -> PRINTLN PAR_I . valorI PAR_D
    (115) valorI -> . valor MAS valorI
    (116) valorI -> . valor
    (87) valor -> . STRING
    (88) valor -> . CHAR
    (89) valor -> . VARIABLE
    (90) valor -> . numeros
    (91) valor -> . booleanos
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE

    STRING          shift and go to state 228
    CHAR            shift and go to state 229
    VARIABLE        shift and go to state 230
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55

    valorI                         shift and go to state 226
    valor                          shift and go to state 227
    numeros                        shift and go to state 231
    booleanos                      shift and go to state 232

state 163

    (114) impresion -> PRINT PAR_I . valorI PAR_D
    (115) valorI -> . valor MAS valorI
    (116) valorI -> . valor
    (87) valor -> . STRING
    (88) valor -> . CHAR
    (89) valor -> . VARIABLE
    (90) valor -> . numeros
    (91) valor -> . booleanos
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE

    STRING          shift and go to state 228
    CHAR            shift and go to state 229
    VARIABLE        shift and go to state 230
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55

    valorI                         shift and go to state 233
    valor                          shift and go to state 227
    numeros                        shift and go to state 231
    booleanos                      shift and go to state 232

state 164

    (117) entrada -> READLINE PAR_I . PAR_D

    PAR_D           shift and go to state 234


state 165

    (98) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I . contenido LLAVE_D
    (11) contenido -> . asignacion
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . if
    (17) contenido -> . aritmetica
    (18) contenido -> . asignacion contenido
    (19) contenido -> . impresion contenido
    (20) contenido -> . entrada contenido
    (21) contenido -> . while contenido
    (22) contenido -> . for contenido
    (23) contenido -> . if contenido
    (24) contenido -> . aritmetica contenido
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (113) impresion -> . PRINTLN PAR_I valorI PAR_D
    (114) impresion -> . PRINT PAR_I valorI PAR_D
    (117) entrada -> . READLINE PAR_I PAR_D
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    VAR             shift and go to state 8
    VAL             shift and go to state 9
    PRINTLN         shift and go to state 77
    PRINT           shift and go to state 78
    READLINE        shift and go to state 79
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21
    VARIABLE        shift and go to state 76
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    contenido                      shift and go to state 235
    asignacion                     shift and go to state 69
    impresion                      shift and go to state 70
    entrada                        shift and go to state 71
    while                          shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    aritmetica                     shift and go to state 75
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18
    numeros                        shift and go to state 80

state 166

    (105) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN valor LLAVE_D

    LLAVE_I         shift and go to state 236


state 167

    (106) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN valor LLAVE_D

    LLAVE_I         shift and go to state 237


state 168

    (107) dectipo -> DOBLE_PUNTO tipo .

    IGUAL           reduce using rule 107 (dectipo -> DOBLE_PUNTO tipo .)


state 169

    (108) dectipoTupla -> DOBLE_PUNTO PAR_I . tipos PAR_D
    (109) tipos -> . tipo
    (110) tipos -> . tipo tiposentry
    (80) tipo -> . CHARCLASS
    (81) tipo -> . STRINGCLASS
    (82) tipo -> . BOOLCLASS
    (83) tipo -> . INTCLASS
    (84) tipo -> . LONGCLASS
    (85) tipo -> . DOUBLECLASS
    (86) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 170
    STRINGCLASS     shift and go to state 171
    BOOLCLASS       shift and go to state 172
    INTCLASS        shift and go to state 173
    LONGCLASS       shift and go to state 174
    DOUBLECLASS     shift and go to state 175
    FLOATCLASS      shift and go to state 176

    tipos                          shift and go to state 238
    tipo                           shift and go to state 239

state 170

    (80) tipo -> CHARCLASS .

    IGUAL           reduce using rule 80 (tipo -> CHARCLASS .)
    COMA            reduce using rule 80 (tipo -> CHARCLASS .)
    PAR_D           reduce using rule 80 (tipo -> CHARCLASS .)
    CORCHETE_D      reduce using rule 80 (tipo -> CHARCLASS .)


state 171

    (81) tipo -> STRINGCLASS .

    IGUAL           reduce using rule 81 (tipo -> STRINGCLASS .)
    COMA            reduce using rule 81 (tipo -> STRINGCLASS .)
    PAR_D           reduce using rule 81 (tipo -> STRINGCLASS .)
    CORCHETE_D      reduce using rule 81 (tipo -> STRINGCLASS .)


state 172

    (82) tipo -> BOOLCLASS .

    IGUAL           reduce using rule 82 (tipo -> BOOLCLASS .)
    COMA            reduce using rule 82 (tipo -> BOOLCLASS .)
    PAR_D           reduce using rule 82 (tipo -> BOOLCLASS .)
    CORCHETE_D      reduce using rule 82 (tipo -> BOOLCLASS .)


state 173

    (83) tipo -> INTCLASS .

    IGUAL           reduce using rule 83 (tipo -> INTCLASS .)
    COMA            reduce using rule 83 (tipo -> INTCLASS .)
    PAR_D           reduce using rule 83 (tipo -> INTCLASS .)
    CORCHETE_D      reduce using rule 83 (tipo -> INTCLASS .)


state 174

    (84) tipo -> LONGCLASS .

    IGUAL           reduce using rule 84 (tipo -> LONGCLASS .)
    COMA            reduce using rule 84 (tipo -> LONGCLASS .)
    PAR_D           reduce using rule 84 (tipo -> LONGCLASS .)
    CORCHETE_D      reduce using rule 84 (tipo -> LONGCLASS .)


state 175

    (85) tipo -> DOUBLECLASS .

    IGUAL           reduce using rule 85 (tipo -> DOUBLECLASS .)
    COMA            reduce using rule 85 (tipo -> DOUBLECLASS .)
    PAR_D           reduce using rule 85 (tipo -> DOUBLECLASS .)
    CORCHETE_D      reduce using rule 85 (tipo -> DOUBLECLASS .)


state 176

    (86) tipo -> FLOATCLASS .

    IGUAL           reduce using rule 86 (tipo -> FLOATCLASS .)
    COMA            reduce using rule 86 (tipo -> FLOATCLASS .)
    PAR_D           reduce using rule 86 (tipo -> FLOATCLASS .)
    CORCHETE_D      reduce using rule 86 (tipo -> FLOATCLASS .)


state 177

    (103) parametros -> PAR_I declaracion PAR_D .
    (104) parametros -> PAR_I declaracion PAR_D . parametros
    (103) parametros -> . PAR_I declaracion PAR_D
    (104) parametros -> . PAR_I declaracion PAR_D parametros

    IGUAL           reduce using rule 103 (parametros -> PAR_I declaracion PAR_D .)
    DOBLE_PUNTO     reduce using rule 103 (parametros -> PAR_I declaracion PAR_D .)
    PAR_I           shift and go to state 240

    parametros                     shift and go to state 241

state 178

    (99) declaracion -> VARIABLE DOBLE_PUNTO . tipo
    (100) declaracion -> VARIABLE DOBLE_PUNTO . tipo IGUAL valor
    (80) tipo -> . CHARCLASS
    (81) tipo -> . STRINGCLASS
    (82) tipo -> . BOOLCLASS
    (83) tipo -> . INTCLASS
    (84) tipo -> . LONGCLASS
    (85) tipo -> . DOUBLECLASS
    (86) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 170
    STRINGCLASS     shift and go to state 171
    BOOLCLASS       shift and go to state 172
    INTCLASS        shift and go to state 173
    LONGCLASS       shift and go to state 174
    DOUBLECLASS     shift and go to state 175
    FLOATCLASS      shift and go to state 176

    tipo                           shift and go to state 242

state 179

    (118) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (123) valores -> . valor
    (124) valores -> . valor COMA valores
    (87) valor -> . STRING
    (88) valor -> . CHAR
    (89) valor -> . VARIABLE
    (90) valor -> . numeros
    (91) valor -> . booleanos
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE

    STRING          shift and go to state 228
    CHAR            shift and go to state 229
    VARIABLE        shift and go to state 230
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55

    valores                        shift and go to state 243
    valor                          shift and go to state 244
    numeros                        shift and go to state 231
    booleanos                      shift and go to state 232

state 180

    (39) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . LONG
    (42) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . VARIABLE

    LONG            shift and go to state 246
    VARIABLE        shift and go to state 245


state 181

    (45) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL . INT
    (48) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL . VARIABLE

    INT             shift and go to state 248
    VARIABLE        shift and go to state 247


state 182

    (51) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . FLOAT
    (54) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . VARIABLE

    FLOAT           shift and go to state 250
    VARIABLE        shift and go to state 249


state 183

    (57) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . DOUBLE
    (60) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . VARIABLE

    DOUBLE          shift and go to state 252
    VARIABLE        shift and go to state 251


state 184

    (63) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . STRING
    (66) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . VARIABLE

    STRING          shift and go to state 254
    VARIABLE        shift and go to state 253


state 185

    (69) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . CHAR
    (72) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . VARIABLE

    CHAR            shift and go to state 256
    VARIABLE        shift and go to state 255


state 186

    (75) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . booleanos
    (78) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . VARIABLE
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE

    VARIABLE        shift and go to state 257
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55

    booleanos                      shift and go to state 258

state 187

    (119) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (80) tipo -> . CHARCLASS
    (81) tipo -> . STRINGCLASS
    (82) tipo -> . BOOLCLASS
    (83) tipo -> . INTCLASS
    (84) tipo -> . LONGCLASS
    (85) tipo -> . DOUBLECLASS
    (86) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 170
    STRINGCLASS     shift and go to state 171
    BOOLCLASS       shift and go to state 172
    INTCLASS        shift and go to state 173
    LONGCLASS       shift and go to state 174
    DOUBLECLASS     shift and go to state 175
    FLOATCLASS      shift and go to state 176

    tipo                           shift and go to state 259

state 188

    (121) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I . valores PAR_D
    (123) valores -> . valor
    (124) valores -> . valor COMA valores
    (87) valor -> . STRING
    (88) valor -> . CHAR
    (89) valor -> . VARIABLE
    (90) valor -> . numeros
    (91) valor -> . booleanos
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE

    STRING          shift and go to state 228
    CHAR            shift and go to state 229
    VARIABLE        shift and go to state 230
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55

    valores                        shift and go to state 260
    valor                          shift and go to state 244
    numeros                        shift and go to state 231
    booleanos                      shift and go to state 232

state 189

    (41) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . LONG
    (43) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . VARIABLE

    LONG            shift and go to state 262
    VARIABLE        shift and go to state 261


state 190

    (47) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL . INT
    (49) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL . VARIABLE

    INT             shift and go to state 264
    VARIABLE        shift and go to state 263


state 191

    (53) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . FLOAT
    (55) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . VARIABLE

    FLOAT           shift and go to state 266
    VARIABLE        shift and go to state 265


state 192

    (59) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . DOUBLE
    (61) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . VARIABLE

    DOUBLE          shift and go to state 268
    VARIABLE        shift and go to state 267


state 193

    (65) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . STRING
    (67) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . VARIABLE

    STRING          shift and go to state 270
    VARIABLE        shift and go to state 269


state 194

    (71) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . CHAR
    (73) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . VARIABLE

    CHAR            shift and go to state 272
    VARIABLE        shift and go to state 271


state 195

    (77) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . booleanos
    (79) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . VARIABLE
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE

    VARIABLE        shift and go to state 273
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55

    booleanos                      shift and go to state 274

state 196

    (122) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I . tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (80) tipo -> . CHARCLASS
    (81) tipo -> . STRINGCLASS
    (82) tipo -> . BOOLCLASS
    (83) tipo -> . INTCLASS
    (84) tipo -> . LONGCLASS
    (85) tipo -> . DOUBLECLASS
    (86) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 170
    STRINGCLASS     shift and go to state 171
    BOOLCLASS       shift and go to state 172
    INTCLASS        shift and go to state 173
    LONGCLASS       shift and go to state 174
    DOUBLECLASS     shift and go to state 175
    FLOATCLASS      shift and go to state 176

    tipo                           shift and go to state 275

state 197

    (125) while -> WHILE PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (11) contenido -> . asignacion
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . if
    (17) contenido -> . aritmetica
    (18) contenido -> . asignacion contenido
    (19) contenido -> . impresion contenido
    (20) contenido -> . entrada contenido
    (21) contenido -> . while contenido
    (22) contenido -> . for contenido
    (23) contenido -> . if contenido
    (24) contenido -> . aritmetica contenido
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (113) impresion -> . PRINTLN PAR_I valorI PAR_D
    (114) impresion -> . PRINT PAR_I valorI PAR_D
    (117) entrada -> . READLINE PAR_I PAR_D
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    VAR             shift and go to state 8
    VAL             shift and go to state 9
    PRINTLN         shift and go to state 77
    PRINT           shift and go to state 78
    READLINE        shift and go to state 79
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21
    VARIABLE        shift and go to state 76
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    contenido                      shift and go to state 276
    asignacion                     shift and go to state 69
    impresion                      shift and go to state 70
    entrada                        shift and go to state 71
    while                          shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    aritmetica                     shift and go to state 75
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18
    numeros                        shift and go to state 80

state 198

    (138) condicional -> valorC logicos condicional .

    PAR_D           reduce using rule 138 (condicional -> valorC logicos condicional .)


state 199

    (164) relacional -> VARIABLE comparacion VARIABLE .

    AND             reduce using rule 164 (relacional -> VARIABLE comparacion VARIABLE .)
    OR              reduce using rule 164 (relacional -> VARIABLE comparacion VARIABLE .)
    NOT             reduce using rule 164 (relacional -> VARIABLE comparacion VARIABLE .)
    PAR_D           reduce using rule 164 (relacional -> VARIABLE comparacion VARIABLE .)


state 200

    (156) relacional -> VARIABLE comparacion numeros .

    AND             reduce using rule 156 (relacional -> VARIABLE comparacion numeros .)
    OR              reduce using rule 156 (relacional -> VARIABLE comparacion numeros .)
    NOT             reduce using rule 156 (relacional -> VARIABLE comparacion numeros .)
    PAR_D           reduce using rule 156 (relacional -> VARIABLE comparacion numeros .)


state 201

    (158) relacional -> VARIABLE comparacion booleanos .

    AND             reduce using rule 158 (relacional -> VARIABLE comparacion booleanos .)
    OR              reduce using rule 158 (relacional -> VARIABLE comparacion booleanos .)
    NOT             reduce using rule 158 (relacional -> VARIABLE comparacion booleanos .)
    PAR_D           reduce using rule 158 (relacional -> VARIABLE comparacion booleanos .)


state 202

    (160) relacional -> VARIABLE comparacion STRING .

    AND             reduce using rule 160 (relacional -> VARIABLE comparacion STRING .)
    OR              reduce using rule 160 (relacional -> VARIABLE comparacion STRING .)
    NOT             reduce using rule 160 (relacional -> VARIABLE comparacion STRING .)
    PAR_D           reduce using rule 160 (relacional -> VARIABLE comparacion STRING .)


state 203

    (162) relacional -> VARIABLE comparacion CHAR .

    AND             reduce using rule 162 (relacional -> VARIABLE comparacion CHAR .)
    OR              reduce using rule 162 (relacional -> VARIABLE comparacion CHAR .)
    NOT             reduce using rule 162 (relacional -> VARIABLE comparacion CHAR .)
    PAR_D           reduce using rule 162 (relacional -> VARIABLE comparacion CHAR .)


state 204

    (172) aritmetica -> VARIABLE aritmeticos VARIABLE .

    IGUAL_COMPARACION reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MAYOR           reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MENOR           reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MENOS           reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MAS             reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DIVISION        reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MOD             reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VAR             reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VAL             reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PRINT           reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    READLINE        reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    WHILE           reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    FOR             reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    IF              reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    INT             reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    LONG            reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    FLOAT           reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DEF             reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    $end            reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    RETURN          reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    AND             reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    OR              reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    NOT             reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PAR_D           reduce using rule 172 (aritmetica -> VARIABLE aritmeticos VARIABLE .)


state 205

    (170) aritmetica -> VARIABLE aritmeticos numeros .

    IGUAL_COMPARACION reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    DIFERENTE       reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    MAYOR           reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    MENOR           reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    MENOS           reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    MAS             reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    DIVISION        reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    MOD             reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    VAR             reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    VAL             reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    PRINTLN         reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    PRINT           reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    READLINE        reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    WHILE           reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    FOR             reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    IF              reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    VARIABLE        reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    INT             reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    LONG            reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    FLOAT           reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    DOUBLE          reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    LLAVE_D         reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    DEF             reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    $end            reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    RETURN          reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    AND             reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    OR              reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    NOT             reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)
    PAR_D           reduce using rule 170 (aritmetica -> VARIABLE aritmeticos numeros .)


state 206

    (153) relacional -> booleanos comparacion booleanos .

    AND             reduce using rule 153 (relacional -> booleanos comparacion booleanos .)
    OR              reduce using rule 153 (relacional -> booleanos comparacion booleanos .)
    NOT             reduce using rule 153 (relacional -> booleanos comparacion booleanos .)
    PAR_D           reduce using rule 153 (relacional -> booleanos comparacion booleanos .)


state 207

    (159) relacional -> booleanos comparacion VARIABLE .

    AND             reduce using rule 159 (relacional -> booleanos comparacion VARIABLE .)
    OR              reduce using rule 159 (relacional -> booleanos comparacion VARIABLE .)
    NOT             reduce using rule 159 (relacional -> booleanos comparacion VARIABLE .)
    PAR_D           reduce using rule 159 (relacional -> booleanos comparacion VARIABLE .)


state 208

    (149) relacional -> numeros comparacion numeros .
    (169) aritmetica -> numeros . aritmeticos numeros
    (171) aritmetica -> numeros . aritmeticos VARIABLE
    (175) aritmeticos -> . MENOS
    (176) aritmeticos -> . MAS
    (177) aritmeticos -> . MULTIPLICACION
    (178) aritmeticos -> . DIVISION
    (179) aritmeticos -> . MOD

    AND             reduce using rule 149 (relacional -> numeros comparacion numeros .)
    OR              reduce using rule 149 (relacional -> numeros comparacion numeros .)
    NOT             reduce using rule 149 (relacional -> numeros comparacion numeros .)
    PAR_D           reduce using rule 149 (relacional -> numeros comparacion numeros .)
    MENOS           shift and go to state 135
    MAS             shift and go to state 136
    MULTIPLICACION  shift and go to state 137
    DIVISION        shift and go to state 138
    MOD             shift and go to state 139

    aritmeticos                    shift and go to state 145

state 209

    (152) relacional -> numeros comparacion aritmetica .
    (173) aritmetica -> aritmetica . aritmeticos numeros
    (174) aritmetica -> aritmetica . aritmeticos VARIABLE
    (175) aritmeticos -> . MENOS
    (176) aritmeticos -> . MAS
    (177) aritmeticos -> . MULTIPLICACION
    (178) aritmeticos -> . DIVISION
    (179) aritmeticos -> . MOD

    AND             reduce using rule 152 (relacional -> numeros comparacion aritmetica .)
    OR              reduce using rule 152 (relacional -> numeros comparacion aritmetica .)
    NOT             reduce using rule 152 (relacional -> numeros comparacion aritmetica .)
    PAR_D           reduce using rule 152 (relacional -> numeros comparacion aritmetica .)
    MENOS           shift and go to state 135
    MAS             shift and go to state 136
    MULTIPLICACION  shift and go to state 137
    DIVISION        shift and go to state 138
    MOD             shift and go to state 139

    aritmeticos                    shift and go to state 147

state 210

    (157) relacional -> numeros comparacion VARIABLE .
    (170) aritmetica -> VARIABLE . aritmeticos numeros
    (172) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (175) aritmeticos -> . MENOS
    (176) aritmeticos -> . MAS
    (177) aritmeticos -> . MULTIPLICACION
    (178) aritmeticos -> . DIVISION
    (179) aritmeticos -> . MOD

    AND             reduce using rule 157 (relacional -> numeros comparacion VARIABLE .)
    OR              reduce using rule 157 (relacional -> numeros comparacion VARIABLE .)
    NOT             reduce using rule 157 (relacional -> numeros comparacion VARIABLE .)
    PAR_D           reduce using rule 157 (relacional -> numeros comparacion VARIABLE .)
    MENOS           shift and go to state 135
    MAS             shift and go to state 136
    MULTIPLICACION  shift and go to state 137
    DIVISION        shift and go to state 138
    MOD             shift and go to state 139

    aritmeticos                    shift and go to state 130

state 211

    (169) aritmetica -> numeros aritmeticos numeros .

    IGUAL_COMPARACION reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    DIFERENTE       reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    MAYOR           reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    MENOR           reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    MENOS           reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    MAS             reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    DIVISION        reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    MOD             reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    VAR             reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    VAL             reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    PRINTLN         reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    PRINT           reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    READLINE        reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    WHILE           reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    FOR             reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    IF              reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    VARIABLE        reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    INT             reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    LONG            reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    FLOAT           reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    DOUBLE          reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    LLAVE_D         reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    DEF             reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    $end            reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    RETURN          reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    AND             reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    OR              reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    NOT             reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)
    PAR_D           reduce using rule 169 (aritmetica -> numeros aritmeticos numeros .)


state 212

    (171) aritmetica -> numeros aritmeticos VARIABLE .

    IGUAL_COMPARACION reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    MAYOR           reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    MENOR           reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    MENOS           reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    MAS             reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    DIVISION        reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    MOD             reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    VAR             reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    VAL             reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    PRINT           reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    READLINE        reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    WHILE           reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    FOR             reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    IF              reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    INT             reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    LONG            reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    FLOAT           reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    DEF             reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    $end            reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    RETURN          reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    AND             reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    OR              reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    NOT             reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)
    PAR_D           reduce using rule 171 (aritmetica -> numeros aritmeticos VARIABLE .)


state 213

    (150) relacional -> aritmetica comparacion aritmetica .
    (173) aritmetica -> aritmetica . aritmeticos numeros
    (174) aritmetica -> aritmetica . aritmeticos VARIABLE
    (175) aritmeticos -> . MENOS
    (176) aritmeticos -> . MAS
    (177) aritmeticos -> . MULTIPLICACION
    (178) aritmeticos -> . DIVISION
    (179) aritmeticos -> . MOD

    AND             reduce using rule 150 (relacional -> aritmetica comparacion aritmetica .)
    OR              reduce using rule 150 (relacional -> aritmetica comparacion aritmetica .)
    NOT             reduce using rule 150 (relacional -> aritmetica comparacion aritmetica .)
    PAR_D           reduce using rule 150 (relacional -> aritmetica comparacion aritmetica .)
    MENOS           shift and go to state 135
    MAS             shift and go to state 136
    MULTIPLICACION  shift and go to state 137
    DIVISION        shift and go to state 138
    MOD             shift and go to state 139

    aritmeticos                    shift and go to state 147

state 214

    (151) relacional -> aritmetica comparacion numeros .
    (169) aritmetica -> numeros . aritmeticos numeros
    (171) aritmetica -> numeros . aritmeticos VARIABLE
    (175) aritmeticos -> . MENOS
    (176) aritmeticos -> . MAS
    (177) aritmeticos -> . MULTIPLICACION
    (178) aritmeticos -> . DIVISION
    (179) aritmeticos -> . MOD

    AND             reduce using rule 151 (relacional -> aritmetica comparacion numeros .)
    OR              reduce using rule 151 (relacional -> aritmetica comparacion numeros .)
    NOT             reduce using rule 151 (relacional -> aritmetica comparacion numeros .)
    PAR_D           reduce using rule 151 (relacional -> aritmetica comparacion numeros .)
    MENOS           shift and go to state 135
    MAS             shift and go to state 136
    MULTIPLICACION  shift and go to state 137
    DIVISION        shift and go to state 138
    MOD             shift and go to state 139

    aritmeticos                    shift and go to state 145

state 215

    (173) aritmetica -> aritmetica aritmeticos numeros .

    IGUAL_COMPARACION reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    DIFERENTE       reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    MAYOR           reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    MENOR           reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    MENOS           reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    MAS             reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    DIVISION        reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    MOD             reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    VAR             reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    VAL             reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    PRINTLN         reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    PRINT           reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    READLINE        reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    WHILE           reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    FOR             reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    IF              reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    VARIABLE        reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    INT             reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    LONG            reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    FLOAT           reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    DOUBLE          reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    LLAVE_D         reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    DEF             reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    $end            reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    RETURN          reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    AND             reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    OR              reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    NOT             reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)
    PAR_D           reduce using rule 173 (aritmetica -> aritmetica aritmeticos numeros .)


state 216

    (174) aritmetica -> aritmetica aritmeticos VARIABLE .

    IGUAL_COMPARACION reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MAYOR           reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MENOR           reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MENOS           reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MAS             reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DIVISION        reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MOD             reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VAR             reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VAL             reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PRINT           reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    READLINE        reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    WHILE           reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    FOR             reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    IF              reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    INT             reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    LONG            reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    FLOAT           reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DEF             reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    $end            reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    RETURN          reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    AND             reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    OR              reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    NOT             reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PAR_D           reduce using rule 174 (aritmetica -> aritmetica aritmeticos VARIABLE .)


state 217

    (154) relacional -> STRING comparacion STRING .

    AND             reduce using rule 154 (relacional -> STRING comparacion STRING .)
    OR              reduce using rule 154 (relacional -> STRING comparacion STRING .)
    NOT             reduce using rule 154 (relacional -> STRING comparacion STRING .)
    PAR_D           reduce using rule 154 (relacional -> STRING comparacion STRING .)


state 218

    (161) relacional -> STRING comparacion VARIABLE .

    AND             reduce using rule 161 (relacional -> STRING comparacion VARIABLE .)
    OR              reduce using rule 161 (relacional -> STRING comparacion VARIABLE .)
    NOT             reduce using rule 161 (relacional -> STRING comparacion VARIABLE .)
    PAR_D           reduce using rule 161 (relacional -> STRING comparacion VARIABLE .)


state 219

    (155) relacional -> CHAR comparacion CHAR .

    AND             reduce using rule 155 (relacional -> CHAR comparacion CHAR .)
    OR              reduce using rule 155 (relacional -> CHAR comparacion CHAR .)
    NOT             reduce using rule 155 (relacional -> CHAR comparacion CHAR .)
    PAR_D           reduce using rule 155 (relacional -> CHAR comparacion CHAR .)


state 220

    (163) relacional -> CHAR comparacion VARIABLE .

    AND             reduce using rule 163 (relacional -> CHAR comparacion VARIABLE .)
    OR              reduce using rule 163 (relacional -> CHAR comparacion VARIABLE .)
    NOT             reduce using rule 163 (relacional -> CHAR comparacion VARIABLE .)
    PAR_D           reduce using rule 163 (relacional -> CHAR comparacion VARIABLE .)


state 221

    (126) for -> FOR PAR_I VAR VARIABLE ITERATOR . VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> FOR PAR_I VAR VARIABLE ITERATOR . INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> FOR PAR_I VAR VARIABLE ITERATOR . INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 277
    INT             shift and go to state 278


state 222

    (127) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 279


state 223

    (128) for -> FOR PAR_I VARIABLE ITERATOR INT . TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> FOR PAR_I VARIABLE ITERATOR INT . UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    TO              shift and go to state 280
    UNTIL           shift and go to state 281


state 224

    (132) if -> IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (11) contenido -> . asignacion
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . if
    (17) contenido -> . aritmetica
    (18) contenido -> . asignacion contenido
    (19) contenido -> . impresion contenido
    (20) contenido -> . entrada contenido
    (21) contenido -> . while contenido
    (22) contenido -> . for contenido
    (23) contenido -> . if contenido
    (24) contenido -> . aritmetica contenido
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (113) impresion -> . PRINTLN PAR_I valorI PAR_D
    (114) impresion -> . PRINT PAR_I valorI PAR_D
    (117) entrada -> . READLINE PAR_I PAR_D
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    VAR             shift and go to state 8
    VAL             shift and go to state 9
    PRINTLN         shift and go to state 77
    PRINT           shift and go to state 78
    READLINE        shift and go to state 79
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21
    VARIABLE        shift and go to state 76
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    contenido                      shift and go to state 282
    asignacion                     shift and go to state 69
    impresion                      shift and go to state 70
    entrada                        shift and go to state 71
    while                          shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    aritmetica                     shift and go to state 75
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18
    numeros                        shift and go to state 80

state 225

    (135) elseif -> ELSE IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 283


state 226

    (113) impresion -> PRINTLN PAR_I valorI . PAR_D

    PAR_D           shift and go to state 284


state 227

    (115) valorI -> valor . MAS valorI
    (116) valorI -> valor .

    MAS             shift and go to state 285
    PAR_D           reduce using rule 116 (valorI -> valor .)


state 228

    (87) valor -> STRING .

    MAS             reduce using rule 87 (valor -> STRING .)
    PAR_D           reduce using rule 87 (valor -> STRING .)
    COMA            reduce using rule 87 (valor -> STRING .)
    LLAVE_D         reduce using rule 87 (valor -> STRING .)


state 229

    (88) valor -> CHAR .

    MAS             reduce using rule 88 (valor -> CHAR .)
    PAR_D           reduce using rule 88 (valor -> CHAR .)
    COMA            reduce using rule 88 (valor -> CHAR .)
    LLAVE_D         reduce using rule 88 (valor -> CHAR .)


state 230

    (89) valor -> VARIABLE .

    MAS             reduce using rule 89 (valor -> VARIABLE .)
    PAR_D           reduce using rule 89 (valor -> VARIABLE .)
    COMA            reduce using rule 89 (valor -> VARIABLE .)
    LLAVE_D         reduce using rule 89 (valor -> VARIABLE .)


state 231

    (90) valor -> numeros .

    MAS             reduce using rule 90 (valor -> numeros .)
    PAR_D           reduce using rule 90 (valor -> numeros .)
    COMA            reduce using rule 90 (valor -> numeros .)
    LLAVE_D         reduce using rule 90 (valor -> numeros .)


state 232

    (91) valor -> booleanos .

    MAS             reduce using rule 91 (valor -> booleanos .)
    PAR_D           reduce using rule 91 (valor -> booleanos .)
    COMA            reduce using rule 91 (valor -> booleanos .)
    LLAVE_D         reduce using rule 91 (valor -> booleanos .)


state 233

    (114) impresion -> PRINT PAR_I valorI . PAR_D

    PAR_D           shift and go to state 286


state 234

    (117) entrada -> READLINE PAR_I PAR_D .

    VAR             reduce using rule 117 (entrada -> READLINE PAR_I PAR_D .)
    VAL             reduce using rule 117 (entrada -> READLINE PAR_I PAR_D .)
    PRINTLN         reduce using rule 117 (entrada -> READLINE PAR_I PAR_D .)
    PRINT           reduce using rule 117 (entrada -> READLINE PAR_I PAR_D .)
    READLINE        reduce using rule 117 (entrada -> READLINE PAR_I PAR_D .)
    WHILE           reduce using rule 117 (entrada -> READLINE PAR_I PAR_D .)
    FOR             reduce using rule 117 (entrada -> READLINE PAR_I PAR_D .)
    IF              reduce using rule 117 (entrada -> READLINE PAR_I PAR_D .)
    VARIABLE        reduce using rule 117 (entrada -> READLINE PAR_I PAR_D .)
    INT             reduce using rule 117 (entrada -> READLINE PAR_I PAR_D .)
    LONG            reduce using rule 117 (entrada -> READLINE PAR_I PAR_D .)
    FLOAT           reduce using rule 117 (entrada -> READLINE PAR_I PAR_D .)
    DOUBLE          reduce using rule 117 (entrada -> READLINE PAR_I PAR_D .)
    LLAVE_D         reduce using rule 117 (entrada -> READLINE PAR_I PAR_D .)
    RETURN          reduce using rule 117 (entrada -> READLINE PAR_I PAR_D .)


state 235

    (98) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 287


state 236

    (105) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN valor LLAVE_D
    (11) contenido -> . asignacion
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . if
    (17) contenido -> . aritmetica
    (18) contenido -> . asignacion contenido
    (19) contenido -> . impresion contenido
    (20) contenido -> . entrada contenido
    (21) contenido -> . while contenido
    (22) contenido -> . for contenido
    (23) contenido -> . if contenido
    (24) contenido -> . aritmetica contenido
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (113) impresion -> . PRINTLN PAR_I valorI PAR_D
    (114) impresion -> . PRINT PAR_I valorI PAR_D
    (117) entrada -> . READLINE PAR_I PAR_D
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    VAR             shift and go to state 8
    VAL             shift and go to state 9
    PRINTLN         shift and go to state 77
    PRINT           shift and go to state 78
    READLINE        shift and go to state 79
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21
    VARIABLE        shift and go to state 76
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    contenido                      shift and go to state 288
    asignacion                     shift and go to state 69
    impresion                      shift and go to state 70
    entrada                        shift and go to state 71
    while                          shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    aritmetica                     shift and go to state 75
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18
    numeros                        shift and go to state 80

state 237

    (106) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN valor LLAVE_D
    (11) contenido -> . asignacion
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . if
    (17) contenido -> . aritmetica
    (18) contenido -> . asignacion contenido
    (19) contenido -> . impresion contenido
    (20) contenido -> . entrada contenido
    (21) contenido -> . while contenido
    (22) contenido -> . for contenido
    (23) contenido -> . if contenido
    (24) contenido -> . aritmetica contenido
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (113) impresion -> . PRINTLN PAR_I valorI PAR_D
    (114) impresion -> . PRINT PAR_I valorI PAR_D
    (117) entrada -> . READLINE PAR_I PAR_D
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    VAR             shift and go to state 8
    VAL             shift and go to state 9
    PRINTLN         shift and go to state 77
    PRINT           shift and go to state 78
    READLINE        shift and go to state 79
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21
    VARIABLE        shift and go to state 76
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    contenido                      shift and go to state 289
    asignacion                     shift and go to state 69
    impresion                      shift and go to state 70
    entrada                        shift and go to state 71
    while                          shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    aritmetica                     shift and go to state 75
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18
    numeros                        shift and go to state 80

state 238

    (108) dectipoTupla -> DOBLE_PUNTO PAR_I tipos . PAR_D

    PAR_D           shift and go to state 290


state 239

    (109) tipos -> tipo .
    (110) tipos -> tipo . tiposentry
    (111) tiposentry -> . COMA tipo
    (112) tiposentry -> . COMA tipo tiposentry

    PAR_D           reduce using rule 109 (tipos -> tipo .)
    COMA            shift and go to state 292

    tiposentry                     shift and go to state 291

state 240

    (103) parametros -> PAR_I . declaracion PAR_D
    (104) parametros -> PAR_I . declaracion PAR_D parametros
    (99) declaracion -> . VARIABLE DOBLE_PUNTO tipo
    (100) declaracion -> . VARIABLE DOBLE_PUNTO tipo IGUAL valor

    VARIABLE        shift and go to state 87

    declaracion                    shift and go to state 86

state 241

    (104) parametros -> PAR_I declaracion PAR_D parametros .

    IGUAL           reduce using rule 104 (parametros -> PAR_I declaracion PAR_D parametros .)
    DOBLE_PUNTO     reduce using rule 104 (parametros -> PAR_I declaracion PAR_D parametros .)


state 242

    (99) declaracion -> VARIABLE DOBLE_PUNTO tipo .
    (100) declaracion -> VARIABLE DOBLE_PUNTO tipo . IGUAL valor

    PAR_D           reduce using rule 99 (declaracion -> VARIABLE DOBLE_PUNTO tipo .)
    IGUAL           shift and go to state 293


state 243

    (118) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 294


state 244

    (123) valores -> valor .
    (124) valores -> valor . COMA valores

    PAR_D           reduce using rule 123 (valores -> valor .)
    COMA            shift and go to state 295


state 245

    (42) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 42 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 42 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 42 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 42 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 42 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 42 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 42 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 42 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 42 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 42 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 42 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 42 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 42 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 42 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 42 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 42 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 42 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)


state 246

    (39) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .

    DEF             reduce using rule 39 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VAR             reduce using rule 39 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VAL             reduce using rule 39 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    WHILE           reduce using rule 39 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    FOR             reduce using rule 39 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    IF              reduce using rule 39 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    $end            reduce using rule 39 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    PRINTLN         reduce using rule 39 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    PRINT           reduce using rule 39 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    READLINE        reduce using rule 39 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VARIABLE        reduce using rule 39 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    INT             reduce using rule 39 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    LONG            reduce using rule 39 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    FLOAT           reduce using rule 39 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    DOUBLE          reduce using rule 39 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    LLAVE_D         reduce using rule 39 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    RETURN          reduce using rule 39 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)


state 247

    (48) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .

    DEF             reduce using rule 48 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 48 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 48 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 48 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 48 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    IF              reduce using rule 48 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    $end            reduce using rule 48 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 48 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 48 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 48 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 48 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    INT             reduce using rule 48 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 48 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 48 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 48 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 48 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 48 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)


state 248

    (45) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .

    DEF             reduce using rule 45 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VAR             reduce using rule 45 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VAL             reduce using rule 45 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    WHILE           reduce using rule 45 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    FOR             reduce using rule 45 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    IF              reduce using rule 45 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    $end            reduce using rule 45 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    PRINTLN         reduce using rule 45 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    PRINT           reduce using rule 45 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    READLINE        reduce using rule 45 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VARIABLE        reduce using rule 45 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    INT             reduce using rule 45 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    LONG            reduce using rule 45 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    FLOAT           reduce using rule 45 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    DOUBLE          reduce using rule 45 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    LLAVE_D         reduce using rule 45 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    RETURN          reduce using rule 45 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)


state 249

    (54) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .

    DEF             reduce using rule 54 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 54 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 54 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 54 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 54 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    IF              reduce using rule 54 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    $end            reduce using rule 54 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 54 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 54 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 54 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 54 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    INT             reduce using rule 54 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 54 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 54 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 54 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 54 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 54 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)


state 250

    (51) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .

    DEF             reduce using rule 51 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VAR             reduce using rule 51 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VAL             reduce using rule 51 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    WHILE           reduce using rule 51 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    FOR             reduce using rule 51 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    IF              reduce using rule 51 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    $end            reduce using rule 51 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    PRINTLN         reduce using rule 51 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    PRINT           reduce using rule 51 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    READLINE        reduce using rule 51 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VARIABLE        reduce using rule 51 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    INT             reduce using rule 51 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    LONG            reduce using rule 51 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    FLOAT           reduce using rule 51 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    DOUBLE          reduce using rule 51 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    LLAVE_D         reduce using rule 51 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    RETURN          reduce using rule 51 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)


state 251

    (60) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .

    DEF             reduce using rule 60 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAR             reduce using rule 60 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAL             reduce using rule 60 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 60 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FOR             reduce using rule 60 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    IF              reduce using rule 60 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    $end            reduce using rule 60 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 60 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 60 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 60 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 60 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    INT             reduce using rule 60 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LONG            reduce using rule 60 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 60 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 60 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 60 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 60 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)


state 252

    (57) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .

    DEF             reduce using rule 57 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VAR             reduce using rule 57 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VAL             reduce using rule 57 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    WHILE           reduce using rule 57 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    FOR             reduce using rule 57 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    IF              reduce using rule 57 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    $end            reduce using rule 57 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    PRINTLN         reduce using rule 57 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    PRINT           reduce using rule 57 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    READLINE        reduce using rule 57 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VARIABLE        reduce using rule 57 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    INT             reduce using rule 57 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    LONG            reduce using rule 57 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    FLOAT           reduce using rule 57 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    DOUBLE          reduce using rule 57 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    LLAVE_D         reduce using rule 57 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    RETURN          reduce using rule 57 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)


state 253

    (66) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 66 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 66 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 66 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 66 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 66 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 66 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 66 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 66 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 66 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 66 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 66 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 66 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 66 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 66 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 66 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 66 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 66 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)


state 254

    (63) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .

    DEF             reduce using rule 63 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAR             reduce using rule 63 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAL             reduce using rule 63 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    WHILE           reduce using rule 63 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FOR             reduce using rule 63 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    IF              reduce using rule 63 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    $end            reduce using rule 63 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINTLN         reduce using rule 63 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINT           reduce using rule 63 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    READLINE        reduce using rule 63 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VARIABLE        reduce using rule 63 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    INT             reduce using rule 63 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LONG            reduce using rule 63 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FLOAT           reduce using rule 63 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    DOUBLE          reduce using rule 63 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LLAVE_D         reduce using rule 63 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    RETURN          reduce using rule 63 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)


state 255

    (72) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .

    DEF             reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    IF              reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    $end            reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    INT             reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 72 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)


state 256

    (69) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .

    DEF             reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAR             reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAL             reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    WHILE           reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FOR             reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    IF              reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    $end            reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINTLN         reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINT           reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    READLINE        reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VARIABLE        reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    INT             reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LONG            reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FLOAT           reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    DOUBLE          reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LLAVE_D         reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    RETURN          reduce using rule 69 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)


state 257

    (78) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .

    DEF             reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    IF              reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    $end            reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    INT             reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 78 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)


state 258

    (75) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .

    DEF             reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAR             reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAL             reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    WHILE           reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FOR             reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    IF              reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    $end            reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINTLN         reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINT           reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    READLINE        reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VARIABLE        reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    INT             reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LONG            reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FLOAT           reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    DOUBLE          reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LLAVE_D         reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    RETURN          reduce using rule 75 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)


state 259

    (119) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 296


state 260

    (121) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 297


state 261

    (43) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 43 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 43 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 43 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 43 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 43 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 43 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 43 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 43 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 43 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 43 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 43 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 43 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 43 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 43 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 43 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 43 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 43 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)


state 262

    (41) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .

    DEF             reduce using rule 41 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VAR             reduce using rule 41 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VAL             reduce using rule 41 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    WHILE           reduce using rule 41 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    FOR             reduce using rule 41 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    IF              reduce using rule 41 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    $end            reduce using rule 41 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    PRINTLN         reduce using rule 41 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    PRINT           reduce using rule 41 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    READLINE        reduce using rule 41 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VARIABLE        reduce using rule 41 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    INT             reduce using rule 41 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    LONG            reduce using rule 41 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    FLOAT           reduce using rule 41 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    DOUBLE          reduce using rule 41 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    LLAVE_D         reduce using rule 41 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    RETURN          reduce using rule 41 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)


state 263

    (49) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .

    DEF             reduce using rule 49 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 49 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 49 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 49 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 49 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    IF              reduce using rule 49 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    $end            reduce using rule 49 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 49 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 49 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 49 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 49 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    INT             reduce using rule 49 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 49 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 49 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 49 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 49 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 49 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)


state 264

    (47) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .

    DEF             reduce using rule 47 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VAR             reduce using rule 47 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VAL             reduce using rule 47 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    WHILE           reduce using rule 47 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    FOR             reduce using rule 47 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    IF              reduce using rule 47 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    $end            reduce using rule 47 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    PRINTLN         reduce using rule 47 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    PRINT           reduce using rule 47 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    READLINE        reduce using rule 47 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VARIABLE        reduce using rule 47 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    INT             reduce using rule 47 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    LONG            reduce using rule 47 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    FLOAT           reduce using rule 47 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    DOUBLE          reduce using rule 47 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    LLAVE_D         reduce using rule 47 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    RETURN          reduce using rule 47 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)


state 265

    (55) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .

    DEF             reduce using rule 55 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 55 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 55 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 55 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 55 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    IF              reduce using rule 55 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    $end            reduce using rule 55 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 55 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 55 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 55 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 55 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    INT             reduce using rule 55 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 55 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 55 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 55 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 55 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 55 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)


state 266

    (53) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .

    DEF             reduce using rule 53 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VAR             reduce using rule 53 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VAL             reduce using rule 53 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    WHILE           reduce using rule 53 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    FOR             reduce using rule 53 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    IF              reduce using rule 53 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    $end            reduce using rule 53 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    PRINTLN         reduce using rule 53 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    PRINT           reduce using rule 53 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    READLINE        reduce using rule 53 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VARIABLE        reduce using rule 53 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    INT             reduce using rule 53 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    LONG            reduce using rule 53 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    FLOAT           reduce using rule 53 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    DOUBLE          reduce using rule 53 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    LLAVE_D         reduce using rule 53 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    RETURN          reduce using rule 53 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)


state 267

    (61) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .

    DEF             reduce using rule 61 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAR             reduce using rule 61 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAL             reduce using rule 61 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 61 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FOR             reduce using rule 61 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    IF              reduce using rule 61 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    $end            reduce using rule 61 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 61 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 61 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 61 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 61 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    INT             reduce using rule 61 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LONG            reduce using rule 61 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 61 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 61 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 61 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 61 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)


state 268

    (59) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .

    DEF             reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VAR             reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VAL             reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    WHILE           reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    FOR             reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    IF              reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    $end            reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    PRINTLN         reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    PRINT           reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    READLINE        reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VARIABLE        reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    INT             reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    LONG            reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    FLOAT           reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    DOUBLE          reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    LLAVE_D         reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    RETURN          reduce using rule 59 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)


state 269

    (67) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 67 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 67 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 67 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 67 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 67 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 67 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 67 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 67 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 67 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 67 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 67 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 67 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 67 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 67 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 67 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 67 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 67 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)


state 270

    (65) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .

    DEF             reduce using rule 65 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAR             reduce using rule 65 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAL             reduce using rule 65 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    WHILE           reduce using rule 65 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FOR             reduce using rule 65 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    IF              reduce using rule 65 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    $end            reduce using rule 65 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINTLN         reduce using rule 65 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINT           reduce using rule 65 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    READLINE        reduce using rule 65 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VARIABLE        reduce using rule 65 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    INT             reduce using rule 65 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LONG            reduce using rule 65 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FLOAT           reduce using rule 65 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    DOUBLE          reduce using rule 65 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LLAVE_D         reduce using rule 65 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    RETURN          reduce using rule 65 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)


state 271

    (73) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .

    DEF             reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    IF              reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    $end            reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    INT             reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 73 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)


state 272

    (71) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .

    DEF             reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAR             reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAL             reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    WHILE           reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FOR             reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    IF              reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    $end            reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINTLN         reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINT           reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    READLINE        reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VARIABLE        reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    INT             reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LONG            reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FLOAT           reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    DOUBLE          reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LLAVE_D         reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    RETURN          reduce using rule 71 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)


state 273

    (79) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .

    DEF             reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    IF              reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    $end            reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    INT             reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 79 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)


state 274

    (77) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .

    DEF             reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAR             reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAL             reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    WHILE           reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FOR             reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    IF              reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    $end            reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINTLN         reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINT           reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    READLINE        reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VARIABLE        reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    INT             reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LONG            reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FLOAT           reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    DOUBLE          reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LLAVE_D         reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    RETURN          reduce using rule 77 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)


state 275

    (122) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo . CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    CORCHETE_D      shift and go to state 298


state 276

    (125) while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 299


state 277

    (126) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 300


state 278

    (130) for -> FOR PAR_I VAR VARIABLE ITERATOR INT . TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> FOR PAR_I VAR VARIABLE ITERATOR INT . UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    TO              shift and go to state 301
    UNTIL           shift and go to state 302


state 279

    (127) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 303


state 280

    (128) for -> FOR PAR_I VARIABLE ITERATOR INT TO . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 304


state 281

    (129) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 305


state 282

    (132) if -> IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 306


state 283

    (135) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (11) contenido -> . asignacion
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . if
    (17) contenido -> . aritmetica
    (18) contenido -> . asignacion contenido
    (19) contenido -> . impresion contenido
    (20) contenido -> . entrada contenido
    (21) contenido -> . while contenido
    (22) contenido -> . for contenido
    (23) contenido -> . if contenido
    (24) contenido -> . aritmetica contenido
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (113) impresion -> . PRINTLN PAR_I valorI PAR_D
    (114) impresion -> . PRINT PAR_I valorI PAR_D
    (117) entrada -> . READLINE PAR_I PAR_D
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    VAR             shift and go to state 8
    VAL             shift and go to state 9
    PRINTLN         shift and go to state 77
    PRINT           shift and go to state 78
    READLINE        shift and go to state 79
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21
    VARIABLE        shift and go to state 76
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    contenido                      shift and go to state 307
    asignacion                     shift and go to state 69
    impresion                      shift and go to state 70
    entrada                        shift and go to state 71
    while                          shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    aritmetica                     shift and go to state 75
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18
    numeros                        shift and go to state 80

state 284

    (113) impresion -> PRINTLN PAR_I valorI PAR_D .

    VAR             reduce using rule 113 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VAL             reduce using rule 113 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    PRINTLN         reduce using rule 113 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    PRINT           reduce using rule 113 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    READLINE        reduce using rule 113 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    WHILE           reduce using rule 113 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    FOR             reduce using rule 113 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    IF              reduce using rule 113 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VARIABLE        reduce using rule 113 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    INT             reduce using rule 113 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    LONG            reduce using rule 113 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    FLOAT           reduce using rule 113 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    DOUBLE          reduce using rule 113 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    LLAVE_D         reduce using rule 113 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    RETURN          reduce using rule 113 (impresion -> PRINTLN PAR_I valorI PAR_D .)


state 285

    (115) valorI -> valor MAS . valorI
    (115) valorI -> . valor MAS valorI
    (116) valorI -> . valor
    (87) valor -> . STRING
    (88) valor -> . CHAR
    (89) valor -> . VARIABLE
    (90) valor -> . numeros
    (91) valor -> . booleanos
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE

    STRING          shift and go to state 228
    CHAR            shift and go to state 229
    VARIABLE        shift and go to state 230
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55

    valor                          shift and go to state 227
    valorI                         shift and go to state 308
    numeros                        shift and go to state 231
    booleanos                      shift and go to state 232

state 286

    (114) impresion -> PRINT PAR_I valorI PAR_D .

    VAR             reduce using rule 114 (impresion -> PRINT PAR_I valorI PAR_D .)
    VAL             reduce using rule 114 (impresion -> PRINT PAR_I valorI PAR_D .)
    PRINTLN         reduce using rule 114 (impresion -> PRINT PAR_I valorI PAR_D .)
    PRINT           reduce using rule 114 (impresion -> PRINT PAR_I valorI PAR_D .)
    READLINE        reduce using rule 114 (impresion -> PRINT PAR_I valorI PAR_D .)
    WHILE           reduce using rule 114 (impresion -> PRINT PAR_I valorI PAR_D .)
    FOR             reduce using rule 114 (impresion -> PRINT PAR_I valorI PAR_D .)
    IF              reduce using rule 114 (impresion -> PRINT PAR_I valorI PAR_D .)
    VARIABLE        reduce using rule 114 (impresion -> PRINT PAR_I valorI PAR_D .)
    INT             reduce using rule 114 (impresion -> PRINT PAR_I valorI PAR_D .)
    LONG            reduce using rule 114 (impresion -> PRINT PAR_I valorI PAR_D .)
    FLOAT           reduce using rule 114 (impresion -> PRINT PAR_I valorI PAR_D .)
    DOUBLE          reduce using rule 114 (impresion -> PRINT PAR_I valorI PAR_D .)
    LLAVE_D         reduce using rule 114 (impresion -> PRINT PAR_I valorI PAR_D .)
    RETURN          reduce using rule 114 (impresion -> PRINT PAR_I valorI PAR_D .)


state 287

    (98) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 98 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 98 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 98 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 98 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 98 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 98 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 98 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)


state 288

    (105) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN valor LLAVE_D

    RETURN          shift and go to state 309


state 289

    (106) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN valor LLAVE_D

    RETURN          shift and go to state 310


state 290

    (108) dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D .

    IGUAL           reduce using rule 108 (dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D .)


state 291

    (110) tipos -> tipo tiposentry .

    PAR_D           reduce using rule 110 (tipos -> tipo tiposentry .)


state 292

    (111) tiposentry -> COMA . tipo
    (112) tiposentry -> COMA . tipo tiposentry
    (80) tipo -> . CHARCLASS
    (81) tipo -> . STRINGCLASS
    (82) tipo -> . BOOLCLASS
    (83) tipo -> . INTCLASS
    (84) tipo -> . LONGCLASS
    (85) tipo -> . DOUBLECLASS
    (86) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 170
    STRINGCLASS     shift and go to state 171
    BOOLCLASS       shift and go to state 172
    INTCLASS        shift and go to state 173
    LONGCLASS       shift and go to state 174
    DOUBLECLASS     shift and go to state 175
    FLOATCLASS      shift and go to state 176

    tipo                           shift and go to state 311

state 293

    (100) declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL . valor
    (87) valor -> . STRING
    (88) valor -> . CHAR
    (89) valor -> . VARIABLE
    (90) valor -> . numeros
    (91) valor -> . booleanos
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE

    STRING          shift and go to state 228
    CHAR            shift and go to state 229
    VARIABLE        shift and go to state 230
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55

    valor                          shift and go to state 312
    numeros                        shift and go to state 231
    booleanos                      shift and go to state 232

state 294

    (118) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 118 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 118 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 118 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 118 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 118 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 118 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 118 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 118 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 118 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 118 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 118 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 118 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 118 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 118 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 118 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 118 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 118 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 295

    (124) valores -> valor COMA . valores
    (123) valores -> . valor
    (124) valores -> . valor COMA valores
    (87) valor -> . STRING
    (88) valor -> . CHAR
    (89) valor -> . VARIABLE
    (90) valor -> . numeros
    (91) valor -> . booleanos
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE

    STRING          shift and go to state 228
    CHAR            shift and go to state 229
    VARIABLE        shift and go to state 230
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55

    valor                          shift and go to state 244
    valores                        shift and go to state 313
    numeros                        shift and go to state 231
    booleanos                      shift and go to state 232

state 296

    (119) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    IGUAL           shift and go to state 314


state 297

    (121) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 121 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 121 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 121 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 121 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 121 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 121 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 121 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 121 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 121 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 121 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 121 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 121 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 121 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 121 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 121 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 121 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 121 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)


state 298

    (122) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D . IGUAL LISTCLASS PAR_I valores PAR_D

    IGUAL           shift and go to state 315


state 299

    (125) while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 125 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 125 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 125 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 125 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 125 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 125 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 125 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 125 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 125 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 125 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 125 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 125 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 125 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 125 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 125 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 125 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 125 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)


state 300

    (126) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 316


state 301

    (130) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 317


state 302

    (131) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 318


state 303

    (127) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I . contenido LLAVE_D
    (11) contenido -> . asignacion
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . if
    (17) contenido -> . aritmetica
    (18) contenido -> . asignacion contenido
    (19) contenido -> . impresion contenido
    (20) contenido -> . entrada contenido
    (21) contenido -> . while contenido
    (22) contenido -> . for contenido
    (23) contenido -> . if contenido
    (24) contenido -> . aritmetica contenido
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (113) impresion -> . PRINTLN PAR_I valorI PAR_D
    (114) impresion -> . PRINT PAR_I valorI PAR_D
    (117) entrada -> . READLINE PAR_I PAR_D
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    VAR             shift and go to state 8
    VAL             shift and go to state 9
    PRINTLN         shift and go to state 77
    PRINT           shift and go to state 78
    READLINE        shift and go to state 79
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21
    VARIABLE        shift and go to state 76
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    contenido                      shift and go to state 319
    asignacion                     shift and go to state 69
    impresion                      shift and go to state 70
    entrada                        shift and go to state 71
    while                          shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    aritmetica                     shift and go to state 75
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18
    numeros                        shift and go to state 80

state 304

    (128) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 320


state 305

    (129) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 321


state 306

    (132) if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .

    ELSE            reduce using rule 132 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 132 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 132 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 132 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 132 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 132 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 132 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 132 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 132 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 132 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 132 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 132 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 132 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 132 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 132 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 132 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 132 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 132 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)


state 307

    (135) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 322


state 308

    (115) valorI -> valor MAS valorI .

    PAR_D           reduce using rule 115 (valorI -> valor MAS valorI .)


state 309

    (105) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . valor LLAVE_D
    (87) valor -> . STRING
    (88) valor -> . CHAR
    (89) valor -> . VARIABLE
    (90) valor -> . numeros
    (91) valor -> . booleanos
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE

    STRING          shift and go to state 228
    CHAR            shift and go to state 229
    VARIABLE        shift and go to state 230
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55

    valor                          shift and go to state 323
    numeros                        shift and go to state 231
    booleanos                      shift and go to state 232

state 310

    (106) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . valor LLAVE_D
    (87) valor -> . STRING
    (88) valor -> . CHAR
    (89) valor -> . VARIABLE
    (90) valor -> . numeros
    (91) valor -> . booleanos
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE

    STRING          shift and go to state 228
    CHAR            shift and go to state 229
    VARIABLE        shift and go to state 230
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55

    valor                          shift and go to state 324
    numeros                        shift and go to state 231
    booleanos                      shift and go to state 232

state 311

    (111) tiposentry -> COMA tipo .
    (112) tiposentry -> COMA tipo . tiposentry
    (111) tiposentry -> . COMA tipo
    (112) tiposentry -> . COMA tipo tiposentry

    PAR_D           reduce using rule 111 (tiposentry -> COMA tipo .)
    COMA            shift and go to state 292

    tiposentry                     shift and go to state 325

state 312

    (100) declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor .

    PAR_D           reduce using rule 100 (declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor .)


state 313

    (124) valores -> valor COMA valores .

    PAR_D           reduce using rule 124 (valores -> valor COMA valores .)


state 314

    (119) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (120) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    ARRAYCLASS      shift and go to state 326


state 315

    (122) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL . LISTCLASS PAR_I valores PAR_D

    LISTCLASS       shift and go to state 327


state 316

    (126) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I . contenido LLAVE_D
    (11) contenido -> . asignacion
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . if
    (17) contenido -> . aritmetica
    (18) contenido -> . asignacion contenido
    (19) contenido -> . impresion contenido
    (20) contenido -> . entrada contenido
    (21) contenido -> . while contenido
    (22) contenido -> . for contenido
    (23) contenido -> . if contenido
    (24) contenido -> . aritmetica contenido
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (113) impresion -> . PRINTLN PAR_I valorI PAR_D
    (114) impresion -> . PRINT PAR_I valorI PAR_D
    (117) entrada -> . READLINE PAR_I PAR_D
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    VAR             shift and go to state 8
    VAL             shift and go to state 9
    PRINTLN         shift and go to state 77
    PRINT           shift and go to state 78
    READLINE        shift and go to state 79
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21
    VARIABLE        shift and go to state 76
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    contenido                      shift and go to state 328
    asignacion                     shift and go to state 69
    impresion                      shift and go to state 70
    entrada                        shift and go to state 71
    while                          shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    aritmetica                     shift and go to state 75
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18
    numeros                        shift and go to state 80

state 317

    (130) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 329


state 318

    (131) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 330


state 319

    (127) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 331


state 320

    (128) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 332


state 321

    (129) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 333


state 322

    (135) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .

    ELSE            reduce using rule 135 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 135 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 135 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 135 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 135 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 135 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 135 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 135 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 135 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 135 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 135 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 135 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 135 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 135 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 135 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 135 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 135 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 135 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)


state 323

    (105) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor . LLAVE_D

    LLAVE_D         shift and go to state 334


state 324

    (106) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor . LLAVE_D

    LLAVE_D         shift and go to state 335


state 325

    (112) tiposentry -> COMA tipo tiposentry .

    PAR_D           reduce using rule 112 (tiposentry -> COMA tipo tiposentry .)


state 326

    (119) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS . PAR_I valores PAR_D
    (120) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS . CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    PAR_I           shift and go to state 337
    CORCHETE_I      shift and go to state 336


state 327

    (122) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 338


state 328

    (126) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 339


state 329

    (130) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 340


state 330

    (131) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 341


state 331

    (127) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 127 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 127 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 127 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 127 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 127 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 127 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 127 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 127 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 127 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 127 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 127 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 127 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 127 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 127 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 127 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 127 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 127 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)


state 332

    (128) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I . contenido LLAVE_D
    (11) contenido -> . asignacion
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . if
    (17) contenido -> . aritmetica
    (18) contenido -> . asignacion contenido
    (19) contenido -> . impresion contenido
    (20) contenido -> . entrada contenido
    (21) contenido -> . while contenido
    (22) contenido -> . for contenido
    (23) contenido -> . if contenido
    (24) contenido -> . aritmetica contenido
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (113) impresion -> . PRINTLN PAR_I valorI PAR_D
    (114) impresion -> . PRINT PAR_I valorI PAR_D
    (117) entrada -> . READLINE PAR_I PAR_D
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    VAR             shift and go to state 8
    VAL             shift and go to state 9
    PRINTLN         shift and go to state 77
    PRINT           shift and go to state 78
    READLINE        shift and go to state 79
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21
    VARIABLE        shift and go to state 76
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    contenido                      shift and go to state 342
    asignacion                     shift and go to state 69
    impresion                      shift and go to state 70
    entrada                        shift and go to state 71
    while                          shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    aritmetica                     shift and go to state 75
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18
    numeros                        shift and go to state 80

state 333

    (129) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I . contenido LLAVE_D
    (11) contenido -> . asignacion
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . if
    (17) contenido -> . aritmetica
    (18) contenido -> . asignacion contenido
    (19) contenido -> . impresion contenido
    (20) contenido -> . entrada contenido
    (21) contenido -> . while contenido
    (22) contenido -> . for contenido
    (23) contenido -> . if contenido
    (24) contenido -> . aritmetica contenido
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (113) impresion -> . PRINTLN PAR_I valorI PAR_D
    (114) impresion -> . PRINT PAR_I valorI PAR_D
    (117) entrada -> . READLINE PAR_I PAR_D
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    VAR             shift and go to state 8
    VAL             shift and go to state 9
    PRINTLN         shift and go to state 77
    PRINT           shift and go to state 78
    READLINE        shift and go to state 79
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21
    VARIABLE        shift and go to state 76
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    contenido                      shift and go to state 343
    asignacion                     shift and go to state 69
    impresion                      shift and go to state 70
    entrada                        shift and go to state 71
    while                          shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    aritmetica                     shift and go to state 75
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18
    numeros                        shift and go to state 80

state 334

    (105) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .

    DEF             reduce using rule 105 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAR             reduce using rule 105 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAL             reduce using rule 105 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    WHILE           reduce using rule 105 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    FOR             reduce using rule 105 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    IF              reduce using rule 105 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    $end            reduce using rule 105 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)


state 335

    (106) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D .

    DEF             reduce using rule 106 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAR             reduce using rule 106 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAL             reduce using rule 106 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    WHILE           reduce using rule 106 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    FOR             reduce using rule 106 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    IF              reduce using rule 106 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    $end            reduce using rule 106 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)


state 336

    (120) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I . tipo CORCHETE_D PAR_I INT PAR_D
    (80) tipo -> . CHARCLASS
    (81) tipo -> . STRINGCLASS
    (82) tipo -> . BOOLCLASS
    (83) tipo -> . INTCLASS
    (84) tipo -> . LONGCLASS
    (85) tipo -> . DOUBLECLASS
    (86) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 170
    STRINGCLASS     shift and go to state 171
    BOOLCLASS       shift and go to state 172
    INTCLASS        shift and go to state 173
    LONGCLASS       shift and go to state 174
    DOUBLECLASS     shift and go to state 175
    FLOATCLASS      shift and go to state 176

    tipo                           shift and go to state 344

state 337

    (119) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (123) valores -> . valor
    (124) valores -> . valor COMA valores
    (87) valor -> . STRING
    (88) valor -> . CHAR
    (89) valor -> . VARIABLE
    (90) valor -> . numeros
    (91) valor -> . booleanos
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE

    STRING          shift and go to state 228
    CHAR            shift and go to state 229
    VARIABLE        shift and go to state 230
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55

    valores                        shift and go to state 345
    valor                          shift and go to state 244
    numeros                        shift and go to state 231
    booleanos                      shift and go to state 232

state 338

    (122) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I . valores PAR_D
    (123) valores -> . valor
    (124) valores -> . valor COMA valores
    (87) valor -> . STRING
    (88) valor -> . CHAR
    (89) valor -> . VARIABLE
    (90) valor -> . numeros
    (91) valor -> . booleanos
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE
    (92) booleanos -> . TRUE
    (93) booleanos -> . FLASE

    STRING          shift and go to state 228
    CHAR            shift and go to state 229
    VARIABLE        shift and go to state 230
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63
    TRUE            shift and go to state 54
    FLASE           shift and go to state 55

    valores                        shift and go to state 346
    valor                          shift and go to state 244
    numeros                        shift and go to state 231
    booleanos                      shift and go to state 232

state 339

    (126) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 126 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 126 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 126 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 126 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 126 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 126 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 126 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 126 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 126 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 126 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 126 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 126 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 126 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 126 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 126 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 126 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 126 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)


state 340

    (130) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I . contenido LLAVE_D
    (11) contenido -> . asignacion
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . if
    (17) contenido -> . aritmetica
    (18) contenido -> . asignacion contenido
    (19) contenido -> . impresion contenido
    (20) contenido -> . entrada contenido
    (21) contenido -> . while contenido
    (22) contenido -> . for contenido
    (23) contenido -> . if contenido
    (24) contenido -> . aritmetica contenido
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (113) impresion -> . PRINTLN PAR_I valorI PAR_D
    (114) impresion -> . PRINT PAR_I valorI PAR_D
    (117) entrada -> . READLINE PAR_I PAR_D
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    VAR             shift and go to state 8
    VAL             shift and go to state 9
    PRINTLN         shift and go to state 77
    PRINT           shift and go to state 78
    READLINE        shift and go to state 79
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21
    VARIABLE        shift and go to state 76
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    contenido                      shift and go to state 347
    asignacion                     shift and go to state 69
    impresion                      shift and go to state 70
    entrada                        shift and go to state 71
    while                          shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    aritmetica                     shift and go to state 75
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18
    numeros                        shift and go to state 80

state 341

    (131) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I . contenido LLAVE_D
    (11) contenido -> . asignacion
    (12) contenido -> . impresion
    (13) contenido -> . entrada
    (14) contenido -> . while
    (15) contenido -> . for
    (16) contenido -> . if
    (17) contenido -> . aritmetica
    (18) contenido -> . asignacion contenido
    (19) contenido -> . impresion contenido
    (20) contenido -> . entrada contenido
    (21) contenido -> . while contenido
    (22) contenido -> . for contenido
    (23) contenido -> . if contenido
    (24) contenido -> . aritmetica contenido
    (25) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (26) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (27) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (28) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (29) asignacion -> . asignacionLong
    (30) asignacion -> . asignacionInt
    (31) asignacion -> . asignacionFloat
    (32) asignacion -> . asignacionDouble
    (33) asignacion -> . asignacionString
    (34) asignacion -> . asignacionChar
    (35) asignacion -> . asignacionBoolean
    (36) asignacion -> . array
    (37) asignacion -> . list
    (113) impresion -> . PRINTLN PAR_I valorI PAR_D
    (114) impresion -> . PRINT PAR_I valorI PAR_D
    (117) entrada -> . READLINE PAR_I PAR_D
    (125) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (126) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (127) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (128) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (129) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (130) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (131) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (132) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (133) if -> . if elseif
    (134) if -> . if else
    (169) aritmetica -> . numeros aritmeticos numeros
    (170) aritmetica -> . VARIABLE aritmeticos numeros
    (171) aritmetica -> . numeros aritmeticos VARIABLE
    (172) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (173) aritmetica -> . aritmetica aritmeticos numeros
    (174) aritmetica -> . aritmetica aritmeticos VARIABLE
    (38) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (39) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (40) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (41) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (42) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (43) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (44) asignacionInt -> . VAR VARIABLE IGUAL INT
    (45) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (46) asignacionInt -> . VAL VARIABLE IGUAL INT
    (47) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (48) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (49) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (50) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (51) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (52) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (53) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (54) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (55) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (56) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (57) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (58) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (59) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (60) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (61) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (62) asignacionString -> . VAR VARIABLE IGUAL STRING
    (63) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (64) asignacionString -> . VAL VARIABLE IGUAL STRING
    (65) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (66) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (67) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (68) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (69) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (70) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (71) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (72) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (74) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (75) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (76) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (77) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (78) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (118) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (119) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (120) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (121) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (122) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (94) numeros -> . INT
    (95) numeros -> . LONG
    (96) numeros -> . FLOAT
    (97) numeros -> . DOUBLE

    VAR             shift and go to state 8
    VAL             shift and go to state 9
    PRINTLN         shift and go to state 77
    PRINT           shift and go to state 78
    READLINE        shift and go to state 79
    WHILE           shift and go to state 19
    FOR             shift and go to state 20
    IF              shift and go to state 21
    VARIABLE        shift and go to state 76
    INT             shift and go to state 60
    LONG            shift and go to state 61
    FLOAT           shift and go to state 62
    DOUBLE          shift and go to state 63

    contenido                      shift and go to state 348
    asignacion                     shift and go to state 69
    impresion                      shift and go to state 70
    entrada                        shift and go to state 71
    while                          shift and go to state 72
    for                            shift and go to state 73
    if                             shift and go to state 74
    aritmetica                     shift and go to state 75
    asignacionLong                 shift and go to state 10
    asignacionInt                  shift and go to state 11
    asignacionFloat                shift and go to state 12
    asignacionDouble               shift and go to state 13
    asignacionString               shift and go to state 14
    asignacionChar                 shift and go to state 15
    asignacionBoolean              shift and go to state 16
    array                          shift and go to state 17
    list                           shift and go to state 18
    numeros                        shift and go to state 80

state 342

    (128) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 349


state 343

    (129) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 350


state 344

    (120) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo . CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 351


state 345

    (119) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 352


state 346

    (122) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 353


state 347

    (130) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 354


state 348

    (131) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 355


state 349

    (128) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 128 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 128 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 128 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 128 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 128 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 128 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 128 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 128 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 128 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 128 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 128 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 128 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 128 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 128 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 128 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 128 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 128 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)


state 350

    (129) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 129 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 129 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 129 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 129 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 129 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 129 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 129 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 129 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 129 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 129 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 129 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 129 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 129 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 129 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 129 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 129 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 129 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)


state 351

    (120) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D . PAR_I INT PAR_D

    PAR_I           shift and go to state 356


state 352

    (119) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 119 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 119 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 119 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 119 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 119 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 119 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 119 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 119 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 119 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 119 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 119 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 119 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 119 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 119 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 119 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 119 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 119 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 353

    (122) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 122 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 122 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 122 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 122 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 122 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 122 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 122 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 122 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 122 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 122 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 122 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 122 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 122 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 122 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 122 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 122 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 122 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)


state 354

    (130) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 130 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 130 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 130 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 130 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 130 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 130 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 130 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 130 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 130 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 130 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 130 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 130 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 130 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 130 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 130 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 130 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 130 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)


state 355

    (131) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 131 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 131 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 131 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 131 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 131 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 131 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 131 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 131 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 131 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 131 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 131 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 131 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 131 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 131 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 131 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 131 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 131 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)


state 356

    (120) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I . INT PAR_D

    INT             shift and go to state 357


state 357

    (120) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT . PAR_D

    PAR_D           shift and go to state 358


state 358

    (120) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .

    DEF             reduce using rule 120 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAR             reduce using rule 120 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAL             reduce using rule 120 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    WHILE           reduce using rule 120 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FOR             reduce using rule 120 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    IF              reduce using rule 120 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    $end            reduce using rule 120 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINTLN         reduce using rule 120 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINT           reduce using rule 120 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    READLINE        reduce using rule 120 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VARIABLE        reduce using rule 120 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    INT             reduce using rule 120 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LONG            reduce using rule 120 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FLOAT           reduce using rule 120 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    DOUBLE          reduce using rule 120 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LLAVE_D         reduce using rule 120 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    RETURN          reduce using rule 120 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 27 resolved as shift

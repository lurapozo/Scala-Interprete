Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ARROBA
    BACKTICK
    CATCH
    CLASS
    DO
    EXTENDS
    FINAL
    FINALLY
    FOR_SOME
    HASHTAG
    IMPLICIT
    IMPORT
    LAZY
    LIBRERIA_IO
    MACRO
    MAYOR_IGUAL
    MENOR_IGUAL
    NEW
    NULL
    OBJECT
    OVERRIDE
    PACKAGE
    PRIVATE
    PROTECTED
    PUNTO
    REVERSE
    SEALED
    SUPER
    THIS
    THROW
    TO_DOUBLE
    TO_FLOAT
    TO_INT
    TO_LONG
    TRAIT
    TRY
    TYPE
    WITH
    YIELD

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> funcion
Rule 2     cuerpo -> impresion
Rule 3     cuerpo -> entrada
Rule 4     cuerpo -> asignacion
Rule 5     cuerpo -> while
Rule 6     cuerpo -> for
Rule 7     cuerpo -> match
Rule 8     cuerpo -> if
Rule 9     cuerpo -> funcion cuerpo
Rule 10    cuerpo -> asignacion cuerpo
Rule 11    cuerpo -> while cuerpo
Rule 12    cuerpo -> for cuerpo
Rule 13    cuerpo -> if cuerpo
Rule 14    cuerpo -> match cuerpo
Rule 15    contenido -> asignacion
Rule 16    contenido -> impresion
Rule 17    contenido -> entrada
Rule 18    contenido -> while
Rule 19    contenido -> for
Rule 20    contenido -> match
Rule 21    contenido -> if
Rule 22    contenido -> aritmetica
Rule 23    contenido -> asignacion contenido
Rule 24    contenido -> impresion contenido
Rule 25    contenido -> entrada contenido
Rule 26    contenido -> while contenido
Rule 27    contenido -> for contenido
Rule 28    contenido -> if contenido
Rule 29    contenido -> match contenido
Rule 30    contenido -> aritmetica contenido
Rule 31    contenidoLine -> asignacion
Rule 32    contenidoLine -> impresion
Rule 33    contenidoLine -> entrada
Rule 34    asignacion -> VAR VARIABLE IGUAL VARIABLE
Rule 35    asignacion -> VAL VARIABLE IGUAL VARIABLE
Rule 36    asignacion -> VAR VARIABLE IGUAL aritmetica
Rule 37    asignacion -> VAL VARIABLE IGUAL aritmetica
Rule 38    asignacion -> asignacionLong
Rule 39    asignacion -> asignacionInt
Rule 40    asignacion -> asignacionFloat
Rule 41    asignacion -> asignacionDouble
Rule 42    asignacion -> asignacionString
Rule 43    asignacion -> asignacionChar
Rule 44    asignacion -> asignacionBoolean
Rule 45    asignacion -> array
Rule 46    asignacion -> list
Rule 47    asignacionLong -> VAR VARIABLE IGUAL LONG
Rule 48    asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
Rule 49    asignacionLong -> VAL VARIABLE IGUAL LONG
Rule 50    asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
Rule 51    asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
Rule 52    asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
Rule 53    asignacionInt -> VAR VARIABLE IGUAL INT
Rule 54    asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
Rule 55    asignacionInt -> VAL VARIABLE IGUAL INT
Rule 56    asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
Rule 57    asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
Rule 58    asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
Rule 59    asignacionFloat -> VAR VARIABLE IGUAL FLOAT
Rule 60    asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
Rule 61    asignacionFloat -> VAL VARIABLE IGUAL FLOAT
Rule 62    asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
Rule 63    asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
Rule 64    asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
Rule 65    asignacionDouble -> VAR VARIABLE IGUAL DOUBLE
Rule 66    asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
Rule 67    asignacionDouble -> VAL VARIABLE IGUAL DOUBLE
Rule 68    asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
Rule 69    asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
Rule 70    asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
Rule 71    asignacionString -> VAR VARIABLE IGUAL STRING
Rule 72    asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
Rule 73    asignacionString -> VAL VARIABLE IGUAL STRING
Rule 74    asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
Rule 75    asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
Rule 76    asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
Rule 77    asignacionChar -> VAR VARIABLE IGUAL CHAR
Rule 78    asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
Rule 79    asignacionChar -> VAL VARIABLE IGUAL CHAR
Rule 80    asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
Rule 81    asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
Rule 82    asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
Rule 83    asignacionBoolean -> VAR VARIABLE IGUAL booleanos
Rule 84    asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
Rule 85    asignacionBoolean -> VAL VARIABLE IGUAL booleanos
Rule 86    asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
Rule 87    asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
Rule 88    asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
Rule 89    tipo -> CHARCLASS
Rule 90    tipo -> STRINGCLASS
Rule 91    tipo -> BOOLCLASS
Rule 92    tipo -> INTCLASS
Rule 93    tipo -> LONGCLASS
Rule 94    tipo -> DOUBLECLASS
Rule 95    tipo -> FLOATCLASS
Rule 96    valor -> STRING
Rule 97    valor -> CHAR
Rule 98    valor -> VARIABLE
Rule 99    valor -> numeros
Rule 100   valor -> booleanos
Rule 101   booleanos -> TRUE
Rule 102   booleanos -> FLASE
Rule 103   numeros -> INT
Rule 104   numeros -> LONG
Rule 105   numeros -> FLOAT
Rule 106   numeros -> DOUBLE
Rule 107   funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
Rule 108   declaracion -> VARIABLE DOBLE_PUNTO tipo
Rule 109   declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor
Rule 110   parametro -> parametros
Rule 111   parametro -> PAR_I PAR_D
Rule 112   parametros -> PAR_I declaracion PAR_D
Rule 113   parametros -> PAR_I declaracion PAR_D parametros
Rule 114   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
Rule 115   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D
Rule 116   dectipo -> DOBLE_PUNTO tipo
Rule 117   dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D
Rule 118   tipos -> tipo
Rule 119   tipos -> tipo tiposentry
Rule 120   tiposentry -> COMA tipo
Rule 121   tiposentry -> COMA tipo tiposentry
Rule 122   impresion -> PRINTLN PAR_I valorI PAR_D
Rule 123   impresion -> PRINT PAR_I valorI PAR_D
Rule 124   valorI -> valor MAS valorI
Rule 125   valorI -> valor
Rule 126   entrada -> READLINE PAR_I PAR_D
Rule 127   array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 128   array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 129   array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
Rule 130   list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
Rule 131   list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
Rule 132   valores -> valor
Rule 133   valores -> valor COMA valores
Rule 134   while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 135   for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
Rule 136   for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
Rule 137   for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
Rule 138   for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
Rule 139   for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
Rule 140   for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
Rule 141   match -> VARIABLE MATCH LLAVE_I cases LLAVE_D
Rule 142   cases -> casesInt
Rule 143   cases -> casesLgn
Rule 144   cases -> casesFlt
Rule 145   cases -> casesDob
Rule 146   cases -> casesStr
Rule 147   cases -> casesChar
Rule 148   caseInt -> CASE INT FUNCION_FLECHA codeBlock
Rule 149   casesInt -> caseInt
Rule 150   casesInt -> caseInt casesInt
Rule 151   casesInt -> caseInt defcase
Rule 152   caseLgn -> CASE LONG FUNCION_FLECHA codeBlock
Rule 153   casesLgn -> caseLgn
Rule 154   casesLgn -> caseLgn casesLgn
Rule 155   casesLgn -> caseLgn defcase
Rule 156   caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock
Rule 157   casesFlt -> caseFlt
Rule 158   casesFlt -> caseFlt casesFlt
Rule 159   casesFlt -> caseFlt defcase
Rule 160   caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock
Rule 161   casesDob -> caseDob
Rule 162   casesDob -> caseDob casesDob
Rule 163   casesDob -> caseDob defcase
Rule 164   caseStr -> CASE STRING FUNCION_FLECHA codeBlock
Rule 165   casesStr -> caseStr
Rule 166   casesStr -> caseStr casesStr
Rule 167   casesStr -> caseStr defcase
Rule 168   caseChar -> CASE CHAR FUNCION_FLECHA codeBlock
Rule 169   casesChar -> caseChar
Rule 170   casesChar -> caseChar casesChar
Rule 171   casesChar -> caseChar defcase
Rule 172   caseBool -> CASE booleanos FUNCION_FLECHA codeBlock
Rule 173   casesBool -> caseBool
Rule 174   casesBool -> caseBool casesBool
Rule 175   casesBool -> caseBool defcase
Rule 176   defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock
Rule 177   codeBlock -> contenidoLine
Rule 178   codeBlock -> LLAVE_I contenido LLAVE_D
Rule 179   if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 180   if -> if elseif
Rule 181   if -> if else
Rule 182   elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 183   else -> ELSE LLAVE_I contenido LLAVE_D
Rule 184   else -> elseif else
Rule 185   condicional -> valorC logicos condicional
Rule 186   condicional -> valorC
Rule 187   valorC -> VARIABLE
Rule 188   valorC -> booleanos
Rule 189   valorC -> relacional
Rule 190   valorC -> NOT VARIABLE
Rule 191   valorC -> NOT booleanos
Rule 192   valorC -> NOT relacional
Rule 193   logicos -> AND
Rule 194   logicos -> OR
Rule 195   logicos -> NOT
Rule 196   relacional -> numeros comparacion numeros
Rule 197   relacional -> aritmetica comparacion aritmetica
Rule 198   relacional -> aritmetica comparacion numeros
Rule 199   relacional -> numeros comparacion aritmetica
Rule 200   relacional -> booleanos comparacion booleanos
Rule 201   relacional -> STRING comparacion STRING
Rule 202   relacional -> CHAR comparacion CHAR
Rule 203   relacional -> VARIABLE comparacion numeros
Rule 204   relacional -> numeros comparacion VARIABLE
Rule 205   relacional -> VARIABLE comparacion booleanos
Rule 206   relacional -> booleanos comparacion VARIABLE
Rule 207   relacional -> VARIABLE comparacion STRING
Rule 208   relacional -> STRING comparacion VARIABLE
Rule 209   relacional -> VARIABLE comparacion CHAR
Rule 210   relacional -> CHAR comparacion VARIABLE
Rule 211   relacional -> VARIABLE comparacion VARIABLE
Rule 212   comparacion -> IGUAL_COMPARACION
Rule 213   comparacion -> DIFERENTE
Rule 214   comparacion -> MAYOR
Rule 215   comparacion -> MENOR
Rule 216   aritmetica -> numeros aritmeticos numeros
Rule 217   aritmetica -> VARIABLE aritmeticos numeros
Rule 218   aritmetica -> numeros aritmeticos VARIABLE
Rule 219   aritmetica -> VARIABLE aritmeticos VARIABLE
Rule 220   aritmetica -> aritmetica aritmeticos numeros
Rule 221   aritmetica -> aritmetica aritmeticos VARIABLE
Rule 222   aritmeticos -> MENOS
Rule 223   aritmeticos -> MAS
Rule 224   aritmeticos -> MULTIPLICACION
Rule 225   aritmeticos -> DIVISION
Rule 226   aritmeticos -> MOD

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 193
ARRAYCLASS           : 127 128 128 129 129
ARROBA               : 
BACKTICK             : 
BOOLCLASS            : 84 86 87 88 91
CASE                 : 148 152 156 160 164 168 172 176
CATCH                : 
CHAR                 : 77 78 79 80 97 168 202 202 209 210
CHARCLASS            : 78 80 81 82 89
CLASS                : 
COMA                 : 120 121 133
CORCHETE_D           : 128 129 129 131
CORCHETE_I           : 128 129 129 131
DEF                  : 107 114 115
DIFERENTE            : 213
DIVISION             : 225
DO                   : 
DOBLE_PUNTO          : 48 50 51 52 54 56 57 58 60 62 63 64 66 68 69 70 72 74 75 76 78 80 81 82 84 86 87 88 108 109 116 117 128 129 131
DOUBLE               : 65 66 67 68 106 160
DOUBLECLASS          : 66 68 69 70 94
ELSE                 : 182 183
EXTENDS              : 
FINAL                : 
FINALLY              : 
FLASE                : 102
FLOAT                : 59 60 61 62 105 156
FLOATCLASS           : 60 62 63 64 95
FOR                  : 135 136 137 138 139 140
FOR_SOME             : 
FUNCION_FLECHA       : 148 152 156 160 164 168 172 176
HASHTAG              : 
IF                   : 179 182
IGUAL                : 34 35 36 37 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 107 109 114 115 127 128 129 130 131
IGUAL_COMPARACION    : 212
IMPLICIT             : 
IMPORT               : 
INT                  : 53 54 55 56 103 129 137 137 138 138 139 139 140 140 148
INTCLASS             : 54 56 57 58 92
ITERATOR             : 135 136 137 138 139 140
LAZY                 : 
LIBRERIA_IO          : 
LISTCLASS            : 130 131 131
LLAVE_D              : 107 114 115 134 135 136 137 138 139 140 141 178 179 182 183
LLAVE_I              : 107 114 115 134 135 136 137 138 139 140 141 178 179 182 183
LONG                 : 47 48 49 50 104 152
LONGCLASS            : 48 50 51 52 93
MACRO                : 
MAS                  : 124 223
MATCH                : 141
MAYOR                : 214
MAYOR_IGUAL          : 
MENOR                : 215
MENOR_IGUAL          : 
MENOS                : 222
MOD                  : 226
MULTIPLICACION       : 224
NEW                  : 
NOT                  : 190 191 192 195
NULL                 : 
OBJECT               : 
OR                   : 194
OVERRIDE             : 
PACKAGE              : 
PAR_D                : 111 112 113 117 122 123 126 127 128 129 130 131 134 135 136 137 138 139 140 179 182
PAR_I                : 111 112 113 117 122 123 126 127 128 129 130 131 134 135 136 137 138 139 140 179 182
PRINT                : 123
PRINTLN              : 122
PRIVATE              : 
PROTECTED            : 
PUNTO                : 
READLINE             : 126
RETURN               : 114 115
REVERSE              : 
SEALED               : 
STRING               : 71 72 73 74 96 164 201 201 207 208
STRINGCLASS          : 72 74 75 76 90
SUBGUION             : 176
SUPER                : 
THIS                 : 
THROW                : 
TO                   : 137 139
TO_DOUBLE            : 
TO_FLOAT             : 
TO_INT               : 
TO_LONG              : 
TRAIT                : 
TRUE                 : 101
TRY                  : 
TYPE                 : 
UNTIL                : 138 140
VAL                  : 35 37 49 50 52 55 56 58 61 62 64 67 68 70 73 74 76 79 80 82 85 86 88 130 131
VAR                  : 34 36 47 48 51 53 54 57 59 60 63 65 66 69 71 72 75 77 78 81 83 84 87 127 128 129 135 139 140
VARIABLE             : 34 34 35 35 36 37 47 48 49 50 51 51 52 52 53 54 55 56 57 57 58 58 59 60 61 62 63 63 64 64 65 66 67 68 69 69 70 70 71 72 73 74 75 75 76 76 77 78 79 80 81 81 82 82 83 84 85 86 87 87 88 88 98 107 108 109 114 115 127 128 129 130 131 135 135 136 136 137 138 139 140 141 187 190 203 204 205 206 207 208 209 210 211 211 217 218 219 219 221
WHILE                : 134
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

aritmetica           : 22 30 36 37 197 197 198 199 220 221
aritmeticos          : 216 217 218 219 220 221
array                : 45
asignacion           : 4 10 15 23 31
asignacionBoolean    : 44
asignacionChar       : 43
asignacionDouble     : 41
asignacionFloat      : 40
asignacionInt        : 39
asignacionLong       : 38
asignacionString     : 42
booleanos            : 83 84 85 86 100 172 188 191 200 200 205 206
caseBool             : 173 174 175
caseChar             : 169 170 171
caseDob              : 161 162 163
caseFlt              : 157 158 159
caseInt              : 149 150 151
caseLgn              : 153 154 155
caseStr              : 165 166 167
cases                : 141
casesBool            : 174
casesChar            : 147 170
casesDob             : 145 162
casesFlt             : 144 158
casesInt             : 142 150
casesLgn             : 143 154
casesStr             : 146 166
codeBlock            : 148 152 156 160 164 168 172 176
comparacion          : 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211
condicional          : 134 179 182 185
contenido            : 23 24 25 26 27 28 29 30 107 114 115 134 135 136 137 138 139 140 178 179 182 183
contenidoLine        : 177
cuerpo               : 9 10 11 12 13 14 0
declaracion          : 112 113
dectipo              : 114
dectipoTupla         : 115
defcase              : 151 155 159 163 167 171 175
else                 : 181 184
elseif               : 180 184
entrada              : 3 17 25 33
for                  : 6 12 19 27
funcion              : 1 9
if                   : 8 13 21 28 180 181
impresion            : 2 16 24 32
list                 : 46
logicos              : 185
match                : 7 14 20 29
numeros              : 99 196 196 198 199 203 204 216 216 217 218 220
parametro            : 107 114 115
parametros           : 110 113
relacional           : 189 192
tipo                 : 108 109 116 118 119 120 121 128 129 129 131
tipos                : 117
tiposentry           : 119 121
valor                : 109 114 115 124 125 132 133
valorC               : 185 186
valorI               : 122 123 124
valores              : 127 128 130 131 133
while                : 5 11 18 26

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . impresion
    (3) cuerpo -> . entrada
    (4) cuerpo -> . asignacion
    (5) cuerpo -> . while
    (6) cuerpo -> . for
    (7) cuerpo -> . match
    (8) cuerpo -> . if
    (9) cuerpo -> . funcion cuerpo
    (10) cuerpo -> . asignacion cuerpo
    (11) cuerpo -> . while cuerpo
    (12) cuerpo -> . for cuerpo
    (13) cuerpo -> . if cuerpo
    (14) cuerpo -> . match cuerpo
    (107) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (114) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (115) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    DEF             shift and go to state 10
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 11
    IF              shift and go to state 28

    cuerpo                         shift and go to state 1
    funcion                        shift and go to state 2
    impresion                      shift and go to state 3
    entrada                        shift and go to state 4
    asignacion                     shift and go to state 5
    while                          shift and go to state 6
    for                            shift and go to state 7
    match                          shift and go to state 8
    if                             shift and go to state 9
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> funcion .
    (9) cuerpo -> funcion . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . impresion
    (3) cuerpo -> . entrada
    (4) cuerpo -> . asignacion
    (5) cuerpo -> . while
    (6) cuerpo -> . for
    (7) cuerpo -> . match
    (8) cuerpo -> . if
    (9) cuerpo -> . funcion cuerpo
    (10) cuerpo -> . asignacion cuerpo
    (11) cuerpo -> . while cuerpo
    (12) cuerpo -> . for cuerpo
    (13) cuerpo -> . if cuerpo
    (14) cuerpo -> . match cuerpo
    (107) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (114) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (115) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 1 (cuerpo -> funcion .)
    DEF             shift and go to state 10
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 11
    IF              shift and go to state 28

    funcion                        shift and go to state 2
    cuerpo                         shift and go to state 29
    impresion                      shift and go to state 3
    entrada                        shift and go to state 4
    asignacion                     shift and go to state 5
    while                          shift and go to state 6
    for                            shift and go to state 7
    match                          shift and go to state 8
    if                             shift and go to state 9
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25

state 3

    (2) cuerpo -> impresion .

    $end            reduce using rule 2 (cuerpo -> impresion .)


state 4

    (3) cuerpo -> entrada .

    $end            reduce using rule 3 (cuerpo -> entrada .)


state 5

    (4) cuerpo -> asignacion .
    (10) cuerpo -> asignacion . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . impresion
    (3) cuerpo -> . entrada
    (4) cuerpo -> . asignacion
    (5) cuerpo -> . while
    (6) cuerpo -> . for
    (7) cuerpo -> . match
    (8) cuerpo -> . if
    (9) cuerpo -> . funcion cuerpo
    (10) cuerpo -> . asignacion cuerpo
    (11) cuerpo -> . while cuerpo
    (12) cuerpo -> . for cuerpo
    (13) cuerpo -> . if cuerpo
    (14) cuerpo -> . match cuerpo
    (107) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (114) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (115) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 4 (cuerpo -> asignacion .)
    DEF             shift and go to state 10
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 11
    IF              shift and go to state 28

    asignacion                     shift and go to state 5
    cuerpo                         shift and go to state 30
    funcion                        shift and go to state 2
    impresion                      shift and go to state 3
    entrada                        shift and go to state 4
    while                          shift and go to state 6
    for                            shift and go to state 7
    match                          shift and go to state 8
    if                             shift and go to state 9
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25

state 6

    (5) cuerpo -> while .
    (11) cuerpo -> while . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . impresion
    (3) cuerpo -> . entrada
    (4) cuerpo -> . asignacion
    (5) cuerpo -> . while
    (6) cuerpo -> . for
    (7) cuerpo -> . match
    (8) cuerpo -> . if
    (9) cuerpo -> . funcion cuerpo
    (10) cuerpo -> . asignacion cuerpo
    (11) cuerpo -> . while cuerpo
    (12) cuerpo -> . for cuerpo
    (13) cuerpo -> . if cuerpo
    (14) cuerpo -> . match cuerpo
    (107) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (114) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (115) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 5 (cuerpo -> while .)
    DEF             shift and go to state 10
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 11
    IF              shift and go to state 28

    while                          shift and go to state 6
    cuerpo                         shift and go to state 31
    funcion                        shift and go to state 2
    impresion                      shift and go to state 3
    entrada                        shift and go to state 4
    asignacion                     shift and go to state 5
    for                            shift and go to state 7
    match                          shift and go to state 8
    if                             shift and go to state 9
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25

state 7

    (6) cuerpo -> for .
    (12) cuerpo -> for . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . impresion
    (3) cuerpo -> . entrada
    (4) cuerpo -> . asignacion
    (5) cuerpo -> . while
    (6) cuerpo -> . for
    (7) cuerpo -> . match
    (8) cuerpo -> . if
    (9) cuerpo -> . funcion cuerpo
    (10) cuerpo -> . asignacion cuerpo
    (11) cuerpo -> . while cuerpo
    (12) cuerpo -> . for cuerpo
    (13) cuerpo -> . if cuerpo
    (14) cuerpo -> . match cuerpo
    (107) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (114) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (115) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 6 (cuerpo -> for .)
    DEF             shift and go to state 10
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 11
    IF              shift and go to state 28

    for                            shift and go to state 7
    cuerpo                         shift and go to state 32
    funcion                        shift and go to state 2
    impresion                      shift and go to state 3
    entrada                        shift and go to state 4
    asignacion                     shift and go to state 5
    while                          shift and go to state 6
    match                          shift and go to state 8
    if                             shift and go to state 9
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25

state 8

    (7) cuerpo -> match .
    (14) cuerpo -> match . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . impresion
    (3) cuerpo -> . entrada
    (4) cuerpo -> . asignacion
    (5) cuerpo -> . while
    (6) cuerpo -> . for
    (7) cuerpo -> . match
    (8) cuerpo -> . if
    (9) cuerpo -> . funcion cuerpo
    (10) cuerpo -> . asignacion cuerpo
    (11) cuerpo -> . while cuerpo
    (12) cuerpo -> . for cuerpo
    (13) cuerpo -> . if cuerpo
    (14) cuerpo -> . match cuerpo
    (107) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (114) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (115) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 7 (cuerpo -> match .)
    DEF             shift and go to state 10
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 11
    IF              shift and go to state 28

    match                          shift and go to state 8
    cuerpo                         shift and go to state 33
    funcion                        shift and go to state 2
    impresion                      shift and go to state 3
    entrada                        shift and go to state 4
    asignacion                     shift and go to state 5
    while                          shift and go to state 6
    for                            shift and go to state 7
    if                             shift and go to state 9
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25

state 9

    (8) cuerpo -> if .
    (13) cuerpo -> if . cuerpo
    (180) if -> if . elseif
    (181) if -> if . else
    (1) cuerpo -> . funcion
    (2) cuerpo -> . impresion
    (3) cuerpo -> . entrada
    (4) cuerpo -> . asignacion
    (5) cuerpo -> . while
    (6) cuerpo -> . for
    (7) cuerpo -> . match
    (8) cuerpo -> . if
    (9) cuerpo -> . funcion cuerpo
    (10) cuerpo -> . asignacion cuerpo
    (11) cuerpo -> . while cuerpo
    (12) cuerpo -> . for cuerpo
    (13) cuerpo -> . if cuerpo
    (14) cuerpo -> . match cuerpo
    (182) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (183) else -> . ELSE LLAVE_I contenido LLAVE_D
    (184) else -> . elseif else
    (107) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (114) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (115) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 8 (cuerpo -> if .)
    ELSE            shift and go to state 37
    DEF             shift and go to state 10
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 11
    IF              shift and go to state 28

    if                             shift and go to state 9
    cuerpo                         shift and go to state 34
    elseif                         shift and go to state 35
    else                           shift and go to state 36
    funcion                        shift and go to state 2
    impresion                      shift and go to state 3
    entrada                        shift and go to state 4
    asignacion                     shift and go to state 5
    while                          shift and go to state 6
    for                            shift and go to state 7
    match                          shift and go to state 8
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25

state 10

    (107) funcion -> DEF . VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (114) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (115) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D

    VARIABLE        shift and go to state 38


state 11

    (141) match -> VARIABLE . MATCH LLAVE_I cases LLAVE_D

    MATCH           shift and go to state 39


state 12

    (122) impresion -> PRINTLN . PAR_I valorI PAR_D

    PAR_I           shift and go to state 40


state 13

    (123) impresion -> PRINT . PAR_I valorI PAR_D

    PAR_I           shift and go to state 41


state 14

    (126) entrada -> READLINE . PAR_I PAR_D

    PAR_I           shift and go to state 42


state 15

    (34) asignacion -> VAR . VARIABLE IGUAL VARIABLE
    (36) asignacion -> VAR . VARIABLE IGUAL aritmetica
    (47) asignacionLong -> VAR . VARIABLE IGUAL LONG
    (48) asignacionLong -> VAR . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> VAR . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> VAR . VARIABLE IGUAL INT
    (54) asignacionInt -> VAR . VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> VAR . VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> VAR . VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> VAR . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> VAR . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> VAR . VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> VAR . VARIABLE IGUAL STRING
    (72) asignacionString -> VAR . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> VAR . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> VAR . VARIABLE IGUAL CHAR
    (78) asignacionChar -> VAR . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> VAR . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> VAR . VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> VAR . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> VAR . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> VAR . VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    VARIABLE        shift and go to state 43


state 16

    (35) asignacion -> VAL . VARIABLE IGUAL VARIABLE
    (37) asignacion -> VAL . VARIABLE IGUAL aritmetica
    (49) asignacionLong -> VAL . VARIABLE IGUAL LONG
    (50) asignacionLong -> VAL . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (52) asignacionLong -> VAL . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (55) asignacionInt -> VAL . VARIABLE IGUAL INT
    (56) asignacionInt -> VAL . VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (58) asignacionInt -> VAL . VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (61) asignacionFloat -> VAL . VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> VAL . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (64) asignacionFloat -> VAL . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionDouble -> VAL . VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (70) asignacionDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionString -> VAL . VARIABLE IGUAL STRING
    (74) asignacionString -> VAL . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> VAL . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionChar -> VAL . VARIABLE IGUAL CHAR
    (80) asignacionChar -> VAL . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (82) asignacionChar -> VAL . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (85) asignacionBoolean -> VAL . VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> VAL . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (88) asignacionBoolean -> VAL . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (130) list -> VAL . VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> VAL . VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    VARIABLE        shift and go to state 44


state 17

    (38) asignacion -> asignacionLong .

    DEF             reduce using rule 38 (asignacion -> asignacionLong .)
    PRINTLN         reduce using rule 38 (asignacion -> asignacionLong .)
    PRINT           reduce using rule 38 (asignacion -> asignacionLong .)
    READLINE        reduce using rule 38 (asignacion -> asignacionLong .)
    VAR             reduce using rule 38 (asignacion -> asignacionLong .)
    VAL             reduce using rule 38 (asignacion -> asignacionLong .)
    WHILE           reduce using rule 38 (asignacion -> asignacionLong .)
    FOR             reduce using rule 38 (asignacion -> asignacionLong .)
    VARIABLE        reduce using rule 38 (asignacion -> asignacionLong .)
    IF              reduce using rule 38 (asignacion -> asignacionLong .)
    $end            reduce using rule 38 (asignacion -> asignacionLong .)
    INT             reduce using rule 38 (asignacion -> asignacionLong .)
    LONG            reduce using rule 38 (asignacion -> asignacionLong .)
    FLOAT           reduce using rule 38 (asignacion -> asignacionLong .)
    DOUBLE          reduce using rule 38 (asignacion -> asignacionLong .)
    LLAVE_D         reduce using rule 38 (asignacion -> asignacionLong .)
    RETURN          reduce using rule 38 (asignacion -> asignacionLong .)
    CASE            reduce using rule 38 (asignacion -> asignacionLong .)


state 18

    (39) asignacion -> asignacionInt .

    DEF             reduce using rule 39 (asignacion -> asignacionInt .)
    PRINTLN         reduce using rule 39 (asignacion -> asignacionInt .)
    PRINT           reduce using rule 39 (asignacion -> asignacionInt .)
    READLINE        reduce using rule 39 (asignacion -> asignacionInt .)
    VAR             reduce using rule 39 (asignacion -> asignacionInt .)
    VAL             reduce using rule 39 (asignacion -> asignacionInt .)
    WHILE           reduce using rule 39 (asignacion -> asignacionInt .)
    FOR             reduce using rule 39 (asignacion -> asignacionInt .)
    VARIABLE        reduce using rule 39 (asignacion -> asignacionInt .)
    IF              reduce using rule 39 (asignacion -> asignacionInt .)
    $end            reduce using rule 39 (asignacion -> asignacionInt .)
    INT             reduce using rule 39 (asignacion -> asignacionInt .)
    LONG            reduce using rule 39 (asignacion -> asignacionInt .)
    FLOAT           reduce using rule 39 (asignacion -> asignacionInt .)
    DOUBLE          reduce using rule 39 (asignacion -> asignacionInt .)
    LLAVE_D         reduce using rule 39 (asignacion -> asignacionInt .)
    RETURN          reduce using rule 39 (asignacion -> asignacionInt .)
    CASE            reduce using rule 39 (asignacion -> asignacionInt .)


state 19

    (40) asignacion -> asignacionFloat .

    DEF             reduce using rule 40 (asignacion -> asignacionFloat .)
    PRINTLN         reduce using rule 40 (asignacion -> asignacionFloat .)
    PRINT           reduce using rule 40 (asignacion -> asignacionFloat .)
    READLINE        reduce using rule 40 (asignacion -> asignacionFloat .)
    VAR             reduce using rule 40 (asignacion -> asignacionFloat .)
    VAL             reduce using rule 40 (asignacion -> asignacionFloat .)
    WHILE           reduce using rule 40 (asignacion -> asignacionFloat .)
    FOR             reduce using rule 40 (asignacion -> asignacionFloat .)
    VARIABLE        reduce using rule 40 (asignacion -> asignacionFloat .)
    IF              reduce using rule 40 (asignacion -> asignacionFloat .)
    $end            reduce using rule 40 (asignacion -> asignacionFloat .)
    INT             reduce using rule 40 (asignacion -> asignacionFloat .)
    LONG            reduce using rule 40 (asignacion -> asignacionFloat .)
    FLOAT           reduce using rule 40 (asignacion -> asignacionFloat .)
    DOUBLE          reduce using rule 40 (asignacion -> asignacionFloat .)
    LLAVE_D         reduce using rule 40 (asignacion -> asignacionFloat .)
    RETURN          reduce using rule 40 (asignacion -> asignacionFloat .)
    CASE            reduce using rule 40 (asignacion -> asignacionFloat .)


state 20

    (41) asignacion -> asignacionDouble .

    DEF             reduce using rule 41 (asignacion -> asignacionDouble .)
    PRINTLN         reduce using rule 41 (asignacion -> asignacionDouble .)
    PRINT           reduce using rule 41 (asignacion -> asignacionDouble .)
    READLINE        reduce using rule 41 (asignacion -> asignacionDouble .)
    VAR             reduce using rule 41 (asignacion -> asignacionDouble .)
    VAL             reduce using rule 41 (asignacion -> asignacionDouble .)
    WHILE           reduce using rule 41 (asignacion -> asignacionDouble .)
    FOR             reduce using rule 41 (asignacion -> asignacionDouble .)
    VARIABLE        reduce using rule 41 (asignacion -> asignacionDouble .)
    IF              reduce using rule 41 (asignacion -> asignacionDouble .)
    $end            reduce using rule 41 (asignacion -> asignacionDouble .)
    INT             reduce using rule 41 (asignacion -> asignacionDouble .)
    LONG            reduce using rule 41 (asignacion -> asignacionDouble .)
    FLOAT           reduce using rule 41 (asignacion -> asignacionDouble .)
    DOUBLE          reduce using rule 41 (asignacion -> asignacionDouble .)
    LLAVE_D         reduce using rule 41 (asignacion -> asignacionDouble .)
    RETURN          reduce using rule 41 (asignacion -> asignacionDouble .)
    CASE            reduce using rule 41 (asignacion -> asignacionDouble .)


state 21

    (42) asignacion -> asignacionString .

    DEF             reduce using rule 42 (asignacion -> asignacionString .)
    PRINTLN         reduce using rule 42 (asignacion -> asignacionString .)
    PRINT           reduce using rule 42 (asignacion -> asignacionString .)
    READLINE        reduce using rule 42 (asignacion -> asignacionString .)
    VAR             reduce using rule 42 (asignacion -> asignacionString .)
    VAL             reduce using rule 42 (asignacion -> asignacionString .)
    WHILE           reduce using rule 42 (asignacion -> asignacionString .)
    FOR             reduce using rule 42 (asignacion -> asignacionString .)
    VARIABLE        reduce using rule 42 (asignacion -> asignacionString .)
    IF              reduce using rule 42 (asignacion -> asignacionString .)
    $end            reduce using rule 42 (asignacion -> asignacionString .)
    INT             reduce using rule 42 (asignacion -> asignacionString .)
    LONG            reduce using rule 42 (asignacion -> asignacionString .)
    FLOAT           reduce using rule 42 (asignacion -> asignacionString .)
    DOUBLE          reduce using rule 42 (asignacion -> asignacionString .)
    LLAVE_D         reduce using rule 42 (asignacion -> asignacionString .)
    RETURN          reduce using rule 42 (asignacion -> asignacionString .)
    CASE            reduce using rule 42 (asignacion -> asignacionString .)


state 22

    (43) asignacion -> asignacionChar .

    DEF             reduce using rule 43 (asignacion -> asignacionChar .)
    PRINTLN         reduce using rule 43 (asignacion -> asignacionChar .)
    PRINT           reduce using rule 43 (asignacion -> asignacionChar .)
    READLINE        reduce using rule 43 (asignacion -> asignacionChar .)
    VAR             reduce using rule 43 (asignacion -> asignacionChar .)
    VAL             reduce using rule 43 (asignacion -> asignacionChar .)
    WHILE           reduce using rule 43 (asignacion -> asignacionChar .)
    FOR             reduce using rule 43 (asignacion -> asignacionChar .)
    VARIABLE        reduce using rule 43 (asignacion -> asignacionChar .)
    IF              reduce using rule 43 (asignacion -> asignacionChar .)
    $end            reduce using rule 43 (asignacion -> asignacionChar .)
    INT             reduce using rule 43 (asignacion -> asignacionChar .)
    LONG            reduce using rule 43 (asignacion -> asignacionChar .)
    FLOAT           reduce using rule 43 (asignacion -> asignacionChar .)
    DOUBLE          reduce using rule 43 (asignacion -> asignacionChar .)
    LLAVE_D         reduce using rule 43 (asignacion -> asignacionChar .)
    RETURN          reduce using rule 43 (asignacion -> asignacionChar .)
    CASE            reduce using rule 43 (asignacion -> asignacionChar .)


state 23

    (44) asignacion -> asignacionBoolean .

    DEF             reduce using rule 44 (asignacion -> asignacionBoolean .)
    PRINTLN         reduce using rule 44 (asignacion -> asignacionBoolean .)
    PRINT           reduce using rule 44 (asignacion -> asignacionBoolean .)
    READLINE        reduce using rule 44 (asignacion -> asignacionBoolean .)
    VAR             reduce using rule 44 (asignacion -> asignacionBoolean .)
    VAL             reduce using rule 44 (asignacion -> asignacionBoolean .)
    WHILE           reduce using rule 44 (asignacion -> asignacionBoolean .)
    FOR             reduce using rule 44 (asignacion -> asignacionBoolean .)
    VARIABLE        reduce using rule 44 (asignacion -> asignacionBoolean .)
    IF              reduce using rule 44 (asignacion -> asignacionBoolean .)
    $end            reduce using rule 44 (asignacion -> asignacionBoolean .)
    INT             reduce using rule 44 (asignacion -> asignacionBoolean .)
    LONG            reduce using rule 44 (asignacion -> asignacionBoolean .)
    FLOAT           reduce using rule 44 (asignacion -> asignacionBoolean .)
    DOUBLE          reduce using rule 44 (asignacion -> asignacionBoolean .)
    LLAVE_D         reduce using rule 44 (asignacion -> asignacionBoolean .)
    RETURN          reduce using rule 44 (asignacion -> asignacionBoolean .)
    CASE            reduce using rule 44 (asignacion -> asignacionBoolean .)


state 24

    (45) asignacion -> array .

    DEF             reduce using rule 45 (asignacion -> array .)
    PRINTLN         reduce using rule 45 (asignacion -> array .)
    PRINT           reduce using rule 45 (asignacion -> array .)
    READLINE        reduce using rule 45 (asignacion -> array .)
    VAR             reduce using rule 45 (asignacion -> array .)
    VAL             reduce using rule 45 (asignacion -> array .)
    WHILE           reduce using rule 45 (asignacion -> array .)
    FOR             reduce using rule 45 (asignacion -> array .)
    VARIABLE        reduce using rule 45 (asignacion -> array .)
    IF              reduce using rule 45 (asignacion -> array .)
    $end            reduce using rule 45 (asignacion -> array .)
    INT             reduce using rule 45 (asignacion -> array .)
    LONG            reduce using rule 45 (asignacion -> array .)
    FLOAT           reduce using rule 45 (asignacion -> array .)
    DOUBLE          reduce using rule 45 (asignacion -> array .)
    LLAVE_D         reduce using rule 45 (asignacion -> array .)
    RETURN          reduce using rule 45 (asignacion -> array .)
    CASE            reduce using rule 45 (asignacion -> array .)


state 25

    (46) asignacion -> list .

    DEF             reduce using rule 46 (asignacion -> list .)
    PRINTLN         reduce using rule 46 (asignacion -> list .)
    PRINT           reduce using rule 46 (asignacion -> list .)
    READLINE        reduce using rule 46 (asignacion -> list .)
    VAR             reduce using rule 46 (asignacion -> list .)
    VAL             reduce using rule 46 (asignacion -> list .)
    WHILE           reduce using rule 46 (asignacion -> list .)
    FOR             reduce using rule 46 (asignacion -> list .)
    VARIABLE        reduce using rule 46 (asignacion -> list .)
    IF              reduce using rule 46 (asignacion -> list .)
    $end            reduce using rule 46 (asignacion -> list .)
    INT             reduce using rule 46 (asignacion -> list .)
    LONG            reduce using rule 46 (asignacion -> list .)
    FLOAT           reduce using rule 46 (asignacion -> list .)
    DOUBLE          reduce using rule 46 (asignacion -> list .)
    LLAVE_D         reduce using rule 46 (asignacion -> list .)
    RETURN          reduce using rule 46 (asignacion -> list .)
    CASE            reduce using rule 46 (asignacion -> list .)


state 26

    (134) while -> WHILE . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 45


state 27

    (135) for -> FOR . PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> FOR . PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> FOR . PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> FOR . PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> FOR . PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> FOR . PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 46


state 28

    (179) if -> IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 47


state 29

    (9) cuerpo -> funcion cuerpo .

    $end            reduce using rule 9 (cuerpo -> funcion cuerpo .)


state 30

    (10) cuerpo -> asignacion cuerpo .

    $end            reduce using rule 10 (cuerpo -> asignacion cuerpo .)


state 31

    (11) cuerpo -> while cuerpo .

    $end            reduce using rule 11 (cuerpo -> while cuerpo .)


state 32

    (12) cuerpo -> for cuerpo .

    $end            reduce using rule 12 (cuerpo -> for cuerpo .)


state 33

    (14) cuerpo -> match cuerpo .

    $end            reduce using rule 14 (cuerpo -> match cuerpo .)


state 34

    (13) cuerpo -> if cuerpo .

    $end            reduce using rule 13 (cuerpo -> if cuerpo .)


state 35

    (180) if -> if elseif .
    (184) else -> elseif . else
    (183) else -> . ELSE LLAVE_I contenido LLAVE_D
    (184) else -> . elseif else
    (182) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

  ! shift/reduce conflict for ELSE resolved as shift
    DEF             reduce using rule 180 (if -> if elseif .)
    PRINTLN         reduce using rule 180 (if -> if elseif .)
    PRINT           reduce using rule 180 (if -> if elseif .)
    READLINE        reduce using rule 180 (if -> if elseif .)
    VAR             reduce using rule 180 (if -> if elseif .)
    VAL             reduce using rule 180 (if -> if elseif .)
    WHILE           reduce using rule 180 (if -> if elseif .)
    FOR             reduce using rule 180 (if -> if elseif .)
    VARIABLE        reduce using rule 180 (if -> if elseif .)
    IF              reduce using rule 180 (if -> if elseif .)
    $end            reduce using rule 180 (if -> if elseif .)
    INT             reduce using rule 180 (if -> if elseif .)
    LONG            reduce using rule 180 (if -> if elseif .)
    FLOAT           reduce using rule 180 (if -> if elseif .)
    DOUBLE          reduce using rule 180 (if -> if elseif .)
    LLAVE_D         reduce using rule 180 (if -> if elseif .)
    RETURN          reduce using rule 180 (if -> if elseif .)
    ELSE            shift and go to state 50

  ! ELSE            [ reduce using rule 180 (if -> if elseif .) ]

    elseif                         shift and go to state 48
    else                           shift and go to state 49

state 36

    (181) if -> if else .

    ELSE            reduce using rule 181 (if -> if else .)
    DEF             reduce using rule 181 (if -> if else .)
    PRINTLN         reduce using rule 181 (if -> if else .)
    PRINT           reduce using rule 181 (if -> if else .)
    READLINE        reduce using rule 181 (if -> if else .)
    VAR             reduce using rule 181 (if -> if else .)
    VAL             reduce using rule 181 (if -> if else .)
    WHILE           reduce using rule 181 (if -> if else .)
    FOR             reduce using rule 181 (if -> if else .)
    VARIABLE        reduce using rule 181 (if -> if else .)
    IF              reduce using rule 181 (if -> if else .)
    $end            reduce using rule 181 (if -> if else .)
    INT             reduce using rule 181 (if -> if else .)
    LONG            reduce using rule 181 (if -> if else .)
    FLOAT           reduce using rule 181 (if -> if else .)
    DOUBLE          reduce using rule 181 (if -> if else .)
    LLAVE_D         reduce using rule 181 (if -> if else .)
    RETURN          reduce using rule 181 (if -> if else .)


state 37

    (182) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (183) else -> ELSE . LLAVE_I contenido LLAVE_D

    IF              shift and go to state 51
    LLAVE_I         shift and go to state 52


state 38

    (107) funcion -> DEF VARIABLE . parametro IGUAL LLAVE_I contenido LLAVE_D
    (114) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (115) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (110) parametro -> . parametros
    (111) parametro -> . PAR_I PAR_D
    (112) parametros -> . PAR_I declaracion PAR_D
    (113) parametros -> . PAR_I declaracion PAR_D parametros

    PAR_I           shift and go to state 55

    parametro                      shift and go to state 53
    parametros                     shift and go to state 54

state 39

    (141) match -> VARIABLE MATCH . LLAVE_I cases LLAVE_D

    LLAVE_I         shift and go to state 56


state 40

    (122) impresion -> PRINTLN PAR_I . valorI PAR_D
    (124) valorI -> . valor MAS valorI
    (125) valorI -> . valor
    (96) valor -> . STRING
    (97) valor -> . CHAR
    (98) valor -> . VARIABLE
    (99) valor -> . numeros
    (100) valor -> . booleanos
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    VARIABLE        shift and go to state 61
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69

    valorI                         shift and go to state 57
    valor                          shift and go to state 58
    numeros                        shift and go to state 62
    booleanos                      shift and go to state 63

state 41

    (123) impresion -> PRINT PAR_I . valorI PAR_D
    (124) valorI -> . valor MAS valorI
    (125) valorI -> . valor
    (96) valor -> . STRING
    (97) valor -> . CHAR
    (98) valor -> . VARIABLE
    (99) valor -> . numeros
    (100) valor -> . booleanos
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    VARIABLE        shift and go to state 61
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69

    valorI                         shift and go to state 70
    valor                          shift and go to state 58
    numeros                        shift and go to state 62
    booleanos                      shift and go to state 63

state 42

    (126) entrada -> READLINE PAR_I . PAR_D

    PAR_D           shift and go to state 71


state 43

    (34) asignacion -> VAR VARIABLE . IGUAL VARIABLE
    (36) asignacion -> VAR VARIABLE . IGUAL aritmetica
    (47) asignacionLong -> VAR VARIABLE . IGUAL LONG
    (48) asignacionLong -> VAR VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> VAR VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> VAR VARIABLE . IGUAL INT
    (54) asignacionInt -> VAR VARIABLE . DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> VAR VARIABLE . DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> VAR VARIABLE . IGUAL FLOAT
    (60) asignacionFloat -> VAR VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> VAR VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> VAR VARIABLE . IGUAL DOUBLE
    (66) asignacionDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> VAR VARIABLE . IGUAL STRING
    (72) asignacionString -> VAR VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> VAR VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> VAR VARIABLE . IGUAL CHAR
    (78) asignacionChar -> VAR VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> VAR VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> VAR VARIABLE . IGUAL booleanos
    (84) asignacionBoolean -> VAR VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> VAR VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> VAR VARIABLE . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    IGUAL           shift and go to state 72
    DOBLE_PUNTO     shift and go to state 73


state 44

    (35) asignacion -> VAL VARIABLE . IGUAL VARIABLE
    (37) asignacion -> VAL VARIABLE . IGUAL aritmetica
    (49) asignacionLong -> VAL VARIABLE . IGUAL LONG
    (50) asignacionLong -> VAL VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL LONG
    (52) asignacionLong -> VAL VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (55) asignacionInt -> VAL VARIABLE . IGUAL INT
    (56) asignacionInt -> VAL VARIABLE . DOBLE_PUNTO INTCLASS IGUAL INT
    (58) asignacionInt -> VAL VARIABLE . DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (61) asignacionFloat -> VAL VARIABLE . IGUAL FLOAT
    (62) asignacionFloat -> VAL VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (64) asignacionFloat -> VAL VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionDouble -> VAL VARIABLE . IGUAL DOUBLE
    (68) asignacionDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (70) asignacionDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionString -> VAL VARIABLE . IGUAL STRING
    (74) asignacionString -> VAL VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> VAL VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionChar -> VAL VARIABLE . IGUAL CHAR
    (80) asignacionChar -> VAL VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (82) asignacionChar -> VAL VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (85) asignacionBoolean -> VAL VARIABLE . IGUAL booleanos
    (86) asignacionBoolean -> VAL VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (88) asignacionBoolean -> VAL VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (130) list -> VAL VARIABLE . IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> VAL VARIABLE . DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    IGUAL           shift and go to state 74
    DOBLE_PUNTO     shift and go to state 75


state 45

    (134) while -> WHILE PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (185) condicional -> . valorC logicos condicional
    (186) condicional -> . valorC
    (187) valorC -> . VARIABLE
    (188) valorC -> . booleanos
    (189) valorC -> . relacional
    (190) valorC -> . NOT VARIABLE
    (191) valorC -> . NOT booleanos
    (192) valorC -> . NOT relacional
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE
    (196) relacional -> . numeros comparacion numeros
    (197) relacional -> . aritmetica comparacion aritmetica
    (198) relacional -> . aritmetica comparacion numeros
    (199) relacional -> . numeros comparacion aritmetica
    (200) relacional -> . booleanos comparacion booleanos
    (201) relacional -> . STRING comparacion STRING
    (202) relacional -> . CHAR comparacion CHAR
    (203) relacional -> . VARIABLE comparacion numeros
    (204) relacional -> . numeros comparacion VARIABLE
    (205) relacional -> . VARIABLE comparacion booleanos
    (206) relacional -> . booleanos comparacion VARIABLE
    (207) relacional -> . VARIABLE comparacion STRING
    (208) relacional -> . STRING comparacion VARIABLE
    (209) relacional -> . VARIABLE comparacion CHAR
    (210) relacional -> . CHAR comparacion VARIABLE
    (211) relacional -> . VARIABLE comparacion VARIABLE
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 78
    NOT             shift and go to state 81
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69
    STRING          shift and go to state 84
    CHAR            shift and go to state 85
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    condicional                    shift and go to state 76
    valorC                         shift and go to state 77
    booleanos                      shift and go to state 79
    relacional                     shift and go to state 80
    numeros                        shift and go to state 82
    aritmetica                     shift and go to state 83

state 46

    (135) for -> FOR PAR_I . VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> FOR PAR_I . VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> FOR PAR_I . VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> FOR PAR_I . VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> FOR PAR_I . VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> FOR PAR_I . VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VAR             shift and go to state 86
    VARIABLE        shift and go to state 87


state 47

    (179) if -> IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (185) condicional -> . valorC logicos condicional
    (186) condicional -> . valorC
    (187) valorC -> . VARIABLE
    (188) valorC -> . booleanos
    (189) valorC -> . relacional
    (190) valorC -> . NOT VARIABLE
    (191) valorC -> . NOT booleanos
    (192) valorC -> . NOT relacional
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE
    (196) relacional -> . numeros comparacion numeros
    (197) relacional -> . aritmetica comparacion aritmetica
    (198) relacional -> . aritmetica comparacion numeros
    (199) relacional -> . numeros comparacion aritmetica
    (200) relacional -> . booleanos comparacion booleanos
    (201) relacional -> . STRING comparacion STRING
    (202) relacional -> . CHAR comparacion CHAR
    (203) relacional -> . VARIABLE comparacion numeros
    (204) relacional -> . numeros comparacion VARIABLE
    (205) relacional -> . VARIABLE comparacion booleanos
    (206) relacional -> . booleanos comparacion VARIABLE
    (207) relacional -> . VARIABLE comparacion STRING
    (208) relacional -> . STRING comparacion VARIABLE
    (209) relacional -> . VARIABLE comparacion CHAR
    (210) relacional -> . CHAR comparacion VARIABLE
    (211) relacional -> . VARIABLE comparacion VARIABLE
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 78
    NOT             shift and go to state 81
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69
    STRING          shift and go to state 84
    CHAR            shift and go to state 85
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    condicional                    shift and go to state 88
    valorC                         shift and go to state 77
    booleanos                      shift and go to state 79
    relacional                     shift and go to state 80
    numeros                        shift and go to state 82
    aritmetica                     shift and go to state 83

state 48

    (184) else -> elseif . else
    (183) else -> . ELSE LLAVE_I contenido LLAVE_D
    (184) else -> . elseif else
    (182) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    ELSE            shift and go to state 50

    elseif                         shift and go to state 48
    else                           shift and go to state 49

state 49

    (184) else -> elseif else .

    ELSE            reduce using rule 184 (else -> elseif else .)
    DEF             reduce using rule 184 (else -> elseif else .)
    PRINTLN         reduce using rule 184 (else -> elseif else .)
    PRINT           reduce using rule 184 (else -> elseif else .)
    READLINE        reduce using rule 184 (else -> elseif else .)
    VAR             reduce using rule 184 (else -> elseif else .)
    VAL             reduce using rule 184 (else -> elseif else .)
    WHILE           reduce using rule 184 (else -> elseif else .)
    FOR             reduce using rule 184 (else -> elseif else .)
    VARIABLE        reduce using rule 184 (else -> elseif else .)
    IF              reduce using rule 184 (else -> elseif else .)
    $end            reduce using rule 184 (else -> elseif else .)
    INT             reduce using rule 184 (else -> elseif else .)
    LONG            reduce using rule 184 (else -> elseif else .)
    FLOAT           reduce using rule 184 (else -> elseif else .)
    DOUBLE          reduce using rule 184 (else -> elseif else .)
    LLAVE_D         reduce using rule 184 (else -> elseif else .)
    RETURN          reduce using rule 184 (else -> elseif else .)


state 50

    (183) else -> ELSE . LLAVE_I contenido LLAVE_D
    (182) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 52
    IF              shift and go to state 51


state 51

    (182) elseif -> ELSE IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 89


state 52

    (183) else -> ELSE LLAVE_I . contenido LLAVE_D
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    contenido                      shift and go to state 90
    asignacion                     shift and go to state 91
    impresion                      shift and go to state 92
    entrada                        shift and go to state 93
    while                          shift and go to state 94
    for                            shift and go to state 95
    match                          shift and go to state 96
    if                             shift and go to state 97
    aritmetica                     shift and go to state 98
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25
    numeros                        shift and go to state 100

state 53

    (107) funcion -> DEF VARIABLE parametro . IGUAL LLAVE_I contenido LLAVE_D
    (114) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (115) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (116) dectipo -> . DOBLE_PUNTO tipo
    (117) dectipoTupla -> . DOBLE_PUNTO PAR_I tipos PAR_D

    IGUAL           shift and go to state 101
    DOBLE_PUNTO     shift and go to state 104

    dectipo                        shift and go to state 102
    dectipoTupla                   shift and go to state 103

state 54

    (110) parametro -> parametros .

    IGUAL           reduce using rule 110 (parametro -> parametros .)
    DOBLE_PUNTO     reduce using rule 110 (parametro -> parametros .)


state 55

    (111) parametro -> PAR_I . PAR_D
    (112) parametros -> PAR_I . declaracion PAR_D
    (113) parametros -> PAR_I . declaracion PAR_D parametros
    (108) declaracion -> . VARIABLE DOBLE_PUNTO tipo
    (109) declaracion -> . VARIABLE DOBLE_PUNTO tipo IGUAL valor

    PAR_D           shift and go to state 105
    VARIABLE        shift and go to state 107

    declaracion                    shift and go to state 106

state 56

    (141) match -> VARIABLE MATCH LLAVE_I . cases LLAVE_D
    (142) cases -> . casesInt
    (143) cases -> . casesLgn
    (144) cases -> . casesFlt
    (145) cases -> . casesDob
    (146) cases -> . casesStr
    (147) cases -> . casesChar
    (149) casesInt -> . caseInt
    (150) casesInt -> . caseInt casesInt
    (151) casesInt -> . caseInt defcase
    (153) casesLgn -> . caseLgn
    (154) casesLgn -> . caseLgn casesLgn
    (155) casesLgn -> . caseLgn defcase
    (157) casesFlt -> . caseFlt
    (158) casesFlt -> . caseFlt casesFlt
    (159) casesFlt -> . caseFlt defcase
    (161) casesDob -> . caseDob
    (162) casesDob -> . caseDob casesDob
    (163) casesDob -> . caseDob defcase
    (165) casesStr -> . caseStr
    (166) casesStr -> . caseStr casesStr
    (167) casesStr -> . caseStr defcase
    (169) casesChar -> . caseChar
    (170) casesChar -> . caseChar casesChar
    (171) casesChar -> . caseChar defcase
    (148) caseInt -> . CASE INT FUNCION_FLECHA codeBlock
    (152) caseLgn -> . CASE LONG FUNCION_FLECHA codeBlock
    (156) caseFlt -> . CASE FLOAT FUNCION_FLECHA codeBlock
    (160) caseDob -> . CASE DOUBLE FUNCION_FLECHA codeBlock
    (164) caseStr -> . CASE STRING FUNCION_FLECHA codeBlock
    (168) caseChar -> . CASE CHAR FUNCION_FLECHA codeBlock

    CASE            shift and go to state 121

    cases                          shift and go to state 108
    casesInt                       shift and go to state 109
    casesLgn                       shift and go to state 110
    casesFlt                       shift and go to state 111
    casesDob                       shift and go to state 112
    casesStr                       shift and go to state 113
    casesChar                      shift and go to state 114
    caseInt                        shift and go to state 115
    caseLgn                        shift and go to state 116
    caseFlt                        shift and go to state 117
    caseDob                        shift and go to state 118
    caseStr                        shift and go to state 119
    caseChar                       shift and go to state 120

state 57

    (122) impresion -> PRINTLN PAR_I valorI . PAR_D

    PAR_D           shift and go to state 122


state 58

    (124) valorI -> valor . MAS valorI
    (125) valorI -> valor .

    MAS             shift and go to state 123
    PAR_D           reduce using rule 125 (valorI -> valor .)


state 59

    (96) valor -> STRING .

    MAS             reduce using rule 96 (valor -> STRING .)
    PAR_D           reduce using rule 96 (valor -> STRING .)
    COMA            reduce using rule 96 (valor -> STRING .)
    LLAVE_D         reduce using rule 96 (valor -> STRING .)


state 60

    (97) valor -> CHAR .

    MAS             reduce using rule 97 (valor -> CHAR .)
    PAR_D           reduce using rule 97 (valor -> CHAR .)
    COMA            reduce using rule 97 (valor -> CHAR .)
    LLAVE_D         reduce using rule 97 (valor -> CHAR .)


state 61

    (98) valor -> VARIABLE .

    MAS             reduce using rule 98 (valor -> VARIABLE .)
    PAR_D           reduce using rule 98 (valor -> VARIABLE .)
    COMA            reduce using rule 98 (valor -> VARIABLE .)
    LLAVE_D         reduce using rule 98 (valor -> VARIABLE .)


state 62

    (99) valor -> numeros .

    MAS             reduce using rule 99 (valor -> numeros .)
    PAR_D           reduce using rule 99 (valor -> numeros .)
    COMA            reduce using rule 99 (valor -> numeros .)
    LLAVE_D         reduce using rule 99 (valor -> numeros .)


state 63

    (100) valor -> booleanos .

    MAS             reduce using rule 100 (valor -> booleanos .)
    PAR_D           reduce using rule 100 (valor -> booleanos .)
    COMA            reduce using rule 100 (valor -> booleanos .)
    LLAVE_D         reduce using rule 100 (valor -> booleanos .)


state 64

    (103) numeros -> INT .

    MAS             reduce using rule 103 (numeros -> INT .)
    PAR_D           reduce using rule 103 (numeros -> INT .)
    IGUAL_COMPARACION reduce using rule 103 (numeros -> INT .)
    DIFERENTE       reduce using rule 103 (numeros -> INT .)
    MAYOR           reduce using rule 103 (numeros -> INT .)
    MENOR           reduce using rule 103 (numeros -> INT .)
    MENOS           reduce using rule 103 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 103 (numeros -> INT .)
    DIVISION        reduce using rule 103 (numeros -> INT .)
    MOD             reduce using rule 103 (numeros -> INT .)
    AND             reduce using rule 103 (numeros -> INT .)
    OR              reduce using rule 103 (numeros -> INT .)
    NOT             reduce using rule 103 (numeros -> INT .)
    VAR             reduce using rule 103 (numeros -> INT .)
    VAL             reduce using rule 103 (numeros -> INT .)
    PRINTLN         reduce using rule 103 (numeros -> INT .)
    PRINT           reduce using rule 103 (numeros -> INT .)
    READLINE        reduce using rule 103 (numeros -> INT .)
    WHILE           reduce using rule 103 (numeros -> INT .)
    FOR             reduce using rule 103 (numeros -> INT .)
    VARIABLE        reduce using rule 103 (numeros -> INT .)
    IF              reduce using rule 103 (numeros -> INT .)
    INT             reduce using rule 103 (numeros -> INT .)
    LONG            reduce using rule 103 (numeros -> INT .)
    FLOAT           reduce using rule 103 (numeros -> INT .)
    DOUBLE          reduce using rule 103 (numeros -> INT .)
    LLAVE_D         reduce using rule 103 (numeros -> INT .)
    DEF             reduce using rule 103 (numeros -> INT .)
    $end            reduce using rule 103 (numeros -> INT .)
    RETURN          reduce using rule 103 (numeros -> INT .)
    CASE            reduce using rule 103 (numeros -> INT .)
    COMA            reduce using rule 103 (numeros -> INT .)


state 65

    (104) numeros -> LONG .

    MAS             reduce using rule 104 (numeros -> LONG .)
    PAR_D           reduce using rule 104 (numeros -> LONG .)
    IGUAL_COMPARACION reduce using rule 104 (numeros -> LONG .)
    DIFERENTE       reduce using rule 104 (numeros -> LONG .)
    MAYOR           reduce using rule 104 (numeros -> LONG .)
    MENOR           reduce using rule 104 (numeros -> LONG .)
    MENOS           reduce using rule 104 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 104 (numeros -> LONG .)
    DIVISION        reduce using rule 104 (numeros -> LONG .)
    MOD             reduce using rule 104 (numeros -> LONG .)
    AND             reduce using rule 104 (numeros -> LONG .)
    OR              reduce using rule 104 (numeros -> LONG .)
    NOT             reduce using rule 104 (numeros -> LONG .)
    VAR             reduce using rule 104 (numeros -> LONG .)
    VAL             reduce using rule 104 (numeros -> LONG .)
    PRINTLN         reduce using rule 104 (numeros -> LONG .)
    PRINT           reduce using rule 104 (numeros -> LONG .)
    READLINE        reduce using rule 104 (numeros -> LONG .)
    WHILE           reduce using rule 104 (numeros -> LONG .)
    FOR             reduce using rule 104 (numeros -> LONG .)
    VARIABLE        reduce using rule 104 (numeros -> LONG .)
    IF              reduce using rule 104 (numeros -> LONG .)
    INT             reduce using rule 104 (numeros -> LONG .)
    LONG            reduce using rule 104 (numeros -> LONG .)
    FLOAT           reduce using rule 104 (numeros -> LONG .)
    DOUBLE          reduce using rule 104 (numeros -> LONG .)
    LLAVE_D         reduce using rule 104 (numeros -> LONG .)
    DEF             reduce using rule 104 (numeros -> LONG .)
    $end            reduce using rule 104 (numeros -> LONG .)
    RETURN          reduce using rule 104 (numeros -> LONG .)
    CASE            reduce using rule 104 (numeros -> LONG .)
    COMA            reduce using rule 104 (numeros -> LONG .)


state 66

    (105) numeros -> FLOAT .

    MAS             reduce using rule 105 (numeros -> FLOAT .)
    PAR_D           reduce using rule 105 (numeros -> FLOAT .)
    IGUAL_COMPARACION reduce using rule 105 (numeros -> FLOAT .)
    DIFERENTE       reduce using rule 105 (numeros -> FLOAT .)
    MAYOR           reduce using rule 105 (numeros -> FLOAT .)
    MENOR           reduce using rule 105 (numeros -> FLOAT .)
    MENOS           reduce using rule 105 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 105 (numeros -> FLOAT .)
    DIVISION        reduce using rule 105 (numeros -> FLOAT .)
    MOD             reduce using rule 105 (numeros -> FLOAT .)
    AND             reduce using rule 105 (numeros -> FLOAT .)
    OR              reduce using rule 105 (numeros -> FLOAT .)
    NOT             reduce using rule 105 (numeros -> FLOAT .)
    VAR             reduce using rule 105 (numeros -> FLOAT .)
    VAL             reduce using rule 105 (numeros -> FLOAT .)
    PRINTLN         reduce using rule 105 (numeros -> FLOAT .)
    PRINT           reduce using rule 105 (numeros -> FLOAT .)
    READLINE        reduce using rule 105 (numeros -> FLOAT .)
    WHILE           reduce using rule 105 (numeros -> FLOAT .)
    FOR             reduce using rule 105 (numeros -> FLOAT .)
    VARIABLE        reduce using rule 105 (numeros -> FLOAT .)
    IF              reduce using rule 105 (numeros -> FLOAT .)
    INT             reduce using rule 105 (numeros -> FLOAT .)
    LONG            reduce using rule 105 (numeros -> FLOAT .)
    FLOAT           reduce using rule 105 (numeros -> FLOAT .)
    DOUBLE          reduce using rule 105 (numeros -> FLOAT .)
    LLAVE_D         reduce using rule 105 (numeros -> FLOAT .)
    DEF             reduce using rule 105 (numeros -> FLOAT .)
    $end            reduce using rule 105 (numeros -> FLOAT .)
    RETURN          reduce using rule 105 (numeros -> FLOAT .)
    CASE            reduce using rule 105 (numeros -> FLOAT .)
    COMA            reduce using rule 105 (numeros -> FLOAT .)


state 67

    (106) numeros -> DOUBLE .

    MAS             reduce using rule 106 (numeros -> DOUBLE .)
    PAR_D           reduce using rule 106 (numeros -> DOUBLE .)
    IGUAL_COMPARACION reduce using rule 106 (numeros -> DOUBLE .)
    DIFERENTE       reduce using rule 106 (numeros -> DOUBLE .)
    MAYOR           reduce using rule 106 (numeros -> DOUBLE .)
    MENOR           reduce using rule 106 (numeros -> DOUBLE .)
    MENOS           reduce using rule 106 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 106 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 106 (numeros -> DOUBLE .)
    MOD             reduce using rule 106 (numeros -> DOUBLE .)
    AND             reduce using rule 106 (numeros -> DOUBLE .)
    OR              reduce using rule 106 (numeros -> DOUBLE .)
    NOT             reduce using rule 106 (numeros -> DOUBLE .)
    VAR             reduce using rule 106 (numeros -> DOUBLE .)
    VAL             reduce using rule 106 (numeros -> DOUBLE .)
    PRINTLN         reduce using rule 106 (numeros -> DOUBLE .)
    PRINT           reduce using rule 106 (numeros -> DOUBLE .)
    READLINE        reduce using rule 106 (numeros -> DOUBLE .)
    WHILE           reduce using rule 106 (numeros -> DOUBLE .)
    FOR             reduce using rule 106 (numeros -> DOUBLE .)
    VARIABLE        reduce using rule 106 (numeros -> DOUBLE .)
    IF              reduce using rule 106 (numeros -> DOUBLE .)
    INT             reduce using rule 106 (numeros -> DOUBLE .)
    LONG            reduce using rule 106 (numeros -> DOUBLE .)
    FLOAT           reduce using rule 106 (numeros -> DOUBLE .)
    DOUBLE          reduce using rule 106 (numeros -> DOUBLE .)
    LLAVE_D         reduce using rule 106 (numeros -> DOUBLE .)
    DEF             reduce using rule 106 (numeros -> DOUBLE .)
    $end            reduce using rule 106 (numeros -> DOUBLE .)
    RETURN          reduce using rule 106 (numeros -> DOUBLE .)
    CASE            reduce using rule 106 (numeros -> DOUBLE .)
    COMA            reduce using rule 106 (numeros -> DOUBLE .)


state 68

    (101) booleanos -> TRUE .

    MAS             reduce using rule 101 (booleanos -> TRUE .)
    PAR_D           reduce using rule 101 (booleanos -> TRUE .)
    IGUAL_COMPARACION reduce using rule 101 (booleanos -> TRUE .)
    DIFERENTE       reduce using rule 101 (booleanos -> TRUE .)
    MAYOR           reduce using rule 101 (booleanos -> TRUE .)
    MENOR           reduce using rule 101 (booleanos -> TRUE .)
    AND             reduce using rule 101 (booleanos -> TRUE .)
    OR              reduce using rule 101 (booleanos -> TRUE .)
    NOT             reduce using rule 101 (booleanos -> TRUE .)
    DEF             reduce using rule 101 (booleanos -> TRUE .)
    PRINTLN         reduce using rule 101 (booleanos -> TRUE .)
    PRINT           reduce using rule 101 (booleanos -> TRUE .)
    READLINE        reduce using rule 101 (booleanos -> TRUE .)
    VAR             reduce using rule 101 (booleanos -> TRUE .)
    VAL             reduce using rule 101 (booleanos -> TRUE .)
    WHILE           reduce using rule 101 (booleanos -> TRUE .)
    FOR             reduce using rule 101 (booleanos -> TRUE .)
    VARIABLE        reduce using rule 101 (booleanos -> TRUE .)
    IF              reduce using rule 101 (booleanos -> TRUE .)
    $end            reduce using rule 101 (booleanos -> TRUE .)
    INT             reduce using rule 101 (booleanos -> TRUE .)
    LONG            reduce using rule 101 (booleanos -> TRUE .)
    FLOAT           reduce using rule 101 (booleanos -> TRUE .)
    DOUBLE          reduce using rule 101 (booleanos -> TRUE .)
    LLAVE_D         reduce using rule 101 (booleanos -> TRUE .)
    RETURN          reduce using rule 101 (booleanos -> TRUE .)
    CASE            reduce using rule 101 (booleanos -> TRUE .)
    COMA            reduce using rule 101 (booleanos -> TRUE .)


state 69

    (102) booleanos -> FLASE .

    MAS             reduce using rule 102 (booleanos -> FLASE .)
    PAR_D           reduce using rule 102 (booleanos -> FLASE .)
    IGUAL_COMPARACION reduce using rule 102 (booleanos -> FLASE .)
    DIFERENTE       reduce using rule 102 (booleanos -> FLASE .)
    MAYOR           reduce using rule 102 (booleanos -> FLASE .)
    MENOR           reduce using rule 102 (booleanos -> FLASE .)
    AND             reduce using rule 102 (booleanos -> FLASE .)
    OR              reduce using rule 102 (booleanos -> FLASE .)
    NOT             reduce using rule 102 (booleanos -> FLASE .)
    DEF             reduce using rule 102 (booleanos -> FLASE .)
    PRINTLN         reduce using rule 102 (booleanos -> FLASE .)
    PRINT           reduce using rule 102 (booleanos -> FLASE .)
    READLINE        reduce using rule 102 (booleanos -> FLASE .)
    VAR             reduce using rule 102 (booleanos -> FLASE .)
    VAL             reduce using rule 102 (booleanos -> FLASE .)
    WHILE           reduce using rule 102 (booleanos -> FLASE .)
    FOR             reduce using rule 102 (booleanos -> FLASE .)
    VARIABLE        reduce using rule 102 (booleanos -> FLASE .)
    IF              reduce using rule 102 (booleanos -> FLASE .)
    $end            reduce using rule 102 (booleanos -> FLASE .)
    INT             reduce using rule 102 (booleanos -> FLASE .)
    LONG            reduce using rule 102 (booleanos -> FLASE .)
    FLOAT           reduce using rule 102 (booleanos -> FLASE .)
    DOUBLE          reduce using rule 102 (booleanos -> FLASE .)
    LLAVE_D         reduce using rule 102 (booleanos -> FLASE .)
    RETURN          reduce using rule 102 (booleanos -> FLASE .)
    CASE            reduce using rule 102 (booleanos -> FLASE .)
    COMA            reduce using rule 102 (booleanos -> FLASE .)


state 70

    (123) impresion -> PRINT PAR_I valorI . PAR_D

    PAR_D           shift and go to state 124


state 71

    (126) entrada -> READLINE PAR_I PAR_D .

    $end            reduce using rule 126 (entrada -> READLINE PAR_I PAR_D .)
    VAR             reduce using rule 126 (entrada -> READLINE PAR_I PAR_D .)
    VAL             reduce using rule 126 (entrada -> READLINE PAR_I PAR_D .)
    PRINTLN         reduce using rule 126 (entrada -> READLINE PAR_I PAR_D .)
    PRINT           reduce using rule 126 (entrada -> READLINE PAR_I PAR_D .)
    READLINE        reduce using rule 126 (entrada -> READLINE PAR_I PAR_D .)
    WHILE           reduce using rule 126 (entrada -> READLINE PAR_I PAR_D .)
    FOR             reduce using rule 126 (entrada -> READLINE PAR_I PAR_D .)
    VARIABLE        reduce using rule 126 (entrada -> READLINE PAR_I PAR_D .)
    IF              reduce using rule 126 (entrada -> READLINE PAR_I PAR_D .)
    INT             reduce using rule 126 (entrada -> READLINE PAR_I PAR_D .)
    LONG            reduce using rule 126 (entrada -> READLINE PAR_I PAR_D .)
    FLOAT           reduce using rule 126 (entrada -> READLINE PAR_I PAR_D .)
    DOUBLE          reduce using rule 126 (entrada -> READLINE PAR_I PAR_D .)
    LLAVE_D         reduce using rule 126 (entrada -> READLINE PAR_I PAR_D .)
    RETURN          reduce using rule 126 (entrada -> READLINE PAR_I PAR_D .)
    CASE            reduce using rule 126 (entrada -> READLINE PAR_I PAR_D .)


state 72

    (34) asignacion -> VAR VARIABLE IGUAL . VARIABLE
    (36) asignacion -> VAR VARIABLE IGUAL . aritmetica
    (47) asignacionLong -> VAR VARIABLE IGUAL . LONG
    (53) asignacionInt -> VAR VARIABLE IGUAL . INT
    (59) asignacionFloat -> VAR VARIABLE IGUAL . FLOAT
    (65) asignacionDouble -> VAR VARIABLE IGUAL . DOUBLE
    (71) asignacionString -> VAR VARIABLE IGUAL . STRING
    (77) asignacionChar -> VAR VARIABLE IGUAL . CHAR
    (83) asignacionBoolean -> VAR VARIABLE IGUAL . booleanos
    (127) array -> VAR VARIABLE IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VARIABLE        shift and go to state 125
    LONG            shift and go to state 127
    INT             shift and go to state 128
    FLOAT           shift and go to state 129
    DOUBLE          shift and go to state 130
    STRING          shift and go to state 131
    CHAR            shift and go to state 132
    ARRAYCLASS      shift and go to state 134
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69

    aritmetica                     shift and go to state 126
    booleanos                      shift and go to state 133
    numeros                        shift and go to state 100

state 73

    (48) asignacionLong -> VAR VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL LONG
    (51) asignacionLong -> VAR VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL VARIABLE
    (54) asignacionInt -> VAR VARIABLE DOBLE_PUNTO . INTCLASS IGUAL INT
    (57) asignacionInt -> VAR VARIABLE DOBLE_PUNTO . INTCLASS IGUAL VARIABLE
    (60) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL VARIABLE
    (66) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL VARIABLE
    (72) asignacionString -> VAR VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL STRING
    (75) asignacionString -> VAR VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL VARIABLE
    (78) asignacionChar -> VAR VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL CHAR
    (81) asignacionChar -> VAR VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL VARIABLE
    (128) array -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    LONGCLASS       shift and go to state 135
    INTCLASS        shift and go to state 136
    FLOATCLASS      shift and go to state 137
    DOUBLECLASS     shift and go to state 138
    STRINGCLASS     shift and go to state 139
    CHARCLASS       shift and go to state 140
    BOOLCLASS       shift and go to state 141
    ARRAYCLASS      shift and go to state 142


state 74

    (35) asignacion -> VAL VARIABLE IGUAL . VARIABLE
    (37) asignacion -> VAL VARIABLE IGUAL . aritmetica
    (49) asignacionLong -> VAL VARIABLE IGUAL . LONG
    (55) asignacionInt -> VAL VARIABLE IGUAL . INT
    (61) asignacionFloat -> VAL VARIABLE IGUAL . FLOAT
    (67) asignacionDouble -> VAL VARIABLE IGUAL . DOUBLE
    (73) asignacionString -> VAL VARIABLE IGUAL . STRING
    (79) asignacionChar -> VAL VARIABLE IGUAL . CHAR
    (85) asignacionBoolean -> VAL VARIABLE IGUAL . booleanos
    (130) list -> VAL VARIABLE IGUAL . LISTCLASS PAR_I valores PAR_D
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VARIABLE        shift and go to state 143
    LONG            shift and go to state 145
    INT             shift and go to state 146
    FLOAT           shift and go to state 147
    DOUBLE          shift and go to state 148
    STRING          shift and go to state 149
    CHAR            shift and go to state 150
    LISTCLASS       shift and go to state 152
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69

    aritmetica                     shift and go to state 144
    booleanos                      shift and go to state 151
    numeros                        shift and go to state 100

state 75

    (50) asignacionLong -> VAL VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL LONG
    (52) asignacionLong -> VAL VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL VARIABLE
    (56) asignacionInt -> VAL VARIABLE DOBLE_PUNTO . INTCLASS IGUAL INT
    (58) asignacionInt -> VAL VARIABLE DOBLE_PUNTO . INTCLASS IGUAL VARIABLE
    (62) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL FLOAT
    (64) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL VARIABLE
    (68) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL DOUBLE
    (70) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL VARIABLE
    (74) asignacionString -> VAL VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL STRING
    (76) asignacionString -> VAL VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL VARIABLE
    (80) asignacionChar -> VAL VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL CHAR
    (82) asignacionChar -> VAL VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL VARIABLE
    (86) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL booleanos
    (88) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL VARIABLE
    (131) list -> VAL VARIABLE DOBLE_PUNTO . LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LONGCLASS       shift and go to state 153
    INTCLASS        shift and go to state 154
    FLOATCLASS      shift and go to state 155
    DOUBLECLASS     shift and go to state 156
    STRINGCLASS     shift and go to state 157
    CHARCLASS       shift and go to state 158
    BOOLCLASS       shift and go to state 159
    LISTCLASS       shift and go to state 160


state 76

    (134) while -> WHILE PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 161


state 77

    (185) condicional -> valorC . logicos condicional
    (186) condicional -> valorC .
    (193) logicos -> . AND
    (194) logicos -> . OR
    (195) logicos -> . NOT

    PAR_D           reduce using rule 186 (condicional -> valorC .)
    AND             shift and go to state 163
    OR              shift and go to state 164
    NOT             shift and go to state 165

    logicos                        shift and go to state 162

state 78

    (187) valorC -> VARIABLE .
    (203) relacional -> VARIABLE . comparacion numeros
    (205) relacional -> VARIABLE . comparacion booleanos
    (207) relacional -> VARIABLE . comparacion STRING
    (209) relacional -> VARIABLE . comparacion CHAR
    (211) relacional -> VARIABLE . comparacion VARIABLE
    (217) aritmetica -> VARIABLE . aritmeticos numeros
    (219) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (212) comparacion -> . IGUAL_COMPARACION
    (213) comparacion -> . DIFERENTE
    (214) comparacion -> . MAYOR
    (215) comparacion -> . MENOR
    (222) aritmeticos -> . MENOS
    (223) aritmeticos -> . MAS
    (224) aritmeticos -> . MULTIPLICACION
    (225) aritmeticos -> . DIVISION
    (226) aritmeticos -> . MOD

    AND             reduce using rule 187 (valorC -> VARIABLE .)
    OR              reduce using rule 187 (valorC -> VARIABLE .)
    NOT             reduce using rule 187 (valorC -> VARIABLE .)
    PAR_D           reduce using rule 187 (valorC -> VARIABLE .)
    IGUAL_COMPARACION shift and go to state 168
    DIFERENTE       shift and go to state 169
    MAYOR           shift and go to state 170
    MENOR           shift and go to state 171
    MENOS           shift and go to state 172
    MAS             shift and go to state 173
    MULTIPLICACION  shift and go to state 174
    DIVISION        shift and go to state 175
    MOD             shift and go to state 176

    comparacion                    shift and go to state 166
    aritmeticos                    shift and go to state 167

state 79

    (188) valorC -> booleanos .
    (200) relacional -> booleanos . comparacion booleanos
    (206) relacional -> booleanos . comparacion VARIABLE
    (212) comparacion -> . IGUAL_COMPARACION
    (213) comparacion -> . DIFERENTE
    (214) comparacion -> . MAYOR
    (215) comparacion -> . MENOR

    AND             reduce using rule 188 (valorC -> booleanos .)
    OR              reduce using rule 188 (valorC -> booleanos .)
    NOT             reduce using rule 188 (valorC -> booleanos .)
    PAR_D           reduce using rule 188 (valorC -> booleanos .)
    IGUAL_COMPARACION shift and go to state 168
    DIFERENTE       shift and go to state 169
    MAYOR           shift and go to state 170
    MENOR           shift and go to state 171

    comparacion                    shift and go to state 177

state 80

    (189) valorC -> relacional .

    AND             reduce using rule 189 (valorC -> relacional .)
    OR              reduce using rule 189 (valorC -> relacional .)
    NOT             reduce using rule 189 (valorC -> relacional .)
    PAR_D           reduce using rule 189 (valorC -> relacional .)


state 81

    (190) valorC -> NOT . VARIABLE
    (191) valorC -> NOT . booleanos
    (192) valorC -> NOT . relacional
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE
    (196) relacional -> . numeros comparacion numeros
    (197) relacional -> . aritmetica comparacion aritmetica
    (198) relacional -> . aritmetica comparacion numeros
    (199) relacional -> . numeros comparacion aritmetica
    (200) relacional -> . booleanos comparacion booleanos
    (201) relacional -> . STRING comparacion STRING
    (202) relacional -> . CHAR comparacion CHAR
    (203) relacional -> . VARIABLE comparacion numeros
    (204) relacional -> . numeros comparacion VARIABLE
    (205) relacional -> . VARIABLE comparacion booleanos
    (206) relacional -> . booleanos comparacion VARIABLE
    (207) relacional -> . VARIABLE comparacion STRING
    (208) relacional -> . STRING comparacion VARIABLE
    (209) relacional -> . VARIABLE comparacion CHAR
    (210) relacional -> . CHAR comparacion VARIABLE
    (211) relacional -> . VARIABLE comparacion VARIABLE
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 178
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69
    STRING          shift and go to state 84
    CHAR            shift and go to state 85
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    booleanos                      shift and go to state 179
    relacional                     shift and go to state 180
    numeros                        shift and go to state 82
    aritmetica                     shift and go to state 83

state 82

    (196) relacional -> numeros . comparacion numeros
    (199) relacional -> numeros . comparacion aritmetica
    (204) relacional -> numeros . comparacion VARIABLE
    (216) aritmetica -> numeros . aritmeticos numeros
    (218) aritmetica -> numeros . aritmeticos VARIABLE
    (212) comparacion -> . IGUAL_COMPARACION
    (213) comparacion -> . DIFERENTE
    (214) comparacion -> . MAYOR
    (215) comparacion -> . MENOR
    (222) aritmeticos -> . MENOS
    (223) aritmeticos -> . MAS
    (224) aritmeticos -> . MULTIPLICACION
    (225) aritmeticos -> . DIVISION
    (226) aritmeticos -> . MOD

    IGUAL_COMPARACION shift and go to state 168
    DIFERENTE       shift and go to state 169
    MAYOR           shift and go to state 170
    MENOR           shift and go to state 171
    MENOS           shift and go to state 172
    MAS             shift and go to state 173
    MULTIPLICACION  shift and go to state 174
    DIVISION        shift and go to state 175
    MOD             shift and go to state 176

    comparacion                    shift and go to state 181
    aritmeticos                    shift and go to state 182

state 83

    (197) relacional -> aritmetica . comparacion aritmetica
    (198) relacional -> aritmetica . comparacion numeros
    (220) aritmetica -> aritmetica . aritmeticos numeros
    (221) aritmetica -> aritmetica . aritmeticos VARIABLE
    (212) comparacion -> . IGUAL_COMPARACION
    (213) comparacion -> . DIFERENTE
    (214) comparacion -> . MAYOR
    (215) comparacion -> . MENOR
    (222) aritmeticos -> . MENOS
    (223) aritmeticos -> . MAS
    (224) aritmeticos -> . MULTIPLICACION
    (225) aritmeticos -> . DIVISION
    (226) aritmeticos -> . MOD

    IGUAL_COMPARACION shift and go to state 168
    DIFERENTE       shift and go to state 169
    MAYOR           shift and go to state 170
    MENOR           shift and go to state 171
    MENOS           shift and go to state 172
    MAS             shift and go to state 173
    MULTIPLICACION  shift and go to state 174
    DIVISION        shift and go to state 175
    MOD             shift and go to state 176

    comparacion                    shift and go to state 183
    aritmeticos                    shift and go to state 184

state 84

    (201) relacional -> STRING . comparacion STRING
    (208) relacional -> STRING . comparacion VARIABLE
    (212) comparacion -> . IGUAL_COMPARACION
    (213) comparacion -> . DIFERENTE
    (214) comparacion -> . MAYOR
    (215) comparacion -> . MENOR

    IGUAL_COMPARACION shift and go to state 168
    DIFERENTE       shift and go to state 169
    MAYOR           shift and go to state 170
    MENOR           shift and go to state 171

    comparacion                    shift and go to state 185

state 85

    (202) relacional -> CHAR . comparacion CHAR
    (210) relacional -> CHAR . comparacion VARIABLE
    (212) comparacion -> . IGUAL_COMPARACION
    (213) comparacion -> . DIFERENTE
    (214) comparacion -> . MAYOR
    (215) comparacion -> . MENOR

    IGUAL_COMPARACION shift and go to state 168
    DIFERENTE       shift and go to state 169
    MAYOR           shift and go to state 170
    MENOR           shift and go to state 171

    comparacion                    shift and go to state 186

state 86

    (135) for -> FOR PAR_I VAR . VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> FOR PAR_I VAR . VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> FOR PAR_I VAR . VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 187


state 87

    (136) for -> FOR PAR_I VARIABLE . ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> FOR PAR_I VARIABLE . ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> FOR PAR_I VARIABLE . ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    ITERATOR        shift and go to state 188


state 88

    (179) if -> IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 189


state 89

    (182) elseif -> ELSE IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (185) condicional -> . valorC logicos condicional
    (186) condicional -> . valorC
    (187) valorC -> . VARIABLE
    (188) valorC -> . booleanos
    (189) valorC -> . relacional
    (190) valorC -> . NOT VARIABLE
    (191) valorC -> . NOT booleanos
    (192) valorC -> . NOT relacional
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE
    (196) relacional -> . numeros comparacion numeros
    (197) relacional -> . aritmetica comparacion aritmetica
    (198) relacional -> . aritmetica comparacion numeros
    (199) relacional -> . numeros comparacion aritmetica
    (200) relacional -> . booleanos comparacion booleanos
    (201) relacional -> . STRING comparacion STRING
    (202) relacional -> . CHAR comparacion CHAR
    (203) relacional -> . VARIABLE comparacion numeros
    (204) relacional -> . numeros comparacion VARIABLE
    (205) relacional -> . VARIABLE comparacion booleanos
    (206) relacional -> . booleanos comparacion VARIABLE
    (207) relacional -> . VARIABLE comparacion STRING
    (208) relacional -> . STRING comparacion VARIABLE
    (209) relacional -> . VARIABLE comparacion CHAR
    (210) relacional -> . CHAR comparacion VARIABLE
    (211) relacional -> . VARIABLE comparacion VARIABLE
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 78
    NOT             shift and go to state 81
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69
    STRING          shift and go to state 84
    CHAR            shift and go to state 85
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    condicional                    shift and go to state 190
    valorC                         shift and go to state 77
    booleanos                      shift and go to state 79
    relacional                     shift and go to state 80
    numeros                        shift and go to state 82
    aritmetica                     shift and go to state 83

state 90

    (183) else -> ELSE LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 191


state 91

    (15) contenido -> asignacion .
    (23) contenido -> asignacion . contenido
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 15 (contenido -> asignacion .)
    RETURN          reduce using rule 15 (contenido -> asignacion .)
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    asignacion                     shift and go to state 91
    contenido                      shift and go to state 192
    impresion                      shift and go to state 92
    entrada                        shift and go to state 93
    while                          shift and go to state 94
    for                            shift and go to state 95
    match                          shift and go to state 96
    if                             shift and go to state 97
    aritmetica                     shift and go to state 98
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25
    numeros                        shift and go to state 100

state 92

    (16) contenido -> impresion .
    (24) contenido -> impresion . contenido
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 16 (contenido -> impresion .)
    RETURN          reduce using rule 16 (contenido -> impresion .)
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    impresion                      shift and go to state 92
    contenido                      shift and go to state 193
    asignacion                     shift and go to state 91
    entrada                        shift and go to state 93
    while                          shift and go to state 94
    for                            shift and go to state 95
    match                          shift and go to state 96
    if                             shift and go to state 97
    aritmetica                     shift and go to state 98
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25
    numeros                        shift and go to state 100

state 93

    (17) contenido -> entrada .
    (25) contenido -> entrada . contenido
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 17 (contenido -> entrada .)
    RETURN          reduce using rule 17 (contenido -> entrada .)
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    entrada                        shift and go to state 93
    contenido                      shift and go to state 194
    asignacion                     shift and go to state 91
    impresion                      shift and go to state 92
    while                          shift and go to state 94
    for                            shift and go to state 95
    match                          shift and go to state 96
    if                             shift and go to state 97
    aritmetica                     shift and go to state 98
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25
    numeros                        shift and go to state 100

state 94

    (18) contenido -> while .
    (26) contenido -> while . contenido
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 18 (contenido -> while .)
    RETURN          reduce using rule 18 (contenido -> while .)
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    while                          shift and go to state 94
    contenido                      shift and go to state 195
    asignacion                     shift and go to state 91
    impresion                      shift and go to state 92
    entrada                        shift and go to state 93
    for                            shift and go to state 95
    match                          shift and go to state 96
    if                             shift and go to state 97
    aritmetica                     shift and go to state 98
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25
    numeros                        shift and go to state 100

state 95

    (19) contenido -> for .
    (27) contenido -> for . contenido
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 19 (contenido -> for .)
    RETURN          reduce using rule 19 (contenido -> for .)
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    for                            shift and go to state 95
    contenido                      shift and go to state 196
    asignacion                     shift and go to state 91
    impresion                      shift and go to state 92
    entrada                        shift and go to state 93
    while                          shift and go to state 94
    match                          shift and go to state 96
    if                             shift and go to state 97
    aritmetica                     shift and go to state 98
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25
    numeros                        shift and go to state 100

state 96

    (20) contenido -> match .
    (29) contenido -> match . contenido
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 20 (contenido -> match .)
    RETURN          reduce using rule 20 (contenido -> match .)
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    match                          shift and go to state 96
    contenido                      shift and go to state 197
    asignacion                     shift and go to state 91
    impresion                      shift and go to state 92
    entrada                        shift and go to state 93
    while                          shift and go to state 94
    for                            shift and go to state 95
    if                             shift and go to state 97
    aritmetica                     shift and go to state 98
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25
    numeros                        shift and go to state 100

state 97

    (21) contenido -> if .
    (28) contenido -> if . contenido
    (180) if -> if . elseif
    (181) if -> if . else
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (182) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (183) else -> . ELSE LLAVE_I contenido LLAVE_D
    (184) else -> . elseif else
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 21 (contenido -> if .)
    RETURN          reduce using rule 21 (contenido -> if .)
    ELSE            shift and go to state 37
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    if                             shift and go to state 97
    contenido                      shift and go to state 198
    elseif                         shift and go to state 35
    else                           shift and go to state 36
    asignacion                     shift and go to state 91
    impresion                      shift and go to state 92
    entrada                        shift and go to state 93
    while                          shift and go to state 94
    for                            shift and go to state 95
    match                          shift and go to state 96
    aritmetica                     shift and go to state 98
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25
    numeros                        shift and go to state 100

state 98

    (22) contenido -> aritmetica .
    (30) contenido -> aritmetica . contenido
    (220) aritmetica -> aritmetica . aritmeticos numeros
    (221) aritmetica -> aritmetica . aritmeticos VARIABLE
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (222) aritmeticos -> . MENOS
    (223) aritmeticos -> . MAS
    (224) aritmeticos -> . MULTIPLICACION
    (225) aritmeticos -> . DIVISION
    (226) aritmeticos -> . MOD
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 22 (contenido -> aritmetica .)
    RETURN          reduce using rule 22 (contenido -> aritmetica .)
    MENOS           shift and go to state 172
    MAS             shift and go to state 173
    MULTIPLICACION  shift and go to state 174
    DIVISION        shift and go to state 175
    MOD             shift and go to state 176
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    aritmetica                     shift and go to state 98
    contenido                      shift and go to state 199
    aritmeticos                    shift and go to state 184
    numeros                        shift and go to state 100
    asignacion                     shift and go to state 91
    impresion                      shift and go to state 92
    entrada                        shift and go to state 93
    while                          shift and go to state 94
    for                            shift and go to state 95
    match                          shift and go to state 96
    if                             shift and go to state 97
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25

state 99

    (141) match -> VARIABLE . MATCH LLAVE_I cases LLAVE_D
    (217) aritmetica -> VARIABLE . aritmeticos numeros
    (219) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (222) aritmeticos -> . MENOS
    (223) aritmeticos -> . MAS
    (224) aritmeticos -> . MULTIPLICACION
    (225) aritmeticos -> . DIVISION
    (226) aritmeticos -> . MOD

    MATCH           shift and go to state 39
    MENOS           shift and go to state 172
    MAS             shift and go to state 173
    MULTIPLICACION  shift and go to state 174
    DIVISION        shift and go to state 175
    MOD             shift and go to state 176

    aritmeticos                    shift and go to state 167

state 100

    (216) aritmetica -> numeros . aritmeticos numeros
    (218) aritmetica -> numeros . aritmeticos VARIABLE
    (222) aritmeticos -> . MENOS
    (223) aritmeticos -> . MAS
    (224) aritmeticos -> . MULTIPLICACION
    (225) aritmeticos -> . DIVISION
    (226) aritmeticos -> . MOD

    MENOS           shift and go to state 172
    MAS             shift and go to state 173
    MULTIPLICACION  shift and go to state 174
    DIVISION        shift and go to state 175
    MOD             shift and go to state 176

    aritmeticos                    shift and go to state 182

state 101

    (107) funcion -> DEF VARIABLE parametro IGUAL . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 200


state 102

    (114) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN valor LLAVE_D

    IGUAL           shift and go to state 201


state 103

    (115) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN valor LLAVE_D

    IGUAL           shift and go to state 202


state 104

    (116) dectipo -> DOBLE_PUNTO . tipo
    (117) dectipoTupla -> DOBLE_PUNTO . PAR_I tipos PAR_D
    (89) tipo -> . CHARCLASS
    (90) tipo -> . STRINGCLASS
    (91) tipo -> . BOOLCLASS
    (92) tipo -> . INTCLASS
    (93) tipo -> . LONGCLASS
    (94) tipo -> . DOUBLECLASS
    (95) tipo -> . FLOATCLASS

    PAR_I           shift and go to state 204
    CHARCLASS       shift and go to state 205
    STRINGCLASS     shift and go to state 206
    BOOLCLASS       shift and go to state 207
    INTCLASS        shift and go to state 208
    LONGCLASS       shift and go to state 209
    DOUBLECLASS     shift and go to state 210
    FLOATCLASS      shift and go to state 211

    tipo                           shift and go to state 203

state 105

    (111) parametro -> PAR_I PAR_D .

    IGUAL           reduce using rule 111 (parametro -> PAR_I PAR_D .)
    DOBLE_PUNTO     reduce using rule 111 (parametro -> PAR_I PAR_D .)


state 106

    (112) parametros -> PAR_I declaracion . PAR_D
    (113) parametros -> PAR_I declaracion . PAR_D parametros

    PAR_D           shift and go to state 212


state 107

    (108) declaracion -> VARIABLE . DOBLE_PUNTO tipo
    (109) declaracion -> VARIABLE . DOBLE_PUNTO tipo IGUAL valor

    DOBLE_PUNTO     shift and go to state 213


state 108

    (141) match -> VARIABLE MATCH LLAVE_I cases . LLAVE_D

    LLAVE_D         shift and go to state 214


state 109

    (142) cases -> casesInt .

    LLAVE_D         reduce using rule 142 (cases -> casesInt .)


state 110

    (143) cases -> casesLgn .

    LLAVE_D         reduce using rule 143 (cases -> casesLgn .)


state 111

    (144) cases -> casesFlt .

    LLAVE_D         reduce using rule 144 (cases -> casesFlt .)


state 112

    (145) cases -> casesDob .

    LLAVE_D         reduce using rule 145 (cases -> casesDob .)


state 113

    (146) cases -> casesStr .

    LLAVE_D         reduce using rule 146 (cases -> casesStr .)


state 114

    (147) cases -> casesChar .

    LLAVE_D         reduce using rule 147 (cases -> casesChar .)


state 115

    (149) casesInt -> caseInt .
    (150) casesInt -> caseInt . casesInt
    (151) casesInt -> caseInt . defcase
    (149) casesInt -> . caseInt
    (150) casesInt -> . caseInt casesInt
    (151) casesInt -> . caseInt defcase
    (176) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (148) caseInt -> . CASE INT FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 149 (casesInt -> caseInt .)
    CASE            shift and go to state 217

    caseInt                        shift and go to state 115
    casesInt                       shift and go to state 215
    defcase                        shift and go to state 216

state 116

    (153) casesLgn -> caseLgn .
    (154) casesLgn -> caseLgn . casesLgn
    (155) casesLgn -> caseLgn . defcase
    (153) casesLgn -> . caseLgn
    (154) casesLgn -> . caseLgn casesLgn
    (155) casesLgn -> . caseLgn defcase
    (176) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (152) caseLgn -> . CASE LONG FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 153 (casesLgn -> caseLgn .)
    CASE            shift and go to state 220

    caseLgn                        shift and go to state 116
    casesLgn                       shift and go to state 218
    defcase                        shift and go to state 219

state 117

    (157) casesFlt -> caseFlt .
    (158) casesFlt -> caseFlt . casesFlt
    (159) casesFlt -> caseFlt . defcase
    (157) casesFlt -> . caseFlt
    (158) casesFlt -> . caseFlt casesFlt
    (159) casesFlt -> . caseFlt defcase
    (176) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (156) caseFlt -> . CASE FLOAT FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 157 (casesFlt -> caseFlt .)
    CASE            shift and go to state 223

    caseFlt                        shift and go to state 117
    casesFlt                       shift and go to state 221
    defcase                        shift and go to state 222

state 118

    (161) casesDob -> caseDob .
    (162) casesDob -> caseDob . casesDob
    (163) casesDob -> caseDob . defcase
    (161) casesDob -> . caseDob
    (162) casesDob -> . caseDob casesDob
    (163) casesDob -> . caseDob defcase
    (176) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (160) caseDob -> . CASE DOUBLE FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 161 (casesDob -> caseDob .)
    CASE            shift and go to state 226

    caseDob                        shift and go to state 118
    casesDob                       shift and go to state 224
    defcase                        shift and go to state 225

state 119

    (165) casesStr -> caseStr .
    (166) casesStr -> caseStr . casesStr
    (167) casesStr -> caseStr . defcase
    (165) casesStr -> . caseStr
    (166) casesStr -> . caseStr casesStr
    (167) casesStr -> . caseStr defcase
    (176) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (164) caseStr -> . CASE STRING FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 165 (casesStr -> caseStr .)
    CASE            shift and go to state 229

    caseStr                        shift and go to state 119
    casesStr                       shift and go to state 227
    defcase                        shift and go to state 228

state 120

    (169) casesChar -> caseChar .
    (170) casesChar -> caseChar . casesChar
    (171) casesChar -> caseChar . defcase
    (169) casesChar -> . caseChar
    (170) casesChar -> . caseChar casesChar
    (171) casesChar -> . caseChar defcase
    (176) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (168) caseChar -> . CASE CHAR FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 169 (casesChar -> caseChar .)
    CASE            shift and go to state 232

    caseChar                       shift and go to state 120
    casesChar                      shift and go to state 230
    defcase                        shift and go to state 231

state 121

    (148) caseInt -> CASE . INT FUNCION_FLECHA codeBlock
    (152) caseLgn -> CASE . LONG FUNCION_FLECHA codeBlock
    (156) caseFlt -> CASE . FLOAT FUNCION_FLECHA codeBlock
    (160) caseDob -> CASE . DOUBLE FUNCION_FLECHA codeBlock
    (164) caseStr -> CASE . STRING FUNCION_FLECHA codeBlock
    (168) caseChar -> CASE . CHAR FUNCION_FLECHA codeBlock

    INT             shift and go to state 233
    LONG            shift and go to state 234
    FLOAT           shift and go to state 235
    DOUBLE          shift and go to state 236
    STRING          shift and go to state 237
    CHAR            shift and go to state 238


state 122

    (122) impresion -> PRINTLN PAR_I valorI PAR_D .

    $end            reduce using rule 122 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VAR             reduce using rule 122 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VAL             reduce using rule 122 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    PRINTLN         reduce using rule 122 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    PRINT           reduce using rule 122 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    READLINE        reduce using rule 122 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    WHILE           reduce using rule 122 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    FOR             reduce using rule 122 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VARIABLE        reduce using rule 122 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    IF              reduce using rule 122 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    INT             reduce using rule 122 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    LONG            reduce using rule 122 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    FLOAT           reduce using rule 122 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    DOUBLE          reduce using rule 122 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    LLAVE_D         reduce using rule 122 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    RETURN          reduce using rule 122 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    CASE            reduce using rule 122 (impresion -> PRINTLN PAR_I valorI PAR_D .)


state 123

    (124) valorI -> valor MAS . valorI
    (124) valorI -> . valor MAS valorI
    (125) valorI -> . valor
    (96) valor -> . STRING
    (97) valor -> . CHAR
    (98) valor -> . VARIABLE
    (99) valor -> . numeros
    (100) valor -> . booleanos
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    VARIABLE        shift and go to state 61
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69

    valor                          shift and go to state 58
    valorI                         shift and go to state 239
    numeros                        shift and go to state 62
    booleanos                      shift and go to state 63

state 124

    (123) impresion -> PRINT PAR_I valorI PAR_D .

    $end            reduce using rule 123 (impresion -> PRINT PAR_I valorI PAR_D .)
    VAR             reduce using rule 123 (impresion -> PRINT PAR_I valorI PAR_D .)
    VAL             reduce using rule 123 (impresion -> PRINT PAR_I valorI PAR_D .)
    PRINTLN         reduce using rule 123 (impresion -> PRINT PAR_I valorI PAR_D .)
    PRINT           reduce using rule 123 (impresion -> PRINT PAR_I valorI PAR_D .)
    READLINE        reduce using rule 123 (impresion -> PRINT PAR_I valorI PAR_D .)
    WHILE           reduce using rule 123 (impresion -> PRINT PAR_I valorI PAR_D .)
    FOR             reduce using rule 123 (impresion -> PRINT PAR_I valorI PAR_D .)
    VARIABLE        reduce using rule 123 (impresion -> PRINT PAR_I valorI PAR_D .)
    IF              reduce using rule 123 (impresion -> PRINT PAR_I valorI PAR_D .)
    INT             reduce using rule 123 (impresion -> PRINT PAR_I valorI PAR_D .)
    LONG            reduce using rule 123 (impresion -> PRINT PAR_I valorI PAR_D .)
    FLOAT           reduce using rule 123 (impresion -> PRINT PAR_I valorI PAR_D .)
    DOUBLE          reduce using rule 123 (impresion -> PRINT PAR_I valorI PAR_D .)
    LLAVE_D         reduce using rule 123 (impresion -> PRINT PAR_I valorI PAR_D .)
    RETURN          reduce using rule 123 (impresion -> PRINT PAR_I valorI PAR_D .)
    CASE            reduce using rule 123 (impresion -> PRINT PAR_I valorI PAR_D .)


state 125

    (34) asignacion -> VAR VARIABLE IGUAL VARIABLE .
    (217) aritmetica -> VARIABLE . aritmeticos numeros
    (219) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (222) aritmeticos -> . MENOS
    (223) aritmeticos -> . MAS
    (224) aritmeticos -> . MULTIPLICACION
    (225) aritmeticos -> . DIVISION
    (226) aritmeticos -> . MOD

    DEF             reduce using rule 34 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PRINTLN         reduce using rule 34 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PRINT           reduce using rule 34 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    READLINE        reduce using rule 34 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VAR             reduce using rule 34 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VAL             reduce using rule 34 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    WHILE           reduce using rule 34 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    FOR             reduce using rule 34 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VARIABLE        reduce using rule 34 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    IF              reduce using rule 34 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    $end            reduce using rule 34 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    INT             reduce using rule 34 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    LONG            reduce using rule 34 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    FLOAT           reduce using rule 34 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    DOUBLE          reduce using rule 34 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 34 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    RETURN          reduce using rule 34 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    CASE            reduce using rule 34 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    MENOS           shift and go to state 172
    MAS             shift and go to state 173
    MULTIPLICACION  shift and go to state 174
    DIVISION        shift and go to state 175
    MOD             shift and go to state 176

    aritmeticos                    shift and go to state 167

state 126

    (36) asignacion -> VAR VARIABLE IGUAL aritmetica .
    (220) aritmetica -> aritmetica . aritmeticos numeros
    (221) aritmetica -> aritmetica . aritmeticos VARIABLE
    (222) aritmeticos -> . MENOS
    (223) aritmeticos -> . MAS
    (224) aritmeticos -> . MULTIPLICACION
    (225) aritmeticos -> . DIVISION
    (226) aritmeticos -> . MOD

    DEF             reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VAR             reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    $end            reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 36 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    MENOS           shift and go to state 172
    MAS             shift and go to state 173
    MULTIPLICACION  shift and go to state 174
    DIVISION        shift and go to state 175
    MOD             shift and go to state 176

    aritmeticos                    shift and go to state 184

state 127

    (47) asignacionLong -> VAR VARIABLE IGUAL LONG .
    (104) numeros -> LONG .

    DEF             reduce using rule 47 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    PRINTLN         reduce using rule 47 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    PRINT           reduce using rule 47 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    READLINE        reduce using rule 47 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    VAR             reduce using rule 47 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    VAL             reduce using rule 47 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    WHILE           reduce using rule 47 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    FOR             reduce using rule 47 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    VARIABLE        reduce using rule 47 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    IF              reduce using rule 47 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    $end            reduce using rule 47 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    INT             reduce using rule 47 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    LONG            reduce using rule 47 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    FLOAT           reduce using rule 47 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    DOUBLE          reduce using rule 47 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    LLAVE_D         reduce using rule 47 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    RETURN          reduce using rule 47 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    CASE            reduce using rule 47 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    MENOS           reduce using rule 104 (numeros -> LONG .)
    MAS             reduce using rule 104 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 104 (numeros -> LONG .)
    DIVISION        reduce using rule 104 (numeros -> LONG .)
    MOD             reduce using rule 104 (numeros -> LONG .)


state 128

    (53) asignacionInt -> VAR VARIABLE IGUAL INT .
    (103) numeros -> INT .

    DEF             reduce using rule 53 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    PRINTLN         reduce using rule 53 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    PRINT           reduce using rule 53 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    READLINE        reduce using rule 53 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    VAR             reduce using rule 53 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    VAL             reduce using rule 53 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    WHILE           reduce using rule 53 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    FOR             reduce using rule 53 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    VARIABLE        reduce using rule 53 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    IF              reduce using rule 53 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    $end            reduce using rule 53 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    INT             reduce using rule 53 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    LONG            reduce using rule 53 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    FLOAT           reduce using rule 53 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    DOUBLE          reduce using rule 53 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    LLAVE_D         reduce using rule 53 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    RETURN          reduce using rule 53 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    CASE            reduce using rule 53 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    MENOS           reduce using rule 103 (numeros -> INT .)
    MAS             reduce using rule 103 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 103 (numeros -> INT .)
    DIVISION        reduce using rule 103 (numeros -> INT .)
    MOD             reduce using rule 103 (numeros -> INT .)


state 129

    (59) asignacionFloat -> VAR VARIABLE IGUAL FLOAT .
    (105) numeros -> FLOAT .

    DEF             reduce using rule 59 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    PRINTLN         reduce using rule 59 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    PRINT           reduce using rule 59 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    READLINE        reduce using rule 59 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    VAR             reduce using rule 59 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    VAL             reduce using rule 59 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    WHILE           reduce using rule 59 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    FOR             reduce using rule 59 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    VARIABLE        reduce using rule 59 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    IF              reduce using rule 59 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    $end            reduce using rule 59 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    INT             reduce using rule 59 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    LONG            reduce using rule 59 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    FLOAT           reduce using rule 59 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    DOUBLE          reduce using rule 59 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    LLAVE_D         reduce using rule 59 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    RETURN          reduce using rule 59 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    CASE            reduce using rule 59 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    MENOS           reduce using rule 105 (numeros -> FLOAT .)
    MAS             reduce using rule 105 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 105 (numeros -> FLOAT .)
    DIVISION        reduce using rule 105 (numeros -> FLOAT .)
    MOD             reduce using rule 105 (numeros -> FLOAT .)


state 130

    (65) asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .
    (106) numeros -> DOUBLE .

    DEF             reduce using rule 65 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    PRINTLN         reduce using rule 65 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    PRINT           reduce using rule 65 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    READLINE        reduce using rule 65 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    VAR             reduce using rule 65 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    VAL             reduce using rule 65 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    WHILE           reduce using rule 65 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    FOR             reduce using rule 65 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    VARIABLE        reduce using rule 65 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    IF              reduce using rule 65 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    $end            reduce using rule 65 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    INT             reduce using rule 65 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    LONG            reduce using rule 65 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    FLOAT           reduce using rule 65 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    DOUBLE          reduce using rule 65 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    LLAVE_D         reduce using rule 65 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    RETURN          reduce using rule 65 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    CASE            reduce using rule 65 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    MENOS           reduce using rule 106 (numeros -> DOUBLE .)
    MAS             reduce using rule 106 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 106 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 106 (numeros -> DOUBLE .)
    MOD             reduce using rule 106 (numeros -> DOUBLE .)


state 131

    (71) asignacionString -> VAR VARIABLE IGUAL STRING .

    DEF             reduce using rule 71 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PRINTLN         reduce using rule 71 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PRINT           reduce using rule 71 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    READLINE        reduce using rule 71 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VAR             reduce using rule 71 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VAL             reduce using rule 71 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    WHILE           reduce using rule 71 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    FOR             reduce using rule 71 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VARIABLE        reduce using rule 71 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    IF              reduce using rule 71 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    $end            reduce using rule 71 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    INT             reduce using rule 71 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    LONG            reduce using rule 71 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    FLOAT           reduce using rule 71 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    DOUBLE          reduce using rule 71 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    LLAVE_D         reduce using rule 71 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    RETURN          reduce using rule 71 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    CASE            reduce using rule 71 (asignacionString -> VAR VARIABLE IGUAL STRING .)


state 132

    (77) asignacionChar -> VAR VARIABLE IGUAL CHAR .

    DEF             reduce using rule 77 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    PRINTLN         reduce using rule 77 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    PRINT           reduce using rule 77 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    READLINE        reduce using rule 77 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VAR             reduce using rule 77 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VAL             reduce using rule 77 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    WHILE           reduce using rule 77 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    FOR             reduce using rule 77 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VARIABLE        reduce using rule 77 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    IF              reduce using rule 77 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    $end            reduce using rule 77 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    INT             reduce using rule 77 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    LONG            reduce using rule 77 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    FLOAT           reduce using rule 77 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    DOUBLE          reduce using rule 77 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    LLAVE_D         reduce using rule 77 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    RETURN          reduce using rule 77 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    CASE            reduce using rule 77 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)


state 133

    (83) asignacionBoolean -> VAR VARIABLE IGUAL booleanos .

    DEF             reduce using rule 83 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    PRINTLN         reduce using rule 83 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 83 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    READLINE        reduce using rule 83 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VAR             reduce using rule 83 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VAL             reduce using rule 83 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 83 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    FOR             reduce using rule 83 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 83 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    IF              reduce using rule 83 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    $end            reduce using rule 83 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    INT             reduce using rule 83 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    LONG            reduce using rule 83 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    FLOAT           reduce using rule 83 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    DOUBLE          reduce using rule 83 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    LLAVE_D         reduce using rule 83 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    RETURN          reduce using rule 83 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 83 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)


state 134

    (127) array -> VAR VARIABLE IGUAL ARRAYCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 240


state 135

    (48) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL LONG
    (51) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 241


state 136

    (54) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS . IGUAL INT
    (57) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 242


state 137

    (60) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL FLOAT
    (63) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 243


state 138

    (66) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL DOUBLE
    (69) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 244


state 139

    (72) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL STRING
    (75) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 245


state 140

    (78) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL CHAR
    (81) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 246


state 141

    (84) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL booleanos
    (87) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 247


state 142

    (128) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 248


state 143

    (35) asignacion -> VAL VARIABLE IGUAL VARIABLE .
    (217) aritmetica -> VARIABLE . aritmeticos numeros
    (219) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (222) aritmeticos -> . MENOS
    (223) aritmeticos -> . MAS
    (224) aritmeticos -> . MULTIPLICACION
    (225) aritmeticos -> . DIVISION
    (226) aritmeticos -> . MOD

    DEF             reduce using rule 35 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PRINTLN         reduce using rule 35 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PRINT           reduce using rule 35 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    READLINE        reduce using rule 35 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VAR             reduce using rule 35 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VAL             reduce using rule 35 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    WHILE           reduce using rule 35 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    FOR             reduce using rule 35 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VARIABLE        reduce using rule 35 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    IF              reduce using rule 35 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    $end            reduce using rule 35 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    INT             reduce using rule 35 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    LONG            reduce using rule 35 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    FLOAT           reduce using rule 35 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    DOUBLE          reduce using rule 35 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 35 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    RETURN          reduce using rule 35 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    CASE            reduce using rule 35 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    MENOS           shift and go to state 172
    MAS             shift and go to state 173
    MULTIPLICACION  shift and go to state 174
    DIVISION        shift and go to state 175
    MOD             shift and go to state 176

    aritmeticos                    shift and go to state 167

state 144

    (37) asignacion -> VAL VARIABLE IGUAL aritmetica .
    (220) aritmetica -> aritmetica . aritmeticos numeros
    (221) aritmetica -> aritmetica . aritmeticos VARIABLE
    (222) aritmeticos -> . MENOS
    (223) aritmeticos -> . MAS
    (224) aritmeticos -> . MULTIPLICACION
    (225) aritmeticos -> . DIVISION
    (226) aritmeticos -> . MOD

    DEF             reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VAR             reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    $end            reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 37 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    MENOS           shift and go to state 172
    MAS             shift and go to state 173
    MULTIPLICACION  shift and go to state 174
    DIVISION        shift and go to state 175
    MOD             shift and go to state 176

    aritmeticos                    shift and go to state 184

state 145

    (49) asignacionLong -> VAL VARIABLE IGUAL LONG .
    (104) numeros -> LONG .

    DEF             reduce using rule 49 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    PRINTLN         reduce using rule 49 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    PRINT           reduce using rule 49 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    READLINE        reduce using rule 49 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    VAR             reduce using rule 49 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    VAL             reduce using rule 49 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    WHILE           reduce using rule 49 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    FOR             reduce using rule 49 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    VARIABLE        reduce using rule 49 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    IF              reduce using rule 49 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    $end            reduce using rule 49 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    INT             reduce using rule 49 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    LONG            reduce using rule 49 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    FLOAT           reduce using rule 49 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    DOUBLE          reduce using rule 49 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    LLAVE_D         reduce using rule 49 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    RETURN          reduce using rule 49 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    CASE            reduce using rule 49 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    MENOS           reduce using rule 104 (numeros -> LONG .)
    MAS             reduce using rule 104 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 104 (numeros -> LONG .)
    DIVISION        reduce using rule 104 (numeros -> LONG .)
    MOD             reduce using rule 104 (numeros -> LONG .)


state 146

    (55) asignacionInt -> VAL VARIABLE IGUAL INT .
    (103) numeros -> INT .

    DEF             reduce using rule 55 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    PRINTLN         reduce using rule 55 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    PRINT           reduce using rule 55 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    READLINE        reduce using rule 55 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    VAR             reduce using rule 55 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    VAL             reduce using rule 55 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    WHILE           reduce using rule 55 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    FOR             reduce using rule 55 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    VARIABLE        reduce using rule 55 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    IF              reduce using rule 55 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    $end            reduce using rule 55 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    INT             reduce using rule 55 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    LONG            reduce using rule 55 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    FLOAT           reduce using rule 55 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    DOUBLE          reduce using rule 55 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    LLAVE_D         reduce using rule 55 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    RETURN          reduce using rule 55 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    CASE            reduce using rule 55 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    MENOS           reduce using rule 103 (numeros -> INT .)
    MAS             reduce using rule 103 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 103 (numeros -> INT .)
    DIVISION        reduce using rule 103 (numeros -> INT .)
    MOD             reduce using rule 103 (numeros -> INT .)


state 147

    (61) asignacionFloat -> VAL VARIABLE IGUAL FLOAT .
    (105) numeros -> FLOAT .

    DEF             reduce using rule 61 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    PRINTLN         reduce using rule 61 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    PRINT           reduce using rule 61 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    READLINE        reduce using rule 61 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    VAR             reduce using rule 61 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    VAL             reduce using rule 61 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    WHILE           reduce using rule 61 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    FOR             reduce using rule 61 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    VARIABLE        reduce using rule 61 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    IF              reduce using rule 61 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    $end            reduce using rule 61 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    INT             reduce using rule 61 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    LONG            reduce using rule 61 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    FLOAT           reduce using rule 61 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    DOUBLE          reduce using rule 61 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    LLAVE_D         reduce using rule 61 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    RETURN          reduce using rule 61 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    CASE            reduce using rule 61 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    MENOS           reduce using rule 105 (numeros -> FLOAT .)
    MAS             reduce using rule 105 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 105 (numeros -> FLOAT .)
    DIVISION        reduce using rule 105 (numeros -> FLOAT .)
    MOD             reduce using rule 105 (numeros -> FLOAT .)


state 148

    (67) asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .
    (106) numeros -> DOUBLE .

    DEF             reduce using rule 67 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    PRINTLN         reduce using rule 67 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    PRINT           reduce using rule 67 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    READLINE        reduce using rule 67 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    VAR             reduce using rule 67 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    VAL             reduce using rule 67 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    WHILE           reduce using rule 67 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    FOR             reduce using rule 67 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    VARIABLE        reduce using rule 67 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    IF              reduce using rule 67 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    $end            reduce using rule 67 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    INT             reduce using rule 67 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    LONG            reduce using rule 67 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    FLOAT           reduce using rule 67 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    DOUBLE          reduce using rule 67 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    LLAVE_D         reduce using rule 67 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    RETURN          reduce using rule 67 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    CASE            reduce using rule 67 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    MENOS           reduce using rule 106 (numeros -> DOUBLE .)
    MAS             reduce using rule 106 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 106 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 106 (numeros -> DOUBLE .)
    MOD             reduce using rule 106 (numeros -> DOUBLE .)


state 149

    (73) asignacionString -> VAL VARIABLE IGUAL STRING .

    DEF             reduce using rule 73 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PRINTLN         reduce using rule 73 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PRINT           reduce using rule 73 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    READLINE        reduce using rule 73 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VAR             reduce using rule 73 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VAL             reduce using rule 73 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    WHILE           reduce using rule 73 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    FOR             reduce using rule 73 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VARIABLE        reduce using rule 73 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    IF              reduce using rule 73 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    $end            reduce using rule 73 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    INT             reduce using rule 73 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    LONG            reduce using rule 73 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    FLOAT           reduce using rule 73 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    DOUBLE          reduce using rule 73 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    LLAVE_D         reduce using rule 73 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    RETURN          reduce using rule 73 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    CASE            reduce using rule 73 (asignacionString -> VAL VARIABLE IGUAL STRING .)


state 150

    (79) asignacionChar -> VAL VARIABLE IGUAL CHAR .

    DEF             reduce using rule 79 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    PRINTLN         reduce using rule 79 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    PRINT           reduce using rule 79 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    READLINE        reduce using rule 79 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VAR             reduce using rule 79 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VAL             reduce using rule 79 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    WHILE           reduce using rule 79 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    FOR             reduce using rule 79 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VARIABLE        reduce using rule 79 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    IF              reduce using rule 79 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    $end            reduce using rule 79 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    INT             reduce using rule 79 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    LONG            reduce using rule 79 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    FLOAT           reduce using rule 79 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    DOUBLE          reduce using rule 79 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    LLAVE_D         reduce using rule 79 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    RETURN          reduce using rule 79 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    CASE            reduce using rule 79 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)


state 151

    (85) asignacionBoolean -> VAL VARIABLE IGUAL booleanos .

    DEF             reduce using rule 85 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    PRINTLN         reduce using rule 85 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 85 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    READLINE        reduce using rule 85 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VAR             reduce using rule 85 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VAL             reduce using rule 85 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 85 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    FOR             reduce using rule 85 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 85 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    IF              reduce using rule 85 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    $end            reduce using rule 85 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    INT             reduce using rule 85 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    LONG            reduce using rule 85 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    FLOAT           reduce using rule 85 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    DOUBLE          reduce using rule 85 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    LLAVE_D         reduce using rule 85 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    RETURN          reduce using rule 85 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 85 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)


state 152

    (130) list -> VAL VARIABLE IGUAL LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 249


state 153

    (50) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL LONG
    (52) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 250


state 154

    (56) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS . IGUAL INT
    (58) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 251


state 155

    (62) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL FLOAT
    (64) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 252


state 156

    (68) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL DOUBLE
    (70) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 253


state 157

    (74) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL STRING
    (76) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 254


state 158

    (80) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL CHAR
    (82) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 255


state 159

    (86) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL booleanos
    (88) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 256


state 160

    (131) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS . CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    CORCHETE_I      shift and go to state 257


state 161

    (134) while -> WHILE PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 258


state 162

    (185) condicional -> valorC logicos . condicional
    (185) condicional -> . valorC logicos condicional
    (186) condicional -> . valorC
    (187) valorC -> . VARIABLE
    (188) valorC -> . booleanos
    (189) valorC -> . relacional
    (190) valorC -> . NOT VARIABLE
    (191) valorC -> . NOT booleanos
    (192) valorC -> . NOT relacional
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE
    (196) relacional -> . numeros comparacion numeros
    (197) relacional -> . aritmetica comparacion aritmetica
    (198) relacional -> . aritmetica comparacion numeros
    (199) relacional -> . numeros comparacion aritmetica
    (200) relacional -> . booleanos comparacion booleanos
    (201) relacional -> . STRING comparacion STRING
    (202) relacional -> . CHAR comparacion CHAR
    (203) relacional -> . VARIABLE comparacion numeros
    (204) relacional -> . numeros comparacion VARIABLE
    (205) relacional -> . VARIABLE comparacion booleanos
    (206) relacional -> . booleanos comparacion VARIABLE
    (207) relacional -> . VARIABLE comparacion STRING
    (208) relacional -> . STRING comparacion VARIABLE
    (209) relacional -> . VARIABLE comparacion CHAR
    (210) relacional -> . CHAR comparacion VARIABLE
    (211) relacional -> . VARIABLE comparacion VARIABLE
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 78
    NOT             shift and go to state 81
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69
    STRING          shift and go to state 84
    CHAR            shift and go to state 85
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    valorC                         shift and go to state 77
    condicional                    shift and go to state 259
    booleanos                      shift and go to state 79
    relacional                     shift and go to state 80
    numeros                        shift and go to state 82
    aritmetica                     shift and go to state 83

state 163

    (193) logicos -> AND .

    VARIABLE        reduce using rule 193 (logicos -> AND .)
    NOT             reduce using rule 193 (logicos -> AND .)
    TRUE            reduce using rule 193 (logicos -> AND .)
    FLASE           reduce using rule 193 (logicos -> AND .)
    STRING          reduce using rule 193 (logicos -> AND .)
    CHAR            reduce using rule 193 (logicos -> AND .)
    INT             reduce using rule 193 (logicos -> AND .)
    LONG            reduce using rule 193 (logicos -> AND .)
    FLOAT           reduce using rule 193 (logicos -> AND .)
    DOUBLE          reduce using rule 193 (logicos -> AND .)


state 164

    (194) logicos -> OR .

    VARIABLE        reduce using rule 194 (logicos -> OR .)
    NOT             reduce using rule 194 (logicos -> OR .)
    TRUE            reduce using rule 194 (logicos -> OR .)
    FLASE           reduce using rule 194 (logicos -> OR .)
    STRING          reduce using rule 194 (logicos -> OR .)
    CHAR            reduce using rule 194 (logicos -> OR .)
    INT             reduce using rule 194 (logicos -> OR .)
    LONG            reduce using rule 194 (logicos -> OR .)
    FLOAT           reduce using rule 194 (logicos -> OR .)
    DOUBLE          reduce using rule 194 (logicos -> OR .)


state 165

    (195) logicos -> NOT .

    VARIABLE        reduce using rule 195 (logicos -> NOT .)
    NOT             reduce using rule 195 (logicos -> NOT .)
    TRUE            reduce using rule 195 (logicos -> NOT .)
    FLASE           reduce using rule 195 (logicos -> NOT .)
    STRING          reduce using rule 195 (logicos -> NOT .)
    CHAR            reduce using rule 195 (logicos -> NOT .)
    INT             reduce using rule 195 (logicos -> NOT .)
    LONG            reduce using rule 195 (logicos -> NOT .)
    FLOAT           reduce using rule 195 (logicos -> NOT .)
    DOUBLE          reduce using rule 195 (logicos -> NOT .)


state 166

    (203) relacional -> VARIABLE comparacion . numeros
    (205) relacional -> VARIABLE comparacion . booleanos
    (207) relacional -> VARIABLE comparacion . STRING
    (209) relacional -> VARIABLE comparacion . CHAR
    (211) relacional -> VARIABLE comparacion . VARIABLE
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE

    STRING          shift and go to state 263
    CHAR            shift and go to state 264
    VARIABLE        shift and go to state 260
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69

    numeros                        shift and go to state 261
    booleanos                      shift and go to state 262

state 167

    (217) aritmetica -> VARIABLE aritmeticos . numeros
    (219) aritmetica -> VARIABLE aritmeticos . VARIABLE
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VARIABLE        shift and go to state 265
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    numeros                        shift and go to state 266

state 168

    (212) comparacion -> IGUAL_COMPARACION .

    STRING          reduce using rule 212 (comparacion -> IGUAL_COMPARACION .)
    CHAR            reduce using rule 212 (comparacion -> IGUAL_COMPARACION .)
    VARIABLE        reduce using rule 212 (comparacion -> IGUAL_COMPARACION .)
    INT             reduce using rule 212 (comparacion -> IGUAL_COMPARACION .)
    LONG            reduce using rule 212 (comparacion -> IGUAL_COMPARACION .)
    FLOAT           reduce using rule 212 (comparacion -> IGUAL_COMPARACION .)
    DOUBLE          reduce using rule 212 (comparacion -> IGUAL_COMPARACION .)
    TRUE            reduce using rule 212 (comparacion -> IGUAL_COMPARACION .)
    FLASE           reduce using rule 212 (comparacion -> IGUAL_COMPARACION .)


state 169

    (213) comparacion -> DIFERENTE .

    STRING          reduce using rule 213 (comparacion -> DIFERENTE .)
    CHAR            reduce using rule 213 (comparacion -> DIFERENTE .)
    VARIABLE        reduce using rule 213 (comparacion -> DIFERENTE .)
    INT             reduce using rule 213 (comparacion -> DIFERENTE .)
    LONG            reduce using rule 213 (comparacion -> DIFERENTE .)
    FLOAT           reduce using rule 213 (comparacion -> DIFERENTE .)
    DOUBLE          reduce using rule 213 (comparacion -> DIFERENTE .)
    TRUE            reduce using rule 213 (comparacion -> DIFERENTE .)
    FLASE           reduce using rule 213 (comparacion -> DIFERENTE .)


state 170

    (214) comparacion -> MAYOR .

    STRING          reduce using rule 214 (comparacion -> MAYOR .)
    CHAR            reduce using rule 214 (comparacion -> MAYOR .)
    VARIABLE        reduce using rule 214 (comparacion -> MAYOR .)
    INT             reduce using rule 214 (comparacion -> MAYOR .)
    LONG            reduce using rule 214 (comparacion -> MAYOR .)
    FLOAT           reduce using rule 214 (comparacion -> MAYOR .)
    DOUBLE          reduce using rule 214 (comparacion -> MAYOR .)
    TRUE            reduce using rule 214 (comparacion -> MAYOR .)
    FLASE           reduce using rule 214 (comparacion -> MAYOR .)


state 171

    (215) comparacion -> MENOR .

    STRING          reduce using rule 215 (comparacion -> MENOR .)
    CHAR            reduce using rule 215 (comparacion -> MENOR .)
    VARIABLE        reduce using rule 215 (comparacion -> MENOR .)
    INT             reduce using rule 215 (comparacion -> MENOR .)
    LONG            reduce using rule 215 (comparacion -> MENOR .)
    FLOAT           reduce using rule 215 (comparacion -> MENOR .)
    DOUBLE          reduce using rule 215 (comparacion -> MENOR .)
    TRUE            reduce using rule 215 (comparacion -> MENOR .)
    FLASE           reduce using rule 215 (comparacion -> MENOR .)


state 172

    (222) aritmeticos -> MENOS .

    VARIABLE        reduce using rule 222 (aritmeticos -> MENOS .)
    INT             reduce using rule 222 (aritmeticos -> MENOS .)
    LONG            reduce using rule 222 (aritmeticos -> MENOS .)
    FLOAT           reduce using rule 222 (aritmeticos -> MENOS .)
    DOUBLE          reduce using rule 222 (aritmeticos -> MENOS .)


state 173

    (223) aritmeticos -> MAS .

    VARIABLE        reduce using rule 223 (aritmeticos -> MAS .)
    INT             reduce using rule 223 (aritmeticos -> MAS .)
    LONG            reduce using rule 223 (aritmeticos -> MAS .)
    FLOAT           reduce using rule 223 (aritmeticos -> MAS .)
    DOUBLE          reduce using rule 223 (aritmeticos -> MAS .)


state 174

    (224) aritmeticos -> MULTIPLICACION .

    VARIABLE        reduce using rule 224 (aritmeticos -> MULTIPLICACION .)
    INT             reduce using rule 224 (aritmeticos -> MULTIPLICACION .)
    LONG            reduce using rule 224 (aritmeticos -> MULTIPLICACION .)
    FLOAT           reduce using rule 224 (aritmeticos -> MULTIPLICACION .)
    DOUBLE          reduce using rule 224 (aritmeticos -> MULTIPLICACION .)


state 175

    (225) aritmeticos -> DIVISION .

    VARIABLE        reduce using rule 225 (aritmeticos -> DIVISION .)
    INT             reduce using rule 225 (aritmeticos -> DIVISION .)
    LONG            reduce using rule 225 (aritmeticos -> DIVISION .)
    FLOAT           reduce using rule 225 (aritmeticos -> DIVISION .)
    DOUBLE          reduce using rule 225 (aritmeticos -> DIVISION .)


state 176

    (226) aritmeticos -> MOD .

    VARIABLE        reduce using rule 226 (aritmeticos -> MOD .)
    INT             reduce using rule 226 (aritmeticos -> MOD .)
    LONG            reduce using rule 226 (aritmeticos -> MOD .)
    FLOAT           reduce using rule 226 (aritmeticos -> MOD .)
    DOUBLE          reduce using rule 226 (aritmeticos -> MOD .)


state 177

    (200) relacional -> booleanos comparacion . booleanos
    (206) relacional -> booleanos comparacion . VARIABLE
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE

    VARIABLE        shift and go to state 268
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69

    booleanos                      shift and go to state 267

state 178

    (190) valorC -> NOT VARIABLE .
    (203) relacional -> VARIABLE . comparacion numeros
    (205) relacional -> VARIABLE . comparacion booleanos
    (207) relacional -> VARIABLE . comparacion STRING
    (209) relacional -> VARIABLE . comparacion CHAR
    (211) relacional -> VARIABLE . comparacion VARIABLE
    (217) aritmetica -> VARIABLE . aritmeticos numeros
    (219) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (212) comparacion -> . IGUAL_COMPARACION
    (213) comparacion -> . DIFERENTE
    (214) comparacion -> . MAYOR
    (215) comparacion -> . MENOR
    (222) aritmeticos -> . MENOS
    (223) aritmeticos -> . MAS
    (224) aritmeticos -> . MULTIPLICACION
    (225) aritmeticos -> . DIVISION
    (226) aritmeticos -> . MOD

    AND             reduce using rule 190 (valorC -> NOT VARIABLE .)
    OR              reduce using rule 190 (valorC -> NOT VARIABLE .)
    NOT             reduce using rule 190 (valorC -> NOT VARIABLE .)
    PAR_D           reduce using rule 190 (valorC -> NOT VARIABLE .)
    IGUAL_COMPARACION shift and go to state 168
    DIFERENTE       shift and go to state 169
    MAYOR           shift and go to state 170
    MENOR           shift and go to state 171
    MENOS           shift and go to state 172
    MAS             shift and go to state 173
    MULTIPLICACION  shift and go to state 174
    DIVISION        shift and go to state 175
    MOD             shift and go to state 176

    comparacion                    shift and go to state 166
    aritmeticos                    shift and go to state 167

state 179

    (191) valorC -> NOT booleanos .
    (200) relacional -> booleanos . comparacion booleanos
    (206) relacional -> booleanos . comparacion VARIABLE
    (212) comparacion -> . IGUAL_COMPARACION
    (213) comparacion -> . DIFERENTE
    (214) comparacion -> . MAYOR
    (215) comparacion -> . MENOR

    AND             reduce using rule 191 (valorC -> NOT booleanos .)
    OR              reduce using rule 191 (valorC -> NOT booleanos .)
    NOT             reduce using rule 191 (valorC -> NOT booleanos .)
    PAR_D           reduce using rule 191 (valorC -> NOT booleanos .)
    IGUAL_COMPARACION shift and go to state 168
    DIFERENTE       shift and go to state 169
    MAYOR           shift and go to state 170
    MENOR           shift and go to state 171

    comparacion                    shift and go to state 177

state 180

    (192) valorC -> NOT relacional .

    AND             reduce using rule 192 (valorC -> NOT relacional .)
    OR              reduce using rule 192 (valorC -> NOT relacional .)
    NOT             reduce using rule 192 (valorC -> NOT relacional .)
    PAR_D           reduce using rule 192 (valorC -> NOT relacional .)


state 181

    (196) relacional -> numeros comparacion . numeros
    (199) relacional -> numeros comparacion . aritmetica
    (204) relacional -> numeros comparacion . VARIABLE
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 271
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    numeros                        shift and go to state 269
    aritmetica                     shift and go to state 270

state 182

    (216) aritmetica -> numeros aritmeticos . numeros
    (218) aritmetica -> numeros aritmeticos . VARIABLE
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VARIABLE        shift and go to state 273
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    numeros                        shift and go to state 272

state 183

    (197) relacional -> aritmetica comparacion . aritmetica
    (198) relacional -> aritmetica comparacion . numeros
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VARIABLE        shift and go to state 276
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    aritmetica                     shift and go to state 274
    numeros                        shift and go to state 275

state 184

    (220) aritmetica -> aritmetica aritmeticos . numeros
    (221) aritmetica -> aritmetica aritmeticos . VARIABLE
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VARIABLE        shift and go to state 278
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    numeros                        shift and go to state 277

state 185

    (201) relacional -> STRING comparacion . STRING
    (208) relacional -> STRING comparacion . VARIABLE

    STRING          shift and go to state 279
    VARIABLE        shift and go to state 280


state 186

    (202) relacional -> CHAR comparacion . CHAR
    (210) relacional -> CHAR comparacion . VARIABLE

    CHAR            shift and go to state 281
    VARIABLE        shift and go to state 282


state 187

    (135) for -> FOR PAR_I VAR VARIABLE . ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> FOR PAR_I VAR VARIABLE . ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> FOR PAR_I VAR VARIABLE . ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    ITERATOR        shift and go to state 283


state 188

    (136) for -> FOR PAR_I VARIABLE ITERATOR . VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> FOR PAR_I VARIABLE ITERATOR . INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> FOR PAR_I VARIABLE ITERATOR . INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 284
    INT             shift and go to state 285


state 189

    (179) if -> IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 286


state 190

    (182) elseif -> ELSE IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 287


state 191

    (183) else -> ELSE LLAVE_I contenido LLAVE_D .

    ELSE            reduce using rule 183 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 183 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 183 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 183 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 183 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 183 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 183 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 183 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 183 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 183 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 183 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 183 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 183 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 183 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 183 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 183 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 183 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 183 (else -> ELSE LLAVE_I contenido LLAVE_D .)


state 192

    (23) contenido -> asignacion contenido .

    LLAVE_D         reduce using rule 23 (contenido -> asignacion contenido .)
    RETURN          reduce using rule 23 (contenido -> asignacion contenido .)


state 193

    (24) contenido -> impresion contenido .

    LLAVE_D         reduce using rule 24 (contenido -> impresion contenido .)
    RETURN          reduce using rule 24 (contenido -> impresion contenido .)


state 194

    (25) contenido -> entrada contenido .

    LLAVE_D         reduce using rule 25 (contenido -> entrada contenido .)
    RETURN          reduce using rule 25 (contenido -> entrada contenido .)


state 195

    (26) contenido -> while contenido .

    LLAVE_D         reduce using rule 26 (contenido -> while contenido .)
    RETURN          reduce using rule 26 (contenido -> while contenido .)


state 196

    (27) contenido -> for contenido .

    LLAVE_D         reduce using rule 27 (contenido -> for contenido .)
    RETURN          reduce using rule 27 (contenido -> for contenido .)


state 197

    (29) contenido -> match contenido .

    LLAVE_D         reduce using rule 29 (contenido -> match contenido .)
    RETURN          reduce using rule 29 (contenido -> match contenido .)


state 198

    (28) contenido -> if contenido .

    LLAVE_D         reduce using rule 28 (contenido -> if contenido .)
    RETURN          reduce using rule 28 (contenido -> if contenido .)


state 199

    (30) contenido -> aritmetica contenido .

    LLAVE_D         reduce using rule 30 (contenido -> aritmetica contenido .)
    RETURN          reduce using rule 30 (contenido -> aritmetica contenido .)


state 200

    (107) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I . contenido LLAVE_D
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    contenido                      shift and go to state 288
    asignacion                     shift and go to state 91
    impresion                      shift and go to state 92
    entrada                        shift and go to state 93
    while                          shift and go to state 94
    for                            shift and go to state 95
    match                          shift and go to state 96
    if                             shift and go to state 97
    aritmetica                     shift and go to state 98
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25
    numeros                        shift and go to state 100

state 201

    (114) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN valor LLAVE_D

    LLAVE_I         shift and go to state 289


state 202

    (115) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN valor LLAVE_D

    LLAVE_I         shift and go to state 290


state 203

    (116) dectipo -> DOBLE_PUNTO tipo .

    IGUAL           reduce using rule 116 (dectipo -> DOBLE_PUNTO tipo .)


state 204

    (117) dectipoTupla -> DOBLE_PUNTO PAR_I . tipos PAR_D
    (118) tipos -> . tipo
    (119) tipos -> . tipo tiposentry
    (89) tipo -> . CHARCLASS
    (90) tipo -> . STRINGCLASS
    (91) tipo -> . BOOLCLASS
    (92) tipo -> . INTCLASS
    (93) tipo -> . LONGCLASS
    (94) tipo -> . DOUBLECLASS
    (95) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 205
    STRINGCLASS     shift and go to state 206
    BOOLCLASS       shift and go to state 207
    INTCLASS        shift and go to state 208
    LONGCLASS       shift and go to state 209
    DOUBLECLASS     shift and go to state 210
    FLOATCLASS      shift and go to state 211

    tipos                          shift and go to state 291
    tipo                           shift and go to state 292

state 205

    (89) tipo -> CHARCLASS .

    IGUAL           reduce using rule 89 (tipo -> CHARCLASS .)
    COMA            reduce using rule 89 (tipo -> CHARCLASS .)
    PAR_D           reduce using rule 89 (tipo -> CHARCLASS .)
    CORCHETE_D      reduce using rule 89 (tipo -> CHARCLASS .)


state 206

    (90) tipo -> STRINGCLASS .

    IGUAL           reduce using rule 90 (tipo -> STRINGCLASS .)
    COMA            reduce using rule 90 (tipo -> STRINGCLASS .)
    PAR_D           reduce using rule 90 (tipo -> STRINGCLASS .)
    CORCHETE_D      reduce using rule 90 (tipo -> STRINGCLASS .)


state 207

    (91) tipo -> BOOLCLASS .

    IGUAL           reduce using rule 91 (tipo -> BOOLCLASS .)
    COMA            reduce using rule 91 (tipo -> BOOLCLASS .)
    PAR_D           reduce using rule 91 (tipo -> BOOLCLASS .)
    CORCHETE_D      reduce using rule 91 (tipo -> BOOLCLASS .)


state 208

    (92) tipo -> INTCLASS .

    IGUAL           reduce using rule 92 (tipo -> INTCLASS .)
    COMA            reduce using rule 92 (tipo -> INTCLASS .)
    PAR_D           reduce using rule 92 (tipo -> INTCLASS .)
    CORCHETE_D      reduce using rule 92 (tipo -> INTCLASS .)


state 209

    (93) tipo -> LONGCLASS .

    IGUAL           reduce using rule 93 (tipo -> LONGCLASS .)
    COMA            reduce using rule 93 (tipo -> LONGCLASS .)
    PAR_D           reduce using rule 93 (tipo -> LONGCLASS .)
    CORCHETE_D      reduce using rule 93 (tipo -> LONGCLASS .)


state 210

    (94) tipo -> DOUBLECLASS .

    IGUAL           reduce using rule 94 (tipo -> DOUBLECLASS .)
    COMA            reduce using rule 94 (tipo -> DOUBLECLASS .)
    PAR_D           reduce using rule 94 (tipo -> DOUBLECLASS .)
    CORCHETE_D      reduce using rule 94 (tipo -> DOUBLECLASS .)


state 211

    (95) tipo -> FLOATCLASS .

    IGUAL           reduce using rule 95 (tipo -> FLOATCLASS .)
    COMA            reduce using rule 95 (tipo -> FLOATCLASS .)
    PAR_D           reduce using rule 95 (tipo -> FLOATCLASS .)
    CORCHETE_D      reduce using rule 95 (tipo -> FLOATCLASS .)


state 212

    (112) parametros -> PAR_I declaracion PAR_D .
    (113) parametros -> PAR_I declaracion PAR_D . parametros
    (112) parametros -> . PAR_I declaracion PAR_D
    (113) parametros -> . PAR_I declaracion PAR_D parametros

    IGUAL           reduce using rule 112 (parametros -> PAR_I declaracion PAR_D .)
    DOBLE_PUNTO     reduce using rule 112 (parametros -> PAR_I declaracion PAR_D .)
    PAR_I           shift and go to state 293

    parametros                     shift and go to state 294

state 213

    (108) declaracion -> VARIABLE DOBLE_PUNTO . tipo
    (109) declaracion -> VARIABLE DOBLE_PUNTO . tipo IGUAL valor
    (89) tipo -> . CHARCLASS
    (90) tipo -> . STRINGCLASS
    (91) tipo -> . BOOLCLASS
    (92) tipo -> . INTCLASS
    (93) tipo -> . LONGCLASS
    (94) tipo -> . DOUBLECLASS
    (95) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 205
    STRINGCLASS     shift and go to state 206
    BOOLCLASS       shift and go to state 207
    INTCLASS        shift and go to state 208
    LONGCLASS       shift and go to state 209
    DOUBLECLASS     shift and go to state 210
    FLOATCLASS      shift and go to state 211

    tipo                           shift and go to state 295

state 214

    (141) match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .

    DEF             reduce using rule 141 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    PRINTLN         reduce using rule 141 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    PRINT           reduce using rule 141 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    READLINE        reduce using rule 141 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VAR             reduce using rule 141 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VAL             reduce using rule 141 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    WHILE           reduce using rule 141 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    FOR             reduce using rule 141 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VARIABLE        reduce using rule 141 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    IF              reduce using rule 141 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    $end            reduce using rule 141 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    INT             reduce using rule 141 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    LONG            reduce using rule 141 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    FLOAT           reduce using rule 141 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    DOUBLE          reduce using rule 141 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    LLAVE_D         reduce using rule 141 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    RETURN          reduce using rule 141 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)


state 215

    (150) casesInt -> caseInt casesInt .

    LLAVE_D         reduce using rule 150 (casesInt -> caseInt casesInt .)


state 216

    (151) casesInt -> caseInt defcase .

    LLAVE_D         reduce using rule 151 (casesInt -> caseInt defcase .)


state 217

    (176) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (148) caseInt -> CASE . INT FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 296
    INT             shift and go to state 233


state 218

    (154) casesLgn -> caseLgn casesLgn .

    LLAVE_D         reduce using rule 154 (casesLgn -> caseLgn casesLgn .)


state 219

    (155) casesLgn -> caseLgn defcase .

    LLAVE_D         reduce using rule 155 (casesLgn -> caseLgn defcase .)


state 220

    (176) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (152) caseLgn -> CASE . LONG FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 296
    LONG            shift and go to state 234


state 221

    (158) casesFlt -> caseFlt casesFlt .

    LLAVE_D         reduce using rule 158 (casesFlt -> caseFlt casesFlt .)


state 222

    (159) casesFlt -> caseFlt defcase .

    LLAVE_D         reduce using rule 159 (casesFlt -> caseFlt defcase .)


state 223

    (176) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (156) caseFlt -> CASE . FLOAT FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 296
    FLOAT           shift and go to state 235


state 224

    (162) casesDob -> caseDob casesDob .

    LLAVE_D         reduce using rule 162 (casesDob -> caseDob casesDob .)


state 225

    (163) casesDob -> caseDob defcase .

    LLAVE_D         reduce using rule 163 (casesDob -> caseDob defcase .)


state 226

    (176) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (160) caseDob -> CASE . DOUBLE FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 296
    DOUBLE          shift and go to state 236


state 227

    (166) casesStr -> caseStr casesStr .

    LLAVE_D         reduce using rule 166 (casesStr -> caseStr casesStr .)


state 228

    (167) casesStr -> caseStr defcase .

    LLAVE_D         reduce using rule 167 (casesStr -> caseStr defcase .)


state 229

    (176) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (164) caseStr -> CASE . STRING FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 296
    STRING          shift and go to state 237


state 230

    (170) casesChar -> caseChar casesChar .

    LLAVE_D         reduce using rule 170 (casesChar -> caseChar casesChar .)


state 231

    (171) casesChar -> caseChar defcase .

    LLAVE_D         reduce using rule 171 (casesChar -> caseChar defcase .)


state 232

    (176) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (168) caseChar -> CASE . CHAR FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 296
    CHAR            shift and go to state 238


state 233

    (148) caseInt -> CASE INT . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 297


state 234

    (152) caseLgn -> CASE LONG . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 298


state 235

    (156) caseFlt -> CASE FLOAT . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 299


state 236

    (160) caseDob -> CASE DOUBLE . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 300


state 237

    (164) caseStr -> CASE STRING . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 301


state 238

    (168) caseChar -> CASE CHAR . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 302


state 239

    (124) valorI -> valor MAS valorI .

    PAR_D           reduce using rule 124 (valorI -> valor MAS valorI .)


state 240

    (127) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (132) valores -> . valor
    (133) valores -> . valor COMA valores
    (96) valor -> . STRING
    (97) valor -> . CHAR
    (98) valor -> . VARIABLE
    (99) valor -> . numeros
    (100) valor -> . booleanos
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    VARIABLE        shift and go to state 61
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69

    valores                        shift and go to state 303
    valor                          shift and go to state 304
    numeros                        shift and go to state 62
    booleanos                      shift and go to state 63

state 241

    (48) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . LONG
    (51) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . VARIABLE

    LONG            shift and go to state 306
    VARIABLE        shift and go to state 305


state 242

    (54) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL . INT
    (57) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL . VARIABLE

    INT             shift and go to state 308
    VARIABLE        shift and go to state 307


state 243

    (60) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . FLOAT
    (63) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . VARIABLE

    FLOAT           shift and go to state 310
    VARIABLE        shift and go to state 309


state 244

    (66) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . DOUBLE
    (69) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . VARIABLE

    DOUBLE          shift and go to state 312
    VARIABLE        shift and go to state 311


state 245

    (72) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . STRING
    (75) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . VARIABLE

    STRING          shift and go to state 314
    VARIABLE        shift and go to state 313


state 246

    (78) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . CHAR
    (81) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . VARIABLE

    CHAR            shift and go to state 316
    VARIABLE        shift and go to state 315


state 247

    (84) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . booleanos
    (87) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . VARIABLE
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE

    VARIABLE        shift and go to state 317
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69

    booleanos                      shift and go to state 318

state 248

    (128) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (89) tipo -> . CHARCLASS
    (90) tipo -> . STRINGCLASS
    (91) tipo -> . BOOLCLASS
    (92) tipo -> . INTCLASS
    (93) tipo -> . LONGCLASS
    (94) tipo -> . DOUBLECLASS
    (95) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 205
    STRINGCLASS     shift and go to state 206
    BOOLCLASS       shift and go to state 207
    INTCLASS        shift and go to state 208
    LONGCLASS       shift and go to state 209
    DOUBLECLASS     shift and go to state 210
    FLOATCLASS      shift and go to state 211

    tipo                           shift and go to state 319

state 249

    (130) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I . valores PAR_D
    (132) valores -> . valor
    (133) valores -> . valor COMA valores
    (96) valor -> . STRING
    (97) valor -> . CHAR
    (98) valor -> . VARIABLE
    (99) valor -> . numeros
    (100) valor -> . booleanos
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    VARIABLE        shift and go to state 61
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69

    valores                        shift and go to state 320
    valor                          shift and go to state 304
    numeros                        shift and go to state 62
    booleanos                      shift and go to state 63

state 250

    (50) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . LONG
    (52) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . VARIABLE

    LONG            shift and go to state 322
    VARIABLE        shift and go to state 321


state 251

    (56) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL . INT
    (58) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL . VARIABLE

    INT             shift and go to state 324
    VARIABLE        shift and go to state 323


state 252

    (62) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . FLOAT
    (64) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . VARIABLE

    FLOAT           shift and go to state 326
    VARIABLE        shift and go to state 325


state 253

    (68) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . DOUBLE
    (70) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . VARIABLE

    DOUBLE          shift and go to state 328
    VARIABLE        shift and go to state 327


state 254

    (74) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . STRING
    (76) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . VARIABLE

    STRING          shift and go to state 330
    VARIABLE        shift and go to state 329


state 255

    (80) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . CHAR
    (82) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . VARIABLE

    CHAR            shift and go to state 332
    VARIABLE        shift and go to state 331


state 256

    (86) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . booleanos
    (88) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . VARIABLE
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE

    VARIABLE        shift and go to state 333
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69

    booleanos                      shift and go to state 334

state 257

    (131) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I . tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (89) tipo -> . CHARCLASS
    (90) tipo -> . STRINGCLASS
    (91) tipo -> . BOOLCLASS
    (92) tipo -> . INTCLASS
    (93) tipo -> . LONGCLASS
    (94) tipo -> . DOUBLECLASS
    (95) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 205
    STRINGCLASS     shift and go to state 206
    BOOLCLASS       shift and go to state 207
    INTCLASS        shift and go to state 208
    LONGCLASS       shift and go to state 209
    DOUBLECLASS     shift and go to state 210
    FLOATCLASS      shift and go to state 211

    tipo                           shift and go to state 335

state 258

    (134) while -> WHILE PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    contenido                      shift and go to state 336
    asignacion                     shift and go to state 91
    impresion                      shift and go to state 92
    entrada                        shift and go to state 93
    while                          shift and go to state 94
    for                            shift and go to state 95
    match                          shift and go to state 96
    if                             shift and go to state 97
    aritmetica                     shift and go to state 98
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25
    numeros                        shift and go to state 100

state 259

    (185) condicional -> valorC logicos condicional .

    PAR_D           reduce using rule 185 (condicional -> valorC logicos condicional .)


state 260

    (211) relacional -> VARIABLE comparacion VARIABLE .

    AND             reduce using rule 211 (relacional -> VARIABLE comparacion VARIABLE .)
    OR              reduce using rule 211 (relacional -> VARIABLE comparacion VARIABLE .)
    NOT             reduce using rule 211 (relacional -> VARIABLE comparacion VARIABLE .)
    PAR_D           reduce using rule 211 (relacional -> VARIABLE comparacion VARIABLE .)


state 261

    (203) relacional -> VARIABLE comparacion numeros .

    AND             reduce using rule 203 (relacional -> VARIABLE comparacion numeros .)
    OR              reduce using rule 203 (relacional -> VARIABLE comparacion numeros .)
    NOT             reduce using rule 203 (relacional -> VARIABLE comparacion numeros .)
    PAR_D           reduce using rule 203 (relacional -> VARIABLE comparacion numeros .)


state 262

    (205) relacional -> VARIABLE comparacion booleanos .

    AND             reduce using rule 205 (relacional -> VARIABLE comparacion booleanos .)
    OR              reduce using rule 205 (relacional -> VARIABLE comparacion booleanos .)
    NOT             reduce using rule 205 (relacional -> VARIABLE comparacion booleanos .)
    PAR_D           reduce using rule 205 (relacional -> VARIABLE comparacion booleanos .)


state 263

    (207) relacional -> VARIABLE comparacion STRING .

    AND             reduce using rule 207 (relacional -> VARIABLE comparacion STRING .)
    OR              reduce using rule 207 (relacional -> VARIABLE comparacion STRING .)
    NOT             reduce using rule 207 (relacional -> VARIABLE comparacion STRING .)
    PAR_D           reduce using rule 207 (relacional -> VARIABLE comparacion STRING .)


state 264

    (209) relacional -> VARIABLE comparacion CHAR .

    AND             reduce using rule 209 (relacional -> VARIABLE comparacion CHAR .)
    OR              reduce using rule 209 (relacional -> VARIABLE comparacion CHAR .)
    NOT             reduce using rule 209 (relacional -> VARIABLE comparacion CHAR .)
    PAR_D           reduce using rule 209 (relacional -> VARIABLE comparacion CHAR .)


state 265

    (219) aritmetica -> VARIABLE aritmeticos VARIABLE .

    IGUAL_COMPARACION reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MAYOR           reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MENOR           reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MENOS           reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MAS             reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DIVISION        reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MOD             reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VAR             reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VAL             reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PRINT           reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    READLINE        reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    WHILE           reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    FOR             reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    IF              reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    INT             reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    LONG            reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    FLOAT           reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DEF             reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    $end            reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    RETURN          reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    CASE            reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    AND             reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    OR              reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    NOT             reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PAR_D           reduce using rule 219 (aritmetica -> VARIABLE aritmeticos VARIABLE .)


state 266

    (217) aritmetica -> VARIABLE aritmeticos numeros .

    IGUAL_COMPARACION reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    DIFERENTE       reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    MAYOR           reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    MENOR           reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    MENOS           reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    MAS             reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    DIVISION        reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    MOD             reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    VAR             reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    VAL             reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    PRINTLN         reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    PRINT           reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    READLINE        reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    WHILE           reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    FOR             reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    VARIABLE        reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    IF              reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    INT             reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    LONG            reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    FLOAT           reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    DOUBLE          reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    LLAVE_D         reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    DEF             reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    $end            reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    RETURN          reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    CASE            reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    AND             reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    OR              reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    NOT             reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)
    PAR_D           reduce using rule 217 (aritmetica -> VARIABLE aritmeticos numeros .)


state 267

    (200) relacional -> booleanos comparacion booleanos .

    AND             reduce using rule 200 (relacional -> booleanos comparacion booleanos .)
    OR              reduce using rule 200 (relacional -> booleanos comparacion booleanos .)
    NOT             reduce using rule 200 (relacional -> booleanos comparacion booleanos .)
    PAR_D           reduce using rule 200 (relacional -> booleanos comparacion booleanos .)


state 268

    (206) relacional -> booleanos comparacion VARIABLE .

    AND             reduce using rule 206 (relacional -> booleanos comparacion VARIABLE .)
    OR              reduce using rule 206 (relacional -> booleanos comparacion VARIABLE .)
    NOT             reduce using rule 206 (relacional -> booleanos comparacion VARIABLE .)
    PAR_D           reduce using rule 206 (relacional -> booleanos comparacion VARIABLE .)


state 269

    (196) relacional -> numeros comparacion numeros .
    (216) aritmetica -> numeros . aritmeticos numeros
    (218) aritmetica -> numeros . aritmeticos VARIABLE
    (222) aritmeticos -> . MENOS
    (223) aritmeticos -> . MAS
    (224) aritmeticos -> . MULTIPLICACION
    (225) aritmeticos -> . DIVISION
    (226) aritmeticos -> . MOD

    AND             reduce using rule 196 (relacional -> numeros comparacion numeros .)
    OR              reduce using rule 196 (relacional -> numeros comparacion numeros .)
    NOT             reduce using rule 196 (relacional -> numeros comparacion numeros .)
    PAR_D           reduce using rule 196 (relacional -> numeros comparacion numeros .)
    MENOS           shift and go to state 172
    MAS             shift and go to state 173
    MULTIPLICACION  shift and go to state 174
    DIVISION        shift and go to state 175
    MOD             shift and go to state 176

    aritmeticos                    shift and go to state 182

state 270

    (199) relacional -> numeros comparacion aritmetica .
    (220) aritmetica -> aritmetica . aritmeticos numeros
    (221) aritmetica -> aritmetica . aritmeticos VARIABLE
    (222) aritmeticos -> . MENOS
    (223) aritmeticos -> . MAS
    (224) aritmeticos -> . MULTIPLICACION
    (225) aritmeticos -> . DIVISION
    (226) aritmeticos -> . MOD

    AND             reduce using rule 199 (relacional -> numeros comparacion aritmetica .)
    OR              reduce using rule 199 (relacional -> numeros comparacion aritmetica .)
    NOT             reduce using rule 199 (relacional -> numeros comparacion aritmetica .)
    PAR_D           reduce using rule 199 (relacional -> numeros comparacion aritmetica .)
    MENOS           shift and go to state 172
    MAS             shift and go to state 173
    MULTIPLICACION  shift and go to state 174
    DIVISION        shift and go to state 175
    MOD             shift and go to state 176

    aritmeticos                    shift and go to state 184

state 271

    (204) relacional -> numeros comparacion VARIABLE .
    (217) aritmetica -> VARIABLE . aritmeticos numeros
    (219) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (222) aritmeticos -> . MENOS
    (223) aritmeticos -> . MAS
    (224) aritmeticos -> . MULTIPLICACION
    (225) aritmeticos -> . DIVISION
    (226) aritmeticos -> . MOD

    AND             reduce using rule 204 (relacional -> numeros comparacion VARIABLE .)
    OR              reduce using rule 204 (relacional -> numeros comparacion VARIABLE .)
    NOT             reduce using rule 204 (relacional -> numeros comparacion VARIABLE .)
    PAR_D           reduce using rule 204 (relacional -> numeros comparacion VARIABLE .)
    MENOS           shift and go to state 172
    MAS             shift and go to state 173
    MULTIPLICACION  shift and go to state 174
    DIVISION        shift and go to state 175
    MOD             shift and go to state 176

    aritmeticos                    shift and go to state 167

state 272

    (216) aritmetica -> numeros aritmeticos numeros .

    IGUAL_COMPARACION reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    DIFERENTE       reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    MAYOR           reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    MENOR           reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    MENOS           reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    MAS             reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    DIVISION        reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    MOD             reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    VAR             reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    VAL             reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    PRINTLN         reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    PRINT           reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    READLINE        reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    WHILE           reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    FOR             reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    VARIABLE        reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    IF              reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    INT             reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    LONG            reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    FLOAT           reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    DOUBLE          reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    LLAVE_D         reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    DEF             reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    $end            reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    RETURN          reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    CASE            reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    AND             reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    OR              reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    NOT             reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)
    PAR_D           reduce using rule 216 (aritmetica -> numeros aritmeticos numeros .)


state 273

    (218) aritmetica -> numeros aritmeticos VARIABLE .

    IGUAL_COMPARACION reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    MAYOR           reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    MENOR           reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    MENOS           reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    MAS             reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    DIVISION        reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    MOD             reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    VAR             reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    VAL             reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    PRINT           reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    READLINE        reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    WHILE           reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    FOR             reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    IF              reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    INT             reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    LONG            reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    FLOAT           reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    DEF             reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    $end            reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    RETURN          reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    CASE            reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    AND             reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    OR              reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    NOT             reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)
    PAR_D           reduce using rule 218 (aritmetica -> numeros aritmeticos VARIABLE .)


state 274

    (197) relacional -> aritmetica comparacion aritmetica .
    (220) aritmetica -> aritmetica . aritmeticos numeros
    (221) aritmetica -> aritmetica . aritmeticos VARIABLE
    (222) aritmeticos -> . MENOS
    (223) aritmeticos -> . MAS
    (224) aritmeticos -> . MULTIPLICACION
    (225) aritmeticos -> . DIVISION
    (226) aritmeticos -> . MOD

    AND             reduce using rule 197 (relacional -> aritmetica comparacion aritmetica .)
    OR              reduce using rule 197 (relacional -> aritmetica comparacion aritmetica .)
    NOT             reduce using rule 197 (relacional -> aritmetica comparacion aritmetica .)
    PAR_D           reduce using rule 197 (relacional -> aritmetica comparacion aritmetica .)
    MENOS           shift and go to state 172
    MAS             shift and go to state 173
    MULTIPLICACION  shift and go to state 174
    DIVISION        shift and go to state 175
    MOD             shift and go to state 176

    aritmeticos                    shift and go to state 184

state 275

    (198) relacional -> aritmetica comparacion numeros .
    (216) aritmetica -> numeros . aritmeticos numeros
    (218) aritmetica -> numeros . aritmeticos VARIABLE
    (222) aritmeticos -> . MENOS
    (223) aritmeticos -> . MAS
    (224) aritmeticos -> . MULTIPLICACION
    (225) aritmeticos -> . DIVISION
    (226) aritmeticos -> . MOD

    AND             reduce using rule 198 (relacional -> aritmetica comparacion numeros .)
    OR              reduce using rule 198 (relacional -> aritmetica comparacion numeros .)
    NOT             reduce using rule 198 (relacional -> aritmetica comparacion numeros .)
    PAR_D           reduce using rule 198 (relacional -> aritmetica comparacion numeros .)
    MENOS           shift and go to state 172
    MAS             shift and go to state 173
    MULTIPLICACION  shift and go to state 174
    DIVISION        shift and go to state 175
    MOD             shift and go to state 176

    aritmeticos                    shift and go to state 182

state 276

    (217) aritmetica -> VARIABLE . aritmeticos numeros
    (219) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (222) aritmeticos -> . MENOS
    (223) aritmeticos -> . MAS
    (224) aritmeticos -> . MULTIPLICACION
    (225) aritmeticos -> . DIVISION
    (226) aritmeticos -> . MOD

    MENOS           shift and go to state 172
    MAS             shift and go to state 173
    MULTIPLICACION  shift and go to state 174
    DIVISION        shift and go to state 175
    MOD             shift and go to state 176

    aritmeticos                    shift and go to state 167

state 277

    (220) aritmetica -> aritmetica aritmeticos numeros .

    IGUAL_COMPARACION reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    DIFERENTE       reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    MAYOR           reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    MENOR           reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    MENOS           reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    MAS             reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    DIVISION        reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    MOD             reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    VAR             reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    VAL             reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    PRINTLN         reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    PRINT           reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    READLINE        reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    WHILE           reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    FOR             reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    VARIABLE        reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    IF              reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    INT             reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    LONG            reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    FLOAT           reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    DOUBLE          reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    LLAVE_D         reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    DEF             reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    $end            reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    RETURN          reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    CASE            reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    AND             reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    OR              reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    NOT             reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)
    PAR_D           reduce using rule 220 (aritmetica -> aritmetica aritmeticos numeros .)


state 278

    (221) aritmetica -> aritmetica aritmeticos VARIABLE .

    IGUAL_COMPARACION reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MAYOR           reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MENOR           reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MENOS           reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MAS             reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DIVISION        reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MOD             reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VAR             reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VAL             reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PRINT           reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    READLINE        reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    WHILE           reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    FOR             reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    IF              reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    INT             reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    LONG            reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    FLOAT           reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DEF             reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    $end            reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    RETURN          reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    CASE            reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    AND             reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    OR              reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    NOT             reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PAR_D           reduce using rule 221 (aritmetica -> aritmetica aritmeticos VARIABLE .)


state 279

    (201) relacional -> STRING comparacion STRING .

    AND             reduce using rule 201 (relacional -> STRING comparacion STRING .)
    OR              reduce using rule 201 (relacional -> STRING comparacion STRING .)
    NOT             reduce using rule 201 (relacional -> STRING comparacion STRING .)
    PAR_D           reduce using rule 201 (relacional -> STRING comparacion STRING .)


state 280

    (208) relacional -> STRING comparacion VARIABLE .

    AND             reduce using rule 208 (relacional -> STRING comparacion VARIABLE .)
    OR              reduce using rule 208 (relacional -> STRING comparacion VARIABLE .)
    NOT             reduce using rule 208 (relacional -> STRING comparacion VARIABLE .)
    PAR_D           reduce using rule 208 (relacional -> STRING comparacion VARIABLE .)


state 281

    (202) relacional -> CHAR comparacion CHAR .

    AND             reduce using rule 202 (relacional -> CHAR comparacion CHAR .)
    OR              reduce using rule 202 (relacional -> CHAR comparacion CHAR .)
    NOT             reduce using rule 202 (relacional -> CHAR comparacion CHAR .)
    PAR_D           reduce using rule 202 (relacional -> CHAR comparacion CHAR .)


state 282

    (210) relacional -> CHAR comparacion VARIABLE .

    AND             reduce using rule 210 (relacional -> CHAR comparacion VARIABLE .)
    OR              reduce using rule 210 (relacional -> CHAR comparacion VARIABLE .)
    NOT             reduce using rule 210 (relacional -> CHAR comparacion VARIABLE .)
    PAR_D           reduce using rule 210 (relacional -> CHAR comparacion VARIABLE .)


state 283

    (135) for -> FOR PAR_I VAR VARIABLE ITERATOR . VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> FOR PAR_I VAR VARIABLE ITERATOR . INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> FOR PAR_I VAR VARIABLE ITERATOR . INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 337
    INT             shift and go to state 338


state 284

    (136) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 339


state 285

    (137) for -> FOR PAR_I VARIABLE ITERATOR INT . TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> FOR PAR_I VARIABLE ITERATOR INT . UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    TO              shift and go to state 340
    UNTIL           shift and go to state 341


state 286

    (179) if -> IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    contenido                      shift and go to state 342
    asignacion                     shift and go to state 91
    impresion                      shift and go to state 92
    entrada                        shift and go to state 93
    while                          shift and go to state 94
    for                            shift and go to state 95
    match                          shift and go to state 96
    if                             shift and go to state 97
    aritmetica                     shift and go to state 98
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25
    numeros                        shift and go to state 100

state 287

    (182) elseif -> ELSE IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 343


state 288

    (107) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 344


state 289

    (114) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN valor LLAVE_D
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    contenido                      shift and go to state 345
    asignacion                     shift and go to state 91
    impresion                      shift and go to state 92
    entrada                        shift and go to state 93
    while                          shift and go to state 94
    for                            shift and go to state 95
    match                          shift and go to state 96
    if                             shift and go to state 97
    aritmetica                     shift and go to state 98
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25
    numeros                        shift and go to state 100

state 290

    (115) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN valor LLAVE_D
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    contenido                      shift and go to state 346
    asignacion                     shift and go to state 91
    impresion                      shift and go to state 92
    entrada                        shift and go to state 93
    while                          shift and go to state 94
    for                            shift and go to state 95
    match                          shift and go to state 96
    if                             shift and go to state 97
    aritmetica                     shift and go to state 98
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25
    numeros                        shift and go to state 100

state 291

    (117) dectipoTupla -> DOBLE_PUNTO PAR_I tipos . PAR_D

    PAR_D           shift and go to state 347


state 292

    (118) tipos -> tipo .
    (119) tipos -> tipo . tiposentry
    (120) tiposentry -> . COMA tipo
    (121) tiposentry -> . COMA tipo tiposentry

    PAR_D           reduce using rule 118 (tipos -> tipo .)
    COMA            shift and go to state 349

    tiposentry                     shift and go to state 348

state 293

    (112) parametros -> PAR_I . declaracion PAR_D
    (113) parametros -> PAR_I . declaracion PAR_D parametros
    (108) declaracion -> . VARIABLE DOBLE_PUNTO tipo
    (109) declaracion -> . VARIABLE DOBLE_PUNTO tipo IGUAL valor

    VARIABLE        shift and go to state 107

    declaracion                    shift and go to state 106

state 294

    (113) parametros -> PAR_I declaracion PAR_D parametros .

    IGUAL           reduce using rule 113 (parametros -> PAR_I declaracion PAR_D parametros .)
    DOBLE_PUNTO     reduce using rule 113 (parametros -> PAR_I declaracion PAR_D parametros .)


state 295

    (108) declaracion -> VARIABLE DOBLE_PUNTO tipo .
    (109) declaracion -> VARIABLE DOBLE_PUNTO tipo . IGUAL valor

    PAR_D           reduce using rule 108 (declaracion -> VARIABLE DOBLE_PUNTO tipo .)
    IGUAL           shift and go to state 350


state 296

    (176) defcase -> CASE SUBGUION . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 351


state 297

    (148) caseInt -> CASE INT FUNCION_FLECHA . codeBlock
    (177) codeBlock -> . contenidoLine
    (178) codeBlock -> . LLAVE_I contenido LLAVE_D
    (31) contenidoLine -> . asignacion
    (32) contenidoLine -> . impresion
    (33) contenidoLine -> . entrada
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 354
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14

    codeBlock                      shift and go to state 352
    contenidoLine                  shift and go to state 353
    asignacion                     shift and go to state 355
    impresion                      shift and go to state 356
    entrada                        shift and go to state 357
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25

state 298

    (152) caseLgn -> CASE LONG FUNCION_FLECHA . codeBlock
    (177) codeBlock -> . contenidoLine
    (178) codeBlock -> . LLAVE_I contenido LLAVE_D
    (31) contenidoLine -> . asignacion
    (32) contenidoLine -> . impresion
    (33) contenidoLine -> . entrada
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 354
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14

    codeBlock                      shift and go to state 358
    contenidoLine                  shift and go to state 353
    asignacion                     shift and go to state 355
    impresion                      shift and go to state 356
    entrada                        shift and go to state 357
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25

state 299

    (156) caseFlt -> CASE FLOAT FUNCION_FLECHA . codeBlock
    (177) codeBlock -> . contenidoLine
    (178) codeBlock -> . LLAVE_I contenido LLAVE_D
    (31) contenidoLine -> . asignacion
    (32) contenidoLine -> . impresion
    (33) contenidoLine -> . entrada
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 354
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14

    codeBlock                      shift and go to state 359
    contenidoLine                  shift and go to state 353
    asignacion                     shift and go to state 355
    impresion                      shift and go to state 356
    entrada                        shift and go to state 357
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25

state 300

    (160) caseDob -> CASE DOUBLE FUNCION_FLECHA . codeBlock
    (177) codeBlock -> . contenidoLine
    (178) codeBlock -> . LLAVE_I contenido LLAVE_D
    (31) contenidoLine -> . asignacion
    (32) contenidoLine -> . impresion
    (33) contenidoLine -> . entrada
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 354
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14

    codeBlock                      shift and go to state 360
    contenidoLine                  shift and go to state 353
    asignacion                     shift and go to state 355
    impresion                      shift and go to state 356
    entrada                        shift and go to state 357
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25

state 301

    (164) caseStr -> CASE STRING FUNCION_FLECHA . codeBlock
    (177) codeBlock -> . contenidoLine
    (178) codeBlock -> . LLAVE_I contenido LLAVE_D
    (31) contenidoLine -> . asignacion
    (32) contenidoLine -> . impresion
    (33) contenidoLine -> . entrada
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 354
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14

    codeBlock                      shift and go to state 361
    contenidoLine                  shift and go to state 353
    asignacion                     shift and go to state 355
    impresion                      shift and go to state 356
    entrada                        shift and go to state 357
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25

state 302

    (168) caseChar -> CASE CHAR FUNCION_FLECHA . codeBlock
    (177) codeBlock -> . contenidoLine
    (178) codeBlock -> . LLAVE_I contenido LLAVE_D
    (31) contenidoLine -> . asignacion
    (32) contenidoLine -> . impresion
    (33) contenidoLine -> . entrada
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 354
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14

    codeBlock                      shift and go to state 362
    contenidoLine                  shift and go to state 353
    asignacion                     shift and go to state 355
    impresion                      shift and go to state 356
    entrada                        shift and go to state 357
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25

state 303

    (127) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 363


state 304

    (132) valores -> valor .
    (133) valores -> valor . COMA valores

    PAR_D           reduce using rule 132 (valores -> valor .)
    COMA            shift and go to state 364


state 305

    (51) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 51 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)


state 306

    (48) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .

    DEF             reduce using rule 48 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    PRINTLN         reduce using rule 48 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    PRINT           reduce using rule 48 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    READLINE        reduce using rule 48 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VAR             reduce using rule 48 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VAL             reduce using rule 48 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    WHILE           reduce using rule 48 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    FOR             reduce using rule 48 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VARIABLE        reduce using rule 48 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    IF              reduce using rule 48 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    $end            reduce using rule 48 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    INT             reduce using rule 48 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    LONG            reduce using rule 48 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    FLOAT           reduce using rule 48 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    DOUBLE          reduce using rule 48 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    LLAVE_D         reduce using rule 48 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    RETURN          reduce using rule 48 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    CASE            reduce using rule 48 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)


state 307

    (57) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .

    DEF             reduce using rule 57 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 57 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 57 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 57 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 57 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 57 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 57 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 57 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 57 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    IF              reduce using rule 57 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    $end            reduce using rule 57 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    INT             reduce using rule 57 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 57 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 57 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 57 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 57 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 57 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 57 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)


state 308

    (54) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .

    DEF             reduce using rule 54 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    PRINTLN         reduce using rule 54 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    PRINT           reduce using rule 54 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    READLINE        reduce using rule 54 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VAR             reduce using rule 54 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VAL             reduce using rule 54 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    WHILE           reduce using rule 54 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    FOR             reduce using rule 54 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VARIABLE        reduce using rule 54 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    IF              reduce using rule 54 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    $end            reduce using rule 54 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    INT             reduce using rule 54 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    LONG            reduce using rule 54 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    FLOAT           reduce using rule 54 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    DOUBLE          reduce using rule 54 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    LLAVE_D         reduce using rule 54 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    RETURN          reduce using rule 54 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    CASE            reduce using rule 54 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)


state 309

    (63) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .

    DEF             reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    IF              reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    $end            reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    INT             reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)


state 310

    (60) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .

    DEF             reduce using rule 60 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    PRINTLN         reduce using rule 60 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    PRINT           reduce using rule 60 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    READLINE        reduce using rule 60 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VAR             reduce using rule 60 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VAL             reduce using rule 60 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    WHILE           reduce using rule 60 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    FOR             reduce using rule 60 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VARIABLE        reduce using rule 60 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    IF              reduce using rule 60 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    $end            reduce using rule 60 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    INT             reduce using rule 60 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    LONG            reduce using rule 60 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    FLOAT           reduce using rule 60 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    DOUBLE          reduce using rule 60 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    LLAVE_D         reduce using rule 60 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    RETURN          reduce using rule 60 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    CASE            reduce using rule 60 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)


state 311

    (69) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .

    DEF             reduce using rule 69 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 69 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 69 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 69 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAR             reduce using rule 69 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAL             reduce using rule 69 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 69 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FOR             reduce using rule 69 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 69 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    IF              reduce using rule 69 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    $end            reduce using rule 69 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    INT             reduce using rule 69 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LONG            reduce using rule 69 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 69 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 69 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 69 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 69 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    CASE            reduce using rule 69 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)


state 312

    (66) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .

    DEF             reduce using rule 66 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    PRINTLN         reduce using rule 66 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    PRINT           reduce using rule 66 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    READLINE        reduce using rule 66 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VAR             reduce using rule 66 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VAL             reduce using rule 66 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    WHILE           reduce using rule 66 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    FOR             reduce using rule 66 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VARIABLE        reduce using rule 66 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    IF              reduce using rule 66 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    $end            reduce using rule 66 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    INT             reduce using rule 66 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    LONG            reduce using rule 66 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    FLOAT           reduce using rule 66 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    DOUBLE          reduce using rule 66 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    LLAVE_D         reduce using rule 66 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    RETURN          reduce using rule 66 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    CASE            reduce using rule 66 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)


state 313

    (75) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)


state 314

    (72) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .

    DEF             reduce using rule 72 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINTLN         reduce using rule 72 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINT           reduce using rule 72 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    READLINE        reduce using rule 72 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAR             reduce using rule 72 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAL             reduce using rule 72 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    WHILE           reduce using rule 72 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FOR             reduce using rule 72 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VARIABLE        reduce using rule 72 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    IF              reduce using rule 72 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    $end            reduce using rule 72 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    INT             reduce using rule 72 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LONG            reduce using rule 72 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FLOAT           reduce using rule 72 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    DOUBLE          reduce using rule 72 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LLAVE_D         reduce using rule 72 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    RETURN          reduce using rule 72 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    CASE            reduce using rule 72 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)


state 315

    (81) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .

    DEF             reduce using rule 81 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 81 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 81 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 81 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 81 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 81 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 81 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 81 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 81 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    IF              reduce using rule 81 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    $end            reduce using rule 81 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    INT             reduce using rule 81 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 81 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 81 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 81 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 81 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 81 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 81 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)


state 316

    (78) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .

    DEF             reduce using rule 78 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINTLN         reduce using rule 78 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINT           reduce using rule 78 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    READLINE        reduce using rule 78 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAR             reduce using rule 78 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAL             reduce using rule 78 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    WHILE           reduce using rule 78 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FOR             reduce using rule 78 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VARIABLE        reduce using rule 78 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    IF              reduce using rule 78 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    $end            reduce using rule 78 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    INT             reduce using rule 78 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LONG            reduce using rule 78 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FLOAT           reduce using rule 78 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    DOUBLE          reduce using rule 78 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LLAVE_D         reduce using rule 78 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    RETURN          reduce using rule 78 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    CASE            reduce using rule 78 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)


state 317

    (87) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .

    DEF             reduce using rule 87 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 87 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 87 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 87 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 87 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 87 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 87 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 87 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 87 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    IF              reduce using rule 87 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    $end            reduce using rule 87 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    INT             reduce using rule 87 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 87 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 87 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 87 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 87 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 87 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 87 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)


state 318

    (84) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .

    DEF             reduce using rule 84 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINTLN         reduce using rule 84 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINT           reduce using rule 84 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    READLINE        reduce using rule 84 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAR             reduce using rule 84 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAL             reduce using rule 84 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    WHILE           reduce using rule 84 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FOR             reduce using rule 84 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VARIABLE        reduce using rule 84 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    IF              reduce using rule 84 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    $end            reduce using rule 84 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    INT             reduce using rule 84 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LONG            reduce using rule 84 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FLOAT           reduce using rule 84 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    DOUBLE          reduce using rule 84 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LLAVE_D         reduce using rule 84 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    RETURN          reduce using rule 84 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    CASE            reduce using rule 84 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)


state 319

    (128) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 365


state 320

    (130) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 366


state 321

    (52) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 52 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)


state 322

    (50) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .

    DEF             reduce using rule 50 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    PRINTLN         reduce using rule 50 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    PRINT           reduce using rule 50 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    READLINE        reduce using rule 50 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VAR             reduce using rule 50 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VAL             reduce using rule 50 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    WHILE           reduce using rule 50 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    FOR             reduce using rule 50 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VARIABLE        reduce using rule 50 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    IF              reduce using rule 50 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    $end            reduce using rule 50 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    INT             reduce using rule 50 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    LONG            reduce using rule 50 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    FLOAT           reduce using rule 50 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    DOUBLE          reduce using rule 50 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    LLAVE_D         reduce using rule 50 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    RETURN          reduce using rule 50 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    CASE            reduce using rule 50 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)


state 323

    (58) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .

    DEF             reduce using rule 58 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 58 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 58 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 58 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 58 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 58 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 58 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 58 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 58 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    IF              reduce using rule 58 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    $end            reduce using rule 58 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    INT             reduce using rule 58 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 58 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 58 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 58 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 58 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 58 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 58 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)


state 324

    (56) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .

    DEF             reduce using rule 56 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    PRINTLN         reduce using rule 56 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    PRINT           reduce using rule 56 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    READLINE        reduce using rule 56 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VAR             reduce using rule 56 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VAL             reduce using rule 56 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    WHILE           reduce using rule 56 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    FOR             reduce using rule 56 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VARIABLE        reduce using rule 56 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    IF              reduce using rule 56 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    $end            reduce using rule 56 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    INT             reduce using rule 56 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    LONG            reduce using rule 56 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    FLOAT           reduce using rule 56 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    DOUBLE          reduce using rule 56 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    LLAVE_D         reduce using rule 56 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    RETURN          reduce using rule 56 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    CASE            reduce using rule 56 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)


state 325

    (64) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .

    DEF             reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    IF              reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    $end            reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    INT             reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)


state 326

    (62) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .

    DEF             reduce using rule 62 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    PRINTLN         reduce using rule 62 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    PRINT           reduce using rule 62 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    READLINE        reduce using rule 62 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VAR             reduce using rule 62 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VAL             reduce using rule 62 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    WHILE           reduce using rule 62 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    FOR             reduce using rule 62 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VARIABLE        reduce using rule 62 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    IF              reduce using rule 62 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    $end            reduce using rule 62 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    INT             reduce using rule 62 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    LONG            reduce using rule 62 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    FLOAT           reduce using rule 62 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    DOUBLE          reduce using rule 62 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    LLAVE_D         reduce using rule 62 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    RETURN          reduce using rule 62 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    CASE            reduce using rule 62 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)


state 327

    (70) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .

    DEF             reduce using rule 70 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 70 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 70 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 70 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAR             reduce using rule 70 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAL             reduce using rule 70 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 70 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FOR             reduce using rule 70 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 70 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    IF              reduce using rule 70 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    $end            reduce using rule 70 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    INT             reduce using rule 70 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LONG            reduce using rule 70 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 70 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 70 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 70 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 70 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    CASE            reduce using rule 70 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)


state 328

    (68) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .

    DEF             reduce using rule 68 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    PRINTLN         reduce using rule 68 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    PRINT           reduce using rule 68 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    READLINE        reduce using rule 68 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VAR             reduce using rule 68 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VAL             reduce using rule 68 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    WHILE           reduce using rule 68 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    FOR             reduce using rule 68 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VARIABLE        reduce using rule 68 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    IF              reduce using rule 68 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    $end            reduce using rule 68 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    INT             reduce using rule 68 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    LONG            reduce using rule 68 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    FLOAT           reduce using rule 68 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    DOUBLE          reduce using rule 68 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    LLAVE_D         reduce using rule 68 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    RETURN          reduce using rule 68 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    CASE            reduce using rule 68 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)


state 329

    (76) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 76 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 76 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 76 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 76 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 76 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 76 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 76 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 76 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 76 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 76 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 76 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 76 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 76 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 76 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 76 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 76 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 76 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 76 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)


state 330

    (74) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .

    DEF             reduce using rule 74 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINTLN         reduce using rule 74 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINT           reduce using rule 74 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    READLINE        reduce using rule 74 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAR             reduce using rule 74 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAL             reduce using rule 74 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    WHILE           reduce using rule 74 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FOR             reduce using rule 74 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VARIABLE        reduce using rule 74 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    IF              reduce using rule 74 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    $end            reduce using rule 74 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    INT             reduce using rule 74 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LONG            reduce using rule 74 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FLOAT           reduce using rule 74 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    DOUBLE          reduce using rule 74 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LLAVE_D         reduce using rule 74 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    RETURN          reduce using rule 74 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    CASE            reduce using rule 74 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)


state 331

    (82) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .

    DEF             reduce using rule 82 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 82 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 82 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 82 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 82 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 82 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 82 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 82 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 82 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    IF              reduce using rule 82 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    $end            reduce using rule 82 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    INT             reduce using rule 82 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 82 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 82 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 82 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 82 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 82 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 82 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)


state 332

    (80) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .

    DEF             reduce using rule 80 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINTLN         reduce using rule 80 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINT           reduce using rule 80 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    READLINE        reduce using rule 80 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAR             reduce using rule 80 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAL             reduce using rule 80 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    WHILE           reduce using rule 80 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FOR             reduce using rule 80 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VARIABLE        reduce using rule 80 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    IF              reduce using rule 80 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    $end            reduce using rule 80 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    INT             reduce using rule 80 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LONG            reduce using rule 80 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FLOAT           reduce using rule 80 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    DOUBLE          reduce using rule 80 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LLAVE_D         reduce using rule 80 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    RETURN          reduce using rule 80 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    CASE            reduce using rule 80 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)


state 333

    (88) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .

    DEF             reduce using rule 88 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 88 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 88 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 88 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 88 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 88 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 88 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 88 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 88 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    IF              reduce using rule 88 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    $end            reduce using rule 88 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    INT             reduce using rule 88 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 88 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 88 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 88 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 88 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 88 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 88 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)


state 334

    (86) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .

    DEF             reduce using rule 86 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINTLN         reduce using rule 86 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINT           reduce using rule 86 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    READLINE        reduce using rule 86 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAR             reduce using rule 86 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAL             reduce using rule 86 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    WHILE           reduce using rule 86 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FOR             reduce using rule 86 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VARIABLE        reduce using rule 86 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    IF              reduce using rule 86 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    $end            reduce using rule 86 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    INT             reduce using rule 86 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LONG            reduce using rule 86 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FLOAT           reduce using rule 86 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    DOUBLE          reduce using rule 86 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LLAVE_D         reduce using rule 86 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    RETURN          reduce using rule 86 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    CASE            reduce using rule 86 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)


state 335

    (131) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo . CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    CORCHETE_D      shift and go to state 367


state 336

    (134) while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 368


state 337

    (135) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 369


state 338

    (139) for -> FOR PAR_I VAR VARIABLE ITERATOR INT . TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> FOR PAR_I VAR VARIABLE ITERATOR INT . UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    TO              shift and go to state 370
    UNTIL           shift and go to state 371


state 339

    (136) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 372


state 340

    (137) for -> FOR PAR_I VARIABLE ITERATOR INT TO . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 373


state 341

    (138) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 374


state 342

    (179) if -> IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 375


state 343

    (182) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    contenido                      shift and go to state 376
    asignacion                     shift and go to state 91
    impresion                      shift and go to state 92
    entrada                        shift and go to state 93
    while                          shift and go to state 94
    for                            shift and go to state 95
    match                          shift and go to state 96
    if                             shift and go to state 97
    aritmetica                     shift and go to state 98
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25
    numeros                        shift and go to state 100

state 344

    (107) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 107 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)


state 345

    (114) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN valor LLAVE_D

    RETURN          shift and go to state 377


state 346

    (115) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN valor LLAVE_D

    RETURN          shift and go to state 378


state 347

    (117) dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D .

    IGUAL           reduce using rule 117 (dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D .)


state 348

    (119) tipos -> tipo tiposentry .

    PAR_D           reduce using rule 119 (tipos -> tipo tiposentry .)


state 349

    (120) tiposentry -> COMA . tipo
    (121) tiposentry -> COMA . tipo tiposentry
    (89) tipo -> . CHARCLASS
    (90) tipo -> . STRINGCLASS
    (91) tipo -> . BOOLCLASS
    (92) tipo -> . INTCLASS
    (93) tipo -> . LONGCLASS
    (94) tipo -> . DOUBLECLASS
    (95) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 205
    STRINGCLASS     shift and go to state 206
    BOOLCLASS       shift and go to state 207
    INTCLASS        shift and go to state 208
    LONGCLASS       shift and go to state 209
    DOUBLECLASS     shift and go to state 210
    FLOATCLASS      shift and go to state 211

    tipo                           shift and go to state 379

state 350

    (109) declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL . valor
    (96) valor -> . STRING
    (97) valor -> . CHAR
    (98) valor -> . VARIABLE
    (99) valor -> . numeros
    (100) valor -> . booleanos
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    VARIABLE        shift and go to state 61
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69

    valor                          shift and go to state 380
    numeros                        shift and go to state 62
    booleanos                      shift and go to state 63

state 351

    (176) defcase -> CASE SUBGUION FUNCION_FLECHA . codeBlock
    (177) codeBlock -> . contenidoLine
    (178) codeBlock -> . LLAVE_I contenido LLAVE_D
    (31) contenidoLine -> . asignacion
    (32) contenidoLine -> . impresion
    (33) contenidoLine -> . entrada
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 354
    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14

    codeBlock                      shift and go to state 381
    contenidoLine                  shift and go to state 353
    asignacion                     shift and go to state 355
    impresion                      shift and go to state 356
    entrada                        shift and go to state 357
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25

state 352

    (148) caseInt -> CASE INT FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 148 (caseInt -> CASE INT FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 148 (caseInt -> CASE INT FUNCION_FLECHA codeBlock .)


state 353

    (177) codeBlock -> contenidoLine .

    CASE            reduce using rule 177 (codeBlock -> contenidoLine .)
    LLAVE_D         reduce using rule 177 (codeBlock -> contenidoLine .)


state 354

    (178) codeBlock -> LLAVE_I . contenido LLAVE_D
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    contenido                      shift and go to state 382
    asignacion                     shift and go to state 91
    impresion                      shift and go to state 92
    entrada                        shift and go to state 93
    while                          shift and go to state 94
    for                            shift and go to state 95
    match                          shift and go to state 96
    if                             shift and go to state 97
    aritmetica                     shift and go to state 98
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25
    numeros                        shift and go to state 100

state 355

    (31) contenidoLine -> asignacion .

    CASE            reduce using rule 31 (contenidoLine -> asignacion .)
    LLAVE_D         reduce using rule 31 (contenidoLine -> asignacion .)


state 356

    (32) contenidoLine -> impresion .

    CASE            reduce using rule 32 (contenidoLine -> impresion .)
    LLAVE_D         reduce using rule 32 (contenidoLine -> impresion .)


state 357

    (33) contenidoLine -> entrada .

    CASE            reduce using rule 33 (contenidoLine -> entrada .)
    LLAVE_D         reduce using rule 33 (contenidoLine -> entrada .)


state 358

    (152) caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 152 (caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 152 (caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .)


state 359

    (156) caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 156 (caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 156 (caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .)


state 360

    (160) caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 160 (caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 160 (caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .)


state 361

    (164) caseStr -> CASE STRING FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 164 (caseStr -> CASE STRING FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 164 (caseStr -> CASE STRING FUNCION_FLECHA codeBlock .)


state 362

    (168) caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 168 (caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 168 (caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .)


state 363

    (127) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 127 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 127 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 127 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 127 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 127 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 127 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 127 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 127 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 127 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 127 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 127 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 127 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 127 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 127 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 127 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 127 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 127 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 127 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 364

    (133) valores -> valor COMA . valores
    (132) valores -> . valor
    (133) valores -> . valor COMA valores
    (96) valor -> . STRING
    (97) valor -> . CHAR
    (98) valor -> . VARIABLE
    (99) valor -> . numeros
    (100) valor -> . booleanos
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    VARIABLE        shift and go to state 61
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69

    valor                          shift and go to state 304
    valores                        shift and go to state 383
    numeros                        shift and go to state 62
    booleanos                      shift and go to state 63

state 365

    (128) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    IGUAL           shift and go to state 384


state 366

    (130) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 130 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 130 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 130 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 130 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 130 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 130 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 130 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 130 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 130 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 130 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 130 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 130 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 130 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 130 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 130 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 130 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 130 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 130 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)


state 367

    (131) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D . IGUAL LISTCLASS PAR_I valores PAR_D

    IGUAL           shift and go to state 385


state 368

    (134) while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 134 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 134 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 134 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 134 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 134 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 134 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 134 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 134 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 134 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 134 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 134 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 134 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 134 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 134 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 134 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 134 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 134 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)


state 369

    (135) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 386


state 370

    (139) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 387


state 371

    (140) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 388


state 372

    (136) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I . contenido LLAVE_D
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    contenido                      shift and go to state 389
    asignacion                     shift and go to state 91
    impresion                      shift and go to state 92
    entrada                        shift and go to state 93
    while                          shift and go to state 94
    for                            shift and go to state 95
    match                          shift and go to state 96
    if                             shift and go to state 97
    aritmetica                     shift and go to state 98
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25
    numeros                        shift and go to state 100

state 373

    (137) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 390


state 374

    (138) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 391


state 375

    (179) if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .

    ELSE            reduce using rule 179 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 179 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 179 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 179 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 179 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 179 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 179 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 179 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 179 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 179 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 179 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 179 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 179 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 179 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 179 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 179 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 179 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 179 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)


state 376

    (182) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 392


state 377

    (114) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . valor LLAVE_D
    (96) valor -> . STRING
    (97) valor -> . CHAR
    (98) valor -> . VARIABLE
    (99) valor -> . numeros
    (100) valor -> . booleanos
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    VARIABLE        shift and go to state 61
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69

    valor                          shift and go to state 393
    numeros                        shift and go to state 62
    booleanos                      shift and go to state 63

state 378

    (115) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . valor LLAVE_D
    (96) valor -> . STRING
    (97) valor -> . CHAR
    (98) valor -> . VARIABLE
    (99) valor -> . numeros
    (100) valor -> . booleanos
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    VARIABLE        shift and go to state 61
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69

    valor                          shift and go to state 394
    numeros                        shift and go to state 62
    booleanos                      shift and go to state 63

state 379

    (120) tiposentry -> COMA tipo .
    (121) tiposentry -> COMA tipo . tiposentry
    (120) tiposentry -> . COMA tipo
    (121) tiposentry -> . COMA tipo tiposentry

    PAR_D           reduce using rule 120 (tiposentry -> COMA tipo .)
    COMA            shift and go to state 349

    tiposentry                     shift and go to state 395

state 380

    (109) declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor .

    PAR_D           reduce using rule 109 (declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor .)


state 381

    (176) defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock .

    LLAVE_D         reduce using rule 176 (defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock .)


state 382

    (178) codeBlock -> LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 396


state 383

    (133) valores -> valor COMA valores .

    PAR_D           reduce using rule 133 (valores -> valor COMA valores .)


state 384

    (128) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (129) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    ARRAYCLASS      shift and go to state 397


state 385

    (131) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL . LISTCLASS PAR_I valores PAR_D

    LISTCLASS       shift and go to state 398


state 386

    (135) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I . contenido LLAVE_D
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    contenido                      shift and go to state 399
    asignacion                     shift and go to state 91
    impresion                      shift and go to state 92
    entrada                        shift and go to state 93
    while                          shift and go to state 94
    for                            shift and go to state 95
    match                          shift and go to state 96
    if                             shift and go to state 97
    aritmetica                     shift and go to state 98
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25
    numeros                        shift and go to state 100

state 387

    (139) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 400


state 388

    (140) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 401


state 389

    (136) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 402


state 390

    (137) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 403


state 391

    (138) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 404


state 392

    (182) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .

    ELSE            reduce using rule 182 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 182 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 182 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 182 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 182 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 182 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 182 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 182 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 182 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 182 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 182 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 182 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 182 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 182 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 182 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 182 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 182 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 182 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)


state 393

    (114) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor . LLAVE_D

    LLAVE_D         shift and go to state 405


state 394

    (115) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor . LLAVE_D

    LLAVE_D         shift and go to state 406


state 395

    (121) tiposentry -> COMA tipo tiposentry .

    PAR_D           reduce using rule 121 (tiposentry -> COMA tipo tiposentry .)


state 396

    (178) codeBlock -> LLAVE_I contenido LLAVE_D .

    CASE            reduce using rule 178 (codeBlock -> LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 178 (codeBlock -> LLAVE_I contenido LLAVE_D .)


state 397

    (128) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS . PAR_I valores PAR_D
    (129) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS . CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    PAR_I           shift and go to state 408
    CORCHETE_I      shift and go to state 407


state 398

    (131) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 409


state 399

    (135) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 410


state 400

    (139) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 411


state 401

    (140) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 412


state 402

    (136) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 136 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 136 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 136 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 136 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 136 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 136 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 136 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 136 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 136 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 136 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 136 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 136 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 136 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 136 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 136 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 136 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 136 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)


state 403

    (137) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I . contenido LLAVE_D
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    contenido                      shift and go to state 413
    asignacion                     shift and go to state 91
    impresion                      shift and go to state 92
    entrada                        shift and go to state 93
    while                          shift and go to state 94
    for                            shift and go to state 95
    match                          shift and go to state 96
    if                             shift and go to state 97
    aritmetica                     shift and go to state 98
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25
    numeros                        shift and go to state 100

state 404

    (138) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I . contenido LLAVE_D
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    contenido                      shift and go to state 414
    asignacion                     shift and go to state 91
    impresion                      shift and go to state 92
    entrada                        shift and go to state 93
    while                          shift and go to state 94
    for                            shift and go to state 95
    match                          shift and go to state 96
    if                             shift and go to state 97
    aritmetica                     shift and go to state 98
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25
    numeros                        shift and go to state 100

state 405

    (114) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .

    DEF             reduce using rule 114 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    PRINTLN         reduce using rule 114 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    PRINT           reduce using rule 114 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    READLINE        reduce using rule 114 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAR             reduce using rule 114 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAL             reduce using rule 114 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    WHILE           reduce using rule 114 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    FOR             reduce using rule 114 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VARIABLE        reduce using rule 114 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    IF              reduce using rule 114 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    $end            reduce using rule 114 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)


state 406

    (115) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D .

    DEF             reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    PRINTLN         reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    PRINT           reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    READLINE        reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAR             reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAL             reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    WHILE           reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    FOR             reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VARIABLE        reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    IF              reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    $end            reduce using rule 115 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)


state 407

    (129) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I . tipo CORCHETE_D PAR_I INT PAR_D
    (89) tipo -> . CHARCLASS
    (90) tipo -> . STRINGCLASS
    (91) tipo -> . BOOLCLASS
    (92) tipo -> . INTCLASS
    (93) tipo -> . LONGCLASS
    (94) tipo -> . DOUBLECLASS
    (95) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 205
    STRINGCLASS     shift and go to state 206
    BOOLCLASS       shift and go to state 207
    INTCLASS        shift and go to state 208
    LONGCLASS       shift and go to state 209
    DOUBLECLASS     shift and go to state 210
    FLOATCLASS      shift and go to state 211

    tipo                           shift and go to state 415

state 408

    (128) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (132) valores -> . valor
    (133) valores -> . valor COMA valores
    (96) valor -> . STRING
    (97) valor -> . CHAR
    (98) valor -> . VARIABLE
    (99) valor -> . numeros
    (100) valor -> . booleanos
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    VARIABLE        shift and go to state 61
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69

    valores                        shift and go to state 416
    valor                          shift and go to state 304
    numeros                        shift and go to state 62
    booleanos                      shift and go to state 63

state 409

    (131) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I . valores PAR_D
    (132) valores -> . valor
    (133) valores -> . valor COMA valores
    (96) valor -> . STRING
    (97) valor -> . CHAR
    (98) valor -> . VARIABLE
    (99) valor -> . numeros
    (100) valor -> . booleanos
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE
    (101) booleanos -> . TRUE
    (102) booleanos -> . FLASE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    VARIABLE        shift and go to state 61
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67
    TRUE            shift and go to state 68
    FLASE           shift and go to state 69

    valores                        shift and go to state 417
    valor                          shift and go to state 304
    numeros                        shift and go to state 62
    booleanos                      shift and go to state 63

state 410

    (135) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 135 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 135 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 135 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 135 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 135 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 135 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 135 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 135 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 135 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 135 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 135 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 135 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 135 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 135 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 135 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 135 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 135 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)


state 411

    (139) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I . contenido LLAVE_D
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    contenido                      shift and go to state 418
    asignacion                     shift and go to state 91
    impresion                      shift and go to state 92
    entrada                        shift and go to state 93
    while                          shift and go to state 94
    for                            shift and go to state 95
    match                          shift and go to state 96
    if                             shift and go to state 97
    aritmetica                     shift and go to state 98
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25
    numeros                        shift and go to state 100

state 412

    (140) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I . contenido LLAVE_D
    (15) contenido -> . asignacion
    (16) contenido -> . impresion
    (17) contenido -> . entrada
    (18) contenido -> . while
    (19) contenido -> . for
    (20) contenido -> . match
    (21) contenido -> . if
    (22) contenido -> . aritmetica
    (23) contenido -> . asignacion contenido
    (24) contenido -> . impresion contenido
    (25) contenido -> . entrada contenido
    (26) contenido -> . while contenido
    (27) contenido -> . for contenido
    (28) contenido -> . if contenido
    (29) contenido -> . match contenido
    (30) contenido -> . aritmetica contenido
    (34) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (35) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (36) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (37) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (38) asignacion -> . asignacionLong
    (39) asignacion -> . asignacionInt
    (40) asignacion -> . asignacionFloat
    (41) asignacion -> . asignacionDouble
    (42) asignacion -> . asignacionString
    (43) asignacion -> . asignacionChar
    (44) asignacion -> . asignacionBoolean
    (45) asignacion -> . array
    (46) asignacion -> . list
    (122) impresion -> . PRINTLN PAR_I valorI PAR_D
    (123) impresion -> . PRINT PAR_I valorI PAR_D
    (126) entrada -> . READLINE PAR_I PAR_D
    (134) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (135) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (136) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (137) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (138) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (139) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (140) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (141) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (179) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (180) if -> . if elseif
    (181) if -> . if else
    (216) aritmetica -> . numeros aritmeticos numeros
    (217) aritmetica -> . VARIABLE aritmeticos numeros
    (218) aritmetica -> . numeros aritmeticos VARIABLE
    (219) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (220) aritmetica -> . aritmetica aritmeticos numeros
    (221) aritmetica -> . aritmetica aritmeticos VARIABLE
    (47) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (48) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (49) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (50) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (51) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (52) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (53) asignacionInt -> . VAR VARIABLE IGUAL INT
    (54) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (55) asignacionInt -> . VAL VARIABLE IGUAL INT
    (56) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (57) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (58) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (59) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (60) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (61) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (62) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (65) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (66) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (67) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (68) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (69) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (70) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (71) asignacionString -> . VAR VARIABLE IGUAL STRING
    (72) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE IGUAL STRING
    (74) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (78) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (80) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (84) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (86) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (127) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (128) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (129) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (130) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (131) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (103) numeros -> . INT
    (104) numeros -> . LONG
    (105) numeros -> . FLOAT
    (106) numeros -> . DOUBLE

    VAR             shift and go to state 15
    VAL             shift and go to state 16
    PRINTLN         shift and go to state 12
    PRINT           shift and go to state 13
    READLINE        shift and go to state 14
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    VARIABLE        shift and go to state 99
    IF              shift and go to state 28
    INT             shift and go to state 64
    LONG            shift and go to state 65
    FLOAT           shift and go to state 66
    DOUBLE          shift and go to state 67

    contenido                      shift and go to state 419
    asignacion                     shift and go to state 91
    impresion                      shift and go to state 92
    entrada                        shift and go to state 93
    while                          shift and go to state 94
    for                            shift and go to state 95
    match                          shift and go to state 96
    if                             shift and go to state 97
    aritmetica                     shift and go to state 98
    asignacionLong                 shift and go to state 17
    asignacionInt                  shift and go to state 18
    asignacionFloat                shift and go to state 19
    asignacionDouble               shift and go to state 20
    asignacionString               shift and go to state 21
    asignacionChar                 shift and go to state 22
    asignacionBoolean              shift and go to state 23
    array                          shift and go to state 24
    list                           shift and go to state 25
    numeros                        shift and go to state 100

state 413

    (137) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 420


state 414

    (138) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 421


state 415

    (129) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo . CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 422


state 416

    (128) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 423


state 417

    (131) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 424


state 418

    (139) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 425


state 419

    (140) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 426


state 420

    (137) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 137 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 137 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 137 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 137 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 137 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 137 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 137 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 137 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 137 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 137 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 137 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 137 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 137 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 137 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 137 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 137 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 137 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)


state 421

    (138) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 138 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 138 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 138 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 138 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 138 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 138 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 138 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 138 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 138 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 138 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 138 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 138 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 138 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 138 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 138 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 138 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 138 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)


state 422

    (129) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D . PAR_I INT PAR_D

    PAR_I           shift and go to state 427


state 423

    (128) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 128 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 128 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 128 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 128 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 128 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 128 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 128 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 128 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 128 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 128 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 128 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 128 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 128 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 128 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 128 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 128 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 128 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 128 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 424

    (131) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 131 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 131 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 131 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 131 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 131 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 131 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 131 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 131 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 131 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 131 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 131 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 131 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 131 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 131 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 131 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 131 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 131 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 131 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)


state 425

    (139) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 139 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 139 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 139 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 139 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 139 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 139 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 139 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 139 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 139 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 139 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 139 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 139 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 139 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 139 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 139 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 139 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 139 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)


state 426

    (140) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 140 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 140 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 140 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 140 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 140 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 140 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 140 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 140 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 140 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 140 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 140 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 140 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 140 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 140 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 140 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 140 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 140 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)


state 427

    (129) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I . INT PAR_D

    INT             shift and go to state 428


state 428

    (129) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT . PAR_D

    PAR_D           shift and go to state 429


state 429

    (129) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .

    DEF             reduce using rule 129 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINTLN         reduce using rule 129 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINT           reduce using rule 129 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    READLINE        reduce using rule 129 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAR             reduce using rule 129 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAL             reduce using rule 129 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    WHILE           reduce using rule 129 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FOR             reduce using rule 129 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VARIABLE        reduce using rule 129 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    IF              reduce using rule 129 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    $end            reduce using rule 129 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    INT             reduce using rule 129 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LONG            reduce using rule 129 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FLOAT           reduce using rule 129 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    DOUBLE          reduce using rule 129 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LLAVE_D         reduce using rule 129 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    RETURN          reduce using rule 129 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    CASE            reduce using rule 129 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 35 resolved as shift

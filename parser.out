Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ARROBA
    BACKTICK
    CATCH
    CLASS
    DO
    EXTENDS
    FINAL
    FINALLY
    FOR_SOME
    HASHTAG
    IMPLICIT
    IMPORT
    LAZY
    LIBRERIA_IO
    MACRO
    MAYOR_IGUAL
    MENOR_IGUAL
    NULL
    OBJECT
    OVERRIDE
    PACKAGE
    PRIVATE
    PROTECTED
    REVERSE
    SEALED
    SUPER
    THIS
    THROW
    TRAIT
    TRY
    TYPE
    WITH
    YIELD

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> funcion
Rule 2     cuerpo -> funcall
Rule 3     cuerpo -> impresion
Rule 4     cuerpo -> entrada
Rule 5     cuerpo -> asignacion
Rule 6     cuerpo -> while
Rule 7     cuerpo -> for
Rule 8     cuerpo -> match
Rule 9     cuerpo -> if
Rule 10    cuerpo -> funcion cuerpo
Rule 11    cuerpo -> asignacion cuerpo
Rule 12    cuerpo -> while cuerpo
Rule 13    cuerpo -> for cuerpo
Rule 14    cuerpo -> if cuerpo
Rule 15    cuerpo -> match cuerpo
Rule 16    contenido -> asignacion
Rule 17    contenido -> reasignacion
Rule 18    contenido -> funcall
Rule 19    contenido -> impresion
Rule 20    contenido -> entrada
Rule 21    contenido -> while
Rule 22    contenido -> for
Rule 23    contenido -> match
Rule 24    contenido -> if
Rule 25    contenido -> aritmetica
Rule 26    contenido -> asignacion contenido
Rule 27    contenido -> reasignacion contenido
Rule 28    contenido -> funcall contenido
Rule 29    contenido -> impresion contenido
Rule 30    contenido -> entrada contenido
Rule 31    contenido -> while contenido
Rule 32    contenido -> for contenido
Rule 33    contenido -> if contenido
Rule 34    contenido -> match contenido
Rule 35    contenido -> aritmetica contenido
Rule 36    contenidoLine -> asignacion
Rule 37    contenidoLine -> reasignacion
Rule 38    contenidoLine -> funcall
Rule 39    contenidoLine -> impresion
Rule 40    contenidoLine -> entrada
Rule 41    asignacion -> VAR VARIABLE IGUAL VARIABLE
Rule 42    asignacion -> VAL VARIABLE IGUAL VARIABLE
Rule 43    asignacion -> VAR VARIABLE IGUAL aritmetica
Rule 44    asignacion -> VAL VARIABLE IGUAL aritmetica
Rule 45    asignacion -> VAR VARIABLE IGUAL returnfun
Rule 46    asignacion -> VAL VARIABLE IGUAL returnfun
Rule 47    asignacion -> asignacionLong
Rule 48    asignacion -> asignacionInt
Rule 49    asignacion -> asignacionFloat
Rule 50    asignacion -> asignacionDouble
Rule 51    asignacion -> asignacionString
Rule 52    asignacion -> asignacionChar
Rule 53    asignacion -> asignacionBoolean
Rule 54    asignacion -> array
Rule 55    asignacion -> list
Rule 56    asignacionLong -> VAR VARIABLE IGUAL LONG
Rule 57    asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
Rule 58    asignacionLong -> VAL VARIABLE IGUAL LONG
Rule 59    asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
Rule 60    asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
Rule 61    asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
Rule 62    asignacionInt -> VAR VARIABLE IGUAL INT
Rule 63    asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
Rule 64    asignacionInt -> VAL VARIABLE IGUAL INT
Rule 65    asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
Rule 66    asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
Rule 67    asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
Rule 68    asignacionFloat -> VAR VARIABLE IGUAL FLOAT
Rule 69    asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
Rule 70    asignacionFloat -> VAL VARIABLE IGUAL FLOAT
Rule 71    asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
Rule 72    asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
Rule 73    asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
Rule 74    asignacionDouble -> VAR VARIABLE IGUAL DOUBLE
Rule 75    asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
Rule 76    asignacionDouble -> VAL VARIABLE IGUAL DOUBLE
Rule 77    asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
Rule 78    asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
Rule 79    asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
Rule 80    asignacionString -> VAR VARIABLE IGUAL STRING
Rule 81    asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
Rule 82    asignacionString -> VAL VARIABLE IGUAL STRING
Rule 83    asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
Rule 84    asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
Rule 85    asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
Rule 86    asignacionChar -> VAR VARIABLE IGUAL CHAR
Rule 87    asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
Rule 88    asignacionChar -> VAL VARIABLE IGUAL CHAR
Rule 89    asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
Rule 90    asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
Rule 91    asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
Rule 92    asignacionBoolean -> VAR VARIABLE IGUAL booleanos
Rule 93    asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
Rule 94    asignacionBoolean -> VAL VARIABLE IGUAL booleanos
Rule 95    asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
Rule 96    asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
Rule 97    asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
Rule 98    reasignacion -> VARIABLE IGUAL valor
Rule 99    reasignacion -> VARIABLE IGUAL returnfun
Rule 100   reasignacion -> VARIABLE IGUAL aritmetica
Rule 101   reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor
Rule 102   tipo -> CHARCLASS
Rule 103   tipo -> STRINGCLASS
Rule 104   tipo -> BOOLCLASS
Rule 105   tipo -> INTCLASS
Rule 106   tipo -> LONGCLASS
Rule 107   tipo -> DOUBLECLASS
Rule 108   tipo -> FLOATCLASS
Rule 109   valor -> STRING
Rule 110   valor -> CHAR
Rule 111   valor -> VARIABLE
Rule 112   valor -> numeros
Rule 113   valor -> booleanos
Rule 114   booleanos -> TRUE
Rule 115   booleanos -> FLASE
Rule 116   numeros -> INT
Rule 117   numeros -> LONG
Rule 118   numeros -> FLOAT
Rule 119   numeros -> DOUBLE
Rule 120   funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
Rule 121   funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
Rule 122   declaracion -> VARIABLE DOBLE_PUNTO tipo
Rule 123   declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor
Rule 124   parametro -> parametros
Rule 125   parametro -> PAR_I PAR_D
Rule 126   parametros -> PAR_I declaracion PAR_D
Rule 127   parametros -> PAR_I declaracion PAR_D parametros
Rule 128   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
Rule 129   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
Rule 130   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
Rule 131   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
Rule 132   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
Rule 133   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
Rule 134   dectipo -> DOBLE_PUNTO tipo
Rule 135   dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D
Rule 136   tipos -> tipo
Rule 137   tipos -> tipo tiposentry
Rule 138   tiposentry -> COMA tipo
Rule 139   tiposentry -> COMA tipo tiposentry
Rule 140   impresion -> PRINTLN PAR_I valorI PAR_D
Rule 141   impresion -> PRINT PAR_I valorI PAR_D
Rule 142   valorI -> valor MAS valorI
Rule 143   valorI -> valor
Rule 144   entrada -> READLINE PAR_I PAR_D
Rule 145   funcall -> VARIABLE PAR_I valores PAR_D
Rule 146   funcall -> VARIABLE PAR_I PAR_D
Rule 147   returnfun -> returnCastable
Rule 148   returnfun -> castingcall
Rule 149   returnCastable -> entrada
Rule 150   returnCastable -> funcall
Rule 151   castingcall -> returnCastable PUNTO castingfun
Rule 152   castingcall -> VARIABLE PUNTO castingfun
Rule 153   castingfun -> TO_INT
Rule 154   castingfun -> TO_DOUBLE
Rule 155   castingfun -> TO_FLOAT
Rule 156   castingfun -> TO_LONG
Rule 157   array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 158   array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 159   array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
Rule 160   array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 161   array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 162   array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
Rule 163   list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
Rule 164   list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
Rule 165   list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
Rule 166   valores -> valor
Rule 167   valores -> valor COMA valores
Rule 168   tuple -> PAR_I valores PAR_D
Rule 169   asignacion -> VAR VARIABLE IGUAL tuple
Rule 170   asignacion -> VAL VARIABLE IGUAL tuple
Rule 171   asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple
Rule 172   asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple
Rule 173   while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 174   for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
Rule 175   for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
Rule 176   for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
Rule 177   for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
Rule 178   for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
Rule 179   for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
Rule 180   match -> VARIABLE MATCH LLAVE_I cases LLAVE_D
Rule 181   cases -> casesInt
Rule 182   cases -> casesLgn
Rule 183   cases -> casesFlt
Rule 184   cases -> casesDob
Rule 185   cases -> casesStr
Rule 186   cases -> casesChar
Rule 187   cases -> casesBool
Rule 188   caseInt -> CASE INT FUNCION_FLECHA codeBlock
Rule 189   casesInt -> caseInt
Rule 190   casesInt -> caseInt casesInt
Rule 191   casesInt -> caseInt defcase
Rule 192   caseLgn -> CASE LONG FUNCION_FLECHA codeBlock
Rule 193   casesLgn -> caseLgn
Rule 194   casesLgn -> caseLgn casesLgn
Rule 195   casesLgn -> caseLgn defcase
Rule 196   caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock
Rule 197   casesFlt -> caseFlt
Rule 198   casesFlt -> caseFlt casesFlt
Rule 199   casesFlt -> caseFlt defcase
Rule 200   caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock
Rule 201   casesDob -> caseDob
Rule 202   casesDob -> caseDob casesDob
Rule 203   casesDob -> caseDob defcase
Rule 204   caseStr -> CASE STRING FUNCION_FLECHA codeBlock
Rule 205   casesStr -> caseStr
Rule 206   casesStr -> caseStr casesStr
Rule 207   casesStr -> caseStr defcase
Rule 208   caseChar -> CASE CHAR FUNCION_FLECHA codeBlock
Rule 209   casesChar -> caseChar
Rule 210   casesChar -> caseChar casesChar
Rule 211   casesChar -> caseChar defcase
Rule 212   caseBool -> CASE booleanos FUNCION_FLECHA codeBlock
Rule 213   casesBool -> caseBool
Rule 214   casesBool -> caseBool casesBool
Rule 215   casesBool -> caseBool defcase
Rule 216   defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock
Rule 217   codeBlock -> contenidoLine
Rule 218   codeBlock -> LLAVE_I contenido LLAVE_D
Rule 219   if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 220   if -> if elseif
Rule 221   if -> if else
Rule 222   elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 223   elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
Rule 224   else -> ELSE LLAVE_I contenido LLAVE_D
Rule 225   else -> elseif else
Rule 226   condicional -> valorC logicos condicional
Rule 227   condicional -> valorC
Rule 228   valorC -> VARIABLE
Rule 229   valorC -> booleanos
Rule 230   valorC -> relacional
Rule 231   valorC -> NOT VARIABLE
Rule 232   valorC -> NOT booleanos
Rule 233   valorC -> NOT relacional
Rule 234   logicos -> AND
Rule 235   logicos -> OR
Rule 236   logicos -> NOT
Rule 237   relacional -> numeros comparacion numeros
Rule 238   relacional -> aritmetica comparacion aritmetica
Rule 239   relacional -> aritmetica comparacion numeros
Rule 240   relacional -> numeros comparacion aritmetica
Rule 241   relacional -> booleanos comparacion booleanos
Rule 242   relacional -> STRING comparacion STRING
Rule 243   relacional -> CHAR comparacion CHAR
Rule 244   relacional -> VARIABLE comparacion numeros
Rule 245   relacional -> numeros comparacion VARIABLE
Rule 246   relacional -> VARIABLE comparacion booleanos
Rule 247   relacional -> booleanos comparacion VARIABLE
Rule 248   relacional -> VARIABLE comparacion STRING
Rule 249   relacional -> STRING comparacion VARIABLE
Rule 250   relacional -> VARIABLE comparacion CHAR
Rule 251   relacional -> CHAR comparacion VARIABLE
Rule 252   relacional -> VARIABLE comparacion VARIABLE
Rule 253   comparacion -> IGUAL_COMPARACION
Rule 254   comparacion -> DIFERENTE
Rule 255   comparacion -> MAYOR
Rule 256   comparacion -> MENOR
Rule 257   aritmetica -> numeros aritmeticos numeros
Rule 258   aritmetica -> VARIABLE aritmeticos numeros
Rule 259   aritmetica -> numeros aritmeticos VARIABLE
Rule 260   aritmetica -> VARIABLE aritmeticos VARIABLE
Rule 261   aritmetica -> aritmetica aritmeticos numeros
Rule 262   aritmetica -> aritmetica aritmeticos VARIABLE
Rule 263   aritmeticos -> MENOS
Rule 264   aritmeticos -> MAS
Rule 265   aritmeticos -> MULTIPLICACION
Rule 266   aritmeticos -> DIVISION
Rule 267   aritmeticos -> MOD

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 234
ARRAYCLASS           : 157 158 158 159 159 160 161 161 162 162
ARROBA               : 
BACKTICK             : 
BOOLCLASS            : 93 95 96 97 104
CASE                 : 188 192 196 200 204 208 212 216
CATCH                : 
CHAR                 : 86 87 88 89 110 208 243 243 250 251
CHARCLASS            : 87 89 90 91 102
CLASS                : 
COMA                 : 138 139 167
CORCHETE_D           : 158 159 159 161 162 162 164 165
CORCHETE_I           : 158 159 159 161 162 162 164 165
DEF                  : 120 121 128 129 130 131 132 133
DIFERENTE            : 254
DIVISION             : 266
DO                   : 
DOBLE_PUNTO          : 57 59 60 61 63 65 66 67 69 71 72 73 75 77 78 79 81 83 84 85 87 89 90 91 93 95 96 97 122 123 134 135 158 159 161 162 164 165
DOUBLE               : 74 75 76 77 119 200
DOUBLECLASS          : 75 77 78 79 107
ELSE                 : 222 223 224
EXTENDS              : 
FINAL                : 
FINALLY              : 
FLASE                : 115
FLOAT                : 68 69 70 71 118 196
FLOATCLASS           : 69 71 72 73 108
FOR                  : 174 175 176 177 178 179
FOR_SOME             : 
FUNCION_FLECHA       : 188 192 196 200 204 208 212 216
HASHTAG              : 
IF                   : 219 222 223
IGUAL                : 41 42 43 44 45 46 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 120 123 128 129 130 131 132 133 157 158 159 160 161 162 163 164 165 169 170 171 172
IGUAL_COMPARACION    : 253
IMPLICIT             : 
IMPORT               : 
INT                  : 62 63 64 65 101 116 159 162 176 176 177 177 178 178 179 179 188
INTCLASS             : 63 65 66 67 105
ITERATOR             : 174 175 176 177 178 179
LAZY                 : 
LIBRERIA_IO          : 
LISTCLASS            : 163 164 164 165 165
LLAVE_D              : 120 121 128 129 130 131 132 133 173 174 175 176 177 178 179 180 218 219 222 223 224
LLAVE_I              : 120 121 128 129 130 131 132 133 173 174 175 176 177 178 179 180 218 219 222 223 224
LONG                 : 56 57 58 59 117 192
LONGCLASS            : 57 59 60 61 106
MACRO                : 
MAS                  : 142 264
MATCH                : 180
MAYOR                : 255
MAYOR_IGUAL          : 
MENOR                : 256
MENOR_IGUAL          : 
MENOS                : 263
MOD                  : 267
MULTIPLICACION       : 265
NEW                  : 159 162 164
NOT                  : 231 232 233 236
NULL                 : 
OBJECT               : 
OR                   : 235
OVERRIDE             : 
PACKAGE              : 
PAR_D                : 101 125 126 127 135 140 141 144 145 146 157 158 159 160 161 162 163 164 165 168 173 174 175 176 177 178 179 219 222 223
PAR_I                : 101 125 126 127 135 140 141 144 145 146 157 158 159 160 161 162 163 164 165 168 173 174 175 176 177 178 179 219 222 223
PRINT                : 141
PRINTLN              : 140
PRIVATE              : 
PROTECTED            : 
PUNTO                : 151 152
READLINE             : 144
RETURN               : 128 129 130 131 132 133
REVERSE              : 
SEALED               : 
STRING               : 80 81 82 83 109 204 242 242 248 249
STRINGCLASS          : 81 83 84 85 103
SUBGUION             : 216
SUPER                : 
THIS                 : 
THROW                : 
TO                   : 176 178
TO_DOUBLE            : 154
TO_FLOAT             : 155
TO_INT               : 153
TO_LONG              : 156
TRAIT                : 
TRUE                 : 114
TRY                  : 
TYPE                 : 
UNTIL                : 177 179
VAL                  : 42 44 46 58 59 61 64 65 67 70 71 73 76 77 79 82 83 85 88 89 91 94 95 97 160 161 162 163 164 165 170 172
VAR                  : 41 43 45 56 57 60 62 63 66 68 69 72 74 75 78 80 81 84 86 87 90 92 93 96 157 158 159 169 171 174 178 179
VARIABLE             : 41 41 42 42 43 44 45 46 56 57 58 59 60 60 61 61 62 63 64 65 66 66 67 67 68 69 70 71 72 72 73 73 74 75 76 77 78 78 79 79 80 81 82 83 84 84 85 85 86 87 88 89 90 90 91 91 92 93 94 95 96 96 97 97 98 99 100 101 111 120 121 122 123 128 129 129 130 131 132 132 133 145 146 152 157 158 159 160 161 162 163 164 165 169 170 171 172 174 174 175 175 176 177 178 179 180 228 231 244 245 246 247 248 249 250 251 252 252 258 259 260 260 262
WHILE                : 173
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

aritmetica           : 25 35 43 44 100 238 238 239 240 261 262
aritmeticos          : 257 258 259 260 261 262
array                : 54
asignacion           : 5 11 16 26 36
asignacionBoolean    : 53
asignacionChar       : 52
asignacionDouble     : 50
asignacionFloat      : 49
asignacionInt        : 48
asignacionLong       : 47
asignacionString     : 51
booleanos            : 92 93 94 95 113 212 229 232 241 241 246 247
caseBool             : 213 214 215
caseChar             : 209 210 211
caseDob              : 201 202 203
caseFlt              : 197 198 199
caseInt              : 189 190 191
caseLgn              : 193 194 195
caseStr              : 205 206 207
cases                : 180
casesBool            : 187 214
casesChar            : 186 210
casesDob             : 184 202
casesFlt             : 183 198
casesInt             : 181 190
casesLgn             : 182 194
casesStr             : 185 206
castingcall          : 148
castingfun           : 151 152
codeBlock            : 188 192 196 200 204 208 212 216
comparacion          : 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252
condicional          : 173 219 222 223 226
contenido            : 26 27 28 29 30 31 32 33 34 35 120 121 128 129 130 131 132 133 173 174 175 176 177 178 179 218 219 222 223 224
contenidoLine        : 217
cuerpo               : 10 11 12 13 14 15 0
declaracion          : 126 127
dectipo              : 128 129 130
dectipoTupla         : 131 132 133 171 172
defcase              : 191 195 199 203 207 211 215
else                 : 221 225
elseif               : 220 223 225
entrada              : 4 20 30 40 149
for                  : 7 13 22 32
funcall              : 2 18 28 38 150
funcion              : 1 10
if                   : 9 14 24 33 220 221
impresion            : 3 19 29 39
list                 : 55
logicos              : 226
match                : 8 15 23 34
numeros              : 112 237 237 239 240 244 245 257 257 258 259 261
parametro            : 120 121 128 129 130 131 132 133
parametros           : 124 127
reasignacion         : 17 27 37
relacional           : 230 233
returnCastable       : 147 151
returnfun            : 45 46 99 130 133
tipo                 : 122 123 134 136 137 138 139 158 159 159 161 162 162 164 165
tipos                : 135
tiposentry           : 137 139
tuple                : 131 169 170 171 172
valor                : 98 101 123 128 142 143 166 167
valorC               : 226 227
valorI               : 140 141 142
valores              : 145 157 158 160 161 163 164 165 167 168
while                : 6 12 21 31

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . funcall
    (3) cuerpo -> . impresion
    (4) cuerpo -> . entrada
    (5) cuerpo -> . asignacion
    (6) cuerpo -> . while
    (7) cuerpo -> . for
    (8) cuerpo -> . match
    (9) cuerpo -> . if
    (10) cuerpo -> . funcion cuerpo
    (11) cuerpo -> . asignacion cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . for cuerpo
    (14) cuerpo -> . if cuerpo
    (15) cuerpo -> . match cuerpo
    (120) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    DEF             shift and go to state 11
    VARIABLE        shift and go to state 12
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29

    cuerpo                         shift and go to state 1
    funcion                        shift and go to state 2
    funcall                        shift and go to state 3
    impresion                      shift and go to state 4
    entrada                        shift and go to state 5
    asignacion                     shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    match                          shift and go to state 9
    if                             shift and go to state 10
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> funcion .
    (10) cuerpo -> funcion . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . funcall
    (3) cuerpo -> . impresion
    (4) cuerpo -> . entrada
    (5) cuerpo -> . asignacion
    (6) cuerpo -> . while
    (7) cuerpo -> . for
    (8) cuerpo -> . match
    (9) cuerpo -> . if
    (10) cuerpo -> . funcion cuerpo
    (11) cuerpo -> . asignacion cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . for cuerpo
    (14) cuerpo -> . if cuerpo
    (15) cuerpo -> . match cuerpo
    (120) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 1 (cuerpo -> funcion .)
    DEF             shift and go to state 11
    VARIABLE        shift and go to state 12
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29

    funcion                        shift and go to state 2
    cuerpo                         shift and go to state 30
    funcall                        shift and go to state 3
    impresion                      shift and go to state 4
    entrada                        shift and go to state 5
    asignacion                     shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    match                          shift and go to state 9
    if                             shift and go to state 10
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 3

    (2) cuerpo -> funcall .

    $end            reduce using rule 2 (cuerpo -> funcall .)


state 4

    (3) cuerpo -> impresion .

    $end            reduce using rule 3 (cuerpo -> impresion .)


state 5

    (4) cuerpo -> entrada .

    $end            reduce using rule 4 (cuerpo -> entrada .)


state 6

    (5) cuerpo -> asignacion .
    (11) cuerpo -> asignacion . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . funcall
    (3) cuerpo -> . impresion
    (4) cuerpo -> . entrada
    (5) cuerpo -> . asignacion
    (6) cuerpo -> . while
    (7) cuerpo -> . for
    (8) cuerpo -> . match
    (9) cuerpo -> . if
    (10) cuerpo -> . funcion cuerpo
    (11) cuerpo -> . asignacion cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . for cuerpo
    (14) cuerpo -> . if cuerpo
    (15) cuerpo -> . match cuerpo
    (120) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 5 (cuerpo -> asignacion .)
    DEF             shift and go to state 11
    VARIABLE        shift and go to state 12
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29

    asignacion                     shift and go to state 6
    cuerpo                         shift and go to state 31
    funcion                        shift and go to state 2
    funcall                        shift and go to state 3
    impresion                      shift and go to state 4
    entrada                        shift and go to state 5
    while                          shift and go to state 7
    for                            shift and go to state 8
    match                          shift and go to state 9
    if                             shift and go to state 10
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 7

    (6) cuerpo -> while .
    (12) cuerpo -> while . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . funcall
    (3) cuerpo -> . impresion
    (4) cuerpo -> . entrada
    (5) cuerpo -> . asignacion
    (6) cuerpo -> . while
    (7) cuerpo -> . for
    (8) cuerpo -> . match
    (9) cuerpo -> . if
    (10) cuerpo -> . funcion cuerpo
    (11) cuerpo -> . asignacion cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . for cuerpo
    (14) cuerpo -> . if cuerpo
    (15) cuerpo -> . match cuerpo
    (120) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 6 (cuerpo -> while .)
    DEF             shift and go to state 11
    VARIABLE        shift and go to state 12
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29

    while                          shift and go to state 7
    cuerpo                         shift and go to state 32
    funcion                        shift and go to state 2
    funcall                        shift and go to state 3
    impresion                      shift and go to state 4
    entrada                        shift and go to state 5
    asignacion                     shift and go to state 6
    for                            shift and go to state 8
    match                          shift and go to state 9
    if                             shift and go to state 10
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 8

    (7) cuerpo -> for .
    (13) cuerpo -> for . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . funcall
    (3) cuerpo -> . impresion
    (4) cuerpo -> . entrada
    (5) cuerpo -> . asignacion
    (6) cuerpo -> . while
    (7) cuerpo -> . for
    (8) cuerpo -> . match
    (9) cuerpo -> . if
    (10) cuerpo -> . funcion cuerpo
    (11) cuerpo -> . asignacion cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . for cuerpo
    (14) cuerpo -> . if cuerpo
    (15) cuerpo -> . match cuerpo
    (120) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 7 (cuerpo -> for .)
    DEF             shift and go to state 11
    VARIABLE        shift and go to state 12
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29

    for                            shift and go to state 8
    cuerpo                         shift and go to state 33
    funcion                        shift and go to state 2
    funcall                        shift and go to state 3
    impresion                      shift and go to state 4
    entrada                        shift and go to state 5
    asignacion                     shift and go to state 6
    while                          shift and go to state 7
    match                          shift and go to state 9
    if                             shift and go to state 10
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 9

    (8) cuerpo -> match .
    (15) cuerpo -> match . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . funcall
    (3) cuerpo -> . impresion
    (4) cuerpo -> . entrada
    (5) cuerpo -> . asignacion
    (6) cuerpo -> . while
    (7) cuerpo -> . for
    (8) cuerpo -> . match
    (9) cuerpo -> . if
    (10) cuerpo -> . funcion cuerpo
    (11) cuerpo -> . asignacion cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . for cuerpo
    (14) cuerpo -> . if cuerpo
    (15) cuerpo -> . match cuerpo
    (120) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 8 (cuerpo -> match .)
    DEF             shift and go to state 11
    VARIABLE        shift and go to state 12
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29

    match                          shift and go to state 9
    cuerpo                         shift and go to state 34
    funcion                        shift and go to state 2
    funcall                        shift and go to state 3
    impresion                      shift and go to state 4
    entrada                        shift and go to state 5
    asignacion                     shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    if                             shift and go to state 10
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 10

    (9) cuerpo -> if .
    (14) cuerpo -> if . cuerpo
    (220) if -> if . elseif
    (221) if -> if . else
    (1) cuerpo -> . funcion
    (2) cuerpo -> . funcall
    (3) cuerpo -> . impresion
    (4) cuerpo -> . entrada
    (5) cuerpo -> . asignacion
    (6) cuerpo -> . while
    (7) cuerpo -> . for
    (8) cuerpo -> . match
    (9) cuerpo -> . if
    (10) cuerpo -> . funcion cuerpo
    (11) cuerpo -> . asignacion cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . for cuerpo
    (14) cuerpo -> . if cuerpo
    (15) cuerpo -> . match cuerpo
    (222) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (223) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (224) else -> . ELSE LLAVE_I contenido LLAVE_D
    (225) else -> . elseif else
    (120) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 9 (cuerpo -> if .)
    ELSE            shift and go to state 38
    DEF             shift and go to state 11
    VARIABLE        shift and go to state 12
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29

    if                             shift and go to state 10
    cuerpo                         shift and go to state 35
    elseif                         shift and go to state 36
    else                           shift and go to state 37
    funcion                        shift and go to state 2
    funcall                        shift and go to state 3
    impresion                      shift and go to state 4
    entrada                        shift and go to state 5
    asignacion                     shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    match                          shift and go to state 9
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 11

    (120) funcion -> DEF . VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> DEF . VARIABLE parametro LLAVE_I contenido LLAVE_D
    (128) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D

    VARIABLE        shift and go to state 39


state 12

    (145) funcall -> VARIABLE . PAR_I valores PAR_D
    (146) funcall -> VARIABLE . PAR_I PAR_D
    (180) match -> VARIABLE . MATCH LLAVE_I cases LLAVE_D

    PAR_I           shift and go to state 40
    MATCH           shift and go to state 41


state 13

    (140) impresion -> PRINTLN . PAR_I valorI PAR_D

    PAR_I           shift and go to state 42


state 14

    (141) impresion -> PRINT . PAR_I valorI PAR_D

    PAR_I           shift and go to state 43


state 15

    (144) entrada -> READLINE . PAR_I PAR_D

    PAR_I           shift and go to state 44


state 16

    (41) asignacion -> VAR . VARIABLE IGUAL VARIABLE
    (43) asignacion -> VAR . VARIABLE IGUAL aritmetica
    (45) asignacion -> VAR . VARIABLE IGUAL returnfun
    (169) asignacion -> VAR . VARIABLE IGUAL tuple
    (171) asignacion -> VAR . VARIABLE dectipoTupla IGUAL tuple
    (56) asignacionLong -> VAR . VARIABLE IGUAL LONG
    (57) asignacionLong -> VAR . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> VAR . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> VAR . VARIABLE IGUAL INT
    (63) asignacionInt -> VAR . VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> VAR . VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> VAR . VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> VAR . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> VAR . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> VAR . VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> VAR . VARIABLE IGUAL STRING
    (81) asignacionString -> VAR . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> VAR . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> VAR . VARIABLE IGUAL CHAR
    (87) asignacionChar -> VAR . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> VAR . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> VAR . VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> VAR . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> VAR . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> VAR . VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    VARIABLE        shift and go to state 45


state 17

    (42) asignacion -> VAL . VARIABLE IGUAL VARIABLE
    (44) asignacion -> VAL . VARIABLE IGUAL aritmetica
    (46) asignacion -> VAL . VARIABLE IGUAL returnfun
    (170) asignacion -> VAL . VARIABLE IGUAL tuple
    (172) asignacion -> VAL . VARIABLE dectipoTupla IGUAL tuple
    (58) asignacionLong -> VAL . VARIABLE IGUAL LONG
    (59) asignacionLong -> VAL . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> VAL . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionInt -> VAL . VARIABLE IGUAL INT
    (65) asignacionInt -> VAL . VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> VAL . VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionFloat -> VAL . VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> VAL . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> VAL . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionDouble -> VAL . VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionString -> VAL . VARIABLE IGUAL STRING
    (83) asignacionString -> VAL . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> VAL . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionChar -> VAL . VARIABLE IGUAL CHAR
    (89) asignacionChar -> VAL . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> VAL . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionBoolean -> VAL . VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> VAL . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> VAL . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> VAL . VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> VAL . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> VAL . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> VAL . VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> VAL . VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> VAL . VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    VARIABLE        shift and go to state 46


state 18

    (47) asignacion -> asignacionLong .

    DEF             reduce using rule 47 (asignacion -> asignacionLong .)
    VARIABLE        reduce using rule 47 (asignacion -> asignacionLong .)
    PRINTLN         reduce using rule 47 (asignacion -> asignacionLong .)
    PRINT           reduce using rule 47 (asignacion -> asignacionLong .)
    READLINE        reduce using rule 47 (asignacion -> asignacionLong .)
    VAR             reduce using rule 47 (asignacion -> asignacionLong .)
    VAL             reduce using rule 47 (asignacion -> asignacionLong .)
    WHILE           reduce using rule 47 (asignacion -> asignacionLong .)
    FOR             reduce using rule 47 (asignacion -> asignacionLong .)
    IF              reduce using rule 47 (asignacion -> asignacionLong .)
    $end            reduce using rule 47 (asignacion -> asignacionLong .)
    INT             reduce using rule 47 (asignacion -> asignacionLong .)
    LONG            reduce using rule 47 (asignacion -> asignacionLong .)
    FLOAT           reduce using rule 47 (asignacion -> asignacionLong .)
    DOUBLE          reduce using rule 47 (asignacion -> asignacionLong .)
    LLAVE_D         reduce using rule 47 (asignacion -> asignacionLong .)
    RETURN          reduce using rule 47 (asignacion -> asignacionLong .)
    CASE            reduce using rule 47 (asignacion -> asignacionLong .)


state 19

    (48) asignacion -> asignacionInt .

    DEF             reduce using rule 48 (asignacion -> asignacionInt .)
    VARIABLE        reduce using rule 48 (asignacion -> asignacionInt .)
    PRINTLN         reduce using rule 48 (asignacion -> asignacionInt .)
    PRINT           reduce using rule 48 (asignacion -> asignacionInt .)
    READLINE        reduce using rule 48 (asignacion -> asignacionInt .)
    VAR             reduce using rule 48 (asignacion -> asignacionInt .)
    VAL             reduce using rule 48 (asignacion -> asignacionInt .)
    WHILE           reduce using rule 48 (asignacion -> asignacionInt .)
    FOR             reduce using rule 48 (asignacion -> asignacionInt .)
    IF              reduce using rule 48 (asignacion -> asignacionInt .)
    $end            reduce using rule 48 (asignacion -> asignacionInt .)
    INT             reduce using rule 48 (asignacion -> asignacionInt .)
    LONG            reduce using rule 48 (asignacion -> asignacionInt .)
    FLOAT           reduce using rule 48 (asignacion -> asignacionInt .)
    DOUBLE          reduce using rule 48 (asignacion -> asignacionInt .)
    LLAVE_D         reduce using rule 48 (asignacion -> asignacionInt .)
    RETURN          reduce using rule 48 (asignacion -> asignacionInt .)
    CASE            reduce using rule 48 (asignacion -> asignacionInt .)


state 20

    (49) asignacion -> asignacionFloat .

    DEF             reduce using rule 49 (asignacion -> asignacionFloat .)
    VARIABLE        reduce using rule 49 (asignacion -> asignacionFloat .)
    PRINTLN         reduce using rule 49 (asignacion -> asignacionFloat .)
    PRINT           reduce using rule 49 (asignacion -> asignacionFloat .)
    READLINE        reduce using rule 49 (asignacion -> asignacionFloat .)
    VAR             reduce using rule 49 (asignacion -> asignacionFloat .)
    VAL             reduce using rule 49 (asignacion -> asignacionFloat .)
    WHILE           reduce using rule 49 (asignacion -> asignacionFloat .)
    FOR             reduce using rule 49 (asignacion -> asignacionFloat .)
    IF              reduce using rule 49 (asignacion -> asignacionFloat .)
    $end            reduce using rule 49 (asignacion -> asignacionFloat .)
    INT             reduce using rule 49 (asignacion -> asignacionFloat .)
    LONG            reduce using rule 49 (asignacion -> asignacionFloat .)
    FLOAT           reduce using rule 49 (asignacion -> asignacionFloat .)
    DOUBLE          reduce using rule 49 (asignacion -> asignacionFloat .)
    LLAVE_D         reduce using rule 49 (asignacion -> asignacionFloat .)
    RETURN          reduce using rule 49 (asignacion -> asignacionFloat .)
    CASE            reduce using rule 49 (asignacion -> asignacionFloat .)


state 21

    (50) asignacion -> asignacionDouble .

    DEF             reduce using rule 50 (asignacion -> asignacionDouble .)
    VARIABLE        reduce using rule 50 (asignacion -> asignacionDouble .)
    PRINTLN         reduce using rule 50 (asignacion -> asignacionDouble .)
    PRINT           reduce using rule 50 (asignacion -> asignacionDouble .)
    READLINE        reduce using rule 50 (asignacion -> asignacionDouble .)
    VAR             reduce using rule 50 (asignacion -> asignacionDouble .)
    VAL             reduce using rule 50 (asignacion -> asignacionDouble .)
    WHILE           reduce using rule 50 (asignacion -> asignacionDouble .)
    FOR             reduce using rule 50 (asignacion -> asignacionDouble .)
    IF              reduce using rule 50 (asignacion -> asignacionDouble .)
    $end            reduce using rule 50 (asignacion -> asignacionDouble .)
    INT             reduce using rule 50 (asignacion -> asignacionDouble .)
    LONG            reduce using rule 50 (asignacion -> asignacionDouble .)
    FLOAT           reduce using rule 50 (asignacion -> asignacionDouble .)
    DOUBLE          reduce using rule 50 (asignacion -> asignacionDouble .)
    LLAVE_D         reduce using rule 50 (asignacion -> asignacionDouble .)
    RETURN          reduce using rule 50 (asignacion -> asignacionDouble .)
    CASE            reduce using rule 50 (asignacion -> asignacionDouble .)


state 22

    (51) asignacion -> asignacionString .

    DEF             reduce using rule 51 (asignacion -> asignacionString .)
    VARIABLE        reduce using rule 51 (asignacion -> asignacionString .)
    PRINTLN         reduce using rule 51 (asignacion -> asignacionString .)
    PRINT           reduce using rule 51 (asignacion -> asignacionString .)
    READLINE        reduce using rule 51 (asignacion -> asignacionString .)
    VAR             reduce using rule 51 (asignacion -> asignacionString .)
    VAL             reduce using rule 51 (asignacion -> asignacionString .)
    WHILE           reduce using rule 51 (asignacion -> asignacionString .)
    FOR             reduce using rule 51 (asignacion -> asignacionString .)
    IF              reduce using rule 51 (asignacion -> asignacionString .)
    $end            reduce using rule 51 (asignacion -> asignacionString .)
    INT             reduce using rule 51 (asignacion -> asignacionString .)
    LONG            reduce using rule 51 (asignacion -> asignacionString .)
    FLOAT           reduce using rule 51 (asignacion -> asignacionString .)
    DOUBLE          reduce using rule 51 (asignacion -> asignacionString .)
    LLAVE_D         reduce using rule 51 (asignacion -> asignacionString .)
    RETURN          reduce using rule 51 (asignacion -> asignacionString .)
    CASE            reduce using rule 51 (asignacion -> asignacionString .)


state 23

    (52) asignacion -> asignacionChar .

    DEF             reduce using rule 52 (asignacion -> asignacionChar .)
    VARIABLE        reduce using rule 52 (asignacion -> asignacionChar .)
    PRINTLN         reduce using rule 52 (asignacion -> asignacionChar .)
    PRINT           reduce using rule 52 (asignacion -> asignacionChar .)
    READLINE        reduce using rule 52 (asignacion -> asignacionChar .)
    VAR             reduce using rule 52 (asignacion -> asignacionChar .)
    VAL             reduce using rule 52 (asignacion -> asignacionChar .)
    WHILE           reduce using rule 52 (asignacion -> asignacionChar .)
    FOR             reduce using rule 52 (asignacion -> asignacionChar .)
    IF              reduce using rule 52 (asignacion -> asignacionChar .)
    $end            reduce using rule 52 (asignacion -> asignacionChar .)
    INT             reduce using rule 52 (asignacion -> asignacionChar .)
    LONG            reduce using rule 52 (asignacion -> asignacionChar .)
    FLOAT           reduce using rule 52 (asignacion -> asignacionChar .)
    DOUBLE          reduce using rule 52 (asignacion -> asignacionChar .)
    LLAVE_D         reduce using rule 52 (asignacion -> asignacionChar .)
    RETURN          reduce using rule 52 (asignacion -> asignacionChar .)
    CASE            reduce using rule 52 (asignacion -> asignacionChar .)


state 24

    (53) asignacion -> asignacionBoolean .

    DEF             reduce using rule 53 (asignacion -> asignacionBoolean .)
    VARIABLE        reduce using rule 53 (asignacion -> asignacionBoolean .)
    PRINTLN         reduce using rule 53 (asignacion -> asignacionBoolean .)
    PRINT           reduce using rule 53 (asignacion -> asignacionBoolean .)
    READLINE        reduce using rule 53 (asignacion -> asignacionBoolean .)
    VAR             reduce using rule 53 (asignacion -> asignacionBoolean .)
    VAL             reduce using rule 53 (asignacion -> asignacionBoolean .)
    WHILE           reduce using rule 53 (asignacion -> asignacionBoolean .)
    FOR             reduce using rule 53 (asignacion -> asignacionBoolean .)
    IF              reduce using rule 53 (asignacion -> asignacionBoolean .)
    $end            reduce using rule 53 (asignacion -> asignacionBoolean .)
    INT             reduce using rule 53 (asignacion -> asignacionBoolean .)
    LONG            reduce using rule 53 (asignacion -> asignacionBoolean .)
    FLOAT           reduce using rule 53 (asignacion -> asignacionBoolean .)
    DOUBLE          reduce using rule 53 (asignacion -> asignacionBoolean .)
    LLAVE_D         reduce using rule 53 (asignacion -> asignacionBoolean .)
    RETURN          reduce using rule 53 (asignacion -> asignacionBoolean .)
    CASE            reduce using rule 53 (asignacion -> asignacionBoolean .)


state 25

    (54) asignacion -> array .

    DEF             reduce using rule 54 (asignacion -> array .)
    VARIABLE        reduce using rule 54 (asignacion -> array .)
    PRINTLN         reduce using rule 54 (asignacion -> array .)
    PRINT           reduce using rule 54 (asignacion -> array .)
    READLINE        reduce using rule 54 (asignacion -> array .)
    VAR             reduce using rule 54 (asignacion -> array .)
    VAL             reduce using rule 54 (asignacion -> array .)
    WHILE           reduce using rule 54 (asignacion -> array .)
    FOR             reduce using rule 54 (asignacion -> array .)
    IF              reduce using rule 54 (asignacion -> array .)
    $end            reduce using rule 54 (asignacion -> array .)
    INT             reduce using rule 54 (asignacion -> array .)
    LONG            reduce using rule 54 (asignacion -> array .)
    FLOAT           reduce using rule 54 (asignacion -> array .)
    DOUBLE          reduce using rule 54 (asignacion -> array .)
    LLAVE_D         reduce using rule 54 (asignacion -> array .)
    RETURN          reduce using rule 54 (asignacion -> array .)
    CASE            reduce using rule 54 (asignacion -> array .)


state 26

    (55) asignacion -> list .

    DEF             reduce using rule 55 (asignacion -> list .)
    VARIABLE        reduce using rule 55 (asignacion -> list .)
    PRINTLN         reduce using rule 55 (asignacion -> list .)
    PRINT           reduce using rule 55 (asignacion -> list .)
    READLINE        reduce using rule 55 (asignacion -> list .)
    VAR             reduce using rule 55 (asignacion -> list .)
    VAL             reduce using rule 55 (asignacion -> list .)
    WHILE           reduce using rule 55 (asignacion -> list .)
    FOR             reduce using rule 55 (asignacion -> list .)
    IF              reduce using rule 55 (asignacion -> list .)
    $end            reduce using rule 55 (asignacion -> list .)
    INT             reduce using rule 55 (asignacion -> list .)
    LONG            reduce using rule 55 (asignacion -> list .)
    FLOAT           reduce using rule 55 (asignacion -> list .)
    DOUBLE          reduce using rule 55 (asignacion -> list .)
    LLAVE_D         reduce using rule 55 (asignacion -> list .)
    RETURN          reduce using rule 55 (asignacion -> list .)
    CASE            reduce using rule 55 (asignacion -> list .)


state 27

    (173) while -> WHILE . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 47


state 28

    (174) for -> FOR . PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> FOR . PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> FOR . PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> FOR . PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> FOR . PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> FOR . PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 48


state 29

    (219) if -> IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 49


state 30

    (10) cuerpo -> funcion cuerpo .

    $end            reduce using rule 10 (cuerpo -> funcion cuerpo .)


state 31

    (11) cuerpo -> asignacion cuerpo .

    $end            reduce using rule 11 (cuerpo -> asignacion cuerpo .)


state 32

    (12) cuerpo -> while cuerpo .

    $end            reduce using rule 12 (cuerpo -> while cuerpo .)


state 33

    (13) cuerpo -> for cuerpo .

    $end            reduce using rule 13 (cuerpo -> for cuerpo .)


state 34

    (15) cuerpo -> match cuerpo .

    $end            reduce using rule 15 (cuerpo -> match cuerpo .)


state 35

    (14) cuerpo -> if cuerpo .

    $end            reduce using rule 14 (cuerpo -> if cuerpo .)


state 36

    (220) if -> if elseif .
    (225) else -> elseif . else
    (224) else -> . ELSE LLAVE_I contenido LLAVE_D
    (225) else -> . elseif else
    (222) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (223) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

  ! shift/reduce conflict for ELSE resolved as shift
    DEF             reduce using rule 220 (if -> if elseif .)
    VARIABLE        reduce using rule 220 (if -> if elseif .)
    PRINTLN         reduce using rule 220 (if -> if elseif .)
    PRINT           reduce using rule 220 (if -> if elseif .)
    READLINE        reduce using rule 220 (if -> if elseif .)
    VAR             reduce using rule 220 (if -> if elseif .)
    VAL             reduce using rule 220 (if -> if elseif .)
    WHILE           reduce using rule 220 (if -> if elseif .)
    FOR             reduce using rule 220 (if -> if elseif .)
    IF              reduce using rule 220 (if -> if elseif .)
    $end            reduce using rule 220 (if -> if elseif .)
    INT             reduce using rule 220 (if -> if elseif .)
    LONG            reduce using rule 220 (if -> if elseif .)
    FLOAT           reduce using rule 220 (if -> if elseif .)
    DOUBLE          reduce using rule 220 (if -> if elseif .)
    LLAVE_D         reduce using rule 220 (if -> if elseif .)
    RETURN          reduce using rule 220 (if -> if elseif .)
    ELSE            shift and go to state 52

  ! ELSE            [ reduce using rule 220 (if -> if elseif .) ]

    elseif                         shift and go to state 50
    else                           shift and go to state 51

state 37

    (221) if -> if else .

    ELSE            reduce using rule 221 (if -> if else .)
    DEF             reduce using rule 221 (if -> if else .)
    VARIABLE        reduce using rule 221 (if -> if else .)
    PRINTLN         reduce using rule 221 (if -> if else .)
    PRINT           reduce using rule 221 (if -> if else .)
    READLINE        reduce using rule 221 (if -> if else .)
    VAR             reduce using rule 221 (if -> if else .)
    VAL             reduce using rule 221 (if -> if else .)
    WHILE           reduce using rule 221 (if -> if else .)
    FOR             reduce using rule 221 (if -> if else .)
    IF              reduce using rule 221 (if -> if else .)
    $end            reduce using rule 221 (if -> if else .)
    INT             reduce using rule 221 (if -> if else .)
    LONG            reduce using rule 221 (if -> if else .)
    FLOAT           reduce using rule 221 (if -> if else .)
    DOUBLE          reduce using rule 221 (if -> if else .)
    LLAVE_D         reduce using rule 221 (if -> if else .)
    RETURN          reduce using rule 221 (if -> if else .)


state 38

    (222) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (223) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (224) else -> ELSE . LLAVE_I contenido LLAVE_D

    IF              shift and go to state 53
    LLAVE_I         shift and go to state 54


state 39

    (120) funcion -> DEF VARIABLE . parametro IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> DEF VARIABLE . parametro LLAVE_I contenido LLAVE_D
    (128) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (124) parametro -> . parametros
    (125) parametro -> . PAR_I PAR_D
    (126) parametros -> . PAR_I declaracion PAR_D
    (127) parametros -> . PAR_I declaracion PAR_D parametros

    PAR_I           shift and go to state 57

    parametro                      shift and go to state 55
    parametros                     shift and go to state 56

state 40

    (145) funcall -> VARIABLE PAR_I . valores PAR_D
    (146) funcall -> VARIABLE PAR_I . PAR_D
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (109) valor -> . STRING
    (110) valor -> . CHAR
    (111) valor -> . VARIABLE
    (112) valor -> . numeros
    (113) valor -> . booleanos
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    PAR_D           shift and go to state 60
    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valores                        shift and go to state 59
    valor                          shift and go to state 61
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 41

    (180) match -> VARIABLE MATCH . LLAVE_I cases LLAVE_D

    LLAVE_I         shift and go to state 72


state 42

    (140) impresion -> PRINTLN PAR_I . valorI PAR_D
    (142) valorI -> . valor MAS valorI
    (143) valorI -> . valor
    (109) valor -> . STRING
    (110) valor -> . CHAR
    (111) valor -> . VARIABLE
    (112) valor -> . numeros
    (113) valor -> . booleanos
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valorI                         shift and go to state 73
    valor                          shift and go to state 74
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 43

    (141) impresion -> PRINT PAR_I . valorI PAR_D
    (142) valorI -> . valor MAS valorI
    (143) valorI -> . valor
    (109) valor -> . STRING
    (110) valor -> . CHAR
    (111) valor -> . VARIABLE
    (112) valor -> . numeros
    (113) valor -> . booleanos
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valorI                         shift and go to state 75
    valor                          shift and go to state 74
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 44

    (144) entrada -> READLINE PAR_I . PAR_D

    PAR_D           shift and go to state 76


state 45

    (41) asignacion -> VAR VARIABLE . IGUAL VARIABLE
    (43) asignacion -> VAR VARIABLE . IGUAL aritmetica
    (45) asignacion -> VAR VARIABLE . IGUAL returnfun
    (169) asignacion -> VAR VARIABLE . IGUAL tuple
    (171) asignacion -> VAR VARIABLE . dectipoTupla IGUAL tuple
    (56) asignacionLong -> VAR VARIABLE . IGUAL LONG
    (57) asignacionLong -> VAR VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> VAR VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> VAR VARIABLE . IGUAL INT
    (63) asignacionInt -> VAR VARIABLE . DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> VAR VARIABLE . DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> VAR VARIABLE . IGUAL FLOAT
    (69) asignacionFloat -> VAR VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> VAR VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> VAR VARIABLE . IGUAL DOUBLE
    (75) asignacionDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> VAR VARIABLE . IGUAL STRING
    (81) asignacionString -> VAR VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> VAR VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> VAR VARIABLE . IGUAL CHAR
    (87) asignacionChar -> VAR VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> VAR VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> VAR VARIABLE . IGUAL booleanos
    (93) asignacionBoolean -> VAR VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> VAR VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> VAR VARIABLE . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (135) dectipoTupla -> . DOBLE_PUNTO PAR_I tipos PAR_D

    IGUAL           shift and go to state 77
    DOBLE_PUNTO     shift and go to state 79

    dectipoTupla                   shift and go to state 78

state 46

    (42) asignacion -> VAL VARIABLE . IGUAL VARIABLE
    (44) asignacion -> VAL VARIABLE . IGUAL aritmetica
    (46) asignacion -> VAL VARIABLE . IGUAL returnfun
    (170) asignacion -> VAL VARIABLE . IGUAL tuple
    (172) asignacion -> VAL VARIABLE . dectipoTupla IGUAL tuple
    (58) asignacionLong -> VAL VARIABLE . IGUAL LONG
    (59) asignacionLong -> VAL VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> VAL VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionInt -> VAL VARIABLE . IGUAL INT
    (65) asignacionInt -> VAL VARIABLE . DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> VAL VARIABLE . DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionFloat -> VAL VARIABLE . IGUAL FLOAT
    (71) asignacionFloat -> VAL VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> VAL VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionDouble -> VAL VARIABLE . IGUAL DOUBLE
    (77) asignacionDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionString -> VAL VARIABLE . IGUAL STRING
    (83) asignacionString -> VAL VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> VAL VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionChar -> VAL VARIABLE . IGUAL CHAR
    (89) asignacionChar -> VAL VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> VAL VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionBoolean -> VAL VARIABLE . IGUAL booleanos
    (95) asignacionBoolean -> VAL VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> VAL VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> VAL VARIABLE . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> VAL VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> VAL VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> VAL VARIABLE . IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> VAL VARIABLE . DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> VAL VARIABLE . DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (135) dectipoTupla -> . DOBLE_PUNTO PAR_I tipos PAR_D

    IGUAL           shift and go to state 80
    DOBLE_PUNTO     shift and go to state 82

    dectipoTupla                   shift and go to state 81

state 47

    (173) while -> WHILE PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (226) condicional -> . valorC logicos condicional
    (227) condicional -> . valorC
    (228) valorC -> . VARIABLE
    (229) valorC -> . booleanos
    (230) valorC -> . relacional
    (231) valorC -> . NOT VARIABLE
    (232) valorC -> . NOT booleanos
    (233) valorC -> . NOT relacional
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE
    (237) relacional -> . numeros comparacion numeros
    (238) relacional -> . aritmetica comparacion aritmetica
    (239) relacional -> . aritmetica comparacion numeros
    (240) relacional -> . numeros comparacion aritmetica
    (241) relacional -> . booleanos comparacion booleanos
    (242) relacional -> . STRING comparacion STRING
    (243) relacional -> . CHAR comparacion CHAR
    (244) relacional -> . VARIABLE comparacion numeros
    (245) relacional -> . numeros comparacion VARIABLE
    (246) relacional -> . VARIABLE comparacion booleanos
    (247) relacional -> . booleanos comparacion VARIABLE
    (248) relacional -> . VARIABLE comparacion STRING
    (249) relacional -> . STRING comparacion VARIABLE
    (250) relacional -> . VARIABLE comparacion CHAR
    (251) relacional -> . CHAR comparacion VARIABLE
    (252) relacional -> . VARIABLE comparacion VARIABLE
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 85
    NOT             shift and go to state 88
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71
    STRING          shift and go to state 91
    CHAR            shift and go to state 92
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    condicional                    shift and go to state 83
    valorC                         shift and go to state 84
    booleanos                      shift and go to state 86
    relacional                     shift and go to state 87
    numeros                        shift and go to state 89
    aritmetica                     shift and go to state 90

state 48

    (174) for -> FOR PAR_I . VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> FOR PAR_I . VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> FOR PAR_I . VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> FOR PAR_I . VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> FOR PAR_I . VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> FOR PAR_I . VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VAR             shift and go to state 93
    VARIABLE        shift and go to state 94


state 49

    (219) if -> IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (226) condicional -> . valorC logicos condicional
    (227) condicional -> . valorC
    (228) valorC -> . VARIABLE
    (229) valorC -> . booleanos
    (230) valorC -> . relacional
    (231) valorC -> . NOT VARIABLE
    (232) valorC -> . NOT booleanos
    (233) valorC -> . NOT relacional
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE
    (237) relacional -> . numeros comparacion numeros
    (238) relacional -> . aritmetica comparacion aritmetica
    (239) relacional -> . aritmetica comparacion numeros
    (240) relacional -> . numeros comparacion aritmetica
    (241) relacional -> . booleanos comparacion booleanos
    (242) relacional -> . STRING comparacion STRING
    (243) relacional -> . CHAR comparacion CHAR
    (244) relacional -> . VARIABLE comparacion numeros
    (245) relacional -> . numeros comparacion VARIABLE
    (246) relacional -> . VARIABLE comparacion booleanos
    (247) relacional -> . booleanos comparacion VARIABLE
    (248) relacional -> . VARIABLE comparacion STRING
    (249) relacional -> . STRING comparacion VARIABLE
    (250) relacional -> . VARIABLE comparacion CHAR
    (251) relacional -> . CHAR comparacion VARIABLE
    (252) relacional -> . VARIABLE comparacion VARIABLE
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 85
    NOT             shift and go to state 88
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71
    STRING          shift and go to state 91
    CHAR            shift and go to state 92
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    condicional                    shift and go to state 95
    valorC                         shift and go to state 84
    booleanos                      shift and go to state 86
    relacional                     shift and go to state 87
    numeros                        shift and go to state 89
    aritmetica                     shift and go to state 90

state 50

    (225) else -> elseif . else
    (224) else -> . ELSE LLAVE_I contenido LLAVE_D
    (225) else -> . elseif else
    (222) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (223) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    ELSE            shift and go to state 52

    elseif                         shift and go to state 50
    else                           shift and go to state 51

state 51

    (225) else -> elseif else .

    ELSE            reduce using rule 225 (else -> elseif else .)
    DEF             reduce using rule 225 (else -> elseif else .)
    VARIABLE        reduce using rule 225 (else -> elseif else .)
    PRINTLN         reduce using rule 225 (else -> elseif else .)
    PRINT           reduce using rule 225 (else -> elseif else .)
    READLINE        reduce using rule 225 (else -> elseif else .)
    VAR             reduce using rule 225 (else -> elseif else .)
    VAL             reduce using rule 225 (else -> elseif else .)
    WHILE           reduce using rule 225 (else -> elseif else .)
    FOR             reduce using rule 225 (else -> elseif else .)
    IF              reduce using rule 225 (else -> elseif else .)
    $end            reduce using rule 225 (else -> elseif else .)
    INT             reduce using rule 225 (else -> elseif else .)
    LONG            reduce using rule 225 (else -> elseif else .)
    FLOAT           reduce using rule 225 (else -> elseif else .)
    DOUBLE          reduce using rule 225 (else -> elseif else .)
    LLAVE_D         reduce using rule 225 (else -> elseif else .)
    RETURN          reduce using rule 225 (else -> elseif else .)


state 52

    (224) else -> ELSE . LLAVE_I contenido LLAVE_D
    (222) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (223) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    LLAVE_I         shift and go to state 54
    IF              shift and go to state 53


state 53

    (222) elseif -> ELSE IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (223) elseif -> ELSE IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    PAR_I           shift and go to state 96


state 54

    (224) else -> ELSE LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 97
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 55

    (120) funcion -> DEF VARIABLE parametro . IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> DEF VARIABLE parametro . LLAVE_I contenido LLAVE_D
    (128) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (134) dectipo -> . DOBLE_PUNTO tipo
    (135) dectipoTupla -> . DOBLE_PUNTO PAR_I tipos PAR_D

    IGUAL           shift and go to state 110
    LLAVE_I         shift and go to state 111
    DOBLE_PUNTO     shift and go to state 114

    dectipo                        shift and go to state 112
    dectipoTupla                   shift and go to state 113

state 56

    (124) parametro -> parametros .

    IGUAL           reduce using rule 124 (parametro -> parametros .)
    LLAVE_I         reduce using rule 124 (parametro -> parametros .)
    DOBLE_PUNTO     reduce using rule 124 (parametro -> parametros .)


state 57

    (125) parametro -> PAR_I . PAR_D
    (126) parametros -> PAR_I . declaracion PAR_D
    (127) parametros -> PAR_I . declaracion PAR_D parametros
    (122) declaracion -> . VARIABLE DOBLE_PUNTO tipo
    (123) declaracion -> . VARIABLE DOBLE_PUNTO tipo IGUAL valor

    PAR_D           shift and go to state 115
    VARIABLE        shift and go to state 117

    declaracion                    shift and go to state 116

state 58

    (111) valor -> VARIABLE .

    COMA            reduce using rule 111 (valor -> VARIABLE .)
    PAR_D           reduce using rule 111 (valor -> VARIABLE .)
    MAS             reduce using rule 111 (valor -> VARIABLE .)
    VAR             reduce using rule 111 (valor -> VARIABLE .)
    VAL             reduce using rule 111 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 111 (valor -> VARIABLE .)
    PRINTLN         reduce using rule 111 (valor -> VARIABLE .)
    PRINT           reduce using rule 111 (valor -> VARIABLE .)
    READLINE        reduce using rule 111 (valor -> VARIABLE .)
    WHILE           reduce using rule 111 (valor -> VARIABLE .)
    FOR             reduce using rule 111 (valor -> VARIABLE .)
    IF              reduce using rule 111 (valor -> VARIABLE .)
    INT             reduce using rule 111 (valor -> VARIABLE .)
    LONG            reduce using rule 111 (valor -> VARIABLE .)
    FLOAT           reduce using rule 111 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 111 (valor -> VARIABLE .)
    LLAVE_D         reduce using rule 111 (valor -> VARIABLE .)
    RETURN          reduce using rule 111 (valor -> VARIABLE .)
    CASE            reduce using rule 111 (valor -> VARIABLE .)


state 59

    (145) funcall -> VARIABLE PAR_I valores . PAR_D

    PAR_D           shift and go to state 118


state 60

    (146) funcall -> VARIABLE PAR_I PAR_D .

    $end            reduce using rule 146 (funcall -> VARIABLE PAR_I PAR_D .)
    VAR             reduce using rule 146 (funcall -> VARIABLE PAR_I PAR_D .)
    VAL             reduce using rule 146 (funcall -> VARIABLE PAR_I PAR_D .)
    VARIABLE        reduce using rule 146 (funcall -> VARIABLE PAR_I PAR_D .)
    PRINTLN         reduce using rule 146 (funcall -> VARIABLE PAR_I PAR_D .)
    PRINT           reduce using rule 146 (funcall -> VARIABLE PAR_I PAR_D .)
    READLINE        reduce using rule 146 (funcall -> VARIABLE PAR_I PAR_D .)
    WHILE           reduce using rule 146 (funcall -> VARIABLE PAR_I PAR_D .)
    FOR             reduce using rule 146 (funcall -> VARIABLE PAR_I PAR_D .)
    IF              reduce using rule 146 (funcall -> VARIABLE PAR_I PAR_D .)
    INT             reduce using rule 146 (funcall -> VARIABLE PAR_I PAR_D .)
    LONG            reduce using rule 146 (funcall -> VARIABLE PAR_I PAR_D .)
    FLOAT           reduce using rule 146 (funcall -> VARIABLE PAR_I PAR_D .)
    DOUBLE          reduce using rule 146 (funcall -> VARIABLE PAR_I PAR_D .)
    LLAVE_D         reduce using rule 146 (funcall -> VARIABLE PAR_I PAR_D .)
    PUNTO           reduce using rule 146 (funcall -> VARIABLE PAR_I PAR_D .)
    DEF             reduce using rule 146 (funcall -> VARIABLE PAR_I PAR_D .)
    RETURN          reduce using rule 146 (funcall -> VARIABLE PAR_I PAR_D .)
    CASE            reduce using rule 146 (funcall -> VARIABLE PAR_I PAR_D .)


state 61

    (166) valores -> valor .
    (167) valores -> valor . COMA valores

    PAR_D           reduce using rule 166 (valores -> valor .)
    COMA            shift and go to state 119


state 62

    (109) valor -> STRING .

    COMA            reduce using rule 109 (valor -> STRING .)
    PAR_D           reduce using rule 109 (valor -> STRING .)
    MAS             reduce using rule 109 (valor -> STRING .)
    VAR             reduce using rule 109 (valor -> STRING .)
    VAL             reduce using rule 109 (valor -> STRING .)
    VARIABLE        reduce using rule 109 (valor -> STRING .)
    PRINTLN         reduce using rule 109 (valor -> STRING .)
    PRINT           reduce using rule 109 (valor -> STRING .)
    READLINE        reduce using rule 109 (valor -> STRING .)
    WHILE           reduce using rule 109 (valor -> STRING .)
    FOR             reduce using rule 109 (valor -> STRING .)
    IF              reduce using rule 109 (valor -> STRING .)
    INT             reduce using rule 109 (valor -> STRING .)
    LONG            reduce using rule 109 (valor -> STRING .)
    FLOAT           reduce using rule 109 (valor -> STRING .)
    DOUBLE          reduce using rule 109 (valor -> STRING .)
    LLAVE_D         reduce using rule 109 (valor -> STRING .)
    RETURN          reduce using rule 109 (valor -> STRING .)
    CASE            reduce using rule 109 (valor -> STRING .)


state 63

    (110) valor -> CHAR .

    COMA            reduce using rule 110 (valor -> CHAR .)
    PAR_D           reduce using rule 110 (valor -> CHAR .)
    MAS             reduce using rule 110 (valor -> CHAR .)
    VAR             reduce using rule 110 (valor -> CHAR .)
    VAL             reduce using rule 110 (valor -> CHAR .)
    VARIABLE        reduce using rule 110 (valor -> CHAR .)
    PRINTLN         reduce using rule 110 (valor -> CHAR .)
    PRINT           reduce using rule 110 (valor -> CHAR .)
    READLINE        reduce using rule 110 (valor -> CHAR .)
    WHILE           reduce using rule 110 (valor -> CHAR .)
    FOR             reduce using rule 110 (valor -> CHAR .)
    IF              reduce using rule 110 (valor -> CHAR .)
    INT             reduce using rule 110 (valor -> CHAR .)
    LONG            reduce using rule 110 (valor -> CHAR .)
    FLOAT           reduce using rule 110 (valor -> CHAR .)
    DOUBLE          reduce using rule 110 (valor -> CHAR .)
    LLAVE_D         reduce using rule 110 (valor -> CHAR .)
    RETURN          reduce using rule 110 (valor -> CHAR .)
    CASE            reduce using rule 110 (valor -> CHAR .)


state 64

    (112) valor -> numeros .

    COMA            reduce using rule 112 (valor -> numeros .)
    PAR_D           reduce using rule 112 (valor -> numeros .)
    MAS             reduce using rule 112 (valor -> numeros .)
    VAR             reduce using rule 112 (valor -> numeros .)
    VAL             reduce using rule 112 (valor -> numeros .)
    VARIABLE        reduce using rule 112 (valor -> numeros .)
    PRINTLN         reduce using rule 112 (valor -> numeros .)
    PRINT           reduce using rule 112 (valor -> numeros .)
    READLINE        reduce using rule 112 (valor -> numeros .)
    WHILE           reduce using rule 112 (valor -> numeros .)
    FOR             reduce using rule 112 (valor -> numeros .)
    IF              reduce using rule 112 (valor -> numeros .)
    INT             reduce using rule 112 (valor -> numeros .)
    LONG            reduce using rule 112 (valor -> numeros .)
    FLOAT           reduce using rule 112 (valor -> numeros .)
    DOUBLE          reduce using rule 112 (valor -> numeros .)
    LLAVE_D         reduce using rule 112 (valor -> numeros .)
    RETURN          reduce using rule 112 (valor -> numeros .)
    CASE            reduce using rule 112 (valor -> numeros .)


state 65

    (113) valor -> booleanos .

    COMA            reduce using rule 113 (valor -> booleanos .)
    PAR_D           reduce using rule 113 (valor -> booleanos .)
    MAS             reduce using rule 113 (valor -> booleanos .)
    VAR             reduce using rule 113 (valor -> booleanos .)
    VAL             reduce using rule 113 (valor -> booleanos .)
    VARIABLE        reduce using rule 113 (valor -> booleanos .)
    PRINTLN         reduce using rule 113 (valor -> booleanos .)
    PRINT           reduce using rule 113 (valor -> booleanos .)
    READLINE        reduce using rule 113 (valor -> booleanos .)
    WHILE           reduce using rule 113 (valor -> booleanos .)
    FOR             reduce using rule 113 (valor -> booleanos .)
    IF              reduce using rule 113 (valor -> booleanos .)
    INT             reduce using rule 113 (valor -> booleanos .)
    LONG            reduce using rule 113 (valor -> booleanos .)
    FLOAT           reduce using rule 113 (valor -> booleanos .)
    DOUBLE          reduce using rule 113 (valor -> booleanos .)
    LLAVE_D         reduce using rule 113 (valor -> booleanos .)
    RETURN          reduce using rule 113 (valor -> booleanos .)
    CASE            reduce using rule 113 (valor -> booleanos .)


state 66

    (116) numeros -> INT .

    COMA            reduce using rule 116 (numeros -> INT .)
    PAR_D           reduce using rule 116 (numeros -> INT .)
    MAS             reduce using rule 116 (numeros -> INT .)
    IGUAL_COMPARACION reduce using rule 116 (numeros -> INT .)
    DIFERENTE       reduce using rule 116 (numeros -> INT .)
    MAYOR           reduce using rule 116 (numeros -> INT .)
    MENOR           reduce using rule 116 (numeros -> INT .)
    MENOS           reduce using rule 116 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 116 (numeros -> INT .)
    DIVISION        reduce using rule 116 (numeros -> INT .)
    MOD             reduce using rule 116 (numeros -> INT .)
    AND             reduce using rule 116 (numeros -> INT .)
    OR              reduce using rule 116 (numeros -> INT .)
    NOT             reduce using rule 116 (numeros -> INT .)
    VAR             reduce using rule 116 (numeros -> INT .)
    VAL             reduce using rule 116 (numeros -> INT .)
    VARIABLE        reduce using rule 116 (numeros -> INT .)
    PRINTLN         reduce using rule 116 (numeros -> INT .)
    PRINT           reduce using rule 116 (numeros -> INT .)
    READLINE        reduce using rule 116 (numeros -> INT .)
    WHILE           reduce using rule 116 (numeros -> INT .)
    FOR             reduce using rule 116 (numeros -> INT .)
    IF              reduce using rule 116 (numeros -> INT .)
    INT             reduce using rule 116 (numeros -> INT .)
    LONG            reduce using rule 116 (numeros -> INT .)
    FLOAT           reduce using rule 116 (numeros -> INT .)
    DOUBLE          reduce using rule 116 (numeros -> INT .)
    LLAVE_D         reduce using rule 116 (numeros -> INT .)
    DEF             reduce using rule 116 (numeros -> INT .)
    $end            reduce using rule 116 (numeros -> INT .)
    RETURN          reduce using rule 116 (numeros -> INT .)
    CASE            reduce using rule 116 (numeros -> INT .)


state 67

    (117) numeros -> LONG .

    COMA            reduce using rule 117 (numeros -> LONG .)
    PAR_D           reduce using rule 117 (numeros -> LONG .)
    MAS             reduce using rule 117 (numeros -> LONG .)
    IGUAL_COMPARACION reduce using rule 117 (numeros -> LONG .)
    DIFERENTE       reduce using rule 117 (numeros -> LONG .)
    MAYOR           reduce using rule 117 (numeros -> LONG .)
    MENOR           reduce using rule 117 (numeros -> LONG .)
    MENOS           reduce using rule 117 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 117 (numeros -> LONG .)
    DIVISION        reduce using rule 117 (numeros -> LONG .)
    MOD             reduce using rule 117 (numeros -> LONG .)
    AND             reduce using rule 117 (numeros -> LONG .)
    OR              reduce using rule 117 (numeros -> LONG .)
    NOT             reduce using rule 117 (numeros -> LONG .)
    VAR             reduce using rule 117 (numeros -> LONG .)
    VAL             reduce using rule 117 (numeros -> LONG .)
    VARIABLE        reduce using rule 117 (numeros -> LONG .)
    PRINTLN         reduce using rule 117 (numeros -> LONG .)
    PRINT           reduce using rule 117 (numeros -> LONG .)
    READLINE        reduce using rule 117 (numeros -> LONG .)
    WHILE           reduce using rule 117 (numeros -> LONG .)
    FOR             reduce using rule 117 (numeros -> LONG .)
    IF              reduce using rule 117 (numeros -> LONG .)
    INT             reduce using rule 117 (numeros -> LONG .)
    LONG            reduce using rule 117 (numeros -> LONG .)
    FLOAT           reduce using rule 117 (numeros -> LONG .)
    DOUBLE          reduce using rule 117 (numeros -> LONG .)
    LLAVE_D         reduce using rule 117 (numeros -> LONG .)
    DEF             reduce using rule 117 (numeros -> LONG .)
    $end            reduce using rule 117 (numeros -> LONG .)
    RETURN          reduce using rule 117 (numeros -> LONG .)
    CASE            reduce using rule 117 (numeros -> LONG .)


state 68

    (118) numeros -> FLOAT .

    COMA            reduce using rule 118 (numeros -> FLOAT .)
    PAR_D           reduce using rule 118 (numeros -> FLOAT .)
    MAS             reduce using rule 118 (numeros -> FLOAT .)
    IGUAL_COMPARACION reduce using rule 118 (numeros -> FLOAT .)
    DIFERENTE       reduce using rule 118 (numeros -> FLOAT .)
    MAYOR           reduce using rule 118 (numeros -> FLOAT .)
    MENOR           reduce using rule 118 (numeros -> FLOAT .)
    MENOS           reduce using rule 118 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 118 (numeros -> FLOAT .)
    DIVISION        reduce using rule 118 (numeros -> FLOAT .)
    MOD             reduce using rule 118 (numeros -> FLOAT .)
    AND             reduce using rule 118 (numeros -> FLOAT .)
    OR              reduce using rule 118 (numeros -> FLOAT .)
    NOT             reduce using rule 118 (numeros -> FLOAT .)
    VAR             reduce using rule 118 (numeros -> FLOAT .)
    VAL             reduce using rule 118 (numeros -> FLOAT .)
    VARIABLE        reduce using rule 118 (numeros -> FLOAT .)
    PRINTLN         reduce using rule 118 (numeros -> FLOAT .)
    PRINT           reduce using rule 118 (numeros -> FLOAT .)
    READLINE        reduce using rule 118 (numeros -> FLOAT .)
    WHILE           reduce using rule 118 (numeros -> FLOAT .)
    FOR             reduce using rule 118 (numeros -> FLOAT .)
    IF              reduce using rule 118 (numeros -> FLOAT .)
    INT             reduce using rule 118 (numeros -> FLOAT .)
    LONG            reduce using rule 118 (numeros -> FLOAT .)
    FLOAT           reduce using rule 118 (numeros -> FLOAT .)
    DOUBLE          reduce using rule 118 (numeros -> FLOAT .)
    LLAVE_D         reduce using rule 118 (numeros -> FLOAT .)
    DEF             reduce using rule 118 (numeros -> FLOAT .)
    $end            reduce using rule 118 (numeros -> FLOAT .)
    RETURN          reduce using rule 118 (numeros -> FLOAT .)
    CASE            reduce using rule 118 (numeros -> FLOAT .)


state 69

    (119) numeros -> DOUBLE .

    COMA            reduce using rule 119 (numeros -> DOUBLE .)
    PAR_D           reduce using rule 119 (numeros -> DOUBLE .)
    MAS             reduce using rule 119 (numeros -> DOUBLE .)
    IGUAL_COMPARACION reduce using rule 119 (numeros -> DOUBLE .)
    DIFERENTE       reduce using rule 119 (numeros -> DOUBLE .)
    MAYOR           reduce using rule 119 (numeros -> DOUBLE .)
    MENOR           reduce using rule 119 (numeros -> DOUBLE .)
    MENOS           reduce using rule 119 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 119 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 119 (numeros -> DOUBLE .)
    MOD             reduce using rule 119 (numeros -> DOUBLE .)
    AND             reduce using rule 119 (numeros -> DOUBLE .)
    OR              reduce using rule 119 (numeros -> DOUBLE .)
    NOT             reduce using rule 119 (numeros -> DOUBLE .)
    VAR             reduce using rule 119 (numeros -> DOUBLE .)
    VAL             reduce using rule 119 (numeros -> DOUBLE .)
    VARIABLE        reduce using rule 119 (numeros -> DOUBLE .)
    PRINTLN         reduce using rule 119 (numeros -> DOUBLE .)
    PRINT           reduce using rule 119 (numeros -> DOUBLE .)
    READLINE        reduce using rule 119 (numeros -> DOUBLE .)
    WHILE           reduce using rule 119 (numeros -> DOUBLE .)
    FOR             reduce using rule 119 (numeros -> DOUBLE .)
    IF              reduce using rule 119 (numeros -> DOUBLE .)
    INT             reduce using rule 119 (numeros -> DOUBLE .)
    LONG            reduce using rule 119 (numeros -> DOUBLE .)
    FLOAT           reduce using rule 119 (numeros -> DOUBLE .)
    DOUBLE          reduce using rule 119 (numeros -> DOUBLE .)
    LLAVE_D         reduce using rule 119 (numeros -> DOUBLE .)
    DEF             reduce using rule 119 (numeros -> DOUBLE .)
    $end            reduce using rule 119 (numeros -> DOUBLE .)
    RETURN          reduce using rule 119 (numeros -> DOUBLE .)
    CASE            reduce using rule 119 (numeros -> DOUBLE .)


state 70

    (114) booleanos -> TRUE .

    COMA            reduce using rule 114 (booleanos -> TRUE .)
    PAR_D           reduce using rule 114 (booleanos -> TRUE .)
    MAS             reduce using rule 114 (booleanos -> TRUE .)
    IGUAL_COMPARACION reduce using rule 114 (booleanos -> TRUE .)
    DIFERENTE       reduce using rule 114 (booleanos -> TRUE .)
    MAYOR           reduce using rule 114 (booleanos -> TRUE .)
    MENOR           reduce using rule 114 (booleanos -> TRUE .)
    AND             reduce using rule 114 (booleanos -> TRUE .)
    OR              reduce using rule 114 (booleanos -> TRUE .)
    NOT             reduce using rule 114 (booleanos -> TRUE .)
    DEF             reduce using rule 114 (booleanos -> TRUE .)
    VARIABLE        reduce using rule 114 (booleanos -> TRUE .)
    PRINTLN         reduce using rule 114 (booleanos -> TRUE .)
    PRINT           reduce using rule 114 (booleanos -> TRUE .)
    READLINE        reduce using rule 114 (booleanos -> TRUE .)
    VAR             reduce using rule 114 (booleanos -> TRUE .)
    VAL             reduce using rule 114 (booleanos -> TRUE .)
    WHILE           reduce using rule 114 (booleanos -> TRUE .)
    FOR             reduce using rule 114 (booleanos -> TRUE .)
    IF              reduce using rule 114 (booleanos -> TRUE .)
    $end            reduce using rule 114 (booleanos -> TRUE .)
    INT             reduce using rule 114 (booleanos -> TRUE .)
    LONG            reduce using rule 114 (booleanos -> TRUE .)
    FLOAT           reduce using rule 114 (booleanos -> TRUE .)
    DOUBLE          reduce using rule 114 (booleanos -> TRUE .)
    LLAVE_D         reduce using rule 114 (booleanos -> TRUE .)
    RETURN          reduce using rule 114 (booleanos -> TRUE .)
    CASE            reduce using rule 114 (booleanos -> TRUE .)
    FUNCION_FLECHA  reduce using rule 114 (booleanos -> TRUE .)


state 71

    (115) booleanos -> FLASE .

    COMA            reduce using rule 115 (booleanos -> FLASE .)
    PAR_D           reduce using rule 115 (booleanos -> FLASE .)
    MAS             reduce using rule 115 (booleanos -> FLASE .)
    IGUAL_COMPARACION reduce using rule 115 (booleanos -> FLASE .)
    DIFERENTE       reduce using rule 115 (booleanos -> FLASE .)
    MAYOR           reduce using rule 115 (booleanos -> FLASE .)
    MENOR           reduce using rule 115 (booleanos -> FLASE .)
    AND             reduce using rule 115 (booleanos -> FLASE .)
    OR              reduce using rule 115 (booleanos -> FLASE .)
    NOT             reduce using rule 115 (booleanos -> FLASE .)
    DEF             reduce using rule 115 (booleanos -> FLASE .)
    VARIABLE        reduce using rule 115 (booleanos -> FLASE .)
    PRINTLN         reduce using rule 115 (booleanos -> FLASE .)
    PRINT           reduce using rule 115 (booleanos -> FLASE .)
    READLINE        reduce using rule 115 (booleanos -> FLASE .)
    VAR             reduce using rule 115 (booleanos -> FLASE .)
    VAL             reduce using rule 115 (booleanos -> FLASE .)
    WHILE           reduce using rule 115 (booleanos -> FLASE .)
    FOR             reduce using rule 115 (booleanos -> FLASE .)
    IF              reduce using rule 115 (booleanos -> FLASE .)
    $end            reduce using rule 115 (booleanos -> FLASE .)
    INT             reduce using rule 115 (booleanos -> FLASE .)
    LONG            reduce using rule 115 (booleanos -> FLASE .)
    FLOAT           reduce using rule 115 (booleanos -> FLASE .)
    DOUBLE          reduce using rule 115 (booleanos -> FLASE .)
    LLAVE_D         reduce using rule 115 (booleanos -> FLASE .)
    RETURN          reduce using rule 115 (booleanos -> FLASE .)
    CASE            reduce using rule 115 (booleanos -> FLASE .)
    FUNCION_FLECHA  reduce using rule 115 (booleanos -> FLASE .)


state 72

    (180) match -> VARIABLE MATCH LLAVE_I . cases LLAVE_D
    (181) cases -> . casesInt
    (182) cases -> . casesLgn
    (183) cases -> . casesFlt
    (184) cases -> . casesDob
    (185) cases -> . casesStr
    (186) cases -> . casesChar
    (187) cases -> . casesBool
    (189) casesInt -> . caseInt
    (190) casesInt -> . caseInt casesInt
    (191) casesInt -> . caseInt defcase
    (193) casesLgn -> . caseLgn
    (194) casesLgn -> . caseLgn casesLgn
    (195) casesLgn -> . caseLgn defcase
    (197) casesFlt -> . caseFlt
    (198) casesFlt -> . caseFlt casesFlt
    (199) casesFlt -> . caseFlt defcase
    (201) casesDob -> . caseDob
    (202) casesDob -> . caseDob casesDob
    (203) casesDob -> . caseDob defcase
    (205) casesStr -> . caseStr
    (206) casesStr -> . caseStr casesStr
    (207) casesStr -> . caseStr defcase
    (209) casesChar -> . caseChar
    (210) casesChar -> . caseChar casesChar
    (211) casesChar -> . caseChar defcase
    (213) casesBool -> . caseBool
    (214) casesBool -> . caseBool casesBool
    (215) casesBool -> . caseBool defcase
    (188) caseInt -> . CASE INT FUNCION_FLECHA codeBlock
    (192) caseLgn -> . CASE LONG FUNCION_FLECHA codeBlock
    (196) caseFlt -> . CASE FLOAT FUNCION_FLECHA codeBlock
    (200) caseDob -> . CASE DOUBLE FUNCION_FLECHA codeBlock
    (204) caseStr -> . CASE STRING FUNCION_FLECHA codeBlock
    (208) caseChar -> . CASE CHAR FUNCION_FLECHA codeBlock
    (212) caseBool -> . CASE booleanos FUNCION_FLECHA codeBlock

    CASE            shift and go to state 135

    cases                          shift and go to state 120
    casesInt                       shift and go to state 121
    casesLgn                       shift and go to state 122
    casesFlt                       shift and go to state 123
    casesDob                       shift and go to state 124
    casesStr                       shift and go to state 125
    casesChar                      shift and go to state 126
    casesBool                      shift and go to state 127
    caseInt                        shift and go to state 128
    caseLgn                        shift and go to state 129
    caseFlt                        shift and go to state 130
    caseDob                        shift and go to state 131
    caseStr                        shift and go to state 132
    caseChar                       shift and go to state 133
    caseBool                       shift and go to state 134

state 73

    (140) impresion -> PRINTLN PAR_I valorI . PAR_D

    PAR_D           shift and go to state 136


state 74

    (142) valorI -> valor . MAS valorI
    (143) valorI -> valor .

    MAS             shift and go to state 137
    PAR_D           reduce using rule 143 (valorI -> valor .)


state 75

    (141) impresion -> PRINT PAR_I valorI . PAR_D

    PAR_D           shift and go to state 138


state 76

    (144) entrada -> READLINE PAR_I PAR_D .

    $end            reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    VAR             reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    VAL             reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    VARIABLE        reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    PRINTLN         reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    PRINT           reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    READLINE        reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    WHILE           reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    FOR             reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    IF              reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    INT             reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    LONG            reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    FLOAT           reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    DOUBLE          reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    LLAVE_D         reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    PUNTO           reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    DEF             reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    RETURN          reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    CASE            reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)


state 77

    (41) asignacion -> VAR VARIABLE IGUAL . VARIABLE
    (43) asignacion -> VAR VARIABLE IGUAL . aritmetica
    (45) asignacion -> VAR VARIABLE IGUAL . returnfun
    (169) asignacion -> VAR VARIABLE IGUAL . tuple
    (56) asignacionLong -> VAR VARIABLE IGUAL . LONG
    (62) asignacionInt -> VAR VARIABLE IGUAL . INT
    (68) asignacionFloat -> VAR VARIABLE IGUAL . FLOAT
    (74) asignacionDouble -> VAR VARIABLE IGUAL . DOUBLE
    (80) asignacionString -> VAR VARIABLE IGUAL . STRING
    (86) asignacionChar -> VAR VARIABLE IGUAL . CHAR
    (92) asignacionBoolean -> VAR VARIABLE IGUAL . booleanos
    (157) array -> VAR VARIABLE IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (147) returnfun -> . returnCastable
    (148) returnfun -> . castingcall
    (168) tuple -> . PAR_I valores PAR_D
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (149) returnCastable -> . entrada
    (150) returnCastable -> . funcall
    (151) castingcall -> . returnCastable PUNTO castingfun
    (152) castingcall -> . VARIABLE PUNTO castingfun
    (144) entrada -> . READLINE PAR_I PAR_D
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D

    VARIABLE        shift and go to state 139
    LONG            shift and go to state 143
    INT             shift and go to state 144
    FLOAT           shift and go to state 145
    DOUBLE          shift and go to state 146
    STRING          shift and go to state 147
    CHAR            shift and go to state 148
    ARRAYCLASS      shift and go to state 150
    PAR_I           shift and go to state 151
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71
    READLINE        shift and go to state 15

    aritmetica                     shift and go to state 140
    returnfun                      shift and go to state 141
    tuple                          shift and go to state 142
    booleanos                      shift and go to state 149
    numeros                        shift and go to state 109
    returnCastable                 shift and go to state 152
    castingcall                    shift and go to state 153
    entrada                        shift and go to state 154
    funcall                        shift and go to state 155

state 78

    (171) asignacion -> VAR VARIABLE dectipoTupla . IGUAL tuple

    IGUAL           shift and go to state 156


state 79

    (57) asignacionLong -> VAR VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL LONG
    (60) asignacionLong -> VAR VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL VARIABLE
    (63) asignacionInt -> VAR VARIABLE DOBLE_PUNTO . INTCLASS IGUAL INT
    (66) asignacionInt -> VAR VARIABLE DOBLE_PUNTO . INTCLASS IGUAL VARIABLE
    (69) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL VARIABLE
    (75) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL VARIABLE
    (81) asignacionString -> VAR VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL STRING
    (84) asignacionString -> VAR VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL VARIABLE
    (87) asignacionChar -> VAR VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL CHAR
    (90) asignacionChar -> VAR VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL VARIABLE
    (93) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL VARIABLE
    (158) array -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (135) dectipoTupla -> DOBLE_PUNTO . PAR_I tipos PAR_D

    LONGCLASS       shift and go to state 157
    INTCLASS        shift and go to state 158
    FLOATCLASS      shift and go to state 159
    DOUBLECLASS     shift and go to state 160
    STRINGCLASS     shift and go to state 161
    CHARCLASS       shift and go to state 162
    BOOLCLASS       shift and go to state 163
    ARRAYCLASS      shift and go to state 164
    PAR_I           shift and go to state 165


state 80

    (42) asignacion -> VAL VARIABLE IGUAL . VARIABLE
    (44) asignacion -> VAL VARIABLE IGUAL . aritmetica
    (46) asignacion -> VAL VARIABLE IGUAL . returnfun
    (170) asignacion -> VAL VARIABLE IGUAL . tuple
    (58) asignacionLong -> VAL VARIABLE IGUAL . LONG
    (64) asignacionInt -> VAL VARIABLE IGUAL . INT
    (70) asignacionFloat -> VAL VARIABLE IGUAL . FLOAT
    (76) asignacionDouble -> VAL VARIABLE IGUAL . DOUBLE
    (82) asignacionString -> VAL VARIABLE IGUAL . STRING
    (88) asignacionChar -> VAL VARIABLE IGUAL . CHAR
    (94) asignacionBoolean -> VAL VARIABLE IGUAL . booleanos
    (160) array -> VAL VARIABLE IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (163) list -> VAL VARIABLE IGUAL . LISTCLASS PAR_I valores PAR_D
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (147) returnfun -> . returnCastable
    (148) returnfun -> . castingcall
    (168) tuple -> . PAR_I valores PAR_D
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (149) returnCastable -> . entrada
    (150) returnCastable -> . funcall
    (151) castingcall -> . returnCastable PUNTO castingfun
    (152) castingcall -> . VARIABLE PUNTO castingfun
    (144) entrada -> . READLINE PAR_I PAR_D
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D

    VARIABLE        shift and go to state 166
    LONG            shift and go to state 170
    INT             shift and go to state 171
    FLOAT           shift and go to state 172
    DOUBLE          shift and go to state 173
    STRING          shift and go to state 174
    CHAR            shift and go to state 175
    ARRAYCLASS      shift and go to state 177
    LISTCLASS       shift and go to state 178
    PAR_I           shift and go to state 151
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71
    READLINE        shift and go to state 15

    aritmetica                     shift and go to state 167
    returnfun                      shift and go to state 168
    tuple                          shift and go to state 169
    booleanos                      shift and go to state 176
    numeros                        shift and go to state 109
    returnCastable                 shift and go to state 152
    castingcall                    shift and go to state 153
    entrada                        shift and go to state 154
    funcall                        shift and go to state 155

state 81

    (172) asignacion -> VAL VARIABLE dectipoTupla . IGUAL tuple

    IGUAL           shift and go to state 179


state 82

    (59) asignacionLong -> VAL VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL LONG
    (61) asignacionLong -> VAL VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> VAL VARIABLE DOBLE_PUNTO . INTCLASS IGUAL INT
    (67) asignacionInt -> VAL VARIABLE DOBLE_PUNTO . INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> VAL VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL STRING
    (85) asignacionString -> VAL VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> VAL VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL CHAR
    (91) asignacionChar -> VAL VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL VARIABLE
    (161) array -> VAL VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> VAL VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) list -> VAL VARIABLE DOBLE_PUNTO . LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> VAL VARIABLE DOBLE_PUNTO . LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (135) dectipoTupla -> DOBLE_PUNTO . PAR_I tipos PAR_D

    LONGCLASS       shift and go to state 180
    INTCLASS        shift and go to state 181
    FLOATCLASS      shift and go to state 182
    DOUBLECLASS     shift and go to state 183
    STRINGCLASS     shift and go to state 184
    CHARCLASS       shift and go to state 185
    BOOLCLASS       shift and go to state 186
    ARRAYCLASS      shift and go to state 187
    LISTCLASS       shift and go to state 188
    PAR_I           shift and go to state 165


state 83

    (173) while -> WHILE PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 189


state 84

    (226) condicional -> valorC . logicos condicional
    (227) condicional -> valorC .
    (234) logicos -> . AND
    (235) logicos -> . OR
    (236) logicos -> . NOT

    PAR_D           reduce using rule 227 (condicional -> valorC .)
    AND             shift and go to state 191
    OR              shift and go to state 192
    NOT             shift and go to state 193

    logicos                        shift and go to state 190

state 85

    (228) valorC -> VARIABLE .
    (244) relacional -> VARIABLE . comparacion numeros
    (246) relacional -> VARIABLE . comparacion booleanos
    (248) relacional -> VARIABLE . comparacion STRING
    (250) relacional -> VARIABLE . comparacion CHAR
    (252) relacional -> VARIABLE . comparacion VARIABLE
    (258) aritmetica -> VARIABLE . aritmeticos numeros
    (260) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (253) comparacion -> . IGUAL_COMPARACION
    (254) comparacion -> . DIFERENTE
    (255) comparacion -> . MAYOR
    (256) comparacion -> . MENOR
    (263) aritmeticos -> . MENOS
    (264) aritmeticos -> . MAS
    (265) aritmeticos -> . MULTIPLICACION
    (266) aritmeticos -> . DIVISION
    (267) aritmeticos -> . MOD

    AND             reduce using rule 228 (valorC -> VARIABLE .)
    OR              reduce using rule 228 (valorC -> VARIABLE .)
    NOT             reduce using rule 228 (valorC -> VARIABLE .)
    PAR_D           reduce using rule 228 (valorC -> VARIABLE .)
    IGUAL_COMPARACION shift and go to state 196
    DIFERENTE       shift and go to state 197
    MAYOR           shift and go to state 198
    MENOR           shift and go to state 199
    MENOS           shift and go to state 200
    MAS             shift and go to state 201
    MULTIPLICACION  shift and go to state 202
    DIVISION        shift and go to state 203
    MOD             shift and go to state 204

    comparacion                    shift and go to state 194
    aritmeticos                    shift and go to state 195

state 86

    (229) valorC -> booleanos .
    (241) relacional -> booleanos . comparacion booleanos
    (247) relacional -> booleanos . comparacion VARIABLE
    (253) comparacion -> . IGUAL_COMPARACION
    (254) comparacion -> . DIFERENTE
    (255) comparacion -> . MAYOR
    (256) comparacion -> . MENOR

    AND             reduce using rule 229 (valorC -> booleanos .)
    OR              reduce using rule 229 (valorC -> booleanos .)
    NOT             reduce using rule 229 (valorC -> booleanos .)
    PAR_D           reduce using rule 229 (valorC -> booleanos .)
    IGUAL_COMPARACION shift and go to state 196
    DIFERENTE       shift and go to state 197
    MAYOR           shift and go to state 198
    MENOR           shift and go to state 199

    comparacion                    shift and go to state 205

state 87

    (230) valorC -> relacional .

    AND             reduce using rule 230 (valorC -> relacional .)
    OR              reduce using rule 230 (valorC -> relacional .)
    NOT             reduce using rule 230 (valorC -> relacional .)
    PAR_D           reduce using rule 230 (valorC -> relacional .)


state 88

    (231) valorC -> NOT . VARIABLE
    (232) valorC -> NOT . booleanos
    (233) valorC -> NOT . relacional
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE
    (237) relacional -> . numeros comparacion numeros
    (238) relacional -> . aritmetica comparacion aritmetica
    (239) relacional -> . aritmetica comparacion numeros
    (240) relacional -> . numeros comparacion aritmetica
    (241) relacional -> . booleanos comparacion booleanos
    (242) relacional -> . STRING comparacion STRING
    (243) relacional -> . CHAR comparacion CHAR
    (244) relacional -> . VARIABLE comparacion numeros
    (245) relacional -> . numeros comparacion VARIABLE
    (246) relacional -> . VARIABLE comparacion booleanos
    (247) relacional -> . booleanos comparacion VARIABLE
    (248) relacional -> . VARIABLE comparacion STRING
    (249) relacional -> . STRING comparacion VARIABLE
    (250) relacional -> . VARIABLE comparacion CHAR
    (251) relacional -> . CHAR comparacion VARIABLE
    (252) relacional -> . VARIABLE comparacion VARIABLE
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 206
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71
    STRING          shift and go to state 91
    CHAR            shift and go to state 92
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    booleanos                      shift and go to state 207
    relacional                     shift and go to state 208
    numeros                        shift and go to state 89
    aritmetica                     shift and go to state 90

state 89

    (237) relacional -> numeros . comparacion numeros
    (240) relacional -> numeros . comparacion aritmetica
    (245) relacional -> numeros . comparacion VARIABLE
    (257) aritmetica -> numeros . aritmeticos numeros
    (259) aritmetica -> numeros . aritmeticos VARIABLE
    (253) comparacion -> . IGUAL_COMPARACION
    (254) comparacion -> . DIFERENTE
    (255) comparacion -> . MAYOR
    (256) comparacion -> . MENOR
    (263) aritmeticos -> . MENOS
    (264) aritmeticos -> . MAS
    (265) aritmeticos -> . MULTIPLICACION
    (266) aritmeticos -> . DIVISION
    (267) aritmeticos -> . MOD

    IGUAL_COMPARACION shift and go to state 196
    DIFERENTE       shift and go to state 197
    MAYOR           shift and go to state 198
    MENOR           shift and go to state 199
    MENOS           shift and go to state 200
    MAS             shift and go to state 201
    MULTIPLICACION  shift and go to state 202
    DIVISION        shift and go to state 203
    MOD             shift and go to state 204

    comparacion                    shift and go to state 209
    aritmeticos                    shift and go to state 210

state 90

    (238) relacional -> aritmetica . comparacion aritmetica
    (239) relacional -> aritmetica . comparacion numeros
    (261) aritmetica -> aritmetica . aritmeticos numeros
    (262) aritmetica -> aritmetica . aritmeticos VARIABLE
    (253) comparacion -> . IGUAL_COMPARACION
    (254) comparacion -> . DIFERENTE
    (255) comparacion -> . MAYOR
    (256) comparacion -> . MENOR
    (263) aritmeticos -> . MENOS
    (264) aritmeticos -> . MAS
    (265) aritmeticos -> . MULTIPLICACION
    (266) aritmeticos -> . DIVISION
    (267) aritmeticos -> . MOD

    IGUAL_COMPARACION shift and go to state 196
    DIFERENTE       shift and go to state 197
    MAYOR           shift and go to state 198
    MENOR           shift and go to state 199
    MENOS           shift and go to state 200
    MAS             shift and go to state 201
    MULTIPLICACION  shift and go to state 202
    DIVISION        shift and go to state 203
    MOD             shift and go to state 204

    comparacion                    shift and go to state 211
    aritmeticos                    shift and go to state 212

state 91

    (242) relacional -> STRING . comparacion STRING
    (249) relacional -> STRING . comparacion VARIABLE
    (253) comparacion -> . IGUAL_COMPARACION
    (254) comparacion -> . DIFERENTE
    (255) comparacion -> . MAYOR
    (256) comparacion -> . MENOR

    IGUAL_COMPARACION shift and go to state 196
    DIFERENTE       shift and go to state 197
    MAYOR           shift and go to state 198
    MENOR           shift and go to state 199

    comparacion                    shift and go to state 213

state 92

    (243) relacional -> CHAR . comparacion CHAR
    (251) relacional -> CHAR . comparacion VARIABLE
    (253) comparacion -> . IGUAL_COMPARACION
    (254) comparacion -> . DIFERENTE
    (255) comparacion -> . MAYOR
    (256) comparacion -> . MENOR

    IGUAL_COMPARACION shift and go to state 196
    DIFERENTE       shift and go to state 197
    MAYOR           shift and go to state 198
    MENOR           shift and go to state 199

    comparacion                    shift and go to state 214

state 93

    (174) for -> FOR PAR_I VAR . VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> FOR PAR_I VAR . VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> FOR PAR_I VAR . VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 215


state 94

    (175) for -> FOR PAR_I VARIABLE . ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> FOR PAR_I VARIABLE . ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> FOR PAR_I VARIABLE . ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    ITERATOR        shift and go to state 216


state 95

    (219) if -> IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 217


state 96

    (222) elseif -> ELSE IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (223) elseif -> ELSE IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (226) condicional -> . valorC logicos condicional
    (227) condicional -> . valorC
    (228) valorC -> . VARIABLE
    (229) valorC -> . booleanos
    (230) valorC -> . relacional
    (231) valorC -> . NOT VARIABLE
    (232) valorC -> . NOT booleanos
    (233) valorC -> . NOT relacional
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE
    (237) relacional -> . numeros comparacion numeros
    (238) relacional -> . aritmetica comparacion aritmetica
    (239) relacional -> . aritmetica comparacion numeros
    (240) relacional -> . numeros comparacion aritmetica
    (241) relacional -> . booleanos comparacion booleanos
    (242) relacional -> . STRING comparacion STRING
    (243) relacional -> . CHAR comparacion CHAR
    (244) relacional -> . VARIABLE comparacion numeros
    (245) relacional -> . numeros comparacion VARIABLE
    (246) relacional -> . VARIABLE comparacion booleanos
    (247) relacional -> . booleanos comparacion VARIABLE
    (248) relacional -> . VARIABLE comparacion STRING
    (249) relacional -> . STRING comparacion VARIABLE
    (250) relacional -> . VARIABLE comparacion CHAR
    (251) relacional -> . CHAR comparacion VARIABLE
    (252) relacional -> . VARIABLE comparacion VARIABLE
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 85
    NOT             shift and go to state 88
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71
    STRING          shift and go to state 91
    CHAR            shift and go to state 92
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    condicional                    shift and go to state 218
    valorC                         shift and go to state 84
    booleanos                      shift and go to state 86
    relacional                     shift and go to state 87
    numeros                        shift and go to state 89
    aritmetica                     shift and go to state 90

state 97

    (224) else -> ELSE LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 219


state 98

    (16) contenido -> asignacion .
    (26) contenido -> asignacion . contenido
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 16 (contenido -> asignacion .)
    RETURN          reduce using rule 16 (contenido -> asignacion .)
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    asignacion                     shift and go to state 98
    contenido                      shift and go to state 220
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 99

    (17) contenido -> reasignacion .
    (27) contenido -> reasignacion . contenido
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 17 (contenido -> reasignacion .)
    RETURN          reduce using rule 17 (contenido -> reasignacion .)
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    reasignacion                   shift and go to state 99
    contenido                      shift and go to state 221
    asignacion                     shift and go to state 98
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 100

    (18) contenido -> funcall .
    (28) contenido -> funcall . contenido
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 18 (contenido -> funcall .)
    RETURN          reduce using rule 18 (contenido -> funcall .)
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    funcall                        shift and go to state 100
    contenido                      shift and go to state 222
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 101

    (19) contenido -> impresion .
    (29) contenido -> impresion . contenido
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 19 (contenido -> impresion .)
    RETURN          reduce using rule 19 (contenido -> impresion .)
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    impresion                      shift and go to state 101
    contenido                      shift and go to state 223
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 102

    (20) contenido -> entrada .
    (30) contenido -> entrada . contenido
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 20 (contenido -> entrada .)
    RETURN          reduce using rule 20 (contenido -> entrada .)
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    entrada                        shift and go to state 102
    contenido                      shift and go to state 224
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 103

    (21) contenido -> while .
    (31) contenido -> while . contenido
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 21 (contenido -> while .)
    RETURN          reduce using rule 21 (contenido -> while .)
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    while                          shift and go to state 103
    contenido                      shift and go to state 225
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 104

    (22) contenido -> for .
    (32) contenido -> for . contenido
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 22 (contenido -> for .)
    RETURN          reduce using rule 22 (contenido -> for .)
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    for                            shift and go to state 104
    contenido                      shift and go to state 226
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 105

    (23) contenido -> match .
    (34) contenido -> match . contenido
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 23 (contenido -> match .)
    RETURN          reduce using rule 23 (contenido -> match .)
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    match                          shift and go to state 105
    contenido                      shift and go to state 227
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 106

    (24) contenido -> if .
    (33) contenido -> if . contenido
    (220) if -> if . elseif
    (221) if -> if . else
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (222) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (223) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (224) else -> . ELSE LLAVE_I contenido LLAVE_D
    (225) else -> . elseif else
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 24 (contenido -> if .)
    RETURN          reduce using rule 24 (contenido -> if .)
    ELSE            shift and go to state 38
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    if                             shift and go to state 106
    contenido                      shift and go to state 228
    elseif                         shift and go to state 36
    else                           shift and go to state 37
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 107

    (25) contenido -> aritmetica .
    (35) contenido -> aritmetica . contenido
    (261) aritmetica -> aritmetica . aritmeticos numeros
    (262) aritmetica -> aritmetica . aritmeticos VARIABLE
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (263) aritmeticos -> . MENOS
    (264) aritmeticos -> . MAS
    (265) aritmeticos -> . MULTIPLICACION
    (266) aritmeticos -> . DIVISION
    (267) aritmeticos -> . MOD
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 25 (contenido -> aritmetica .)
    RETURN          reduce using rule 25 (contenido -> aritmetica .)
    MENOS           shift and go to state 200
    MAS             shift and go to state 201
    MULTIPLICACION  shift and go to state 202
    DIVISION        shift and go to state 203
    MOD             shift and go to state 204
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    aritmetica                     shift and go to state 107
    contenido                      shift and go to state 229
    aritmeticos                    shift and go to state 212
    numeros                        shift and go to state 109
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 108

    (98) reasignacion -> VARIABLE . IGUAL valor
    (99) reasignacion -> VARIABLE . IGUAL returnfun
    (100) reasignacion -> VARIABLE . IGUAL aritmetica
    (101) reasignacion -> VARIABLE . PAR_I INT PAR_D IGUAL valor
    (145) funcall -> VARIABLE . PAR_I valores PAR_D
    (146) funcall -> VARIABLE . PAR_I PAR_D
    (180) match -> VARIABLE . MATCH LLAVE_I cases LLAVE_D
    (258) aritmetica -> VARIABLE . aritmeticos numeros
    (260) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (263) aritmeticos -> . MENOS
    (264) aritmeticos -> . MAS
    (265) aritmeticos -> . MULTIPLICACION
    (266) aritmeticos -> . DIVISION
    (267) aritmeticos -> . MOD

    IGUAL           shift and go to state 230
    PAR_I           shift and go to state 231
    MATCH           shift and go to state 41
    MENOS           shift and go to state 200
    MAS             shift and go to state 201
    MULTIPLICACION  shift and go to state 202
    DIVISION        shift and go to state 203
    MOD             shift and go to state 204

    aritmeticos                    shift and go to state 195

state 109

    (257) aritmetica -> numeros . aritmeticos numeros
    (259) aritmetica -> numeros . aritmeticos VARIABLE
    (263) aritmeticos -> . MENOS
    (264) aritmeticos -> . MAS
    (265) aritmeticos -> . MULTIPLICACION
    (266) aritmeticos -> . DIVISION
    (267) aritmeticos -> . MOD

    MENOS           shift and go to state 200
    MAS             shift and go to state 201
    MULTIPLICACION  shift and go to state 202
    DIVISION        shift and go to state 203
    MOD             shift and go to state 204

    aritmeticos                    shift and go to state 210

state 110

    (120) funcion -> DEF VARIABLE parametro IGUAL . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 232


state 111

    (121) funcion -> DEF VARIABLE parametro LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 233
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 112

    (128) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D

    IGUAL           shift and go to state 234


state 113

    (131) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D

    IGUAL           shift and go to state 235


state 114

    (134) dectipo -> DOBLE_PUNTO . tipo
    (135) dectipoTupla -> DOBLE_PUNTO . PAR_I tipos PAR_D
    (102) tipo -> . CHARCLASS
    (103) tipo -> . STRINGCLASS
    (104) tipo -> . BOOLCLASS
    (105) tipo -> . INTCLASS
    (106) tipo -> . LONGCLASS
    (107) tipo -> . DOUBLECLASS
    (108) tipo -> . FLOATCLASS

    PAR_I           shift and go to state 165
    CHARCLASS       shift and go to state 237
    STRINGCLASS     shift and go to state 238
    BOOLCLASS       shift and go to state 239
    INTCLASS        shift and go to state 240
    LONGCLASS       shift and go to state 241
    DOUBLECLASS     shift and go to state 242
    FLOATCLASS      shift and go to state 243

    tipo                           shift and go to state 236

state 115

    (125) parametro -> PAR_I PAR_D .

    IGUAL           reduce using rule 125 (parametro -> PAR_I PAR_D .)
    LLAVE_I         reduce using rule 125 (parametro -> PAR_I PAR_D .)
    DOBLE_PUNTO     reduce using rule 125 (parametro -> PAR_I PAR_D .)


state 116

    (126) parametros -> PAR_I declaracion . PAR_D
    (127) parametros -> PAR_I declaracion . PAR_D parametros

    PAR_D           shift and go to state 244


state 117

    (122) declaracion -> VARIABLE . DOBLE_PUNTO tipo
    (123) declaracion -> VARIABLE . DOBLE_PUNTO tipo IGUAL valor

    DOBLE_PUNTO     shift and go to state 245


state 118

    (145) funcall -> VARIABLE PAR_I valores PAR_D .

    $end            reduce using rule 145 (funcall -> VARIABLE PAR_I valores PAR_D .)
    VAR             reduce using rule 145 (funcall -> VARIABLE PAR_I valores PAR_D .)
    VAL             reduce using rule 145 (funcall -> VARIABLE PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 145 (funcall -> VARIABLE PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 145 (funcall -> VARIABLE PAR_I valores PAR_D .)
    PRINT           reduce using rule 145 (funcall -> VARIABLE PAR_I valores PAR_D .)
    READLINE        reduce using rule 145 (funcall -> VARIABLE PAR_I valores PAR_D .)
    WHILE           reduce using rule 145 (funcall -> VARIABLE PAR_I valores PAR_D .)
    FOR             reduce using rule 145 (funcall -> VARIABLE PAR_I valores PAR_D .)
    IF              reduce using rule 145 (funcall -> VARIABLE PAR_I valores PAR_D .)
    INT             reduce using rule 145 (funcall -> VARIABLE PAR_I valores PAR_D .)
    LONG            reduce using rule 145 (funcall -> VARIABLE PAR_I valores PAR_D .)
    FLOAT           reduce using rule 145 (funcall -> VARIABLE PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 145 (funcall -> VARIABLE PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 145 (funcall -> VARIABLE PAR_I valores PAR_D .)
    PUNTO           reduce using rule 145 (funcall -> VARIABLE PAR_I valores PAR_D .)
    DEF             reduce using rule 145 (funcall -> VARIABLE PAR_I valores PAR_D .)
    RETURN          reduce using rule 145 (funcall -> VARIABLE PAR_I valores PAR_D .)
    CASE            reduce using rule 145 (funcall -> VARIABLE PAR_I valores PAR_D .)


state 119

    (167) valores -> valor COMA . valores
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (109) valor -> . STRING
    (110) valor -> . CHAR
    (111) valor -> . VARIABLE
    (112) valor -> . numeros
    (113) valor -> . booleanos
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valor                          shift and go to state 61
    valores                        shift and go to state 246
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 120

    (180) match -> VARIABLE MATCH LLAVE_I cases . LLAVE_D

    LLAVE_D         shift and go to state 247


state 121

    (181) cases -> casesInt .

    LLAVE_D         reduce using rule 181 (cases -> casesInt .)


state 122

    (182) cases -> casesLgn .

    LLAVE_D         reduce using rule 182 (cases -> casesLgn .)


state 123

    (183) cases -> casesFlt .

    LLAVE_D         reduce using rule 183 (cases -> casesFlt .)


state 124

    (184) cases -> casesDob .

    LLAVE_D         reduce using rule 184 (cases -> casesDob .)


state 125

    (185) cases -> casesStr .

    LLAVE_D         reduce using rule 185 (cases -> casesStr .)


state 126

    (186) cases -> casesChar .

    LLAVE_D         reduce using rule 186 (cases -> casesChar .)


state 127

    (187) cases -> casesBool .

    LLAVE_D         reduce using rule 187 (cases -> casesBool .)


state 128

    (189) casesInt -> caseInt .
    (190) casesInt -> caseInt . casesInt
    (191) casesInt -> caseInt . defcase
    (189) casesInt -> . caseInt
    (190) casesInt -> . caseInt casesInt
    (191) casesInt -> . caseInt defcase
    (216) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (188) caseInt -> . CASE INT FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 189 (casesInt -> caseInt .)
    CASE            shift and go to state 250

    caseInt                        shift and go to state 128
    casesInt                       shift and go to state 248
    defcase                        shift and go to state 249

state 129

    (193) casesLgn -> caseLgn .
    (194) casesLgn -> caseLgn . casesLgn
    (195) casesLgn -> caseLgn . defcase
    (193) casesLgn -> . caseLgn
    (194) casesLgn -> . caseLgn casesLgn
    (195) casesLgn -> . caseLgn defcase
    (216) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (192) caseLgn -> . CASE LONG FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 193 (casesLgn -> caseLgn .)
    CASE            shift and go to state 253

    caseLgn                        shift and go to state 129
    casesLgn                       shift and go to state 251
    defcase                        shift and go to state 252

state 130

    (197) casesFlt -> caseFlt .
    (198) casesFlt -> caseFlt . casesFlt
    (199) casesFlt -> caseFlt . defcase
    (197) casesFlt -> . caseFlt
    (198) casesFlt -> . caseFlt casesFlt
    (199) casesFlt -> . caseFlt defcase
    (216) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (196) caseFlt -> . CASE FLOAT FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 197 (casesFlt -> caseFlt .)
    CASE            shift and go to state 256

    caseFlt                        shift and go to state 130
    casesFlt                       shift and go to state 254
    defcase                        shift and go to state 255

state 131

    (201) casesDob -> caseDob .
    (202) casesDob -> caseDob . casesDob
    (203) casesDob -> caseDob . defcase
    (201) casesDob -> . caseDob
    (202) casesDob -> . caseDob casesDob
    (203) casesDob -> . caseDob defcase
    (216) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (200) caseDob -> . CASE DOUBLE FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 201 (casesDob -> caseDob .)
    CASE            shift and go to state 259

    caseDob                        shift and go to state 131
    casesDob                       shift and go to state 257
    defcase                        shift and go to state 258

state 132

    (205) casesStr -> caseStr .
    (206) casesStr -> caseStr . casesStr
    (207) casesStr -> caseStr . defcase
    (205) casesStr -> . caseStr
    (206) casesStr -> . caseStr casesStr
    (207) casesStr -> . caseStr defcase
    (216) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (204) caseStr -> . CASE STRING FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 205 (casesStr -> caseStr .)
    CASE            shift and go to state 262

    caseStr                        shift and go to state 132
    casesStr                       shift and go to state 260
    defcase                        shift and go to state 261

state 133

    (209) casesChar -> caseChar .
    (210) casesChar -> caseChar . casesChar
    (211) casesChar -> caseChar . defcase
    (209) casesChar -> . caseChar
    (210) casesChar -> . caseChar casesChar
    (211) casesChar -> . caseChar defcase
    (216) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (208) caseChar -> . CASE CHAR FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 209 (casesChar -> caseChar .)
    CASE            shift and go to state 265

    caseChar                       shift and go to state 133
    casesChar                      shift and go to state 263
    defcase                        shift and go to state 264

state 134

    (213) casesBool -> caseBool .
    (214) casesBool -> caseBool . casesBool
    (215) casesBool -> caseBool . defcase
    (213) casesBool -> . caseBool
    (214) casesBool -> . caseBool casesBool
    (215) casesBool -> . caseBool defcase
    (216) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (212) caseBool -> . CASE booleanos FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 213 (casesBool -> caseBool .)
    CASE            shift and go to state 268

    caseBool                       shift and go to state 134
    casesBool                      shift and go to state 266
    defcase                        shift and go to state 267

state 135

    (188) caseInt -> CASE . INT FUNCION_FLECHA codeBlock
    (192) caseLgn -> CASE . LONG FUNCION_FLECHA codeBlock
    (196) caseFlt -> CASE . FLOAT FUNCION_FLECHA codeBlock
    (200) caseDob -> CASE . DOUBLE FUNCION_FLECHA codeBlock
    (204) caseStr -> CASE . STRING FUNCION_FLECHA codeBlock
    (208) caseChar -> CASE . CHAR FUNCION_FLECHA codeBlock
    (212) caseBool -> CASE . booleanos FUNCION_FLECHA codeBlock
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    INT             shift and go to state 269
    LONG            shift and go to state 270
    FLOAT           shift and go to state 271
    DOUBLE          shift and go to state 272
    STRING          shift and go to state 273
    CHAR            shift and go to state 274
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    booleanos                      shift and go to state 275

state 136

    (140) impresion -> PRINTLN PAR_I valorI PAR_D .

    $end            reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VAR             reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VAL             reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VARIABLE        reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    PRINTLN         reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    PRINT           reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    READLINE        reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    WHILE           reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    FOR             reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    IF              reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    INT             reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    LONG            reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    FLOAT           reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    DOUBLE          reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    LLAVE_D         reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    RETURN          reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    CASE            reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)


state 137

    (142) valorI -> valor MAS . valorI
    (142) valorI -> . valor MAS valorI
    (143) valorI -> . valor
    (109) valor -> . STRING
    (110) valor -> . CHAR
    (111) valor -> . VARIABLE
    (112) valor -> . numeros
    (113) valor -> . booleanos
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valor                          shift and go to state 74
    valorI                         shift and go to state 276
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 138

    (141) impresion -> PRINT PAR_I valorI PAR_D .

    $end            reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    VAR             reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    VAL             reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    VARIABLE        reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    PRINTLN         reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    PRINT           reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    READLINE        reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    WHILE           reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    FOR             reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    IF              reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    INT             reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    LONG            reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    FLOAT           reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    DOUBLE          reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    LLAVE_D         reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    RETURN          reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    CASE            reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)


state 139

    (41) asignacion -> VAR VARIABLE IGUAL VARIABLE .
    (258) aritmetica -> VARIABLE . aritmeticos numeros
    (260) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (152) castingcall -> VARIABLE . PUNTO castingfun
    (145) funcall -> VARIABLE . PAR_I valores PAR_D
    (146) funcall -> VARIABLE . PAR_I PAR_D
    (263) aritmeticos -> . MENOS
    (264) aritmeticos -> . MAS
    (265) aritmeticos -> . MULTIPLICACION
    (266) aritmeticos -> . DIVISION
    (267) aritmeticos -> . MOD

    DEF             reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VARIABLE        reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PRINTLN         reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PRINT           reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    READLINE        reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VAR             reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VAL             reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    WHILE           reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    FOR             reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    IF              reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    $end            reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    INT             reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    LONG            reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    FLOAT           reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    DOUBLE          reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    RETURN          reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    CASE            reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PUNTO           shift and go to state 277
    PAR_I           shift and go to state 40
    MENOS           shift and go to state 200
    MAS             shift and go to state 201
    MULTIPLICACION  shift and go to state 202
    DIVISION        shift and go to state 203
    MOD             shift and go to state 204

    aritmeticos                    shift and go to state 195

state 140

    (43) asignacion -> VAR VARIABLE IGUAL aritmetica .
    (261) aritmetica -> aritmetica . aritmeticos numeros
    (262) aritmetica -> aritmetica . aritmeticos VARIABLE
    (263) aritmeticos -> . MENOS
    (264) aritmeticos -> . MAS
    (265) aritmeticos -> . MULTIPLICACION
    (266) aritmeticos -> . DIVISION
    (267) aritmeticos -> . MOD

    DEF             reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VAR             reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    $end            reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    MENOS           shift and go to state 200
    MAS             shift and go to state 201
    MULTIPLICACION  shift and go to state 202
    DIVISION        shift and go to state 203
    MOD             shift and go to state 204

    aritmeticos                    shift and go to state 212

state 141

    (45) asignacion -> VAR VARIABLE IGUAL returnfun .

    DEF             reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    VARIABLE        reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    PRINTLN         reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    PRINT           reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    READLINE        reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    VAR             reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    VAL             reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    WHILE           reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    FOR             reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    IF              reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    $end            reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    INT             reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    LONG            reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    FLOAT           reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    DOUBLE          reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    LLAVE_D         reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    RETURN          reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    CASE            reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)


state 142

    (169) asignacion -> VAR VARIABLE IGUAL tuple .

    DEF             reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    VARIABLE        reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    PRINTLN         reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    PRINT           reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    READLINE        reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    VAR             reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    VAL             reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    WHILE           reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    FOR             reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    IF              reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    $end            reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    INT             reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    LONG            reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    FLOAT           reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    DOUBLE          reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    LLAVE_D         reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    RETURN          reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    CASE            reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)


state 143

    (56) asignacionLong -> VAR VARIABLE IGUAL LONG .
    (117) numeros -> LONG .

    DEF             reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    VARIABLE        reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    PRINTLN         reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    PRINT           reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    READLINE        reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    VAR             reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    VAL             reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    WHILE           reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    FOR             reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    IF              reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    $end            reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    INT             reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    LONG            reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    FLOAT           reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    DOUBLE          reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    LLAVE_D         reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    RETURN          reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    CASE            reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    MENOS           reduce using rule 117 (numeros -> LONG .)
    MAS             reduce using rule 117 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 117 (numeros -> LONG .)
    DIVISION        reduce using rule 117 (numeros -> LONG .)
    MOD             reduce using rule 117 (numeros -> LONG .)


state 144

    (62) asignacionInt -> VAR VARIABLE IGUAL INT .
    (116) numeros -> INT .

    DEF             reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    VARIABLE        reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    PRINTLN         reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    PRINT           reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    READLINE        reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    VAR             reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    VAL             reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    WHILE           reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    FOR             reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    IF              reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    $end            reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    INT             reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    LONG            reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    FLOAT           reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    DOUBLE          reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    LLAVE_D         reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    RETURN          reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    CASE            reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    MENOS           reduce using rule 116 (numeros -> INT .)
    MAS             reduce using rule 116 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 116 (numeros -> INT .)
    DIVISION        reduce using rule 116 (numeros -> INT .)
    MOD             reduce using rule 116 (numeros -> INT .)


state 145

    (68) asignacionFloat -> VAR VARIABLE IGUAL FLOAT .
    (118) numeros -> FLOAT .

    DEF             reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    VARIABLE        reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    PRINTLN         reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    PRINT           reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    READLINE        reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    VAR             reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    VAL             reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    WHILE           reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    FOR             reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    IF              reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    $end            reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    INT             reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    LONG            reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    FLOAT           reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    DOUBLE          reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    LLAVE_D         reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    RETURN          reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    CASE            reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    MENOS           reduce using rule 118 (numeros -> FLOAT .)
    MAS             reduce using rule 118 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 118 (numeros -> FLOAT .)
    DIVISION        reduce using rule 118 (numeros -> FLOAT .)
    MOD             reduce using rule 118 (numeros -> FLOAT .)


state 146

    (74) asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .
    (119) numeros -> DOUBLE .

    DEF             reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    VARIABLE        reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    PRINTLN         reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    PRINT           reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    READLINE        reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    VAR             reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    VAL             reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    WHILE           reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    FOR             reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    IF              reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    $end            reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    INT             reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    LONG            reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    FLOAT           reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    DOUBLE          reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    LLAVE_D         reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    RETURN          reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    CASE            reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    MENOS           reduce using rule 119 (numeros -> DOUBLE .)
    MAS             reduce using rule 119 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 119 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 119 (numeros -> DOUBLE .)
    MOD             reduce using rule 119 (numeros -> DOUBLE .)


state 147

    (80) asignacionString -> VAR VARIABLE IGUAL STRING .

    DEF             reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VARIABLE        reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PRINTLN         reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PRINT           reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    READLINE        reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VAR             reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VAL             reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    WHILE           reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    FOR             reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    IF              reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    $end            reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    INT             reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    LONG            reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    FLOAT           reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    DOUBLE          reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    LLAVE_D         reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    RETURN          reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    CASE            reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)


state 148

    (86) asignacionChar -> VAR VARIABLE IGUAL CHAR .

    DEF             reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VARIABLE        reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    PRINTLN         reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    PRINT           reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    READLINE        reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VAR             reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VAL             reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    WHILE           reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    FOR             reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    IF              reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    $end            reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    INT             reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    LONG            reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    FLOAT           reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    DOUBLE          reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    LLAVE_D         reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    RETURN          reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    CASE            reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)


state 149

    (92) asignacionBoolean -> VAR VARIABLE IGUAL booleanos .

    DEF             reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    PRINTLN         reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    READLINE        reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VAR             reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VAL             reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    FOR             reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    IF              reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    $end            reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    INT             reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    LONG            reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    FLOAT           reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    DOUBLE          reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    LLAVE_D         reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    RETURN          reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)


state 150

    (157) array -> VAR VARIABLE IGUAL ARRAYCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 278


state 151

    (168) tuple -> PAR_I . valores PAR_D
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (109) valor -> . STRING
    (110) valor -> . CHAR
    (111) valor -> . VARIABLE
    (112) valor -> . numeros
    (113) valor -> . booleanos
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valores                        shift and go to state 279
    valor                          shift and go to state 61
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 152

    (147) returnfun -> returnCastable .
    (151) castingcall -> returnCastable . PUNTO castingfun

    DEF             reduce using rule 147 (returnfun -> returnCastable .)
    VARIABLE        reduce using rule 147 (returnfun -> returnCastable .)
    PRINTLN         reduce using rule 147 (returnfun -> returnCastable .)
    PRINT           reduce using rule 147 (returnfun -> returnCastable .)
    READLINE        reduce using rule 147 (returnfun -> returnCastable .)
    VAR             reduce using rule 147 (returnfun -> returnCastable .)
    VAL             reduce using rule 147 (returnfun -> returnCastable .)
    WHILE           reduce using rule 147 (returnfun -> returnCastable .)
    FOR             reduce using rule 147 (returnfun -> returnCastable .)
    IF              reduce using rule 147 (returnfun -> returnCastable .)
    $end            reduce using rule 147 (returnfun -> returnCastable .)
    INT             reduce using rule 147 (returnfun -> returnCastable .)
    LONG            reduce using rule 147 (returnfun -> returnCastable .)
    FLOAT           reduce using rule 147 (returnfun -> returnCastable .)
    DOUBLE          reduce using rule 147 (returnfun -> returnCastable .)
    LLAVE_D         reduce using rule 147 (returnfun -> returnCastable .)
    RETURN          reduce using rule 147 (returnfun -> returnCastable .)
    CASE            reduce using rule 147 (returnfun -> returnCastable .)
    PUNTO           shift and go to state 280


state 153

    (148) returnfun -> castingcall .

    DEF             reduce using rule 148 (returnfun -> castingcall .)
    VARIABLE        reduce using rule 148 (returnfun -> castingcall .)
    PRINTLN         reduce using rule 148 (returnfun -> castingcall .)
    PRINT           reduce using rule 148 (returnfun -> castingcall .)
    READLINE        reduce using rule 148 (returnfun -> castingcall .)
    VAR             reduce using rule 148 (returnfun -> castingcall .)
    VAL             reduce using rule 148 (returnfun -> castingcall .)
    WHILE           reduce using rule 148 (returnfun -> castingcall .)
    FOR             reduce using rule 148 (returnfun -> castingcall .)
    IF              reduce using rule 148 (returnfun -> castingcall .)
    $end            reduce using rule 148 (returnfun -> castingcall .)
    INT             reduce using rule 148 (returnfun -> castingcall .)
    LONG            reduce using rule 148 (returnfun -> castingcall .)
    FLOAT           reduce using rule 148 (returnfun -> castingcall .)
    DOUBLE          reduce using rule 148 (returnfun -> castingcall .)
    LLAVE_D         reduce using rule 148 (returnfun -> castingcall .)
    RETURN          reduce using rule 148 (returnfun -> castingcall .)
    CASE            reduce using rule 148 (returnfun -> castingcall .)


state 154

    (149) returnCastable -> entrada .

    PUNTO           reduce using rule 149 (returnCastable -> entrada .)
    DEF             reduce using rule 149 (returnCastable -> entrada .)
    VARIABLE        reduce using rule 149 (returnCastable -> entrada .)
    PRINTLN         reduce using rule 149 (returnCastable -> entrada .)
    PRINT           reduce using rule 149 (returnCastable -> entrada .)
    READLINE        reduce using rule 149 (returnCastable -> entrada .)
    VAR             reduce using rule 149 (returnCastable -> entrada .)
    VAL             reduce using rule 149 (returnCastable -> entrada .)
    WHILE           reduce using rule 149 (returnCastable -> entrada .)
    FOR             reduce using rule 149 (returnCastable -> entrada .)
    IF              reduce using rule 149 (returnCastable -> entrada .)
    $end            reduce using rule 149 (returnCastable -> entrada .)
    INT             reduce using rule 149 (returnCastable -> entrada .)
    LONG            reduce using rule 149 (returnCastable -> entrada .)
    FLOAT           reduce using rule 149 (returnCastable -> entrada .)
    DOUBLE          reduce using rule 149 (returnCastable -> entrada .)
    LLAVE_D         reduce using rule 149 (returnCastable -> entrada .)
    RETURN          reduce using rule 149 (returnCastable -> entrada .)
    CASE            reduce using rule 149 (returnCastable -> entrada .)


state 155

    (150) returnCastable -> funcall .

    PUNTO           reduce using rule 150 (returnCastable -> funcall .)
    DEF             reduce using rule 150 (returnCastable -> funcall .)
    VARIABLE        reduce using rule 150 (returnCastable -> funcall .)
    PRINTLN         reduce using rule 150 (returnCastable -> funcall .)
    PRINT           reduce using rule 150 (returnCastable -> funcall .)
    READLINE        reduce using rule 150 (returnCastable -> funcall .)
    VAR             reduce using rule 150 (returnCastable -> funcall .)
    VAL             reduce using rule 150 (returnCastable -> funcall .)
    WHILE           reduce using rule 150 (returnCastable -> funcall .)
    FOR             reduce using rule 150 (returnCastable -> funcall .)
    IF              reduce using rule 150 (returnCastable -> funcall .)
    $end            reduce using rule 150 (returnCastable -> funcall .)
    INT             reduce using rule 150 (returnCastable -> funcall .)
    LONG            reduce using rule 150 (returnCastable -> funcall .)
    FLOAT           reduce using rule 150 (returnCastable -> funcall .)
    DOUBLE          reduce using rule 150 (returnCastable -> funcall .)
    LLAVE_D         reduce using rule 150 (returnCastable -> funcall .)
    RETURN          reduce using rule 150 (returnCastable -> funcall .)
    CASE            reduce using rule 150 (returnCastable -> funcall .)


state 156

    (171) asignacion -> VAR VARIABLE dectipoTupla IGUAL . tuple
    (168) tuple -> . PAR_I valores PAR_D

    PAR_I           shift and go to state 151

    tuple                          shift and go to state 281

state 157

    (57) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL LONG
    (60) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 282


state 158

    (63) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS . IGUAL INT
    (66) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 283


state 159

    (69) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL FLOAT
    (72) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 284


state 160

    (75) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL DOUBLE
    (78) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 285


state 161

    (81) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL STRING
    (84) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 286


state 162

    (87) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL CHAR
    (90) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 287


state 163

    (93) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL booleanos
    (96) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 288


state 164

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 289


state 165

    (135) dectipoTupla -> DOBLE_PUNTO PAR_I . tipos PAR_D
    (136) tipos -> . tipo
    (137) tipos -> . tipo tiposentry
    (102) tipo -> . CHARCLASS
    (103) tipo -> . STRINGCLASS
    (104) tipo -> . BOOLCLASS
    (105) tipo -> . INTCLASS
    (106) tipo -> . LONGCLASS
    (107) tipo -> . DOUBLECLASS
    (108) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 237
    STRINGCLASS     shift and go to state 238
    BOOLCLASS       shift and go to state 239
    INTCLASS        shift and go to state 240
    LONGCLASS       shift and go to state 241
    DOUBLECLASS     shift and go to state 242
    FLOATCLASS      shift and go to state 243

    tipos                          shift and go to state 290
    tipo                           shift and go to state 291

state 166

    (42) asignacion -> VAL VARIABLE IGUAL VARIABLE .
    (258) aritmetica -> VARIABLE . aritmeticos numeros
    (260) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (152) castingcall -> VARIABLE . PUNTO castingfun
    (145) funcall -> VARIABLE . PAR_I valores PAR_D
    (146) funcall -> VARIABLE . PAR_I PAR_D
    (263) aritmeticos -> . MENOS
    (264) aritmeticos -> . MAS
    (265) aritmeticos -> . MULTIPLICACION
    (266) aritmeticos -> . DIVISION
    (267) aritmeticos -> . MOD

    DEF             reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VARIABLE        reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PRINTLN         reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PRINT           reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    READLINE        reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VAR             reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VAL             reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    WHILE           reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    FOR             reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    IF              reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    $end            reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    INT             reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    LONG            reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    FLOAT           reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    DOUBLE          reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    RETURN          reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    CASE            reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PUNTO           shift and go to state 277
    PAR_I           shift and go to state 40
    MENOS           shift and go to state 200
    MAS             shift and go to state 201
    MULTIPLICACION  shift and go to state 202
    DIVISION        shift and go to state 203
    MOD             shift and go to state 204

    aritmeticos                    shift and go to state 195

state 167

    (44) asignacion -> VAL VARIABLE IGUAL aritmetica .
    (261) aritmetica -> aritmetica . aritmeticos numeros
    (262) aritmetica -> aritmetica . aritmeticos VARIABLE
    (263) aritmeticos -> . MENOS
    (264) aritmeticos -> . MAS
    (265) aritmeticos -> . MULTIPLICACION
    (266) aritmeticos -> . DIVISION
    (267) aritmeticos -> . MOD

    DEF             reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VAR             reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    $end            reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    MENOS           shift and go to state 200
    MAS             shift and go to state 201
    MULTIPLICACION  shift and go to state 202
    DIVISION        shift and go to state 203
    MOD             shift and go to state 204

    aritmeticos                    shift and go to state 212

state 168

    (46) asignacion -> VAL VARIABLE IGUAL returnfun .

    DEF             reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    VARIABLE        reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    PRINTLN         reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    PRINT           reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    READLINE        reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    VAR             reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    VAL             reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    WHILE           reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    FOR             reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    IF              reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    $end            reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    INT             reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    LONG            reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    FLOAT           reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    DOUBLE          reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    LLAVE_D         reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    RETURN          reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    CASE            reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)


state 169

    (170) asignacion -> VAL VARIABLE IGUAL tuple .

    DEF             reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    VARIABLE        reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    PRINTLN         reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    PRINT           reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    READLINE        reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    VAR             reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    VAL             reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    WHILE           reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    FOR             reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    IF              reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    $end            reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    INT             reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    LONG            reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    FLOAT           reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    DOUBLE          reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    LLAVE_D         reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    RETURN          reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    CASE            reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)


state 170

    (58) asignacionLong -> VAL VARIABLE IGUAL LONG .
    (117) numeros -> LONG .

    DEF             reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    VARIABLE        reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    PRINTLN         reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    PRINT           reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    READLINE        reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    VAR             reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    VAL             reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    WHILE           reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    FOR             reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    IF              reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    $end            reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    INT             reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    LONG            reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    FLOAT           reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    DOUBLE          reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    LLAVE_D         reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    RETURN          reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    CASE            reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    MENOS           reduce using rule 117 (numeros -> LONG .)
    MAS             reduce using rule 117 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 117 (numeros -> LONG .)
    DIVISION        reduce using rule 117 (numeros -> LONG .)
    MOD             reduce using rule 117 (numeros -> LONG .)


state 171

    (64) asignacionInt -> VAL VARIABLE IGUAL INT .
    (116) numeros -> INT .

    DEF             reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    VARIABLE        reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    PRINTLN         reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    PRINT           reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    READLINE        reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    VAR             reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    VAL             reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    WHILE           reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    FOR             reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    IF              reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    $end            reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    INT             reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    LONG            reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    FLOAT           reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    DOUBLE          reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    LLAVE_D         reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    RETURN          reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    CASE            reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    MENOS           reduce using rule 116 (numeros -> INT .)
    MAS             reduce using rule 116 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 116 (numeros -> INT .)
    DIVISION        reduce using rule 116 (numeros -> INT .)
    MOD             reduce using rule 116 (numeros -> INT .)


state 172

    (70) asignacionFloat -> VAL VARIABLE IGUAL FLOAT .
    (118) numeros -> FLOAT .

    DEF             reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    VARIABLE        reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    PRINTLN         reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    PRINT           reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    READLINE        reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    VAR             reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    VAL             reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    WHILE           reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    FOR             reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    IF              reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    $end            reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    INT             reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    LONG            reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    FLOAT           reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    DOUBLE          reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    LLAVE_D         reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    RETURN          reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    CASE            reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    MENOS           reduce using rule 118 (numeros -> FLOAT .)
    MAS             reduce using rule 118 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 118 (numeros -> FLOAT .)
    DIVISION        reduce using rule 118 (numeros -> FLOAT .)
    MOD             reduce using rule 118 (numeros -> FLOAT .)


state 173

    (76) asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .
    (119) numeros -> DOUBLE .

    DEF             reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    VARIABLE        reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    PRINTLN         reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    PRINT           reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    READLINE        reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    VAR             reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    VAL             reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    WHILE           reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    FOR             reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    IF              reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    $end            reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    INT             reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    LONG            reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    FLOAT           reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    DOUBLE          reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    LLAVE_D         reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    RETURN          reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    CASE            reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    MENOS           reduce using rule 119 (numeros -> DOUBLE .)
    MAS             reduce using rule 119 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 119 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 119 (numeros -> DOUBLE .)
    MOD             reduce using rule 119 (numeros -> DOUBLE .)


state 174

    (82) asignacionString -> VAL VARIABLE IGUAL STRING .

    DEF             reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VARIABLE        reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PRINTLN         reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PRINT           reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    READLINE        reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VAR             reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VAL             reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    WHILE           reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    FOR             reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    IF              reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    $end            reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    INT             reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    LONG            reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    FLOAT           reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    DOUBLE          reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    LLAVE_D         reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    RETURN          reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    CASE            reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)


state 175

    (88) asignacionChar -> VAL VARIABLE IGUAL CHAR .

    DEF             reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VARIABLE        reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    PRINTLN         reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    PRINT           reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    READLINE        reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VAR             reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VAL             reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    WHILE           reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    FOR             reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    IF              reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    $end            reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    INT             reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    LONG            reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    FLOAT           reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    DOUBLE          reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    LLAVE_D         reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    RETURN          reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    CASE            reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)


state 176

    (94) asignacionBoolean -> VAL VARIABLE IGUAL booleanos .

    DEF             reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    PRINTLN         reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    READLINE        reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VAR             reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VAL             reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    FOR             reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    IF              reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    $end            reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    INT             reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    LONG            reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    FLOAT           reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    DOUBLE          reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    LLAVE_D         reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    RETURN          reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)


state 177

    (160) array -> VAL VARIABLE IGUAL ARRAYCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 292


state 178

    (163) list -> VAL VARIABLE IGUAL LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 293


state 179

    (172) asignacion -> VAL VARIABLE dectipoTupla IGUAL . tuple
    (168) tuple -> . PAR_I valores PAR_D

    PAR_I           shift and go to state 151

    tuple                          shift and go to state 294

state 180

    (59) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL LONG
    (61) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 295


state 181

    (65) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS . IGUAL INT
    (67) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 296


state 182

    (71) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL FLOAT
    (73) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 297


state 183

    (77) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL DOUBLE
    (79) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 298


state 184

    (83) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL STRING
    (85) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 299


state 185

    (89) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL CHAR
    (91) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 300


state 186

    (95) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL booleanos
    (97) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 301


state 187

    (161) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 302


state 188

    (164) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS . CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS . CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    CORCHETE_I      shift and go to state 303


state 189

    (173) while -> WHILE PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 304


state 190

    (226) condicional -> valorC logicos . condicional
    (226) condicional -> . valorC logicos condicional
    (227) condicional -> . valorC
    (228) valorC -> . VARIABLE
    (229) valorC -> . booleanos
    (230) valorC -> . relacional
    (231) valorC -> . NOT VARIABLE
    (232) valorC -> . NOT booleanos
    (233) valorC -> . NOT relacional
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE
    (237) relacional -> . numeros comparacion numeros
    (238) relacional -> . aritmetica comparacion aritmetica
    (239) relacional -> . aritmetica comparacion numeros
    (240) relacional -> . numeros comparacion aritmetica
    (241) relacional -> . booleanos comparacion booleanos
    (242) relacional -> . STRING comparacion STRING
    (243) relacional -> . CHAR comparacion CHAR
    (244) relacional -> . VARIABLE comparacion numeros
    (245) relacional -> . numeros comparacion VARIABLE
    (246) relacional -> . VARIABLE comparacion booleanos
    (247) relacional -> . booleanos comparacion VARIABLE
    (248) relacional -> . VARIABLE comparacion STRING
    (249) relacional -> . STRING comparacion VARIABLE
    (250) relacional -> . VARIABLE comparacion CHAR
    (251) relacional -> . CHAR comparacion VARIABLE
    (252) relacional -> . VARIABLE comparacion VARIABLE
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 85
    NOT             shift and go to state 88
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71
    STRING          shift and go to state 91
    CHAR            shift and go to state 92
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    valorC                         shift and go to state 84
    condicional                    shift and go to state 305
    booleanos                      shift and go to state 86
    relacional                     shift and go to state 87
    numeros                        shift and go to state 89
    aritmetica                     shift and go to state 90

state 191

    (234) logicos -> AND .

    VARIABLE        reduce using rule 234 (logicos -> AND .)
    NOT             reduce using rule 234 (logicos -> AND .)
    TRUE            reduce using rule 234 (logicos -> AND .)
    FLASE           reduce using rule 234 (logicos -> AND .)
    STRING          reduce using rule 234 (logicos -> AND .)
    CHAR            reduce using rule 234 (logicos -> AND .)
    INT             reduce using rule 234 (logicos -> AND .)
    LONG            reduce using rule 234 (logicos -> AND .)
    FLOAT           reduce using rule 234 (logicos -> AND .)
    DOUBLE          reduce using rule 234 (logicos -> AND .)


state 192

    (235) logicos -> OR .

    VARIABLE        reduce using rule 235 (logicos -> OR .)
    NOT             reduce using rule 235 (logicos -> OR .)
    TRUE            reduce using rule 235 (logicos -> OR .)
    FLASE           reduce using rule 235 (logicos -> OR .)
    STRING          reduce using rule 235 (logicos -> OR .)
    CHAR            reduce using rule 235 (logicos -> OR .)
    INT             reduce using rule 235 (logicos -> OR .)
    LONG            reduce using rule 235 (logicos -> OR .)
    FLOAT           reduce using rule 235 (logicos -> OR .)
    DOUBLE          reduce using rule 235 (logicos -> OR .)


state 193

    (236) logicos -> NOT .

    VARIABLE        reduce using rule 236 (logicos -> NOT .)
    NOT             reduce using rule 236 (logicos -> NOT .)
    TRUE            reduce using rule 236 (logicos -> NOT .)
    FLASE           reduce using rule 236 (logicos -> NOT .)
    STRING          reduce using rule 236 (logicos -> NOT .)
    CHAR            reduce using rule 236 (logicos -> NOT .)
    INT             reduce using rule 236 (logicos -> NOT .)
    LONG            reduce using rule 236 (logicos -> NOT .)
    FLOAT           reduce using rule 236 (logicos -> NOT .)
    DOUBLE          reduce using rule 236 (logicos -> NOT .)


state 194

    (244) relacional -> VARIABLE comparacion . numeros
    (246) relacional -> VARIABLE comparacion . booleanos
    (248) relacional -> VARIABLE comparacion . STRING
    (250) relacional -> VARIABLE comparacion . CHAR
    (252) relacional -> VARIABLE comparacion . VARIABLE
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    STRING          shift and go to state 309
    CHAR            shift and go to state 310
    VARIABLE        shift and go to state 306
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    numeros                        shift and go to state 307
    booleanos                      shift and go to state 308

state 195

    (258) aritmetica -> VARIABLE aritmeticos . numeros
    (260) aritmetica -> VARIABLE aritmeticos . VARIABLE
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VARIABLE        shift and go to state 311
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    numeros                        shift and go to state 312

state 196

    (253) comparacion -> IGUAL_COMPARACION .

    STRING          reduce using rule 253 (comparacion -> IGUAL_COMPARACION .)
    CHAR            reduce using rule 253 (comparacion -> IGUAL_COMPARACION .)
    VARIABLE        reduce using rule 253 (comparacion -> IGUAL_COMPARACION .)
    INT             reduce using rule 253 (comparacion -> IGUAL_COMPARACION .)
    LONG            reduce using rule 253 (comparacion -> IGUAL_COMPARACION .)
    FLOAT           reduce using rule 253 (comparacion -> IGUAL_COMPARACION .)
    DOUBLE          reduce using rule 253 (comparacion -> IGUAL_COMPARACION .)
    TRUE            reduce using rule 253 (comparacion -> IGUAL_COMPARACION .)
    FLASE           reduce using rule 253 (comparacion -> IGUAL_COMPARACION .)


state 197

    (254) comparacion -> DIFERENTE .

    STRING          reduce using rule 254 (comparacion -> DIFERENTE .)
    CHAR            reduce using rule 254 (comparacion -> DIFERENTE .)
    VARIABLE        reduce using rule 254 (comparacion -> DIFERENTE .)
    INT             reduce using rule 254 (comparacion -> DIFERENTE .)
    LONG            reduce using rule 254 (comparacion -> DIFERENTE .)
    FLOAT           reduce using rule 254 (comparacion -> DIFERENTE .)
    DOUBLE          reduce using rule 254 (comparacion -> DIFERENTE .)
    TRUE            reduce using rule 254 (comparacion -> DIFERENTE .)
    FLASE           reduce using rule 254 (comparacion -> DIFERENTE .)


state 198

    (255) comparacion -> MAYOR .

    STRING          reduce using rule 255 (comparacion -> MAYOR .)
    CHAR            reduce using rule 255 (comparacion -> MAYOR .)
    VARIABLE        reduce using rule 255 (comparacion -> MAYOR .)
    INT             reduce using rule 255 (comparacion -> MAYOR .)
    LONG            reduce using rule 255 (comparacion -> MAYOR .)
    FLOAT           reduce using rule 255 (comparacion -> MAYOR .)
    DOUBLE          reduce using rule 255 (comparacion -> MAYOR .)
    TRUE            reduce using rule 255 (comparacion -> MAYOR .)
    FLASE           reduce using rule 255 (comparacion -> MAYOR .)


state 199

    (256) comparacion -> MENOR .

    STRING          reduce using rule 256 (comparacion -> MENOR .)
    CHAR            reduce using rule 256 (comparacion -> MENOR .)
    VARIABLE        reduce using rule 256 (comparacion -> MENOR .)
    INT             reduce using rule 256 (comparacion -> MENOR .)
    LONG            reduce using rule 256 (comparacion -> MENOR .)
    FLOAT           reduce using rule 256 (comparacion -> MENOR .)
    DOUBLE          reduce using rule 256 (comparacion -> MENOR .)
    TRUE            reduce using rule 256 (comparacion -> MENOR .)
    FLASE           reduce using rule 256 (comparacion -> MENOR .)


state 200

    (263) aritmeticos -> MENOS .

    VARIABLE        reduce using rule 263 (aritmeticos -> MENOS .)
    INT             reduce using rule 263 (aritmeticos -> MENOS .)
    LONG            reduce using rule 263 (aritmeticos -> MENOS .)
    FLOAT           reduce using rule 263 (aritmeticos -> MENOS .)
    DOUBLE          reduce using rule 263 (aritmeticos -> MENOS .)


state 201

    (264) aritmeticos -> MAS .

    VARIABLE        reduce using rule 264 (aritmeticos -> MAS .)
    INT             reduce using rule 264 (aritmeticos -> MAS .)
    LONG            reduce using rule 264 (aritmeticos -> MAS .)
    FLOAT           reduce using rule 264 (aritmeticos -> MAS .)
    DOUBLE          reduce using rule 264 (aritmeticos -> MAS .)


state 202

    (265) aritmeticos -> MULTIPLICACION .

    VARIABLE        reduce using rule 265 (aritmeticos -> MULTIPLICACION .)
    INT             reduce using rule 265 (aritmeticos -> MULTIPLICACION .)
    LONG            reduce using rule 265 (aritmeticos -> MULTIPLICACION .)
    FLOAT           reduce using rule 265 (aritmeticos -> MULTIPLICACION .)
    DOUBLE          reduce using rule 265 (aritmeticos -> MULTIPLICACION .)


state 203

    (266) aritmeticos -> DIVISION .

    VARIABLE        reduce using rule 266 (aritmeticos -> DIVISION .)
    INT             reduce using rule 266 (aritmeticos -> DIVISION .)
    LONG            reduce using rule 266 (aritmeticos -> DIVISION .)
    FLOAT           reduce using rule 266 (aritmeticos -> DIVISION .)
    DOUBLE          reduce using rule 266 (aritmeticos -> DIVISION .)


state 204

    (267) aritmeticos -> MOD .

    VARIABLE        reduce using rule 267 (aritmeticos -> MOD .)
    INT             reduce using rule 267 (aritmeticos -> MOD .)
    LONG            reduce using rule 267 (aritmeticos -> MOD .)
    FLOAT           reduce using rule 267 (aritmeticos -> MOD .)
    DOUBLE          reduce using rule 267 (aritmeticos -> MOD .)


state 205

    (241) relacional -> booleanos comparacion . booleanos
    (247) relacional -> booleanos comparacion . VARIABLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    VARIABLE        shift and go to state 314
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    booleanos                      shift and go to state 313

state 206

    (231) valorC -> NOT VARIABLE .
    (244) relacional -> VARIABLE . comparacion numeros
    (246) relacional -> VARIABLE . comparacion booleanos
    (248) relacional -> VARIABLE . comparacion STRING
    (250) relacional -> VARIABLE . comparacion CHAR
    (252) relacional -> VARIABLE . comparacion VARIABLE
    (258) aritmetica -> VARIABLE . aritmeticos numeros
    (260) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (253) comparacion -> . IGUAL_COMPARACION
    (254) comparacion -> . DIFERENTE
    (255) comparacion -> . MAYOR
    (256) comparacion -> . MENOR
    (263) aritmeticos -> . MENOS
    (264) aritmeticos -> . MAS
    (265) aritmeticos -> . MULTIPLICACION
    (266) aritmeticos -> . DIVISION
    (267) aritmeticos -> . MOD

    AND             reduce using rule 231 (valorC -> NOT VARIABLE .)
    OR              reduce using rule 231 (valorC -> NOT VARIABLE .)
    NOT             reduce using rule 231 (valorC -> NOT VARIABLE .)
    PAR_D           reduce using rule 231 (valorC -> NOT VARIABLE .)
    IGUAL_COMPARACION shift and go to state 196
    DIFERENTE       shift and go to state 197
    MAYOR           shift and go to state 198
    MENOR           shift and go to state 199
    MENOS           shift and go to state 200
    MAS             shift and go to state 201
    MULTIPLICACION  shift and go to state 202
    DIVISION        shift and go to state 203
    MOD             shift and go to state 204

    comparacion                    shift and go to state 194
    aritmeticos                    shift and go to state 195

state 207

    (232) valorC -> NOT booleanos .
    (241) relacional -> booleanos . comparacion booleanos
    (247) relacional -> booleanos . comparacion VARIABLE
    (253) comparacion -> . IGUAL_COMPARACION
    (254) comparacion -> . DIFERENTE
    (255) comparacion -> . MAYOR
    (256) comparacion -> . MENOR

    AND             reduce using rule 232 (valorC -> NOT booleanos .)
    OR              reduce using rule 232 (valorC -> NOT booleanos .)
    NOT             reduce using rule 232 (valorC -> NOT booleanos .)
    PAR_D           reduce using rule 232 (valorC -> NOT booleanos .)
    IGUAL_COMPARACION shift and go to state 196
    DIFERENTE       shift and go to state 197
    MAYOR           shift and go to state 198
    MENOR           shift and go to state 199

    comparacion                    shift and go to state 205

state 208

    (233) valorC -> NOT relacional .

    AND             reduce using rule 233 (valorC -> NOT relacional .)
    OR              reduce using rule 233 (valorC -> NOT relacional .)
    NOT             reduce using rule 233 (valorC -> NOT relacional .)
    PAR_D           reduce using rule 233 (valorC -> NOT relacional .)


state 209

    (237) relacional -> numeros comparacion . numeros
    (240) relacional -> numeros comparacion . aritmetica
    (245) relacional -> numeros comparacion . VARIABLE
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 317
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    numeros                        shift and go to state 315
    aritmetica                     shift and go to state 316

state 210

    (257) aritmetica -> numeros aritmeticos . numeros
    (259) aritmetica -> numeros aritmeticos . VARIABLE
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VARIABLE        shift and go to state 319
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    numeros                        shift and go to state 318

state 211

    (238) relacional -> aritmetica comparacion . aritmetica
    (239) relacional -> aritmetica comparacion . numeros
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VARIABLE        shift and go to state 322
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    aritmetica                     shift and go to state 320
    numeros                        shift and go to state 321

state 212

    (261) aritmetica -> aritmetica aritmeticos . numeros
    (262) aritmetica -> aritmetica aritmeticos . VARIABLE
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VARIABLE        shift and go to state 324
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    numeros                        shift and go to state 323

state 213

    (242) relacional -> STRING comparacion . STRING
    (249) relacional -> STRING comparacion . VARIABLE

    STRING          shift and go to state 325
    VARIABLE        shift and go to state 326


state 214

    (243) relacional -> CHAR comparacion . CHAR
    (251) relacional -> CHAR comparacion . VARIABLE

    CHAR            shift and go to state 327
    VARIABLE        shift and go to state 328


state 215

    (174) for -> FOR PAR_I VAR VARIABLE . ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> FOR PAR_I VAR VARIABLE . ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> FOR PAR_I VAR VARIABLE . ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    ITERATOR        shift and go to state 329


state 216

    (175) for -> FOR PAR_I VARIABLE ITERATOR . VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> FOR PAR_I VARIABLE ITERATOR . INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> FOR PAR_I VARIABLE ITERATOR . INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 330
    INT             shift and go to state 331


state 217

    (219) if -> IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 332


state 218

    (222) elseif -> ELSE IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D
    (223) elseif -> ELSE IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D elseif

    PAR_D           shift and go to state 333


state 219

    (224) else -> ELSE LLAVE_I contenido LLAVE_D .

    ELSE            reduce using rule 224 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 224 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 224 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 224 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 224 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 224 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 224 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 224 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 224 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 224 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 224 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 224 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 224 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 224 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 224 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 224 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 224 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 224 (else -> ELSE LLAVE_I contenido LLAVE_D .)


state 220

    (26) contenido -> asignacion contenido .

    LLAVE_D         reduce using rule 26 (contenido -> asignacion contenido .)
    RETURN          reduce using rule 26 (contenido -> asignacion contenido .)


state 221

    (27) contenido -> reasignacion contenido .

    LLAVE_D         reduce using rule 27 (contenido -> reasignacion contenido .)
    RETURN          reduce using rule 27 (contenido -> reasignacion contenido .)


state 222

    (28) contenido -> funcall contenido .

    LLAVE_D         reduce using rule 28 (contenido -> funcall contenido .)
    RETURN          reduce using rule 28 (contenido -> funcall contenido .)


state 223

    (29) contenido -> impresion contenido .

    LLAVE_D         reduce using rule 29 (contenido -> impresion contenido .)
    RETURN          reduce using rule 29 (contenido -> impresion contenido .)


state 224

    (30) contenido -> entrada contenido .

    LLAVE_D         reduce using rule 30 (contenido -> entrada contenido .)
    RETURN          reduce using rule 30 (contenido -> entrada contenido .)


state 225

    (31) contenido -> while contenido .

    LLAVE_D         reduce using rule 31 (contenido -> while contenido .)
    RETURN          reduce using rule 31 (contenido -> while contenido .)


state 226

    (32) contenido -> for contenido .

    LLAVE_D         reduce using rule 32 (contenido -> for contenido .)
    RETURN          reduce using rule 32 (contenido -> for contenido .)


state 227

    (34) contenido -> match contenido .

    LLAVE_D         reduce using rule 34 (contenido -> match contenido .)
    RETURN          reduce using rule 34 (contenido -> match contenido .)


state 228

    (33) contenido -> if contenido .

    LLAVE_D         reduce using rule 33 (contenido -> if contenido .)
    RETURN          reduce using rule 33 (contenido -> if contenido .)


state 229

    (35) contenido -> aritmetica contenido .

    LLAVE_D         reduce using rule 35 (contenido -> aritmetica contenido .)
    RETURN          reduce using rule 35 (contenido -> aritmetica contenido .)


state 230

    (98) reasignacion -> VARIABLE IGUAL . valor
    (99) reasignacion -> VARIABLE IGUAL . returnfun
    (100) reasignacion -> VARIABLE IGUAL . aritmetica
    (109) valor -> . STRING
    (110) valor -> . CHAR
    (111) valor -> . VARIABLE
    (112) valor -> . numeros
    (113) valor -> . booleanos
    (147) returnfun -> . returnCastable
    (148) returnfun -> . castingcall
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE
    (149) returnCastable -> . entrada
    (150) returnCastable -> . funcall
    (151) castingcall -> . returnCastable PUNTO castingfun
    (152) castingcall -> . VARIABLE PUNTO castingfun
    (144) entrada -> . READLINE PAR_I PAR_D
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 334
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71
    READLINE        shift and go to state 15

    valor                          shift and go to state 335
    returnfun                      shift and go to state 336
    aritmetica                     shift and go to state 337
    numeros                        shift and go to state 338
    booleanos                      shift and go to state 65
    returnCastable                 shift and go to state 152
    castingcall                    shift and go to state 153
    entrada                        shift and go to state 154
    funcall                        shift and go to state 155

state 231

    (101) reasignacion -> VARIABLE PAR_I . INT PAR_D IGUAL valor
    (145) funcall -> VARIABLE PAR_I . valores PAR_D
    (146) funcall -> VARIABLE PAR_I . PAR_D
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (109) valor -> . STRING
    (110) valor -> . CHAR
    (111) valor -> . VARIABLE
    (112) valor -> . numeros
    (113) valor -> . booleanos
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    INT             shift and go to state 339
    PAR_D           shift and go to state 60
    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valor                          shift and go to state 61
    valores                        shift and go to state 59
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 232

    (120) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 340
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 233

    (121) funcion -> DEF VARIABLE parametro LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 341


state 234

    (128) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN returnfun LLAVE_D

    LLAVE_I         shift and go to state 342


state 235

    (131) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN returnfun LLAVE_D

    LLAVE_I         shift and go to state 343


state 236

    (134) dectipo -> DOBLE_PUNTO tipo .

    IGUAL           reduce using rule 134 (dectipo -> DOBLE_PUNTO tipo .)


state 237

    (102) tipo -> CHARCLASS .

    IGUAL           reduce using rule 102 (tipo -> CHARCLASS .)
    COMA            reduce using rule 102 (tipo -> CHARCLASS .)
    PAR_D           reduce using rule 102 (tipo -> CHARCLASS .)
    CORCHETE_D      reduce using rule 102 (tipo -> CHARCLASS .)


state 238

    (103) tipo -> STRINGCLASS .

    IGUAL           reduce using rule 103 (tipo -> STRINGCLASS .)
    COMA            reduce using rule 103 (tipo -> STRINGCLASS .)
    PAR_D           reduce using rule 103 (tipo -> STRINGCLASS .)
    CORCHETE_D      reduce using rule 103 (tipo -> STRINGCLASS .)


state 239

    (104) tipo -> BOOLCLASS .

    IGUAL           reduce using rule 104 (tipo -> BOOLCLASS .)
    COMA            reduce using rule 104 (tipo -> BOOLCLASS .)
    PAR_D           reduce using rule 104 (tipo -> BOOLCLASS .)
    CORCHETE_D      reduce using rule 104 (tipo -> BOOLCLASS .)


state 240

    (105) tipo -> INTCLASS .

    IGUAL           reduce using rule 105 (tipo -> INTCLASS .)
    COMA            reduce using rule 105 (tipo -> INTCLASS .)
    PAR_D           reduce using rule 105 (tipo -> INTCLASS .)
    CORCHETE_D      reduce using rule 105 (tipo -> INTCLASS .)


state 241

    (106) tipo -> LONGCLASS .

    IGUAL           reduce using rule 106 (tipo -> LONGCLASS .)
    COMA            reduce using rule 106 (tipo -> LONGCLASS .)
    PAR_D           reduce using rule 106 (tipo -> LONGCLASS .)
    CORCHETE_D      reduce using rule 106 (tipo -> LONGCLASS .)


state 242

    (107) tipo -> DOUBLECLASS .

    IGUAL           reduce using rule 107 (tipo -> DOUBLECLASS .)
    COMA            reduce using rule 107 (tipo -> DOUBLECLASS .)
    PAR_D           reduce using rule 107 (tipo -> DOUBLECLASS .)
    CORCHETE_D      reduce using rule 107 (tipo -> DOUBLECLASS .)


state 243

    (108) tipo -> FLOATCLASS .

    IGUAL           reduce using rule 108 (tipo -> FLOATCLASS .)
    COMA            reduce using rule 108 (tipo -> FLOATCLASS .)
    PAR_D           reduce using rule 108 (tipo -> FLOATCLASS .)
    CORCHETE_D      reduce using rule 108 (tipo -> FLOATCLASS .)


state 244

    (126) parametros -> PAR_I declaracion PAR_D .
    (127) parametros -> PAR_I declaracion PAR_D . parametros
    (126) parametros -> . PAR_I declaracion PAR_D
    (127) parametros -> . PAR_I declaracion PAR_D parametros

    IGUAL           reduce using rule 126 (parametros -> PAR_I declaracion PAR_D .)
    LLAVE_I         reduce using rule 126 (parametros -> PAR_I declaracion PAR_D .)
    DOBLE_PUNTO     reduce using rule 126 (parametros -> PAR_I declaracion PAR_D .)
    PAR_I           shift and go to state 344

    parametros                     shift and go to state 345

state 245

    (122) declaracion -> VARIABLE DOBLE_PUNTO . tipo
    (123) declaracion -> VARIABLE DOBLE_PUNTO . tipo IGUAL valor
    (102) tipo -> . CHARCLASS
    (103) tipo -> . STRINGCLASS
    (104) tipo -> . BOOLCLASS
    (105) tipo -> . INTCLASS
    (106) tipo -> . LONGCLASS
    (107) tipo -> . DOUBLECLASS
    (108) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 237
    STRINGCLASS     shift and go to state 238
    BOOLCLASS       shift and go to state 239
    INTCLASS        shift and go to state 240
    LONGCLASS       shift and go to state 241
    DOUBLECLASS     shift and go to state 242
    FLOATCLASS      shift and go to state 243

    tipo                           shift and go to state 346

state 246

    (167) valores -> valor COMA valores .

    PAR_D           reduce using rule 167 (valores -> valor COMA valores .)


state 247

    (180) match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .

    DEF             reduce using rule 180 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VARIABLE        reduce using rule 180 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    PRINTLN         reduce using rule 180 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    PRINT           reduce using rule 180 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    READLINE        reduce using rule 180 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VAR             reduce using rule 180 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VAL             reduce using rule 180 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    WHILE           reduce using rule 180 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    FOR             reduce using rule 180 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    IF              reduce using rule 180 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    $end            reduce using rule 180 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    INT             reduce using rule 180 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    LONG            reduce using rule 180 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    FLOAT           reduce using rule 180 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    DOUBLE          reduce using rule 180 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    LLAVE_D         reduce using rule 180 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    RETURN          reduce using rule 180 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)


state 248

    (190) casesInt -> caseInt casesInt .

    LLAVE_D         reduce using rule 190 (casesInt -> caseInt casesInt .)


state 249

    (191) casesInt -> caseInt defcase .

    LLAVE_D         reduce using rule 191 (casesInt -> caseInt defcase .)


state 250

    (216) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (188) caseInt -> CASE . INT FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 347
    INT             shift and go to state 269


state 251

    (194) casesLgn -> caseLgn casesLgn .

    LLAVE_D         reduce using rule 194 (casesLgn -> caseLgn casesLgn .)


state 252

    (195) casesLgn -> caseLgn defcase .

    LLAVE_D         reduce using rule 195 (casesLgn -> caseLgn defcase .)


state 253

    (216) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (192) caseLgn -> CASE . LONG FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 347
    LONG            shift and go to state 270


state 254

    (198) casesFlt -> caseFlt casesFlt .

    LLAVE_D         reduce using rule 198 (casesFlt -> caseFlt casesFlt .)


state 255

    (199) casesFlt -> caseFlt defcase .

    LLAVE_D         reduce using rule 199 (casesFlt -> caseFlt defcase .)


state 256

    (216) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (196) caseFlt -> CASE . FLOAT FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 347
    FLOAT           shift and go to state 271


state 257

    (202) casesDob -> caseDob casesDob .

    LLAVE_D         reduce using rule 202 (casesDob -> caseDob casesDob .)


state 258

    (203) casesDob -> caseDob defcase .

    LLAVE_D         reduce using rule 203 (casesDob -> caseDob defcase .)


state 259

    (216) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (200) caseDob -> CASE . DOUBLE FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 347
    DOUBLE          shift and go to state 272


state 260

    (206) casesStr -> caseStr casesStr .

    LLAVE_D         reduce using rule 206 (casesStr -> caseStr casesStr .)


state 261

    (207) casesStr -> caseStr defcase .

    LLAVE_D         reduce using rule 207 (casesStr -> caseStr defcase .)


state 262

    (216) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (204) caseStr -> CASE . STRING FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 347
    STRING          shift and go to state 273


state 263

    (210) casesChar -> caseChar casesChar .

    LLAVE_D         reduce using rule 210 (casesChar -> caseChar casesChar .)


state 264

    (211) casesChar -> caseChar defcase .

    LLAVE_D         reduce using rule 211 (casesChar -> caseChar defcase .)


state 265

    (216) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (208) caseChar -> CASE . CHAR FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 347
    CHAR            shift and go to state 274


state 266

    (214) casesBool -> caseBool casesBool .

    LLAVE_D         reduce using rule 214 (casesBool -> caseBool casesBool .)


state 267

    (215) casesBool -> caseBool defcase .

    LLAVE_D         reduce using rule 215 (casesBool -> caseBool defcase .)


state 268

    (216) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (212) caseBool -> CASE . booleanos FUNCION_FLECHA codeBlock
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    SUBGUION        shift and go to state 347
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    booleanos                      shift and go to state 275

state 269

    (188) caseInt -> CASE INT . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 348


state 270

    (192) caseLgn -> CASE LONG . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 349


state 271

    (196) caseFlt -> CASE FLOAT . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 350


state 272

    (200) caseDob -> CASE DOUBLE . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 351


state 273

    (204) caseStr -> CASE STRING . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 352


state 274

    (208) caseChar -> CASE CHAR . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 353


state 275

    (212) caseBool -> CASE booleanos . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 354


state 276

    (142) valorI -> valor MAS valorI .

    PAR_D           reduce using rule 142 (valorI -> valor MAS valorI .)


state 277

    (152) castingcall -> VARIABLE PUNTO . castingfun
    (153) castingfun -> . TO_INT
    (154) castingfun -> . TO_DOUBLE
    (155) castingfun -> . TO_FLOAT
    (156) castingfun -> . TO_LONG

    TO_INT          shift and go to state 356
    TO_DOUBLE       shift and go to state 357
    TO_FLOAT        shift and go to state 358
    TO_LONG         shift and go to state 359

    castingfun                     shift and go to state 355

state 278

    (157) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (109) valor -> . STRING
    (110) valor -> . CHAR
    (111) valor -> . VARIABLE
    (112) valor -> . numeros
    (113) valor -> . booleanos
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valores                        shift and go to state 360
    valor                          shift and go to state 61
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 279

    (168) tuple -> PAR_I valores . PAR_D

    PAR_D           shift and go to state 361


state 280

    (151) castingcall -> returnCastable PUNTO . castingfun
    (153) castingfun -> . TO_INT
    (154) castingfun -> . TO_DOUBLE
    (155) castingfun -> . TO_FLOAT
    (156) castingfun -> . TO_LONG

    TO_INT          shift and go to state 356
    TO_DOUBLE       shift and go to state 357
    TO_FLOAT        shift and go to state 358
    TO_LONG         shift and go to state 359

    castingfun                     shift and go to state 362

state 281

    (171) asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .

    DEF             reduce using rule 171 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    VARIABLE        reduce using rule 171 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    PRINTLN         reduce using rule 171 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    PRINT           reduce using rule 171 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    READLINE        reduce using rule 171 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    VAR             reduce using rule 171 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    VAL             reduce using rule 171 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    WHILE           reduce using rule 171 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    FOR             reduce using rule 171 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    IF              reduce using rule 171 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    $end            reduce using rule 171 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    INT             reduce using rule 171 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    LONG            reduce using rule 171 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    FLOAT           reduce using rule 171 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    DOUBLE          reduce using rule 171 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    LLAVE_D         reduce using rule 171 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    RETURN          reduce using rule 171 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    CASE            reduce using rule 171 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)


state 282

    (57) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . LONG
    (60) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . VARIABLE

    LONG            shift and go to state 364
    VARIABLE        shift and go to state 363


state 283

    (63) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL . INT
    (66) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL . VARIABLE

    INT             shift and go to state 366
    VARIABLE        shift and go to state 365


state 284

    (69) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . FLOAT
    (72) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . VARIABLE

    FLOAT           shift and go to state 368
    VARIABLE        shift and go to state 367


state 285

    (75) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . DOUBLE
    (78) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . VARIABLE

    DOUBLE          shift and go to state 370
    VARIABLE        shift and go to state 369


state 286

    (81) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . STRING
    (84) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . VARIABLE

    STRING          shift and go to state 372
    VARIABLE        shift and go to state 371


state 287

    (87) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . CHAR
    (90) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . VARIABLE

    CHAR            shift and go to state 374
    VARIABLE        shift and go to state 373


state 288

    (93) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . booleanos
    (96) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . VARIABLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    VARIABLE        shift and go to state 375
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    booleanos                      shift and go to state 376

state 289

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (102) tipo -> . CHARCLASS
    (103) tipo -> . STRINGCLASS
    (104) tipo -> . BOOLCLASS
    (105) tipo -> . INTCLASS
    (106) tipo -> . LONGCLASS
    (107) tipo -> . DOUBLECLASS
    (108) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 237
    STRINGCLASS     shift and go to state 238
    BOOLCLASS       shift and go to state 239
    INTCLASS        shift and go to state 240
    LONGCLASS       shift and go to state 241
    DOUBLECLASS     shift and go to state 242
    FLOATCLASS      shift and go to state 243

    tipo                           shift and go to state 377

state 290

    (135) dectipoTupla -> DOBLE_PUNTO PAR_I tipos . PAR_D

    PAR_D           shift and go to state 378


state 291

    (136) tipos -> tipo .
    (137) tipos -> tipo . tiposentry
    (138) tiposentry -> . COMA tipo
    (139) tiposentry -> . COMA tipo tiposentry

    PAR_D           reduce using rule 136 (tipos -> tipo .)
    COMA            shift and go to state 380

    tiposentry                     shift and go to state 379

state 292

    (160) array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (109) valor -> . STRING
    (110) valor -> . CHAR
    (111) valor -> . VARIABLE
    (112) valor -> . numeros
    (113) valor -> . booleanos
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valores                        shift and go to state 381
    valor                          shift and go to state 61
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 293

    (163) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I . valores PAR_D
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (109) valor -> . STRING
    (110) valor -> . CHAR
    (111) valor -> . VARIABLE
    (112) valor -> . numeros
    (113) valor -> . booleanos
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valores                        shift and go to state 382
    valor                          shift and go to state 61
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 294

    (172) asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .

    DEF             reduce using rule 172 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    VARIABLE        reduce using rule 172 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    PRINTLN         reduce using rule 172 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    PRINT           reduce using rule 172 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    READLINE        reduce using rule 172 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    VAR             reduce using rule 172 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    VAL             reduce using rule 172 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    WHILE           reduce using rule 172 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    FOR             reduce using rule 172 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    IF              reduce using rule 172 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    $end            reduce using rule 172 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    INT             reduce using rule 172 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    LONG            reduce using rule 172 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    FLOAT           reduce using rule 172 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    DOUBLE          reduce using rule 172 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    LLAVE_D         reduce using rule 172 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    RETURN          reduce using rule 172 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    CASE            reduce using rule 172 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)


state 295

    (59) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . LONG
    (61) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . VARIABLE

    LONG            shift and go to state 384
    VARIABLE        shift and go to state 383


state 296

    (65) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL . INT
    (67) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL . VARIABLE

    INT             shift and go to state 386
    VARIABLE        shift and go to state 385


state 297

    (71) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . FLOAT
    (73) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . VARIABLE

    FLOAT           shift and go to state 388
    VARIABLE        shift and go to state 387


state 298

    (77) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . DOUBLE
    (79) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . VARIABLE

    DOUBLE          shift and go to state 390
    VARIABLE        shift and go to state 389


state 299

    (83) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . STRING
    (85) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . VARIABLE

    STRING          shift and go to state 392
    VARIABLE        shift and go to state 391


state 300

    (89) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . CHAR
    (91) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . VARIABLE

    CHAR            shift and go to state 394
    VARIABLE        shift and go to state 393


state 301

    (95) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . booleanos
    (97) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . VARIABLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    VARIABLE        shift and go to state 395
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    booleanos                      shift and go to state 396

state 302

    (161) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (102) tipo -> . CHARCLASS
    (103) tipo -> . STRINGCLASS
    (104) tipo -> . BOOLCLASS
    (105) tipo -> . INTCLASS
    (106) tipo -> . LONGCLASS
    (107) tipo -> . DOUBLECLASS
    (108) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 237
    STRINGCLASS     shift and go to state 238
    BOOLCLASS       shift and go to state 239
    INTCLASS        shift and go to state 240
    LONGCLASS       shift and go to state 241
    DOUBLECLASS     shift and go to state 242
    FLOATCLASS      shift and go to state 243

    tipo                           shift and go to state 397

state 303

    (164) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I . tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I . tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (102) tipo -> . CHARCLASS
    (103) tipo -> . STRINGCLASS
    (104) tipo -> . BOOLCLASS
    (105) tipo -> . INTCLASS
    (106) tipo -> . LONGCLASS
    (107) tipo -> . DOUBLECLASS
    (108) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 237
    STRINGCLASS     shift and go to state 238
    BOOLCLASS       shift and go to state 239
    INTCLASS        shift and go to state 240
    LONGCLASS       shift and go to state 241
    DOUBLECLASS     shift and go to state 242
    FLOATCLASS      shift and go to state 243

    tipo                           shift and go to state 398

state 304

    (173) while -> WHILE PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 399
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 305

    (226) condicional -> valorC logicos condicional .

    PAR_D           reduce using rule 226 (condicional -> valorC logicos condicional .)


state 306

    (252) relacional -> VARIABLE comparacion VARIABLE .

    AND             reduce using rule 252 (relacional -> VARIABLE comparacion VARIABLE .)
    OR              reduce using rule 252 (relacional -> VARIABLE comparacion VARIABLE .)
    NOT             reduce using rule 252 (relacional -> VARIABLE comparacion VARIABLE .)
    PAR_D           reduce using rule 252 (relacional -> VARIABLE comparacion VARIABLE .)


state 307

    (244) relacional -> VARIABLE comparacion numeros .

    AND             reduce using rule 244 (relacional -> VARIABLE comparacion numeros .)
    OR              reduce using rule 244 (relacional -> VARIABLE comparacion numeros .)
    NOT             reduce using rule 244 (relacional -> VARIABLE comparacion numeros .)
    PAR_D           reduce using rule 244 (relacional -> VARIABLE comparacion numeros .)


state 308

    (246) relacional -> VARIABLE comparacion booleanos .

    AND             reduce using rule 246 (relacional -> VARIABLE comparacion booleanos .)
    OR              reduce using rule 246 (relacional -> VARIABLE comparacion booleanos .)
    NOT             reduce using rule 246 (relacional -> VARIABLE comparacion booleanos .)
    PAR_D           reduce using rule 246 (relacional -> VARIABLE comparacion booleanos .)


state 309

    (248) relacional -> VARIABLE comparacion STRING .

    AND             reduce using rule 248 (relacional -> VARIABLE comparacion STRING .)
    OR              reduce using rule 248 (relacional -> VARIABLE comparacion STRING .)
    NOT             reduce using rule 248 (relacional -> VARIABLE comparacion STRING .)
    PAR_D           reduce using rule 248 (relacional -> VARIABLE comparacion STRING .)


state 310

    (250) relacional -> VARIABLE comparacion CHAR .

    AND             reduce using rule 250 (relacional -> VARIABLE comparacion CHAR .)
    OR              reduce using rule 250 (relacional -> VARIABLE comparacion CHAR .)
    NOT             reduce using rule 250 (relacional -> VARIABLE comparacion CHAR .)
    PAR_D           reduce using rule 250 (relacional -> VARIABLE comparacion CHAR .)


state 311

    (260) aritmetica -> VARIABLE aritmeticos VARIABLE .

    IGUAL_COMPARACION reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MAYOR           reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MENOR           reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MENOS           reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MAS             reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DIVISION        reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MOD             reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VAR             reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VAL             reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PRINT           reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    READLINE        reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    WHILE           reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    FOR             reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    IF              reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    INT             reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    LONG            reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    FLOAT           reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DEF             reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    $end            reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    RETURN          reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    CASE            reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    AND             reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    OR              reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    NOT             reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PAR_D           reduce using rule 260 (aritmetica -> VARIABLE aritmeticos VARIABLE .)


state 312

    (258) aritmetica -> VARIABLE aritmeticos numeros .

    IGUAL_COMPARACION reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    DIFERENTE       reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    MAYOR           reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    MENOR           reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    MENOS           reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    MAS             reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    DIVISION        reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    MOD             reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    VAR             reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    VAL             reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    VARIABLE        reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    PRINTLN         reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    PRINT           reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    READLINE        reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    WHILE           reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    FOR             reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    IF              reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    INT             reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    LONG            reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    FLOAT           reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    DOUBLE          reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    LLAVE_D         reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    DEF             reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    $end            reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    RETURN          reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    CASE            reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    AND             reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    OR              reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    NOT             reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)
    PAR_D           reduce using rule 258 (aritmetica -> VARIABLE aritmeticos numeros .)


state 313

    (241) relacional -> booleanos comparacion booleanos .

    AND             reduce using rule 241 (relacional -> booleanos comparacion booleanos .)
    OR              reduce using rule 241 (relacional -> booleanos comparacion booleanos .)
    NOT             reduce using rule 241 (relacional -> booleanos comparacion booleanos .)
    PAR_D           reduce using rule 241 (relacional -> booleanos comparacion booleanos .)


state 314

    (247) relacional -> booleanos comparacion VARIABLE .

    AND             reduce using rule 247 (relacional -> booleanos comparacion VARIABLE .)
    OR              reduce using rule 247 (relacional -> booleanos comparacion VARIABLE .)
    NOT             reduce using rule 247 (relacional -> booleanos comparacion VARIABLE .)
    PAR_D           reduce using rule 247 (relacional -> booleanos comparacion VARIABLE .)


state 315

    (237) relacional -> numeros comparacion numeros .
    (257) aritmetica -> numeros . aritmeticos numeros
    (259) aritmetica -> numeros . aritmeticos VARIABLE
    (263) aritmeticos -> . MENOS
    (264) aritmeticos -> . MAS
    (265) aritmeticos -> . MULTIPLICACION
    (266) aritmeticos -> . DIVISION
    (267) aritmeticos -> . MOD

    AND             reduce using rule 237 (relacional -> numeros comparacion numeros .)
    OR              reduce using rule 237 (relacional -> numeros comparacion numeros .)
    NOT             reduce using rule 237 (relacional -> numeros comparacion numeros .)
    PAR_D           reduce using rule 237 (relacional -> numeros comparacion numeros .)
    MENOS           shift and go to state 200
    MAS             shift and go to state 201
    MULTIPLICACION  shift and go to state 202
    DIVISION        shift and go to state 203
    MOD             shift and go to state 204

    aritmeticos                    shift and go to state 210

state 316

    (240) relacional -> numeros comparacion aritmetica .
    (261) aritmetica -> aritmetica . aritmeticos numeros
    (262) aritmetica -> aritmetica . aritmeticos VARIABLE
    (263) aritmeticos -> . MENOS
    (264) aritmeticos -> . MAS
    (265) aritmeticos -> . MULTIPLICACION
    (266) aritmeticos -> . DIVISION
    (267) aritmeticos -> . MOD

    AND             reduce using rule 240 (relacional -> numeros comparacion aritmetica .)
    OR              reduce using rule 240 (relacional -> numeros comparacion aritmetica .)
    NOT             reduce using rule 240 (relacional -> numeros comparacion aritmetica .)
    PAR_D           reduce using rule 240 (relacional -> numeros comparacion aritmetica .)
    MENOS           shift and go to state 200
    MAS             shift and go to state 201
    MULTIPLICACION  shift and go to state 202
    DIVISION        shift and go to state 203
    MOD             shift and go to state 204

    aritmeticos                    shift and go to state 212

state 317

    (245) relacional -> numeros comparacion VARIABLE .
    (258) aritmetica -> VARIABLE . aritmeticos numeros
    (260) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (263) aritmeticos -> . MENOS
    (264) aritmeticos -> . MAS
    (265) aritmeticos -> . MULTIPLICACION
    (266) aritmeticos -> . DIVISION
    (267) aritmeticos -> . MOD

    AND             reduce using rule 245 (relacional -> numeros comparacion VARIABLE .)
    OR              reduce using rule 245 (relacional -> numeros comparacion VARIABLE .)
    NOT             reduce using rule 245 (relacional -> numeros comparacion VARIABLE .)
    PAR_D           reduce using rule 245 (relacional -> numeros comparacion VARIABLE .)
    MENOS           shift and go to state 200
    MAS             shift and go to state 201
    MULTIPLICACION  shift and go to state 202
    DIVISION        shift and go to state 203
    MOD             shift and go to state 204

    aritmeticos                    shift and go to state 195

state 318

    (257) aritmetica -> numeros aritmeticos numeros .

    IGUAL_COMPARACION reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    DIFERENTE       reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    MAYOR           reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    MENOR           reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    MENOS           reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    MAS             reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    DIVISION        reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    MOD             reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    VAR             reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    VAL             reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    VARIABLE        reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    PRINTLN         reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    PRINT           reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    READLINE        reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    WHILE           reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    FOR             reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    IF              reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    INT             reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    LONG            reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    FLOAT           reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    DOUBLE          reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    LLAVE_D         reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    DEF             reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    $end            reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    RETURN          reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    CASE            reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    AND             reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    OR              reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    NOT             reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)
    PAR_D           reduce using rule 257 (aritmetica -> numeros aritmeticos numeros .)


state 319

    (259) aritmetica -> numeros aritmeticos VARIABLE .

    IGUAL_COMPARACION reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    MAYOR           reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    MENOR           reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    MENOS           reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    MAS             reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    DIVISION        reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    MOD             reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    VAR             reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    VAL             reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    PRINT           reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    READLINE        reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    WHILE           reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    FOR             reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    IF              reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    INT             reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    LONG            reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    FLOAT           reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    DEF             reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    $end            reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    RETURN          reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    CASE            reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    AND             reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    OR              reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    NOT             reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)
    PAR_D           reduce using rule 259 (aritmetica -> numeros aritmeticos VARIABLE .)


state 320

    (238) relacional -> aritmetica comparacion aritmetica .
    (261) aritmetica -> aritmetica . aritmeticos numeros
    (262) aritmetica -> aritmetica . aritmeticos VARIABLE
    (263) aritmeticos -> . MENOS
    (264) aritmeticos -> . MAS
    (265) aritmeticos -> . MULTIPLICACION
    (266) aritmeticos -> . DIVISION
    (267) aritmeticos -> . MOD

    AND             reduce using rule 238 (relacional -> aritmetica comparacion aritmetica .)
    OR              reduce using rule 238 (relacional -> aritmetica comparacion aritmetica .)
    NOT             reduce using rule 238 (relacional -> aritmetica comparacion aritmetica .)
    PAR_D           reduce using rule 238 (relacional -> aritmetica comparacion aritmetica .)
    MENOS           shift and go to state 200
    MAS             shift and go to state 201
    MULTIPLICACION  shift and go to state 202
    DIVISION        shift and go to state 203
    MOD             shift and go to state 204

    aritmeticos                    shift and go to state 212

state 321

    (239) relacional -> aritmetica comparacion numeros .
    (257) aritmetica -> numeros . aritmeticos numeros
    (259) aritmetica -> numeros . aritmeticos VARIABLE
    (263) aritmeticos -> . MENOS
    (264) aritmeticos -> . MAS
    (265) aritmeticos -> . MULTIPLICACION
    (266) aritmeticos -> . DIVISION
    (267) aritmeticos -> . MOD

    AND             reduce using rule 239 (relacional -> aritmetica comparacion numeros .)
    OR              reduce using rule 239 (relacional -> aritmetica comparacion numeros .)
    NOT             reduce using rule 239 (relacional -> aritmetica comparacion numeros .)
    PAR_D           reduce using rule 239 (relacional -> aritmetica comparacion numeros .)
    MENOS           shift and go to state 200
    MAS             shift and go to state 201
    MULTIPLICACION  shift and go to state 202
    DIVISION        shift and go to state 203
    MOD             shift and go to state 204

    aritmeticos                    shift and go to state 210

state 322

    (258) aritmetica -> VARIABLE . aritmeticos numeros
    (260) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (263) aritmeticos -> . MENOS
    (264) aritmeticos -> . MAS
    (265) aritmeticos -> . MULTIPLICACION
    (266) aritmeticos -> . DIVISION
    (267) aritmeticos -> . MOD

    MENOS           shift and go to state 200
    MAS             shift and go to state 201
    MULTIPLICACION  shift and go to state 202
    DIVISION        shift and go to state 203
    MOD             shift and go to state 204

    aritmeticos                    shift and go to state 195

state 323

    (261) aritmetica -> aritmetica aritmeticos numeros .

    IGUAL_COMPARACION reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    DIFERENTE       reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    MAYOR           reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    MENOR           reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    MENOS           reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    MAS             reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    DIVISION        reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    MOD             reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    VAR             reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    VAL             reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    VARIABLE        reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    PRINTLN         reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    PRINT           reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    READLINE        reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    WHILE           reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    FOR             reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    IF              reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    INT             reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    LONG            reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    FLOAT           reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    DOUBLE          reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    LLAVE_D         reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    DEF             reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    $end            reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    RETURN          reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    CASE            reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    AND             reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    OR              reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    NOT             reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)
    PAR_D           reduce using rule 261 (aritmetica -> aritmetica aritmeticos numeros .)


state 324

    (262) aritmetica -> aritmetica aritmeticos VARIABLE .

    IGUAL_COMPARACION reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MAYOR           reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MENOR           reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MENOS           reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MAS             reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DIVISION        reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MOD             reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VAR             reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VAL             reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PRINT           reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    READLINE        reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    WHILE           reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    FOR             reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    IF              reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    INT             reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    LONG            reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    FLOAT           reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DEF             reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    $end            reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    RETURN          reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    CASE            reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    AND             reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    OR              reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    NOT             reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PAR_D           reduce using rule 262 (aritmetica -> aritmetica aritmeticos VARIABLE .)


state 325

    (242) relacional -> STRING comparacion STRING .

    AND             reduce using rule 242 (relacional -> STRING comparacion STRING .)
    OR              reduce using rule 242 (relacional -> STRING comparacion STRING .)
    NOT             reduce using rule 242 (relacional -> STRING comparacion STRING .)
    PAR_D           reduce using rule 242 (relacional -> STRING comparacion STRING .)


state 326

    (249) relacional -> STRING comparacion VARIABLE .

    AND             reduce using rule 249 (relacional -> STRING comparacion VARIABLE .)
    OR              reduce using rule 249 (relacional -> STRING comparacion VARIABLE .)
    NOT             reduce using rule 249 (relacional -> STRING comparacion VARIABLE .)
    PAR_D           reduce using rule 249 (relacional -> STRING comparacion VARIABLE .)


state 327

    (243) relacional -> CHAR comparacion CHAR .

    AND             reduce using rule 243 (relacional -> CHAR comparacion CHAR .)
    OR              reduce using rule 243 (relacional -> CHAR comparacion CHAR .)
    NOT             reduce using rule 243 (relacional -> CHAR comparacion CHAR .)
    PAR_D           reduce using rule 243 (relacional -> CHAR comparacion CHAR .)


state 328

    (251) relacional -> CHAR comparacion VARIABLE .

    AND             reduce using rule 251 (relacional -> CHAR comparacion VARIABLE .)
    OR              reduce using rule 251 (relacional -> CHAR comparacion VARIABLE .)
    NOT             reduce using rule 251 (relacional -> CHAR comparacion VARIABLE .)
    PAR_D           reduce using rule 251 (relacional -> CHAR comparacion VARIABLE .)


state 329

    (174) for -> FOR PAR_I VAR VARIABLE ITERATOR . VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> FOR PAR_I VAR VARIABLE ITERATOR . INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> FOR PAR_I VAR VARIABLE ITERATOR . INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 400
    INT             shift and go to state 401


state 330

    (175) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 402


state 331

    (176) for -> FOR PAR_I VARIABLE ITERATOR INT . TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> FOR PAR_I VARIABLE ITERATOR INT . UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    TO              shift and go to state 403
    UNTIL           shift and go to state 404


state 332

    (219) if -> IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 405
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 333

    (222) elseif -> ELSE IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D
    (223) elseif -> ELSE IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D elseif

    LLAVE_I         shift and go to state 406


state 334

    (111) valor -> VARIABLE .
    (258) aritmetica -> VARIABLE . aritmeticos numeros
    (260) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (152) castingcall -> VARIABLE . PUNTO castingfun
    (145) funcall -> VARIABLE . PAR_I valores PAR_D
    (146) funcall -> VARIABLE . PAR_I PAR_D
    (263) aritmeticos -> . MENOS
    (264) aritmeticos -> . MAS
    (265) aritmeticos -> . MULTIPLICACION
    (266) aritmeticos -> . DIVISION
    (267) aritmeticos -> . MOD

    VAR             reduce using rule 111 (valor -> VARIABLE .)
    VAL             reduce using rule 111 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 111 (valor -> VARIABLE .)
    PRINTLN         reduce using rule 111 (valor -> VARIABLE .)
    PRINT           reduce using rule 111 (valor -> VARIABLE .)
    READLINE        reduce using rule 111 (valor -> VARIABLE .)
    WHILE           reduce using rule 111 (valor -> VARIABLE .)
    FOR             reduce using rule 111 (valor -> VARIABLE .)
    IF              reduce using rule 111 (valor -> VARIABLE .)
    INT             reduce using rule 111 (valor -> VARIABLE .)
    LONG            reduce using rule 111 (valor -> VARIABLE .)
    FLOAT           reduce using rule 111 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 111 (valor -> VARIABLE .)
    LLAVE_D         reduce using rule 111 (valor -> VARIABLE .)
    RETURN          reduce using rule 111 (valor -> VARIABLE .)
    CASE            reduce using rule 111 (valor -> VARIABLE .)
    PUNTO           shift and go to state 277
    PAR_I           shift and go to state 40
    MENOS           shift and go to state 200
    MAS             shift and go to state 201
    MULTIPLICACION  shift and go to state 202
    DIVISION        shift and go to state 203
    MOD             shift and go to state 204

    aritmeticos                    shift and go to state 195

state 335

    (98) reasignacion -> VARIABLE IGUAL valor .

    VAR             reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    VAL             reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    VARIABLE        reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    PRINTLN         reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    PRINT           reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    READLINE        reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    WHILE           reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    FOR             reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    IF              reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    INT             reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    LONG            reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    FLOAT           reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    DOUBLE          reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    LLAVE_D         reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    RETURN          reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    CASE            reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)


state 336

    (99) reasignacion -> VARIABLE IGUAL returnfun .

    VAR             reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    VAL             reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    VARIABLE        reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    PRINTLN         reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    PRINT           reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    READLINE        reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    WHILE           reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    FOR             reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    IF              reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    INT             reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    LONG            reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    FLOAT           reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    DOUBLE          reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    LLAVE_D         reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    RETURN          reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    CASE            reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)


state 337

    (100) reasignacion -> VARIABLE IGUAL aritmetica .
    (261) aritmetica -> aritmetica . aritmeticos numeros
    (262) aritmetica -> aritmetica . aritmeticos VARIABLE
    (263) aritmeticos -> . MENOS
    (264) aritmeticos -> . MAS
    (265) aritmeticos -> . MULTIPLICACION
    (266) aritmeticos -> . DIVISION
    (267) aritmeticos -> . MOD

    VAR             reduce using rule 100 (reasignacion -> VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 100 (reasignacion -> VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 100 (reasignacion -> VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 100 (reasignacion -> VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 100 (reasignacion -> VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 100 (reasignacion -> VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 100 (reasignacion -> VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 100 (reasignacion -> VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 100 (reasignacion -> VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 100 (reasignacion -> VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 100 (reasignacion -> VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 100 (reasignacion -> VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 100 (reasignacion -> VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 100 (reasignacion -> VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 100 (reasignacion -> VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 100 (reasignacion -> VARIABLE IGUAL aritmetica .)
    MENOS           shift and go to state 200
    MAS             shift and go to state 201
    MULTIPLICACION  shift and go to state 202
    DIVISION        shift and go to state 203
    MOD             shift and go to state 204

    aritmeticos                    shift and go to state 212

state 338

    (112) valor -> numeros .
    (257) aritmetica -> numeros . aritmeticos numeros
    (259) aritmetica -> numeros . aritmeticos VARIABLE
    (263) aritmeticos -> . MENOS
    (264) aritmeticos -> . MAS
    (265) aritmeticos -> . MULTIPLICACION
    (266) aritmeticos -> . DIVISION
    (267) aritmeticos -> . MOD

    VAR             reduce using rule 112 (valor -> numeros .)
    VAL             reduce using rule 112 (valor -> numeros .)
    VARIABLE        reduce using rule 112 (valor -> numeros .)
    PRINTLN         reduce using rule 112 (valor -> numeros .)
    PRINT           reduce using rule 112 (valor -> numeros .)
    READLINE        reduce using rule 112 (valor -> numeros .)
    WHILE           reduce using rule 112 (valor -> numeros .)
    FOR             reduce using rule 112 (valor -> numeros .)
    IF              reduce using rule 112 (valor -> numeros .)
    INT             reduce using rule 112 (valor -> numeros .)
    LONG            reduce using rule 112 (valor -> numeros .)
    FLOAT           reduce using rule 112 (valor -> numeros .)
    DOUBLE          reduce using rule 112 (valor -> numeros .)
    LLAVE_D         reduce using rule 112 (valor -> numeros .)
    RETURN          reduce using rule 112 (valor -> numeros .)
    CASE            reduce using rule 112 (valor -> numeros .)
    MENOS           shift and go to state 200
    MAS             shift and go to state 201
    MULTIPLICACION  shift and go to state 202
    DIVISION        shift and go to state 203
    MOD             shift and go to state 204

    aritmeticos                    shift and go to state 210

state 339

    (101) reasignacion -> VARIABLE PAR_I INT . PAR_D IGUAL valor
    (116) numeros -> INT .

  ! shift/reduce conflict for PAR_D resolved as shift
    PAR_D           shift and go to state 407
    COMA            reduce using rule 116 (numeros -> INT .)

  ! PAR_D           [ reduce using rule 116 (numeros -> INT .) ]


state 340

    (120) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 408


state 341

    (121) funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)


state 342

    (128) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN valor LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN returnfun LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 409
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 343

    (131) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN tuple LLAVE_D
    (132) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN returnfun LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 410
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 344

    (126) parametros -> PAR_I . declaracion PAR_D
    (127) parametros -> PAR_I . declaracion PAR_D parametros
    (122) declaracion -> . VARIABLE DOBLE_PUNTO tipo
    (123) declaracion -> . VARIABLE DOBLE_PUNTO tipo IGUAL valor

    VARIABLE        shift and go to state 117

    declaracion                    shift and go to state 116

state 345

    (127) parametros -> PAR_I declaracion PAR_D parametros .

    IGUAL           reduce using rule 127 (parametros -> PAR_I declaracion PAR_D parametros .)
    LLAVE_I         reduce using rule 127 (parametros -> PAR_I declaracion PAR_D parametros .)
    DOBLE_PUNTO     reduce using rule 127 (parametros -> PAR_I declaracion PAR_D parametros .)


state 346

    (122) declaracion -> VARIABLE DOBLE_PUNTO tipo .
    (123) declaracion -> VARIABLE DOBLE_PUNTO tipo . IGUAL valor

    PAR_D           reduce using rule 122 (declaracion -> VARIABLE DOBLE_PUNTO tipo .)
    IGUAL           shift and go to state 411


state 347

    (216) defcase -> CASE SUBGUION . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 412


state 348

    (188) caseInt -> CASE INT FUNCION_FLECHA . codeBlock
    (217) codeBlock -> . contenidoLine
    (218) codeBlock -> . LLAVE_I contenido LLAVE_D
    (36) contenidoLine -> . asignacion
    (37) contenidoLine -> . reasignacion
    (38) contenidoLine -> . funcall
    (39) contenidoLine -> . impresion
    (40) contenidoLine -> . entrada
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 415
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 421
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15

    codeBlock                      shift and go to state 413
    contenidoLine                  shift and go to state 414
    asignacion                     shift and go to state 416
    reasignacion                   shift and go to state 417
    funcall                        shift and go to state 418
    impresion                      shift and go to state 419
    entrada                        shift and go to state 420
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 349

    (192) caseLgn -> CASE LONG FUNCION_FLECHA . codeBlock
    (217) codeBlock -> . contenidoLine
    (218) codeBlock -> . LLAVE_I contenido LLAVE_D
    (36) contenidoLine -> . asignacion
    (37) contenidoLine -> . reasignacion
    (38) contenidoLine -> . funcall
    (39) contenidoLine -> . impresion
    (40) contenidoLine -> . entrada
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 415
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 421
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15

    codeBlock                      shift and go to state 422
    contenidoLine                  shift and go to state 414
    asignacion                     shift and go to state 416
    reasignacion                   shift and go to state 417
    funcall                        shift and go to state 418
    impresion                      shift and go to state 419
    entrada                        shift and go to state 420
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 350

    (196) caseFlt -> CASE FLOAT FUNCION_FLECHA . codeBlock
    (217) codeBlock -> . contenidoLine
    (218) codeBlock -> . LLAVE_I contenido LLAVE_D
    (36) contenidoLine -> . asignacion
    (37) contenidoLine -> . reasignacion
    (38) contenidoLine -> . funcall
    (39) contenidoLine -> . impresion
    (40) contenidoLine -> . entrada
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 415
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 421
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15

    codeBlock                      shift and go to state 423
    contenidoLine                  shift and go to state 414
    asignacion                     shift and go to state 416
    reasignacion                   shift and go to state 417
    funcall                        shift and go to state 418
    impresion                      shift and go to state 419
    entrada                        shift and go to state 420
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 351

    (200) caseDob -> CASE DOUBLE FUNCION_FLECHA . codeBlock
    (217) codeBlock -> . contenidoLine
    (218) codeBlock -> . LLAVE_I contenido LLAVE_D
    (36) contenidoLine -> . asignacion
    (37) contenidoLine -> . reasignacion
    (38) contenidoLine -> . funcall
    (39) contenidoLine -> . impresion
    (40) contenidoLine -> . entrada
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 415
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 421
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15

    codeBlock                      shift and go to state 424
    contenidoLine                  shift and go to state 414
    asignacion                     shift and go to state 416
    reasignacion                   shift and go to state 417
    funcall                        shift and go to state 418
    impresion                      shift and go to state 419
    entrada                        shift and go to state 420
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 352

    (204) caseStr -> CASE STRING FUNCION_FLECHA . codeBlock
    (217) codeBlock -> . contenidoLine
    (218) codeBlock -> . LLAVE_I contenido LLAVE_D
    (36) contenidoLine -> . asignacion
    (37) contenidoLine -> . reasignacion
    (38) contenidoLine -> . funcall
    (39) contenidoLine -> . impresion
    (40) contenidoLine -> . entrada
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 415
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 421
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15

    codeBlock                      shift and go to state 425
    contenidoLine                  shift and go to state 414
    asignacion                     shift and go to state 416
    reasignacion                   shift and go to state 417
    funcall                        shift and go to state 418
    impresion                      shift and go to state 419
    entrada                        shift and go to state 420
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 353

    (208) caseChar -> CASE CHAR FUNCION_FLECHA . codeBlock
    (217) codeBlock -> . contenidoLine
    (218) codeBlock -> . LLAVE_I contenido LLAVE_D
    (36) contenidoLine -> . asignacion
    (37) contenidoLine -> . reasignacion
    (38) contenidoLine -> . funcall
    (39) contenidoLine -> . impresion
    (40) contenidoLine -> . entrada
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 415
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 421
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15

    codeBlock                      shift and go to state 426
    contenidoLine                  shift and go to state 414
    asignacion                     shift and go to state 416
    reasignacion                   shift and go to state 417
    funcall                        shift and go to state 418
    impresion                      shift and go to state 419
    entrada                        shift and go to state 420
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 354

    (212) caseBool -> CASE booleanos FUNCION_FLECHA . codeBlock
    (217) codeBlock -> . contenidoLine
    (218) codeBlock -> . LLAVE_I contenido LLAVE_D
    (36) contenidoLine -> . asignacion
    (37) contenidoLine -> . reasignacion
    (38) contenidoLine -> . funcall
    (39) contenidoLine -> . impresion
    (40) contenidoLine -> . entrada
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 415
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 421
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15

    codeBlock                      shift and go to state 427
    contenidoLine                  shift and go to state 414
    asignacion                     shift and go to state 416
    reasignacion                   shift and go to state 417
    funcall                        shift and go to state 418
    impresion                      shift and go to state 419
    entrada                        shift and go to state 420
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 355

    (152) castingcall -> VARIABLE PUNTO castingfun .

    DEF             reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    VARIABLE        reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    PRINTLN         reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    PRINT           reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    READLINE        reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    VAR             reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    VAL             reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    WHILE           reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    FOR             reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    IF              reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    $end            reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    INT             reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    LONG            reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    FLOAT           reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    DOUBLE          reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    LLAVE_D         reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    RETURN          reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    CASE            reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)


state 356

    (153) castingfun -> TO_INT .

    DEF             reduce using rule 153 (castingfun -> TO_INT .)
    VARIABLE        reduce using rule 153 (castingfun -> TO_INT .)
    PRINTLN         reduce using rule 153 (castingfun -> TO_INT .)
    PRINT           reduce using rule 153 (castingfun -> TO_INT .)
    READLINE        reduce using rule 153 (castingfun -> TO_INT .)
    VAR             reduce using rule 153 (castingfun -> TO_INT .)
    VAL             reduce using rule 153 (castingfun -> TO_INT .)
    WHILE           reduce using rule 153 (castingfun -> TO_INT .)
    FOR             reduce using rule 153 (castingfun -> TO_INT .)
    IF              reduce using rule 153 (castingfun -> TO_INT .)
    $end            reduce using rule 153 (castingfun -> TO_INT .)
    INT             reduce using rule 153 (castingfun -> TO_INT .)
    LONG            reduce using rule 153 (castingfun -> TO_INT .)
    FLOAT           reduce using rule 153 (castingfun -> TO_INT .)
    DOUBLE          reduce using rule 153 (castingfun -> TO_INT .)
    LLAVE_D         reduce using rule 153 (castingfun -> TO_INT .)
    RETURN          reduce using rule 153 (castingfun -> TO_INT .)
    CASE            reduce using rule 153 (castingfun -> TO_INT .)


state 357

    (154) castingfun -> TO_DOUBLE .

    DEF             reduce using rule 154 (castingfun -> TO_DOUBLE .)
    VARIABLE        reduce using rule 154 (castingfun -> TO_DOUBLE .)
    PRINTLN         reduce using rule 154 (castingfun -> TO_DOUBLE .)
    PRINT           reduce using rule 154 (castingfun -> TO_DOUBLE .)
    READLINE        reduce using rule 154 (castingfun -> TO_DOUBLE .)
    VAR             reduce using rule 154 (castingfun -> TO_DOUBLE .)
    VAL             reduce using rule 154 (castingfun -> TO_DOUBLE .)
    WHILE           reduce using rule 154 (castingfun -> TO_DOUBLE .)
    FOR             reduce using rule 154 (castingfun -> TO_DOUBLE .)
    IF              reduce using rule 154 (castingfun -> TO_DOUBLE .)
    $end            reduce using rule 154 (castingfun -> TO_DOUBLE .)
    INT             reduce using rule 154 (castingfun -> TO_DOUBLE .)
    LONG            reduce using rule 154 (castingfun -> TO_DOUBLE .)
    FLOAT           reduce using rule 154 (castingfun -> TO_DOUBLE .)
    DOUBLE          reduce using rule 154 (castingfun -> TO_DOUBLE .)
    LLAVE_D         reduce using rule 154 (castingfun -> TO_DOUBLE .)
    RETURN          reduce using rule 154 (castingfun -> TO_DOUBLE .)
    CASE            reduce using rule 154 (castingfun -> TO_DOUBLE .)


state 358

    (155) castingfun -> TO_FLOAT .

    DEF             reduce using rule 155 (castingfun -> TO_FLOAT .)
    VARIABLE        reduce using rule 155 (castingfun -> TO_FLOAT .)
    PRINTLN         reduce using rule 155 (castingfun -> TO_FLOAT .)
    PRINT           reduce using rule 155 (castingfun -> TO_FLOAT .)
    READLINE        reduce using rule 155 (castingfun -> TO_FLOAT .)
    VAR             reduce using rule 155 (castingfun -> TO_FLOAT .)
    VAL             reduce using rule 155 (castingfun -> TO_FLOAT .)
    WHILE           reduce using rule 155 (castingfun -> TO_FLOAT .)
    FOR             reduce using rule 155 (castingfun -> TO_FLOAT .)
    IF              reduce using rule 155 (castingfun -> TO_FLOAT .)
    $end            reduce using rule 155 (castingfun -> TO_FLOAT .)
    INT             reduce using rule 155 (castingfun -> TO_FLOAT .)
    LONG            reduce using rule 155 (castingfun -> TO_FLOAT .)
    FLOAT           reduce using rule 155 (castingfun -> TO_FLOAT .)
    DOUBLE          reduce using rule 155 (castingfun -> TO_FLOAT .)
    LLAVE_D         reduce using rule 155 (castingfun -> TO_FLOAT .)
    RETURN          reduce using rule 155 (castingfun -> TO_FLOAT .)
    CASE            reduce using rule 155 (castingfun -> TO_FLOAT .)


state 359

    (156) castingfun -> TO_LONG .

    DEF             reduce using rule 156 (castingfun -> TO_LONG .)
    VARIABLE        reduce using rule 156 (castingfun -> TO_LONG .)
    PRINTLN         reduce using rule 156 (castingfun -> TO_LONG .)
    PRINT           reduce using rule 156 (castingfun -> TO_LONG .)
    READLINE        reduce using rule 156 (castingfun -> TO_LONG .)
    VAR             reduce using rule 156 (castingfun -> TO_LONG .)
    VAL             reduce using rule 156 (castingfun -> TO_LONG .)
    WHILE           reduce using rule 156 (castingfun -> TO_LONG .)
    FOR             reduce using rule 156 (castingfun -> TO_LONG .)
    IF              reduce using rule 156 (castingfun -> TO_LONG .)
    $end            reduce using rule 156 (castingfun -> TO_LONG .)
    INT             reduce using rule 156 (castingfun -> TO_LONG .)
    LONG            reduce using rule 156 (castingfun -> TO_LONG .)
    FLOAT           reduce using rule 156 (castingfun -> TO_LONG .)
    DOUBLE          reduce using rule 156 (castingfun -> TO_LONG .)
    LLAVE_D         reduce using rule 156 (castingfun -> TO_LONG .)
    RETURN          reduce using rule 156 (castingfun -> TO_LONG .)
    CASE            reduce using rule 156 (castingfun -> TO_LONG .)


state 360

    (157) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 428


state 361

    (168) tuple -> PAR_I valores PAR_D .

    DEF             reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    PRINT           reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    READLINE        reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    VAR             reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    VAL             reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    WHILE           reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    FOR             reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    IF              reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    $end            reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    INT             reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    LONG            reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    FLOAT           reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    RETURN          reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    CASE            reduce using rule 168 (tuple -> PAR_I valores PAR_D .)


state 362

    (151) castingcall -> returnCastable PUNTO castingfun .

    DEF             reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    VARIABLE        reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    PRINTLN         reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    PRINT           reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    READLINE        reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    VAR             reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    VAL             reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    WHILE           reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    FOR             reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    IF              reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    $end            reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    INT             reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    LONG            reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    FLOAT           reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    DOUBLE          reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    LLAVE_D         reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    RETURN          reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    CASE            reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)


state 363

    (60) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)


state 364

    (57) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .

    DEF             reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VARIABLE        reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    PRINTLN         reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    PRINT           reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    READLINE        reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VAR             reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VAL             reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    WHILE           reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    FOR             reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    IF              reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    $end            reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    INT             reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    LONG            reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    FLOAT           reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    DOUBLE          reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    LLAVE_D         reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    RETURN          reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    CASE            reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)


state 365

    (66) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .

    DEF             reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    IF              reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    $end            reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    INT             reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)


state 366

    (63) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .

    DEF             reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VARIABLE        reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    PRINTLN         reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    PRINT           reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    READLINE        reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VAR             reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VAL             reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    WHILE           reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    FOR             reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    IF              reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    $end            reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    INT             reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    LONG            reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    FLOAT           reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    DOUBLE          reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    LLAVE_D         reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    RETURN          reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    CASE            reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)


state 367

    (72) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .

    DEF             reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    IF              reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    $end            reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    INT             reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)


state 368

    (69) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .

    DEF             reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VARIABLE        reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    PRINTLN         reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    PRINT           reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    READLINE        reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VAR             reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VAL             reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    WHILE           reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    FOR             reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    IF              reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    $end            reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    INT             reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    LONG            reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    FLOAT           reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    DOUBLE          reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    LLAVE_D         reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    RETURN          reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    CASE            reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)


state 369

    (78) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .

    DEF             reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAR             reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAL             reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FOR             reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    IF              reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    $end            reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    INT             reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LONG            reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    CASE            reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)


state 370

    (75) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .

    DEF             reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VARIABLE        reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    PRINTLN         reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    PRINT           reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    READLINE        reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VAR             reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VAL             reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    WHILE           reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    FOR             reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    IF              reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    $end            reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    INT             reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    LONG            reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    FLOAT           reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    DOUBLE          reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    LLAVE_D         reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    RETURN          reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    CASE            reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)


state 371

    (84) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)


state 372

    (81) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .

    DEF             reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VARIABLE        reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINTLN         reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINT           reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    READLINE        reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAR             reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAL             reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    WHILE           reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FOR             reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    IF              reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    $end            reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    INT             reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LONG            reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FLOAT           reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    DOUBLE          reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LLAVE_D         reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    RETURN          reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    CASE            reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)


state 373

    (90) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .

    DEF             reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    IF              reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    $end            reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    INT             reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)


state 374

    (87) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .

    DEF             reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VARIABLE        reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINTLN         reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINT           reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    READLINE        reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAR             reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAL             reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    WHILE           reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FOR             reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    IF              reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    $end            reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    INT             reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LONG            reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FLOAT           reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    DOUBLE          reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LLAVE_D         reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    RETURN          reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    CASE            reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)


state 375

    (96) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .

    DEF             reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    IF              reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    $end            reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    INT             reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)


state 376

    (93) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .

    DEF             reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VARIABLE        reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINTLN         reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINT           reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    READLINE        reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAR             reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAL             reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    WHILE           reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FOR             reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    IF              reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    $end            reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    INT             reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LONG            reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FLOAT           reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    DOUBLE          reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LLAVE_D         reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    RETURN          reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    CASE            reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)


state 377

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 429


state 378

    (135) dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D .

    IGUAL           reduce using rule 135 (dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D .)


state 379

    (137) tipos -> tipo tiposentry .

    PAR_D           reduce using rule 137 (tipos -> tipo tiposentry .)


state 380

    (138) tiposentry -> COMA . tipo
    (139) tiposentry -> COMA . tipo tiposentry
    (102) tipo -> . CHARCLASS
    (103) tipo -> . STRINGCLASS
    (104) tipo -> . BOOLCLASS
    (105) tipo -> . INTCLASS
    (106) tipo -> . LONGCLASS
    (107) tipo -> . DOUBLECLASS
    (108) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 237
    STRINGCLASS     shift and go to state 238
    BOOLCLASS       shift and go to state 239
    INTCLASS        shift and go to state 240
    LONGCLASS       shift and go to state 241
    DOUBLECLASS     shift and go to state 242
    FLOATCLASS      shift and go to state 243

    tipo                           shift and go to state 430

state 381

    (160) array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 431


state 382

    (163) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 432


state 383

    (61) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)


state 384

    (59) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .

    DEF             reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VARIABLE        reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    PRINTLN         reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    PRINT           reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    READLINE        reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VAR             reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VAL             reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    WHILE           reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    FOR             reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    IF              reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    $end            reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    INT             reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    LONG            reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    FLOAT           reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    DOUBLE          reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    LLAVE_D         reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    RETURN          reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    CASE            reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)


state 385

    (67) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .

    DEF             reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    IF              reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    $end            reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    INT             reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)


state 386

    (65) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .

    DEF             reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VARIABLE        reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    PRINTLN         reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    PRINT           reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    READLINE        reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VAR             reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VAL             reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    WHILE           reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    FOR             reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    IF              reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    $end            reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    INT             reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    LONG            reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    FLOAT           reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    DOUBLE          reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    LLAVE_D         reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    RETURN          reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    CASE            reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)


state 387

    (73) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .

    DEF             reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    IF              reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    $end            reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    INT             reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)


state 388

    (71) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .

    DEF             reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VARIABLE        reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    PRINTLN         reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    PRINT           reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    READLINE        reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VAR             reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VAL             reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    WHILE           reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    FOR             reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    IF              reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    $end            reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    INT             reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    LONG            reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    FLOAT           reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    DOUBLE          reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    LLAVE_D         reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    RETURN          reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    CASE            reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)


state 389

    (79) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .

    DEF             reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAR             reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAL             reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FOR             reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    IF              reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    $end            reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    INT             reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LONG            reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    CASE            reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)


state 390

    (77) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .

    DEF             reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VARIABLE        reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    PRINTLN         reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    PRINT           reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    READLINE        reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VAR             reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VAL             reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    WHILE           reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    FOR             reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    IF              reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    $end            reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    INT             reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    LONG            reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    FLOAT           reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    DOUBLE          reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    LLAVE_D         reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    RETURN          reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    CASE            reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)


state 391

    (85) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)


state 392

    (83) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .

    DEF             reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VARIABLE        reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINTLN         reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINT           reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    READLINE        reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAR             reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAL             reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    WHILE           reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FOR             reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    IF              reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    $end            reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    INT             reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LONG            reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FLOAT           reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    DOUBLE          reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LLAVE_D         reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    RETURN          reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    CASE            reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)


state 393

    (91) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .

    DEF             reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    IF              reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    $end            reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    INT             reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)


state 394

    (89) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .

    DEF             reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VARIABLE        reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINTLN         reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINT           reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    READLINE        reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAR             reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAL             reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    WHILE           reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FOR             reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    IF              reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    $end            reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    INT             reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LONG            reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FLOAT           reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    DOUBLE          reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LLAVE_D         reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    RETURN          reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    CASE            reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)


state 395

    (97) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .

    DEF             reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    IF              reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    $end            reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    INT             reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)


state 396

    (95) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .

    DEF             reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VARIABLE        reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINTLN         reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINT           reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    READLINE        reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAR             reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAL             reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    WHILE           reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FOR             reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    IF              reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    $end            reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    INT             reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LONG            reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FLOAT           reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    DOUBLE          reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LLAVE_D         reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    RETURN          reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    CASE            reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)


state 397

    (161) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 433


state 398

    (164) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo . CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo . CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    CORCHETE_D      shift and go to state 434


state 399

    (173) while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 435


state 400

    (174) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 436


state 401

    (178) for -> FOR PAR_I VAR VARIABLE ITERATOR INT . TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> FOR PAR_I VAR VARIABLE ITERATOR INT . UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    TO              shift and go to state 437
    UNTIL           shift and go to state 438


state 402

    (175) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 439


state 403

    (176) for -> FOR PAR_I VARIABLE ITERATOR INT TO . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 440


state 404

    (177) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 441


state 405

    (219) if -> IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 442


state 406

    (222) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (223) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D elseif
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 443
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 407

    (101) reasignacion -> VARIABLE PAR_I INT PAR_D . IGUAL valor

    IGUAL           shift and go to state 444


state 408

    (120) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)


state 409

    (128) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN valor LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN returnfun LLAVE_D

    RETURN          shift and go to state 445


state 410

    (131) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN tuple LLAVE_D
    (132) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN VARIABLE LLAVE_D
    (133) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN returnfun LLAVE_D

    RETURN          shift and go to state 446


state 411

    (123) declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL . valor
    (109) valor -> . STRING
    (110) valor -> . CHAR
    (111) valor -> . VARIABLE
    (112) valor -> . numeros
    (113) valor -> . booleanos
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valor                          shift and go to state 447
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 412

    (216) defcase -> CASE SUBGUION FUNCION_FLECHA . codeBlock
    (217) codeBlock -> . contenidoLine
    (218) codeBlock -> . LLAVE_I contenido LLAVE_D
    (36) contenidoLine -> . asignacion
    (37) contenidoLine -> . reasignacion
    (38) contenidoLine -> . funcall
    (39) contenidoLine -> . impresion
    (40) contenidoLine -> . entrada
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 415
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 421
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15

    codeBlock                      shift and go to state 448
    contenidoLine                  shift and go to state 414
    asignacion                     shift and go to state 416
    reasignacion                   shift and go to state 417
    funcall                        shift and go to state 418
    impresion                      shift and go to state 419
    entrada                        shift and go to state 420
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 413

    (188) caseInt -> CASE INT FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 188 (caseInt -> CASE INT FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 188 (caseInt -> CASE INT FUNCION_FLECHA codeBlock .)


state 414

    (217) codeBlock -> contenidoLine .

    CASE            reduce using rule 217 (codeBlock -> contenidoLine .)
    LLAVE_D         reduce using rule 217 (codeBlock -> contenidoLine .)


state 415

    (218) codeBlock -> LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 449
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 416

    (36) contenidoLine -> asignacion .

    CASE            reduce using rule 36 (contenidoLine -> asignacion .)
    LLAVE_D         reduce using rule 36 (contenidoLine -> asignacion .)


state 417

    (37) contenidoLine -> reasignacion .

    CASE            reduce using rule 37 (contenidoLine -> reasignacion .)
    LLAVE_D         reduce using rule 37 (contenidoLine -> reasignacion .)


state 418

    (38) contenidoLine -> funcall .

    CASE            reduce using rule 38 (contenidoLine -> funcall .)
    LLAVE_D         reduce using rule 38 (contenidoLine -> funcall .)


state 419

    (39) contenidoLine -> impresion .

    CASE            reduce using rule 39 (contenidoLine -> impresion .)
    LLAVE_D         reduce using rule 39 (contenidoLine -> impresion .)


state 420

    (40) contenidoLine -> entrada .

    CASE            reduce using rule 40 (contenidoLine -> entrada .)
    LLAVE_D         reduce using rule 40 (contenidoLine -> entrada .)


state 421

    (98) reasignacion -> VARIABLE . IGUAL valor
    (99) reasignacion -> VARIABLE . IGUAL returnfun
    (100) reasignacion -> VARIABLE . IGUAL aritmetica
    (101) reasignacion -> VARIABLE . PAR_I INT PAR_D IGUAL valor
    (145) funcall -> VARIABLE . PAR_I valores PAR_D
    (146) funcall -> VARIABLE . PAR_I PAR_D

    IGUAL           shift and go to state 230
    PAR_I           shift and go to state 231


state 422

    (192) caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 192 (caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 192 (caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .)


state 423

    (196) caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 196 (caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 196 (caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .)


state 424

    (200) caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 200 (caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 200 (caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .)


state 425

    (204) caseStr -> CASE STRING FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 204 (caseStr -> CASE STRING FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 204 (caseStr -> CASE STRING FUNCION_FLECHA codeBlock .)


state 426

    (208) caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 208 (caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 208 (caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .)


state 427

    (212) caseBool -> CASE booleanos FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 212 (caseBool -> CASE booleanos FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 212 (caseBool -> CASE booleanos FUNCION_FLECHA codeBlock .)


state 428

    (157) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 429

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    IGUAL           shift and go to state 450


state 430

    (138) tiposentry -> COMA tipo .
    (139) tiposentry -> COMA tipo . tiposentry
    (138) tiposentry -> . COMA tipo
    (139) tiposentry -> . COMA tipo tiposentry

    PAR_D           reduce using rule 138 (tiposentry -> COMA tipo .)
    COMA            shift and go to state 380

    tiposentry                     shift and go to state 451

state 431

    (160) array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 160 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 160 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 160 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 160 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 160 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 160 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 160 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 160 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 160 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 160 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 160 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 160 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 160 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 160 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 160 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 160 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 160 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 160 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 432

    (163) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)


state 433

    (161) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    IGUAL           shift and go to state 452


state 434

    (164) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D . IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D . IGUAL LISTCLASS PAR_I valores PAR_D

    IGUAL           shift and go to state 453


state 435

    (173) while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 173 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 173 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 173 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 173 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 173 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 173 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 173 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 173 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 173 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 173 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 173 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 173 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 173 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 173 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 173 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 173 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 173 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)


state 436

    (174) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 454


state 437

    (178) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 455


state 438

    (179) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 456


state 439

    (175) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 457
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 440

    (176) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 458


state 441

    (177) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 459


state 442

    (219) if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .

    ELSE            reduce using rule 219 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 219 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 219 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 219 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 219 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 219 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 219 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 219 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 219 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 219 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 219 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 219 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 219 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 219 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 219 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 219 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 219 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 219 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)


state 443

    (222) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D
    (223) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D elseif

    LLAVE_D         shift and go to state 460


state 444

    (101) reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL . valor
    (109) valor -> . STRING
    (110) valor -> . CHAR
    (111) valor -> . VARIABLE
    (112) valor -> . numeros
    (113) valor -> . booleanos
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valor                          shift and go to state 461
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 445

    (128) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . valor LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . returnfun LLAVE_D
    (109) valor -> . STRING
    (110) valor -> . CHAR
    (111) valor -> . VARIABLE
    (112) valor -> . numeros
    (113) valor -> . booleanos
    (147) returnfun -> . returnCastable
    (148) returnfun -> . castingcall
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE
    (149) returnCastable -> . entrada
    (150) returnCastable -> . funcall
    (151) castingcall -> . returnCastable PUNTO castingfun
    (152) castingcall -> . VARIABLE PUNTO castingfun
    (144) entrada -> . READLINE PAR_I PAR_D
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D

    VARIABLE        shift and go to state 462
    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71
    READLINE        shift and go to state 15

    valor                          shift and go to state 463
    returnfun                      shift and go to state 464
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65
    returnCastable                 shift and go to state 152
    castingcall                    shift and go to state 153
    entrada                        shift and go to state 154
    funcall                        shift and go to state 155

state 446

    (131) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . tuple LLAVE_D
    (132) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . VARIABLE LLAVE_D
    (133) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . returnfun LLAVE_D
    (168) tuple -> . PAR_I valores PAR_D
    (147) returnfun -> . returnCastable
    (148) returnfun -> . castingcall
    (149) returnCastable -> . entrada
    (150) returnCastable -> . funcall
    (151) castingcall -> . returnCastable PUNTO castingfun
    (152) castingcall -> . VARIABLE PUNTO castingfun
    (144) entrada -> . READLINE PAR_I PAR_D
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D

    VARIABLE        shift and go to state 465
    PAR_I           shift and go to state 151
    READLINE        shift and go to state 15

    tuple                          shift and go to state 466
    returnfun                      shift and go to state 467
    returnCastable                 shift and go to state 152
    castingcall                    shift and go to state 153
    entrada                        shift and go to state 154
    funcall                        shift and go to state 155

state 447

    (123) declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor .

    PAR_D           reduce using rule 123 (declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor .)


state 448

    (216) defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock .

    LLAVE_D         reduce using rule 216 (defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock .)


state 449

    (218) codeBlock -> LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 468


state 450

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (159) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    ARRAYCLASS      shift and go to state 469
    NEW             shift and go to state 470


state 451

    (139) tiposentry -> COMA tipo tiposentry .

    PAR_D           reduce using rule 139 (tiposentry -> COMA tipo tiposentry .)


state 452

    (161) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (162) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    ARRAYCLASS      shift and go to state 471
    NEW             shift and go to state 472


state 453

    (164) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL . NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL . LISTCLASS PAR_I valores PAR_D

    NEW             shift and go to state 474
    LISTCLASS       shift and go to state 473


state 454

    (174) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 475
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 455

    (178) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 476


state 456

    (179) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 477


state 457

    (175) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 478


state 458

    (176) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 479


state 459

    (177) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 480


state 460

    (222) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .
    (223) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D . elseif
    (222) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (223) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

  ! shift/reduce conflict for ELSE resolved as shift
    DEF             reduce using rule 222 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 222 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 222 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 222 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 222 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 222 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 222 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 222 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 222 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 222 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 222 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 222 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 222 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 222 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 222 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 222 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 222 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    ELSE            shift and go to state 481

  ! ELSE            [ reduce using rule 222 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .) ]

    elseif                         shift and go to state 482

state 461

    (101) reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .

    VAR             reduce using rule 101 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    VAL             reduce using rule 101 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    VARIABLE        reduce using rule 101 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    PRINTLN         reduce using rule 101 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    PRINT           reduce using rule 101 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    READLINE        reduce using rule 101 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    WHILE           reduce using rule 101 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    FOR             reduce using rule 101 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    IF              reduce using rule 101 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    INT             reduce using rule 101 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    LONG            reduce using rule 101 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    FLOAT           reduce using rule 101 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    DOUBLE          reduce using rule 101 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    LLAVE_D         reduce using rule 101 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    RETURN          reduce using rule 101 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    CASE            reduce using rule 101 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)


state 462

    (129) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE . LLAVE_D
    (111) valor -> VARIABLE .
    (152) castingcall -> VARIABLE . PUNTO castingfun
    (145) funcall -> VARIABLE . PAR_I valores PAR_D
    (146) funcall -> VARIABLE . PAR_I PAR_D

  ! shift/reduce conflict for LLAVE_D resolved as shift
    LLAVE_D         shift and go to state 483
    PUNTO           shift and go to state 277
    PAR_I           shift and go to state 40

  ! LLAVE_D         [ reduce using rule 111 (valor -> VARIABLE .) ]


state 463

    (128) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor . LLAVE_D

    LLAVE_D         shift and go to state 484


state 464

    (130) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun . LLAVE_D

    LLAVE_D         shift and go to state 485


state 465

    (132) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE . LLAVE_D
    (152) castingcall -> VARIABLE . PUNTO castingfun
    (145) funcall -> VARIABLE . PAR_I valores PAR_D
    (146) funcall -> VARIABLE . PAR_I PAR_D

    LLAVE_D         shift and go to state 486
    PUNTO           shift and go to state 277
    PAR_I           shift and go to state 40


state 466

    (131) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple . LLAVE_D

    LLAVE_D         shift and go to state 487


state 467

    (133) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun . LLAVE_D

    LLAVE_D         shift and go to state 488


state 468

    (218) codeBlock -> LLAVE_I contenido LLAVE_D .

    CASE            reduce using rule 218 (codeBlock -> LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 218 (codeBlock -> LLAVE_I contenido LLAVE_D .)


state 469

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 489


state 470

    (159) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW . ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    ARRAYCLASS      shift and go to state 490


state 471

    (161) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 491


state 472

    (162) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW . ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    ARRAYCLASS      shift and go to state 492


state 473

    (165) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 493


state 474

    (164) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW . LISTCLASS PAR_I valores PAR_D

    LISTCLASS       shift and go to state 494


state 475

    (174) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 495


state 476

    (178) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 496


state 477

    (179) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 497


state 478

    (175) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)


state 479

    (176) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 498
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 480

    (177) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 499
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 481

    (222) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (223) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    IF              shift and go to state 53


state 482

    (223) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .

    ELSE            reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    DEF             reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    VARIABLE        reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    PRINTLN         reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    PRINT           reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    READLINE        reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    VAR             reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    VAL             reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    WHILE           reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    FOR             reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    IF              reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    $end            reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    INT             reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    LONG            reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    FLOAT           reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    DOUBLE          reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    LLAVE_D         reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    RETURN          reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)


state 483

    (129) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .

    DEF             reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VARIABLE        reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINTLN         reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINT           reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    READLINE        reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAR             reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAL             reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    WHILE           reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    FOR             reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    IF              reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    $end            reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)


state 484

    (128) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .

    DEF             reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VARIABLE        reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    PRINTLN         reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    PRINT           reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    READLINE        reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAR             reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAL             reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    WHILE           reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    FOR             reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    IF              reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    $end            reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)


state 485

    (130) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .

    DEF             reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VARIABLE        reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINTLN         reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINT           reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    READLINE        reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAR             reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAL             reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    WHILE           reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    FOR             reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    IF              reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    $end            reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)


state 486

    (132) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .

    DEF             reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VARIABLE        reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINTLN         reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINT           reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    READLINE        reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAR             reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAL             reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    WHILE           reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    FOR             reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    IF              reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    $end            reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)


state 487

    (131) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .

    DEF             reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    VARIABLE        reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    PRINTLN         reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    PRINT           reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    READLINE        reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    VAR             reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    VAL             reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    WHILE           reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    FOR             reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    IF              reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    $end            reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)


state 488

    (133) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .

    DEF             reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VARIABLE        reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINTLN         reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINT           reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    READLINE        reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAR             reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAL             reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    WHILE           reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    FOR             reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    IF              reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    $end            reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)


state 489

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (109) valor -> . STRING
    (110) valor -> . CHAR
    (111) valor -> . VARIABLE
    (112) valor -> . numeros
    (113) valor -> . booleanos
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valores                        shift and go to state 500
    valor                          shift and go to state 61
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 490

    (159) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS . CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 501


state 491

    (161) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (109) valor -> . STRING
    (110) valor -> . CHAR
    (111) valor -> . VARIABLE
    (112) valor -> . numeros
    (113) valor -> . booleanos
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valores                        shift and go to state 502
    valor                          shift and go to state 61
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 492

    (162) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS . CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 503


state 493

    (165) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I . valores PAR_D
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (109) valor -> . STRING
    (110) valor -> . CHAR
    (111) valor -> . VARIABLE
    (112) valor -> . numeros
    (113) valor -> . booleanos
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valores                        shift and go to state 504
    valor                          shift and go to state 61
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 494

    (164) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 505


state 495

    (174) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 174 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 174 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 174 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 174 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 174 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 174 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 174 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 174 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 174 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 174 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 174 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 174 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 174 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 174 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 174 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 174 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 174 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)


state 496

    (178) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 506
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 497

    (179) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (171) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (172) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (100) reasignacion -> . VARIABLE IGUAL aritmetica
    (101) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE PAR_I valores PAR_D
    (146) funcall -> . VARIABLE PAR_I PAR_D
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (173) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (180) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (219) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (220) if -> . if elseif
    (221) if -> . if else
    (257) aritmetica -> . numeros aritmeticos numeros
    (258) aritmetica -> . VARIABLE aritmeticos numeros
    (259) aritmetica -> . numeros aritmeticos VARIABLE
    (260) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (261) aritmetica -> . aritmetica aritmeticos numeros
    (262) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (159) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (160) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (162) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 507
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 498

    (176) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 508


state 499

    (177) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 509


state 500

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 510


state 501

    (159) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I . tipo CORCHETE_D PAR_I INT PAR_D
    (102) tipo -> . CHARCLASS
    (103) tipo -> . STRINGCLASS
    (104) tipo -> . BOOLCLASS
    (105) tipo -> . INTCLASS
    (106) tipo -> . LONGCLASS
    (107) tipo -> . DOUBLECLASS
    (108) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 237
    STRINGCLASS     shift and go to state 238
    BOOLCLASS       shift and go to state 239
    INTCLASS        shift and go to state 240
    LONGCLASS       shift and go to state 241
    DOUBLECLASS     shift and go to state 242
    FLOATCLASS      shift and go to state 243

    tipo                           shift and go to state 511

state 502

    (161) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 512


state 503

    (162) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I . tipo CORCHETE_D PAR_I INT PAR_D
    (102) tipo -> . CHARCLASS
    (103) tipo -> . STRINGCLASS
    (104) tipo -> . BOOLCLASS
    (105) tipo -> . INTCLASS
    (106) tipo -> . LONGCLASS
    (107) tipo -> . DOUBLECLASS
    (108) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 237
    STRINGCLASS     shift and go to state 238
    BOOLCLASS       shift and go to state 239
    INTCLASS        shift and go to state 240
    LONGCLASS       shift and go to state 241
    DOUBLECLASS     shift and go to state 242
    FLOATCLASS      shift and go to state 243

    tipo                           shift and go to state 513

state 504

    (165) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 514


state 505

    (164) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I . valores PAR_D
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (109) valor -> . STRING
    (110) valor -> . CHAR
    (111) valor -> . VARIABLE
    (112) valor -> . numeros
    (113) valor -> . booleanos
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (114) booleanos -> . TRUE
    (115) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valores                        shift and go to state 515
    valor                          shift and go to state 61
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 506

    (178) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 516


state 507

    (179) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 517


state 508

    (176) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)


state 509

    (177) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)


state 510

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 511

    (159) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo . CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 518


state 512

    (161) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 161 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 161 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 161 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 161 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 161 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 161 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 161 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 161 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 161 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 161 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 161 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 161 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 161 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 161 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 161 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 161 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 161 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 161 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 513

    (162) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo . CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 519


state 514

    (165) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)


state 515

    (164) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 520


state 516

    (178) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 178 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 178 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 178 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 178 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 178 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 178 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 178 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 178 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 178 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 178 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 178 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 178 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 178 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 178 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 178 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 178 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 178 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)


state 517

    (179) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)


state 518

    (159) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D . PAR_I INT PAR_D

    PAR_I           shift and go to state 521


state 519

    (162) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D . PAR_I INT PAR_D

    PAR_I           shift and go to state 522


state 520

    (164) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)


state 521

    (159) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I . INT PAR_D

    INT             shift and go to state 523


state 522

    (162) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I . INT PAR_D

    INT             shift and go to state 524


state 523

    (159) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT . PAR_D

    PAR_D           shift and go to state 525


state 524

    (162) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT . PAR_D

    PAR_D           shift and go to state 526


state 525

    (159) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .

    DEF             reduce using rule 159 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VARIABLE        reduce using rule 159 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINTLN         reduce using rule 159 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINT           reduce using rule 159 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    READLINE        reduce using rule 159 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAR             reduce using rule 159 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAL             reduce using rule 159 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    WHILE           reduce using rule 159 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FOR             reduce using rule 159 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    IF              reduce using rule 159 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    $end            reduce using rule 159 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    INT             reduce using rule 159 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LONG            reduce using rule 159 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FLOAT           reduce using rule 159 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    DOUBLE          reduce using rule 159 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LLAVE_D         reduce using rule 159 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    RETURN          reduce using rule 159 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    CASE            reduce using rule 159 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)


state 526

    (162) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .

    DEF             reduce using rule 162 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VARIABLE        reduce using rule 162 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINTLN         reduce using rule 162 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINT           reduce using rule 162 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    READLINE        reduce using rule 162 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAR             reduce using rule 162 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAL             reduce using rule 162 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    WHILE           reduce using rule 162 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FOR             reduce using rule 162 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    IF              reduce using rule 162 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    $end            reduce using rule 162 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    INT             reduce using rule 162 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LONG            reduce using rule 162 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FLOAT           reduce using rule 162 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    DOUBLE          reduce using rule 162 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LLAVE_D         reduce using rule 162 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    RETURN          reduce using rule 162 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    CASE            reduce using rule 162 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 36 resolved as shift
WARNING: shift/reduce conflict for PAR_D in state 339 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 460 resolved as shift
WARNING: shift/reduce conflict for LLAVE_D in state 462 resolved as shift

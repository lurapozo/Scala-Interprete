Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ARROBA
    BACKTICK
    CATCH
    CLASS
    DO
    EXTENDS
    FINAL
    FINALLY
    FOR_SOME
    HASHTAG
    IMPLICIT
    LAZY
    LIBRERIA_IO
    MACRO
    MAYOR_IGUAL
    MENOR_IGUAL
    NULL
    OVERRIDE
    PACKAGE
    PRIVATE
    PROTECTED
    REVERSE
    SEALED
    SUPER
    THIS
    THROW
    TRAIT
    TRY
    TYPE
    WITH
    YIELD

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D
Rule 2     inicio -> IMPORT io inicio
Rule 3     inicio -> cuerpo
Rule 4     io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE
Rule 5     cuerpo -> funcion
Rule 6     cuerpo -> funcall
Rule 7     cuerpo -> impresion
Rule 8     cuerpo -> entrada
Rule 9     cuerpo -> asignacion
Rule 10    cuerpo -> while
Rule 11    cuerpo -> for
Rule 12    cuerpo -> match
Rule 13    cuerpo -> if
Rule 14    cuerpo -> funcion cuerpo
Rule 15    cuerpo -> asignacion cuerpo
Rule 16    cuerpo -> while cuerpo
Rule 17    cuerpo -> for cuerpo
Rule 18    cuerpo -> if cuerpo
Rule 19    cuerpo -> match cuerpo
Rule 20    cuerpo -> startsWith
Rule 21    contenido -> asignacion
Rule 22    contenido -> reasignacion
Rule 23    contenido -> funcall
Rule 24    contenido -> impresion
Rule 25    contenido -> entrada
Rule 26    contenido -> while
Rule 27    contenido -> for
Rule 28    contenido -> match
Rule 29    contenido -> if
Rule 30    contenido -> aritmetica
Rule 31    contenido -> asignacion contenido
Rule 32    contenido -> reasignacion contenido
Rule 33    contenido -> funcall contenido
Rule 34    contenido -> impresion contenido
Rule 35    contenido -> entrada contenido
Rule 36    contenido -> while contenido
Rule 37    contenido -> for contenido
Rule 38    contenido -> if contenido
Rule 39    contenido -> match contenido
Rule 40    contenido -> aritmetica contenido
Rule 41    contenidoLine -> asignacion
Rule 42    contenidoLine -> reasignacion
Rule 43    contenidoLine -> funcall
Rule 44    contenidoLine -> impresion
Rule 45    contenidoLine -> entrada
Rule 46    asignacion -> VAR VARIABLE IGUAL VARIABLE
Rule 47    asignacion -> VAL VARIABLE IGUAL VARIABLE
Rule 48    asignacion -> VAR VARIABLE IGUAL aritmetica
Rule 49    asignacion -> VAL VARIABLE IGUAL aritmetica
Rule 50    asignacion -> VAR VARIABLE IGUAL returnfun
Rule 51    asignacion -> VAL VARIABLE IGUAL returnfun
Rule 52    asignacion -> asignacionLong
Rule 53    asignacion -> asignacionInt
Rule 54    asignacion -> asignacionFloat
Rule 55    asignacion -> asignacionDouble
Rule 56    asignacion -> asignacionString
Rule 57    asignacion -> asignacionChar
Rule 58    asignacion -> asignacionBoolean
Rule 59    asignacion -> array
Rule 60    asignacion -> list
Rule 61    asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
Rule 62    asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
Rule 63    asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
Rule 64    asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
Rule 65    asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
Rule 66    asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
Rule 67    asignacionString -> VAR VARIABLE IGUAL STRING
Rule 68    asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
Rule 69    asignacionString -> VAL VARIABLE IGUAL STRING
Rule 70    asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
Rule 71    asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
Rule 72    asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
Rule 73    asignacionChar -> VAR VARIABLE IGUAL CHAR
Rule 74    asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
Rule 75    asignacionChar -> VAL VARIABLE IGUAL CHAR
Rule 76    asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
Rule 77    asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
Rule 78    asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
Rule 79    asignacionBoolean -> VAR VARIABLE IGUAL booleanos
Rule 80    asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
Rule 81    asignacionBoolean -> VAL VARIABLE IGUAL booleanos
Rule 82    asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
Rule 83    asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
Rule 84    asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
Rule 85    reasignacion -> VARIABLE IGUAL valor
Rule 86    reasignacion -> VARIABLE IGUAL returnfun
Rule 87    reasignacion -> VARIABLE IGUAL aritmetica
Rule 88    reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor
Rule 89    tipo -> CHARCLASS
Rule 90    tipo -> STRINGCLASS
Rule 91    tipo -> BOOLCLASS
Rule 92    tipo -> INTCLASS
Rule 93    tipo -> LONGCLASS
Rule 94    tipo -> DOUBLECLASS
Rule 95    tipo -> FLOATCLASS
Rule 96    tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D
Rule 97    tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D
Rule 98    valor -> STRING
Rule 99    valor -> CHAR
Rule 100   valor -> VARIABLE
Rule 101   valor -> numeros
Rule 102   valor -> booleanos
Rule 103   valor -> VARIABLE PAR_I VARIABLE PAR_D
Rule 104   valor -> VARIABLE PAR_I INT PAR_D
Rule 105   booleanos -> TRUE
Rule 106   booleanos -> FLASE
Rule 107   booleanos -> startsWith
Rule 108   numeros -> INT
Rule 109   numeros -> LONG
Rule 110   numeros -> FLOAT
Rule 111   numeros -> DOUBLE
Rule 112   funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
Rule 113   funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
Rule 114   declaracion -> VARIABLE DOBLE_PUNTO tipo
Rule 115   declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor
Rule 116   parametro -> parametros
Rule 117   parametro -> PAR_I PAR_D
Rule 118   parametros -> PAR_I declaracion PAR_D
Rule 119   parametros -> PAR_I declaracion PAR_D parametros
Rule 120   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
Rule 121   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
Rule 122   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
Rule 123   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
Rule 124   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
Rule 125   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
Rule 126   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
Rule 127   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
Rule 128   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
Rule 129   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
Rule 130   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
Rule 131   dectipo -> DOBLE_PUNTO tipo
Rule 132   dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D
Rule 133   tipos -> tipo
Rule 134   tipos -> tipo tiposentry
Rule 135   tiposentry -> COMA tipo
Rule 136   tiposentry -> COMA tipo tiposentry
Rule 137   impresion -> PRINTLN PAR_I valorI PAR_D
Rule 138   impresion -> PRINT PAR_I valorI PAR_D
Rule 139   valorI -> valor MAS valorI
Rule 140   valorI -> valor
Rule 141   entrada -> READLINE PAR_I PAR_D
Rule 142   funcall -> VARIABLE varparen
Rule 143   varparen -> PAR_I valores PAR_D
Rule 144   varparen -> PAR_I PAR_D
Rule 145   varparen -> varparen PAR_I valores PAR_D
Rule 146   varparen -> varparen PAR_I PAR_D
Rule 147   returnfun -> returnCastable
Rule 148   returnfun -> castingcall
Rule 149   returnCastable -> entrada
Rule 150   returnCastable -> funcall
Rule 151   castingcall -> returnCastable PUNTO castingfun
Rule 152   castingcall -> VARIABLE PUNTO castingfun
Rule 153   castingfun -> TO_INT
Rule 154   castingfun -> TO_DOUBLE
Rule 155   castingfun -> TO_FLOAT
Rule 156   castingfun -> TO_LONG
Rule 157   array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 158   array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
Rule 159   array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 160   array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
Rule 161   array -> arrayInt
Rule 162   array -> arrayDouble
Rule 163   list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
Rule 164   list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
Rule 165   list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
Rule 166   valores -> valor
Rule 167   valores -> valor COMA valores
Rule 168   tuple -> PAR_I valores PAR_D
Rule 169   asignacion -> VAR VARIABLE IGUAL tuple
Rule 170   asignacion -> VAL VARIABLE IGUAL tuple
Rule 171   while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 172   for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
Rule 173   for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
Rule 174   for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
Rule 175   for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
Rule 176   for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
Rule 177   for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
Rule 178   match -> VARIABLE MATCH LLAVE_I cases LLAVE_D
Rule 179   cases -> casesInt
Rule 180   cases -> casesLgn
Rule 181   cases -> casesFlt
Rule 182   cases -> casesDob
Rule 183   cases -> casesStr
Rule 184   cases -> casesChar
Rule 185   cases -> casesBool
Rule 186   caseInt -> CASE INT FUNCION_FLECHA codeBlock
Rule 187   casesInt -> caseInt
Rule 188   casesInt -> caseInt casesInt
Rule 189   casesInt -> caseInt defcase
Rule 190   caseLgn -> CASE LONG FUNCION_FLECHA codeBlock
Rule 191   casesLgn -> caseLgn
Rule 192   casesLgn -> caseLgn casesLgn
Rule 193   casesLgn -> caseLgn defcase
Rule 194   caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock
Rule 195   casesFlt -> caseFlt
Rule 196   casesFlt -> caseFlt casesFlt
Rule 197   casesFlt -> caseFlt defcase
Rule 198   caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock
Rule 199   casesDob -> caseDob
Rule 200   casesDob -> caseDob casesDob
Rule 201   casesDob -> caseDob defcase
Rule 202   caseStr -> CASE STRING FUNCION_FLECHA codeBlock
Rule 203   casesStr -> caseStr
Rule 204   casesStr -> caseStr casesStr
Rule 205   casesStr -> caseStr defcase
Rule 206   caseChar -> CASE CHAR FUNCION_FLECHA codeBlock
Rule 207   casesChar -> caseChar
Rule 208   casesChar -> caseChar casesChar
Rule 209   casesChar -> caseChar defcase
Rule 210   caseBool -> CASE booleanos FUNCION_FLECHA codeBlock
Rule 211   casesBool -> caseBool
Rule 212   casesBool -> caseBool casesBool
Rule 213   casesBool -> caseBool defcase
Rule 214   defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock
Rule 215   codeBlock -> contenidoLine
Rule 216   codeBlock -> LLAVE_I contenido LLAVE_D
Rule 217   if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 218   if -> if elseif
Rule 219   if -> if else
Rule 220   elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 221   elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
Rule 222   else -> ELSE LLAVE_I contenido LLAVE_D
Rule 223   else -> elseif else
Rule 224   condicional -> valorC logicos condicional
Rule 225   condicional -> valorC
Rule 226   valorC -> VARIABLE
Rule 227   valorC -> booleanos
Rule 228   valorC -> relacional
Rule 229   valorC -> NOT VARIABLE
Rule 230   valorC -> NOT booleanos
Rule 231   valorC -> NOT relacional
Rule 232   logicos -> AND
Rule 233   logicos -> OR
Rule 234   logicos -> NOT
Rule 235   relacional -> numeros comparacion numeros
Rule 236   relacional -> aritmetica comparacion aritmetica
Rule 237   relacional -> aritmetica comparacion numeros
Rule 238   relacional -> numeros comparacion aritmetica
Rule 239   relacional -> booleanos comparacion booleanos
Rule 240   relacional -> STRING comparacion STRING
Rule 241   relacional -> CHAR comparacion CHAR
Rule 242   relacional -> VARIABLE comparacion numeros
Rule 243   relacional -> numeros comparacion VARIABLE
Rule 244   relacional -> VARIABLE comparacion booleanos
Rule 245   relacional -> booleanos comparacion VARIABLE
Rule 246   relacional -> VARIABLE comparacion STRING
Rule 247   relacional -> STRING comparacion VARIABLE
Rule 248   relacional -> VARIABLE comparacion CHAR
Rule 249   relacional -> CHAR comparacion VARIABLE
Rule 250   relacional -> VARIABLE comparacion VARIABLE
Rule 251   comparacion -> IGUAL_COMPARACION
Rule 252   comparacion -> DIFERENTE
Rule 253   comparacion -> MAYOR
Rule 254   comparacion -> MENOR
Rule 255   aritmetica -> numeros aritmeticos numeros
Rule 256   aritmetica -> VARIABLE aritmeticos numeros
Rule 257   aritmetica -> numeros aritmeticos VARIABLE
Rule 258   aritmetica -> VARIABLE aritmeticos VARIABLE
Rule 259   aritmetica -> aritmetica aritmeticos numeros
Rule 260   aritmetica -> aritmetica aritmeticos VARIABLE
Rule 261   aritmeticos -> MENOS
Rule 262   aritmeticos -> MAS
Rule 263   aritmeticos -> MULTIPLICACION
Rule 264   aritmeticos -> DIVISION
Rule 265   aritmeticos -> MOD
Rule 266   arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
Rule 267   arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
Rule 268   valoresInt -> INT
Rule 269   valoresInt -> valoresInt COMA INT
Rule 270   valoresDouble -> DOUBLE
Rule 271   valoresDouble -> valoresDouble COMA DOUBLE
Rule 272   startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D
Rule 273   asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla
Rule 274   asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla
Rule 275   dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
Rule 276   dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
Rule 277   dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
Rule 278   dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D
Rule 279   dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
Rule 280   dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
Rule 281   dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
Rule 282   dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D
Rule 283   dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
Rule 284   dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
Rule 285   dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
Rule 286   dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D
Rule 287   dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
Rule 288   dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
Rule 289   dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
Rule 290   dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D
Rule 291   dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
Rule 292   dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
Rule 293   dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
Rule 294   dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D
Rule 295   asignacionInt -> VAR VARIABLE IGUAL intvalues
Rule 296   asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
Rule 297   asignacionInt -> VAL VARIABLE IGUAL intvalues
Rule 298   asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
Rule 299   intvalues -> INT
Rule 300   intvalues -> stringCastInt
Rule 301   asignacionLong -> VAR VARIABLE IGUAL longvalues
Rule 302   asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
Rule 303   asignacionLong -> VAL VARIABLE IGUAL longvalues
Rule 304   asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
Rule 305   longvalues -> INT
Rule 306   longvalues -> intvalues
Rule 307   longvalues -> stringCastLong
Rule 308   asignacionFloat -> VAR VARIABLE IGUAL floatvalues
Rule 309   asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
Rule 310   asignacionFloat -> VAL VARIABLE IGUAL floatvalues
Rule 311   asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
Rule 312   floatvalues -> FLOAT
Rule 313   floatvalues -> longvalues
Rule 314   floatvalues -> stringCastFloat
Rule 315   asignacionDouble -> VAR VARIABLE IGUAL doublevalues
Rule 316   asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
Rule 317   asignacionDouble -> VAL VARIABLE IGUAL doublevalues
Rule 318   asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
Rule 319   doublevalues -> DOUBLE
Rule 320   doublevalues -> floatvalues
Rule 321   doublevalues -> stringCastDouble
Rule 322   stringCastInt -> STRING PUNTO TO_INT
Rule 323   stringCastLong -> STRING PUNTO TO_LONG
Rule 324   stringCastFloat -> STRING PUNTO TO_FLOAT
Rule 325   stringCastDouble -> STRING PUNTO TO_DOUBLE

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 232
ARRAYCLASS           : 96 157 158 158 159 160 160 266 266 267 267
ARROBA               : 
BACKTICK             : 
BOOLCLASS            : 80 82 83 84 91
CASE                 : 186 190 194 198 202 206 210 214
CATCH                : 
CHAR                 : 73 74 75 76 99 206 241 241 248 249
CHARCLASS            : 74 76 77 78 89
CLASS                : 
COMA                 : 135 136 167 269 271 275 275 276 276 277 277 278 278 279 279 280 280 281 281 282 282 283 283 284 284 285 285 286 286 287 287 288 288 289 289 290 290 291 291 292 292 293 293 294 294
CORCHETE_D           : 96 97 158 158 160 160 164 165 266 267
CORCHETE_I           : 96 97 158 158 160 160 164 165 266 267
DEF                  : 112 113 120 121 122 123 124 125 126 127 128 129 130
DIFERENTE            : 252
DIVISION             : 264
DO                   : 
DOBLE_PUNTO          : 61 62 63 64 65 66 68 70 71 72 74 76 77 78 80 82 83 84 114 115 131 132 158 160 164 165 266 267 273 274 296 298 302 304 309 311 316 318
DOUBLE               : 111 198 270 271 277 281 283 284 285 286 289 293 319
DOUBLECLASS          : 65 66 94 267 277 281 283 284 285 286 289 293 316 318
ELSE                 : 220 221 222
EXTENDS              : 
FINAL                : 
FINALLY              : 
FLASE                : 106
FLOAT                : 110 194 278 279 280 281 282 285 290 294 312
FLOATCLASS           : 63 64 95 278 279 280 281 282 285 290 294 309 311
FOR                  : 172 173 174 175 176 177
FOR_SOME             : 
FUNCION_FLECHA       : 186 190 194 198 202 206 210 214
HASHTAG              : 
IF                   : 217 220 221
IGUAL                : 46 47 48 49 50 51 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 112 115 120 121 122 123 124 125 126 127 128 129 130 157 158 159 160 163 164 165 169 170 266 267 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 301 302 303 304 308 309 310 311 315 316 317 318
IGUAL_COMPARACION    : 251
IMPLICIT             : 
IMPORT               : 2
INT                  : 88 104 108 158 160 174 174 175 175 176 176 177 177 186 268 269 275 282 286 288 291 292 293 294 299 305
INTCLASS             : 92 266 275 282 286 288 291 292 293 294 296 298
ITERATOR             : 172 173 174 175 176 177
LAZY                 : 
LIBRERIA_IO          : 
LISTCLASS            : 97 163 164 164 165 165
LLAVE_D              : 1 112 113 120 121 122 123 124 125 126 127 128 129 130 171 172 173 174 175 176 177 178 216 217 220 221 222
LLAVE_I              : 1 112 113 120 121 122 123 124 125 126 127 128 129 130 171 172 173 174 175 176 177 178 216 217 220 221 222
LONG                 : 109 190 276 280 284 287 288 289 290 292
LONGCLASS            : 61 62 93 276 280 284 287 288 289 290 292 302 304
MACRO                : 
MAS                  : 139 262
MATCH                : 178
MAYOR                : 253
MAYOR_IGUAL          : 
MENOR                : 254
MENOR_IGUAL          : 
MENOS                : 261
MOD                  : 265
MULTIPLICACION       : 263
NEW                  : 158 160 164
NOT                  : 229 230 231 234
NULL                 : 
OBJECT               : 1
OR                   : 233
OVERRIDE             : 
PACKAGE              : 
PAR_D                : 88 103 104 117 118 119 132 137 138 141 143 144 145 146 157 158 159 160 163 164 165 168 171 172 173 174 175 176 177 217 220 221 266 267 272 275 275 276 276 277 277 278 278 279 279 280 280 281 281 282 282 283 283 284 284 285 285 286 286 287 287 288 288 289 289 290 290 291 291 292 292 293 293 294 294
PAR_I                : 88 103 104 117 118 119 132 137 138 141 143 144 145 146 157 158 159 160 163 164 165 168 171 172 173 174 175 176 177 217 220 221 266 267 272 275 275 276 276 277 277 278 278 279 279 280 280 281 281 282 282 283 283 284 284 285 285 286 286 287 287 288 288 289 289 290 290 291 291 292 292 293 293 294 294
PRINT                : 138
PRINTLN              : 137
PRIVATE              : 
PROTECTED            : 
PUNTO                : 4 4 4 151 152 272 322 323 324 325
READLINE             : 4 141
RETURN               : 120 121 122 123 124 125 126 127 128 129 130
REVERSE              : 
SEALED               : 
STARTSWITH           : 272
STRING               : 67 68 69 70 98 202 240 240 246 247 272 272 275 276 277 278 279 283 287 291 322 323 324 325
STRINGCLASS          : 68 70 71 72 90 275 276 277 278 279 283 287 291
SUBGUION             : 214
SUPER                : 
THIS                 : 
THROW                : 
TO                   : 174 176
TO_DOUBLE            : 154 325
TO_FLOAT             : 155 324
TO_INT               : 153 322
TO_LONG              : 156 323
TRAIT                : 
TRUE                 : 105
TRY                  : 
TYPE                 : 
UNTIL                : 175 177
VAL                  : 47 49 51 62 64 66 69 70 72 75 76 78 81 82 84 159 160 163 164 165 170 274 297 298 303 304 310 311 317 318
VAR                  : 46 48 50 61 63 65 67 68 71 73 74 77 79 80 83 157 158 169 172 176 177 266 267 273 295 296 301 302 308 309 315 316
VARIABLE             : 1 4 4 4 46 46 47 47 48 49 50 51 61 61 62 62 63 63 64 64 65 65 66 66 67 68 69 70 71 71 72 72 73 74 75 76 77 77 78 78 79 80 81 82 83 83 84 84 85 86 87 88 100 103 103 104 112 113 114 115 120 121 121 122 123 124 125 125 126 127 128 129 129 130 142 152 157 158 159 160 163 164 165 169 170 172 172 173 173 174 175 176 177 178 226 229 242 243 244 245 246 247 248 249 250 250 256 257 258 258 260 266 267 273 274 295 296 297 298 301 302 303 304 308 309 310 311 315 316 317 318
WHILE                : 171
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

aritmetica           : 30 40 48 49 87 123 127 236 236 237 238 259 260
aritmeticos          : 255 256 257 258 259 260
array                : 59
arrayDouble          : 162
arrayInt             : 161
asignacion           : 9 15 21 31 41
asignacionBoolean    : 58
asignacionChar       : 57
asignacionDouble     : 55
asignacionFloat      : 54
asignacionInt        : 53
asignacionLong       : 52
asignacionString     : 56
booleanos            : 79 80 81 82 102 210 227 230 239 239 244 245
caseBool             : 211 212 213
caseChar             : 207 208 209
caseDob              : 199 200 201
caseFlt              : 195 196 197
caseInt              : 187 188 189
caseLgn              : 191 192 193
caseStr              : 203 204 205
cases                : 178
casesBool            : 185 212
casesChar            : 184 208
casesDob             : 182 200
casesFlt             : 181 196
casesInt             : 179 188
casesLgn             : 180 192
casesStr             : 183 204
castingcall          : 148
castingfun           : 151 152
codeBlock            : 186 190 194 198 202 206 210 214
comparacion          : 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250
condicional          : 171 217 220 221 224
contenido            : 31 32 33 34 35 36 37 38 39 40 112 113 120 121 122 123 128 129 130 171 172 173 174 175 176 177 216 217 220 221 222
contenidoLine        : 215
cuerpo               : 1 3 14 15 16 17 18 19
declaracion          : 118 119
dectipo              : 120 121 122 123 124 125 126 127
dectipoTupla         : 128 129 130
dectupla             : 273 274
defcase              : 189 193 197 201 205 209 213
doublevalues         : 315 316 317 318
else                 : 219 223
elseif               : 218 221 223
entrada              : 8 25 35 45 149
floatvalues          : 308 309 310 311 320
for                  : 11 17 27 37
funcall              : 6 23 33 43 150
funcion              : 5 14
if                   : 13 18 29 38 218 219
impresion            : 7 24 34 44
inicio               : 2 0
intvalues            : 295 296 297 298 306
io                   : 2
list                 : 60
logicos              : 224
longvalues           : 301 302 303 304 313
match                : 12 19 28 39
numeros              : 101 235 235 237 238 242 243 255 255 256 257 259
parametro            : 112 113 120 121 122 123 124 125 126 127 128 129 130
parametros           : 116 119
reasignacion         : 22 32 42
relacional           : 228 231
returnCastable       : 147 151
returnfun            : 50 51 86 122 126 130
startsWith           : 20 107
stringCastDouble     : 321
stringCastFloat      : 314
stringCastInt        : 300
stringCastLong       : 307
tipo                 : 96 97 114 115 131 133 134 135 136 158 158 160 160 164 165
tipos                : 132
tiposentry           : 134 136
tuple                : 128 169 170
valor                : 85 88 115 120 124 139 140 166 167
valorC               : 224 225
valorI               : 137 138 139
valores              : 143 145 157 159 163 164 165 167 168
valoresDouble        : 267 271
valoresInt           : 266 269
varparen             : 142 145 146
while                : 10 16 26 36

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D
    (2) inicio -> . IMPORT io inicio
    (3) inicio -> . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . funcion cuerpo
    (15) cuerpo -> . asignacion cuerpo
    (16) cuerpo -> . while cuerpo
    (17) cuerpo -> . for cuerpo
    (18) cuerpo -> . if cuerpo
    (19) cuerpo -> . match cuerpo
    (20) cuerpo -> . startsWith
    (112) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (113) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (120) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (122) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    OBJECT          shift and go to state 2
    IMPORT          shift and go to state 5
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    inicio                         shift and go to state 1
    cuerpo                         shift and go to state 4
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    for                            shift and go to state 12
    match                          shift and go to state 13
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> OBJECT . VARIABLE LLAVE_I cuerpo LLAVE_D

    VARIABLE        shift and go to state 37


state 3

    (142) funcall -> VARIABLE . varparen
    (178) match -> VARIABLE . MATCH LLAVE_I cases LLAVE_D
    (143) varparen -> . PAR_I valores PAR_D
    (144) varparen -> . PAR_I PAR_D
    (145) varparen -> . varparen PAR_I valores PAR_D
    (146) varparen -> . varparen PAR_I PAR_D

    MATCH           shift and go to state 39
    PAR_I           shift and go to state 40

    varparen                       shift and go to state 38

state 4

    (3) inicio -> cuerpo .

    $end            reduce using rule 3 (inicio -> cuerpo .)


state 5

    (2) inicio -> IMPORT . io inicio
    (4) io -> . VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE

    VARIABLE        shift and go to state 42

    io                             shift and go to state 41

state 6

    (5) cuerpo -> funcion .
    (14) cuerpo -> funcion . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . funcion cuerpo
    (15) cuerpo -> . asignacion cuerpo
    (16) cuerpo -> . while cuerpo
    (17) cuerpo -> . for cuerpo
    (18) cuerpo -> . if cuerpo
    (19) cuerpo -> . match cuerpo
    (20) cuerpo -> . startsWith
    (112) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (113) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (120) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (122) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    $end            reduce using rule 5 (cuerpo -> funcion .)
    LLAVE_D         reduce using rule 5 (cuerpo -> funcion .)
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    funcion                        shift and go to state 6
    cuerpo                         shift and go to state 43
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    for                            shift and go to state 12
    match                          shift and go to state 13
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 7

    (6) cuerpo -> funcall .

    $end            reduce using rule 6 (cuerpo -> funcall .)
    LLAVE_D         reduce using rule 6 (cuerpo -> funcall .)


state 8

    (7) cuerpo -> impresion .

    $end            reduce using rule 7 (cuerpo -> impresion .)
    LLAVE_D         reduce using rule 7 (cuerpo -> impresion .)


state 9

    (8) cuerpo -> entrada .

    $end            reduce using rule 8 (cuerpo -> entrada .)
    LLAVE_D         reduce using rule 8 (cuerpo -> entrada .)


state 10

    (9) cuerpo -> asignacion .
    (15) cuerpo -> asignacion . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . funcion cuerpo
    (15) cuerpo -> . asignacion cuerpo
    (16) cuerpo -> . while cuerpo
    (17) cuerpo -> . for cuerpo
    (18) cuerpo -> . if cuerpo
    (19) cuerpo -> . match cuerpo
    (20) cuerpo -> . startsWith
    (112) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (113) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (120) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (122) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    $end            reduce using rule 9 (cuerpo -> asignacion .)
    LLAVE_D         reduce using rule 9 (cuerpo -> asignacion .)
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    asignacion                     shift and go to state 10
    cuerpo                         shift and go to state 44
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    while                          shift and go to state 11
    for                            shift and go to state 12
    match                          shift and go to state 13
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 11

    (10) cuerpo -> while .
    (16) cuerpo -> while . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . funcion cuerpo
    (15) cuerpo -> . asignacion cuerpo
    (16) cuerpo -> . while cuerpo
    (17) cuerpo -> . for cuerpo
    (18) cuerpo -> . if cuerpo
    (19) cuerpo -> . match cuerpo
    (20) cuerpo -> . startsWith
    (112) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (113) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (120) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (122) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    $end            reduce using rule 10 (cuerpo -> while .)
    LLAVE_D         reduce using rule 10 (cuerpo -> while .)
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    while                          shift and go to state 11
    cuerpo                         shift and go to state 45
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    for                            shift and go to state 12
    match                          shift and go to state 13
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 12

    (11) cuerpo -> for .
    (17) cuerpo -> for . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . funcion cuerpo
    (15) cuerpo -> . asignacion cuerpo
    (16) cuerpo -> . while cuerpo
    (17) cuerpo -> . for cuerpo
    (18) cuerpo -> . if cuerpo
    (19) cuerpo -> . match cuerpo
    (20) cuerpo -> . startsWith
    (112) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (113) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (120) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (122) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    $end            reduce using rule 11 (cuerpo -> for .)
    LLAVE_D         reduce using rule 11 (cuerpo -> for .)
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    for                            shift and go to state 12
    cuerpo                         shift and go to state 46
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    match                          shift and go to state 13
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 13

    (12) cuerpo -> match .
    (19) cuerpo -> match . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . funcion cuerpo
    (15) cuerpo -> . asignacion cuerpo
    (16) cuerpo -> . while cuerpo
    (17) cuerpo -> . for cuerpo
    (18) cuerpo -> . if cuerpo
    (19) cuerpo -> . match cuerpo
    (20) cuerpo -> . startsWith
    (112) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (113) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (120) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (122) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    $end            reduce using rule 12 (cuerpo -> match .)
    LLAVE_D         reduce using rule 12 (cuerpo -> match .)
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    match                          shift and go to state 13
    cuerpo                         shift and go to state 47
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    for                            shift and go to state 12
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 14

    (13) cuerpo -> if .
    (18) cuerpo -> if . cuerpo
    (218) if -> if . elseif
    (219) if -> if . else
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . funcion cuerpo
    (15) cuerpo -> . asignacion cuerpo
    (16) cuerpo -> . while cuerpo
    (17) cuerpo -> . for cuerpo
    (18) cuerpo -> . if cuerpo
    (19) cuerpo -> . match cuerpo
    (20) cuerpo -> . startsWith
    (220) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (222) else -> . ELSE LLAVE_I contenido LLAVE_D
    (223) else -> . elseif else
    (112) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (113) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (120) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (122) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    $end            reduce using rule 13 (cuerpo -> if .)
    LLAVE_D         reduce using rule 13 (cuerpo -> if .)
    ELSE            shift and go to state 51
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    if                             shift and go to state 14
    cuerpo                         shift and go to state 48
    elseif                         shift and go to state 49
    else                           shift and go to state 50
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    for                            shift and go to state 12
    match                          shift and go to state 13
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 15

    (20) cuerpo -> startsWith .

    $end            reduce using rule 20 (cuerpo -> startsWith .)
    LLAVE_D         reduce using rule 20 (cuerpo -> startsWith .)


state 16

    (112) funcion -> DEF . VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (113) funcion -> DEF . VARIABLE parametro LLAVE_I contenido LLAVE_D
    (120) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (121) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (122) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (123) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (124) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (125) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (126) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (127) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (128) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D

    VARIABLE        shift and go to state 52


state 17

    (137) impresion -> PRINTLN . PAR_I valorI PAR_D

    PAR_I           shift and go to state 53


state 18

    (138) impresion -> PRINT . PAR_I valorI PAR_D

    PAR_I           shift and go to state 54


state 19

    (141) entrada -> READLINE . PAR_I PAR_D

    PAR_I           shift and go to state 55


state 20

    (46) asignacion -> VAR . VARIABLE IGUAL VARIABLE
    (48) asignacion -> VAR . VARIABLE IGUAL aritmetica
    (50) asignacion -> VAR . VARIABLE IGUAL returnfun
    (169) asignacion -> VAR . VARIABLE IGUAL tuple
    (273) asignacion -> VAR . VARIABLE DOBLE_PUNTO dectupla
    (61) asignacionLong -> VAR . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> VAR . VARIABLE IGUAL longvalues
    (302) asignacionLong -> VAR . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> VAR . VARIABLE IGUAL intvalues
    (296) asignacionInt -> VAR . VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> VAR . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> VAR . VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> VAR . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> VAR . VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> VAR . VARIABLE IGUAL STRING
    (68) asignacionString -> VAR . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> VAR . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> VAR . VARIABLE IGUAL CHAR
    (74) asignacionChar -> VAR . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> VAR . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> VAR . VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> VAR . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> VAR . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> VAR . VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (266) arrayInt -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VARIABLE        shift and go to state 56


state 21

    (47) asignacion -> VAL . VARIABLE IGUAL VARIABLE
    (49) asignacion -> VAL . VARIABLE IGUAL aritmetica
    (51) asignacion -> VAL . VARIABLE IGUAL returnfun
    (170) asignacion -> VAL . VARIABLE IGUAL tuple
    (274) asignacion -> VAL . VARIABLE DOBLE_PUNTO dectupla
    (62) asignacionLong -> VAL . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (303) asignacionLong -> VAL . VARIABLE IGUAL longvalues
    (304) asignacionLong -> VAL . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (297) asignacionInt -> VAL . VARIABLE IGUAL intvalues
    (298) asignacionInt -> VAL . VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (64) asignacionFloat -> VAL . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (310) asignacionFloat -> VAL . VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> VAL . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (66) asignacionDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (317) asignacionDouble -> VAL . VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (69) asignacionString -> VAL . VARIABLE IGUAL STRING
    (70) asignacionString -> VAL . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> VAL . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionChar -> VAL . VARIABLE IGUAL CHAR
    (76) asignacionChar -> VAL . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> VAL . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionBoolean -> VAL . VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> VAL . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> VAL . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (159) array -> VAL . VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> VAL . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> VAL . VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> VAL . VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> VAL . VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    VARIABLE        shift and go to state 57


state 22

    (52) asignacion -> asignacionLong .

    DEF             reduce using rule 52 (asignacion -> asignacionLong .)
    VARIABLE        reduce using rule 52 (asignacion -> asignacionLong .)
    PRINTLN         reduce using rule 52 (asignacion -> asignacionLong .)
    PRINT           reduce using rule 52 (asignacion -> asignacionLong .)
    READLINE        reduce using rule 52 (asignacion -> asignacionLong .)
    VAR             reduce using rule 52 (asignacion -> asignacionLong .)
    VAL             reduce using rule 52 (asignacion -> asignacionLong .)
    WHILE           reduce using rule 52 (asignacion -> asignacionLong .)
    FOR             reduce using rule 52 (asignacion -> asignacionLong .)
    IF              reduce using rule 52 (asignacion -> asignacionLong .)
    STRING          reduce using rule 52 (asignacion -> asignacionLong .)
    $end            reduce using rule 52 (asignacion -> asignacionLong .)
    LLAVE_D         reduce using rule 52 (asignacion -> asignacionLong .)
    INT             reduce using rule 52 (asignacion -> asignacionLong .)
    LONG            reduce using rule 52 (asignacion -> asignacionLong .)
    FLOAT           reduce using rule 52 (asignacion -> asignacionLong .)
    DOUBLE          reduce using rule 52 (asignacion -> asignacionLong .)
    RETURN          reduce using rule 52 (asignacion -> asignacionLong .)
    CASE            reduce using rule 52 (asignacion -> asignacionLong .)


state 23

    (53) asignacion -> asignacionInt .

    DEF             reduce using rule 53 (asignacion -> asignacionInt .)
    VARIABLE        reduce using rule 53 (asignacion -> asignacionInt .)
    PRINTLN         reduce using rule 53 (asignacion -> asignacionInt .)
    PRINT           reduce using rule 53 (asignacion -> asignacionInt .)
    READLINE        reduce using rule 53 (asignacion -> asignacionInt .)
    VAR             reduce using rule 53 (asignacion -> asignacionInt .)
    VAL             reduce using rule 53 (asignacion -> asignacionInt .)
    WHILE           reduce using rule 53 (asignacion -> asignacionInt .)
    FOR             reduce using rule 53 (asignacion -> asignacionInt .)
    IF              reduce using rule 53 (asignacion -> asignacionInt .)
    STRING          reduce using rule 53 (asignacion -> asignacionInt .)
    $end            reduce using rule 53 (asignacion -> asignacionInt .)
    LLAVE_D         reduce using rule 53 (asignacion -> asignacionInt .)
    INT             reduce using rule 53 (asignacion -> asignacionInt .)
    LONG            reduce using rule 53 (asignacion -> asignacionInt .)
    FLOAT           reduce using rule 53 (asignacion -> asignacionInt .)
    DOUBLE          reduce using rule 53 (asignacion -> asignacionInt .)
    RETURN          reduce using rule 53 (asignacion -> asignacionInt .)
    CASE            reduce using rule 53 (asignacion -> asignacionInt .)


state 24

    (54) asignacion -> asignacionFloat .

    DEF             reduce using rule 54 (asignacion -> asignacionFloat .)
    VARIABLE        reduce using rule 54 (asignacion -> asignacionFloat .)
    PRINTLN         reduce using rule 54 (asignacion -> asignacionFloat .)
    PRINT           reduce using rule 54 (asignacion -> asignacionFloat .)
    READLINE        reduce using rule 54 (asignacion -> asignacionFloat .)
    VAR             reduce using rule 54 (asignacion -> asignacionFloat .)
    VAL             reduce using rule 54 (asignacion -> asignacionFloat .)
    WHILE           reduce using rule 54 (asignacion -> asignacionFloat .)
    FOR             reduce using rule 54 (asignacion -> asignacionFloat .)
    IF              reduce using rule 54 (asignacion -> asignacionFloat .)
    STRING          reduce using rule 54 (asignacion -> asignacionFloat .)
    $end            reduce using rule 54 (asignacion -> asignacionFloat .)
    LLAVE_D         reduce using rule 54 (asignacion -> asignacionFloat .)
    INT             reduce using rule 54 (asignacion -> asignacionFloat .)
    LONG            reduce using rule 54 (asignacion -> asignacionFloat .)
    FLOAT           reduce using rule 54 (asignacion -> asignacionFloat .)
    DOUBLE          reduce using rule 54 (asignacion -> asignacionFloat .)
    RETURN          reduce using rule 54 (asignacion -> asignacionFloat .)
    CASE            reduce using rule 54 (asignacion -> asignacionFloat .)


state 25

    (55) asignacion -> asignacionDouble .

    DEF             reduce using rule 55 (asignacion -> asignacionDouble .)
    VARIABLE        reduce using rule 55 (asignacion -> asignacionDouble .)
    PRINTLN         reduce using rule 55 (asignacion -> asignacionDouble .)
    PRINT           reduce using rule 55 (asignacion -> asignacionDouble .)
    READLINE        reduce using rule 55 (asignacion -> asignacionDouble .)
    VAR             reduce using rule 55 (asignacion -> asignacionDouble .)
    VAL             reduce using rule 55 (asignacion -> asignacionDouble .)
    WHILE           reduce using rule 55 (asignacion -> asignacionDouble .)
    FOR             reduce using rule 55 (asignacion -> asignacionDouble .)
    IF              reduce using rule 55 (asignacion -> asignacionDouble .)
    STRING          reduce using rule 55 (asignacion -> asignacionDouble .)
    $end            reduce using rule 55 (asignacion -> asignacionDouble .)
    LLAVE_D         reduce using rule 55 (asignacion -> asignacionDouble .)
    INT             reduce using rule 55 (asignacion -> asignacionDouble .)
    LONG            reduce using rule 55 (asignacion -> asignacionDouble .)
    FLOAT           reduce using rule 55 (asignacion -> asignacionDouble .)
    DOUBLE          reduce using rule 55 (asignacion -> asignacionDouble .)
    RETURN          reduce using rule 55 (asignacion -> asignacionDouble .)
    CASE            reduce using rule 55 (asignacion -> asignacionDouble .)


state 26

    (56) asignacion -> asignacionString .

    DEF             reduce using rule 56 (asignacion -> asignacionString .)
    VARIABLE        reduce using rule 56 (asignacion -> asignacionString .)
    PRINTLN         reduce using rule 56 (asignacion -> asignacionString .)
    PRINT           reduce using rule 56 (asignacion -> asignacionString .)
    READLINE        reduce using rule 56 (asignacion -> asignacionString .)
    VAR             reduce using rule 56 (asignacion -> asignacionString .)
    VAL             reduce using rule 56 (asignacion -> asignacionString .)
    WHILE           reduce using rule 56 (asignacion -> asignacionString .)
    FOR             reduce using rule 56 (asignacion -> asignacionString .)
    IF              reduce using rule 56 (asignacion -> asignacionString .)
    STRING          reduce using rule 56 (asignacion -> asignacionString .)
    $end            reduce using rule 56 (asignacion -> asignacionString .)
    LLAVE_D         reduce using rule 56 (asignacion -> asignacionString .)
    INT             reduce using rule 56 (asignacion -> asignacionString .)
    LONG            reduce using rule 56 (asignacion -> asignacionString .)
    FLOAT           reduce using rule 56 (asignacion -> asignacionString .)
    DOUBLE          reduce using rule 56 (asignacion -> asignacionString .)
    RETURN          reduce using rule 56 (asignacion -> asignacionString .)
    CASE            reduce using rule 56 (asignacion -> asignacionString .)


state 27

    (57) asignacion -> asignacionChar .

    DEF             reduce using rule 57 (asignacion -> asignacionChar .)
    VARIABLE        reduce using rule 57 (asignacion -> asignacionChar .)
    PRINTLN         reduce using rule 57 (asignacion -> asignacionChar .)
    PRINT           reduce using rule 57 (asignacion -> asignacionChar .)
    READLINE        reduce using rule 57 (asignacion -> asignacionChar .)
    VAR             reduce using rule 57 (asignacion -> asignacionChar .)
    VAL             reduce using rule 57 (asignacion -> asignacionChar .)
    WHILE           reduce using rule 57 (asignacion -> asignacionChar .)
    FOR             reduce using rule 57 (asignacion -> asignacionChar .)
    IF              reduce using rule 57 (asignacion -> asignacionChar .)
    STRING          reduce using rule 57 (asignacion -> asignacionChar .)
    $end            reduce using rule 57 (asignacion -> asignacionChar .)
    LLAVE_D         reduce using rule 57 (asignacion -> asignacionChar .)
    INT             reduce using rule 57 (asignacion -> asignacionChar .)
    LONG            reduce using rule 57 (asignacion -> asignacionChar .)
    FLOAT           reduce using rule 57 (asignacion -> asignacionChar .)
    DOUBLE          reduce using rule 57 (asignacion -> asignacionChar .)
    RETURN          reduce using rule 57 (asignacion -> asignacionChar .)
    CASE            reduce using rule 57 (asignacion -> asignacionChar .)


state 28

    (58) asignacion -> asignacionBoolean .

    DEF             reduce using rule 58 (asignacion -> asignacionBoolean .)
    VARIABLE        reduce using rule 58 (asignacion -> asignacionBoolean .)
    PRINTLN         reduce using rule 58 (asignacion -> asignacionBoolean .)
    PRINT           reduce using rule 58 (asignacion -> asignacionBoolean .)
    READLINE        reduce using rule 58 (asignacion -> asignacionBoolean .)
    VAR             reduce using rule 58 (asignacion -> asignacionBoolean .)
    VAL             reduce using rule 58 (asignacion -> asignacionBoolean .)
    WHILE           reduce using rule 58 (asignacion -> asignacionBoolean .)
    FOR             reduce using rule 58 (asignacion -> asignacionBoolean .)
    IF              reduce using rule 58 (asignacion -> asignacionBoolean .)
    STRING          reduce using rule 58 (asignacion -> asignacionBoolean .)
    $end            reduce using rule 58 (asignacion -> asignacionBoolean .)
    LLAVE_D         reduce using rule 58 (asignacion -> asignacionBoolean .)
    INT             reduce using rule 58 (asignacion -> asignacionBoolean .)
    LONG            reduce using rule 58 (asignacion -> asignacionBoolean .)
    FLOAT           reduce using rule 58 (asignacion -> asignacionBoolean .)
    DOUBLE          reduce using rule 58 (asignacion -> asignacionBoolean .)
    RETURN          reduce using rule 58 (asignacion -> asignacionBoolean .)
    CASE            reduce using rule 58 (asignacion -> asignacionBoolean .)


state 29

    (59) asignacion -> array .

    DEF             reduce using rule 59 (asignacion -> array .)
    VARIABLE        reduce using rule 59 (asignacion -> array .)
    PRINTLN         reduce using rule 59 (asignacion -> array .)
    PRINT           reduce using rule 59 (asignacion -> array .)
    READLINE        reduce using rule 59 (asignacion -> array .)
    VAR             reduce using rule 59 (asignacion -> array .)
    VAL             reduce using rule 59 (asignacion -> array .)
    WHILE           reduce using rule 59 (asignacion -> array .)
    FOR             reduce using rule 59 (asignacion -> array .)
    IF              reduce using rule 59 (asignacion -> array .)
    STRING          reduce using rule 59 (asignacion -> array .)
    $end            reduce using rule 59 (asignacion -> array .)
    LLAVE_D         reduce using rule 59 (asignacion -> array .)
    INT             reduce using rule 59 (asignacion -> array .)
    LONG            reduce using rule 59 (asignacion -> array .)
    FLOAT           reduce using rule 59 (asignacion -> array .)
    DOUBLE          reduce using rule 59 (asignacion -> array .)
    RETURN          reduce using rule 59 (asignacion -> array .)
    CASE            reduce using rule 59 (asignacion -> array .)


state 30

    (60) asignacion -> list .

    DEF             reduce using rule 60 (asignacion -> list .)
    VARIABLE        reduce using rule 60 (asignacion -> list .)
    PRINTLN         reduce using rule 60 (asignacion -> list .)
    PRINT           reduce using rule 60 (asignacion -> list .)
    READLINE        reduce using rule 60 (asignacion -> list .)
    VAR             reduce using rule 60 (asignacion -> list .)
    VAL             reduce using rule 60 (asignacion -> list .)
    WHILE           reduce using rule 60 (asignacion -> list .)
    FOR             reduce using rule 60 (asignacion -> list .)
    IF              reduce using rule 60 (asignacion -> list .)
    STRING          reduce using rule 60 (asignacion -> list .)
    $end            reduce using rule 60 (asignacion -> list .)
    LLAVE_D         reduce using rule 60 (asignacion -> list .)
    INT             reduce using rule 60 (asignacion -> list .)
    LONG            reduce using rule 60 (asignacion -> list .)
    FLOAT           reduce using rule 60 (asignacion -> list .)
    DOUBLE          reduce using rule 60 (asignacion -> list .)
    RETURN          reduce using rule 60 (asignacion -> list .)
    CASE            reduce using rule 60 (asignacion -> list .)


state 31

    (171) while -> WHILE . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 58


state 32

    (172) for -> FOR . PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> FOR . PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> FOR . PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> FOR . PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> FOR . PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> FOR . PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 59


state 33

    (217) if -> IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 60


state 34

    (272) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D

    PUNTO           shift and go to state 61


state 35

    (161) array -> arrayInt .

    DEF             reduce using rule 161 (array -> arrayInt .)
    VARIABLE        reduce using rule 161 (array -> arrayInt .)
    PRINTLN         reduce using rule 161 (array -> arrayInt .)
    PRINT           reduce using rule 161 (array -> arrayInt .)
    READLINE        reduce using rule 161 (array -> arrayInt .)
    VAR             reduce using rule 161 (array -> arrayInt .)
    VAL             reduce using rule 161 (array -> arrayInt .)
    WHILE           reduce using rule 161 (array -> arrayInt .)
    FOR             reduce using rule 161 (array -> arrayInt .)
    IF              reduce using rule 161 (array -> arrayInt .)
    STRING          reduce using rule 161 (array -> arrayInt .)
    $end            reduce using rule 161 (array -> arrayInt .)
    LLAVE_D         reduce using rule 161 (array -> arrayInt .)
    INT             reduce using rule 161 (array -> arrayInt .)
    LONG            reduce using rule 161 (array -> arrayInt .)
    FLOAT           reduce using rule 161 (array -> arrayInt .)
    DOUBLE          reduce using rule 161 (array -> arrayInt .)
    RETURN          reduce using rule 161 (array -> arrayInt .)
    CASE            reduce using rule 161 (array -> arrayInt .)


state 36

    (162) array -> arrayDouble .

    DEF             reduce using rule 162 (array -> arrayDouble .)
    VARIABLE        reduce using rule 162 (array -> arrayDouble .)
    PRINTLN         reduce using rule 162 (array -> arrayDouble .)
    PRINT           reduce using rule 162 (array -> arrayDouble .)
    READLINE        reduce using rule 162 (array -> arrayDouble .)
    VAR             reduce using rule 162 (array -> arrayDouble .)
    VAL             reduce using rule 162 (array -> arrayDouble .)
    WHILE           reduce using rule 162 (array -> arrayDouble .)
    FOR             reduce using rule 162 (array -> arrayDouble .)
    IF              reduce using rule 162 (array -> arrayDouble .)
    STRING          reduce using rule 162 (array -> arrayDouble .)
    $end            reduce using rule 162 (array -> arrayDouble .)
    LLAVE_D         reduce using rule 162 (array -> arrayDouble .)
    INT             reduce using rule 162 (array -> arrayDouble .)
    LONG            reduce using rule 162 (array -> arrayDouble .)
    FLOAT           reduce using rule 162 (array -> arrayDouble .)
    DOUBLE          reduce using rule 162 (array -> arrayDouble .)
    RETURN          reduce using rule 162 (array -> arrayDouble .)
    CASE            reduce using rule 162 (array -> arrayDouble .)


state 37

    (1) inicio -> OBJECT VARIABLE . LLAVE_I cuerpo LLAVE_D

    LLAVE_I         shift and go to state 62


state 38

    (142) funcall -> VARIABLE varparen .
    (145) varparen -> varparen . PAR_I valores PAR_D
    (146) varparen -> varparen . PAR_I PAR_D

    $end            reduce using rule 142 (funcall -> VARIABLE varparen .)
    LLAVE_D         reduce using rule 142 (funcall -> VARIABLE varparen .)
    VAR             reduce using rule 142 (funcall -> VARIABLE varparen .)
    VAL             reduce using rule 142 (funcall -> VARIABLE varparen .)
    VARIABLE        reduce using rule 142 (funcall -> VARIABLE varparen .)
    PRINTLN         reduce using rule 142 (funcall -> VARIABLE varparen .)
    PRINT           reduce using rule 142 (funcall -> VARIABLE varparen .)
    READLINE        reduce using rule 142 (funcall -> VARIABLE varparen .)
    WHILE           reduce using rule 142 (funcall -> VARIABLE varparen .)
    FOR             reduce using rule 142 (funcall -> VARIABLE varparen .)
    IF              reduce using rule 142 (funcall -> VARIABLE varparen .)
    INT             reduce using rule 142 (funcall -> VARIABLE varparen .)
    LONG            reduce using rule 142 (funcall -> VARIABLE varparen .)
    FLOAT           reduce using rule 142 (funcall -> VARIABLE varparen .)
    DOUBLE          reduce using rule 142 (funcall -> VARIABLE varparen .)
    PUNTO           reduce using rule 142 (funcall -> VARIABLE varparen .)
    DEF             reduce using rule 142 (funcall -> VARIABLE varparen .)
    STRING          reduce using rule 142 (funcall -> VARIABLE varparen .)
    RETURN          reduce using rule 142 (funcall -> VARIABLE varparen .)
    CASE            reduce using rule 142 (funcall -> VARIABLE varparen .)
    PAR_I           shift and go to state 63


state 39

    (178) match -> VARIABLE MATCH . LLAVE_I cases LLAVE_D

    LLAVE_I         shift and go to state 64


state 40

    (143) varparen -> PAR_I . valores PAR_D
    (144) varparen -> PAR_I . PAR_D
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (98) valor -> . STRING
    (99) valor -> . CHAR
    (100) valor -> . VARIABLE
    (101) valor -> . numeros
    (102) valor -> . booleanos
    (103) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (104) valor -> . VARIABLE PAR_I INT PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    PAR_D           shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valores                        shift and go to state 65
    valor                          shift and go to state 67
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72
    startsWith                     shift and go to state 79

state 41

    (2) inicio -> IMPORT io . inicio
    (1) inicio -> . OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D
    (2) inicio -> . IMPORT io inicio
    (3) inicio -> . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . funcion cuerpo
    (15) cuerpo -> . asignacion cuerpo
    (16) cuerpo -> . while cuerpo
    (17) cuerpo -> . for cuerpo
    (18) cuerpo -> . if cuerpo
    (19) cuerpo -> . match cuerpo
    (20) cuerpo -> . startsWith
    (112) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (113) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (120) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (122) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    OBJECT          shift and go to state 2
    IMPORT          shift and go to state 5
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    inicio                         shift and go to state 80
    cuerpo                         shift and go to state 4
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    for                            shift and go to state 12
    match                          shift and go to state 13
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 42

    (4) io -> VARIABLE . PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE

    PUNTO           shift and go to state 81


state 43

    (14) cuerpo -> funcion cuerpo .

    $end            reduce using rule 14 (cuerpo -> funcion cuerpo .)
    LLAVE_D         reduce using rule 14 (cuerpo -> funcion cuerpo .)


state 44

    (15) cuerpo -> asignacion cuerpo .

    $end            reduce using rule 15 (cuerpo -> asignacion cuerpo .)
    LLAVE_D         reduce using rule 15 (cuerpo -> asignacion cuerpo .)


state 45

    (16) cuerpo -> while cuerpo .

    $end            reduce using rule 16 (cuerpo -> while cuerpo .)
    LLAVE_D         reduce using rule 16 (cuerpo -> while cuerpo .)


state 46

    (17) cuerpo -> for cuerpo .

    $end            reduce using rule 17 (cuerpo -> for cuerpo .)
    LLAVE_D         reduce using rule 17 (cuerpo -> for cuerpo .)


state 47

    (19) cuerpo -> match cuerpo .

    $end            reduce using rule 19 (cuerpo -> match cuerpo .)
    LLAVE_D         reduce using rule 19 (cuerpo -> match cuerpo .)


state 48

    (18) cuerpo -> if cuerpo .

    $end            reduce using rule 18 (cuerpo -> if cuerpo .)
    LLAVE_D         reduce using rule 18 (cuerpo -> if cuerpo .)


state 49

    (218) if -> if elseif .
    (223) else -> elseif . else
    (222) else -> . ELSE LLAVE_I contenido LLAVE_D
    (223) else -> . elseif else
    (220) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

  ! shift/reduce conflict for ELSE resolved as shift
    DEF             reduce using rule 218 (if -> if elseif .)
    VARIABLE        reduce using rule 218 (if -> if elseif .)
    PRINTLN         reduce using rule 218 (if -> if elseif .)
    PRINT           reduce using rule 218 (if -> if elseif .)
    READLINE        reduce using rule 218 (if -> if elseif .)
    VAR             reduce using rule 218 (if -> if elseif .)
    VAL             reduce using rule 218 (if -> if elseif .)
    WHILE           reduce using rule 218 (if -> if elseif .)
    FOR             reduce using rule 218 (if -> if elseif .)
    IF              reduce using rule 218 (if -> if elseif .)
    STRING          reduce using rule 218 (if -> if elseif .)
    $end            reduce using rule 218 (if -> if elseif .)
    LLAVE_D         reduce using rule 218 (if -> if elseif .)
    INT             reduce using rule 218 (if -> if elseif .)
    LONG            reduce using rule 218 (if -> if elseif .)
    FLOAT           reduce using rule 218 (if -> if elseif .)
    DOUBLE          reduce using rule 218 (if -> if elseif .)
    RETURN          reduce using rule 218 (if -> if elseif .)
    ELSE            shift and go to state 84

  ! ELSE            [ reduce using rule 218 (if -> if elseif .) ]

    elseif                         shift and go to state 82
    else                           shift and go to state 83

state 50

    (219) if -> if else .

    ELSE            reduce using rule 219 (if -> if else .)
    DEF             reduce using rule 219 (if -> if else .)
    VARIABLE        reduce using rule 219 (if -> if else .)
    PRINTLN         reduce using rule 219 (if -> if else .)
    PRINT           reduce using rule 219 (if -> if else .)
    READLINE        reduce using rule 219 (if -> if else .)
    VAR             reduce using rule 219 (if -> if else .)
    VAL             reduce using rule 219 (if -> if else .)
    WHILE           reduce using rule 219 (if -> if else .)
    FOR             reduce using rule 219 (if -> if else .)
    IF              reduce using rule 219 (if -> if else .)
    STRING          reduce using rule 219 (if -> if else .)
    $end            reduce using rule 219 (if -> if else .)
    LLAVE_D         reduce using rule 219 (if -> if else .)
    INT             reduce using rule 219 (if -> if else .)
    LONG            reduce using rule 219 (if -> if else .)
    FLOAT           reduce using rule 219 (if -> if else .)
    DOUBLE          reduce using rule 219 (if -> if else .)
    RETURN          reduce using rule 219 (if -> if else .)


state 51

    (220) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (222) else -> ELSE . LLAVE_I contenido LLAVE_D

    IF              shift and go to state 85
    LLAVE_I         shift and go to state 86


state 52

    (112) funcion -> DEF VARIABLE . parametro IGUAL LLAVE_I contenido LLAVE_D
    (113) funcion -> DEF VARIABLE . parametro LLAVE_I contenido LLAVE_D
    (120) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (121) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (122) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (123) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (124) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (125) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (126) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (127) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (128) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (116) parametro -> . parametros
    (117) parametro -> . PAR_I PAR_D
    (118) parametros -> . PAR_I declaracion PAR_D
    (119) parametros -> . PAR_I declaracion PAR_D parametros

    PAR_I           shift and go to state 89

    parametro                      shift and go to state 87
    parametros                     shift and go to state 88

state 53

    (137) impresion -> PRINTLN PAR_I . valorI PAR_D
    (139) valorI -> . valor MAS valorI
    (140) valorI -> . valor
    (98) valor -> . STRING
    (99) valor -> . CHAR
    (100) valor -> . VARIABLE
    (101) valor -> . numeros
    (102) valor -> . booleanos
    (103) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (104) valor -> . VARIABLE PAR_I INT PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valorI                         shift and go to state 90
    valor                          shift and go to state 91
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72
    startsWith                     shift and go to state 79

state 54

    (138) impresion -> PRINT PAR_I . valorI PAR_D
    (139) valorI -> . valor MAS valorI
    (140) valorI -> . valor
    (98) valor -> . STRING
    (99) valor -> . CHAR
    (100) valor -> . VARIABLE
    (101) valor -> . numeros
    (102) valor -> . booleanos
    (103) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (104) valor -> . VARIABLE PAR_I INT PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valorI                         shift and go to state 92
    valor                          shift and go to state 91
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72
    startsWith                     shift and go to state 79

state 55

    (141) entrada -> READLINE PAR_I . PAR_D

    PAR_D           shift and go to state 93


state 56

    (46) asignacion -> VAR VARIABLE . IGUAL VARIABLE
    (48) asignacion -> VAR VARIABLE . IGUAL aritmetica
    (50) asignacion -> VAR VARIABLE . IGUAL returnfun
    (169) asignacion -> VAR VARIABLE . IGUAL tuple
    (273) asignacion -> VAR VARIABLE . DOBLE_PUNTO dectupla
    (61) asignacionLong -> VAR VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> VAR VARIABLE . IGUAL longvalues
    (302) asignacionLong -> VAR VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> VAR VARIABLE . IGUAL intvalues
    (296) asignacionInt -> VAR VARIABLE . DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> VAR VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> VAR VARIABLE . IGUAL floatvalues
    (309) asignacionFloat -> VAR VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> VAR VARIABLE . IGUAL doublevalues
    (316) asignacionDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> VAR VARIABLE . IGUAL STRING
    (68) asignacionString -> VAR VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> VAR VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> VAR VARIABLE . IGUAL CHAR
    (74) asignacionChar -> VAR VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> VAR VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> VAR VARIABLE . IGUAL booleanos
    (80) asignacionBoolean -> VAR VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> VAR VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> VAR VARIABLE . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (266) arrayInt -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    IGUAL           shift and go to state 94
    DOBLE_PUNTO     shift and go to state 95


state 57

    (47) asignacion -> VAL VARIABLE . IGUAL VARIABLE
    (49) asignacion -> VAL VARIABLE . IGUAL aritmetica
    (51) asignacion -> VAL VARIABLE . IGUAL returnfun
    (170) asignacion -> VAL VARIABLE . IGUAL tuple
    (274) asignacion -> VAL VARIABLE . DOBLE_PUNTO dectupla
    (62) asignacionLong -> VAL VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (303) asignacionLong -> VAL VARIABLE . IGUAL longvalues
    (304) asignacionLong -> VAL VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (297) asignacionInt -> VAL VARIABLE . IGUAL intvalues
    (298) asignacionInt -> VAL VARIABLE . DOBLE_PUNTO INTCLASS IGUAL intvalues
    (64) asignacionFloat -> VAL VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (310) asignacionFloat -> VAL VARIABLE . IGUAL floatvalues
    (311) asignacionFloat -> VAL VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (66) asignacionDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (317) asignacionDouble -> VAL VARIABLE . IGUAL doublevalues
    (318) asignacionDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (69) asignacionString -> VAL VARIABLE . IGUAL STRING
    (70) asignacionString -> VAL VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> VAL VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionChar -> VAL VARIABLE . IGUAL CHAR
    (76) asignacionChar -> VAL VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> VAL VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionBoolean -> VAL VARIABLE . IGUAL booleanos
    (82) asignacionBoolean -> VAL VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> VAL VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (159) array -> VAL VARIABLE . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> VAL VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (163) list -> VAL VARIABLE . IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> VAL VARIABLE . DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> VAL VARIABLE . DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    IGUAL           shift and go to state 96
    DOBLE_PUNTO     shift and go to state 97


state 58

    (171) while -> WHILE PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (224) condicional -> . valorC logicos condicional
    (225) condicional -> . valorC
    (226) valorC -> . VARIABLE
    (227) valorC -> . booleanos
    (228) valorC -> . relacional
    (229) valorC -> . NOT VARIABLE
    (230) valorC -> . NOT booleanos
    (231) valorC -> . NOT relacional
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (235) relacional -> . numeros comparacion numeros
    (236) relacional -> . aritmetica comparacion aritmetica
    (237) relacional -> . aritmetica comparacion numeros
    (238) relacional -> . numeros comparacion aritmetica
    (239) relacional -> . booleanos comparacion booleanos
    (240) relacional -> . STRING comparacion STRING
    (241) relacional -> . CHAR comparacion CHAR
    (242) relacional -> . VARIABLE comparacion numeros
    (243) relacional -> . numeros comparacion VARIABLE
    (244) relacional -> . VARIABLE comparacion booleanos
    (245) relacional -> . booleanos comparacion VARIABLE
    (246) relacional -> . VARIABLE comparacion STRING
    (247) relacional -> . STRING comparacion VARIABLE
    (248) relacional -> . VARIABLE comparacion CHAR
    (249) relacional -> . CHAR comparacion VARIABLE
    (250) relacional -> . VARIABLE comparacion VARIABLE
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 100
    NOT             shift and go to state 103
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    STRING          shift and go to state 106
    CHAR            shift and go to state 107
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    condicional                    shift and go to state 98
    valorC                         shift and go to state 99
    booleanos                      shift and go to state 101
    relacional                     shift and go to state 102
    startsWith                     shift and go to state 79
    numeros                        shift and go to state 104
    aritmetica                     shift and go to state 105

state 59

    (172) for -> FOR PAR_I . VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> FOR PAR_I . VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> FOR PAR_I . VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> FOR PAR_I . VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> FOR PAR_I . VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> FOR PAR_I . VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VAR             shift and go to state 108
    VARIABLE        shift and go to state 109


state 60

    (217) if -> IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (224) condicional -> . valorC logicos condicional
    (225) condicional -> . valorC
    (226) valorC -> . VARIABLE
    (227) valorC -> . booleanos
    (228) valorC -> . relacional
    (229) valorC -> . NOT VARIABLE
    (230) valorC -> . NOT booleanos
    (231) valorC -> . NOT relacional
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (235) relacional -> . numeros comparacion numeros
    (236) relacional -> . aritmetica comparacion aritmetica
    (237) relacional -> . aritmetica comparacion numeros
    (238) relacional -> . numeros comparacion aritmetica
    (239) relacional -> . booleanos comparacion booleanos
    (240) relacional -> . STRING comparacion STRING
    (241) relacional -> . CHAR comparacion CHAR
    (242) relacional -> . VARIABLE comparacion numeros
    (243) relacional -> . numeros comparacion VARIABLE
    (244) relacional -> . VARIABLE comparacion booleanos
    (245) relacional -> . booleanos comparacion VARIABLE
    (246) relacional -> . VARIABLE comparacion STRING
    (247) relacional -> . STRING comparacion VARIABLE
    (248) relacional -> . VARIABLE comparacion CHAR
    (249) relacional -> . CHAR comparacion VARIABLE
    (250) relacional -> . VARIABLE comparacion VARIABLE
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 100
    NOT             shift and go to state 103
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    STRING          shift and go to state 106
    CHAR            shift and go to state 107
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    condicional                    shift and go to state 110
    valorC                         shift and go to state 99
    booleanos                      shift and go to state 101
    relacional                     shift and go to state 102
    startsWith                     shift and go to state 79
    numeros                        shift and go to state 104
    aritmetica                     shift and go to state 105

state 61

    (272) startsWith -> STRING PUNTO . STARTSWITH PAR_I STRING PAR_D

    STARTSWITH      shift and go to state 111


state 62

    (1) inicio -> OBJECT VARIABLE LLAVE_I . cuerpo LLAVE_D
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . funcion cuerpo
    (15) cuerpo -> . asignacion cuerpo
    (16) cuerpo -> . while cuerpo
    (17) cuerpo -> . for cuerpo
    (18) cuerpo -> . if cuerpo
    (19) cuerpo -> . match cuerpo
    (20) cuerpo -> . startsWith
    (112) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (113) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (120) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (122) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    cuerpo                         shift and go to state 112
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    for                            shift and go to state 12
    match                          shift and go to state 13
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 63

    (145) varparen -> varparen PAR_I . valores PAR_D
    (146) varparen -> varparen PAR_I . PAR_D
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (98) valor -> . STRING
    (99) valor -> . CHAR
    (100) valor -> . VARIABLE
    (101) valor -> . numeros
    (102) valor -> . booleanos
    (103) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (104) valor -> . VARIABLE PAR_I INT PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    PAR_D           shift and go to state 114
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valores                        shift and go to state 113
    valor                          shift and go to state 67
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72
    startsWith                     shift and go to state 79

state 64

    (178) match -> VARIABLE MATCH LLAVE_I . cases LLAVE_D
    (179) cases -> . casesInt
    (180) cases -> . casesLgn
    (181) cases -> . casesFlt
    (182) cases -> . casesDob
    (183) cases -> . casesStr
    (184) cases -> . casesChar
    (185) cases -> . casesBool
    (187) casesInt -> . caseInt
    (188) casesInt -> . caseInt casesInt
    (189) casesInt -> . caseInt defcase
    (191) casesLgn -> . caseLgn
    (192) casesLgn -> . caseLgn casesLgn
    (193) casesLgn -> . caseLgn defcase
    (195) casesFlt -> . caseFlt
    (196) casesFlt -> . caseFlt casesFlt
    (197) casesFlt -> . caseFlt defcase
    (199) casesDob -> . caseDob
    (200) casesDob -> . caseDob casesDob
    (201) casesDob -> . caseDob defcase
    (203) casesStr -> . caseStr
    (204) casesStr -> . caseStr casesStr
    (205) casesStr -> . caseStr defcase
    (207) casesChar -> . caseChar
    (208) casesChar -> . caseChar casesChar
    (209) casesChar -> . caseChar defcase
    (211) casesBool -> . caseBool
    (212) casesBool -> . caseBool casesBool
    (213) casesBool -> . caseBool defcase
    (186) caseInt -> . CASE INT FUNCION_FLECHA codeBlock
    (190) caseLgn -> . CASE LONG FUNCION_FLECHA codeBlock
    (194) caseFlt -> . CASE FLOAT FUNCION_FLECHA codeBlock
    (198) caseDob -> . CASE DOUBLE FUNCION_FLECHA codeBlock
    (202) caseStr -> . CASE STRING FUNCION_FLECHA codeBlock
    (206) caseChar -> . CASE CHAR FUNCION_FLECHA codeBlock
    (210) caseBool -> . CASE booleanos FUNCION_FLECHA codeBlock

    CASE            shift and go to state 130

    cases                          shift and go to state 115
    casesInt                       shift and go to state 116
    casesLgn                       shift and go to state 117
    casesFlt                       shift and go to state 118
    casesDob                       shift and go to state 119
    casesStr                       shift and go to state 120
    casesChar                      shift and go to state 121
    casesBool                      shift and go to state 122
    caseInt                        shift and go to state 123
    caseLgn                        shift and go to state 124
    caseFlt                        shift and go to state 125
    caseDob                        shift and go to state 126
    caseStr                        shift and go to state 127
    caseChar                       shift and go to state 128
    caseBool                       shift and go to state 129

state 65

    (143) varparen -> PAR_I valores . PAR_D

    PAR_D           shift and go to state 131


state 66

    (144) varparen -> PAR_I PAR_D .

    PAR_I           reduce using rule 144 (varparen -> PAR_I PAR_D .)
    $end            reduce using rule 144 (varparen -> PAR_I PAR_D .)
    LLAVE_D         reduce using rule 144 (varparen -> PAR_I PAR_D .)
    VAR             reduce using rule 144 (varparen -> PAR_I PAR_D .)
    VAL             reduce using rule 144 (varparen -> PAR_I PAR_D .)
    VARIABLE        reduce using rule 144 (varparen -> PAR_I PAR_D .)
    PRINTLN         reduce using rule 144 (varparen -> PAR_I PAR_D .)
    PRINT           reduce using rule 144 (varparen -> PAR_I PAR_D .)
    READLINE        reduce using rule 144 (varparen -> PAR_I PAR_D .)
    WHILE           reduce using rule 144 (varparen -> PAR_I PAR_D .)
    FOR             reduce using rule 144 (varparen -> PAR_I PAR_D .)
    IF              reduce using rule 144 (varparen -> PAR_I PAR_D .)
    INT             reduce using rule 144 (varparen -> PAR_I PAR_D .)
    LONG            reduce using rule 144 (varparen -> PAR_I PAR_D .)
    FLOAT           reduce using rule 144 (varparen -> PAR_I PAR_D .)
    DOUBLE          reduce using rule 144 (varparen -> PAR_I PAR_D .)
    RETURN          reduce using rule 144 (varparen -> PAR_I PAR_D .)
    PUNTO           reduce using rule 144 (varparen -> PAR_I PAR_D .)
    DEF             reduce using rule 144 (varparen -> PAR_I PAR_D .)
    STRING          reduce using rule 144 (varparen -> PAR_I PAR_D .)
    CASE            reduce using rule 144 (varparen -> PAR_I PAR_D .)


state 67

    (166) valores -> valor .
    (167) valores -> valor . COMA valores

    PAR_D           reduce using rule 166 (valores -> valor .)
    COMA            shift and go to state 132


state 68

    (98) valor -> STRING .
    (272) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D

    COMA            reduce using rule 98 (valor -> STRING .)
    PAR_D           reduce using rule 98 (valor -> STRING .)
    MAS             reduce using rule 98 (valor -> STRING .)
    VAR             reduce using rule 98 (valor -> STRING .)
    VAL             reduce using rule 98 (valor -> STRING .)
    VARIABLE        reduce using rule 98 (valor -> STRING .)
    PRINTLN         reduce using rule 98 (valor -> STRING .)
    PRINT           reduce using rule 98 (valor -> STRING .)
    READLINE        reduce using rule 98 (valor -> STRING .)
    WHILE           reduce using rule 98 (valor -> STRING .)
    FOR             reduce using rule 98 (valor -> STRING .)
    IF              reduce using rule 98 (valor -> STRING .)
    INT             reduce using rule 98 (valor -> STRING .)
    LONG            reduce using rule 98 (valor -> STRING .)
    FLOAT           reduce using rule 98 (valor -> STRING .)
    DOUBLE          reduce using rule 98 (valor -> STRING .)
    LLAVE_D         reduce using rule 98 (valor -> STRING .)
    RETURN          reduce using rule 98 (valor -> STRING .)
    CASE            reduce using rule 98 (valor -> STRING .)
    PUNTO           shift and go to state 61


state 69

    (99) valor -> CHAR .

    COMA            reduce using rule 99 (valor -> CHAR .)
    PAR_D           reduce using rule 99 (valor -> CHAR .)
    MAS             reduce using rule 99 (valor -> CHAR .)
    VAR             reduce using rule 99 (valor -> CHAR .)
    VAL             reduce using rule 99 (valor -> CHAR .)
    VARIABLE        reduce using rule 99 (valor -> CHAR .)
    PRINTLN         reduce using rule 99 (valor -> CHAR .)
    PRINT           reduce using rule 99 (valor -> CHAR .)
    READLINE        reduce using rule 99 (valor -> CHAR .)
    WHILE           reduce using rule 99 (valor -> CHAR .)
    FOR             reduce using rule 99 (valor -> CHAR .)
    IF              reduce using rule 99 (valor -> CHAR .)
    INT             reduce using rule 99 (valor -> CHAR .)
    LONG            reduce using rule 99 (valor -> CHAR .)
    FLOAT           reduce using rule 99 (valor -> CHAR .)
    DOUBLE          reduce using rule 99 (valor -> CHAR .)
    LLAVE_D         reduce using rule 99 (valor -> CHAR .)
    RETURN          reduce using rule 99 (valor -> CHAR .)
    CASE            reduce using rule 99 (valor -> CHAR .)


state 70

    (100) valor -> VARIABLE .
    (103) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (104) valor -> VARIABLE . PAR_I INT PAR_D

    COMA            reduce using rule 100 (valor -> VARIABLE .)
    PAR_D           reduce using rule 100 (valor -> VARIABLE .)
    MAS             reduce using rule 100 (valor -> VARIABLE .)
    VAR             reduce using rule 100 (valor -> VARIABLE .)
    VAL             reduce using rule 100 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 100 (valor -> VARIABLE .)
    PRINTLN         reduce using rule 100 (valor -> VARIABLE .)
    PRINT           reduce using rule 100 (valor -> VARIABLE .)
    READLINE        reduce using rule 100 (valor -> VARIABLE .)
    WHILE           reduce using rule 100 (valor -> VARIABLE .)
    FOR             reduce using rule 100 (valor -> VARIABLE .)
    IF              reduce using rule 100 (valor -> VARIABLE .)
    INT             reduce using rule 100 (valor -> VARIABLE .)
    LONG            reduce using rule 100 (valor -> VARIABLE .)
    FLOAT           reduce using rule 100 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 100 (valor -> VARIABLE .)
    LLAVE_D         reduce using rule 100 (valor -> VARIABLE .)
    RETURN          reduce using rule 100 (valor -> VARIABLE .)
    CASE            reduce using rule 100 (valor -> VARIABLE .)
    PAR_I           shift and go to state 133


state 71

    (101) valor -> numeros .

    COMA            reduce using rule 101 (valor -> numeros .)
    PAR_D           reduce using rule 101 (valor -> numeros .)
    MAS             reduce using rule 101 (valor -> numeros .)
    VAR             reduce using rule 101 (valor -> numeros .)
    VAL             reduce using rule 101 (valor -> numeros .)
    VARIABLE        reduce using rule 101 (valor -> numeros .)
    PRINTLN         reduce using rule 101 (valor -> numeros .)
    PRINT           reduce using rule 101 (valor -> numeros .)
    READLINE        reduce using rule 101 (valor -> numeros .)
    WHILE           reduce using rule 101 (valor -> numeros .)
    FOR             reduce using rule 101 (valor -> numeros .)
    IF              reduce using rule 101 (valor -> numeros .)
    INT             reduce using rule 101 (valor -> numeros .)
    LONG            reduce using rule 101 (valor -> numeros .)
    FLOAT           reduce using rule 101 (valor -> numeros .)
    DOUBLE          reduce using rule 101 (valor -> numeros .)
    LLAVE_D         reduce using rule 101 (valor -> numeros .)
    RETURN          reduce using rule 101 (valor -> numeros .)
    CASE            reduce using rule 101 (valor -> numeros .)


state 72

    (102) valor -> booleanos .

    COMA            reduce using rule 102 (valor -> booleanos .)
    PAR_D           reduce using rule 102 (valor -> booleanos .)
    MAS             reduce using rule 102 (valor -> booleanos .)
    VAR             reduce using rule 102 (valor -> booleanos .)
    VAL             reduce using rule 102 (valor -> booleanos .)
    VARIABLE        reduce using rule 102 (valor -> booleanos .)
    PRINTLN         reduce using rule 102 (valor -> booleanos .)
    PRINT           reduce using rule 102 (valor -> booleanos .)
    READLINE        reduce using rule 102 (valor -> booleanos .)
    WHILE           reduce using rule 102 (valor -> booleanos .)
    FOR             reduce using rule 102 (valor -> booleanos .)
    IF              reduce using rule 102 (valor -> booleanos .)
    INT             reduce using rule 102 (valor -> booleanos .)
    LONG            reduce using rule 102 (valor -> booleanos .)
    FLOAT           reduce using rule 102 (valor -> booleanos .)
    DOUBLE          reduce using rule 102 (valor -> booleanos .)
    LLAVE_D         reduce using rule 102 (valor -> booleanos .)
    RETURN          reduce using rule 102 (valor -> booleanos .)
    CASE            reduce using rule 102 (valor -> booleanos .)


state 73

    (108) numeros -> INT .

    COMA            reduce using rule 108 (numeros -> INT .)
    PAR_D           reduce using rule 108 (numeros -> INT .)
    MAS             reduce using rule 108 (numeros -> INT .)
    IGUAL_COMPARACION reduce using rule 108 (numeros -> INT .)
    DIFERENTE       reduce using rule 108 (numeros -> INT .)
    MAYOR           reduce using rule 108 (numeros -> INT .)
    MENOR           reduce using rule 108 (numeros -> INT .)
    MENOS           reduce using rule 108 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 108 (numeros -> INT .)
    DIVISION        reduce using rule 108 (numeros -> INT .)
    MOD             reduce using rule 108 (numeros -> INT .)
    AND             reduce using rule 108 (numeros -> INT .)
    OR              reduce using rule 108 (numeros -> INT .)
    NOT             reduce using rule 108 (numeros -> INT .)
    VAR             reduce using rule 108 (numeros -> INT .)
    VAL             reduce using rule 108 (numeros -> INT .)
    VARIABLE        reduce using rule 108 (numeros -> INT .)
    PRINTLN         reduce using rule 108 (numeros -> INT .)
    PRINT           reduce using rule 108 (numeros -> INT .)
    READLINE        reduce using rule 108 (numeros -> INT .)
    WHILE           reduce using rule 108 (numeros -> INT .)
    FOR             reduce using rule 108 (numeros -> INT .)
    IF              reduce using rule 108 (numeros -> INT .)
    INT             reduce using rule 108 (numeros -> INT .)
    LONG            reduce using rule 108 (numeros -> INT .)
    FLOAT           reduce using rule 108 (numeros -> INT .)
    DOUBLE          reduce using rule 108 (numeros -> INT .)
    LLAVE_D         reduce using rule 108 (numeros -> INT .)
    DEF             reduce using rule 108 (numeros -> INT .)
    STRING          reduce using rule 108 (numeros -> INT .)
    $end            reduce using rule 108 (numeros -> INT .)
    RETURN          reduce using rule 108 (numeros -> INT .)
    CASE            reduce using rule 108 (numeros -> INT .)


state 74

    (109) numeros -> LONG .

    COMA            reduce using rule 109 (numeros -> LONG .)
    PAR_D           reduce using rule 109 (numeros -> LONG .)
    MAS             reduce using rule 109 (numeros -> LONG .)
    IGUAL_COMPARACION reduce using rule 109 (numeros -> LONG .)
    DIFERENTE       reduce using rule 109 (numeros -> LONG .)
    MAYOR           reduce using rule 109 (numeros -> LONG .)
    MENOR           reduce using rule 109 (numeros -> LONG .)
    MENOS           reduce using rule 109 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 109 (numeros -> LONG .)
    DIVISION        reduce using rule 109 (numeros -> LONG .)
    MOD             reduce using rule 109 (numeros -> LONG .)
    AND             reduce using rule 109 (numeros -> LONG .)
    OR              reduce using rule 109 (numeros -> LONG .)
    NOT             reduce using rule 109 (numeros -> LONG .)
    VAR             reduce using rule 109 (numeros -> LONG .)
    VAL             reduce using rule 109 (numeros -> LONG .)
    VARIABLE        reduce using rule 109 (numeros -> LONG .)
    PRINTLN         reduce using rule 109 (numeros -> LONG .)
    PRINT           reduce using rule 109 (numeros -> LONG .)
    READLINE        reduce using rule 109 (numeros -> LONG .)
    WHILE           reduce using rule 109 (numeros -> LONG .)
    FOR             reduce using rule 109 (numeros -> LONG .)
    IF              reduce using rule 109 (numeros -> LONG .)
    INT             reduce using rule 109 (numeros -> LONG .)
    LONG            reduce using rule 109 (numeros -> LONG .)
    FLOAT           reduce using rule 109 (numeros -> LONG .)
    DOUBLE          reduce using rule 109 (numeros -> LONG .)
    LLAVE_D         reduce using rule 109 (numeros -> LONG .)
    DEF             reduce using rule 109 (numeros -> LONG .)
    STRING          reduce using rule 109 (numeros -> LONG .)
    $end            reduce using rule 109 (numeros -> LONG .)
    RETURN          reduce using rule 109 (numeros -> LONG .)
    CASE            reduce using rule 109 (numeros -> LONG .)


state 75

    (110) numeros -> FLOAT .

    COMA            reduce using rule 110 (numeros -> FLOAT .)
    PAR_D           reduce using rule 110 (numeros -> FLOAT .)
    MAS             reduce using rule 110 (numeros -> FLOAT .)
    IGUAL_COMPARACION reduce using rule 110 (numeros -> FLOAT .)
    DIFERENTE       reduce using rule 110 (numeros -> FLOAT .)
    MAYOR           reduce using rule 110 (numeros -> FLOAT .)
    MENOR           reduce using rule 110 (numeros -> FLOAT .)
    MENOS           reduce using rule 110 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 110 (numeros -> FLOAT .)
    DIVISION        reduce using rule 110 (numeros -> FLOAT .)
    MOD             reduce using rule 110 (numeros -> FLOAT .)
    AND             reduce using rule 110 (numeros -> FLOAT .)
    OR              reduce using rule 110 (numeros -> FLOAT .)
    NOT             reduce using rule 110 (numeros -> FLOAT .)
    VAR             reduce using rule 110 (numeros -> FLOAT .)
    VAL             reduce using rule 110 (numeros -> FLOAT .)
    VARIABLE        reduce using rule 110 (numeros -> FLOAT .)
    PRINTLN         reduce using rule 110 (numeros -> FLOAT .)
    PRINT           reduce using rule 110 (numeros -> FLOAT .)
    READLINE        reduce using rule 110 (numeros -> FLOAT .)
    WHILE           reduce using rule 110 (numeros -> FLOAT .)
    FOR             reduce using rule 110 (numeros -> FLOAT .)
    IF              reduce using rule 110 (numeros -> FLOAT .)
    INT             reduce using rule 110 (numeros -> FLOAT .)
    LONG            reduce using rule 110 (numeros -> FLOAT .)
    FLOAT           reduce using rule 110 (numeros -> FLOAT .)
    DOUBLE          reduce using rule 110 (numeros -> FLOAT .)
    LLAVE_D         reduce using rule 110 (numeros -> FLOAT .)
    DEF             reduce using rule 110 (numeros -> FLOAT .)
    STRING          reduce using rule 110 (numeros -> FLOAT .)
    $end            reduce using rule 110 (numeros -> FLOAT .)
    RETURN          reduce using rule 110 (numeros -> FLOAT .)
    CASE            reduce using rule 110 (numeros -> FLOAT .)


state 76

    (111) numeros -> DOUBLE .

    COMA            reduce using rule 111 (numeros -> DOUBLE .)
    PAR_D           reduce using rule 111 (numeros -> DOUBLE .)
    MAS             reduce using rule 111 (numeros -> DOUBLE .)
    IGUAL_COMPARACION reduce using rule 111 (numeros -> DOUBLE .)
    DIFERENTE       reduce using rule 111 (numeros -> DOUBLE .)
    MAYOR           reduce using rule 111 (numeros -> DOUBLE .)
    MENOR           reduce using rule 111 (numeros -> DOUBLE .)
    MENOS           reduce using rule 111 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 111 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 111 (numeros -> DOUBLE .)
    MOD             reduce using rule 111 (numeros -> DOUBLE .)
    AND             reduce using rule 111 (numeros -> DOUBLE .)
    OR              reduce using rule 111 (numeros -> DOUBLE .)
    NOT             reduce using rule 111 (numeros -> DOUBLE .)
    VAR             reduce using rule 111 (numeros -> DOUBLE .)
    VAL             reduce using rule 111 (numeros -> DOUBLE .)
    VARIABLE        reduce using rule 111 (numeros -> DOUBLE .)
    PRINTLN         reduce using rule 111 (numeros -> DOUBLE .)
    PRINT           reduce using rule 111 (numeros -> DOUBLE .)
    READLINE        reduce using rule 111 (numeros -> DOUBLE .)
    WHILE           reduce using rule 111 (numeros -> DOUBLE .)
    FOR             reduce using rule 111 (numeros -> DOUBLE .)
    IF              reduce using rule 111 (numeros -> DOUBLE .)
    INT             reduce using rule 111 (numeros -> DOUBLE .)
    LONG            reduce using rule 111 (numeros -> DOUBLE .)
    FLOAT           reduce using rule 111 (numeros -> DOUBLE .)
    DOUBLE          reduce using rule 111 (numeros -> DOUBLE .)
    LLAVE_D         reduce using rule 111 (numeros -> DOUBLE .)
    DEF             reduce using rule 111 (numeros -> DOUBLE .)
    STRING          reduce using rule 111 (numeros -> DOUBLE .)
    $end            reduce using rule 111 (numeros -> DOUBLE .)
    RETURN          reduce using rule 111 (numeros -> DOUBLE .)
    CASE            reduce using rule 111 (numeros -> DOUBLE .)


state 77

    (105) booleanos -> TRUE .

    COMA            reduce using rule 105 (booleanos -> TRUE .)
    PAR_D           reduce using rule 105 (booleanos -> TRUE .)
    MAS             reduce using rule 105 (booleanos -> TRUE .)
    IGUAL_COMPARACION reduce using rule 105 (booleanos -> TRUE .)
    DIFERENTE       reduce using rule 105 (booleanos -> TRUE .)
    MAYOR           reduce using rule 105 (booleanos -> TRUE .)
    MENOR           reduce using rule 105 (booleanos -> TRUE .)
    AND             reduce using rule 105 (booleanos -> TRUE .)
    OR              reduce using rule 105 (booleanos -> TRUE .)
    NOT             reduce using rule 105 (booleanos -> TRUE .)
    DEF             reduce using rule 105 (booleanos -> TRUE .)
    VARIABLE        reduce using rule 105 (booleanos -> TRUE .)
    PRINTLN         reduce using rule 105 (booleanos -> TRUE .)
    PRINT           reduce using rule 105 (booleanos -> TRUE .)
    READLINE        reduce using rule 105 (booleanos -> TRUE .)
    VAR             reduce using rule 105 (booleanos -> TRUE .)
    VAL             reduce using rule 105 (booleanos -> TRUE .)
    WHILE           reduce using rule 105 (booleanos -> TRUE .)
    FOR             reduce using rule 105 (booleanos -> TRUE .)
    IF              reduce using rule 105 (booleanos -> TRUE .)
    STRING          reduce using rule 105 (booleanos -> TRUE .)
    $end            reduce using rule 105 (booleanos -> TRUE .)
    LLAVE_D         reduce using rule 105 (booleanos -> TRUE .)
    INT             reduce using rule 105 (booleanos -> TRUE .)
    LONG            reduce using rule 105 (booleanos -> TRUE .)
    FLOAT           reduce using rule 105 (booleanos -> TRUE .)
    DOUBLE          reduce using rule 105 (booleanos -> TRUE .)
    RETURN          reduce using rule 105 (booleanos -> TRUE .)
    CASE            reduce using rule 105 (booleanos -> TRUE .)
    FUNCION_FLECHA  reduce using rule 105 (booleanos -> TRUE .)


state 78

    (106) booleanos -> FLASE .

    COMA            reduce using rule 106 (booleanos -> FLASE .)
    PAR_D           reduce using rule 106 (booleanos -> FLASE .)
    MAS             reduce using rule 106 (booleanos -> FLASE .)
    IGUAL_COMPARACION reduce using rule 106 (booleanos -> FLASE .)
    DIFERENTE       reduce using rule 106 (booleanos -> FLASE .)
    MAYOR           reduce using rule 106 (booleanos -> FLASE .)
    MENOR           reduce using rule 106 (booleanos -> FLASE .)
    AND             reduce using rule 106 (booleanos -> FLASE .)
    OR              reduce using rule 106 (booleanos -> FLASE .)
    NOT             reduce using rule 106 (booleanos -> FLASE .)
    DEF             reduce using rule 106 (booleanos -> FLASE .)
    VARIABLE        reduce using rule 106 (booleanos -> FLASE .)
    PRINTLN         reduce using rule 106 (booleanos -> FLASE .)
    PRINT           reduce using rule 106 (booleanos -> FLASE .)
    READLINE        reduce using rule 106 (booleanos -> FLASE .)
    VAR             reduce using rule 106 (booleanos -> FLASE .)
    VAL             reduce using rule 106 (booleanos -> FLASE .)
    WHILE           reduce using rule 106 (booleanos -> FLASE .)
    FOR             reduce using rule 106 (booleanos -> FLASE .)
    IF              reduce using rule 106 (booleanos -> FLASE .)
    STRING          reduce using rule 106 (booleanos -> FLASE .)
    $end            reduce using rule 106 (booleanos -> FLASE .)
    LLAVE_D         reduce using rule 106 (booleanos -> FLASE .)
    INT             reduce using rule 106 (booleanos -> FLASE .)
    LONG            reduce using rule 106 (booleanos -> FLASE .)
    FLOAT           reduce using rule 106 (booleanos -> FLASE .)
    DOUBLE          reduce using rule 106 (booleanos -> FLASE .)
    RETURN          reduce using rule 106 (booleanos -> FLASE .)
    CASE            reduce using rule 106 (booleanos -> FLASE .)
    FUNCION_FLECHA  reduce using rule 106 (booleanos -> FLASE .)


state 79

    (107) booleanos -> startsWith .

    COMA            reduce using rule 107 (booleanos -> startsWith .)
    PAR_D           reduce using rule 107 (booleanos -> startsWith .)
    MAS             reduce using rule 107 (booleanos -> startsWith .)
    IGUAL_COMPARACION reduce using rule 107 (booleanos -> startsWith .)
    DIFERENTE       reduce using rule 107 (booleanos -> startsWith .)
    MAYOR           reduce using rule 107 (booleanos -> startsWith .)
    MENOR           reduce using rule 107 (booleanos -> startsWith .)
    AND             reduce using rule 107 (booleanos -> startsWith .)
    OR              reduce using rule 107 (booleanos -> startsWith .)
    NOT             reduce using rule 107 (booleanos -> startsWith .)
    DEF             reduce using rule 107 (booleanos -> startsWith .)
    VARIABLE        reduce using rule 107 (booleanos -> startsWith .)
    PRINTLN         reduce using rule 107 (booleanos -> startsWith .)
    PRINT           reduce using rule 107 (booleanos -> startsWith .)
    READLINE        reduce using rule 107 (booleanos -> startsWith .)
    VAR             reduce using rule 107 (booleanos -> startsWith .)
    VAL             reduce using rule 107 (booleanos -> startsWith .)
    WHILE           reduce using rule 107 (booleanos -> startsWith .)
    FOR             reduce using rule 107 (booleanos -> startsWith .)
    IF              reduce using rule 107 (booleanos -> startsWith .)
    STRING          reduce using rule 107 (booleanos -> startsWith .)
    $end            reduce using rule 107 (booleanos -> startsWith .)
    LLAVE_D         reduce using rule 107 (booleanos -> startsWith .)
    INT             reduce using rule 107 (booleanos -> startsWith .)
    LONG            reduce using rule 107 (booleanos -> startsWith .)
    FLOAT           reduce using rule 107 (booleanos -> startsWith .)
    DOUBLE          reduce using rule 107 (booleanos -> startsWith .)
    RETURN          reduce using rule 107 (booleanos -> startsWith .)
    CASE            reduce using rule 107 (booleanos -> startsWith .)
    FUNCION_FLECHA  reduce using rule 107 (booleanos -> startsWith .)


state 80

    (2) inicio -> IMPORT io inicio .

    $end            reduce using rule 2 (inicio -> IMPORT io inicio .)


state 81

    (4) io -> VARIABLE PUNTO . VARIABLE PUNTO VARIABLE PUNTO READLINE

    VARIABLE        shift and go to state 134


state 82

    (223) else -> elseif . else
    (222) else -> . ELSE LLAVE_I contenido LLAVE_D
    (223) else -> . elseif else
    (220) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    ELSE            shift and go to state 84

    elseif                         shift and go to state 82
    else                           shift and go to state 83

state 83

    (223) else -> elseif else .

    ELSE            reduce using rule 223 (else -> elseif else .)
    DEF             reduce using rule 223 (else -> elseif else .)
    VARIABLE        reduce using rule 223 (else -> elseif else .)
    PRINTLN         reduce using rule 223 (else -> elseif else .)
    PRINT           reduce using rule 223 (else -> elseif else .)
    READLINE        reduce using rule 223 (else -> elseif else .)
    VAR             reduce using rule 223 (else -> elseif else .)
    VAL             reduce using rule 223 (else -> elseif else .)
    WHILE           reduce using rule 223 (else -> elseif else .)
    FOR             reduce using rule 223 (else -> elseif else .)
    IF              reduce using rule 223 (else -> elseif else .)
    STRING          reduce using rule 223 (else -> elseif else .)
    $end            reduce using rule 223 (else -> elseif else .)
    LLAVE_D         reduce using rule 223 (else -> elseif else .)
    INT             reduce using rule 223 (else -> elseif else .)
    LONG            reduce using rule 223 (else -> elseif else .)
    FLOAT           reduce using rule 223 (else -> elseif else .)
    DOUBLE          reduce using rule 223 (else -> elseif else .)
    RETURN          reduce using rule 223 (else -> elseif else .)


state 84

    (222) else -> ELSE . LLAVE_I contenido LLAVE_D
    (220) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    LLAVE_I         shift and go to state 86
    IF              shift and go to state 85


state 85

    (220) elseif -> ELSE IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) elseif -> ELSE IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    PAR_I           shift and go to state 135


state 86

    (222) else -> ELSE LLAVE_I . contenido LLAVE_D
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 136
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 87

    (112) funcion -> DEF VARIABLE parametro . IGUAL LLAVE_I contenido LLAVE_D
    (113) funcion -> DEF VARIABLE parametro . LLAVE_I contenido LLAVE_D
    (120) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (121) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (122) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (123) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (124) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (125) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (126) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (127) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (128) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) dectipo -> . DOBLE_PUNTO tipo
    (132) dectipoTupla -> . DOBLE_PUNTO PAR_I tipos PAR_D

    IGUAL           shift and go to state 149
    LLAVE_I         shift and go to state 150
    DOBLE_PUNTO     shift and go to state 153

    dectipo                        shift and go to state 151
    dectipoTupla                   shift and go to state 152

state 88

    (116) parametro -> parametros .

    IGUAL           reduce using rule 116 (parametro -> parametros .)
    LLAVE_I         reduce using rule 116 (parametro -> parametros .)
    DOBLE_PUNTO     reduce using rule 116 (parametro -> parametros .)


state 89

    (117) parametro -> PAR_I . PAR_D
    (118) parametros -> PAR_I . declaracion PAR_D
    (119) parametros -> PAR_I . declaracion PAR_D parametros
    (114) declaracion -> . VARIABLE DOBLE_PUNTO tipo
    (115) declaracion -> . VARIABLE DOBLE_PUNTO tipo IGUAL valor

    PAR_D           shift and go to state 154
    VARIABLE        shift and go to state 156

    declaracion                    shift and go to state 155

state 90

    (137) impresion -> PRINTLN PAR_I valorI . PAR_D

    PAR_D           shift and go to state 157


state 91

    (139) valorI -> valor . MAS valorI
    (140) valorI -> valor .

    MAS             shift and go to state 158
    PAR_D           reduce using rule 140 (valorI -> valor .)


state 92

    (138) impresion -> PRINT PAR_I valorI . PAR_D

    PAR_D           shift and go to state 159


state 93

    (141) entrada -> READLINE PAR_I PAR_D .

    $end            reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    LLAVE_D         reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    VAR             reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    VAL             reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    VARIABLE        reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    PRINTLN         reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    PRINT           reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    READLINE        reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    WHILE           reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    FOR             reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    IF              reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    INT             reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    LONG            reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    FLOAT           reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    DOUBLE          reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    PUNTO           reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    DEF             reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    STRING          reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    RETURN          reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    CASE            reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)


state 94

    (46) asignacion -> VAR VARIABLE IGUAL . VARIABLE
    (48) asignacion -> VAR VARIABLE IGUAL . aritmetica
    (50) asignacion -> VAR VARIABLE IGUAL . returnfun
    (169) asignacion -> VAR VARIABLE IGUAL . tuple
    (301) asignacionLong -> VAR VARIABLE IGUAL . longvalues
    (295) asignacionInt -> VAR VARIABLE IGUAL . intvalues
    (308) asignacionFloat -> VAR VARIABLE IGUAL . floatvalues
    (315) asignacionDouble -> VAR VARIABLE IGUAL . doublevalues
    (67) asignacionString -> VAR VARIABLE IGUAL . STRING
    (73) asignacionChar -> VAR VARIABLE IGUAL . CHAR
    (79) asignacionBoolean -> VAR VARIABLE IGUAL . booleanos
    (157) array -> VAR VARIABLE IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (147) returnfun -> . returnCastable
    (148) returnfun -> . castingcall
    (168) tuple -> . PAR_I valores PAR_D
    (305) longvalues -> . INT
    (306) longvalues -> . intvalues
    (307) longvalues -> . stringCastLong
    (299) intvalues -> . INT
    (300) intvalues -> . stringCastInt
    (312) floatvalues -> . FLOAT
    (313) floatvalues -> . longvalues
    (314) floatvalues -> . stringCastFloat
    (319) doublevalues -> . DOUBLE
    (320) doublevalues -> . floatvalues
    (321) doublevalues -> . stringCastDouble
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (149) returnCastable -> . entrada
    (150) returnCastable -> . funcall
    (151) castingcall -> . returnCastable PUNTO castingfun
    (152) castingcall -> . VARIABLE PUNTO castingfun
    (323) stringCastLong -> . STRING PUNTO TO_LONG
    (322) stringCastInt -> . STRING PUNTO TO_INT
    (324) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (325) stringCastDouble -> . STRING PUNTO TO_DOUBLE
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (142) funcall -> . VARIABLE varparen

    VARIABLE        shift and go to state 160
    STRING          shift and go to state 168
    CHAR            shift and go to state 169
    ARRAYCLASS      shift and go to state 171
    PAR_I           shift and go to state 172
    INT             shift and go to state 175
    FLOAT           shift and go to state 178
    DOUBLE          shift and go to state 180
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    LONG            shift and go to state 74
    READLINE        shift and go to state 19

    aritmetica                     shift and go to state 161
    returnfun                      shift and go to state 162
    tuple                          shift and go to state 163
    longvalues                     shift and go to state 164
    intvalues                      shift and go to state 165
    floatvalues                    shift and go to state 166
    doublevalues                   shift and go to state 167
    booleanos                      shift and go to state 170
    numeros                        shift and go to state 148
    returnCastable                 shift and go to state 173
    castingcall                    shift and go to state 174
    stringCastLong                 shift and go to state 176
    stringCastInt                  shift and go to state 177
    stringCastFloat                shift and go to state 179
    stringCastDouble               shift and go to state 181
    startsWith                     shift and go to state 79
    entrada                        shift and go to state 182
    funcall                        shift and go to state 183

state 95

    (273) asignacion -> VAR VARIABLE DOBLE_PUNTO . dectupla
    (61) asignacionLong -> VAR VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL VARIABLE
    (302) asignacionLong -> VAR VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL longvalues
    (296) asignacionInt -> VAR VARIABLE DOBLE_PUNTO . INTCLASS IGUAL intvalues
    (63) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL VARIABLE
    (309) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL VARIABLE
    (316) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL doublevalues
    (68) asignacionString -> VAR VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL STRING
    (71) asignacionString -> VAR VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL VARIABLE
    (74) asignacionChar -> VAR VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL CHAR
    (77) asignacionChar -> VAR VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL VARIABLE
    (80) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL VARIABLE
    (158) array -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (266) arrayInt -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (275) dectupla -> . PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
    (276) dectupla -> . PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
    (277) dectupla -> . PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
    (278) dectupla -> . PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D
    (279) dectupla -> . PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
    (280) dectupla -> . PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
    (281) dectupla -> . PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
    (282) dectupla -> . PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D
    (283) dectupla -> . PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
    (284) dectupla -> . PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
    (285) dectupla -> . PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
    (286) dectupla -> . PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D
    (287) dectupla -> . PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
    (288) dectupla -> . PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
    (289) dectupla -> . PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
    (290) dectupla -> . PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D
    (291) dectupla -> . PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
    (292) dectupla -> . PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
    (293) dectupla -> . PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
    (294) dectupla -> . PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    LONGCLASS       shift and go to state 185
    INTCLASS        shift and go to state 186
    FLOATCLASS      shift and go to state 187
    DOUBLECLASS     shift and go to state 188
    STRINGCLASS     shift and go to state 189
    CHARCLASS       shift and go to state 190
    BOOLCLASS       shift and go to state 191
    ARRAYCLASS      shift and go to state 192
    PAR_I           shift and go to state 193

    dectupla                       shift and go to state 184

state 96

    (47) asignacion -> VAL VARIABLE IGUAL . VARIABLE
    (49) asignacion -> VAL VARIABLE IGUAL . aritmetica
    (51) asignacion -> VAL VARIABLE IGUAL . returnfun
    (170) asignacion -> VAL VARIABLE IGUAL . tuple
    (303) asignacionLong -> VAL VARIABLE IGUAL . longvalues
    (297) asignacionInt -> VAL VARIABLE IGUAL . intvalues
    (310) asignacionFloat -> VAL VARIABLE IGUAL . floatvalues
    (317) asignacionDouble -> VAL VARIABLE IGUAL . doublevalues
    (69) asignacionString -> VAL VARIABLE IGUAL . STRING
    (75) asignacionChar -> VAL VARIABLE IGUAL . CHAR
    (81) asignacionBoolean -> VAL VARIABLE IGUAL . booleanos
    (159) array -> VAL VARIABLE IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (163) list -> VAL VARIABLE IGUAL . LISTCLASS PAR_I valores PAR_D
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (147) returnfun -> . returnCastable
    (148) returnfun -> . castingcall
    (168) tuple -> . PAR_I valores PAR_D
    (305) longvalues -> . INT
    (306) longvalues -> . intvalues
    (307) longvalues -> . stringCastLong
    (299) intvalues -> . INT
    (300) intvalues -> . stringCastInt
    (312) floatvalues -> . FLOAT
    (313) floatvalues -> . longvalues
    (314) floatvalues -> . stringCastFloat
    (319) doublevalues -> . DOUBLE
    (320) doublevalues -> . floatvalues
    (321) doublevalues -> . stringCastDouble
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (149) returnCastable -> . entrada
    (150) returnCastable -> . funcall
    (151) castingcall -> . returnCastable PUNTO castingfun
    (152) castingcall -> . VARIABLE PUNTO castingfun
    (323) stringCastLong -> . STRING PUNTO TO_LONG
    (322) stringCastInt -> . STRING PUNTO TO_INT
    (324) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (325) stringCastDouble -> . STRING PUNTO TO_DOUBLE
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (142) funcall -> . VARIABLE varparen

    VARIABLE        shift and go to state 194
    STRING          shift and go to state 202
    CHAR            shift and go to state 203
    ARRAYCLASS      shift and go to state 205
    LISTCLASS       shift and go to state 206
    PAR_I           shift and go to state 172
    INT             shift and go to state 175
    FLOAT           shift and go to state 178
    DOUBLE          shift and go to state 180
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    LONG            shift and go to state 74
    READLINE        shift and go to state 19

    aritmetica                     shift and go to state 195
    returnfun                      shift and go to state 196
    tuple                          shift and go to state 197
    longvalues                     shift and go to state 198
    intvalues                      shift and go to state 199
    floatvalues                    shift and go to state 200
    doublevalues                   shift and go to state 201
    booleanos                      shift and go to state 204
    numeros                        shift and go to state 148
    returnCastable                 shift and go to state 173
    castingcall                    shift and go to state 174
    stringCastLong                 shift and go to state 176
    stringCastInt                  shift and go to state 177
    stringCastFloat                shift and go to state 179
    stringCastDouble               shift and go to state 181
    startsWith                     shift and go to state 79
    entrada                        shift and go to state 182
    funcall                        shift and go to state 183

state 97

    (274) asignacion -> VAL VARIABLE DOBLE_PUNTO . dectupla
    (62) asignacionLong -> VAL VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL VARIABLE
    (304) asignacionLong -> VAL VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL longvalues
    (298) asignacionInt -> VAL VARIABLE DOBLE_PUNTO . INTCLASS IGUAL intvalues
    (64) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL VARIABLE
    (311) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL floatvalues
    (66) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL VARIABLE
    (318) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> VAL VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL STRING
    (72) asignacionString -> VAL VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> VAL VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL CHAR
    (78) asignacionChar -> VAL VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL VARIABLE
    (160) array -> VAL VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) list -> VAL VARIABLE DOBLE_PUNTO . LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> VAL VARIABLE DOBLE_PUNTO . LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (275) dectupla -> . PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
    (276) dectupla -> . PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
    (277) dectupla -> . PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
    (278) dectupla -> . PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D
    (279) dectupla -> . PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
    (280) dectupla -> . PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
    (281) dectupla -> . PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
    (282) dectupla -> . PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D
    (283) dectupla -> . PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
    (284) dectupla -> . PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
    (285) dectupla -> . PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
    (286) dectupla -> . PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D
    (287) dectupla -> . PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
    (288) dectupla -> . PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
    (289) dectupla -> . PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
    (290) dectupla -> . PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D
    (291) dectupla -> . PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
    (292) dectupla -> . PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
    (293) dectupla -> . PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
    (294) dectupla -> . PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    LONGCLASS       shift and go to state 208
    INTCLASS        shift and go to state 209
    FLOATCLASS      shift and go to state 210
    DOUBLECLASS     shift and go to state 211
    STRINGCLASS     shift and go to state 212
    CHARCLASS       shift and go to state 213
    BOOLCLASS       shift and go to state 214
    ARRAYCLASS      shift and go to state 215
    LISTCLASS       shift and go to state 216
    PAR_I           shift and go to state 193

    dectupla                       shift and go to state 207

state 98

    (171) while -> WHILE PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 217


state 99

    (224) condicional -> valorC . logicos condicional
    (225) condicional -> valorC .
    (232) logicos -> . AND
    (233) logicos -> . OR
    (234) logicos -> . NOT

    PAR_D           reduce using rule 225 (condicional -> valorC .)
    AND             shift and go to state 219
    OR              shift and go to state 220
    NOT             shift and go to state 221

    logicos                        shift and go to state 218

state 100

    (226) valorC -> VARIABLE .
    (242) relacional -> VARIABLE . comparacion numeros
    (244) relacional -> VARIABLE . comparacion booleanos
    (246) relacional -> VARIABLE . comparacion STRING
    (248) relacional -> VARIABLE . comparacion CHAR
    (250) relacional -> VARIABLE . comparacion VARIABLE
    (256) aritmetica -> VARIABLE . aritmeticos numeros
    (258) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (251) comparacion -> . IGUAL_COMPARACION
    (252) comparacion -> . DIFERENTE
    (253) comparacion -> . MAYOR
    (254) comparacion -> . MENOR
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD

    AND             reduce using rule 226 (valorC -> VARIABLE .)
    OR              reduce using rule 226 (valorC -> VARIABLE .)
    NOT             reduce using rule 226 (valorC -> VARIABLE .)
    PAR_D           reduce using rule 226 (valorC -> VARIABLE .)
    IGUAL_COMPARACION shift and go to state 224
    DIFERENTE       shift and go to state 225
    MAYOR           shift and go to state 226
    MENOR           shift and go to state 227
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232

    comparacion                    shift and go to state 222
    aritmeticos                    shift and go to state 223

state 101

    (227) valorC -> booleanos .
    (239) relacional -> booleanos . comparacion booleanos
    (245) relacional -> booleanos . comparacion VARIABLE
    (251) comparacion -> . IGUAL_COMPARACION
    (252) comparacion -> . DIFERENTE
    (253) comparacion -> . MAYOR
    (254) comparacion -> . MENOR

    AND             reduce using rule 227 (valorC -> booleanos .)
    OR              reduce using rule 227 (valorC -> booleanos .)
    NOT             reduce using rule 227 (valorC -> booleanos .)
    PAR_D           reduce using rule 227 (valorC -> booleanos .)
    IGUAL_COMPARACION shift and go to state 224
    DIFERENTE       shift and go to state 225
    MAYOR           shift and go to state 226
    MENOR           shift and go to state 227

    comparacion                    shift and go to state 233

state 102

    (228) valorC -> relacional .

    AND             reduce using rule 228 (valorC -> relacional .)
    OR              reduce using rule 228 (valorC -> relacional .)
    NOT             reduce using rule 228 (valorC -> relacional .)
    PAR_D           reduce using rule 228 (valorC -> relacional .)


state 103

    (229) valorC -> NOT . VARIABLE
    (230) valorC -> NOT . booleanos
    (231) valorC -> NOT . relacional
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (235) relacional -> . numeros comparacion numeros
    (236) relacional -> . aritmetica comparacion aritmetica
    (237) relacional -> . aritmetica comparacion numeros
    (238) relacional -> . numeros comparacion aritmetica
    (239) relacional -> . booleanos comparacion booleanos
    (240) relacional -> . STRING comparacion STRING
    (241) relacional -> . CHAR comparacion CHAR
    (242) relacional -> . VARIABLE comparacion numeros
    (243) relacional -> . numeros comparacion VARIABLE
    (244) relacional -> . VARIABLE comparacion booleanos
    (245) relacional -> . booleanos comparacion VARIABLE
    (246) relacional -> . VARIABLE comparacion STRING
    (247) relacional -> . STRING comparacion VARIABLE
    (248) relacional -> . VARIABLE comparacion CHAR
    (249) relacional -> . CHAR comparacion VARIABLE
    (250) relacional -> . VARIABLE comparacion VARIABLE
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 234
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    STRING          shift and go to state 106
    CHAR            shift and go to state 107
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    booleanos                      shift and go to state 235
    relacional                     shift and go to state 236
    startsWith                     shift and go to state 79
    numeros                        shift and go to state 104
    aritmetica                     shift and go to state 105

state 104

    (235) relacional -> numeros . comparacion numeros
    (238) relacional -> numeros . comparacion aritmetica
    (243) relacional -> numeros . comparacion VARIABLE
    (255) aritmetica -> numeros . aritmeticos numeros
    (257) aritmetica -> numeros . aritmeticos VARIABLE
    (251) comparacion -> . IGUAL_COMPARACION
    (252) comparacion -> . DIFERENTE
    (253) comparacion -> . MAYOR
    (254) comparacion -> . MENOR
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD

    IGUAL_COMPARACION shift and go to state 224
    DIFERENTE       shift and go to state 225
    MAYOR           shift and go to state 226
    MENOR           shift and go to state 227
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232

    comparacion                    shift and go to state 237
    aritmeticos                    shift and go to state 238

state 105

    (236) relacional -> aritmetica . comparacion aritmetica
    (237) relacional -> aritmetica . comparacion numeros
    (259) aritmetica -> aritmetica . aritmeticos numeros
    (260) aritmetica -> aritmetica . aritmeticos VARIABLE
    (251) comparacion -> . IGUAL_COMPARACION
    (252) comparacion -> . DIFERENTE
    (253) comparacion -> . MAYOR
    (254) comparacion -> . MENOR
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD

    IGUAL_COMPARACION shift and go to state 224
    DIFERENTE       shift and go to state 225
    MAYOR           shift and go to state 226
    MENOR           shift and go to state 227
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232

    comparacion                    shift and go to state 239
    aritmeticos                    shift and go to state 240

state 106

    (240) relacional -> STRING . comparacion STRING
    (247) relacional -> STRING . comparacion VARIABLE
    (272) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (251) comparacion -> . IGUAL_COMPARACION
    (252) comparacion -> . DIFERENTE
    (253) comparacion -> . MAYOR
    (254) comparacion -> . MENOR

    PUNTO           shift and go to state 61
    IGUAL_COMPARACION shift and go to state 224
    DIFERENTE       shift and go to state 225
    MAYOR           shift and go to state 226
    MENOR           shift and go to state 227

    comparacion                    shift and go to state 241

state 107

    (241) relacional -> CHAR . comparacion CHAR
    (249) relacional -> CHAR . comparacion VARIABLE
    (251) comparacion -> . IGUAL_COMPARACION
    (252) comparacion -> . DIFERENTE
    (253) comparacion -> . MAYOR
    (254) comparacion -> . MENOR

    IGUAL_COMPARACION shift and go to state 224
    DIFERENTE       shift and go to state 225
    MAYOR           shift and go to state 226
    MENOR           shift and go to state 227

    comparacion                    shift and go to state 242

state 108

    (172) for -> FOR PAR_I VAR . VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> FOR PAR_I VAR . VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> FOR PAR_I VAR . VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 243


state 109

    (173) for -> FOR PAR_I VARIABLE . ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> FOR PAR_I VARIABLE . ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> FOR PAR_I VARIABLE . ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    ITERATOR        shift and go to state 244


state 110

    (217) if -> IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 245


state 111

    (272) startsWith -> STRING PUNTO STARTSWITH . PAR_I STRING PAR_D

    PAR_I           shift and go to state 246


state 112

    (1) inicio -> OBJECT VARIABLE LLAVE_I cuerpo . LLAVE_D

    LLAVE_D         shift and go to state 247


state 113

    (145) varparen -> varparen PAR_I valores . PAR_D

    PAR_D           shift and go to state 248


state 114

    (146) varparen -> varparen PAR_I PAR_D .

    PAR_I           reduce using rule 146 (varparen -> varparen PAR_I PAR_D .)
    $end            reduce using rule 146 (varparen -> varparen PAR_I PAR_D .)
    LLAVE_D         reduce using rule 146 (varparen -> varparen PAR_I PAR_D .)
    VAR             reduce using rule 146 (varparen -> varparen PAR_I PAR_D .)
    VAL             reduce using rule 146 (varparen -> varparen PAR_I PAR_D .)
    VARIABLE        reduce using rule 146 (varparen -> varparen PAR_I PAR_D .)
    PRINTLN         reduce using rule 146 (varparen -> varparen PAR_I PAR_D .)
    PRINT           reduce using rule 146 (varparen -> varparen PAR_I PAR_D .)
    READLINE        reduce using rule 146 (varparen -> varparen PAR_I PAR_D .)
    WHILE           reduce using rule 146 (varparen -> varparen PAR_I PAR_D .)
    FOR             reduce using rule 146 (varparen -> varparen PAR_I PAR_D .)
    IF              reduce using rule 146 (varparen -> varparen PAR_I PAR_D .)
    INT             reduce using rule 146 (varparen -> varparen PAR_I PAR_D .)
    LONG            reduce using rule 146 (varparen -> varparen PAR_I PAR_D .)
    FLOAT           reduce using rule 146 (varparen -> varparen PAR_I PAR_D .)
    DOUBLE          reduce using rule 146 (varparen -> varparen PAR_I PAR_D .)
    RETURN          reduce using rule 146 (varparen -> varparen PAR_I PAR_D .)
    PUNTO           reduce using rule 146 (varparen -> varparen PAR_I PAR_D .)
    DEF             reduce using rule 146 (varparen -> varparen PAR_I PAR_D .)
    STRING          reduce using rule 146 (varparen -> varparen PAR_I PAR_D .)
    CASE            reduce using rule 146 (varparen -> varparen PAR_I PAR_D .)


state 115

    (178) match -> VARIABLE MATCH LLAVE_I cases . LLAVE_D

    LLAVE_D         shift and go to state 249


state 116

    (179) cases -> casesInt .

    LLAVE_D         reduce using rule 179 (cases -> casesInt .)


state 117

    (180) cases -> casesLgn .

    LLAVE_D         reduce using rule 180 (cases -> casesLgn .)


state 118

    (181) cases -> casesFlt .

    LLAVE_D         reduce using rule 181 (cases -> casesFlt .)


state 119

    (182) cases -> casesDob .

    LLAVE_D         reduce using rule 182 (cases -> casesDob .)


state 120

    (183) cases -> casesStr .

    LLAVE_D         reduce using rule 183 (cases -> casesStr .)


state 121

    (184) cases -> casesChar .

    LLAVE_D         reduce using rule 184 (cases -> casesChar .)


state 122

    (185) cases -> casesBool .

    LLAVE_D         reduce using rule 185 (cases -> casesBool .)


state 123

    (187) casesInt -> caseInt .
    (188) casesInt -> caseInt . casesInt
    (189) casesInt -> caseInt . defcase
    (187) casesInt -> . caseInt
    (188) casesInt -> . caseInt casesInt
    (189) casesInt -> . caseInt defcase
    (214) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (186) caseInt -> . CASE INT FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 187 (casesInt -> caseInt .)
    CASE            shift and go to state 252

    caseInt                        shift and go to state 123
    casesInt                       shift and go to state 250
    defcase                        shift and go to state 251

state 124

    (191) casesLgn -> caseLgn .
    (192) casesLgn -> caseLgn . casesLgn
    (193) casesLgn -> caseLgn . defcase
    (191) casesLgn -> . caseLgn
    (192) casesLgn -> . caseLgn casesLgn
    (193) casesLgn -> . caseLgn defcase
    (214) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (190) caseLgn -> . CASE LONG FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 191 (casesLgn -> caseLgn .)
    CASE            shift and go to state 255

    caseLgn                        shift and go to state 124
    casesLgn                       shift and go to state 253
    defcase                        shift and go to state 254

state 125

    (195) casesFlt -> caseFlt .
    (196) casesFlt -> caseFlt . casesFlt
    (197) casesFlt -> caseFlt . defcase
    (195) casesFlt -> . caseFlt
    (196) casesFlt -> . caseFlt casesFlt
    (197) casesFlt -> . caseFlt defcase
    (214) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (194) caseFlt -> . CASE FLOAT FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 195 (casesFlt -> caseFlt .)
    CASE            shift and go to state 258

    caseFlt                        shift and go to state 125
    casesFlt                       shift and go to state 256
    defcase                        shift and go to state 257

state 126

    (199) casesDob -> caseDob .
    (200) casesDob -> caseDob . casesDob
    (201) casesDob -> caseDob . defcase
    (199) casesDob -> . caseDob
    (200) casesDob -> . caseDob casesDob
    (201) casesDob -> . caseDob defcase
    (214) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (198) caseDob -> . CASE DOUBLE FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 199 (casesDob -> caseDob .)
    CASE            shift and go to state 261

    caseDob                        shift and go to state 126
    casesDob                       shift and go to state 259
    defcase                        shift and go to state 260

state 127

    (203) casesStr -> caseStr .
    (204) casesStr -> caseStr . casesStr
    (205) casesStr -> caseStr . defcase
    (203) casesStr -> . caseStr
    (204) casesStr -> . caseStr casesStr
    (205) casesStr -> . caseStr defcase
    (214) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (202) caseStr -> . CASE STRING FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 203 (casesStr -> caseStr .)
    CASE            shift and go to state 264

    caseStr                        shift and go to state 127
    casesStr                       shift and go to state 262
    defcase                        shift and go to state 263

state 128

    (207) casesChar -> caseChar .
    (208) casesChar -> caseChar . casesChar
    (209) casesChar -> caseChar . defcase
    (207) casesChar -> . caseChar
    (208) casesChar -> . caseChar casesChar
    (209) casesChar -> . caseChar defcase
    (214) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (206) caseChar -> . CASE CHAR FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 207 (casesChar -> caseChar .)
    CASE            shift and go to state 267

    caseChar                       shift and go to state 128
    casesChar                      shift and go to state 265
    defcase                        shift and go to state 266

state 129

    (211) casesBool -> caseBool .
    (212) casesBool -> caseBool . casesBool
    (213) casesBool -> caseBool . defcase
    (211) casesBool -> . caseBool
    (212) casesBool -> . caseBool casesBool
    (213) casesBool -> . caseBool defcase
    (214) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (210) caseBool -> . CASE booleanos FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 211 (casesBool -> caseBool .)
    CASE            shift and go to state 270

    caseBool                       shift and go to state 129
    casesBool                      shift and go to state 268
    defcase                        shift and go to state 269

state 130

    (186) caseInt -> CASE . INT FUNCION_FLECHA codeBlock
    (190) caseLgn -> CASE . LONG FUNCION_FLECHA codeBlock
    (194) caseFlt -> CASE . FLOAT FUNCION_FLECHA codeBlock
    (198) caseDob -> CASE . DOUBLE FUNCION_FLECHA codeBlock
    (202) caseStr -> CASE . STRING FUNCION_FLECHA codeBlock
    (206) caseChar -> CASE . CHAR FUNCION_FLECHA codeBlock
    (210) caseBool -> CASE . booleanos FUNCION_FLECHA codeBlock
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    INT             shift and go to state 271
    LONG            shift and go to state 272
    FLOAT           shift and go to state 273
    DOUBLE          shift and go to state 274
    STRING          shift and go to state 275
    CHAR            shift and go to state 276
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    booleanos                      shift and go to state 277
    startsWith                     shift and go to state 79

state 131

    (143) varparen -> PAR_I valores PAR_D .

    PAR_I           reduce using rule 143 (varparen -> PAR_I valores PAR_D .)
    $end            reduce using rule 143 (varparen -> PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 143 (varparen -> PAR_I valores PAR_D .)
    VAR             reduce using rule 143 (varparen -> PAR_I valores PAR_D .)
    VAL             reduce using rule 143 (varparen -> PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 143 (varparen -> PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 143 (varparen -> PAR_I valores PAR_D .)
    PRINT           reduce using rule 143 (varparen -> PAR_I valores PAR_D .)
    READLINE        reduce using rule 143 (varparen -> PAR_I valores PAR_D .)
    WHILE           reduce using rule 143 (varparen -> PAR_I valores PAR_D .)
    FOR             reduce using rule 143 (varparen -> PAR_I valores PAR_D .)
    IF              reduce using rule 143 (varparen -> PAR_I valores PAR_D .)
    INT             reduce using rule 143 (varparen -> PAR_I valores PAR_D .)
    LONG            reduce using rule 143 (varparen -> PAR_I valores PAR_D .)
    FLOAT           reduce using rule 143 (varparen -> PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 143 (varparen -> PAR_I valores PAR_D .)
    RETURN          reduce using rule 143 (varparen -> PAR_I valores PAR_D .)
    PUNTO           reduce using rule 143 (varparen -> PAR_I valores PAR_D .)
    DEF             reduce using rule 143 (varparen -> PAR_I valores PAR_D .)
    STRING          reduce using rule 143 (varparen -> PAR_I valores PAR_D .)
    CASE            reduce using rule 143 (varparen -> PAR_I valores PAR_D .)


state 132

    (167) valores -> valor COMA . valores
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (98) valor -> . STRING
    (99) valor -> . CHAR
    (100) valor -> . VARIABLE
    (101) valor -> . numeros
    (102) valor -> . booleanos
    (103) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (104) valor -> . VARIABLE PAR_I INT PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valor                          shift and go to state 67
    valores                        shift and go to state 278
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72
    startsWith                     shift and go to state 79

state 133

    (103) valor -> VARIABLE PAR_I . VARIABLE PAR_D
    (104) valor -> VARIABLE PAR_I . INT PAR_D

    VARIABLE        shift and go to state 279
    INT             shift and go to state 280


state 134

    (4) io -> VARIABLE PUNTO VARIABLE . PUNTO VARIABLE PUNTO READLINE

    PUNTO           shift and go to state 281


state 135

    (220) elseif -> ELSE IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) elseif -> ELSE IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (224) condicional -> . valorC logicos condicional
    (225) condicional -> . valorC
    (226) valorC -> . VARIABLE
    (227) valorC -> . booleanos
    (228) valorC -> . relacional
    (229) valorC -> . NOT VARIABLE
    (230) valorC -> . NOT booleanos
    (231) valorC -> . NOT relacional
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (235) relacional -> . numeros comparacion numeros
    (236) relacional -> . aritmetica comparacion aritmetica
    (237) relacional -> . aritmetica comparacion numeros
    (238) relacional -> . numeros comparacion aritmetica
    (239) relacional -> . booleanos comparacion booleanos
    (240) relacional -> . STRING comparacion STRING
    (241) relacional -> . CHAR comparacion CHAR
    (242) relacional -> . VARIABLE comparacion numeros
    (243) relacional -> . numeros comparacion VARIABLE
    (244) relacional -> . VARIABLE comparacion booleanos
    (245) relacional -> . booleanos comparacion VARIABLE
    (246) relacional -> . VARIABLE comparacion STRING
    (247) relacional -> . STRING comparacion VARIABLE
    (248) relacional -> . VARIABLE comparacion CHAR
    (249) relacional -> . CHAR comparacion VARIABLE
    (250) relacional -> . VARIABLE comparacion VARIABLE
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 100
    NOT             shift and go to state 103
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    STRING          shift and go to state 106
    CHAR            shift and go to state 107
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    condicional                    shift and go to state 282
    valorC                         shift and go to state 99
    booleanos                      shift and go to state 101
    relacional                     shift and go to state 102
    startsWith                     shift and go to state 79
    numeros                        shift and go to state 104
    aritmetica                     shift and go to state 105

state 136

    (222) else -> ELSE LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 283


state 137

    (21) contenido -> asignacion .
    (31) contenido -> asignacion . contenido
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_D         reduce using rule 21 (contenido -> asignacion .)
    RETURN          reduce using rule 21 (contenido -> asignacion .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    asignacion                     shift and go to state 137
    contenido                      shift and go to state 284
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 138

    (22) contenido -> reasignacion .
    (32) contenido -> reasignacion . contenido
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_D         reduce using rule 22 (contenido -> reasignacion .)
    RETURN          reduce using rule 22 (contenido -> reasignacion .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    reasignacion                   shift and go to state 138
    contenido                      shift and go to state 285
    asignacion                     shift and go to state 137
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 139

    (23) contenido -> funcall .
    (33) contenido -> funcall . contenido
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_D         reduce using rule 23 (contenido -> funcall .)
    RETURN          reduce using rule 23 (contenido -> funcall .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    funcall                        shift and go to state 139
    contenido                      shift and go to state 286
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 140

    (24) contenido -> impresion .
    (34) contenido -> impresion . contenido
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_D         reduce using rule 24 (contenido -> impresion .)
    RETURN          reduce using rule 24 (contenido -> impresion .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    impresion                      shift and go to state 140
    contenido                      shift and go to state 287
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 141

    (25) contenido -> entrada .
    (35) contenido -> entrada . contenido
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_D         reduce using rule 25 (contenido -> entrada .)
    RETURN          reduce using rule 25 (contenido -> entrada .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    entrada                        shift and go to state 141
    contenido                      shift and go to state 288
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 142

    (26) contenido -> while .
    (36) contenido -> while . contenido
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_D         reduce using rule 26 (contenido -> while .)
    RETURN          reduce using rule 26 (contenido -> while .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    while                          shift and go to state 142
    contenido                      shift and go to state 289
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 143

    (27) contenido -> for .
    (37) contenido -> for . contenido
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_D         reduce using rule 27 (contenido -> for .)
    RETURN          reduce using rule 27 (contenido -> for .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    for                            shift and go to state 143
    contenido                      shift and go to state 290
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    match                          shift and go to state 144
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 144

    (28) contenido -> match .
    (39) contenido -> match . contenido
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_D         reduce using rule 28 (contenido -> match .)
    RETURN          reduce using rule 28 (contenido -> match .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    match                          shift and go to state 144
    contenido                      shift and go to state 291
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 145

    (29) contenido -> if .
    (38) contenido -> if . contenido
    (218) if -> if . elseif
    (219) if -> if . else
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (220) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (222) else -> . ELSE LLAVE_I contenido LLAVE_D
    (223) else -> . elseif else
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_D         reduce using rule 29 (contenido -> if .)
    RETURN          reduce using rule 29 (contenido -> if .)
    ELSE            shift and go to state 51
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    if                             shift and go to state 145
    contenido                      shift and go to state 292
    elseif                         shift and go to state 49
    else                           shift and go to state 50
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 146

    (30) contenido -> aritmetica .
    (40) contenido -> aritmetica . contenido
    (259) aritmetica -> aritmetica . aritmeticos numeros
    (260) aritmetica -> aritmetica . aritmeticos VARIABLE
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_D         reduce using rule 30 (contenido -> aritmetica .)
    RETURN          reduce using rule 30 (contenido -> aritmetica .)
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    aritmetica                     shift and go to state 146
    contenido                      shift and go to state 293
    aritmeticos                    shift and go to state 240
    numeros                        shift and go to state 148
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 147

    (85) reasignacion -> VARIABLE . IGUAL valor
    (86) reasignacion -> VARIABLE . IGUAL returnfun
    (87) reasignacion -> VARIABLE . IGUAL aritmetica
    (88) reasignacion -> VARIABLE . PAR_I INT PAR_D IGUAL valor
    (142) funcall -> VARIABLE . varparen
    (178) match -> VARIABLE . MATCH LLAVE_I cases LLAVE_D
    (256) aritmetica -> VARIABLE . aritmeticos numeros
    (258) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (143) varparen -> . PAR_I valores PAR_D
    (144) varparen -> . PAR_I PAR_D
    (145) varparen -> . varparen PAR_I valores PAR_D
    (146) varparen -> . varparen PAR_I PAR_D
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD

    IGUAL           shift and go to state 294
    PAR_I           shift and go to state 295
    MATCH           shift and go to state 39
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232

    varparen                       shift and go to state 38
    aritmeticos                    shift and go to state 223

state 148

    (255) aritmetica -> numeros . aritmeticos numeros
    (257) aritmetica -> numeros . aritmeticos VARIABLE
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD

    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232

    aritmeticos                    shift and go to state 238

state 149

    (112) funcion -> DEF VARIABLE parametro IGUAL . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 296


state 150

    (113) funcion -> DEF VARIABLE parametro LLAVE_I . contenido LLAVE_D
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 297
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 151

    (120) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (121) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (122) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (123) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (124) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I RETURN valor LLAVE_D
    (125) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (126) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (127) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I RETURN aritmetica LLAVE_D

    IGUAL           shift and go to state 298


state 152

    (128) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D

    IGUAL           shift and go to state 299


state 153

    (131) dectipo -> DOBLE_PUNTO . tipo
    (132) dectipoTupla -> DOBLE_PUNTO . PAR_I tipos PAR_D
    (89) tipo -> . CHARCLASS
    (90) tipo -> . STRINGCLASS
    (91) tipo -> . BOOLCLASS
    (92) tipo -> . INTCLASS
    (93) tipo -> . LONGCLASS
    (94) tipo -> . DOUBLECLASS
    (95) tipo -> . FLOATCLASS
    (96) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (97) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    PAR_I           shift and go to state 301
    CHARCLASS       shift and go to state 302
    STRINGCLASS     shift and go to state 303
    BOOLCLASS       shift and go to state 304
    INTCLASS        shift and go to state 305
    LONGCLASS       shift and go to state 306
    DOUBLECLASS     shift and go to state 307
    FLOATCLASS      shift and go to state 308
    ARRAYCLASS      shift and go to state 309
    LISTCLASS       shift and go to state 310

    tipo                           shift and go to state 300

state 154

    (117) parametro -> PAR_I PAR_D .

    IGUAL           reduce using rule 117 (parametro -> PAR_I PAR_D .)
    LLAVE_I         reduce using rule 117 (parametro -> PAR_I PAR_D .)
    DOBLE_PUNTO     reduce using rule 117 (parametro -> PAR_I PAR_D .)


state 155

    (118) parametros -> PAR_I declaracion . PAR_D
    (119) parametros -> PAR_I declaracion . PAR_D parametros

    PAR_D           shift and go to state 311


state 156

    (114) declaracion -> VARIABLE . DOBLE_PUNTO tipo
    (115) declaracion -> VARIABLE . DOBLE_PUNTO tipo IGUAL valor

    DOBLE_PUNTO     shift and go to state 312


state 157

    (137) impresion -> PRINTLN PAR_I valorI PAR_D .

    $end            reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    LLAVE_D         reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VAR             reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VAL             reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VARIABLE        reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    PRINTLN         reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    PRINT           reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    READLINE        reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    WHILE           reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    FOR             reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    IF              reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    INT             reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    LONG            reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    FLOAT           reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    DOUBLE          reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    RETURN          reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    CASE            reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)


state 158

    (139) valorI -> valor MAS . valorI
    (139) valorI -> . valor MAS valorI
    (140) valorI -> . valor
    (98) valor -> . STRING
    (99) valor -> . CHAR
    (100) valor -> . VARIABLE
    (101) valor -> . numeros
    (102) valor -> . booleanos
    (103) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (104) valor -> . VARIABLE PAR_I INT PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valor                          shift and go to state 91
    valorI                         shift and go to state 313
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72
    startsWith                     shift and go to state 79

state 159

    (138) impresion -> PRINT PAR_I valorI PAR_D .

    $end            reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    LLAVE_D         reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    VAR             reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    VAL             reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    VARIABLE        reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    PRINTLN         reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    PRINT           reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    READLINE        reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    WHILE           reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    FOR             reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    IF              reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    INT             reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    LONG            reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    FLOAT           reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    DOUBLE          reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    RETURN          reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    CASE            reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)


state 160

    (46) asignacion -> VAR VARIABLE IGUAL VARIABLE .
    (256) aritmetica -> VARIABLE . aritmeticos numeros
    (258) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (152) castingcall -> VARIABLE . PUNTO castingfun
    (142) funcall -> VARIABLE . varparen
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD
    (143) varparen -> . PAR_I valores PAR_D
    (144) varparen -> . PAR_I PAR_D
    (145) varparen -> . varparen PAR_I valores PAR_D
    (146) varparen -> . varparen PAR_I PAR_D

    DEF             reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VARIABLE        reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PRINTLN         reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PRINT           reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    READLINE        reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VAR             reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VAL             reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    WHILE           reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    FOR             reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    IF              reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    STRING          reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    $end            reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    INT             reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    LONG            reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    FLOAT           reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    DOUBLE          reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    RETURN          reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    CASE            reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PUNTO           shift and go to state 314
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232
    PAR_I           shift and go to state 40

    aritmeticos                    shift and go to state 223
    varparen                       shift and go to state 38

state 161

    (48) asignacion -> VAR VARIABLE IGUAL aritmetica .
    (259) aritmetica -> aritmetica . aritmeticos numeros
    (260) aritmetica -> aritmetica . aritmeticos VARIABLE
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD

    DEF             reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VAR             reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    STRING          reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    $end            reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232

    aritmeticos                    shift and go to state 240

state 162

    (50) asignacion -> VAR VARIABLE IGUAL returnfun .

    DEF             reduce using rule 50 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    VARIABLE        reduce using rule 50 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    PRINTLN         reduce using rule 50 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    PRINT           reduce using rule 50 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    READLINE        reduce using rule 50 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    VAR             reduce using rule 50 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    VAL             reduce using rule 50 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    WHILE           reduce using rule 50 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    FOR             reduce using rule 50 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    IF              reduce using rule 50 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    STRING          reduce using rule 50 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    $end            reduce using rule 50 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    LLAVE_D         reduce using rule 50 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    INT             reduce using rule 50 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    LONG            reduce using rule 50 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    FLOAT           reduce using rule 50 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    DOUBLE          reduce using rule 50 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    RETURN          reduce using rule 50 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    CASE            reduce using rule 50 (asignacion -> VAR VARIABLE IGUAL returnfun .)


state 163

    (169) asignacion -> VAR VARIABLE IGUAL tuple .

    DEF             reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    VARIABLE        reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    PRINTLN         reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    PRINT           reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    READLINE        reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    VAR             reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    VAL             reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    WHILE           reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    FOR             reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    IF              reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    STRING          reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    $end            reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    LLAVE_D         reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    INT             reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    LONG            reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    FLOAT           reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    DOUBLE          reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    RETURN          reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)
    CASE            reduce using rule 169 (asignacion -> VAR VARIABLE IGUAL tuple .)


state 164

    (301) asignacionLong -> VAR VARIABLE IGUAL longvalues .
    (313) floatvalues -> longvalues .

  ! reduce/reduce conflict for DEF resolved using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VAR resolved using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for IF resolved using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for $end resolved using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for INT resolved using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    DEF             reduce using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    VARIABLE        reduce using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    PRINTLN         reduce using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    PRINT           reduce using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    READLINE        reduce using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    VAR             reduce using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    VAL             reduce using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    WHILE           reduce using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    FOR             reduce using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    IF              reduce using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    STRING          reduce using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    $end            reduce using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    LLAVE_D         reduce using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    INT             reduce using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    LONG            reduce using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    FLOAT           reduce using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    DOUBLE          reduce using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    RETURN          reduce using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    CASE            reduce using rule 301 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)

  ! DEF             [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! VARIABLE        [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! PRINTLN         [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! PRINT           [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! READLINE        [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! VAR             [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! VAL             [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! WHILE           [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! FOR             [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! IF              [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! STRING          [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! $end            [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! LLAVE_D         [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! INT             [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! LONG            [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! FLOAT           [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! DOUBLE          [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! RETURN          [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! CASE            [ reduce using rule 313 (floatvalues -> longvalues .) ]


state 165

    (295) asignacionInt -> VAR VARIABLE IGUAL intvalues .
    (306) longvalues -> intvalues .

  ! reduce/reduce conflict for DEF resolved using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VAR resolved using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for IF resolved using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for $end resolved using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for INT resolved using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    DEF             reduce using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    VARIABLE        reduce using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    PRINTLN         reduce using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    PRINT           reduce using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    READLINE        reduce using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    VAR             reduce using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    VAL             reduce using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    WHILE           reduce using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    FOR             reduce using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    IF              reduce using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    STRING          reduce using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    $end            reduce using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    LLAVE_D         reduce using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    INT             reduce using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    LONG            reduce using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    FLOAT           reduce using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    DOUBLE          reduce using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    RETURN          reduce using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    CASE            reduce using rule 295 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)

  ! DEF             [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! VARIABLE        [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! PRINTLN         [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! PRINT           [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! READLINE        [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! VAR             [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! VAL             [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! WHILE           [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! FOR             [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! IF              [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! STRING          [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! $end            [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! LLAVE_D         [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! INT             [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! LONG            [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! FLOAT           [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! DOUBLE          [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! RETURN          [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! CASE            [ reduce using rule 306 (longvalues -> intvalues .) ]


state 166

    (308) asignacionFloat -> VAR VARIABLE IGUAL floatvalues .
    (320) doublevalues -> floatvalues .

  ! reduce/reduce conflict for DEF resolved using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VAR resolved using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for IF resolved using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for $end resolved using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for INT resolved using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    DEF             reduce using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    VARIABLE        reduce using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    PRINTLN         reduce using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    PRINT           reduce using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    READLINE        reduce using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    VAR             reduce using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    VAL             reduce using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    WHILE           reduce using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    FOR             reduce using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    IF              reduce using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    STRING          reduce using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    $end            reduce using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    LLAVE_D         reduce using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    INT             reduce using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    LONG            reduce using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    FLOAT           reduce using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    DOUBLE          reduce using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    RETURN          reduce using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    CASE            reduce using rule 308 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)

  ! DEF             [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! VARIABLE        [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! PRINTLN         [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! PRINT           [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! READLINE        [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! VAR             [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! VAL             [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! WHILE           [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! FOR             [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! IF              [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! STRING          [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! $end            [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! LLAVE_D         [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! INT             [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! LONG            [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! FLOAT           [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! DOUBLE          [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! RETURN          [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! CASE            [ reduce using rule 320 (doublevalues -> floatvalues .) ]


state 167

    (315) asignacionDouble -> VAR VARIABLE IGUAL doublevalues .

    DEF             reduce using rule 315 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    VARIABLE        reduce using rule 315 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    PRINTLN         reduce using rule 315 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    PRINT           reduce using rule 315 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    READLINE        reduce using rule 315 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    VAR             reduce using rule 315 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    VAL             reduce using rule 315 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    WHILE           reduce using rule 315 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    FOR             reduce using rule 315 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    IF              reduce using rule 315 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    STRING          reduce using rule 315 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    $end            reduce using rule 315 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    LLAVE_D         reduce using rule 315 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    INT             reduce using rule 315 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    LONG            reduce using rule 315 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    FLOAT           reduce using rule 315 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    DOUBLE          reduce using rule 315 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    RETURN          reduce using rule 315 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    CASE            reduce using rule 315 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)


state 168

    (67) asignacionString -> VAR VARIABLE IGUAL STRING .
    (323) stringCastLong -> STRING . PUNTO TO_LONG
    (322) stringCastInt -> STRING . PUNTO TO_INT
    (324) stringCastFloat -> STRING . PUNTO TO_FLOAT
    (325) stringCastDouble -> STRING . PUNTO TO_DOUBLE
    (272) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D

    DEF             reduce using rule 67 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VARIABLE        reduce using rule 67 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PRINTLN         reduce using rule 67 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PRINT           reduce using rule 67 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    READLINE        reduce using rule 67 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VAR             reduce using rule 67 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VAL             reduce using rule 67 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    WHILE           reduce using rule 67 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    FOR             reduce using rule 67 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    IF              reduce using rule 67 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    STRING          reduce using rule 67 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    $end            reduce using rule 67 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    LLAVE_D         reduce using rule 67 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    INT             reduce using rule 67 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    LONG            reduce using rule 67 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    FLOAT           reduce using rule 67 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    DOUBLE          reduce using rule 67 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    RETURN          reduce using rule 67 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    CASE            reduce using rule 67 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PUNTO           shift and go to state 315


state 169

    (73) asignacionChar -> VAR VARIABLE IGUAL CHAR .

    DEF             reduce using rule 73 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VARIABLE        reduce using rule 73 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    PRINTLN         reduce using rule 73 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    PRINT           reduce using rule 73 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    READLINE        reduce using rule 73 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VAR             reduce using rule 73 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VAL             reduce using rule 73 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    WHILE           reduce using rule 73 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    FOR             reduce using rule 73 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    IF              reduce using rule 73 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    STRING          reduce using rule 73 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    $end            reduce using rule 73 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    LLAVE_D         reduce using rule 73 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    INT             reduce using rule 73 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    LONG            reduce using rule 73 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    FLOAT           reduce using rule 73 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    DOUBLE          reduce using rule 73 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    RETURN          reduce using rule 73 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    CASE            reduce using rule 73 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)


state 170

    (79) asignacionBoolean -> VAR VARIABLE IGUAL booleanos .

    DEF             reduce using rule 79 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 79 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    PRINTLN         reduce using rule 79 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 79 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    READLINE        reduce using rule 79 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VAR             reduce using rule 79 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VAL             reduce using rule 79 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 79 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    FOR             reduce using rule 79 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    IF              reduce using rule 79 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    STRING          reduce using rule 79 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    $end            reduce using rule 79 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    LLAVE_D         reduce using rule 79 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    INT             reduce using rule 79 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    LONG            reduce using rule 79 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    FLOAT           reduce using rule 79 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    DOUBLE          reduce using rule 79 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    RETURN          reduce using rule 79 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 79 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)


state 171

    (157) array -> VAR VARIABLE IGUAL ARRAYCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 316


state 172

    (168) tuple -> PAR_I . valores PAR_D
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (98) valor -> . STRING
    (99) valor -> . CHAR
    (100) valor -> . VARIABLE
    (101) valor -> . numeros
    (102) valor -> . booleanos
    (103) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (104) valor -> . VARIABLE PAR_I INT PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valores                        shift and go to state 317
    valor                          shift and go to state 67
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72
    startsWith                     shift and go to state 79

state 173

    (147) returnfun -> returnCastable .
    (151) castingcall -> returnCastable . PUNTO castingfun

    DEF             reduce using rule 147 (returnfun -> returnCastable .)
    VARIABLE        reduce using rule 147 (returnfun -> returnCastable .)
    PRINTLN         reduce using rule 147 (returnfun -> returnCastable .)
    PRINT           reduce using rule 147 (returnfun -> returnCastable .)
    READLINE        reduce using rule 147 (returnfun -> returnCastable .)
    VAR             reduce using rule 147 (returnfun -> returnCastable .)
    VAL             reduce using rule 147 (returnfun -> returnCastable .)
    WHILE           reduce using rule 147 (returnfun -> returnCastable .)
    FOR             reduce using rule 147 (returnfun -> returnCastable .)
    IF              reduce using rule 147 (returnfun -> returnCastable .)
    STRING          reduce using rule 147 (returnfun -> returnCastable .)
    $end            reduce using rule 147 (returnfun -> returnCastable .)
    LLAVE_D         reduce using rule 147 (returnfun -> returnCastable .)
    INT             reduce using rule 147 (returnfun -> returnCastable .)
    LONG            reduce using rule 147 (returnfun -> returnCastable .)
    FLOAT           reduce using rule 147 (returnfun -> returnCastable .)
    DOUBLE          reduce using rule 147 (returnfun -> returnCastable .)
    RETURN          reduce using rule 147 (returnfun -> returnCastable .)
    CASE            reduce using rule 147 (returnfun -> returnCastable .)
    PUNTO           shift and go to state 318


state 174

    (148) returnfun -> castingcall .

    DEF             reduce using rule 148 (returnfun -> castingcall .)
    VARIABLE        reduce using rule 148 (returnfun -> castingcall .)
    PRINTLN         reduce using rule 148 (returnfun -> castingcall .)
    PRINT           reduce using rule 148 (returnfun -> castingcall .)
    READLINE        reduce using rule 148 (returnfun -> castingcall .)
    VAR             reduce using rule 148 (returnfun -> castingcall .)
    VAL             reduce using rule 148 (returnfun -> castingcall .)
    WHILE           reduce using rule 148 (returnfun -> castingcall .)
    FOR             reduce using rule 148 (returnfun -> castingcall .)
    IF              reduce using rule 148 (returnfun -> castingcall .)
    STRING          reduce using rule 148 (returnfun -> castingcall .)
    $end            reduce using rule 148 (returnfun -> castingcall .)
    LLAVE_D         reduce using rule 148 (returnfun -> castingcall .)
    INT             reduce using rule 148 (returnfun -> castingcall .)
    LONG            reduce using rule 148 (returnfun -> castingcall .)
    FLOAT           reduce using rule 148 (returnfun -> castingcall .)
    DOUBLE          reduce using rule 148 (returnfun -> castingcall .)
    RETURN          reduce using rule 148 (returnfun -> castingcall .)
    CASE            reduce using rule 148 (returnfun -> castingcall .)


state 175

    (305) longvalues -> INT .
    (299) intvalues -> INT .
    (108) numeros -> INT .

  ! reduce/reduce conflict for DEF resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for PRINT resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for READLINE resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for VAR resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for VAL resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for WHILE resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for FOR resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for IF resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for STRING resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for $end resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for INT resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for LONG resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for FLOAT resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for RETURN resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for CASE resolved using rule 299 (intvalues -> INT .)
    DEF             reduce using rule 299 (intvalues -> INT .)
    VARIABLE        reduce using rule 299 (intvalues -> INT .)
    PRINTLN         reduce using rule 299 (intvalues -> INT .)
    PRINT           reduce using rule 299 (intvalues -> INT .)
    READLINE        reduce using rule 299 (intvalues -> INT .)
    VAR             reduce using rule 299 (intvalues -> INT .)
    VAL             reduce using rule 299 (intvalues -> INT .)
    WHILE           reduce using rule 299 (intvalues -> INT .)
    FOR             reduce using rule 299 (intvalues -> INT .)
    IF              reduce using rule 299 (intvalues -> INT .)
    STRING          reduce using rule 299 (intvalues -> INT .)
    $end            reduce using rule 299 (intvalues -> INT .)
    LLAVE_D         reduce using rule 299 (intvalues -> INT .)
    INT             reduce using rule 299 (intvalues -> INT .)
    LONG            reduce using rule 299 (intvalues -> INT .)
    FLOAT           reduce using rule 299 (intvalues -> INT .)
    DOUBLE          reduce using rule 299 (intvalues -> INT .)
    RETURN          reduce using rule 299 (intvalues -> INT .)
    CASE            reduce using rule 299 (intvalues -> INT .)
    MENOS           reduce using rule 108 (numeros -> INT .)
    MAS             reduce using rule 108 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 108 (numeros -> INT .)
    DIVISION        reduce using rule 108 (numeros -> INT .)
    MOD             reduce using rule 108 (numeros -> INT .)

  ! DEF             [ reduce using rule 305 (longvalues -> INT .) ]
  ! VARIABLE        [ reduce using rule 305 (longvalues -> INT .) ]
  ! PRINTLN         [ reduce using rule 305 (longvalues -> INT .) ]
  ! PRINT           [ reduce using rule 305 (longvalues -> INT .) ]
  ! READLINE        [ reduce using rule 305 (longvalues -> INT .) ]
  ! VAR             [ reduce using rule 305 (longvalues -> INT .) ]
  ! VAL             [ reduce using rule 305 (longvalues -> INT .) ]
  ! WHILE           [ reduce using rule 305 (longvalues -> INT .) ]
  ! FOR             [ reduce using rule 305 (longvalues -> INT .) ]
  ! IF              [ reduce using rule 305 (longvalues -> INT .) ]
  ! STRING          [ reduce using rule 305 (longvalues -> INT .) ]
  ! $end            [ reduce using rule 305 (longvalues -> INT .) ]
  ! LLAVE_D         [ reduce using rule 305 (longvalues -> INT .) ]
  ! INT             [ reduce using rule 305 (longvalues -> INT .) ]
  ! LONG            [ reduce using rule 305 (longvalues -> INT .) ]
  ! FLOAT           [ reduce using rule 305 (longvalues -> INT .) ]
  ! DOUBLE          [ reduce using rule 305 (longvalues -> INT .) ]
  ! RETURN          [ reduce using rule 305 (longvalues -> INT .) ]
  ! CASE            [ reduce using rule 305 (longvalues -> INT .) ]


state 176

    (307) longvalues -> stringCastLong .

    DEF             reduce using rule 307 (longvalues -> stringCastLong .)
    VARIABLE        reduce using rule 307 (longvalues -> stringCastLong .)
    PRINTLN         reduce using rule 307 (longvalues -> stringCastLong .)
    PRINT           reduce using rule 307 (longvalues -> stringCastLong .)
    READLINE        reduce using rule 307 (longvalues -> stringCastLong .)
    VAR             reduce using rule 307 (longvalues -> stringCastLong .)
    VAL             reduce using rule 307 (longvalues -> stringCastLong .)
    WHILE           reduce using rule 307 (longvalues -> stringCastLong .)
    FOR             reduce using rule 307 (longvalues -> stringCastLong .)
    IF              reduce using rule 307 (longvalues -> stringCastLong .)
    STRING          reduce using rule 307 (longvalues -> stringCastLong .)
    $end            reduce using rule 307 (longvalues -> stringCastLong .)
    LLAVE_D         reduce using rule 307 (longvalues -> stringCastLong .)
    INT             reduce using rule 307 (longvalues -> stringCastLong .)
    LONG            reduce using rule 307 (longvalues -> stringCastLong .)
    FLOAT           reduce using rule 307 (longvalues -> stringCastLong .)
    DOUBLE          reduce using rule 307 (longvalues -> stringCastLong .)
    RETURN          reduce using rule 307 (longvalues -> stringCastLong .)
    CASE            reduce using rule 307 (longvalues -> stringCastLong .)


state 177

    (300) intvalues -> stringCastInt .

    DEF             reduce using rule 300 (intvalues -> stringCastInt .)
    VARIABLE        reduce using rule 300 (intvalues -> stringCastInt .)
    PRINTLN         reduce using rule 300 (intvalues -> stringCastInt .)
    PRINT           reduce using rule 300 (intvalues -> stringCastInt .)
    READLINE        reduce using rule 300 (intvalues -> stringCastInt .)
    VAR             reduce using rule 300 (intvalues -> stringCastInt .)
    VAL             reduce using rule 300 (intvalues -> stringCastInt .)
    WHILE           reduce using rule 300 (intvalues -> stringCastInt .)
    FOR             reduce using rule 300 (intvalues -> stringCastInt .)
    IF              reduce using rule 300 (intvalues -> stringCastInt .)
    STRING          reduce using rule 300 (intvalues -> stringCastInt .)
    $end            reduce using rule 300 (intvalues -> stringCastInt .)
    LLAVE_D         reduce using rule 300 (intvalues -> stringCastInt .)
    INT             reduce using rule 300 (intvalues -> stringCastInt .)
    LONG            reduce using rule 300 (intvalues -> stringCastInt .)
    FLOAT           reduce using rule 300 (intvalues -> stringCastInt .)
    DOUBLE          reduce using rule 300 (intvalues -> stringCastInt .)
    RETURN          reduce using rule 300 (intvalues -> stringCastInt .)
    CASE            reduce using rule 300 (intvalues -> stringCastInt .)


state 178

    (312) floatvalues -> FLOAT .
    (110) numeros -> FLOAT .

    DEF             reduce using rule 312 (floatvalues -> FLOAT .)
    VARIABLE        reduce using rule 312 (floatvalues -> FLOAT .)
    PRINTLN         reduce using rule 312 (floatvalues -> FLOAT .)
    PRINT           reduce using rule 312 (floatvalues -> FLOAT .)
    READLINE        reduce using rule 312 (floatvalues -> FLOAT .)
    VAR             reduce using rule 312 (floatvalues -> FLOAT .)
    VAL             reduce using rule 312 (floatvalues -> FLOAT .)
    WHILE           reduce using rule 312 (floatvalues -> FLOAT .)
    FOR             reduce using rule 312 (floatvalues -> FLOAT .)
    IF              reduce using rule 312 (floatvalues -> FLOAT .)
    STRING          reduce using rule 312 (floatvalues -> FLOAT .)
    $end            reduce using rule 312 (floatvalues -> FLOAT .)
    LLAVE_D         reduce using rule 312 (floatvalues -> FLOAT .)
    INT             reduce using rule 312 (floatvalues -> FLOAT .)
    LONG            reduce using rule 312 (floatvalues -> FLOAT .)
    FLOAT           reduce using rule 312 (floatvalues -> FLOAT .)
    DOUBLE          reduce using rule 312 (floatvalues -> FLOAT .)
    RETURN          reduce using rule 312 (floatvalues -> FLOAT .)
    CASE            reduce using rule 312 (floatvalues -> FLOAT .)
    MENOS           reduce using rule 110 (numeros -> FLOAT .)
    MAS             reduce using rule 110 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 110 (numeros -> FLOAT .)
    DIVISION        reduce using rule 110 (numeros -> FLOAT .)
    MOD             reduce using rule 110 (numeros -> FLOAT .)


state 179

    (314) floatvalues -> stringCastFloat .

    DEF             reduce using rule 314 (floatvalues -> stringCastFloat .)
    VARIABLE        reduce using rule 314 (floatvalues -> stringCastFloat .)
    PRINTLN         reduce using rule 314 (floatvalues -> stringCastFloat .)
    PRINT           reduce using rule 314 (floatvalues -> stringCastFloat .)
    READLINE        reduce using rule 314 (floatvalues -> stringCastFloat .)
    VAR             reduce using rule 314 (floatvalues -> stringCastFloat .)
    VAL             reduce using rule 314 (floatvalues -> stringCastFloat .)
    WHILE           reduce using rule 314 (floatvalues -> stringCastFloat .)
    FOR             reduce using rule 314 (floatvalues -> stringCastFloat .)
    IF              reduce using rule 314 (floatvalues -> stringCastFloat .)
    STRING          reduce using rule 314 (floatvalues -> stringCastFloat .)
    $end            reduce using rule 314 (floatvalues -> stringCastFloat .)
    LLAVE_D         reduce using rule 314 (floatvalues -> stringCastFloat .)
    INT             reduce using rule 314 (floatvalues -> stringCastFloat .)
    LONG            reduce using rule 314 (floatvalues -> stringCastFloat .)
    FLOAT           reduce using rule 314 (floatvalues -> stringCastFloat .)
    DOUBLE          reduce using rule 314 (floatvalues -> stringCastFloat .)
    RETURN          reduce using rule 314 (floatvalues -> stringCastFloat .)
    CASE            reduce using rule 314 (floatvalues -> stringCastFloat .)


state 180

    (319) doublevalues -> DOUBLE .
    (111) numeros -> DOUBLE .

    DEF             reduce using rule 319 (doublevalues -> DOUBLE .)
    VARIABLE        reduce using rule 319 (doublevalues -> DOUBLE .)
    PRINTLN         reduce using rule 319 (doublevalues -> DOUBLE .)
    PRINT           reduce using rule 319 (doublevalues -> DOUBLE .)
    READLINE        reduce using rule 319 (doublevalues -> DOUBLE .)
    VAR             reduce using rule 319 (doublevalues -> DOUBLE .)
    VAL             reduce using rule 319 (doublevalues -> DOUBLE .)
    WHILE           reduce using rule 319 (doublevalues -> DOUBLE .)
    FOR             reduce using rule 319 (doublevalues -> DOUBLE .)
    IF              reduce using rule 319 (doublevalues -> DOUBLE .)
    STRING          reduce using rule 319 (doublevalues -> DOUBLE .)
    $end            reduce using rule 319 (doublevalues -> DOUBLE .)
    LLAVE_D         reduce using rule 319 (doublevalues -> DOUBLE .)
    INT             reduce using rule 319 (doublevalues -> DOUBLE .)
    LONG            reduce using rule 319 (doublevalues -> DOUBLE .)
    FLOAT           reduce using rule 319 (doublevalues -> DOUBLE .)
    DOUBLE          reduce using rule 319 (doublevalues -> DOUBLE .)
    RETURN          reduce using rule 319 (doublevalues -> DOUBLE .)
    CASE            reduce using rule 319 (doublevalues -> DOUBLE .)
    MENOS           reduce using rule 111 (numeros -> DOUBLE .)
    MAS             reduce using rule 111 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 111 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 111 (numeros -> DOUBLE .)
    MOD             reduce using rule 111 (numeros -> DOUBLE .)


state 181

    (321) doublevalues -> stringCastDouble .

    DEF             reduce using rule 321 (doublevalues -> stringCastDouble .)
    VARIABLE        reduce using rule 321 (doublevalues -> stringCastDouble .)
    PRINTLN         reduce using rule 321 (doublevalues -> stringCastDouble .)
    PRINT           reduce using rule 321 (doublevalues -> stringCastDouble .)
    READLINE        reduce using rule 321 (doublevalues -> stringCastDouble .)
    VAR             reduce using rule 321 (doublevalues -> stringCastDouble .)
    VAL             reduce using rule 321 (doublevalues -> stringCastDouble .)
    WHILE           reduce using rule 321 (doublevalues -> stringCastDouble .)
    FOR             reduce using rule 321 (doublevalues -> stringCastDouble .)
    IF              reduce using rule 321 (doublevalues -> stringCastDouble .)
    STRING          reduce using rule 321 (doublevalues -> stringCastDouble .)
    $end            reduce using rule 321 (doublevalues -> stringCastDouble .)
    LLAVE_D         reduce using rule 321 (doublevalues -> stringCastDouble .)
    INT             reduce using rule 321 (doublevalues -> stringCastDouble .)
    LONG            reduce using rule 321 (doublevalues -> stringCastDouble .)
    FLOAT           reduce using rule 321 (doublevalues -> stringCastDouble .)
    DOUBLE          reduce using rule 321 (doublevalues -> stringCastDouble .)
    RETURN          reduce using rule 321 (doublevalues -> stringCastDouble .)
    CASE            reduce using rule 321 (doublevalues -> stringCastDouble .)


state 182

    (149) returnCastable -> entrada .

    PUNTO           reduce using rule 149 (returnCastable -> entrada .)
    DEF             reduce using rule 149 (returnCastable -> entrada .)
    VARIABLE        reduce using rule 149 (returnCastable -> entrada .)
    PRINTLN         reduce using rule 149 (returnCastable -> entrada .)
    PRINT           reduce using rule 149 (returnCastable -> entrada .)
    READLINE        reduce using rule 149 (returnCastable -> entrada .)
    VAR             reduce using rule 149 (returnCastable -> entrada .)
    VAL             reduce using rule 149 (returnCastable -> entrada .)
    WHILE           reduce using rule 149 (returnCastable -> entrada .)
    FOR             reduce using rule 149 (returnCastable -> entrada .)
    IF              reduce using rule 149 (returnCastable -> entrada .)
    STRING          reduce using rule 149 (returnCastable -> entrada .)
    $end            reduce using rule 149 (returnCastable -> entrada .)
    LLAVE_D         reduce using rule 149 (returnCastable -> entrada .)
    INT             reduce using rule 149 (returnCastable -> entrada .)
    LONG            reduce using rule 149 (returnCastable -> entrada .)
    FLOAT           reduce using rule 149 (returnCastable -> entrada .)
    DOUBLE          reduce using rule 149 (returnCastable -> entrada .)
    RETURN          reduce using rule 149 (returnCastable -> entrada .)
    CASE            reduce using rule 149 (returnCastable -> entrada .)


state 183

    (150) returnCastable -> funcall .

    PUNTO           reduce using rule 150 (returnCastable -> funcall .)
    DEF             reduce using rule 150 (returnCastable -> funcall .)
    VARIABLE        reduce using rule 150 (returnCastable -> funcall .)
    PRINTLN         reduce using rule 150 (returnCastable -> funcall .)
    PRINT           reduce using rule 150 (returnCastable -> funcall .)
    READLINE        reduce using rule 150 (returnCastable -> funcall .)
    VAR             reduce using rule 150 (returnCastable -> funcall .)
    VAL             reduce using rule 150 (returnCastable -> funcall .)
    WHILE           reduce using rule 150 (returnCastable -> funcall .)
    FOR             reduce using rule 150 (returnCastable -> funcall .)
    IF              reduce using rule 150 (returnCastable -> funcall .)
    STRING          reduce using rule 150 (returnCastable -> funcall .)
    $end            reduce using rule 150 (returnCastable -> funcall .)
    LLAVE_D         reduce using rule 150 (returnCastable -> funcall .)
    INT             reduce using rule 150 (returnCastable -> funcall .)
    LONG            reduce using rule 150 (returnCastable -> funcall .)
    FLOAT           reduce using rule 150 (returnCastable -> funcall .)
    DOUBLE          reduce using rule 150 (returnCastable -> funcall .)
    RETURN          reduce using rule 150 (returnCastable -> funcall .)
    CASE            reduce using rule 150 (returnCastable -> funcall .)


state 184

    (273) asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .

    DEF             reduce using rule 273 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    VARIABLE        reduce using rule 273 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    PRINTLN         reduce using rule 273 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    PRINT           reduce using rule 273 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    READLINE        reduce using rule 273 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    VAR             reduce using rule 273 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    VAL             reduce using rule 273 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    WHILE           reduce using rule 273 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    FOR             reduce using rule 273 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    IF              reduce using rule 273 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    STRING          reduce using rule 273 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    $end            reduce using rule 273 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    LLAVE_D         reduce using rule 273 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    INT             reduce using rule 273 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    LONG            reduce using rule 273 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    FLOAT           reduce using rule 273 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    DOUBLE          reduce using rule 273 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    RETURN          reduce using rule 273 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    CASE            reduce using rule 273 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)


state 185

    (61) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL VARIABLE
    (302) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL longvalues

    IGUAL           shift and go to state 319


state 186

    (296) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS . IGUAL intvalues

    IGUAL           shift and go to state 320


state 187

    (63) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL VARIABLE
    (309) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL floatvalues

    IGUAL           shift and go to state 321


state 188

    (65) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL VARIABLE
    (316) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL doublevalues

    IGUAL           shift and go to state 322


state 189

    (68) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL STRING
    (71) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 323


state 190

    (74) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL CHAR
    (77) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 324


state 191

    (80) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL booleanos
    (83) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 325


state 192

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (266) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    CORCHETE_I      shift and go to state 326


state 193

    (275) dectupla -> PAR_I . STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
    (276) dectupla -> PAR_I . STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
    (277) dectupla -> PAR_I . STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
    (278) dectupla -> PAR_I . STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D
    (279) dectupla -> PAR_I . FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
    (280) dectupla -> PAR_I . FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
    (281) dectupla -> PAR_I . FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
    (282) dectupla -> PAR_I . FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D
    (283) dectupla -> PAR_I . DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
    (284) dectupla -> PAR_I . DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
    (285) dectupla -> PAR_I . DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
    (286) dectupla -> PAR_I . DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D
    (287) dectupla -> PAR_I . LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
    (288) dectupla -> PAR_I . LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
    (289) dectupla -> PAR_I . LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
    (290) dectupla -> PAR_I . LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D
    (291) dectupla -> PAR_I . INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
    (292) dectupla -> PAR_I . INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
    (293) dectupla -> PAR_I . INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
    (294) dectupla -> PAR_I . INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    STRINGCLASS     shift and go to state 327
    FLOATCLASS      shift and go to state 331
    DOUBLECLASS     shift and go to state 330
    LONGCLASS       shift and go to state 329
    INTCLASS        shift and go to state 328


state 194

    (47) asignacion -> VAL VARIABLE IGUAL VARIABLE .
    (256) aritmetica -> VARIABLE . aritmeticos numeros
    (258) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (152) castingcall -> VARIABLE . PUNTO castingfun
    (142) funcall -> VARIABLE . varparen
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD
    (143) varparen -> . PAR_I valores PAR_D
    (144) varparen -> . PAR_I PAR_D
    (145) varparen -> . varparen PAR_I valores PAR_D
    (146) varparen -> . varparen PAR_I PAR_D

    DEF             reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VARIABLE        reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PRINTLN         reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PRINT           reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    READLINE        reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VAR             reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VAL             reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    WHILE           reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    FOR             reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    IF              reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    STRING          reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    $end            reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    INT             reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    LONG            reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    FLOAT           reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    DOUBLE          reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    RETURN          reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    CASE            reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PUNTO           shift and go to state 314
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232
    PAR_I           shift and go to state 40

    aritmeticos                    shift and go to state 223
    varparen                       shift and go to state 38

state 195

    (49) asignacion -> VAL VARIABLE IGUAL aritmetica .
    (259) aritmetica -> aritmetica . aritmeticos numeros
    (260) aritmetica -> aritmetica . aritmeticos VARIABLE
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD

    DEF             reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VAR             reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    STRING          reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    $end            reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232

    aritmeticos                    shift and go to state 240

state 196

    (51) asignacion -> VAL VARIABLE IGUAL returnfun .

    DEF             reduce using rule 51 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    VARIABLE        reduce using rule 51 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    PRINTLN         reduce using rule 51 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    PRINT           reduce using rule 51 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    READLINE        reduce using rule 51 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    VAR             reduce using rule 51 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    VAL             reduce using rule 51 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    WHILE           reduce using rule 51 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    FOR             reduce using rule 51 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    IF              reduce using rule 51 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    STRING          reduce using rule 51 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    $end            reduce using rule 51 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    LLAVE_D         reduce using rule 51 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    INT             reduce using rule 51 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    LONG            reduce using rule 51 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    FLOAT           reduce using rule 51 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    DOUBLE          reduce using rule 51 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    RETURN          reduce using rule 51 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    CASE            reduce using rule 51 (asignacion -> VAL VARIABLE IGUAL returnfun .)


state 197

    (170) asignacion -> VAL VARIABLE IGUAL tuple .

    DEF             reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    VARIABLE        reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    PRINTLN         reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    PRINT           reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    READLINE        reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    VAR             reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    VAL             reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    WHILE           reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    FOR             reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    IF              reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    STRING          reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    $end            reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    LLAVE_D         reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    INT             reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    LONG            reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    FLOAT           reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    DOUBLE          reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    RETURN          reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)
    CASE            reduce using rule 170 (asignacion -> VAL VARIABLE IGUAL tuple .)


state 198

    (303) asignacionLong -> VAL VARIABLE IGUAL longvalues .
    (313) floatvalues -> longvalues .

  ! reduce/reduce conflict for DEF resolved using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VAR resolved using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for IF resolved using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for $end resolved using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for INT resolved using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    DEF             reduce using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    VARIABLE        reduce using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    PRINTLN         reduce using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    PRINT           reduce using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    READLINE        reduce using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    VAR             reduce using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    VAL             reduce using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    WHILE           reduce using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    FOR             reduce using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    IF              reduce using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    STRING          reduce using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    $end            reduce using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    LLAVE_D         reduce using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    INT             reduce using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    LONG            reduce using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    FLOAT           reduce using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    DOUBLE          reduce using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    RETURN          reduce using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    CASE            reduce using rule 303 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)

  ! DEF             [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! VARIABLE        [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! PRINTLN         [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! PRINT           [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! READLINE        [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! VAR             [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! VAL             [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! WHILE           [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! FOR             [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! IF              [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! STRING          [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! $end            [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! LLAVE_D         [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! INT             [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! LONG            [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! FLOAT           [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! DOUBLE          [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! RETURN          [ reduce using rule 313 (floatvalues -> longvalues .) ]
  ! CASE            [ reduce using rule 313 (floatvalues -> longvalues .) ]


state 199

    (297) asignacionInt -> VAL VARIABLE IGUAL intvalues .
    (306) longvalues -> intvalues .

  ! reduce/reduce conflict for DEF resolved using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VAR resolved using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for IF resolved using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for $end resolved using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for INT resolved using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    DEF             reduce using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    VARIABLE        reduce using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    PRINTLN         reduce using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    PRINT           reduce using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    READLINE        reduce using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    VAR             reduce using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    VAL             reduce using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    WHILE           reduce using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    FOR             reduce using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    IF              reduce using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    STRING          reduce using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    $end            reduce using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    LLAVE_D         reduce using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    INT             reduce using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    LONG            reduce using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    FLOAT           reduce using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    DOUBLE          reduce using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    RETURN          reduce using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    CASE            reduce using rule 297 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)

  ! DEF             [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! VARIABLE        [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! PRINTLN         [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! PRINT           [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! READLINE        [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! VAR             [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! VAL             [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! WHILE           [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! FOR             [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! IF              [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! STRING          [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! $end            [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! LLAVE_D         [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! INT             [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! LONG            [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! FLOAT           [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! DOUBLE          [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! RETURN          [ reduce using rule 306 (longvalues -> intvalues .) ]
  ! CASE            [ reduce using rule 306 (longvalues -> intvalues .) ]


state 200

    (310) asignacionFloat -> VAL VARIABLE IGUAL floatvalues .
    (320) doublevalues -> floatvalues .

  ! reduce/reduce conflict for DEF resolved using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VAR resolved using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for IF resolved using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for $end resolved using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for INT resolved using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    DEF             reduce using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    VARIABLE        reduce using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    PRINTLN         reduce using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    PRINT           reduce using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    READLINE        reduce using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    VAR             reduce using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    VAL             reduce using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    WHILE           reduce using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    FOR             reduce using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    IF              reduce using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    STRING          reduce using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    $end            reduce using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    LLAVE_D         reduce using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    INT             reduce using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    LONG            reduce using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    FLOAT           reduce using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    DOUBLE          reduce using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    RETURN          reduce using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    CASE            reduce using rule 310 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)

  ! DEF             [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! VARIABLE        [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! PRINTLN         [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! PRINT           [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! READLINE        [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! VAR             [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! VAL             [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! WHILE           [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! FOR             [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! IF              [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! STRING          [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! $end            [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! LLAVE_D         [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! INT             [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! LONG            [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! FLOAT           [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! DOUBLE          [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! RETURN          [ reduce using rule 320 (doublevalues -> floatvalues .) ]
  ! CASE            [ reduce using rule 320 (doublevalues -> floatvalues .) ]


state 201

    (317) asignacionDouble -> VAL VARIABLE IGUAL doublevalues .

    DEF             reduce using rule 317 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    VARIABLE        reduce using rule 317 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    PRINTLN         reduce using rule 317 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    PRINT           reduce using rule 317 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    READLINE        reduce using rule 317 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    VAR             reduce using rule 317 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    VAL             reduce using rule 317 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    WHILE           reduce using rule 317 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    FOR             reduce using rule 317 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    IF              reduce using rule 317 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    STRING          reduce using rule 317 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    $end            reduce using rule 317 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    LLAVE_D         reduce using rule 317 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    INT             reduce using rule 317 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    LONG            reduce using rule 317 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    FLOAT           reduce using rule 317 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    DOUBLE          reduce using rule 317 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    RETURN          reduce using rule 317 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    CASE            reduce using rule 317 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)


state 202

    (69) asignacionString -> VAL VARIABLE IGUAL STRING .
    (323) stringCastLong -> STRING . PUNTO TO_LONG
    (322) stringCastInt -> STRING . PUNTO TO_INT
    (324) stringCastFloat -> STRING . PUNTO TO_FLOAT
    (325) stringCastDouble -> STRING . PUNTO TO_DOUBLE
    (272) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D

    DEF             reduce using rule 69 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VARIABLE        reduce using rule 69 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PRINTLN         reduce using rule 69 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PRINT           reduce using rule 69 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    READLINE        reduce using rule 69 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VAR             reduce using rule 69 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VAL             reduce using rule 69 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    WHILE           reduce using rule 69 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    FOR             reduce using rule 69 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    IF              reduce using rule 69 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    STRING          reduce using rule 69 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    $end            reduce using rule 69 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    LLAVE_D         reduce using rule 69 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    INT             reduce using rule 69 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    LONG            reduce using rule 69 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    FLOAT           reduce using rule 69 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    DOUBLE          reduce using rule 69 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    RETURN          reduce using rule 69 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    CASE            reduce using rule 69 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PUNTO           shift and go to state 315


state 203

    (75) asignacionChar -> VAL VARIABLE IGUAL CHAR .

    DEF             reduce using rule 75 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VARIABLE        reduce using rule 75 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    PRINTLN         reduce using rule 75 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    PRINT           reduce using rule 75 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    READLINE        reduce using rule 75 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VAR             reduce using rule 75 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VAL             reduce using rule 75 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    WHILE           reduce using rule 75 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    FOR             reduce using rule 75 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    IF              reduce using rule 75 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    STRING          reduce using rule 75 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    $end            reduce using rule 75 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    LLAVE_D         reduce using rule 75 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    INT             reduce using rule 75 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    LONG            reduce using rule 75 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    FLOAT           reduce using rule 75 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    DOUBLE          reduce using rule 75 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    RETURN          reduce using rule 75 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    CASE            reduce using rule 75 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)


state 204

    (81) asignacionBoolean -> VAL VARIABLE IGUAL booleanos .

    DEF             reduce using rule 81 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 81 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    PRINTLN         reduce using rule 81 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 81 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    READLINE        reduce using rule 81 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VAR             reduce using rule 81 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VAL             reduce using rule 81 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 81 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    FOR             reduce using rule 81 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    IF              reduce using rule 81 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    STRING          reduce using rule 81 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    $end            reduce using rule 81 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    LLAVE_D         reduce using rule 81 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    INT             reduce using rule 81 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    LONG            reduce using rule 81 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    FLOAT           reduce using rule 81 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    DOUBLE          reduce using rule 81 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    RETURN          reduce using rule 81 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 81 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)


state 205

    (159) array -> VAL VARIABLE IGUAL ARRAYCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 332


state 206

    (163) list -> VAL VARIABLE IGUAL LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 333


state 207

    (274) asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .

    DEF             reduce using rule 274 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    VARIABLE        reduce using rule 274 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    PRINTLN         reduce using rule 274 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    PRINT           reduce using rule 274 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    READLINE        reduce using rule 274 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    VAR             reduce using rule 274 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    VAL             reduce using rule 274 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    WHILE           reduce using rule 274 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    FOR             reduce using rule 274 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    IF              reduce using rule 274 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    STRING          reduce using rule 274 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    $end            reduce using rule 274 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    LLAVE_D         reduce using rule 274 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    INT             reduce using rule 274 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    LONG            reduce using rule 274 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    FLOAT           reduce using rule 274 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    DOUBLE          reduce using rule 274 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    RETURN          reduce using rule 274 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    CASE            reduce using rule 274 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)


state 208

    (62) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL VARIABLE
    (304) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL longvalues

    IGUAL           shift and go to state 334


state 209

    (298) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS . IGUAL intvalues

    IGUAL           shift and go to state 335


state 210

    (64) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL VARIABLE
    (311) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL floatvalues

    IGUAL           shift and go to state 336


state 211

    (66) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL VARIABLE
    (318) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL doublevalues

    IGUAL           shift and go to state 337


state 212

    (70) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL STRING
    (72) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 338


state 213

    (76) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL CHAR
    (78) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 339


state 214

    (82) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL booleanos
    (84) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 340


state 215

    (160) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 341


state 216

    (164) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS . CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS . CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    CORCHETE_I      shift and go to state 342


state 217

    (171) while -> WHILE PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 343


state 218

    (224) condicional -> valorC logicos . condicional
    (224) condicional -> . valorC logicos condicional
    (225) condicional -> . valorC
    (226) valorC -> . VARIABLE
    (227) valorC -> . booleanos
    (228) valorC -> . relacional
    (229) valorC -> . NOT VARIABLE
    (230) valorC -> . NOT booleanos
    (231) valorC -> . NOT relacional
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (235) relacional -> . numeros comparacion numeros
    (236) relacional -> . aritmetica comparacion aritmetica
    (237) relacional -> . aritmetica comparacion numeros
    (238) relacional -> . numeros comparacion aritmetica
    (239) relacional -> . booleanos comparacion booleanos
    (240) relacional -> . STRING comparacion STRING
    (241) relacional -> . CHAR comparacion CHAR
    (242) relacional -> . VARIABLE comparacion numeros
    (243) relacional -> . numeros comparacion VARIABLE
    (244) relacional -> . VARIABLE comparacion booleanos
    (245) relacional -> . booleanos comparacion VARIABLE
    (246) relacional -> . VARIABLE comparacion STRING
    (247) relacional -> . STRING comparacion VARIABLE
    (248) relacional -> . VARIABLE comparacion CHAR
    (249) relacional -> . CHAR comparacion VARIABLE
    (250) relacional -> . VARIABLE comparacion VARIABLE
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 100
    NOT             shift and go to state 103
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    STRING          shift and go to state 106
    CHAR            shift and go to state 107
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    valorC                         shift and go to state 99
    condicional                    shift and go to state 344
    booleanos                      shift and go to state 101
    relacional                     shift and go to state 102
    startsWith                     shift and go to state 79
    numeros                        shift and go to state 104
    aritmetica                     shift and go to state 105

state 219

    (232) logicos -> AND .

    VARIABLE        reduce using rule 232 (logicos -> AND .)
    NOT             reduce using rule 232 (logicos -> AND .)
    TRUE            reduce using rule 232 (logicos -> AND .)
    FLASE           reduce using rule 232 (logicos -> AND .)
    STRING          reduce using rule 232 (logicos -> AND .)
    CHAR            reduce using rule 232 (logicos -> AND .)
    INT             reduce using rule 232 (logicos -> AND .)
    LONG            reduce using rule 232 (logicos -> AND .)
    FLOAT           reduce using rule 232 (logicos -> AND .)
    DOUBLE          reduce using rule 232 (logicos -> AND .)


state 220

    (233) logicos -> OR .

    VARIABLE        reduce using rule 233 (logicos -> OR .)
    NOT             reduce using rule 233 (logicos -> OR .)
    TRUE            reduce using rule 233 (logicos -> OR .)
    FLASE           reduce using rule 233 (logicos -> OR .)
    STRING          reduce using rule 233 (logicos -> OR .)
    CHAR            reduce using rule 233 (logicos -> OR .)
    INT             reduce using rule 233 (logicos -> OR .)
    LONG            reduce using rule 233 (logicos -> OR .)
    FLOAT           reduce using rule 233 (logicos -> OR .)
    DOUBLE          reduce using rule 233 (logicos -> OR .)


state 221

    (234) logicos -> NOT .

    VARIABLE        reduce using rule 234 (logicos -> NOT .)
    NOT             reduce using rule 234 (logicos -> NOT .)
    TRUE            reduce using rule 234 (logicos -> NOT .)
    FLASE           reduce using rule 234 (logicos -> NOT .)
    STRING          reduce using rule 234 (logicos -> NOT .)
    CHAR            reduce using rule 234 (logicos -> NOT .)
    INT             reduce using rule 234 (logicos -> NOT .)
    LONG            reduce using rule 234 (logicos -> NOT .)
    FLOAT           reduce using rule 234 (logicos -> NOT .)
    DOUBLE          reduce using rule 234 (logicos -> NOT .)


state 222

    (242) relacional -> VARIABLE comparacion . numeros
    (244) relacional -> VARIABLE comparacion . booleanos
    (246) relacional -> VARIABLE comparacion . STRING
    (248) relacional -> VARIABLE comparacion . CHAR
    (250) relacional -> VARIABLE comparacion . VARIABLE
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    STRING          shift and go to state 348
    CHAR            shift and go to state 349
    VARIABLE        shift and go to state 345
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    numeros                        shift and go to state 346
    booleanos                      shift and go to state 347
    startsWith                     shift and go to state 79

state 223

    (256) aritmetica -> VARIABLE aritmeticos . numeros
    (258) aritmetica -> VARIABLE aritmeticos . VARIABLE
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE

    VARIABLE        shift and go to state 350
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    numeros                        shift and go to state 351

state 224

    (251) comparacion -> IGUAL_COMPARACION .

    STRING          reduce using rule 251 (comparacion -> IGUAL_COMPARACION .)
    CHAR            reduce using rule 251 (comparacion -> IGUAL_COMPARACION .)
    VARIABLE        reduce using rule 251 (comparacion -> IGUAL_COMPARACION .)
    INT             reduce using rule 251 (comparacion -> IGUAL_COMPARACION .)
    LONG            reduce using rule 251 (comparacion -> IGUAL_COMPARACION .)
    FLOAT           reduce using rule 251 (comparacion -> IGUAL_COMPARACION .)
    DOUBLE          reduce using rule 251 (comparacion -> IGUAL_COMPARACION .)
    TRUE            reduce using rule 251 (comparacion -> IGUAL_COMPARACION .)
    FLASE           reduce using rule 251 (comparacion -> IGUAL_COMPARACION .)


state 225

    (252) comparacion -> DIFERENTE .

    STRING          reduce using rule 252 (comparacion -> DIFERENTE .)
    CHAR            reduce using rule 252 (comparacion -> DIFERENTE .)
    VARIABLE        reduce using rule 252 (comparacion -> DIFERENTE .)
    INT             reduce using rule 252 (comparacion -> DIFERENTE .)
    LONG            reduce using rule 252 (comparacion -> DIFERENTE .)
    FLOAT           reduce using rule 252 (comparacion -> DIFERENTE .)
    DOUBLE          reduce using rule 252 (comparacion -> DIFERENTE .)
    TRUE            reduce using rule 252 (comparacion -> DIFERENTE .)
    FLASE           reduce using rule 252 (comparacion -> DIFERENTE .)


state 226

    (253) comparacion -> MAYOR .

    STRING          reduce using rule 253 (comparacion -> MAYOR .)
    CHAR            reduce using rule 253 (comparacion -> MAYOR .)
    VARIABLE        reduce using rule 253 (comparacion -> MAYOR .)
    INT             reduce using rule 253 (comparacion -> MAYOR .)
    LONG            reduce using rule 253 (comparacion -> MAYOR .)
    FLOAT           reduce using rule 253 (comparacion -> MAYOR .)
    DOUBLE          reduce using rule 253 (comparacion -> MAYOR .)
    TRUE            reduce using rule 253 (comparacion -> MAYOR .)
    FLASE           reduce using rule 253 (comparacion -> MAYOR .)


state 227

    (254) comparacion -> MENOR .

    STRING          reduce using rule 254 (comparacion -> MENOR .)
    CHAR            reduce using rule 254 (comparacion -> MENOR .)
    VARIABLE        reduce using rule 254 (comparacion -> MENOR .)
    INT             reduce using rule 254 (comparacion -> MENOR .)
    LONG            reduce using rule 254 (comparacion -> MENOR .)
    FLOAT           reduce using rule 254 (comparacion -> MENOR .)
    DOUBLE          reduce using rule 254 (comparacion -> MENOR .)
    TRUE            reduce using rule 254 (comparacion -> MENOR .)
    FLASE           reduce using rule 254 (comparacion -> MENOR .)


state 228

    (261) aritmeticos -> MENOS .

    VARIABLE        reduce using rule 261 (aritmeticos -> MENOS .)
    INT             reduce using rule 261 (aritmeticos -> MENOS .)
    LONG            reduce using rule 261 (aritmeticos -> MENOS .)
    FLOAT           reduce using rule 261 (aritmeticos -> MENOS .)
    DOUBLE          reduce using rule 261 (aritmeticos -> MENOS .)


state 229

    (262) aritmeticos -> MAS .

    VARIABLE        reduce using rule 262 (aritmeticos -> MAS .)
    INT             reduce using rule 262 (aritmeticos -> MAS .)
    LONG            reduce using rule 262 (aritmeticos -> MAS .)
    FLOAT           reduce using rule 262 (aritmeticos -> MAS .)
    DOUBLE          reduce using rule 262 (aritmeticos -> MAS .)


state 230

    (263) aritmeticos -> MULTIPLICACION .

    VARIABLE        reduce using rule 263 (aritmeticos -> MULTIPLICACION .)
    INT             reduce using rule 263 (aritmeticos -> MULTIPLICACION .)
    LONG            reduce using rule 263 (aritmeticos -> MULTIPLICACION .)
    FLOAT           reduce using rule 263 (aritmeticos -> MULTIPLICACION .)
    DOUBLE          reduce using rule 263 (aritmeticos -> MULTIPLICACION .)


state 231

    (264) aritmeticos -> DIVISION .

    VARIABLE        reduce using rule 264 (aritmeticos -> DIVISION .)
    INT             reduce using rule 264 (aritmeticos -> DIVISION .)
    LONG            reduce using rule 264 (aritmeticos -> DIVISION .)
    FLOAT           reduce using rule 264 (aritmeticos -> DIVISION .)
    DOUBLE          reduce using rule 264 (aritmeticos -> DIVISION .)


state 232

    (265) aritmeticos -> MOD .

    VARIABLE        reduce using rule 265 (aritmeticos -> MOD .)
    INT             reduce using rule 265 (aritmeticos -> MOD .)
    LONG            reduce using rule 265 (aritmeticos -> MOD .)
    FLOAT           reduce using rule 265 (aritmeticos -> MOD .)
    DOUBLE          reduce using rule 265 (aritmeticos -> MOD .)


state 233

    (239) relacional -> booleanos comparacion . booleanos
    (245) relacional -> booleanos comparacion . VARIABLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    VARIABLE        shift and go to state 353
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    STRING          shift and go to state 34

    booleanos                      shift and go to state 352
    startsWith                     shift and go to state 79

state 234

    (229) valorC -> NOT VARIABLE .
    (242) relacional -> VARIABLE . comparacion numeros
    (244) relacional -> VARIABLE . comparacion booleanos
    (246) relacional -> VARIABLE . comparacion STRING
    (248) relacional -> VARIABLE . comparacion CHAR
    (250) relacional -> VARIABLE . comparacion VARIABLE
    (256) aritmetica -> VARIABLE . aritmeticos numeros
    (258) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (251) comparacion -> . IGUAL_COMPARACION
    (252) comparacion -> . DIFERENTE
    (253) comparacion -> . MAYOR
    (254) comparacion -> . MENOR
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD

    AND             reduce using rule 229 (valorC -> NOT VARIABLE .)
    OR              reduce using rule 229 (valorC -> NOT VARIABLE .)
    NOT             reduce using rule 229 (valorC -> NOT VARIABLE .)
    PAR_D           reduce using rule 229 (valorC -> NOT VARIABLE .)
    IGUAL_COMPARACION shift and go to state 224
    DIFERENTE       shift and go to state 225
    MAYOR           shift and go to state 226
    MENOR           shift and go to state 227
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232

    comparacion                    shift and go to state 222
    aritmeticos                    shift and go to state 223

state 235

    (230) valorC -> NOT booleanos .
    (239) relacional -> booleanos . comparacion booleanos
    (245) relacional -> booleanos . comparacion VARIABLE
    (251) comparacion -> . IGUAL_COMPARACION
    (252) comparacion -> . DIFERENTE
    (253) comparacion -> . MAYOR
    (254) comparacion -> . MENOR

    AND             reduce using rule 230 (valorC -> NOT booleanos .)
    OR              reduce using rule 230 (valorC -> NOT booleanos .)
    NOT             reduce using rule 230 (valorC -> NOT booleanos .)
    PAR_D           reduce using rule 230 (valorC -> NOT booleanos .)
    IGUAL_COMPARACION shift and go to state 224
    DIFERENTE       shift and go to state 225
    MAYOR           shift and go to state 226
    MENOR           shift and go to state 227

    comparacion                    shift and go to state 233

state 236

    (231) valorC -> NOT relacional .

    AND             reduce using rule 231 (valorC -> NOT relacional .)
    OR              reduce using rule 231 (valorC -> NOT relacional .)
    NOT             reduce using rule 231 (valorC -> NOT relacional .)
    PAR_D           reduce using rule 231 (valorC -> NOT relacional .)


state 237

    (235) relacional -> numeros comparacion . numeros
    (238) relacional -> numeros comparacion . aritmetica
    (243) relacional -> numeros comparacion . VARIABLE
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 356
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    numeros                        shift and go to state 354
    aritmetica                     shift and go to state 355

state 238

    (255) aritmetica -> numeros aritmeticos . numeros
    (257) aritmetica -> numeros aritmeticos . VARIABLE
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE

    VARIABLE        shift and go to state 358
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    numeros                        shift and go to state 357

state 239

    (236) relacional -> aritmetica comparacion . aritmetica
    (237) relacional -> aritmetica comparacion . numeros
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE

    VARIABLE        shift and go to state 361
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    aritmetica                     shift and go to state 359
    numeros                        shift and go to state 360

state 240

    (259) aritmetica -> aritmetica aritmeticos . numeros
    (260) aritmetica -> aritmetica aritmeticos . VARIABLE
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE

    VARIABLE        shift and go to state 363
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    numeros                        shift and go to state 362

state 241

    (240) relacional -> STRING comparacion . STRING
    (247) relacional -> STRING comparacion . VARIABLE

    STRING          shift and go to state 364
    VARIABLE        shift and go to state 365


state 242

    (241) relacional -> CHAR comparacion . CHAR
    (249) relacional -> CHAR comparacion . VARIABLE

    CHAR            shift and go to state 366
    VARIABLE        shift and go to state 367


state 243

    (172) for -> FOR PAR_I VAR VARIABLE . ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> FOR PAR_I VAR VARIABLE . ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> FOR PAR_I VAR VARIABLE . ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    ITERATOR        shift and go to state 368


state 244

    (173) for -> FOR PAR_I VARIABLE ITERATOR . VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> FOR PAR_I VARIABLE ITERATOR . INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> FOR PAR_I VARIABLE ITERATOR . INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 369
    INT             shift and go to state 370


state 245

    (217) if -> IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 371


state 246

    (272) startsWith -> STRING PUNTO STARTSWITH PAR_I . STRING PAR_D

    STRING          shift and go to state 372


state 247

    (1) inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D .

    $end            reduce using rule 1 (inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D .)


state 248

    (145) varparen -> varparen PAR_I valores PAR_D .

    PAR_I           reduce using rule 145 (varparen -> varparen PAR_I valores PAR_D .)
    $end            reduce using rule 145 (varparen -> varparen PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 145 (varparen -> varparen PAR_I valores PAR_D .)
    VAR             reduce using rule 145 (varparen -> varparen PAR_I valores PAR_D .)
    VAL             reduce using rule 145 (varparen -> varparen PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 145 (varparen -> varparen PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 145 (varparen -> varparen PAR_I valores PAR_D .)
    PRINT           reduce using rule 145 (varparen -> varparen PAR_I valores PAR_D .)
    READLINE        reduce using rule 145 (varparen -> varparen PAR_I valores PAR_D .)
    WHILE           reduce using rule 145 (varparen -> varparen PAR_I valores PAR_D .)
    FOR             reduce using rule 145 (varparen -> varparen PAR_I valores PAR_D .)
    IF              reduce using rule 145 (varparen -> varparen PAR_I valores PAR_D .)
    INT             reduce using rule 145 (varparen -> varparen PAR_I valores PAR_D .)
    LONG            reduce using rule 145 (varparen -> varparen PAR_I valores PAR_D .)
    FLOAT           reduce using rule 145 (varparen -> varparen PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 145 (varparen -> varparen PAR_I valores PAR_D .)
    RETURN          reduce using rule 145 (varparen -> varparen PAR_I valores PAR_D .)
    PUNTO           reduce using rule 145 (varparen -> varparen PAR_I valores PAR_D .)
    DEF             reduce using rule 145 (varparen -> varparen PAR_I valores PAR_D .)
    STRING          reduce using rule 145 (varparen -> varparen PAR_I valores PAR_D .)
    CASE            reduce using rule 145 (varparen -> varparen PAR_I valores PAR_D .)


state 249

    (178) match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .

    DEF             reduce using rule 178 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VARIABLE        reduce using rule 178 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    PRINTLN         reduce using rule 178 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    PRINT           reduce using rule 178 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    READLINE        reduce using rule 178 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VAR             reduce using rule 178 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VAL             reduce using rule 178 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    WHILE           reduce using rule 178 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    FOR             reduce using rule 178 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    IF              reduce using rule 178 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    STRING          reduce using rule 178 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    $end            reduce using rule 178 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    LLAVE_D         reduce using rule 178 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    INT             reduce using rule 178 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    LONG            reduce using rule 178 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    FLOAT           reduce using rule 178 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    DOUBLE          reduce using rule 178 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    RETURN          reduce using rule 178 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)


state 250

    (188) casesInt -> caseInt casesInt .

    LLAVE_D         reduce using rule 188 (casesInt -> caseInt casesInt .)


state 251

    (189) casesInt -> caseInt defcase .

    LLAVE_D         reduce using rule 189 (casesInt -> caseInt defcase .)


state 252

    (214) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (186) caseInt -> CASE . INT FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 373
    INT             shift and go to state 271


state 253

    (192) casesLgn -> caseLgn casesLgn .

    LLAVE_D         reduce using rule 192 (casesLgn -> caseLgn casesLgn .)


state 254

    (193) casesLgn -> caseLgn defcase .

    LLAVE_D         reduce using rule 193 (casesLgn -> caseLgn defcase .)


state 255

    (214) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (190) caseLgn -> CASE . LONG FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 373
    LONG            shift and go to state 272


state 256

    (196) casesFlt -> caseFlt casesFlt .

    LLAVE_D         reduce using rule 196 (casesFlt -> caseFlt casesFlt .)


state 257

    (197) casesFlt -> caseFlt defcase .

    LLAVE_D         reduce using rule 197 (casesFlt -> caseFlt defcase .)


state 258

    (214) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (194) caseFlt -> CASE . FLOAT FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 373
    FLOAT           shift and go to state 273


state 259

    (200) casesDob -> caseDob casesDob .

    LLAVE_D         reduce using rule 200 (casesDob -> caseDob casesDob .)


state 260

    (201) casesDob -> caseDob defcase .

    LLAVE_D         reduce using rule 201 (casesDob -> caseDob defcase .)


state 261

    (214) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (198) caseDob -> CASE . DOUBLE FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 373
    DOUBLE          shift and go to state 274


state 262

    (204) casesStr -> caseStr casesStr .

    LLAVE_D         reduce using rule 204 (casesStr -> caseStr casesStr .)


state 263

    (205) casesStr -> caseStr defcase .

    LLAVE_D         reduce using rule 205 (casesStr -> caseStr defcase .)


state 264

    (214) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (202) caseStr -> CASE . STRING FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 373
    STRING          shift and go to state 374


state 265

    (208) casesChar -> caseChar casesChar .

    LLAVE_D         reduce using rule 208 (casesChar -> caseChar casesChar .)


state 266

    (209) casesChar -> caseChar defcase .

    LLAVE_D         reduce using rule 209 (casesChar -> caseChar defcase .)


state 267

    (214) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (206) caseChar -> CASE . CHAR FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 373
    CHAR            shift and go to state 276


state 268

    (212) casesBool -> caseBool casesBool .

    LLAVE_D         reduce using rule 212 (casesBool -> caseBool casesBool .)


state 269

    (213) casesBool -> caseBool defcase .

    LLAVE_D         reduce using rule 213 (casesBool -> caseBool defcase .)


state 270

    (214) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (210) caseBool -> CASE . booleanos FUNCION_FLECHA codeBlock
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    SUBGUION        shift and go to state 373
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    STRING          shift and go to state 34

    booleanos                      shift and go to state 277
    startsWith                     shift and go to state 79

state 271

    (186) caseInt -> CASE INT . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 375


state 272

    (190) caseLgn -> CASE LONG . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 376


state 273

    (194) caseFlt -> CASE FLOAT . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 377


state 274

    (198) caseDob -> CASE DOUBLE . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 378


state 275

    (202) caseStr -> CASE STRING . FUNCION_FLECHA codeBlock
    (272) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D

    FUNCION_FLECHA  shift and go to state 379
    PUNTO           shift and go to state 61


state 276

    (206) caseChar -> CASE CHAR . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 380


state 277

    (210) caseBool -> CASE booleanos . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 381


state 278

    (167) valores -> valor COMA valores .

    PAR_D           reduce using rule 167 (valores -> valor COMA valores .)


state 279

    (103) valor -> VARIABLE PAR_I VARIABLE . PAR_D

    PAR_D           shift and go to state 382


state 280

    (104) valor -> VARIABLE PAR_I INT . PAR_D

    PAR_D           shift and go to state 383


state 281

    (4) io -> VARIABLE PUNTO VARIABLE PUNTO . VARIABLE PUNTO READLINE

    VARIABLE        shift and go to state 384


state 282

    (220) elseif -> ELSE IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D
    (221) elseif -> ELSE IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D elseif

    PAR_D           shift and go to state 385


state 283

    (222) else -> ELSE LLAVE_I contenido LLAVE_D .

    ELSE            reduce using rule 222 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 222 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 222 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 222 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 222 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 222 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 222 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 222 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 222 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 222 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 222 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 222 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 222 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 222 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 222 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 222 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 222 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 222 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 222 (else -> ELSE LLAVE_I contenido LLAVE_D .)


state 284

    (31) contenido -> asignacion contenido .

    LLAVE_D         reduce using rule 31 (contenido -> asignacion contenido .)
    RETURN          reduce using rule 31 (contenido -> asignacion contenido .)


state 285

    (32) contenido -> reasignacion contenido .

    LLAVE_D         reduce using rule 32 (contenido -> reasignacion contenido .)
    RETURN          reduce using rule 32 (contenido -> reasignacion contenido .)


state 286

    (33) contenido -> funcall contenido .

    LLAVE_D         reduce using rule 33 (contenido -> funcall contenido .)
    RETURN          reduce using rule 33 (contenido -> funcall contenido .)


state 287

    (34) contenido -> impresion contenido .

    LLAVE_D         reduce using rule 34 (contenido -> impresion contenido .)
    RETURN          reduce using rule 34 (contenido -> impresion contenido .)


state 288

    (35) contenido -> entrada contenido .

    LLAVE_D         reduce using rule 35 (contenido -> entrada contenido .)
    RETURN          reduce using rule 35 (contenido -> entrada contenido .)


state 289

    (36) contenido -> while contenido .

    LLAVE_D         reduce using rule 36 (contenido -> while contenido .)
    RETURN          reduce using rule 36 (contenido -> while contenido .)


state 290

    (37) contenido -> for contenido .

    LLAVE_D         reduce using rule 37 (contenido -> for contenido .)
    RETURN          reduce using rule 37 (contenido -> for contenido .)


state 291

    (39) contenido -> match contenido .

    LLAVE_D         reduce using rule 39 (contenido -> match contenido .)
    RETURN          reduce using rule 39 (contenido -> match contenido .)


state 292

    (38) contenido -> if contenido .

    LLAVE_D         reduce using rule 38 (contenido -> if contenido .)
    RETURN          reduce using rule 38 (contenido -> if contenido .)


state 293

    (40) contenido -> aritmetica contenido .

    LLAVE_D         reduce using rule 40 (contenido -> aritmetica contenido .)
    RETURN          reduce using rule 40 (contenido -> aritmetica contenido .)


state 294

    (85) reasignacion -> VARIABLE IGUAL . valor
    (86) reasignacion -> VARIABLE IGUAL . returnfun
    (87) reasignacion -> VARIABLE IGUAL . aritmetica
    (98) valor -> . STRING
    (99) valor -> . CHAR
    (100) valor -> . VARIABLE
    (101) valor -> . numeros
    (102) valor -> . booleanos
    (103) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (104) valor -> . VARIABLE PAR_I INT PAR_D
    (147) returnfun -> . returnCastable
    (148) returnfun -> . castingcall
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (149) returnCastable -> . entrada
    (150) returnCastable -> . funcall
    (151) castingcall -> . returnCastable PUNTO castingfun
    (152) castingcall -> . VARIABLE PUNTO castingfun
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (142) funcall -> . VARIABLE varparen

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 386
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    READLINE        shift and go to state 19

    valor                          shift and go to state 387
    returnfun                      shift and go to state 388
    aritmetica                     shift and go to state 389
    numeros                        shift and go to state 390
    booleanos                      shift and go to state 72
    returnCastable                 shift and go to state 173
    castingcall                    shift and go to state 174
    startsWith                     shift and go to state 79
    entrada                        shift and go to state 182
    funcall                        shift and go to state 183

state 295

    (88) reasignacion -> VARIABLE PAR_I . INT PAR_D IGUAL valor
    (143) varparen -> PAR_I . valores PAR_D
    (144) varparen -> PAR_I . PAR_D
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (98) valor -> . STRING
    (99) valor -> . CHAR
    (100) valor -> . VARIABLE
    (101) valor -> . numeros
    (102) valor -> . booleanos
    (103) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (104) valor -> . VARIABLE PAR_I INT PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    INT             shift and go to state 391
    PAR_D           shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valor                          shift and go to state 67
    valores                        shift and go to state 65
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72
    startsWith                     shift and go to state 79

state 296

    (112) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I . contenido LLAVE_D
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 392
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 297

    (113) funcion -> DEF VARIABLE parametro LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 393


state 298

    (120) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN valor LLAVE_D
    (121) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (122) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN returnfun LLAVE_D
    (123) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN aritmetica LLAVE_D
    (124) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I RETURN valor LLAVE_D
    (125) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I RETURN VARIABLE LLAVE_D
    (126) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I RETURN returnfun LLAVE_D
    (127) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I RETURN aritmetica LLAVE_D

    LLAVE_I         shift and go to state 394


state 299

    (128) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN returnfun LLAVE_D

    LLAVE_I         shift and go to state 395


state 300

    (131) dectipo -> DOBLE_PUNTO tipo .

    IGUAL           reduce using rule 131 (dectipo -> DOBLE_PUNTO tipo .)


state 301

    (132) dectipoTupla -> DOBLE_PUNTO PAR_I . tipos PAR_D
    (133) tipos -> . tipo
    (134) tipos -> . tipo tiposentry
    (89) tipo -> . CHARCLASS
    (90) tipo -> . STRINGCLASS
    (91) tipo -> . BOOLCLASS
    (92) tipo -> . INTCLASS
    (93) tipo -> . LONGCLASS
    (94) tipo -> . DOUBLECLASS
    (95) tipo -> . FLOATCLASS
    (96) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (97) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 302
    STRINGCLASS     shift and go to state 303
    BOOLCLASS       shift and go to state 304
    INTCLASS        shift and go to state 305
    LONGCLASS       shift and go to state 306
    DOUBLECLASS     shift and go to state 307
    FLOATCLASS      shift and go to state 308
    ARRAYCLASS      shift and go to state 309
    LISTCLASS       shift and go to state 310

    tipos                          shift and go to state 396
    tipo                           shift and go to state 397

state 302

    (89) tipo -> CHARCLASS .

    IGUAL           reduce using rule 89 (tipo -> CHARCLASS .)
    COMA            reduce using rule 89 (tipo -> CHARCLASS .)
    PAR_D           reduce using rule 89 (tipo -> CHARCLASS .)
    CORCHETE_D      reduce using rule 89 (tipo -> CHARCLASS .)


state 303

    (90) tipo -> STRINGCLASS .

    IGUAL           reduce using rule 90 (tipo -> STRINGCLASS .)
    COMA            reduce using rule 90 (tipo -> STRINGCLASS .)
    PAR_D           reduce using rule 90 (tipo -> STRINGCLASS .)
    CORCHETE_D      reduce using rule 90 (tipo -> STRINGCLASS .)


state 304

    (91) tipo -> BOOLCLASS .

    IGUAL           reduce using rule 91 (tipo -> BOOLCLASS .)
    COMA            reduce using rule 91 (tipo -> BOOLCLASS .)
    PAR_D           reduce using rule 91 (tipo -> BOOLCLASS .)
    CORCHETE_D      reduce using rule 91 (tipo -> BOOLCLASS .)


state 305

    (92) tipo -> INTCLASS .

    IGUAL           reduce using rule 92 (tipo -> INTCLASS .)
    COMA            reduce using rule 92 (tipo -> INTCLASS .)
    PAR_D           reduce using rule 92 (tipo -> INTCLASS .)
    CORCHETE_D      reduce using rule 92 (tipo -> INTCLASS .)


state 306

    (93) tipo -> LONGCLASS .

    IGUAL           reduce using rule 93 (tipo -> LONGCLASS .)
    COMA            reduce using rule 93 (tipo -> LONGCLASS .)
    PAR_D           reduce using rule 93 (tipo -> LONGCLASS .)
    CORCHETE_D      reduce using rule 93 (tipo -> LONGCLASS .)


state 307

    (94) tipo -> DOUBLECLASS .

    IGUAL           reduce using rule 94 (tipo -> DOUBLECLASS .)
    COMA            reduce using rule 94 (tipo -> DOUBLECLASS .)
    PAR_D           reduce using rule 94 (tipo -> DOUBLECLASS .)
    CORCHETE_D      reduce using rule 94 (tipo -> DOUBLECLASS .)


state 308

    (95) tipo -> FLOATCLASS .

    IGUAL           reduce using rule 95 (tipo -> FLOATCLASS .)
    COMA            reduce using rule 95 (tipo -> FLOATCLASS .)
    PAR_D           reduce using rule 95 (tipo -> FLOATCLASS .)
    CORCHETE_D      reduce using rule 95 (tipo -> FLOATCLASS .)


state 309

    (96) tipo -> ARRAYCLASS . CORCHETE_I tipo CORCHETE_D

    CORCHETE_I      shift and go to state 398


state 310

    (97) tipo -> LISTCLASS . CORCHETE_I tipo CORCHETE_D

    CORCHETE_I      shift and go to state 399


state 311

    (118) parametros -> PAR_I declaracion PAR_D .
    (119) parametros -> PAR_I declaracion PAR_D . parametros
    (118) parametros -> . PAR_I declaracion PAR_D
    (119) parametros -> . PAR_I declaracion PAR_D parametros

    IGUAL           reduce using rule 118 (parametros -> PAR_I declaracion PAR_D .)
    LLAVE_I         reduce using rule 118 (parametros -> PAR_I declaracion PAR_D .)
    DOBLE_PUNTO     reduce using rule 118 (parametros -> PAR_I declaracion PAR_D .)
    PAR_I           shift and go to state 400

    parametros                     shift and go to state 401

state 312

    (114) declaracion -> VARIABLE DOBLE_PUNTO . tipo
    (115) declaracion -> VARIABLE DOBLE_PUNTO . tipo IGUAL valor
    (89) tipo -> . CHARCLASS
    (90) tipo -> . STRINGCLASS
    (91) tipo -> . BOOLCLASS
    (92) tipo -> . INTCLASS
    (93) tipo -> . LONGCLASS
    (94) tipo -> . DOUBLECLASS
    (95) tipo -> . FLOATCLASS
    (96) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (97) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 302
    STRINGCLASS     shift and go to state 303
    BOOLCLASS       shift and go to state 304
    INTCLASS        shift and go to state 305
    LONGCLASS       shift and go to state 306
    DOUBLECLASS     shift and go to state 307
    FLOATCLASS      shift and go to state 308
    ARRAYCLASS      shift and go to state 309
    LISTCLASS       shift and go to state 310

    tipo                           shift and go to state 402

state 313

    (139) valorI -> valor MAS valorI .

    PAR_D           reduce using rule 139 (valorI -> valor MAS valorI .)


state 314

    (152) castingcall -> VARIABLE PUNTO . castingfun
    (153) castingfun -> . TO_INT
    (154) castingfun -> . TO_DOUBLE
    (155) castingfun -> . TO_FLOAT
    (156) castingfun -> . TO_LONG

    TO_INT          shift and go to state 404
    TO_DOUBLE       shift and go to state 405
    TO_FLOAT        shift and go to state 406
    TO_LONG         shift and go to state 407

    castingfun                     shift and go to state 403

state 315

    (323) stringCastLong -> STRING PUNTO . TO_LONG
    (322) stringCastInt -> STRING PUNTO . TO_INT
    (324) stringCastFloat -> STRING PUNTO . TO_FLOAT
    (325) stringCastDouble -> STRING PUNTO . TO_DOUBLE
    (272) startsWith -> STRING PUNTO . STARTSWITH PAR_I STRING PAR_D

    TO_LONG         shift and go to state 408
    TO_INT          shift and go to state 409
    TO_FLOAT        shift and go to state 410
    TO_DOUBLE       shift and go to state 411
    STARTSWITH      shift and go to state 111


state 316

    (157) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (98) valor -> . STRING
    (99) valor -> . CHAR
    (100) valor -> . VARIABLE
    (101) valor -> . numeros
    (102) valor -> . booleanos
    (103) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (104) valor -> . VARIABLE PAR_I INT PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valores                        shift and go to state 412
    valor                          shift and go to state 67
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72
    startsWith                     shift and go to state 79

state 317

    (168) tuple -> PAR_I valores . PAR_D

    PAR_D           shift and go to state 413


state 318

    (151) castingcall -> returnCastable PUNTO . castingfun
    (153) castingfun -> . TO_INT
    (154) castingfun -> . TO_DOUBLE
    (155) castingfun -> . TO_FLOAT
    (156) castingfun -> . TO_LONG

    TO_INT          shift and go to state 404
    TO_DOUBLE       shift and go to state 405
    TO_FLOAT        shift and go to state 406
    TO_LONG         shift and go to state 407

    castingfun                     shift and go to state 414

state 319

    (61) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . VARIABLE
    (302) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . longvalues
    (305) longvalues -> . INT
    (306) longvalues -> . intvalues
    (307) longvalues -> . stringCastLong
    (299) intvalues -> . INT
    (300) intvalues -> . stringCastInt
    (323) stringCastLong -> . STRING PUNTO TO_LONG
    (322) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 415
    INT             shift and go to state 417
    STRING          shift and go to state 419

    longvalues                     shift and go to state 416
    intvalues                      shift and go to state 418
    stringCastLong                 shift and go to state 176
    stringCastInt                  shift and go to state 177

state 320

    (296) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL . intvalues
    (299) intvalues -> . INT
    (300) intvalues -> . stringCastInt
    (322) stringCastInt -> . STRING PUNTO TO_INT

    INT             shift and go to state 421
    STRING          shift and go to state 422

    intvalues                      shift and go to state 420
    stringCastInt                  shift and go to state 177

state 321

    (63) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . VARIABLE
    (309) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . floatvalues
    (312) floatvalues -> . FLOAT
    (313) floatvalues -> . longvalues
    (314) floatvalues -> . stringCastFloat
    (305) longvalues -> . INT
    (306) longvalues -> . intvalues
    (307) longvalues -> . stringCastLong
    (324) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (299) intvalues -> . INT
    (300) intvalues -> . stringCastInt
    (323) stringCastLong -> . STRING PUNTO TO_LONG
    (322) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 423
    FLOAT           shift and go to state 425
    INT             shift and go to state 417
    STRING          shift and go to state 427

    floatvalues                    shift and go to state 424
    longvalues                     shift and go to state 426
    stringCastFloat                shift and go to state 179
    intvalues                      shift and go to state 418
    stringCastLong                 shift and go to state 176
    stringCastInt                  shift and go to state 177

state 322

    (65) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . VARIABLE
    (316) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . doublevalues
    (319) doublevalues -> . DOUBLE
    (320) doublevalues -> . floatvalues
    (321) doublevalues -> . stringCastDouble
    (312) floatvalues -> . FLOAT
    (313) floatvalues -> . longvalues
    (314) floatvalues -> . stringCastFloat
    (325) stringCastDouble -> . STRING PUNTO TO_DOUBLE
    (305) longvalues -> . INT
    (306) longvalues -> . intvalues
    (307) longvalues -> . stringCastLong
    (324) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (299) intvalues -> . INT
    (300) intvalues -> . stringCastInt
    (323) stringCastLong -> . STRING PUNTO TO_LONG
    (322) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 428
    DOUBLE          shift and go to state 430
    FLOAT           shift and go to state 425
    STRING          shift and go to state 432
    INT             shift and go to state 417

    doublevalues                   shift and go to state 429
    floatvalues                    shift and go to state 431
    stringCastDouble               shift and go to state 181
    longvalues                     shift and go to state 426
    stringCastFloat                shift and go to state 179
    intvalues                      shift and go to state 418
    stringCastLong                 shift and go to state 176
    stringCastInt                  shift and go to state 177

state 323

    (68) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . STRING
    (71) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . VARIABLE

    STRING          shift and go to state 434
    VARIABLE        shift and go to state 433


state 324

    (74) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . CHAR
    (77) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . VARIABLE

    CHAR            shift and go to state 436
    VARIABLE        shift and go to state 435


state 325

    (80) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . booleanos
    (83) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . VARIABLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    VARIABLE        shift and go to state 437
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    STRING          shift and go to state 34

    booleanos                      shift and go to state 438
    startsWith                     shift and go to state 79

state 326

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (266) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (89) tipo -> . CHARCLASS
    (90) tipo -> . STRINGCLASS
    (91) tipo -> . BOOLCLASS
    (92) tipo -> . INTCLASS
    (93) tipo -> . LONGCLASS
    (94) tipo -> . DOUBLECLASS
    (95) tipo -> . FLOATCLASS
    (96) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (97) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    INTCLASS        shift and go to state 440
    DOUBLECLASS     shift and go to state 441
    CHARCLASS       shift and go to state 302
    STRINGCLASS     shift and go to state 303
    BOOLCLASS       shift and go to state 304
    LONGCLASS       shift and go to state 306
    FLOATCLASS      shift and go to state 308
    ARRAYCLASS      shift and go to state 309
    LISTCLASS       shift and go to state 310

    tipo                           shift and go to state 439

state 327

    (275) dectupla -> PAR_I STRINGCLASS . COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
    (276) dectupla -> PAR_I STRINGCLASS . COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
    (277) dectupla -> PAR_I STRINGCLASS . COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
    (278) dectupla -> PAR_I STRINGCLASS . COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D

    COMA            shift and go to state 442


state 328

    (291) dectupla -> PAR_I INTCLASS . COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
    (292) dectupla -> PAR_I INTCLASS . COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
    (293) dectupla -> PAR_I INTCLASS . COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
    (294) dectupla -> PAR_I INTCLASS . COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    COMA            shift and go to state 443


state 329

    (287) dectupla -> PAR_I LONGCLASS . COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
    (288) dectupla -> PAR_I LONGCLASS . COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
    (289) dectupla -> PAR_I LONGCLASS . COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
    (290) dectupla -> PAR_I LONGCLASS . COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D

    COMA            shift and go to state 444


state 330

    (283) dectupla -> PAR_I DOUBLECLASS . COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
    (284) dectupla -> PAR_I DOUBLECLASS . COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
    (285) dectupla -> PAR_I DOUBLECLASS . COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
    (286) dectupla -> PAR_I DOUBLECLASS . COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D

    COMA            shift and go to state 445


state 331

    (279) dectupla -> PAR_I FLOATCLASS . COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
    (280) dectupla -> PAR_I FLOATCLASS . COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
    (281) dectupla -> PAR_I FLOATCLASS . COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
    (282) dectupla -> PAR_I FLOATCLASS . COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D

    COMA            shift and go to state 446


state 332

    (159) array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (98) valor -> . STRING
    (99) valor -> . CHAR
    (100) valor -> . VARIABLE
    (101) valor -> . numeros
    (102) valor -> . booleanos
    (103) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (104) valor -> . VARIABLE PAR_I INT PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valores                        shift and go to state 447
    valor                          shift and go to state 67
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72
    startsWith                     shift and go to state 79

state 333

    (163) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I . valores PAR_D
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (98) valor -> . STRING
    (99) valor -> . CHAR
    (100) valor -> . VARIABLE
    (101) valor -> . numeros
    (102) valor -> . booleanos
    (103) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (104) valor -> . VARIABLE PAR_I INT PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valores                        shift and go to state 448
    valor                          shift and go to state 67
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72
    startsWith                     shift and go to state 79

state 334

    (62) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . VARIABLE
    (304) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . longvalues
    (305) longvalues -> . INT
    (306) longvalues -> . intvalues
    (307) longvalues -> . stringCastLong
    (299) intvalues -> . INT
    (300) intvalues -> . stringCastInt
    (323) stringCastLong -> . STRING PUNTO TO_LONG
    (322) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 449
    INT             shift and go to state 417
    STRING          shift and go to state 419

    longvalues                     shift and go to state 450
    intvalues                      shift and go to state 418
    stringCastLong                 shift and go to state 176
    stringCastInt                  shift and go to state 177

state 335

    (298) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL . intvalues
    (299) intvalues -> . INT
    (300) intvalues -> . stringCastInt
    (322) stringCastInt -> . STRING PUNTO TO_INT

    INT             shift and go to state 421
    STRING          shift and go to state 422

    intvalues                      shift and go to state 451
    stringCastInt                  shift and go to state 177

state 336

    (64) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . VARIABLE
    (311) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . floatvalues
    (312) floatvalues -> . FLOAT
    (313) floatvalues -> . longvalues
    (314) floatvalues -> . stringCastFloat
    (305) longvalues -> . INT
    (306) longvalues -> . intvalues
    (307) longvalues -> . stringCastLong
    (324) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (299) intvalues -> . INT
    (300) intvalues -> . stringCastInt
    (323) stringCastLong -> . STRING PUNTO TO_LONG
    (322) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 452
    FLOAT           shift and go to state 425
    INT             shift and go to state 417
    STRING          shift and go to state 427

    floatvalues                    shift and go to state 453
    longvalues                     shift and go to state 426
    stringCastFloat                shift and go to state 179
    intvalues                      shift and go to state 418
    stringCastLong                 shift and go to state 176
    stringCastInt                  shift and go to state 177

state 337

    (66) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . VARIABLE
    (318) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . doublevalues
    (319) doublevalues -> . DOUBLE
    (320) doublevalues -> . floatvalues
    (321) doublevalues -> . stringCastDouble
    (312) floatvalues -> . FLOAT
    (313) floatvalues -> . longvalues
    (314) floatvalues -> . stringCastFloat
    (325) stringCastDouble -> . STRING PUNTO TO_DOUBLE
    (305) longvalues -> . INT
    (306) longvalues -> . intvalues
    (307) longvalues -> . stringCastLong
    (324) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (299) intvalues -> . INT
    (300) intvalues -> . stringCastInt
    (323) stringCastLong -> . STRING PUNTO TO_LONG
    (322) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 454
    DOUBLE          shift and go to state 430
    FLOAT           shift and go to state 425
    STRING          shift and go to state 432
    INT             shift and go to state 417

    doublevalues                   shift and go to state 455
    floatvalues                    shift and go to state 431
    stringCastDouble               shift and go to state 181
    longvalues                     shift and go to state 426
    stringCastFloat                shift and go to state 179
    intvalues                      shift and go to state 418
    stringCastLong                 shift and go to state 176
    stringCastInt                  shift and go to state 177

state 338

    (70) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . STRING
    (72) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . VARIABLE

    STRING          shift and go to state 457
    VARIABLE        shift and go to state 456


state 339

    (76) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . CHAR
    (78) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . VARIABLE

    CHAR            shift and go to state 459
    VARIABLE        shift and go to state 458


state 340

    (82) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . booleanos
    (84) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . VARIABLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    VARIABLE        shift and go to state 460
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    STRING          shift and go to state 34

    booleanos                      shift and go to state 461
    startsWith                     shift and go to state 79

state 341

    (160) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (89) tipo -> . CHARCLASS
    (90) tipo -> . STRINGCLASS
    (91) tipo -> . BOOLCLASS
    (92) tipo -> . INTCLASS
    (93) tipo -> . LONGCLASS
    (94) tipo -> . DOUBLECLASS
    (95) tipo -> . FLOATCLASS
    (96) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (97) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 302
    STRINGCLASS     shift and go to state 303
    BOOLCLASS       shift and go to state 304
    INTCLASS        shift and go to state 305
    LONGCLASS       shift and go to state 306
    DOUBLECLASS     shift and go to state 307
    FLOATCLASS      shift and go to state 308
    ARRAYCLASS      shift and go to state 309
    LISTCLASS       shift and go to state 310

    tipo                           shift and go to state 462

state 342

    (164) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I . tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I . tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (89) tipo -> . CHARCLASS
    (90) tipo -> . STRINGCLASS
    (91) tipo -> . BOOLCLASS
    (92) tipo -> . INTCLASS
    (93) tipo -> . LONGCLASS
    (94) tipo -> . DOUBLECLASS
    (95) tipo -> . FLOATCLASS
    (96) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (97) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 302
    STRINGCLASS     shift and go to state 303
    BOOLCLASS       shift and go to state 304
    INTCLASS        shift and go to state 305
    LONGCLASS       shift and go to state 306
    DOUBLECLASS     shift and go to state 307
    FLOATCLASS      shift and go to state 308
    ARRAYCLASS      shift and go to state 309
    LISTCLASS       shift and go to state 310

    tipo                           shift and go to state 463

state 343

    (171) while -> WHILE PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 464
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 344

    (224) condicional -> valorC logicos condicional .

    PAR_D           reduce using rule 224 (condicional -> valorC logicos condicional .)


state 345

    (250) relacional -> VARIABLE comparacion VARIABLE .

    AND             reduce using rule 250 (relacional -> VARIABLE comparacion VARIABLE .)
    OR              reduce using rule 250 (relacional -> VARIABLE comparacion VARIABLE .)
    NOT             reduce using rule 250 (relacional -> VARIABLE comparacion VARIABLE .)
    PAR_D           reduce using rule 250 (relacional -> VARIABLE comparacion VARIABLE .)


state 346

    (242) relacional -> VARIABLE comparacion numeros .

    AND             reduce using rule 242 (relacional -> VARIABLE comparacion numeros .)
    OR              reduce using rule 242 (relacional -> VARIABLE comparacion numeros .)
    NOT             reduce using rule 242 (relacional -> VARIABLE comparacion numeros .)
    PAR_D           reduce using rule 242 (relacional -> VARIABLE comparacion numeros .)


state 347

    (244) relacional -> VARIABLE comparacion booleanos .

    AND             reduce using rule 244 (relacional -> VARIABLE comparacion booleanos .)
    OR              reduce using rule 244 (relacional -> VARIABLE comparacion booleanos .)
    NOT             reduce using rule 244 (relacional -> VARIABLE comparacion booleanos .)
    PAR_D           reduce using rule 244 (relacional -> VARIABLE comparacion booleanos .)


state 348

    (246) relacional -> VARIABLE comparacion STRING .
    (272) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D

    AND             reduce using rule 246 (relacional -> VARIABLE comparacion STRING .)
    OR              reduce using rule 246 (relacional -> VARIABLE comparacion STRING .)
    NOT             reduce using rule 246 (relacional -> VARIABLE comparacion STRING .)
    PAR_D           reduce using rule 246 (relacional -> VARIABLE comparacion STRING .)
    PUNTO           shift and go to state 61


state 349

    (248) relacional -> VARIABLE comparacion CHAR .

    AND             reduce using rule 248 (relacional -> VARIABLE comparacion CHAR .)
    OR              reduce using rule 248 (relacional -> VARIABLE comparacion CHAR .)
    NOT             reduce using rule 248 (relacional -> VARIABLE comparacion CHAR .)
    PAR_D           reduce using rule 248 (relacional -> VARIABLE comparacion CHAR .)


state 350

    (258) aritmetica -> VARIABLE aritmeticos VARIABLE .

    IGUAL_COMPARACION reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MAYOR           reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MENOR           reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MENOS           reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MAS             reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DIVISION        reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MOD             reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VAR             reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VAL             reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PRINT           reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    READLINE        reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    WHILE           reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    FOR             reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    IF              reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    INT             reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    LONG            reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    FLOAT           reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DEF             reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    STRING          reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    $end            reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    RETURN          reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    CASE            reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    AND             reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    OR              reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    NOT             reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PAR_D           reduce using rule 258 (aritmetica -> VARIABLE aritmeticos VARIABLE .)


state 351

    (256) aritmetica -> VARIABLE aritmeticos numeros .

    IGUAL_COMPARACION reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    DIFERENTE       reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    MAYOR           reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    MENOR           reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    MENOS           reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    MAS             reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    DIVISION        reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    MOD             reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    VAR             reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    VAL             reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    VARIABLE        reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    PRINTLN         reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    PRINT           reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    READLINE        reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    WHILE           reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    FOR             reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    IF              reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    INT             reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    LONG            reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    FLOAT           reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    DOUBLE          reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    LLAVE_D         reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    DEF             reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    STRING          reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    $end            reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    RETURN          reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    CASE            reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    AND             reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    OR              reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    NOT             reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)
    PAR_D           reduce using rule 256 (aritmetica -> VARIABLE aritmeticos numeros .)


state 352

    (239) relacional -> booleanos comparacion booleanos .

    AND             reduce using rule 239 (relacional -> booleanos comparacion booleanos .)
    OR              reduce using rule 239 (relacional -> booleanos comparacion booleanos .)
    NOT             reduce using rule 239 (relacional -> booleanos comparacion booleanos .)
    PAR_D           reduce using rule 239 (relacional -> booleanos comparacion booleanos .)


state 353

    (245) relacional -> booleanos comparacion VARIABLE .

    AND             reduce using rule 245 (relacional -> booleanos comparacion VARIABLE .)
    OR              reduce using rule 245 (relacional -> booleanos comparacion VARIABLE .)
    NOT             reduce using rule 245 (relacional -> booleanos comparacion VARIABLE .)
    PAR_D           reduce using rule 245 (relacional -> booleanos comparacion VARIABLE .)


state 354

    (235) relacional -> numeros comparacion numeros .
    (255) aritmetica -> numeros . aritmeticos numeros
    (257) aritmetica -> numeros . aritmeticos VARIABLE
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD

    AND             reduce using rule 235 (relacional -> numeros comparacion numeros .)
    OR              reduce using rule 235 (relacional -> numeros comparacion numeros .)
    NOT             reduce using rule 235 (relacional -> numeros comparacion numeros .)
    PAR_D           reduce using rule 235 (relacional -> numeros comparacion numeros .)
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232

    aritmeticos                    shift and go to state 238

state 355

    (238) relacional -> numeros comparacion aritmetica .
    (259) aritmetica -> aritmetica . aritmeticos numeros
    (260) aritmetica -> aritmetica . aritmeticos VARIABLE
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD

    AND             reduce using rule 238 (relacional -> numeros comparacion aritmetica .)
    OR              reduce using rule 238 (relacional -> numeros comparacion aritmetica .)
    NOT             reduce using rule 238 (relacional -> numeros comparacion aritmetica .)
    PAR_D           reduce using rule 238 (relacional -> numeros comparacion aritmetica .)
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232

    aritmeticos                    shift and go to state 240

state 356

    (243) relacional -> numeros comparacion VARIABLE .
    (256) aritmetica -> VARIABLE . aritmeticos numeros
    (258) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD

    AND             reduce using rule 243 (relacional -> numeros comparacion VARIABLE .)
    OR              reduce using rule 243 (relacional -> numeros comparacion VARIABLE .)
    NOT             reduce using rule 243 (relacional -> numeros comparacion VARIABLE .)
    PAR_D           reduce using rule 243 (relacional -> numeros comparacion VARIABLE .)
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232

    aritmeticos                    shift and go to state 223

state 357

    (255) aritmetica -> numeros aritmeticos numeros .

    IGUAL_COMPARACION reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    DIFERENTE       reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    MAYOR           reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    MENOR           reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    MENOS           reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    MAS             reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    DIVISION        reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    MOD             reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    VAR             reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    VAL             reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    VARIABLE        reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    PRINTLN         reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    PRINT           reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    READLINE        reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    WHILE           reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    FOR             reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    IF              reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    INT             reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    LONG            reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    FLOAT           reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    DOUBLE          reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    LLAVE_D         reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    DEF             reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    STRING          reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    $end            reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    RETURN          reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    CASE            reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    AND             reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    OR              reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    NOT             reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)
    PAR_D           reduce using rule 255 (aritmetica -> numeros aritmeticos numeros .)


state 358

    (257) aritmetica -> numeros aritmeticos VARIABLE .

    IGUAL_COMPARACION reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    MAYOR           reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    MENOR           reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    MENOS           reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    MAS             reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    DIVISION        reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    MOD             reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    VAR             reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    VAL             reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    PRINT           reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    READLINE        reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    WHILE           reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    FOR             reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    IF              reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    INT             reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    LONG            reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    FLOAT           reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    DEF             reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    STRING          reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    $end            reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    RETURN          reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    CASE            reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    AND             reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    OR              reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    NOT             reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)
    PAR_D           reduce using rule 257 (aritmetica -> numeros aritmeticos VARIABLE .)


state 359

    (236) relacional -> aritmetica comparacion aritmetica .
    (259) aritmetica -> aritmetica . aritmeticos numeros
    (260) aritmetica -> aritmetica . aritmeticos VARIABLE
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD

    AND             reduce using rule 236 (relacional -> aritmetica comparacion aritmetica .)
    OR              reduce using rule 236 (relacional -> aritmetica comparacion aritmetica .)
    NOT             reduce using rule 236 (relacional -> aritmetica comparacion aritmetica .)
    PAR_D           reduce using rule 236 (relacional -> aritmetica comparacion aritmetica .)
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232

    aritmeticos                    shift and go to state 240

state 360

    (237) relacional -> aritmetica comparacion numeros .
    (255) aritmetica -> numeros . aritmeticos numeros
    (257) aritmetica -> numeros . aritmeticos VARIABLE
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD

    AND             reduce using rule 237 (relacional -> aritmetica comparacion numeros .)
    OR              reduce using rule 237 (relacional -> aritmetica comparacion numeros .)
    NOT             reduce using rule 237 (relacional -> aritmetica comparacion numeros .)
    PAR_D           reduce using rule 237 (relacional -> aritmetica comparacion numeros .)
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232

    aritmeticos                    shift and go to state 238

state 361

    (256) aritmetica -> VARIABLE . aritmeticos numeros
    (258) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD

    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232

    aritmeticos                    shift and go to state 223

state 362

    (259) aritmetica -> aritmetica aritmeticos numeros .

    IGUAL_COMPARACION reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    DIFERENTE       reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    MAYOR           reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    MENOR           reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    MENOS           reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    MAS             reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    DIVISION        reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    MOD             reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    VAR             reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    VAL             reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    VARIABLE        reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    PRINTLN         reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    PRINT           reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    READLINE        reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    WHILE           reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    FOR             reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    IF              reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    INT             reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    LONG            reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    FLOAT           reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    DOUBLE          reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    LLAVE_D         reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    DEF             reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    STRING          reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    $end            reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    RETURN          reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    CASE            reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    AND             reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    OR              reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    NOT             reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)
    PAR_D           reduce using rule 259 (aritmetica -> aritmetica aritmeticos numeros .)


state 363

    (260) aritmetica -> aritmetica aritmeticos VARIABLE .

    IGUAL_COMPARACION reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MAYOR           reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MENOR           reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MENOS           reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MAS             reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DIVISION        reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MOD             reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VAR             reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VAL             reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PRINT           reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    READLINE        reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    WHILE           reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    FOR             reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    IF              reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    INT             reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    LONG            reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    FLOAT           reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DEF             reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    STRING          reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    $end            reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    RETURN          reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    CASE            reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    AND             reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    OR              reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    NOT             reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PAR_D           reduce using rule 260 (aritmetica -> aritmetica aritmeticos VARIABLE .)


state 364

    (240) relacional -> STRING comparacion STRING .

    AND             reduce using rule 240 (relacional -> STRING comparacion STRING .)
    OR              reduce using rule 240 (relacional -> STRING comparacion STRING .)
    NOT             reduce using rule 240 (relacional -> STRING comparacion STRING .)
    PAR_D           reduce using rule 240 (relacional -> STRING comparacion STRING .)


state 365

    (247) relacional -> STRING comparacion VARIABLE .

    AND             reduce using rule 247 (relacional -> STRING comparacion VARIABLE .)
    OR              reduce using rule 247 (relacional -> STRING comparacion VARIABLE .)
    NOT             reduce using rule 247 (relacional -> STRING comparacion VARIABLE .)
    PAR_D           reduce using rule 247 (relacional -> STRING comparacion VARIABLE .)


state 366

    (241) relacional -> CHAR comparacion CHAR .

    AND             reduce using rule 241 (relacional -> CHAR comparacion CHAR .)
    OR              reduce using rule 241 (relacional -> CHAR comparacion CHAR .)
    NOT             reduce using rule 241 (relacional -> CHAR comparacion CHAR .)
    PAR_D           reduce using rule 241 (relacional -> CHAR comparacion CHAR .)


state 367

    (249) relacional -> CHAR comparacion VARIABLE .

    AND             reduce using rule 249 (relacional -> CHAR comparacion VARIABLE .)
    OR              reduce using rule 249 (relacional -> CHAR comparacion VARIABLE .)
    NOT             reduce using rule 249 (relacional -> CHAR comparacion VARIABLE .)
    PAR_D           reduce using rule 249 (relacional -> CHAR comparacion VARIABLE .)


state 368

    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR . VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> FOR PAR_I VAR VARIABLE ITERATOR . INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> FOR PAR_I VAR VARIABLE ITERATOR . INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 465
    INT             shift and go to state 466


state 369

    (173) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 467


state 370

    (174) for -> FOR PAR_I VARIABLE ITERATOR INT . TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> FOR PAR_I VARIABLE ITERATOR INT . UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    TO              shift and go to state 468
    UNTIL           shift and go to state 469


state 371

    (217) if -> IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 470
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 372

    (272) startsWith -> STRING PUNTO STARTSWITH PAR_I STRING . PAR_D

    PAR_D           shift and go to state 471


state 373

    (214) defcase -> CASE SUBGUION . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 472


state 374

    (202) caseStr -> CASE STRING . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 379


state 375

    (186) caseInt -> CASE INT FUNCION_FLECHA . codeBlock
    (215) codeBlock -> . contenidoLine
    (216) codeBlock -> . LLAVE_I contenido LLAVE_D
    (41) contenidoLine -> . asignacion
    (42) contenidoLine -> . reasignacion
    (43) contenidoLine -> . funcall
    (44) contenidoLine -> . impresion
    (45) contenidoLine -> . entrada
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_I         shift and go to state 475
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 481
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 473
    contenidoLine                  shift and go to state 474
    asignacion                     shift and go to state 476
    reasignacion                   shift and go to state 477
    funcall                        shift and go to state 478
    impresion                      shift and go to state 479
    entrada                        shift and go to state 480
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 376

    (190) caseLgn -> CASE LONG FUNCION_FLECHA . codeBlock
    (215) codeBlock -> . contenidoLine
    (216) codeBlock -> . LLAVE_I contenido LLAVE_D
    (41) contenidoLine -> . asignacion
    (42) contenidoLine -> . reasignacion
    (43) contenidoLine -> . funcall
    (44) contenidoLine -> . impresion
    (45) contenidoLine -> . entrada
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_I         shift and go to state 475
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 481
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 482
    contenidoLine                  shift and go to state 474
    asignacion                     shift and go to state 476
    reasignacion                   shift and go to state 477
    funcall                        shift and go to state 478
    impresion                      shift and go to state 479
    entrada                        shift and go to state 480
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 377

    (194) caseFlt -> CASE FLOAT FUNCION_FLECHA . codeBlock
    (215) codeBlock -> . contenidoLine
    (216) codeBlock -> . LLAVE_I contenido LLAVE_D
    (41) contenidoLine -> . asignacion
    (42) contenidoLine -> . reasignacion
    (43) contenidoLine -> . funcall
    (44) contenidoLine -> . impresion
    (45) contenidoLine -> . entrada
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_I         shift and go to state 475
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 481
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 483
    contenidoLine                  shift and go to state 474
    asignacion                     shift and go to state 476
    reasignacion                   shift and go to state 477
    funcall                        shift and go to state 478
    impresion                      shift and go to state 479
    entrada                        shift and go to state 480
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 378

    (198) caseDob -> CASE DOUBLE FUNCION_FLECHA . codeBlock
    (215) codeBlock -> . contenidoLine
    (216) codeBlock -> . LLAVE_I contenido LLAVE_D
    (41) contenidoLine -> . asignacion
    (42) contenidoLine -> . reasignacion
    (43) contenidoLine -> . funcall
    (44) contenidoLine -> . impresion
    (45) contenidoLine -> . entrada
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_I         shift and go to state 475
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 481
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 484
    contenidoLine                  shift and go to state 474
    asignacion                     shift and go to state 476
    reasignacion                   shift and go to state 477
    funcall                        shift and go to state 478
    impresion                      shift and go to state 479
    entrada                        shift and go to state 480
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 379

    (202) caseStr -> CASE STRING FUNCION_FLECHA . codeBlock
    (215) codeBlock -> . contenidoLine
    (216) codeBlock -> . LLAVE_I contenido LLAVE_D
    (41) contenidoLine -> . asignacion
    (42) contenidoLine -> . reasignacion
    (43) contenidoLine -> . funcall
    (44) contenidoLine -> . impresion
    (45) contenidoLine -> . entrada
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_I         shift and go to state 475
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 481
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 485
    contenidoLine                  shift and go to state 474
    asignacion                     shift and go to state 476
    reasignacion                   shift and go to state 477
    funcall                        shift and go to state 478
    impresion                      shift and go to state 479
    entrada                        shift and go to state 480
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 380

    (206) caseChar -> CASE CHAR FUNCION_FLECHA . codeBlock
    (215) codeBlock -> . contenidoLine
    (216) codeBlock -> . LLAVE_I contenido LLAVE_D
    (41) contenidoLine -> . asignacion
    (42) contenidoLine -> . reasignacion
    (43) contenidoLine -> . funcall
    (44) contenidoLine -> . impresion
    (45) contenidoLine -> . entrada
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_I         shift and go to state 475
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 481
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 486
    contenidoLine                  shift and go to state 474
    asignacion                     shift and go to state 476
    reasignacion                   shift and go to state 477
    funcall                        shift and go to state 478
    impresion                      shift and go to state 479
    entrada                        shift and go to state 480
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 381

    (210) caseBool -> CASE booleanos FUNCION_FLECHA . codeBlock
    (215) codeBlock -> . contenidoLine
    (216) codeBlock -> . LLAVE_I contenido LLAVE_D
    (41) contenidoLine -> . asignacion
    (42) contenidoLine -> . reasignacion
    (43) contenidoLine -> . funcall
    (44) contenidoLine -> . impresion
    (45) contenidoLine -> . entrada
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_I         shift and go to state 475
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 481
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 487
    contenidoLine                  shift and go to state 474
    asignacion                     shift and go to state 476
    reasignacion                   shift and go to state 477
    funcall                        shift and go to state 478
    impresion                      shift and go to state 479
    entrada                        shift and go to state 480
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 382

    (103) valor -> VARIABLE PAR_I VARIABLE PAR_D .

    COMA            reduce using rule 103 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    PAR_D           reduce using rule 103 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    MAS             reduce using rule 103 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    VAR             reduce using rule 103 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    VAL             reduce using rule 103 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    VARIABLE        reduce using rule 103 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    PRINTLN         reduce using rule 103 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    PRINT           reduce using rule 103 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    READLINE        reduce using rule 103 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    WHILE           reduce using rule 103 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    FOR             reduce using rule 103 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    IF              reduce using rule 103 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    INT             reduce using rule 103 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    LONG            reduce using rule 103 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    FLOAT           reduce using rule 103 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    DOUBLE          reduce using rule 103 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    LLAVE_D         reduce using rule 103 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    RETURN          reduce using rule 103 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    CASE            reduce using rule 103 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)


state 383

    (104) valor -> VARIABLE PAR_I INT PAR_D .

    COMA            reduce using rule 104 (valor -> VARIABLE PAR_I INT PAR_D .)
    PAR_D           reduce using rule 104 (valor -> VARIABLE PAR_I INT PAR_D .)
    MAS             reduce using rule 104 (valor -> VARIABLE PAR_I INT PAR_D .)
    VAR             reduce using rule 104 (valor -> VARIABLE PAR_I INT PAR_D .)
    VAL             reduce using rule 104 (valor -> VARIABLE PAR_I INT PAR_D .)
    VARIABLE        reduce using rule 104 (valor -> VARIABLE PAR_I INT PAR_D .)
    PRINTLN         reduce using rule 104 (valor -> VARIABLE PAR_I INT PAR_D .)
    PRINT           reduce using rule 104 (valor -> VARIABLE PAR_I INT PAR_D .)
    READLINE        reduce using rule 104 (valor -> VARIABLE PAR_I INT PAR_D .)
    WHILE           reduce using rule 104 (valor -> VARIABLE PAR_I INT PAR_D .)
    FOR             reduce using rule 104 (valor -> VARIABLE PAR_I INT PAR_D .)
    IF              reduce using rule 104 (valor -> VARIABLE PAR_I INT PAR_D .)
    INT             reduce using rule 104 (valor -> VARIABLE PAR_I INT PAR_D .)
    LONG            reduce using rule 104 (valor -> VARIABLE PAR_I INT PAR_D .)
    FLOAT           reduce using rule 104 (valor -> VARIABLE PAR_I INT PAR_D .)
    DOUBLE          reduce using rule 104 (valor -> VARIABLE PAR_I INT PAR_D .)
    LLAVE_D         reduce using rule 104 (valor -> VARIABLE PAR_I INT PAR_D .)
    RETURN          reduce using rule 104 (valor -> VARIABLE PAR_I INT PAR_D .)
    CASE            reduce using rule 104 (valor -> VARIABLE PAR_I INT PAR_D .)


state 384

    (4) io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE . PUNTO READLINE

    PUNTO           shift and go to state 488


state 385

    (220) elseif -> ELSE IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D
    (221) elseif -> ELSE IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D elseif

    LLAVE_I         shift and go to state 489


state 386

    (100) valor -> VARIABLE .
    (103) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (104) valor -> VARIABLE . PAR_I INT PAR_D
    (256) aritmetica -> VARIABLE . aritmeticos numeros
    (258) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (152) castingcall -> VARIABLE . PUNTO castingfun
    (142) funcall -> VARIABLE . varparen
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD
    (143) varparen -> . PAR_I valores PAR_D
    (144) varparen -> . PAR_I PAR_D
    (145) varparen -> . varparen PAR_I valores PAR_D
    (146) varparen -> . varparen PAR_I PAR_D

    VAR             reduce using rule 100 (valor -> VARIABLE .)
    VAL             reduce using rule 100 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 100 (valor -> VARIABLE .)
    PRINTLN         reduce using rule 100 (valor -> VARIABLE .)
    PRINT           reduce using rule 100 (valor -> VARIABLE .)
    READLINE        reduce using rule 100 (valor -> VARIABLE .)
    WHILE           reduce using rule 100 (valor -> VARIABLE .)
    FOR             reduce using rule 100 (valor -> VARIABLE .)
    IF              reduce using rule 100 (valor -> VARIABLE .)
    INT             reduce using rule 100 (valor -> VARIABLE .)
    LONG            reduce using rule 100 (valor -> VARIABLE .)
    FLOAT           reduce using rule 100 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 100 (valor -> VARIABLE .)
    LLAVE_D         reduce using rule 100 (valor -> VARIABLE .)
    RETURN          reduce using rule 100 (valor -> VARIABLE .)
    CASE            reduce using rule 100 (valor -> VARIABLE .)
    PAR_I           shift and go to state 490
    PUNTO           shift and go to state 314
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232

    aritmeticos                    shift and go to state 223
    varparen                       shift and go to state 38

state 387

    (85) reasignacion -> VARIABLE IGUAL valor .

    VAR             reduce using rule 85 (reasignacion -> VARIABLE IGUAL valor .)
    VAL             reduce using rule 85 (reasignacion -> VARIABLE IGUAL valor .)
    VARIABLE        reduce using rule 85 (reasignacion -> VARIABLE IGUAL valor .)
    PRINTLN         reduce using rule 85 (reasignacion -> VARIABLE IGUAL valor .)
    PRINT           reduce using rule 85 (reasignacion -> VARIABLE IGUAL valor .)
    READLINE        reduce using rule 85 (reasignacion -> VARIABLE IGUAL valor .)
    WHILE           reduce using rule 85 (reasignacion -> VARIABLE IGUAL valor .)
    FOR             reduce using rule 85 (reasignacion -> VARIABLE IGUAL valor .)
    IF              reduce using rule 85 (reasignacion -> VARIABLE IGUAL valor .)
    INT             reduce using rule 85 (reasignacion -> VARIABLE IGUAL valor .)
    LONG            reduce using rule 85 (reasignacion -> VARIABLE IGUAL valor .)
    FLOAT           reduce using rule 85 (reasignacion -> VARIABLE IGUAL valor .)
    DOUBLE          reduce using rule 85 (reasignacion -> VARIABLE IGUAL valor .)
    LLAVE_D         reduce using rule 85 (reasignacion -> VARIABLE IGUAL valor .)
    RETURN          reduce using rule 85 (reasignacion -> VARIABLE IGUAL valor .)
    CASE            reduce using rule 85 (reasignacion -> VARIABLE IGUAL valor .)


state 388

    (86) reasignacion -> VARIABLE IGUAL returnfun .

    VAR             reduce using rule 86 (reasignacion -> VARIABLE IGUAL returnfun .)
    VAL             reduce using rule 86 (reasignacion -> VARIABLE IGUAL returnfun .)
    VARIABLE        reduce using rule 86 (reasignacion -> VARIABLE IGUAL returnfun .)
    PRINTLN         reduce using rule 86 (reasignacion -> VARIABLE IGUAL returnfun .)
    PRINT           reduce using rule 86 (reasignacion -> VARIABLE IGUAL returnfun .)
    READLINE        reduce using rule 86 (reasignacion -> VARIABLE IGUAL returnfun .)
    WHILE           reduce using rule 86 (reasignacion -> VARIABLE IGUAL returnfun .)
    FOR             reduce using rule 86 (reasignacion -> VARIABLE IGUAL returnfun .)
    IF              reduce using rule 86 (reasignacion -> VARIABLE IGUAL returnfun .)
    INT             reduce using rule 86 (reasignacion -> VARIABLE IGUAL returnfun .)
    LONG            reduce using rule 86 (reasignacion -> VARIABLE IGUAL returnfun .)
    FLOAT           reduce using rule 86 (reasignacion -> VARIABLE IGUAL returnfun .)
    DOUBLE          reduce using rule 86 (reasignacion -> VARIABLE IGUAL returnfun .)
    LLAVE_D         reduce using rule 86 (reasignacion -> VARIABLE IGUAL returnfun .)
    RETURN          reduce using rule 86 (reasignacion -> VARIABLE IGUAL returnfun .)
    CASE            reduce using rule 86 (reasignacion -> VARIABLE IGUAL returnfun .)


state 389

    (87) reasignacion -> VARIABLE IGUAL aritmetica .
    (259) aritmetica -> aritmetica . aritmeticos numeros
    (260) aritmetica -> aritmetica . aritmeticos VARIABLE
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD

    VAR             reduce using rule 87 (reasignacion -> VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 87 (reasignacion -> VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 87 (reasignacion -> VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 87 (reasignacion -> VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 87 (reasignacion -> VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 87 (reasignacion -> VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 87 (reasignacion -> VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 87 (reasignacion -> VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 87 (reasignacion -> VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 87 (reasignacion -> VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 87 (reasignacion -> VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 87 (reasignacion -> VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 87 (reasignacion -> VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 87 (reasignacion -> VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 87 (reasignacion -> VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 87 (reasignacion -> VARIABLE IGUAL aritmetica .)
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232

    aritmeticos                    shift and go to state 240

state 390

    (101) valor -> numeros .
    (255) aritmetica -> numeros . aritmeticos numeros
    (257) aritmetica -> numeros . aritmeticos VARIABLE
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD

    VAR             reduce using rule 101 (valor -> numeros .)
    VAL             reduce using rule 101 (valor -> numeros .)
    VARIABLE        reduce using rule 101 (valor -> numeros .)
    PRINTLN         reduce using rule 101 (valor -> numeros .)
    PRINT           reduce using rule 101 (valor -> numeros .)
    READLINE        reduce using rule 101 (valor -> numeros .)
    WHILE           reduce using rule 101 (valor -> numeros .)
    FOR             reduce using rule 101 (valor -> numeros .)
    IF              reduce using rule 101 (valor -> numeros .)
    INT             reduce using rule 101 (valor -> numeros .)
    LONG            reduce using rule 101 (valor -> numeros .)
    FLOAT           reduce using rule 101 (valor -> numeros .)
    DOUBLE          reduce using rule 101 (valor -> numeros .)
    LLAVE_D         reduce using rule 101 (valor -> numeros .)
    RETURN          reduce using rule 101 (valor -> numeros .)
    CASE            reduce using rule 101 (valor -> numeros .)
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232

    aritmeticos                    shift and go to state 238

state 391

    (88) reasignacion -> VARIABLE PAR_I INT . PAR_D IGUAL valor
    (108) numeros -> INT .

  ! shift/reduce conflict for PAR_D resolved as shift
    PAR_D           shift and go to state 491
    COMA            reduce using rule 108 (numeros -> INT .)

  ! PAR_D           [ reduce using rule 108 (numeros -> INT .) ]


state 392

    (112) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 492


state 393

    (113) funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 113 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 113 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 113 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 113 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 113 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 113 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 113 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 113 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 113 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 113 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 113 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 113 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 113 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)


state 394

    (120) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN valor LLAVE_D
    (121) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN VARIABLE LLAVE_D
    (122) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN returnfun LLAVE_D
    (123) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN aritmetica LLAVE_D
    (124) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . RETURN valor LLAVE_D
    (125) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . RETURN VARIABLE LLAVE_D
    (126) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . RETURN returnfun LLAVE_D
    (127) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . RETURN aritmetica LLAVE_D
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    RETURN          shift and go to state 494
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 493
    aritmetica                     shift and go to state 146
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 395

    (128) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN tuple LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN returnfun LLAVE_D
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 495
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 396

    (132) dectipoTupla -> DOBLE_PUNTO PAR_I tipos . PAR_D

    PAR_D           shift and go to state 496


state 397

    (133) tipos -> tipo .
    (134) tipos -> tipo . tiposentry
    (135) tiposentry -> . COMA tipo
    (136) tiposentry -> . COMA tipo tiposentry

    PAR_D           reduce using rule 133 (tipos -> tipo .)
    COMA            shift and go to state 498

    tiposentry                     shift and go to state 497

state 398

    (96) tipo -> ARRAYCLASS CORCHETE_I . tipo CORCHETE_D
    (89) tipo -> . CHARCLASS
    (90) tipo -> . STRINGCLASS
    (91) tipo -> . BOOLCLASS
    (92) tipo -> . INTCLASS
    (93) tipo -> . LONGCLASS
    (94) tipo -> . DOUBLECLASS
    (95) tipo -> . FLOATCLASS
    (96) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (97) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 302
    STRINGCLASS     shift and go to state 303
    BOOLCLASS       shift and go to state 304
    INTCLASS        shift and go to state 305
    LONGCLASS       shift and go to state 306
    DOUBLECLASS     shift and go to state 307
    FLOATCLASS      shift and go to state 308
    ARRAYCLASS      shift and go to state 309
    LISTCLASS       shift and go to state 310

    tipo                           shift and go to state 499

state 399

    (97) tipo -> LISTCLASS CORCHETE_I . tipo CORCHETE_D
    (89) tipo -> . CHARCLASS
    (90) tipo -> . STRINGCLASS
    (91) tipo -> . BOOLCLASS
    (92) tipo -> . INTCLASS
    (93) tipo -> . LONGCLASS
    (94) tipo -> . DOUBLECLASS
    (95) tipo -> . FLOATCLASS
    (96) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (97) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 302
    STRINGCLASS     shift and go to state 303
    BOOLCLASS       shift and go to state 304
    INTCLASS        shift and go to state 305
    LONGCLASS       shift and go to state 306
    DOUBLECLASS     shift and go to state 307
    FLOATCLASS      shift and go to state 308
    ARRAYCLASS      shift and go to state 309
    LISTCLASS       shift and go to state 310

    tipo                           shift and go to state 500

state 400

    (118) parametros -> PAR_I . declaracion PAR_D
    (119) parametros -> PAR_I . declaracion PAR_D parametros
    (114) declaracion -> . VARIABLE DOBLE_PUNTO tipo
    (115) declaracion -> . VARIABLE DOBLE_PUNTO tipo IGUAL valor

    VARIABLE        shift and go to state 156

    declaracion                    shift and go to state 155

state 401

    (119) parametros -> PAR_I declaracion PAR_D parametros .

    IGUAL           reduce using rule 119 (parametros -> PAR_I declaracion PAR_D parametros .)
    LLAVE_I         reduce using rule 119 (parametros -> PAR_I declaracion PAR_D parametros .)
    DOBLE_PUNTO     reduce using rule 119 (parametros -> PAR_I declaracion PAR_D parametros .)


state 402

    (114) declaracion -> VARIABLE DOBLE_PUNTO tipo .
    (115) declaracion -> VARIABLE DOBLE_PUNTO tipo . IGUAL valor

    PAR_D           reduce using rule 114 (declaracion -> VARIABLE DOBLE_PUNTO tipo .)
    IGUAL           shift and go to state 501


state 403

    (152) castingcall -> VARIABLE PUNTO castingfun .

    DEF             reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    VARIABLE        reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    PRINTLN         reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    PRINT           reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    READLINE        reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    VAR             reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    VAL             reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    WHILE           reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    FOR             reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    IF              reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    STRING          reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    $end            reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    LLAVE_D         reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    INT             reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    LONG            reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    FLOAT           reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    DOUBLE          reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    RETURN          reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)
    CASE            reduce using rule 152 (castingcall -> VARIABLE PUNTO castingfun .)


state 404

    (153) castingfun -> TO_INT .

    DEF             reduce using rule 153 (castingfun -> TO_INT .)
    VARIABLE        reduce using rule 153 (castingfun -> TO_INT .)
    PRINTLN         reduce using rule 153 (castingfun -> TO_INT .)
    PRINT           reduce using rule 153 (castingfun -> TO_INT .)
    READLINE        reduce using rule 153 (castingfun -> TO_INT .)
    VAR             reduce using rule 153 (castingfun -> TO_INT .)
    VAL             reduce using rule 153 (castingfun -> TO_INT .)
    WHILE           reduce using rule 153 (castingfun -> TO_INT .)
    FOR             reduce using rule 153 (castingfun -> TO_INT .)
    IF              reduce using rule 153 (castingfun -> TO_INT .)
    STRING          reduce using rule 153 (castingfun -> TO_INT .)
    $end            reduce using rule 153 (castingfun -> TO_INT .)
    LLAVE_D         reduce using rule 153 (castingfun -> TO_INT .)
    INT             reduce using rule 153 (castingfun -> TO_INT .)
    LONG            reduce using rule 153 (castingfun -> TO_INT .)
    FLOAT           reduce using rule 153 (castingfun -> TO_INT .)
    DOUBLE          reduce using rule 153 (castingfun -> TO_INT .)
    RETURN          reduce using rule 153 (castingfun -> TO_INT .)
    CASE            reduce using rule 153 (castingfun -> TO_INT .)


state 405

    (154) castingfun -> TO_DOUBLE .

    DEF             reduce using rule 154 (castingfun -> TO_DOUBLE .)
    VARIABLE        reduce using rule 154 (castingfun -> TO_DOUBLE .)
    PRINTLN         reduce using rule 154 (castingfun -> TO_DOUBLE .)
    PRINT           reduce using rule 154 (castingfun -> TO_DOUBLE .)
    READLINE        reduce using rule 154 (castingfun -> TO_DOUBLE .)
    VAR             reduce using rule 154 (castingfun -> TO_DOUBLE .)
    VAL             reduce using rule 154 (castingfun -> TO_DOUBLE .)
    WHILE           reduce using rule 154 (castingfun -> TO_DOUBLE .)
    FOR             reduce using rule 154 (castingfun -> TO_DOUBLE .)
    IF              reduce using rule 154 (castingfun -> TO_DOUBLE .)
    STRING          reduce using rule 154 (castingfun -> TO_DOUBLE .)
    $end            reduce using rule 154 (castingfun -> TO_DOUBLE .)
    LLAVE_D         reduce using rule 154 (castingfun -> TO_DOUBLE .)
    INT             reduce using rule 154 (castingfun -> TO_DOUBLE .)
    LONG            reduce using rule 154 (castingfun -> TO_DOUBLE .)
    FLOAT           reduce using rule 154 (castingfun -> TO_DOUBLE .)
    DOUBLE          reduce using rule 154 (castingfun -> TO_DOUBLE .)
    RETURN          reduce using rule 154 (castingfun -> TO_DOUBLE .)
    CASE            reduce using rule 154 (castingfun -> TO_DOUBLE .)


state 406

    (155) castingfun -> TO_FLOAT .

    DEF             reduce using rule 155 (castingfun -> TO_FLOAT .)
    VARIABLE        reduce using rule 155 (castingfun -> TO_FLOAT .)
    PRINTLN         reduce using rule 155 (castingfun -> TO_FLOAT .)
    PRINT           reduce using rule 155 (castingfun -> TO_FLOAT .)
    READLINE        reduce using rule 155 (castingfun -> TO_FLOAT .)
    VAR             reduce using rule 155 (castingfun -> TO_FLOAT .)
    VAL             reduce using rule 155 (castingfun -> TO_FLOAT .)
    WHILE           reduce using rule 155 (castingfun -> TO_FLOAT .)
    FOR             reduce using rule 155 (castingfun -> TO_FLOAT .)
    IF              reduce using rule 155 (castingfun -> TO_FLOAT .)
    STRING          reduce using rule 155 (castingfun -> TO_FLOAT .)
    $end            reduce using rule 155 (castingfun -> TO_FLOAT .)
    LLAVE_D         reduce using rule 155 (castingfun -> TO_FLOAT .)
    INT             reduce using rule 155 (castingfun -> TO_FLOAT .)
    LONG            reduce using rule 155 (castingfun -> TO_FLOAT .)
    FLOAT           reduce using rule 155 (castingfun -> TO_FLOAT .)
    DOUBLE          reduce using rule 155 (castingfun -> TO_FLOAT .)
    RETURN          reduce using rule 155 (castingfun -> TO_FLOAT .)
    CASE            reduce using rule 155 (castingfun -> TO_FLOAT .)


state 407

    (156) castingfun -> TO_LONG .

    DEF             reduce using rule 156 (castingfun -> TO_LONG .)
    VARIABLE        reduce using rule 156 (castingfun -> TO_LONG .)
    PRINTLN         reduce using rule 156 (castingfun -> TO_LONG .)
    PRINT           reduce using rule 156 (castingfun -> TO_LONG .)
    READLINE        reduce using rule 156 (castingfun -> TO_LONG .)
    VAR             reduce using rule 156 (castingfun -> TO_LONG .)
    VAL             reduce using rule 156 (castingfun -> TO_LONG .)
    WHILE           reduce using rule 156 (castingfun -> TO_LONG .)
    FOR             reduce using rule 156 (castingfun -> TO_LONG .)
    IF              reduce using rule 156 (castingfun -> TO_LONG .)
    STRING          reduce using rule 156 (castingfun -> TO_LONG .)
    $end            reduce using rule 156 (castingfun -> TO_LONG .)
    LLAVE_D         reduce using rule 156 (castingfun -> TO_LONG .)
    INT             reduce using rule 156 (castingfun -> TO_LONG .)
    LONG            reduce using rule 156 (castingfun -> TO_LONG .)
    FLOAT           reduce using rule 156 (castingfun -> TO_LONG .)
    DOUBLE          reduce using rule 156 (castingfun -> TO_LONG .)
    RETURN          reduce using rule 156 (castingfun -> TO_LONG .)
    CASE            reduce using rule 156 (castingfun -> TO_LONG .)


state 408

    (323) stringCastLong -> STRING PUNTO TO_LONG .

    DEF             reduce using rule 323 (stringCastLong -> STRING PUNTO TO_LONG .)
    VARIABLE        reduce using rule 323 (stringCastLong -> STRING PUNTO TO_LONG .)
    PRINTLN         reduce using rule 323 (stringCastLong -> STRING PUNTO TO_LONG .)
    PRINT           reduce using rule 323 (stringCastLong -> STRING PUNTO TO_LONG .)
    READLINE        reduce using rule 323 (stringCastLong -> STRING PUNTO TO_LONG .)
    VAR             reduce using rule 323 (stringCastLong -> STRING PUNTO TO_LONG .)
    VAL             reduce using rule 323 (stringCastLong -> STRING PUNTO TO_LONG .)
    WHILE           reduce using rule 323 (stringCastLong -> STRING PUNTO TO_LONG .)
    FOR             reduce using rule 323 (stringCastLong -> STRING PUNTO TO_LONG .)
    IF              reduce using rule 323 (stringCastLong -> STRING PUNTO TO_LONG .)
    STRING          reduce using rule 323 (stringCastLong -> STRING PUNTO TO_LONG .)
    $end            reduce using rule 323 (stringCastLong -> STRING PUNTO TO_LONG .)
    LLAVE_D         reduce using rule 323 (stringCastLong -> STRING PUNTO TO_LONG .)
    INT             reduce using rule 323 (stringCastLong -> STRING PUNTO TO_LONG .)
    LONG            reduce using rule 323 (stringCastLong -> STRING PUNTO TO_LONG .)
    FLOAT           reduce using rule 323 (stringCastLong -> STRING PUNTO TO_LONG .)
    DOUBLE          reduce using rule 323 (stringCastLong -> STRING PUNTO TO_LONG .)
    RETURN          reduce using rule 323 (stringCastLong -> STRING PUNTO TO_LONG .)
    CASE            reduce using rule 323 (stringCastLong -> STRING PUNTO TO_LONG .)


state 409

    (322) stringCastInt -> STRING PUNTO TO_INT .

    DEF             reduce using rule 322 (stringCastInt -> STRING PUNTO TO_INT .)
    VARIABLE        reduce using rule 322 (stringCastInt -> STRING PUNTO TO_INT .)
    PRINTLN         reduce using rule 322 (stringCastInt -> STRING PUNTO TO_INT .)
    PRINT           reduce using rule 322 (stringCastInt -> STRING PUNTO TO_INT .)
    READLINE        reduce using rule 322 (stringCastInt -> STRING PUNTO TO_INT .)
    VAR             reduce using rule 322 (stringCastInt -> STRING PUNTO TO_INT .)
    VAL             reduce using rule 322 (stringCastInt -> STRING PUNTO TO_INT .)
    WHILE           reduce using rule 322 (stringCastInt -> STRING PUNTO TO_INT .)
    FOR             reduce using rule 322 (stringCastInt -> STRING PUNTO TO_INT .)
    IF              reduce using rule 322 (stringCastInt -> STRING PUNTO TO_INT .)
    STRING          reduce using rule 322 (stringCastInt -> STRING PUNTO TO_INT .)
    $end            reduce using rule 322 (stringCastInt -> STRING PUNTO TO_INT .)
    LLAVE_D         reduce using rule 322 (stringCastInt -> STRING PUNTO TO_INT .)
    INT             reduce using rule 322 (stringCastInt -> STRING PUNTO TO_INT .)
    LONG            reduce using rule 322 (stringCastInt -> STRING PUNTO TO_INT .)
    FLOAT           reduce using rule 322 (stringCastInt -> STRING PUNTO TO_INT .)
    DOUBLE          reduce using rule 322 (stringCastInt -> STRING PUNTO TO_INT .)
    RETURN          reduce using rule 322 (stringCastInt -> STRING PUNTO TO_INT .)
    CASE            reduce using rule 322 (stringCastInt -> STRING PUNTO TO_INT .)


state 410

    (324) stringCastFloat -> STRING PUNTO TO_FLOAT .

    DEF             reduce using rule 324 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    VARIABLE        reduce using rule 324 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    PRINTLN         reduce using rule 324 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    PRINT           reduce using rule 324 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    READLINE        reduce using rule 324 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    VAR             reduce using rule 324 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    VAL             reduce using rule 324 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    WHILE           reduce using rule 324 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    FOR             reduce using rule 324 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    IF              reduce using rule 324 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    STRING          reduce using rule 324 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    $end            reduce using rule 324 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    LLAVE_D         reduce using rule 324 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    INT             reduce using rule 324 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    LONG            reduce using rule 324 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    FLOAT           reduce using rule 324 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    DOUBLE          reduce using rule 324 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    RETURN          reduce using rule 324 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    CASE            reduce using rule 324 (stringCastFloat -> STRING PUNTO TO_FLOAT .)


state 411

    (325) stringCastDouble -> STRING PUNTO TO_DOUBLE .

    DEF             reduce using rule 325 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    VARIABLE        reduce using rule 325 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    PRINTLN         reduce using rule 325 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    PRINT           reduce using rule 325 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    READLINE        reduce using rule 325 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    VAR             reduce using rule 325 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    VAL             reduce using rule 325 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    WHILE           reduce using rule 325 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    FOR             reduce using rule 325 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    IF              reduce using rule 325 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    STRING          reduce using rule 325 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    $end            reduce using rule 325 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    LLAVE_D         reduce using rule 325 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    INT             reduce using rule 325 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    LONG            reduce using rule 325 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    FLOAT           reduce using rule 325 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    DOUBLE          reduce using rule 325 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    RETURN          reduce using rule 325 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    CASE            reduce using rule 325 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)


state 412

    (157) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 502


state 413

    (168) tuple -> PAR_I valores PAR_D .

    DEF             reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    PRINT           reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    READLINE        reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    VAR             reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    VAL             reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    WHILE           reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    FOR             reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    IF              reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    STRING          reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    $end            reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    INT             reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    LONG            reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    FLOAT           reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    RETURN          reduce using rule 168 (tuple -> PAR_I valores PAR_D .)
    CASE            reduce using rule 168 (tuple -> PAR_I valores PAR_D .)


state 414

    (151) castingcall -> returnCastable PUNTO castingfun .

    DEF             reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    VARIABLE        reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    PRINTLN         reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    PRINT           reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    READLINE        reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    VAR             reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    VAL             reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    WHILE           reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    FOR             reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    IF              reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    STRING          reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    $end            reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    LLAVE_D         reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    INT             reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    LONG            reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    FLOAT           reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    DOUBLE          reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    RETURN          reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)
    CASE            reduce using rule 151 (castingcall -> returnCastable PUNTO castingfun .)


state 415

    (61) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 61 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 61 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 61 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 61 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 61 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 61 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 61 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 61 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 61 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 61 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 61 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 61 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 61 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 61 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 61 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 61 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 61 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 61 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 61 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)


state 416

    (302) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .

    DEF             reduce using rule 302 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VARIABLE        reduce using rule 302 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    PRINTLN         reduce using rule 302 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    PRINT           reduce using rule 302 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    READLINE        reduce using rule 302 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VAR             reduce using rule 302 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VAL             reduce using rule 302 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    WHILE           reduce using rule 302 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    FOR             reduce using rule 302 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    IF              reduce using rule 302 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    STRING          reduce using rule 302 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    $end            reduce using rule 302 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    LLAVE_D         reduce using rule 302 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    INT             reduce using rule 302 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    LONG            reduce using rule 302 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    FLOAT           reduce using rule 302 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    DOUBLE          reduce using rule 302 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    RETURN          reduce using rule 302 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    CASE            reduce using rule 302 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)


state 417

    (305) longvalues -> INT .
    (299) intvalues -> INT .

  ! reduce/reduce conflict for DEF resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for PRINT resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for READLINE resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for VAR resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for VAL resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for WHILE resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for FOR resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for IF resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for STRING resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for $end resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for INT resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for LONG resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for FLOAT resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for RETURN resolved using rule 299 (intvalues -> INT .)
  ! reduce/reduce conflict for CASE resolved using rule 299 (intvalues -> INT .)
    DEF             reduce using rule 299 (intvalues -> INT .)
    VARIABLE        reduce using rule 299 (intvalues -> INT .)
    PRINTLN         reduce using rule 299 (intvalues -> INT .)
    PRINT           reduce using rule 299 (intvalues -> INT .)
    READLINE        reduce using rule 299 (intvalues -> INT .)
    VAR             reduce using rule 299 (intvalues -> INT .)
    VAL             reduce using rule 299 (intvalues -> INT .)
    WHILE           reduce using rule 299 (intvalues -> INT .)
    FOR             reduce using rule 299 (intvalues -> INT .)
    IF              reduce using rule 299 (intvalues -> INT .)
    STRING          reduce using rule 299 (intvalues -> INT .)
    $end            reduce using rule 299 (intvalues -> INT .)
    LLAVE_D         reduce using rule 299 (intvalues -> INT .)
    INT             reduce using rule 299 (intvalues -> INT .)
    LONG            reduce using rule 299 (intvalues -> INT .)
    FLOAT           reduce using rule 299 (intvalues -> INT .)
    DOUBLE          reduce using rule 299 (intvalues -> INT .)
    RETURN          reduce using rule 299 (intvalues -> INT .)
    CASE            reduce using rule 299 (intvalues -> INT .)

  ! DEF             [ reduce using rule 305 (longvalues -> INT .) ]
  ! VARIABLE        [ reduce using rule 305 (longvalues -> INT .) ]
  ! PRINTLN         [ reduce using rule 305 (longvalues -> INT .) ]
  ! PRINT           [ reduce using rule 305 (longvalues -> INT .) ]
  ! READLINE        [ reduce using rule 305 (longvalues -> INT .) ]
  ! VAR             [ reduce using rule 305 (longvalues -> INT .) ]
  ! VAL             [ reduce using rule 305 (longvalues -> INT .) ]
  ! WHILE           [ reduce using rule 305 (longvalues -> INT .) ]
  ! FOR             [ reduce using rule 305 (longvalues -> INT .) ]
  ! IF              [ reduce using rule 305 (longvalues -> INT .) ]
  ! STRING          [ reduce using rule 305 (longvalues -> INT .) ]
  ! $end            [ reduce using rule 305 (longvalues -> INT .) ]
  ! LLAVE_D         [ reduce using rule 305 (longvalues -> INT .) ]
  ! INT             [ reduce using rule 305 (longvalues -> INT .) ]
  ! LONG            [ reduce using rule 305 (longvalues -> INT .) ]
  ! FLOAT           [ reduce using rule 305 (longvalues -> INT .) ]
  ! DOUBLE          [ reduce using rule 305 (longvalues -> INT .) ]
  ! RETURN          [ reduce using rule 305 (longvalues -> INT .) ]
  ! CASE            [ reduce using rule 305 (longvalues -> INT .) ]


state 418

    (306) longvalues -> intvalues .

    DEF             reduce using rule 306 (longvalues -> intvalues .)
    VARIABLE        reduce using rule 306 (longvalues -> intvalues .)
    PRINTLN         reduce using rule 306 (longvalues -> intvalues .)
    PRINT           reduce using rule 306 (longvalues -> intvalues .)
    READLINE        reduce using rule 306 (longvalues -> intvalues .)
    VAR             reduce using rule 306 (longvalues -> intvalues .)
    VAL             reduce using rule 306 (longvalues -> intvalues .)
    WHILE           reduce using rule 306 (longvalues -> intvalues .)
    FOR             reduce using rule 306 (longvalues -> intvalues .)
    IF              reduce using rule 306 (longvalues -> intvalues .)
    STRING          reduce using rule 306 (longvalues -> intvalues .)
    $end            reduce using rule 306 (longvalues -> intvalues .)
    LLAVE_D         reduce using rule 306 (longvalues -> intvalues .)
    INT             reduce using rule 306 (longvalues -> intvalues .)
    LONG            reduce using rule 306 (longvalues -> intvalues .)
    FLOAT           reduce using rule 306 (longvalues -> intvalues .)
    DOUBLE          reduce using rule 306 (longvalues -> intvalues .)
    RETURN          reduce using rule 306 (longvalues -> intvalues .)
    CASE            reduce using rule 306 (longvalues -> intvalues .)


state 419

    (323) stringCastLong -> STRING . PUNTO TO_LONG
    (322) stringCastInt -> STRING . PUNTO TO_INT

    PUNTO           shift and go to state 503


state 420

    (296) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .

    DEF             reduce using rule 296 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VARIABLE        reduce using rule 296 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    PRINTLN         reduce using rule 296 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    PRINT           reduce using rule 296 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    READLINE        reduce using rule 296 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VAR             reduce using rule 296 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VAL             reduce using rule 296 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    WHILE           reduce using rule 296 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    FOR             reduce using rule 296 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    IF              reduce using rule 296 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    STRING          reduce using rule 296 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    $end            reduce using rule 296 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    LLAVE_D         reduce using rule 296 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    INT             reduce using rule 296 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    LONG            reduce using rule 296 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    FLOAT           reduce using rule 296 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    DOUBLE          reduce using rule 296 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    RETURN          reduce using rule 296 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    CASE            reduce using rule 296 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)


state 421

    (299) intvalues -> INT .

    DEF             reduce using rule 299 (intvalues -> INT .)
    VARIABLE        reduce using rule 299 (intvalues -> INT .)
    PRINTLN         reduce using rule 299 (intvalues -> INT .)
    PRINT           reduce using rule 299 (intvalues -> INT .)
    READLINE        reduce using rule 299 (intvalues -> INT .)
    VAR             reduce using rule 299 (intvalues -> INT .)
    VAL             reduce using rule 299 (intvalues -> INT .)
    WHILE           reduce using rule 299 (intvalues -> INT .)
    FOR             reduce using rule 299 (intvalues -> INT .)
    IF              reduce using rule 299 (intvalues -> INT .)
    STRING          reduce using rule 299 (intvalues -> INT .)
    $end            reduce using rule 299 (intvalues -> INT .)
    LLAVE_D         reduce using rule 299 (intvalues -> INT .)
    INT             reduce using rule 299 (intvalues -> INT .)
    LONG            reduce using rule 299 (intvalues -> INT .)
    FLOAT           reduce using rule 299 (intvalues -> INT .)
    DOUBLE          reduce using rule 299 (intvalues -> INT .)
    RETURN          reduce using rule 299 (intvalues -> INT .)
    CASE            reduce using rule 299 (intvalues -> INT .)


state 422

    (322) stringCastInt -> STRING . PUNTO TO_INT

    PUNTO           shift and go to state 504


state 423

    (63) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .

    DEF             reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    IF              reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    $end            reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    INT             reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 63 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)


state 424

    (309) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .

    DEF             reduce using rule 309 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VARIABLE        reduce using rule 309 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    PRINTLN         reduce using rule 309 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    PRINT           reduce using rule 309 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    READLINE        reduce using rule 309 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VAR             reduce using rule 309 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VAL             reduce using rule 309 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    WHILE           reduce using rule 309 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    FOR             reduce using rule 309 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    IF              reduce using rule 309 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    STRING          reduce using rule 309 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    $end            reduce using rule 309 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    LLAVE_D         reduce using rule 309 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    INT             reduce using rule 309 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    LONG            reduce using rule 309 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    FLOAT           reduce using rule 309 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    DOUBLE          reduce using rule 309 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    RETURN          reduce using rule 309 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    CASE            reduce using rule 309 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)


state 425

    (312) floatvalues -> FLOAT .

    DEF             reduce using rule 312 (floatvalues -> FLOAT .)
    VARIABLE        reduce using rule 312 (floatvalues -> FLOAT .)
    PRINTLN         reduce using rule 312 (floatvalues -> FLOAT .)
    PRINT           reduce using rule 312 (floatvalues -> FLOAT .)
    READLINE        reduce using rule 312 (floatvalues -> FLOAT .)
    VAR             reduce using rule 312 (floatvalues -> FLOAT .)
    VAL             reduce using rule 312 (floatvalues -> FLOAT .)
    WHILE           reduce using rule 312 (floatvalues -> FLOAT .)
    FOR             reduce using rule 312 (floatvalues -> FLOAT .)
    IF              reduce using rule 312 (floatvalues -> FLOAT .)
    STRING          reduce using rule 312 (floatvalues -> FLOAT .)
    $end            reduce using rule 312 (floatvalues -> FLOAT .)
    LLAVE_D         reduce using rule 312 (floatvalues -> FLOAT .)
    INT             reduce using rule 312 (floatvalues -> FLOAT .)
    LONG            reduce using rule 312 (floatvalues -> FLOAT .)
    FLOAT           reduce using rule 312 (floatvalues -> FLOAT .)
    DOUBLE          reduce using rule 312 (floatvalues -> FLOAT .)
    RETURN          reduce using rule 312 (floatvalues -> FLOAT .)
    CASE            reduce using rule 312 (floatvalues -> FLOAT .)


state 426

    (313) floatvalues -> longvalues .

    DEF             reduce using rule 313 (floatvalues -> longvalues .)
    VARIABLE        reduce using rule 313 (floatvalues -> longvalues .)
    PRINTLN         reduce using rule 313 (floatvalues -> longvalues .)
    PRINT           reduce using rule 313 (floatvalues -> longvalues .)
    READLINE        reduce using rule 313 (floatvalues -> longvalues .)
    VAR             reduce using rule 313 (floatvalues -> longvalues .)
    VAL             reduce using rule 313 (floatvalues -> longvalues .)
    WHILE           reduce using rule 313 (floatvalues -> longvalues .)
    FOR             reduce using rule 313 (floatvalues -> longvalues .)
    IF              reduce using rule 313 (floatvalues -> longvalues .)
    STRING          reduce using rule 313 (floatvalues -> longvalues .)
    $end            reduce using rule 313 (floatvalues -> longvalues .)
    LLAVE_D         reduce using rule 313 (floatvalues -> longvalues .)
    INT             reduce using rule 313 (floatvalues -> longvalues .)
    LONG            reduce using rule 313 (floatvalues -> longvalues .)
    FLOAT           reduce using rule 313 (floatvalues -> longvalues .)
    DOUBLE          reduce using rule 313 (floatvalues -> longvalues .)
    RETURN          reduce using rule 313 (floatvalues -> longvalues .)
    CASE            reduce using rule 313 (floatvalues -> longvalues .)


state 427

    (324) stringCastFloat -> STRING . PUNTO TO_FLOAT
    (323) stringCastLong -> STRING . PUNTO TO_LONG
    (322) stringCastInt -> STRING . PUNTO TO_INT

    PUNTO           shift and go to state 505


state 428

    (65) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .

    DEF             reduce using rule 65 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 65 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 65 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 65 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 65 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAR             reduce using rule 65 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAL             reduce using rule 65 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 65 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FOR             reduce using rule 65 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    IF              reduce using rule 65 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    STRING          reduce using rule 65 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    $end            reduce using rule 65 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 65 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    INT             reduce using rule 65 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LONG            reduce using rule 65 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 65 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 65 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 65 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    CASE            reduce using rule 65 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)


state 429

    (316) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .

    DEF             reduce using rule 316 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VARIABLE        reduce using rule 316 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    PRINTLN         reduce using rule 316 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    PRINT           reduce using rule 316 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    READLINE        reduce using rule 316 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VAR             reduce using rule 316 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VAL             reduce using rule 316 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    WHILE           reduce using rule 316 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    FOR             reduce using rule 316 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    IF              reduce using rule 316 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    STRING          reduce using rule 316 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    $end            reduce using rule 316 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    LLAVE_D         reduce using rule 316 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    INT             reduce using rule 316 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    LONG            reduce using rule 316 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    FLOAT           reduce using rule 316 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    DOUBLE          reduce using rule 316 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    RETURN          reduce using rule 316 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    CASE            reduce using rule 316 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)


state 430

    (319) doublevalues -> DOUBLE .

    DEF             reduce using rule 319 (doublevalues -> DOUBLE .)
    VARIABLE        reduce using rule 319 (doublevalues -> DOUBLE .)
    PRINTLN         reduce using rule 319 (doublevalues -> DOUBLE .)
    PRINT           reduce using rule 319 (doublevalues -> DOUBLE .)
    READLINE        reduce using rule 319 (doublevalues -> DOUBLE .)
    VAR             reduce using rule 319 (doublevalues -> DOUBLE .)
    VAL             reduce using rule 319 (doublevalues -> DOUBLE .)
    WHILE           reduce using rule 319 (doublevalues -> DOUBLE .)
    FOR             reduce using rule 319 (doublevalues -> DOUBLE .)
    IF              reduce using rule 319 (doublevalues -> DOUBLE .)
    STRING          reduce using rule 319 (doublevalues -> DOUBLE .)
    $end            reduce using rule 319 (doublevalues -> DOUBLE .)
    LLAVE_D         reduce using rule 319 (doublevalues -> DOUBLE .)
    INT             reduce using rule 319 (doublevalues -> DOUBLE .)
    LONG            reduce using rule 319 (doublevalues -> DOUBLE .)
    FLOAT           reduce using rule 319 (doublevalues -> DOUBLE .)
    DOUBLE          reduce using rule 319 (doublevalues -> DOUBLE .)
    RETURN          reduce using rule 319 (doublevalues -> DOUBLE .)
    CASE            reduce using rule 319 (doublevalues -> DOUBLE .)


state 431

    (320) doublevalues -> floatvalues .

    DEF             reduce using rule 320 (doublevalues -> floatvalues .)
    VARIABLE        reduce using rule 320 (doublevalues -> floatvalues .)
    PRINTLN         reduce using rule 320 (doublevalues -> floatvalues .)
    PRINT           reduce using rule 320 (doublevalues -> floatvalues .)
    READLINE        reduce using rule 320 (doublevalues -> floatvalues .)
    VAR             reduce using rule 320 (doublevalues -> floatvalues .)
    VAL             reduce using rule 320 (doublevalues -> floatvalues .)
    WHILE           reduce using rule 320 (doublevalues -> floatvalues .)
    FOR             reduce using rule 320 (doublevalues -> floatvalues .)
    IF              reduce using rule 320 (doublevalues -> floatvalues .)
    STRING          reduce using rule 320 (doublevalues -> floatvalues .)
    $end            reduce using rule 320 (doublevalues -> floatvalues .)
    LLAVE_D         reduce using rule 320 (doublevalues -> floatvalues .)
    INT             reduce using rule 320 (doublevalues -> floatvalues .)
    LONG            reduce using rule 320 (doublevalues -> floatvalues .)
    FLOAT           reduce using rule 320 (doublevalues -> floatvalues .)
    DOUBLE          reduce using rule 320 (doublevalues -> floatvalues .)
    RETURN          reduce using rule 320 (doublevalues -> floatvalues .)
    CASE            reduce using rule 320 (doublevalues -> floatvalues .)


state 432

    (325) stringCastDouble -> STRING . PUNTO TO_DOUBLE
    (324) stringCastFloat -> STRING . PUNTO TO_FLOAT
    (323) stringCastLong -> STRING . PUNTO TO_LONG
    (322) stringCastInt -> STRING . PUNTO TO_INT

    PUNTO           shift and go to state 506


state 433

    (71) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)


state 434

    (68) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .

    DEF             reduce using rule 68 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VARIABLE        reduce using rule 68 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINTLN         reduce using rule 68 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINT           reduce using rule 68 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    READLINE        reduce using rule 68 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAR             reduce using rule 68 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAL             reduce using rule 68 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    WHILE           reduce using rule 68 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FOR             reduce using rule 68 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    IF              reduce using rule 68 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    STRING          reduce using rule 68 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    $end            reduce using rule 68 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LLAVE_D         reduce using rule 68 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    INT             reduce using rule 68 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LONG            reduce using rule 68 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FLOAT           reduce using rule 68 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    DOUBLE          reduce using rule 68 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    RETURN          reduce using rule 68 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    CASE            reduce using rule 68 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)


state 435

    (77) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .

    DEF             reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    IF              reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    $end            reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    INT             reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)


state 436

    (74) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .

    DEF             reduce using rule 74 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VARIABLE        reduce using rule 74 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINTLN         reduce using rule 74 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINT           reduce using rule 74 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    READLINE        reduce using rule 74 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAR             reduce using rule 74 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAL             reduce using rule 74 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    WHILE           reduce using rule 74 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FOR             reduce using rule 74 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    IF              reduce using rule 74 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    STRING          reduce using rule 74 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    $end            reduce using rule 74 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LLAVE_D         reduce using rule 74 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    INT             reduce using rule 74 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LONG            reduce using rule 74 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FLOAT           reduce using rule 74 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    DOUBLE          reduce using rule 74 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    RETURN          reduce using rule 74 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    CASE            reduce using rule 74 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)


state 437

    (83) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .

    DEF             reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    IF              reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    $end            reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    INT             reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)


state 438

    (80) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .

    DEF             reduce using rule 80 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VARIABLE        reduce using rule 80 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINTLN         reduce using rule 80 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINT           reduce using rule 80 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    READLINE        reduce using rule 80 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAR             reduce using rule 80 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAL             reduce using rule 80 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    WHILE           reduce using rule 80 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FOR             reduce using rule 80 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    IF              reduce using rule 80 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    STRING          reduce using rule 80 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    $end            reduce using rule 80 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LLAVE_D         reduce using rule 80 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    INT             reduce using rule 80 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LONG            reduce using rule 80 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FLOAT           reduce using rule 80 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    DOUBLE          reduce using rule 80 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    RETURN          reduce using rule 80 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    CASE            reduce using rule 80 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)


state 439

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 507


state 440

    (266) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS . CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (92) tipo -> INTCLASS .

  ! shift/reduce conflict for CORCHETE_D resolved as shift
    CORCHETE_D      shift and go to state 508

  ! CORCHETE_D      [ reduce using rule 92 (tipo -> INTCLASS .) ]


state 441

    (267) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS . CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (94) tipo -> DOUBLECLASS .

  ! shift/reduce conflict for CORCHETE_D resolved as shift
    CORCHETE_D      shift and go to state 509

  ! CORCHETE_D      [ reduce using rule 94 (tipo -> DOUBLECLASS .) ]


state 442

    (275) dectupla -> PAR_I STRINGCLASS COMA . INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
    (276) dectupla -> PAR_I STRINGCLASS COMA . LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
    (277) dectupla -> PAR_I STRINGCLASS COMA . DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
    (278) dectupla -> PAR_I STRINGCLASS COMA . FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D

    INTCLASS        shift and go to state 510
    LONGCLASS       shift and go to state 511
    DOUBLECLASS     shift and go to state 512
    FLOATCLASS      shift and go to state 513


state 443

    (291) dectupla -> PAR_I INTCLASS COMA . STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
    (292) dectupla -> PAR_I INTCLASS COMA . LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
    (293) dectupla -> PAR_I INTCLASS COMA . DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
    (294) dectupla -> PAR_I INTCLASS COMA . FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    STRINGCLASS     shift and go to state 514
    LONGCLASS       shift and go to state 515
    DOUBLECLASS     shift and go to state 516
    FLOATCLASS      shift and go to state 517


state 444

    (287) dectupla -> PAR_I LONGCLASS COMA . STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
    (288) dectupla -> PAR_I LONGCLASS COMA . INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
    (289) dectupla -> PAR_I LONGCLASS COMA . DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
    (290) dectupla -> PAR_I LONGCLASS COMA . FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D

    STRINGCLASS     shift and go to state 518
    INTCLASS        shift and go to state 519
    DOUBLECLASS     shift and go to state 520
    FLOATCLASS      shift and go to state 521


state 445

    (283) dectupla -> PAR_I DOUBLECLASS COMA . STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
    (284) dectupla -> PAR_I DOUBLECLASS COMA . LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
    (285) dectupla -> PAR_I DOUBLECLASS COMA . FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
    (286) dectupla -> PAR_I DOUBLECLASS COMA . INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D

    STRINGCLASS     shift and go to state 522
    LONGCLASS       shift and go to state 523
    FLOATCLASS      shift and go to state 524
    INTCLASS        shift and go to state 525


state 446

    (279) dectupla -> PAR_I FLOATCLASS COMA . STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
    (280) dectupla -> PAR_I FLOATCLASS COMA . LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
    (281) dectupla -> PAR_I FLOATCLASS COMA . DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
    (282) dectupla -> PAR_I FLOATCLASS COMA . INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D

    STRINGCLASS     shift and go to state 526
    LONGCLASS       shift and go to state 527
    DOUBLECLASS     shift and go to state 528
    INTCLASS        shift and go to state 529


state 447

    (159) array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 530


state 448

    (163) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 531


state 449

    (62) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)


state 450

    (304) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .

    DEF             reduce using rule 304 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VARIABLE        reduce using rule 304 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    PRINTLN         reduce using rule 304 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    PRINT           reduce using rule 304 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    READLINE        reduce using rule 304 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VAR             reduce using rule 304 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VAL             reduce using rule 304 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    WHILE           reduce using rule 304 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    FOR             reduce using rule 304 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    IF              reduce using rule 304 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    STRING          reduce using rule 304 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    $end            reduce using rule 304 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    LLAVE_D         reduce using rule 304 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    INT             reduce using rule 304 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    LONG            reduce using rule 304 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    FLOAT           reduce using rule 304 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    DOUBLE          reduce using rule 304 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    RETURN          reduce using rule 304 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    CASE            reduce using rule 304 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)


state 451

    (298) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .

    DEF             reduce using rule 298 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VARIABLE        reduce using rule 298 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    PRINTLN         reduce using rule 298 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    PRINT           reduce using rule 298 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    READLINE        reduce using rule 298 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VAR             reduce using rule 298 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VAL             reduce using rule 298 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    WHILE           reduce using rule 298 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    FOR             reduce using rule 298 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    IF              reduce using rule 298 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    STRING          reduce using rule 298 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    $end            reduce using rule 298 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    LLAVE_D         reduce using rule 298 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    INT             reduce using rule 298 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    LONG            reduce using rule 298 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    FLOAT           reduce using rule 298 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    DOUBLE          reduce using rule 298 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    RETURN          reduce using rule 298 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    CASE            reduce using rule 298 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)


state 452

    (64) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .

    DEF             reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    IF              reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    $end            reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    INT             reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 64 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)


state 453

    (311) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .

    DEF             reduce using rule 311 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VARIABLE        reduce using rule 311 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    PRINTLN         reduce using rule 311 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    PRINT           reduce using rule 311 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    READLINE        reduce using rule 311 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VAR             reduce using rule 311 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VAL             reduce using rule 311 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    WHILE           reduce using rule 311 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    FOR             reduce using rule 311 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    IF              reduce using rule 311 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    STRING          reduce using rule 311 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    $end            reduce using rule 311 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    LLAVE_D         reduce using rule 311 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    INT             reduce using rule 311 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    LONG            reduce using rule 311 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    FLOAT           reduce using rule 311 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    DOUBLE          reduce using rule 311 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    RETURN          reduce using rule 311 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    CASE            reduce using rule 311 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)


state 454

    (66) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .

    DEF             reduce using rule 66 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 66 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 66 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 66 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 66 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAR             reduce using rule 66 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAL             reduce using rule 66 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 66 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FOR             reduce using rule 66 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    IF              reduce using rule 66 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    STRING          reduce using rule 66 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    $end            reduce using rule 66 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 66 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    INT             reduce using rule 66 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LONG            reduce using rule 66 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 66 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 66 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 66 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    CASE            reduce using rule 66 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)


state 455

    (318) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .

    DEF             reduce using rule 318 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VARIABLE        reduce using rule 318 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    PRINTLN         reduce using rule 318 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    PRINT           reduce using rule 318 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    READLINE        reduce using rule 318 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VAR             reduce using rule 318 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VAL             reduce using rule 318 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    WHILE           reduce using rule 318 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    FOR             reduce using rule 318 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    IF              reduce using rule 318 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    STRING          reduce using rule 318 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    $end            reduce using rule 318 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    LLAVE_D         reduce using rule 318 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    INT             reduce using rule 318 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    LONG            reduce using rule 318 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    FLOAT           reduce using rule 318 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    DOUBLE          reduce using rule 318 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    RETURN          reduce using rule 318 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    CASE            reduce using rule 318 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)


state 456

    (72) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 72 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 72 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 72 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 72 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 72 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 72 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 72 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 72 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 72 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 72 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 72 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 72 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 72 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 72 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 72 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 72 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 72 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 72 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 72 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)


state 457

    (70) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .

    DEF             reduce using rule 70 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VARIABLE        reduce using rule 70 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINTLN         reduce using rule 70 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINT           reduce using rule 70 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    READLINE        reduce using rule 70 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAR             reduce using rule 70 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAL             reduce using rule 70 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    WHILE           reduce using rule 70 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FOR             reduce using rule 70 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    IF              reduce using rule 70 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    STRING          reduce using rule 70 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    $end            reduce using rule 70 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LLAVE_D         reduce using rule 70 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    INT             reduce using rule 70 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LONG            reduce using rule 70 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FLOAT           reduce using rule 70 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    DOUBLE          reduce using rule 70 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    RETURN          reduce using rule 70 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    CASE            reduce using rule 70 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)


state 458

    (78) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .

    DEF             reduce using rule 78 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 78 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 78 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 78 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 78 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 78 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 78 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 78 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 78 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    IF              reduce using rule 78 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 78 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    $end            reduce using rule 78 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 78 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    INT             reduce using rule 78 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 78 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 78 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 78 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 78 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 78 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)


state 459

    (76) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .

    DEF             reduce using rule 76 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VARIABLE        reduce using rule 76 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINTLN         reduce using rule 76 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINT           reduce using rule 76 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    READLINE        reduce using rule 76 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAR             reduce using rule 76 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAL             reduce using rule 76 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    WHILE           reduce using rule 76 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FOR             reduce using rule 76 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    IF              reduce using rule 76 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    STRING          reduce using rule 76 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    $end            reduce using rule 76 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LLAVE_D         reduce using rule 76 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    INT             reduce using rule 76 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LONG            reduce using rule 76 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FLOAT           reduce using rule 76 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    DOUBLE          reduce using rule 76 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    RETURN          reduce using rule 76 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    CASE            reduce using rule 76 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)


state 460

    (84) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .

    DEF             reduce using rule 84 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 84 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 84 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 84 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 84 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 84 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 84 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 84 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 84 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    IF              reduce using rule 84 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 84 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    $end            reduce using rule 84 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 84 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    INT             reduce using rule 84 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 84 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 84 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 84 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 84 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 84 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)


state 461

    (82) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .

    DEF             reduce using rule 82 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VARIABLE        reduce using rule 82 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINTLN         reduce using rule 82 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINT           reduce using rule 82 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    READLINE        reduce using rule 82 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAR             reduce using rule 82 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAL             reduce using rule 82 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    WHILE           reduce using rule 82 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FOR             reduce using rule 82 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    IF              reduce using rule 82 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    STRING          reduce using rule 82 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    $end            reduce using rule 82 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LLAVE_D         reduce using rule 82 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    INT             reduce using rule 82 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LONG            reduce using rule 82 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FLOAT           reduce using rule 82 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    DOUBLE          reduce using rule 82 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    RETURN          reduce using rule 82 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    CASE            reduce using rule 82 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)


state 462

    (160) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 532


state 463

    (164) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo . CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo . CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    CORCHETE_D      shift and go to state 533


state 464

    (171) while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 534


state 465

    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 535


state 466

    (176) for -> FOR PAR_I VAR VARIABLE ITERATOR INT . TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> FOR PAR_I VAR VARIABLE ITERATOR INT . UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    TO              shift and go to state 536
    UNTIL           shift and go to state 537


state 467

    (173) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 538


state 468

    (174) for -> FOR PAR_I VARIABLE ITERATOR INT TO . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 539


state 469

    (175) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 540


state 470

    (217) if -> IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 541


state 471

    (272) startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .

    $end            reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    LLAVE_D         reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    COMA            reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    PAR_D           reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    MAS             reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    IGUAL_COMPARACION reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    DIFERENTE       reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    MAYOR           reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    MENOR           reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    AND             reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    OR              reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    NOT             reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    DEF             reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    VARIABLE        reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    PRINTLN         reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    PRINT           reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    READLINE        reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    VAR             reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    VAL             reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    WHILE           reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    FOR             reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    IF              reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    STRING          reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    INT             reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    LONG            reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    FLOAT           reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    DOUBLE          reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    RETURN          reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    CASE            reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    FUNCION_FLECHA  reduce using rule 272 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)


state 472

    (214) defcase -> CASE SUBGUION FUNCION_FLECHA . codeBlock
    (215) codeBlock -> . contenidoLine
    (216) codeBlock -> . LLAVE_I contenido LLAVE_D
    (41) contenidoLine -> . asignacion
    (42) contenidoLine -> . reasignacion
    (43) contenidoLine -> . funcall
    (44) contenidoLine -> . impresion
    (45) contenidoLine -> . entrada
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_I         shift and go to state 475
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 481
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 542
    contenidoLine                  shift and go to state 474
    asignacion                     shift and go to state 476
    reasignacion                   shift and go to state 477
    funcall                        shift and go to state 478
    impresion                      shift and go to state 479
    entrada                        shift and go to state 480
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 473

    (186) caseInt -> CASE INT FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 186 (caseInt -> CASE INT FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 186 (caseInt -> CASE INT FUNCION_FLECHA codeBlock .)


state 474

    (215) codeBlock -> contenidoLine .

    CASE            reduce using rule 215 (codeBlock -> contenidoLine .)
    LLAVE_D         reduce using rule 215 (codeBlock -> contenidoLine .)


state 475

    (216) codeBlock -> LLAVE_I . contenido LLAVE_D
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 543
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 476

    (41) contenidoLine -> asignacion .

    CASE            reduce using rule 41 (contenidoLine -> asignacion .)
    LLAVE_D         reduce using rule 41 (contenidoLine -> asignacion .)


state 477

    (42) contenidoLine -> reasignacion .

    CASE            reduce using rule 42 (contenidoLine -> reasignacion .)
    LLAVE_D         reduce using rule 42 (contenidoLine -> reasignacion .)


state 478

    (43) contenidoLine -> funcall .

    CASE            reduce using rule 43 (contenidoLine -> funcall .)
    LLAVE_D         reduce using rule 43 (contenidoLine -> funcall .)


state 479

    (44) contenidoLine -> impresion .

    CASE            reduce using rule 44 (contenidoLine -> impresion .)
    LLAVE_D         reduce using rule 44 (contenidoLine -> impresion .)


state 480

    (45) contenidoLine -> entrada .

    CASE            reduce using rule 45 (contenidoLine -> entrada .)
    LLAVE_D         reduce using rule 45 (contenidoLine -> entrada .)


state 481

    (85) reasignacion -> VARIABLE . IGUAL valor
    (86) reasignacion -> VARIABLE . IGUAL returnfun
    (87) reasignacion -> VARIABLE . IGUAL aritmetica
    (88) reasignacion -> VARIABLE . PAR_I INT PAR_D IGUAL valor
    (142) funcall -> VARIABLE . varparen
    (143) varparen -> . PAR_I valores PAR_D
    (144) varparen -> . PAR_I PAR_D
    (145) varparen -> . varparen PAR_I valores PAR_D
    (146) varparen -> . varparen PAR_I PAR_D

    IGUAL           shift and go to state 294
    PAR_I           shift and go to state 295

    varparen                       shift and go to state 38

state 482

    (190) caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 190 (caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 190 (caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .)


state 483

    (194) caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 194 (caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 194 (caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .)


state 484

    (198) caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 198 (caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 198 (caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .)


state 485

    (202) caseStr -> CASE STRING FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 202 (caseStr -> CASE STRING FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 202 (caseStr -> CASE STRING FUNCION_FLECHA codeBlock .)


state 486

    (206) caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 206 (caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 206 (caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .)


state 487

    (210) caseBool -> CASE booleanos FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 210 (caseBool -> CASE booleanos FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 210 (caseBool -> CASE booleanos FUNCION_FLECHA codeBlock .)


state 488

    (4) io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO . READLINE

    READLINE        shift and go to state 544


state 489

    (220) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (221) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D elseif
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 545
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 490

    (103) valor -> VARIABLE PAR_I . VARIABLE PAR_D
    (104) valor -> VARIABLE PAR_I . INT PAR_D
    (143) varparen -> PAR_I . valores PAR_D
    (144) varparen -> PAR_I . PAR_D
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (98) valor -> . STRING
    (99) valor -> . CHAR
    (100) valor -> . VARIABLE
    (101) valor -> . numeros
    (102) valor -> . booleanos
    (103) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (104) valor -> . VARIABLE PAR_I INT PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    VARIABLE        shift and go to state 546
    INT             shift and go to state 547
    PAR_D           shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valores                        shift and go to state 65
    valor                          shift and go to state 67
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72
    startsWith                     shift and go to state 79

state 491

    (88) reasignacion -> VARIABLE PAR_I INT PAR_D . IGUAL valor

    IGUAL           shift and go to state 548


state 492

    (112) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 112 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 112 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 112 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 112 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 112 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 112 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 112 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 112 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 112 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 112 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 112 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 112 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 112 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)


state 493

    (120) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN valor LLAVE_D
    (121) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN VARIABLE LLAVE_D
    (122) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN returnfun LLAVE_D
    (123) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN aritmetica LLAVE_D

    RETURN          shift and go to state 549


state 494

    (124) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN . valor LLAVE_D
    (125) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN . VARIABLE LLAVE_D
    (126) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN . returnfun LLAVE_D
    (127) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN . aritmetica LLAVE_D
    (98) valor -> . STRING
    (99) valor -> . CHAR
    (100) valor -> . VARIABLE
    (101) valor -> . numeros
    (102) valor -> . booleanos
    (103) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (104) valor -> . VARIABLE PAR_I INT PAR_D
    (147) returnfun -> . returnCastable
    (148) returnfun -> . castingcall
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (149) returnCastable -> . entrada
    (150) returnCastable -> . funcall
    (151) castingcall -> . returnCastable PUNTO castingfun
    (152) castingcall -> . VARIABLE PUNTO castingfun
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (142) funcall -> . VARIABLE varparen

    VARIABLE        shift and go to state 550
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    READLINE        shift and go to state 19

    valor                          shift and go to state 551
    returnfun                      shift and go to state 552
    aritmetica                     shift and go to state 553
    numeros                        shift and go to state 390
    booleanos                      shift and go to state 72
    returnCastable                 shift and go to state 173
    castingcall                    shift and go to state 174
    startsWith                     shift and go to state 79
    entrada                        shift and go to state 182
    funcall                        shift and go to state 183

state 495

    (128) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN tuple LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN returnfun LLAVE_D

    RETURN          shift and go to state 554


state 496

    (132) dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D .

    IGUAL           reduce using rule 132 (dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D .)


state 497

    (134) tipos -> tipo tiposentry .

    PAR_D           reduce using rule 134 (tipos -> tipo tiposentry .)


state 498

    (135) tiposentry -> COMA . tipo
    (136) tiposentry -> COMA . tipo tiposentry
    (89) tipo -> . CHARCLASS
    (90) tipo -> . STRINGCLASS
    (91) tipo -> . BOOLCLASS
    (92) tipo -> . INTCLASS
    (93) tipo -> . LONGCLASS
    (94) tipo -> . DOUBLECLASS
    (95) tipo -> . FLOATCLASS
    (96) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (97) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 302
    STRINGCLASS     shift and go to state 303
    BOOLCLASS       shift and go to state 304
    INTCLASS        shift and go to state 305
    LONGCLASS       shift and go to state 306
    DOUBLECLASS     shift and go to state 307
    FLOATCLASS      shift and go to state 308
    ARRAYCLASS      shift and go to state 309
    LISTCLASS       shift and go to state 310

    tipo                           shift and go to state 555

state 499

    (96) tipo -> ARRAYCLASS CORCHETE_I tipo . CORCHETE_D

    CORCHETE_D      shift and go to state 556


state 500

    (97) tipo -> LISTCLASS CORCHETE_I tipo . CORCHETE_D

    CORCHETE_D      shift and go to state 557


state 501

    (115) declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL . valor
    (98) valor -> . STRING
    (99) valor -> . CHAR
    (100) valor -> . VARIABLE
    (101) valor -> . numeros
    (102) valor -> . booleanos
    (103) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (104) valor -> . VARIABLE PAR_I INT PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valor                          shift and go to state 558
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72
    startsWith                     shift and go to state 79

state 502

    (157) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    STRING          reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 157 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 503

    (323) stringCastLong -> STRING PUNTO . TO_LONG
    (322) stringCastInt -> STRING PUNTO . TO_INT

    TO_LONG         shift and go to state 408
    TO_INT          shift and go to state 409


state 504

    (322) stringCastInt -> STRING PUNTO . TO_INT

    TO_INT          shift and go to state 409


state 505

    (324) stringCastFloat -> STRING PUNTO . TO_FLOAT
    (323) stringCastLong -> STRING PUNTO . TO_LONG
    (322) stringCastInt -> STRING PUNTO . TO_INT

    TO_FLOAT        shift and go to state 410
    TO_LONG         shift and go to state 408
    TO_INT          shift and go to state 409


state 506

    (325) stringCastDouble -> STRING PUNTO . TO_DOUBLE
    (324) stringCastFloat -> STRING PUNTO . TO_FLOAT
    (323) stringCastLong -> STRING PUNTO . TO_LONG
    (322) stringCastInt -> STRING PUNTO . TO_INT

    TO_DOUBLE       shift and go to state 411
    TO_FLOAT        shift and go to state 410
    TO_LONG         shift and go to state 408
    TO_INT          shift and go to state 409


state 507

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    IGUAL           shift and go to state 559


state 508

    (266) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D . IGUAL ARRAYCLASS PAR_I valoresInt PAR_D

    IGUAL           shift and go to state 560


state 509

    (267) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D . IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    IGUAL           shift and go to state 561


state 510

    (275) dectupla -> PAR_I STRINGCLASS COMA INTCLASS . PAR_D IGUAL PAR_I STRING COMA INT PAR_D

    PAR_D           shift and go to state 562


state 511

    (276) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS . PAR_D IGUAL PAR_I STRING COMA LONG PAR_D

    PAR_D           shift and go to state 563


state 512

    (277) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS . PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D

    PAR_D           shift and go to state 564


state 513

    (278) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS . PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D

    PAR_D           shift and go to state 565


state 514

    (291) dectupla -> PAR_I INTCLASS COMA STRINGCLASS . PAR_D IGUAL PAR_I INT COMA STRING PAR_D

    PAR_D           shift and go to state 566


state 515

    (292) dectupla -> PAR_I INTCLASS COMA LONGCLASS . PAR_D IGUAL PAR_I INT COMA LONG PAR_D

    PAR_D           shift and go to state 567


state 516

    (293) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS . PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D

    PAR_D           shift and go to state 568


state 517

    (294) dectupla -> PAR_I INTCLASS COMA FLOATCLASS . PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    PAR_D           shift and go to state 569


state 518

    (287) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS . PAR_D IGUAL PAR_I LONG COMA STRING PAR_D

    PAR_D           shift and go to state 570


state 519

    (288) dectupla -> PAR_I LONGCLASS COMA INTCLASS . PAR_D IGUAL PAR_I LONG COMA INT PAR_D

    PAR_D           shift and go to state 571


state 520

    (289) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS . PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D

    PAR_D           shift and go to state 572


state 521

    (290) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS . PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D

    PAR_D           shift and go to state 573


state 522

    (283) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS . PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D

    PAR_D           shift and go to state 574


state 523

    (284) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS . PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D

    PAR_D           shift and go to state 575


state 524

    (285) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS . PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D

    PAR_D           shift and go to state 576


state 525

    (286) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS . PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D

    PAR_D           shift and go to state 577


state 526

    (279) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS . PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D

    PAR_D           shift and go to state 578


state 527

    (280) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS . PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D

    PAR_D           shift and go to state 579


state 528

    (281) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS . PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D

    PAR_D           shift and go to state 580


state 529

    (282) dectupla -> PAR_I FLOATCLASS COMA INTCLASS . PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D

    PAR_D           shift and go to state 581


state 530

    (159) array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 159 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 159 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 159 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 159 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 159 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 159 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 159 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 159 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 159 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 159 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    STRING          reduce using rule 159 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 159 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 159 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 159 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 159 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 159 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 159 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 159 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 159 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 531

    (163) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    STRING          reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 163 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)


state 532

    (160) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    IGUAL           shift and go to state 582


state 533

    (164) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D . IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D . IGUAL LISTCLASS PAR_I valores PAR_D

    IGUAL           shift and go to state 583


state 534

    (171) while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 171 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 171 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 171 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 171 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 171 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 171 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 171 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 171 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 171 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 171 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 171 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 171 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 171 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 171 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 171 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 171 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 171 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 171 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)


state 535

    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 584


state 536

    (176) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 585


state 537

    (177) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 586


state 538

    (173) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I . contenido LLAVE_D
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 587
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 539

    (174) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 588


state 540

    (175) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 589


state 541

    (217) if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .

    ELSE            reduce using rule 217 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 217 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 217 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 217 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 217 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 217 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 217 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 217 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 217 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 217 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 217 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 217 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 217 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 217 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 217 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 217 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 217 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 217 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 217 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)


state 542

    (214) defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock .

    LLAVE_D         reduce using rule 214 (defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock .)


state 543

    (216) codeBlock -> LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 590


state 544

    (4) io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .

    OBJECT          reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    IMPORT          reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    DEF             reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    VARIABLE        reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    PRINTLN         reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    PRINT           reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    READLINE        reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    VAR             reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    VAL             reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    WHILE           reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    FOR             reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    IF              reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    STRING          reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)


state 545

    (220) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D
    (221) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D elseif

    LLAVE_D         shift and go to state 591


state 546

    (103) valor -> VARIABLE PAR_I VARIABLE . PAR_D
    (100) valor -> VARIABLE .
    (103) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (104) valor -> VARIABLE . PAR_I INT PAR_D

  ! shift/reduce conflict for PAR_D resolved as shift
    PAR_D           shift and go to state 382
    COMA            reduce using rule 100 (valor -> VARIABLE .)
    PAR_I           shift and go to state 133

  ! PAR_D           [ reduce using rule 100 (valor -> VARIABLE .) ]


state 547

    (104) valor -> VARIABLE PAR_I INT . PAR_D
    (108) numeros -> INT .

  ! shift/reduce conflict for PAR_D resolved as shift
    PAR_D           shift and go to state 383
    COMA            reduce using rule 108 (numeros -> INT .)

  ! PAR_D           [ reduce using rule 108 (numeros -> INT .) ]


state 548

    (88) reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL . valor
    (98) valor -> . STRING
    (99) valor -> . CHAR
    (100) valor -> . VARIABLE
    (101) valor -> . numeros
    (102) valor -> . booleanos
    (103) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (104) valor -> . VARIABLE PAR_I INT PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valor                          shift and go to state 592
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72
    startsWith                     shift and go to state 79

state 549

    (120) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . valor LLAVE_D
    (121) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . VARIABLE LLAVE_D
    (122) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . returnfun LLAVE_D
    (123) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . aritmetica LLAVE_D
    (98) valor -> . STRING
    (99) valor -> . CHAR
    (100) valor -> . VARIABLE
    (101) valor -> . numeros
    (102) valor -> . booleanos
    (103) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (104) valor -> . VARIABLE PAR_I INT PAR_D
    (147) returnfun -> . returnCastable
    (148) returnfun -> . castingcall
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (149) returnCastable -> . entrada
    (150) returnCastable -> . funcall
    (151) castingcall -> . returnCastable PUNTO castingfun
    (152) castingcall -> . VARIABLE PUNTO castingfun
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (142) funcall -> . VARIABLE varparen

    VARIABLE        shift and go to state 593
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    READLINE        shift and go to state 19

    valor                          shift and go to state 594
    returnfun                      shift and go to state 595
    aritmetica                     shift and go to state 596
    numeros                        shift and go to state 390
    booleanos                      shift and go to state 72
    returnCastable                 shift and go to state 173
    castingcall                    shift and go to state 174
    startsWith                     shift and go to state 79
    entrada                        shift and go to state 182
    funcall                        shift and go to state 183

state 550

    (125) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE . LLAVE_D
    (100) valor -> VARIABLE .
    (103) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (104) valor -> VARIABLE . PAR_I INT PAR_D
    (256) aritmetica -> VARIABLE . aritmeticos numeros
    (258) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (152) castingcall -> VARIABLE . PUNTO castingfun
    (142) funcall -> VARIABLE . varparen
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD
    (143) varparen -> . PAR_I valores PAR_D
    (144) varparen -> . PAR_I PAR_D
    (145) varparen -> . varparen PAR_I valores PAR_D
    (146) varparen -> . varparen PAR_I PAR_D

  ! shift/reduce conflict for LLAVE_D resolved as shift
    LLAVE_D         shift and go to state 597
    PAR_I           shift and go to state 490
    PUNTO           shift and go to state 314
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232

  ! LLAVE_D         [ reduce using rule 100 (valor -> VARIABLE .) ]

    aritmeticos                    shift and go to state 223
    varparen                       shift and go to state 38

state 551

    (124) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor . LLAVE_D

    LLAVE_D         shift and go to state 598


state 552

    (126) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun . LLAVE_D

    LLAVE_D         shift and go to state 599


state 553

    (127) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica . LLAVE_D
    (259) aritmetica -> aritmetica . aritmeticos numeros
    (260) aritmetica -> aritmetica . aritmeticos VARIABLE
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD

    LLAVE_D         shift and go to state 600
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232

    aritmeticos                    shift and go to state 240

state 554

    (128) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . tuple LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . returnfun LLAVE_D
    (168) tuple -> . PAR_I valores PAR_D
    (147) returnfun -> . returnCastable
    (148) returnfun -> . castingcall
    (149) returnCastable -> . entrada
    (150) returnCastable -> . funcall
    (151) castingcall -> . returnCastable PUNTO castingfun
    (152) castingcall -> . VARIABLE PUNTO castingfun
    (141) entrada -> . READLINE PAR_I PAR_D
    (142) funcall -> . VARIABLE varparen

    VARIABLE        shift and go to state 601
    PAR_I           shift and go to state 172
    READLINE        shift and go to state 19

    tuple                          shift and go to state 602
    returnfun                      shift and go to state 603
    returnCastable                 shift and go to state 173
    castingcall                    shift and go to state 174
    entrada                        shift and go to state 182
    funcall                        shift and go to state 183

state 555

    (135) tiposentry -> COMA tipo .
    (136) tiposentry -> COMA tipo . tiposentry
    (135) tiposentry -> . COMA tipo
    (136) tiposentry -> . COMA tipo tiposentry

    PAR_D           reduce using rule 135 (tiposentry -> COMA tipo .)
    COMA            shift and go to state 498

    tiposentry                     shift and go to state 604

state 556

    (96) tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .

    IGUAL           reduce using rule 96 (tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .)
    COMA            reduce using rule 96 (tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .)
    PAR_D           reduce using rule 96 (tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .)
    CORCHETE_D      reduce using rule 96 (tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .)


state 557

    (97) tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .

    IGUAL           reduce using rule 97 (tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .)
    COMA            reduce using rule 97 (tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .)
    PAR_D           reduce using rule 97 (tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .)
    CORCHETE_D      reduce using rule 97 (tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .)


state 558

    (115) declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor .

    PAR_D           reduce using rule 115 (declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor .)


state 559

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    NEW             shift and go to state 605


state 560

    (266) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL . ARRAYCLASS PAR_I valoresInt PAR_D

    ARRAYCLASS      shift and go to state 606


state 561

    (267) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL . ARRAYCLASS PAR_I valoresDouble PAR_D

    ARRAYCLASS      shift and go to state 607


state 562

    (275) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D . IGUAL PAR_I STRING COMA INT PAR_D

    IGUAL           shift and go to state 608


state 563

    (276) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D . IGUAL PAR_I STRING COMA LONG PAR_D

    IGUAL           shift and go to state 609


state 564

    (277) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D . IGUAL PAR_I STRING COMA DOUBLE PAR_D

    IGUAL           shift and go to state 610


state 565

    (278) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D . IGUAL PAR_I STRING COMA FLOAT PAR_D

    IGUAL           shift and go to state 611


state 566

    (291) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D . IGUAL PAR_I INT COMA STRING PAR_D

    IGUAL           shift and go to state 612


state 567

    (292) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D . IGUAL PAR_I INT COMA LONG PAR_D

    IGUAL           shift and go to state 613


state 568

    (293) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D . IGUAL PAR_I INT COMA DOUBLE PAR_D

    IGUAL           shift and go to state 614


state 569

    (294) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D . IGUAL PAR_I INT COMA FLOAT PAR_D

    IGUAL           shift and go to state 615


state 570

    (287) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D . IGUAL PAR_I LONG COMA STRING PAR_D

    IGUAL           shift and go to state 616


state 571

    (288) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D . IGUAL PAR_I LONG COMA INT PAR_D

    IGUAL           shift and go to state 617


state 572

    (289) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D . IGUAL PAR_I LONG COMA DOUBLE PAR_D

    IGUAL           shift and go to state 618


state 573

    (290) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D . IGUAL PAR_I LONG COMA FLOAT PAR_D

    IGUAL           shift and go to state 619


state 574

    (283) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D . IGUAL PAR_I DOUBLE COMA STRING PAR_D

    IGUAL           shift and go to state 620


state 575

    (284) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D . IGUAL PAR_I DOUBLE COMA LONG PAR_D

    IGUAL           shift and go to state 621


state 576

    (285) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D . IGUAL PAR_I DOUBLE COMA FLOAT PAR_D

    IGUAL           shift and go to state 622


state 577

    (286) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D . IGUAL PAR_I DOUBLE COMA INT PAR_D

    IGUAL           shift and go to state 623


state 578

    (279) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D . IGUAL PAR_I FLOAT COMA STRING PAR_D

    IGUAL           shift and go to state 624


state 579

    (280) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D . IGUAL PAR_I FLOAT COMA LONG PAR_D

    IGUAL           shift and go to state 625


state 580

    (281) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D . IGUAL PAR_I FLOAT COMA DOUBLE PAR_D

    IGUAL           shift and go to state 626


state 581

    (282) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D . IGUAL PAR_I FLOAT COMA INT PAR_D

    IGUAL           shift and go to state 627


state 582

    (160) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    NEW             shift and go to state 628


state 583

    (164) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL . NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL . LISTCLASS PAR_I valores PAR_D

    NEW             shift and go to state 630
    LISTCLASS       shift and go to state 629


state 584

    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I . contenido LLAVE_D
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 631
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 585

    (176) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 632


state 586

    (177) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 633


state 587

    (173) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 634


state 588

    (174) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 635


state 589

    (175) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 636


state 590

    (216) codeBlock -> LLAVE_I contenido LLAVE_D .

    CASE            reduce using rule 216 (codeBlock -> LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 216 (codeBlock -> LLAVE_I contenido LLAVE_D .)


state 591

    (220) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .
    (221) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D . elseif
    (220) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

  ! shift/reduce conflict for ELSE resolved as shift
    DEF             reduce using rule 220 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 220 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 220 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 220 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 220 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 220 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 220 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 220 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 220 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 220 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 220 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 220 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 220 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 220 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 220 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 220 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 220 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 220 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    ELSE            shift and go to state 637

  ! ELSE            [ reduce using rule 220 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .) ]

    elseif                         shift and go to state 638

state 592

    (88) reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .

    VAR             reduce using rule 88 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    VAL             reduce using rule 88 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    VARIABLE        reduce using rule 88 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    PRINTLN         reduce using rule 88 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    PRINT           reduce using rule 88 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    READLINE        reduce using rule 88 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    WHILE           reduce using rule 88 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    FOR             reduce using rule 88 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    IF              reduce using rule 88 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    INT             reduce using rule 88 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    LONG            reduce using rule 88 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    FLOAT           reduce using rule 88 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    DOUBLE          reduce using rule 88 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    LLAVE_D         reduce using rule 88 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    RETURN          reduce using rule 88 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    CASE            reduce using rule 88 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)


state 593

    (121) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE . LLAVE_D
    (100) valor -> VARIABLE .
    (103) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (104) valor -> VARIABLE . PAR_I INT PAR_D
    (256) aritmetica -> VARIABLE . aritmeticos numeros
    (258) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (152) castingcall -> VARIABLE . PUNTO castingfun
    (142) funcall -> VARIABLE . varparen
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD
    (143) varparen -> . PAR_I valores PAR_D
    (144) varparen -> . PAR_I PAR_D
    (145) varparen -> . varparen PAR_I valores PAR_D
    (146) varparen -> . varparen PAR_I PAR_D

  ! shift/reduce conflict for LLAVE_D resolved as shift
    LLAVE_D         shift and go to state 639
    PAR_I           shift and go to state 490
    PUNTO           shift and go to state 314
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232

  ! LLAVE_D         [ reduce using rule 100 (valor -> VARIABLE .) ]

    aritmeticos                    shift and go to state 223
    varparen                       shift and go to state 38

state 594

    (120) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor . LLAVE_D

    LLAVE_D         shift and go to state 640


state 595

    (122) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun . LLAVE_D

    LLAVE_D         shift and go to state 641


state 596

    (123) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica . LLAVE_D
    (259) aritmetica -> aritmetica . aritmeticos numeros
    (260) aritmetica -> aritmetica . aritmeticos VARIABLE
    (261) aritmeticos -> . MENOS
    (262) aritmeticos -> . MAS
    (263) aritmeticos -> . MULTIPLICACION
    (264) aritmeticos -> . DIVISION
    (265) aritmeticos -> . MOD

    LLAVE_D         shift and go to state 642
    MENOS           shift and go to state 228
    MAS             shift and go to state 229
    MULTIPLICACION  shift and go to state 230
    DIVISION        shift and go to state 231
    MOD             shift and go to state 232

    aritmeticos                    shift and go to state 240

state 597

    (125) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .

    DEF             reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    VARIABLE        reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    PRINTLN         reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    PRINT           reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    READLINE        reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    VAR             reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    VAL             reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    WHILE           reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    FOR             reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    IF              reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    STRING          reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    $end            reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    LLAVE_D         reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)


state 598

    (124) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .

    DEF             reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    VARIABLE        reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    PRINTLN         reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    PRINT           reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    READLINE        reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    VAR             reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    VAL             reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    WHILE           reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    FOR             reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    IF              reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    STRING          reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    $end            reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    LLAVE_D         reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)


state 599

    (126) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .

    DEF             reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    VARIABLE        reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    PRINTLN         reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    PRINT           reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    READLINE        reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    VAR             reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    VAL             reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    WHILE           reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    FOR             reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    IF              reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    STRING          reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    $end            reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    LLAVE_D         reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)


state 600

    (127) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .

    DEF             reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    VARIABLE        reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    PRINTLN         reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    PRINT           reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    READLINE        reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    VAR             reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    VAL             reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    WHILE           reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    FOR             reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    IF              reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    STRING          reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    $end            reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    LLAVE_D         reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)


state 601

    (129) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE . LLAVE_D
    (152) castingcall -> VARIABLE . PUNTO castingfun
    (142) funcall -> VARIABLE . varparen
    (143) varparen -> . PAR_I valores PAR_D
    (144) varparen -> . PAR_I PAR_D
    (145) varparen -> . varparen PAR_I valores PAR_D
    (146) varparen -> . varparen PAR_I PAR_D

    LLAVE_D         shift and go to state 643
    PUNTO           shift and go to state 314
    PAR_I           shift and go to state 40

    varparen                       shift and go to state 38

state 602

    (128) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple . LLAVE_D

    LLAVE_D         shift and go to state 644


state 603

    (130) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun . LLAVE_D

    LLAVE_D         shift and go to state 645


state 604

    (136) tiposentry -> COMA tipo tiposentry .

    PAR_D           reduce using rule 136 (tiposentry -> COMA tipo tiposentry .)


state 605

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW . ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    ARRAYCLASS      shift and go to state 646


state 606

    (266) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS . PAR_I valoresInt PAR_D

    PAR_I           shift and go to state 647


state 607

    (267) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS . PAR_I valoresDouble PAR_D

    PAR_I           shift and go to state 648


state 608

    (275) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL . PAR_I STRING COMA INT PAR_D

    PAR_I           shift and go to state 649


state 609

    (276) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL . PAR_I STRING COMA LONG PAR_D

    PAR_I           shift and go to state 650


state 610

    (277) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL . PAR_I STRING COMA DOUBLE PAR_D

    PAR_I           shift and go to state 651


state 611

    (278) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL . PAR_I STRING COMA FLOAT PAR_D

    PAR_I           shift and go to state 652


state 612

    (291) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL . PAR_I INT COMA STRING PAR_D

    PAR_I           shift and go to state 653


state 613

    (292) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL . PAR_I INT COMA LONG PAR_D

    PAR_I           shift and go to state 654


state 614

    (293) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL . PAR_I INT COMA DOUBLE PAR_D

    PAR_I           shift and go to state 655


state 615

    (294) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL . PAR_I INT COMA FLOAT PAR_D

    PAR_I           shift and go to state 656


state 616

    (287) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL . PAR_I LONG COMA STRING PAR_D

    PAR_I           shift and go to state 657


state 617

    (288) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL . PAR_I LONG COMA INT PAR_D

    PAR_I           shift and go to state 658


state 618

    (289) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL . PAR_I LONG COMA DOUBLE PAR_D

    PAR_I           shift and go to state 659


state 619

    (290) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL . PAR_I LONG COMA FLOAT PAR_D

    PAR_I           shift and go to state 660


state 620

    (283) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL . PAR_I DOUBLE COMA STRING PAR_D

    PAR_I           shift and go to state 661


state 621

    (284) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL . PAR_I DOUBLE COMA LONG PAR_D

    PAR_I           shift and go to state 662


state 622

    (285) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL . PAR_I DOUBLE COMA FLOAT PAR_D

    PAR_I           shift and go to state 663


state 623

    (286) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL . PAR_I DOUBLE COMA INT PAR_D

    PAR_I           shift and go to state 664


state 624

    (279) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL . PAR_I FLOAT COMA STRING PAR_D

    PAR_I           shift and go to state 665


state 625

    (280) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL . PAR_I FLOAT COMA LONG PAR_D

    PAR_I           shift and go to state 666


state 626

    (281) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL . PAR_I FLOAT COMA DOUBLE PAR_D

    PAR_I           shift and go to state 667


state 627

    (282) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL . PAR_I FLOAT COMA INT PAR_D

    PAR_I           shift and go to state 668


state 628

    (160) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW . ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    ARRAYCLASS      shift and go to state 669


state 629

    (165) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 670


state 630

    (164) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW . LISTCLASS PAR_I valores PAR_D

    LISTCLASS       shift and go to state 671


state 631

    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 672


state 632

    (176) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 673


state 633

    (177) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 674


state 634

    (173) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 173 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 173 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 173 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 173 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 173 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 173 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 173 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 173 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 173 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 173 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 173 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 173 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 173 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 173 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 173 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 173 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 173 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 173 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)


state 635

    (174) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I . contenido LLAVE_D
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 675
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 636

    (175) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I . contenido LLAVE_D
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 676
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 637

    (220) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    IF              shift and go to state 85


state 638

    (221) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .

    ELSE            reduce using rule 221 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    DEF             reduce using rule 221 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    VARIABLE        reduce using rule 221 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    PRINTLN         reduce using rule 221 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    PRINT           reduce using rule 221 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    READLINE        reduce using rule 221 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    VAR             reduce using rule 221 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    VAL             reduce using rule 221 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    WHILE           reduce using rule 221 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    FOR             reduce using rule 221 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    IF              reduce using rule 221 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    STRING          reduce using rule 221 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    $end            reduce using rule 221 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    LLAVE_D         reduce using rule 221 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    INT             reduce using rule 221 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    LONG            reduce using rule 221 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    FLOAT           reduce using rule 221 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    DOUBLE          reduce using rule 221 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    RETURN          reduce using rule 221 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)


state 639

    (121) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .

    DEF             reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VARIABLE        reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINTLN         reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINT           reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    READLINE        reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAR             reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAL             reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    WHILE           reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    FOR             reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    IF              reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    STRING          reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    $end            reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    LLAVE_D         reduce using rule 121 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)


state 640

    (120) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .

    DEF             reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VARIABLE        reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    PRINTLN         reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    PRINT           reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    READLINE        reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAR             reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAL             reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    WHILE           reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    FOR             reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    IF              reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    STRING          reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    $end            reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    LLAVE_D         reduce using rule 120 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)


state 641

    (122) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .

    DEF             reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VARIABLE        reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINTLN         reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINT           reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    READLINE        reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAR             reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAL             reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    WHILE           reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    FOR             reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    IF              reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    STRING          reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    $end            reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    LLAVE_D         reduce using rule 122 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)


state 642

    (123) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .

    DEF             reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    VARIABLE        reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    PRINTLN         reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    PRINT           reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    READLINE        reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    VAR             reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    VAL             reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    WHILE           reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    FOR             reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    IF              reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    STRING          reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    $end            reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    LLAVE_D         reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)


state 643

    (129) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .

    DEF             reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VARIABLE        reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINTLN         reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINT           reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    READLINE        reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAR             reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAL             reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    WHILE           reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    FOR             reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    IF              reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    STRING          reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    $end            reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    LLAVE_D         reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)


state 644

    (128) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .

    DEF             reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    VARIABLE        reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    PRINTLN         reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    PRINT           reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    READLINE        reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    VAR             reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    VAL             reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    WHILE           reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    FOR             reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    IF              reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    STRING          reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    $end            reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    LLAVE_D         reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)


state 645

    (130) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .

    DEF             reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VARIABLE        reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINTLN         reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINT           reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    READLINE        reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAR             reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAL             reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    WHILE           reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    FOR             reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    IF              reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    STRING          reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    $end            reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    LLAVE_D         reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)


state 646

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS . CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 677


state 647

    (266) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I . valoresInt PAR_D
    (268) valoresInt -> . INT
    (269) valoresInt -> . valoresInt COMA INT

    INT             shift and go to state 679

    valoresInt                     shift and go to state 678

state 648

    (267) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I . valoresDouble PAR_D
    (270) valoresDouble -> . DOUBLE
    (271) valoresDouble -> . valoresDouble COMA DOUBLE

    DOUBLE          shift and go to state 681

    valoresDouble                  shift and go to state 680

state 649

    (275) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I . STRING COMA INT PAR_D

    STRING          shift and go to state 682


state 650

    (276) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I . STRING COMA LONG PAR_D

    STRING          shift and go to state 683


state 651

    (277) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I . STRING COMA DOUBLE PAR_D

    STRING          shift and go to state 684


state 652

    (278) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I . STRING COMA FLOAT PAR_D

    STRING          shift and go to state 685


state 653

    (291) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I . INT COMA STRING PAR_D

    INT             shift and go to state 686


state 654

    (292) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I . INT COMA LONG PAR_D

    INT             shift and go to state 687


state 655

    (293) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I . INT COMA DOUBLE PAR_D

    INT             shift and go to state 688


state 656

    (294) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I . INT COMA FLOAT PAR_D

    INT             shift and go to state 689


state 657

    (287) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I . LONG COMA STRING PAR_D

    LONG            shift and go to state 690


state 658

    (288) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I . LONG COMA INT PAR_D

    LONG            shift and go to state 691


state 659

    (289) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I . LONG COMA DOUBLE PAR_D

    LONG            shift and go to state 692


state 660

    (290) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I . LONG COMA FLOAT PAR_D

    LONG            shift and go to state 693


state 661

    (283) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I . DOUBLE COMA STRING PAR_D

    DOUBLE          shift and go to state 694


state 662

    (284) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I . DOUBLE COMA LONG PAR_D

    DOUBLE          shift and go to state 695


state 663

    (285) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I . DOUBLE COMA FLOAT PAR_D

    DOUBLE          shift and go to state 696


state 664

    (286) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I . DOUBLE COMA INT PAR_D

    DOUBLE          shift and go to state 697


state 665

    (279) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I . FLOAT COMA STRING PAR_D

    FLOAT           shift and go to state 698


state 666

    (280) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I . FLOAT COMA LONG PAR_D

    FLOAT           shift and go to state 699


state 667

    (281) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I . FLOAT COMA DOUBLE PAR_D

    FLOAT           shift and go to state 700


state 668

    (282) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I . FLOAT COMA INT PAR_D

    FLOAT           shift and go to state 701


state 669

    (160) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS . CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 702


state 670

    (165) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I . valores PAR_D
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (98) valor -> . STRING
    (99) valor -> . CHAR
    (100) valor -> . VARIABLE
    (101) valor -> . numeros
    (102) valor -> . booleanos
    (103) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (104) valor -> . VARIABLE PAR_I INT PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valores                        shift and go to state 703
    valor                          shift and go to state 67
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72
    startsWith                     shift and go to state 79

state 671

    (164) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 704


state 672

    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)


state 673

    (176) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I . contenido LLAVE_D
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 705
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 674

    (177) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I . contenido LLAVE_D
    (21) contenido -> . asignacion
    (22) contenido -> . reasignacion
    (23) contenido -> . funcall
    (24) contenido -> . impresion
    (25) contenido -> . entrada
    (26) contenido -> . while
    (27) contenido -> . for
    (28) contenido -> . match
    (29) contenido -> . if
    (30) contenido -> . aritmetica
    (31) contenido -> . asignacion contenido
    (32) contenido -> . reasignacion contenido
    (33) contenido -> . funcall contenido
    (34) contenido -> . impresion contenido
    (35) contenido -> . entrada contenido
    (36) contenido -> . while contenido
    (37) contenido -> . for contenido
    (38) contenido -> . if contenido
    (39) contenido -> . match contenido
    (40) contenido -> . aritmetica contenido
    (46) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (47) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (48) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (49) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (50) asignacion -> . VAR VARIABLE IGUAL returnfun
    (51) asignacion -> . VAL VARIABLE IGUAL returnfun
    (52) asignacion -> . asignacionLong
    (53) asignacion -> . asignacionInt
    (54) asignacion -> . asignacionFloat
    (55) asignacion -> . asignacionDouble
    (56) asignacion -> . asignacionString
    (57) asignacion -> . asignacionChar
    (58) asignacion -> . asignacionBoolean
    (59) asignacion -> . array
    (60) asignacion -> . list
    (169) asignacion -> . VAR VARIABLE IGUAL tuple
    (170) asignacion -> . VAL VARIABLE IGUAL tuple
    (273) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (274) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (85) reasignacion -> . VARIABLE IGUAL valor
    (86) reasignacion -> . VARIABLE IGUAL returnfun
    (87) reasignacion -> . VARIABLE IGUAL aritmetica
    (88) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (142) funcall -> . VARIABLE varparen
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (171) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (173) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (174) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (178) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (217) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) if -> . if elseif
    (219) if -> . if else
    (255) aritmetica -> . numeros aritmeticos numeros
    (256) aritmetica -> . VARIABLE aritmeticos numeros
    (257) aritmetica -> . numeros aritmeticos VARIABLE
    (258) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (259) aritmetica -> . aritmetica aritmeticos numeros
    (260) aritmetica -> . aritmetica aritmeticos VARIABLE
    (61) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (301) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (302) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (303) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (304) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (295) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (296) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (297) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (298) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (63) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (64) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (308) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (309) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (310) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (311) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (65) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (66) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (315) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (316) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (317) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (318) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (67) asignacionString -> . VAR VARIABLE IGUAL STRING
    (68) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (69) asignacionString -> . VAL VARIABLE IGUAL STRING
    (70) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (72) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (73) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (74) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (75) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (76) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (78) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (79) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (80) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (81) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (82) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (158) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (159) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (160) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (161) array -> . arrayInt
    (162) array -> . arrayDouble
    (163) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (164) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (165) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (266) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (267) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 147
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 706
    asignacion                     shift and go to state 137
    reasignacion                   shift and go to state 138
    funcall                        shift and go to state 139
    impresion                      shift and go to state 140
    entrada                        shift and go to state 141
    while                          shift and go to state 142
    for                            shift and go to state 143
    match                          shift and go to state 144
    if                             shift and go to state 145
    aritmetica                     shift and go to state 146
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 148
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 675

    (174) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 707


state 676

    (175) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 708


state 677

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I . tipo CORCHETE_D PAR_I INT PAR_D
    (89) tipo -> . CHARCLASS
    (90) tipo -> . STRINGCLASS
    (91) tipo -> . BOOLCLASS
    (92) tipo -> . INTCLASS
    (93) tipo -> . LONGCLASS
    (94) tipo -> . DOUBLECLASS
    (95) tipo -> . FLOATCLASS
    (96) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (97) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 302
    STRINGCLASS     shift and go to state 303
    BOOLCLASS       shift and go to state 304
    INTCLASS        shift and go to state 305
    LONGCLASS       shift and go to state 306
    DOUBLECLASS     shift and go to state 307
    FLOATCLASS      shift and go to state 308
    ARRAYCLASS      shift and go to state 309
    LISTCLASS       shift and go to state 310

    tipo                           shift and go to state 709

state 678

    (266) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt . PAR_D
    (269) valoresInt -> valoresInt . COMA INT

    PAR_D           shift and go to state 710
    COMA            shift and go to state 711


state 679

    (268) valoresInt -> INT .

    PAR_D           reduce using rule 268 (valoresInt -> INT .)
    COMA            reduce using rule 268 (valoresInt -> INT .)


state 680

    (267) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble . PAR_D
    (271) valoresDouble -> valoresDouble . COMA DOUBLE

    PAR_D           shift and go to state 712
    COMA            shift and go to state 713


state 681

    (270) valoresDouble -> DOUBLE .

    PAR_D           reduce using rule 270 (valoresDouble -> DOUBLE .)
    COMA            reduce using rule 270 (valoresDouble -> DOUBLE .)


state 682

    (275) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING . COMA INT PAR_D

    COMA            shift and go to state 714


state 683

    (276) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING . COMA LONG PAR_D

    COMA            shift and go to state 715


state 684

    (277) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING . COMA DOUBLE PAR_D

    COMA            shift and go to state 716


state 685

    (278) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING . COMA FLOAT PAR_D

    COMA            shift and go to state 717


state 686

    (291) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT . COMA STRING PAR_D

    COMA            shift and go to state 718


state 687

    (292) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT . COMA LONG PAR_D

    COMA            shift and go to state 719


state 688

    (293) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT . COMA DOUBLE PAR_D

    COMA            shift and go to state 720


state 689

    (294) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT . COMA FLOAT PAR_D

    COMA            shift and go to state 721


state 690

    (287) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG . COMA STRING PAR_D

    COMA            shift and go to state 722


state 691

    (288) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG . COMA INT PAR_D

    COMA            shift and go to state 723


state 692

    (289) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG . COMA DOUBLE PAR_D

    COMA            shift and go to state 724


state 693

    (290) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG . COMA FLOAT PAR_D

    COMA            shift and go to state 725


state 694

    (283) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE . COMA STRING PAR_D

    COMA            shift and go to state 726


state 695

    (284) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE . COMA LONG PAR_D

    COMA            shift and go to state 727


state 696

    (285) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE . COMA FLOAT PAR_D

    COMA            shift and go to state 728


state 697

    (286) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE . COMA INT PAR_D

    COMA            shift and go to state 729


state 698

    (279) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT . COMA STRING PAR_D

    COMA            shift and go to state 730


state 699

    (280) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT . COMA LONG PAR_D

    COMA            shift and go to state 731


state 700

    (281) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT . COMA DOUBLE PAR_D

    COMA            shift and go to state 732


state 701

    (282) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT . COMA INT PAR_D

    COMA            shift and go to state 733


state 702

    (160) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I . tipo CORCHETE_D PAR_I INT PAR_D
    (89) tipo -> . CHARCLASS
    (90) tipo -> . STRINGCLASS
    (91) tipo -> . BOOLCLASS
    (92) tipo -> . INTCLASS
    (93) tipo -> . LONGCLASS
    (94) tipo -> . DOUBLECLASS
    (95) tipo -> . FLOATCLASS
    (96) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (97) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 302
    STRINGCLASS     shift and go to state 303
    BOOLCLASS       shift and go to state 304
    INTCLASS        shift and go to state 305
    LONGCLASS       shift and go to state 306
    DOUBLECLASS     shift and go to state 307
    FLOATCLASS      shift and go to state 308
    ARRAYCLASS      shift and go to state 309
    LISTCLASS       shift and go to state 310

    tipo                           shift and go to state 734

state 703

    (165) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 735


state 704

    (164) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I . valores PAR_D
    (166) valores -> . valor
    (167) valores -> . valor COMA valores
    (98) valor -> . STRING
    (99) valor -> . CHAR
    (100) valor -> . VARIABLE
    (101) valor -> . numeros
    (102) valor -> . booleanos
    (103) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (104) valor -> . VARIABLE PAR_I INT PAR_D
    (108) numeros -> . INT
    (109) numeros -> . LONG
    (110) numeros -> . FLOAT
    (111) numeros -> . DOUBLE
    (105) booleanos -> . TRUE
    (106) booleanos -> . FLASE
    (107) booleanos -> . startsWith
    (272) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valores                        shift and go to state 736
    valor                          shift and go to state 67
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72
    startsWith                     shift and go to state 79

state 705

    (176) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 737


state 706

    (177) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 738


state 707

    (174) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 174 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 174 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 174 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 174 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 174 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 174 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 174 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 174 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 174 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 174 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 174 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 174 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 174 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 174 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 174 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 174 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 174 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 174 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)


state 708

    (175) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 175 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)


state 709

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo . CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 739


state 710

    (266) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .

    DEF             reduce using rule 266 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    VARIABLE        reduce using rule 266 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    PRINTLN         reduce using rule 266 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    PRINT           reduce using rule 266 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    READLINE        reduce using rule 266 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    VAR             reduce using rule 266 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    VAL             reduce using rule 266 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    WHILE           reduce using rule 266 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    FOR             reduce using rule 266 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    IF              reduce using rule 266 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    STRING          reduce using rule 266 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    $end            reduce using rule 266 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    LLAVE_D         reduce using rule 266 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    INT             reduce using rule 266 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    LONG            reduce using rule 266 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    FLOAT           reduce using rule 266 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    DOUBLE          reduce using rule 266 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    RETURN          reduce using rule 266 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    CASE            reduce using rule 266 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)


state 711

    (269) valoresInt -> valoresInt COMA . INT

    INT             shift and go to state 740


state 712

    (267) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .

    DEF             reduce using rule 267 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    VARIABLE        reduce using rule 267 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    PRINTLN         reduce using rule 267 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    PRINT           reduce using rule 267 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    READLINE        reduce using rule 267 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    VAR             reduce using rule 267 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    VAL             reduce using rule 267 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    WHILE           reduce using rule 267 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    FOR             reduce using rule 267 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    IF              reduce using rule 267 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    STRING          reduce using rule 267 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    $end            reduce using rule 267 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    LLAVE_D         reduce using rule 267 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    INT             reduce using rule 267 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    LONG            reduce using rule 267 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    FLOAT           reduce using rule 267 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    DOUBLE          reduce using rule 267 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    RETURN          reduce using rule 267 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    CASE            reduce using rule 267 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)


state 713

    (271) valoresDouble -> valoresDouble COMA . DOUBLE

    DOUBLE          shift and go to state 741


state 714

    (275) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA . INT PAR_D

    INT             shift and go to state 742


state 715

    (276) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA . LONG PAR_D

    LONG            shift and go to state 743


state 716

    (277) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA . DOUBLE PAR_D

    DOUBLE          shift and go to state 744


state 717

    (278) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA . FLOAT PAR_D

    FLOAT           shift and go to state 745


state 718

    (291) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA . STRING PAR_D

    STRING          shift and go to state 746


state 719

    (292) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA . LONG PAR_D

    LONG            shift and go to state 747


state 720

    (293) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA . DOUBLE PAR_D

    DOUBLE          shift and go to state 748


state 721

    (294) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA . FLOAT PAR_D

    FLOAT           shift and go to state 749


state 722

    (287) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA . STRING PAR_D

    STRING          shift and go to state 750


state 723

    (288) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA . INT PAR_D

    INT             shift and go to state 751


state 724

    (289) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA . DOUBLE PAR_D

    DOUBLE          shift and go to state 752


state 725

    (290) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA . FLOAT PAR_D

    FLOAT           shift and go to state 753


state 726

    (283) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA . STRING PAR_D

    STRING          shift and go to state 754


state 727

    (284) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA . LONG PAR_D

    LONG            shift and go to state 755


state 728

    (285) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA . FLOAT PAR_D

    FLOAT           shift and go to state 756


state 729

    (286) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA . INT PAR_D

    INT             shift and go to state 757


state 730

    (279) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA . STRING PAR_D

    STRING          shift and go to state 758


state 731

    (280) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA . LONG PAR_D

    LONG            shift and go to state 759


state 732

    (281) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA . DOUBLE PAR_D

    DOUBLE          shift and go to state 760


state 733

    (282) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA . INT PAR_D

    INT             shift and go to state 761


state 734

    (160) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo . CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 762


state 735

    (165) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    STRING          reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 165 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)


state 736

    (164) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 763


state 737

    (176) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 176 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 176 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 176 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 176 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 176 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 176 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 176 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 176 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 176 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 176 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 176 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 176 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 176 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 176 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 176 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 176 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 176 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 176 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)


state 738

    (177) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 177 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 177 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 177 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 177 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 177 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 177 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 177 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 177 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 177 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 177 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 177 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 177 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 177 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 177 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 177 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 177 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 177 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 177 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)


state 739

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D . PAR_I INT PAR_D

    PAR_I           shift and go to state 764


state 740

    (269) valoresInt -> valoresInt COMA INT .

    PAR_D           reduce using rule 269 (valoresInt -> valoresInt COMA INT .)
    COMA            reduce using rule 269 (valoresInt -> valoresInt COMA INT .)


state 741

    (271) valoresDouble -> valoresDouble COMA DOUBLE .

    PAR_D           reduce using rule 271 (valoresDouble -> valoresDouble COMA DOUBLE .)
    COMA            reduce using rule 271 (valoresDouble -> valoresDouble COMA DOUBLE .)


state 742

    (275) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT . PAR_D

    PAR_D           shift and go to state 765


state 743

    (276) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG . PAR_D

    PAR_D           shift and go to state 766


state 744

    (277) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE . PAR_D

    PAR_D           shift and go to state 767


state 745

    (278) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT . PAR_D

    PAR_D           shift and go to state 768


state 746

    (291) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING . PAR_D

    PAR_D           shift and go to state 769


state 747

    (292) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG . PAR_D

    PAR_D           shift and go to state 770


state 748

    (293) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE . PAR_D

    PAR_D           shift and go to state 771


state 749

    (294) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT . PAR_D

    PAR_D           shift and go to state 772


state 750

    (287) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING . PAR_D

    PAR_D           shift and go to state 773


state 751

    (288) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT . PAR_D

    PAR_D           shift and go to state 774


state 752

    (289) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE . PAR_D

    PAR_D           shift and go to state 775


state 753

    (290) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT . PAR_D

    PAR_D           shift and go to state 776


state 754

    (283) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING . PAR_D

    PAR_D           shift and go to state 777


state 755

    (284) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG . PAR_D

    PAR_D           shift and go to state 778


state 756

    (285) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT . PAR_D

    PAR_D           shift and go to state 779


state 757

    (286) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT . PAR_D

    PAR_D           shift and go to state 780


state 758

    (279) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING . PAR_D

    PAR_D           shift and go to state 781


state 759

    (280) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG . PAR_D

    PAR_D           shift and go to state 782


state 760

    (281) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE . PAR_D

    PAR_D           shift and go to state 783


state 761

    (282) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT . PAR_D

    PAR_D           shift and go to state 784


state 762

    (160) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D . PAR_I INT PAR_D

    PAR_I           shift and go to state 785


state 763

    (164) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    STRING          reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 164 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)


state 764

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I . INT PAR_D

    INT             shift and go to state 786


state 765

    (275) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .

    DEF             reduce using rule 275 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    VARIABLE        reduce using rule 275 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    PRINTLN         reduce using rule 275 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    PRINT           reduce using rule 275 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    READLINE        reduce using rule 275 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    VAR             reduce using rule 275 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    VAL             reduce using rule 275 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    WHILE           reduce using rule 275 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    FOR             reduce using rule 275 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    IF              reduce using rule 275 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    STRING          reduce using rule 275 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    $end            reduce using rule 275 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    LLAVE_D         reduce using rule 275 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    INT             reduce using rule 275 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    LONG            reduce using rule 275 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    FLOAT           reduce using rule 275 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    DOUBLE          reduce using rule 275 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    RETURN          reduce using rule 275 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    CASE            reduce using rule 275 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)


state 766

    (276) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .

    DEF             reduce using rule 276 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    VARIABLE        reduce using rule 276 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    PRINTLN         reduce using rule 276 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    PRINT           reduce using rule 276 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    READLINE        reduce using rule 276 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    VAR             reduce using rule 276 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    VAL             reduce using rule 276 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    WHILE           reduce using rule 276 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    FOR             reduce using rule 276 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    IF              reduce using rule 276 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    STRING          reduce using rule 276 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    $end            reduce using rule 276 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    LLAVE_D         reduce using rule 276 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    INT             reduce using rule 276 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    LONG            reduce using rule 276 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    FLOAT           reduce using rule 276 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    DOUBLE          reduce using rule 276 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    RETURN          reduce using rule 276 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    CASE            reduce using rule 276 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)


state 767

    (277) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .

    DEF             reduce using rule 277 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    VARIABLE        reduce using rule 277 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    PRINTLN         reduce using rule 277 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    PRINT           reduce using rule 277 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    READLINE        reduce using rule 277 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    VAR             reduce using rule 277 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    VAL             reduce using rule 277 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    WHILE           reduce using rule 277 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    FOR             reduce using rule 277 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    IF              reduce using rule 277 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    STRING          reduce using rule 277 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    $end            reduce using rule 277 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    LLAVE_D         reduce using rule 277 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    INT             reduce using rule 277 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    LONG            reduce using rule 277 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    FLOAT           reduce using rule 277 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    DOUBLE          reduce using rule 277 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    RETURN          reduce using rule 277 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    CASE            reduce using rule 277 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)


state 768

    (278) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .

    DEF             reduce using rule 278 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    VARIABLE        reduce using rule 278 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    PRINTLN         reduce using rule 278 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    PRINT           reduce using rule 278 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    READLINE        reduce using rule 278 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    VAR             reduce using rule 278 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    VAL             reduce using rule 278 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    WHILE           reduce using rule 278 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    FOR             reduce using rule 278 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    IF              reduce using rule 278 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    STRING          reduce using rule 278 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    $end            reduce using rule 278 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    LLAVE_D         reduce using rule 278 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    INT             reduce using rule 278 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    LONG            reduce using rule 278 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    FLOAT           reduce using rule 278 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    DOUBLE          reduce using rule 278 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    RETURN          reduce using rule 278 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    CASE            reduce using rule 278 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)


state 769

    (291) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .

    DEF             reduce using rule 291 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    VARIABLE        reduce using rule 291 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    PRINTLN         reduce using rule 291 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    PRINT           reduce using rule 291 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    READLINE        reduce using rule 291 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    VAR             reduce using rule 291 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    VAL             reduce using rule 291 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    WHILE           reduce using rule 291 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    FOR             reduce using rule 291 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    IF              reduce using rule 291 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    STRING          reduce using rule 291 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    $end            reduce using rule 291 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    LLAVE_D         reduce using rule 291 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    INT             reduce using rule 291 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    LONG            reduce using rule 291 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    FLOAT           reduce using rule 291 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    DOUBLE          reduce using rule 291 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    RETURN          reduce using rule 291 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    CASE            reduce using rule 291 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)


state 770

    (292) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .

    DEF             reduce using rule 292 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    VARIABLE        reduce using rule 292 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    PRINTLN         reduce using rule 292 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    PRINT           reduce using rule 292 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    READLINE        reduce using rule 292 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    VAR             reduce using rule 292 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    VAL             reduce using rule 292 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    WHILE           reduce using rule 292 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    FOR             reduce using rule 292 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    IF              reduce using rule 292 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    STRING          reduce using rule 292 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    $end            reduce using rule 292 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    LLAVE_D         reduce using rule 292 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    INT             reduce using rule 292 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    LONG            reduce using rule 292 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    FLOAT           reduce using rule 292 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    DOUBLE          reduce using rule 292 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    RETURN          reduce using rule 292 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    CASE            reduce using rule 292 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)


state 771

    (293) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .

    DEF             reduce using rule 293 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    VARIABLE        reduce using rule 293 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    PRINTLN         reduce using rule 293 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    PRINT           reduce using rule 293 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    READLINE        reduce using rule 293 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    VAR             reduce using rule 293 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    VAL             reduce using rule 293 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    WHILE           reduce using rule 293 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    FOR             reduce using rule 293 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    IF              reduce using rule 293 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    STRING          reduce using rule 293 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    $end            reduce using rule 293 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    LLAVE_D         reduce using rule 293 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    INT             reduce using rule 293 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    LONG            reduce using rule 293 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    FLOAT           reduce using rule 293 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    DOUBLE          reduce using rule 293 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    RETURN          reduce using rule 293 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    CASE            reduce using rule 293 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)


state 772

    (294) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .

    DEF             reduce using rule 294 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    VARIABLE        reduce using rule 294 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    PRINTLN         reduce using rule 294 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    PRINT           reduce using rule 294 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    READLINE        reduce using rule 294 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    VAR             reduce using rule 294 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    VAL             reduce using rule 294 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    WHILE           reduce using rule 294 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    FOR             reduce using rule 294 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    IF              reduce using rule 294 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    STRING          reduce using rule 294 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    $end            reduce using rule 294 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    LLAVE_D         reduce using rule 294 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    INT             reduce using rule 294 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    LONG            reduce using rule 294 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    FLOAT           reduce using rule 294 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    DOUBLE          reduce using rule 294 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    RETURN          reduce using rule 294 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    CASE            reduce using rule 294 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)


state 773

    (287) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .

    DEF             reduce using rule 287 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    VARIABLE        reduce using rule 287 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    PRINTLN         reduce using rule 287 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    PRINT           reduce using rule 287 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    READLINE        reduce using rule 287 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    VAR             reduce using rule 287 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    VAL             reduce using rule 287 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    WHILE           reduce using rule 287 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    FOR             reduce using rule 287 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    IF              reduce using rule 287 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    STRING          reduce using rule 287 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    $end            reduce using rule 287 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    LLAVE_D         reduce using rule 287 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    INT             reduce using rule 287 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    LONG            reduce using rule 287 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    FLOAT           reduce using rule 287 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    DOUBLE          reduce using rule 287 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    RETURN          reduce using rule 287 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    CASE            reduce using rule 287 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)


state 774

    (288) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .

    DEF             reduce using rule 288 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    VARIABLE        reduce using rule 288 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    PRINTLN         reduce using rule 288 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    PRINT           reduce using rule 288 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    READLINE        reduce using rule 288 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    VAR             reduce using rule 288 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    VAL             reduce using rule 288 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    WHILE           reduce using rule 288 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    FOR             reduce using rule 288 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    IF              reduce using rule 288 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    STRING          reduce using rule 288 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    $end            reduce using rule 288 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    LLAVE_D         reduce using rule 288 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    INT             reduce using rule 288 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    LONG            reduce using rule 288 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    FLOAT           reduce using rule 288 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    DOUBLE          reduce using rule 288 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    RETURN          reduce using rule 288 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    CASE            reduce using rule 288 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)


state 775

    (289) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .

    DEF             reduce using rule 289 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    VARIABLE        reduce using rule 289 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    PRINTLN         reduce using rule 289 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    PRINT           reduce using rule 289 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    READLINE        reduce using rule 289 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    VAR             reduce using rule 289 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    VAL             reduce using rule 289 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    WHILE           reduce using rule 289 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    FOR             reduce using rule 289 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    IF              reduce using rule 289 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    STRING          reduce using rule 289 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    $end            reduce using rule 289 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    LLAVE_D         reduce using rule 289 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    INT             reduce using rule 289 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    LONG            reduce using rule 289 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    FLOAT           reduce using rule 289 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    DOUBLE          reduce using rule 289 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    RETURN          reduce using rule 289 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    CASE            reduce using rule 289 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)


state 776

    (290) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .

    DEF             reduce using rule 290 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    VARIABLE        reduce using rule 290 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    PRINTLN         reduce using rule 290 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    PRINT           reduce using rule 290 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    READLINE        reduce using rule 290 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    VAR             reduce using rule 290 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    VAL             reduce using rule 290 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    WHILE           reduce using rule 290 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    FOR             reduce using rule 290 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    IF              reduce using rule 290 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    STRING          reduce using rule 290 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    $end            reduce using rule 290 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    LLAVE_D         reduce using rule 290 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    INT             reduce using rule 290 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    LONG            reduce using rule 290 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    FLOAT           reduce using rule 290 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    DOUBLE          reduce using rule 290 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    RETURN          reduce using rule 290 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    CASE            reduce using rule 290 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)


state 777

    (283) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .

    DEF             reduce using rule 283 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    VARIABLE        reduce using rule 283 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    PRINTLN         reduce using rule 283 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    PRINT           reduce using rule 283 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    READLINE        reduce using rule 283 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    VAR             reduce using rule 283 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    VAL             reduce using rule 283 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    WHILE           reduce using rule 283 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    FOR             reduce using rule 283 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    IF              reduce using rule 283 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    STRING          reduce using rule 283 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    $end            reduce using rule 283 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    LLAVE_D         reduce using rule 283 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    INT             reduce using rule 283 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    LONG            reduce using rule 283 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    FLOAT           reduce using rule 283 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    DOUBLE          reduce using rule 283 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    RETURN          reduce using rule 283 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    CASE            reduce using rule 283 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)


state 778

    (284) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .

    DEF             reduce using rule 284 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    VARIABLE        reduce using rule 284 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    PRINTLN         reduce using rule 284 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    PRINT           reduce using rule 284 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    READLINE        reduce using rule 284 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    VAR             reduce using rule 284 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    VAL             reduce using rule 284 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    WHILE           reduce using rule 284 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    FOR             reduce using rule 284 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    IF              reduce using rule 284 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    STRING          reduce using rule 284 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    $end            reduce using rule 284 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    LLAVE_D         reduce using rule 284 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    INT             reduce using rule 284 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    LONG            reduce using rule 284 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    FLOAT           reduce using rule 284 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    DOUBLE          reduce using rule 284 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    RETURN          reduce using rule 284 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    CASE            reduce using rule 284 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)


state 779

    (285) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .

    DEF             reduce using rule 285 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    VARIABLE        reduce using rule 285 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    PRINTLN         reduce using rule 285 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    PRINT           reduce using rule 285 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    READLINE        reduce using rule 285 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    VAR             reduce using rule 285 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    VAL             reduce using rule 285 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    WHILE           reduce using rule 285 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    FOR             reduce using rule 285 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    IF              reduce using rule 285 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    STRING          reduce using rule 285 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    $end            reduce using rule 285 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    LLAVE_D         reduce using rule 285 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    INT             reduce using rule 285 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    LONG            reduce using rule 285 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    FLOAT           reduce using rule 285 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    DOUBLE          reduce using rule 285 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    RETURN          reduce using rule 285 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    CASE            reduce using rule 285 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)


state 780

    (286) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .

    DEF             reduce using rule 286 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    VARIABLE        reduce using rule 286 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    PRINTLN         reduce using rule 286 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    PRINT           reduce using rule 286 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    READLINE        reduce using rule 286 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    VAR             reduce using rule 286 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    VAL             reduce using rule 286 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    WHILE           reduce using rule 286 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    FOR             reduce using rule 286 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    IF              reduce using rule 286 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    STRING          reduce using rule 286 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    $end            reduce using rule 286 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    LLAVE_D         reduce using rule 286 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    INT             reduce using rule 286 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    LONG            reduce using rule 286 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    FLOAT           reduce using rule 286 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    DOUBLE          reduce using rule 286 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    RETURN          reduce using rule 286 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    CASE            reduce using rule 286 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)


state 781

    (279) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .

    DEF             reduce using rule 279 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    VARIABLE        reduce using rule 279 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    PRINTLN         reduce using rule 279 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    PRINT           reduce using rule 279 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    READLINE        reduce using rule 279 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    VAR             reduce using rule 279 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    VAL             reduce using rule 279 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    WHILE           reduce using rule 279 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    FOR             reduce using rule 279 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    IF              reduce using rule 279 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    STRING          reduce using rule 279 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    $end            reduce using rule 279 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    LLAVE_D         reduce using rule 279 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    INT             reduce using rule 279 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    LONG            reduce using rule 279 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    FLOAT           reduce using rule 279 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    DOUBLE          reduce using rule 279 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    RETURN          reduce using rule 279 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    CASE            reduce using rule 279 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)


state 782

    (280) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .

    DEF             reduce using rule 280 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    VARIABLE        reduce using rule 280 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    PRINTLN         reduce using rule 280 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    PRINT           reduce using rule 280 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    READLINE        reduce using rule 280 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    VAR             reduce using rule 280 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    VAL             reduce using rule 280 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    WHILE           reduce using rule 280 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    FOR             reduce using rule 280 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    IF              reduce using rule 280 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    STRING          reduce using rule 280 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    $end            reduce using rule 280 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    LLAVE_D         reduce using rule 280 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    INT             reduce using rule 280 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    LONG            reduce using rule 280 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    FLOAT           reduce using rule 280 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    DOUBLE          reduce using rule 280 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    RETURN          reduce using rule 280 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    CASE            reduce using rule 280 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)


state 783

    (281) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .

    DEF             reduce using rule 281 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    VARIABLE        reduce using rule 281 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    PRINTLN         reduce using rule 281 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    PRINT           reduce using rule 281 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    READLINE        reduce using rule 281 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    VAR             reduce using rule 281 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    VAL             reduce using rule 281 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    WHILE           reduce using rule 281 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    FOR             reduce using rule 281 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    IF              reduce using rule 281 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    STRING          reduce using rule 281 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    $end            reduce using rule 281 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    LLAVE_D         reduce using rule 281 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    INT             reduce using rule 281 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    LONG            reduce using rule 281 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    FLOAT           reduce using rule 281 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    DOUBLE          reduce using rule 281 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    RETURN          reduce using rule 281 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    CASE            reduce using rule 281 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)


state 784

    (282) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .

    DEF             reduce using rule 282 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    VARIABLE        reduce using rule 282 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    PRINTLN         reduce using rule 282 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    PRINT           reduce using rule 282 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    READLINE        reduce using rule 282 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    VAR             reduce using rule 282 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    VAL             reduce using rule 282 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    WHILE           reduce using rule 282 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    FOR             reduce using rule 282 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    IF              reduce using rule 282 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    STRING          reduce using rule 282 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    $end            reduce using rule 282 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    LLAVE_D         reduce using rule 282 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    INT             reduce using rule 282 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    LONG            reduce using rule 282 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    FLOAT           reduce using rule 282 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    DOUBLE          reduce using rule 282 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    RETURN          reduce using rule 282 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    CASE            reduce using rule 282 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)


state 785

    (160) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I . INT PAR_D

    INT             shift and go to state 787


state 786

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT . PAR_D

    PAR_D           shift and go to state 788


state 787

    (160) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT . PAR_D

    PAR_D           shift and go to state 789


state 788

    (158) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .

    DEF             reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VARIABLE        reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINTLN         reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINT           reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    READLINE        reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAR             reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAL             reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    WHILE           reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FOR             reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    IF              reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    STRING          reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    $end            reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LLAVE_D         reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    INT             reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LONG            reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FLOAT           reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    DOUBLE          reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    RETURN          reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    CASE            reduce using rule 158 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)


state 789

    (160) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .

    DEF             reduce using rule 160 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VARIABLE        reduce using rule 160 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINTLN         reduce using rule 160 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINT           reduce using rule 160 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    READLINE        reduce using rule 160 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAR             reduce using rule 160 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAL             reduce using rule 160 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    WHILE           reduce using rule 160 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FOR             reduce using rule 160 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    IF              reduce using rule 160 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    STRING          reduce using rule 160 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    $end            reduce using rule 160 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LLAVE_D         reduce using rule 160 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    INT             reduce using rule 160 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LONG            reduce using rule 160 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FLOAT           reduce using rule 160 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    DOUBLE          reduce using rule 160 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    RETURN          reduce using rule 160 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    CASE            reduce using rule 160 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 49 resolved as shift
WARNING: shift/reduce conflict for PAR_D in state 391 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_D in state 440 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_D in state 441 resolved as shift
WARNING: shift/reduce conflict for PAR_D in state 546 resolved as shift
WARNING: shift/reduce conflict for PAR_D in state 547 resolved as shift
WARNING: shift/reduce conflict for LLAVE_D in state 550 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 591 resolved as shift
WARNING: shift/reduce conflict for LLAVE_D in state 593 resolved as shift
WARNING: reduce/reduce conflict in state 164 resolved using rule (asignacionLong -> VAR VARIABLE IGUAL longvalues)
WARNING: rejected rule (floatvalues -> longvalues) in state 164
WARNING: reduce/reduce conflict in state 165 resolved using rule (asignacionInt -> VAR VARIABLE IGUAL intvalues)
WARNING: rejected rule (longvalues -> intvalues) in state 165
WARNING: reduce/reduce conflict in state 166 resolved using rule (asignacionFloat -> VAR VARIABLE IGUAL floatvalues)
WARNING: rejected rule (doublevalues -> floatvalues) in state 166
WARNING: reduce/reduce conflict in state 175 resolved using rule (intvalues -> INT)
WARNING: rejected rule (longvalues -> INT) in state 175
WARNING: reduce/reduce conflict in state 198 resolved using rule (asignacionLong -> VAL VARIABLE IGUAL longvalues)
WARNING: rejected rule (floatvalues -> longvalues) in state 198
WARNING: reduce/reduce conflict in state 199 resolved using rule (asignacionInt -> VAL VARIABLE IGUAL intvalues)
WARNING: rejected rule (longvalues -> intvalues) in state 199
WARNING: reduce/reduce conflict in state 200 resolved using rule (asignacionFloat -> VAL VARIABLE IGUAL floatvalues)
WARNING: rejected rule (doublevalues -> floatvalues) in state 200
WARNING: reduce/reduce conflict in state 417 resolved using rule (intvalues -> INT)
WARNING: rejected rule (longvalues -> INT) in state 417
WARNING: Rule (longvalues -> INT) is never reduced

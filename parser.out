Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ARROBA
    BACKTICK
    CATCH
    CLASS
    DO
    EXTENDS
    FINAL
    FINALLY
    FOR_SOME
    HASHTAG
    IMPLICIT
    LAZY
    LIBRERIA_IO
    MACRO
    MAYOR_IGUAL
    MENOR_IGUAL
    NULL
    OVERRIDE
    PACKAGE
    PRIVATE
    PROTECTED
    REVERSE
    SEALED
    SUPER
    THIS
    THROW
    TRAIT
    TRY
    TYPE
    WITH
    YIELD

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D
Rule 2     inicio -> IMPORT io inicio
Rule 3     inicio -> cuerpo
Rule 4     io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE
Rule 5     cuerpo -> funcion
Rule 6     cuerpo -> funcall
Rule 7     cuerpo -> impresion
Rule 8     cuerpo -> entrada
Rule 9     cuerpo -> asignacion
Rule 10    cuerpo -> while
Rule 11    cuerpo -> for
Rule 12    cuerpo -> match
Rule 13    cuerpo -> if
Rule 14    cuerpo -> startsWith
Rule 15    cuerpo -> funcion cuerpo
Rule 16    cuerpo -> asignacion cuerpo
Rule 17    cuerpo -> while cuerpo
Rule 18    cuerpo -> for cuerpo
Rule 19    cuerpo -> if cuerpo
Rule 20    cuerpo -> match cuerpo
Rule 21    cuerpo -> startsWith cuerpo
Rule 22    contenido -> asignacion
Rule 23    contenido -> reasignacion
Rule 24    contenido -> funcall
Rule 25    contenido -> impresion
Rule 26    contenido -> entrada
Rule 27    contenido -> while
Rule 28    contenido -> for
Rule 29    contenido -> match
Rule 30    contenido -> if
Rule 31    contenido -> aritmetica
Rule 32    contenido -> startsWith
Rule 33    contenido -> asignacion contenido
Rule 34    contenido -> reasignacion contenido
Rule 35    contenido -> funcall contenido
Rule 36    contenido -> impresion contenido
Rule 37    contenido -> entrada contenido
Rule 38    contenido -> while contenido
Rule 39    contenido -> for contenido
Rule 40    contenido -> if contenido
Rule 41    contenido -> match contenido
Rule 42    contenido -> aritmetica contenido
Rule 43    contenido -> startsWith contenido
Rule 44    contenidoLine -> asignacion
Rule 45    contenidoLine -> reasignacion
Rule 46    contenidoLine -> funcall
Rule 47    contenidoLine -> impresion
Rule 48    contenidoLine -> entrada
Rule 49    asignacion -> VAR VARIABLE IGUAL VARIABLE
Rule 50    asignacion -> VAL VARIABLE IGUAL VARIABLE
Rule 51    asignacion -> VAR VARIABLE IGUAL aritmetica
Rule 52    asignacion -> VAL VARIABLE IGUAL aritmetica
Rule 53    asignacion -> VAR VARIABLE IGUAL returnfun
Rule 54    asignacion -> VAL VARIABLE IGUAL returnfun
Rule 55    asignacion -> asignacionLong
Rule 56    asignacion -> asignacionInt
Rule 57    asignacion -> asignacionFloat
Rule 58    asignacion -> asignacionDouble
Rule 59    asignacion -> asignacionString
Rule 60    asignacion -> asignacionChar
Rule 61    asignacion -> asignacionBoolean
Rule 62    asignacion -> array
Rule 63    asignacion -> list
Rule 64    asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
Rule 65    asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
Rule 66    asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
Rule 67    asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
Rule 68    asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
Rule 69    asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
Rule 70    asignacionString -> VAR VARIABLE IGUAL STRING
Rule 71    asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
Rule 72    asignacionString -> VAL VARIABLE IGUAL STRING
Rule 73    asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
Rule 74    asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
Rule 75    asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
Rule 76    asignacionChar -> VAR VARIABLE IGUAL CHAR
Rule 77    asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
Rule 78    asignacionChar -> VAL VARIABLE IGUAL CHAR
Rule 79    asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
Rule 80    asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
Rule 81    asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
Rule 82    asignacionBoolean -> VAR VARIABLE IGUAL booleanos
Rule 83    asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
Rule 84    asignacionBoolean -> VAL VARIABLE IGUAL booleanos
Rule 85    asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
Rule 86    asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
Rule 87    asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
Rule 88    reasignacion -> VARIABLE IGUAL valor
Rule 89    reasignacion -> VARIABLE IGUAL returnfun
Rule 90    reasignacion -> VARIABLE IGUAL aritmetica
Rule 91    reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor
Rule 92    tipo -> CHARCLASS
Rule 93    tipo -> STRINGCLASS
Rule 94    tipo -> BOOLCLASS
Rule 95    tipo -> INTCLASS
Rule 96    tipo -> LONGCLASS
Rule 97    tipo -> DOUBLECLASS
Rule 98    tipo -> FLOATCLASS
Rule 99    tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D
Rule 100   tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D
Rule 101   valor -> STRING
Rule 102   valor -> CHAR
Rule 103   valor -> VARIABLE
Rule 104   valor -> numeros
Rule 105   valor -> booleanos
Rule 106   valor -> VARIABLE PAR_I VARIABLE PAR_D
Rule 107   valor -> VARIABLE PAR_I INT PAR_D
Rule 108   booleanos -> TRUE
Rule 109   booleanos -> FLASE
Rule 110   booleanos -> startsWith
Rule 111   numeros -> INT
Rule 112   numeros -> LONG
Rule 113   numeros -> FLOAT
Rule 114   numeros -> DOUBLE
Rule 115   funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
Rule 116   funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
Rule 117   declaracion -> VARIABLE DOBLE_PUNTO tipo
Rule 118   declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor
Rule 119   parametro -> parametros
Rule 120   parametro -> PAR_I PAR_D
Rule 121   parametros -> PAR_I declaracion PAR_D
Rule 122   parametros -> PAR_I declaracion PAR_D parametros
Rule 123   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
Rule 124   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
Rule 125   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
Rule 126   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
Rule 127   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
Rule 128   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
Rule 129   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
Rule 130   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
Rule 131   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
Rule 132   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
Rule 133   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
Rule 134   dectipo -> DOBLE_PUNTO tipo
Rule 135   dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D
Rule 136   tipos -> tipo
Rule 137   tipos -> tipo tiposentry
Rule 138   tiposentry -> COMA tipo
Rule 139   tiposentry -> COMA tipo tiposentry
Rule 140   impresion -> PRINTLN PAR_I valorI PAR_D
Rule 141   impresion -> PRINT PAR_I valorI PAR_D
Rule 142   valorI -> valor MAS valorI
Rule 143   valorI -> valor
Rule 144   entrada -> READLINE PAR_I PAR_D
Rule 145   funcall -> VARIABLE varparen
Rule 146   varparen -> PAR_I valores PAR_D
Rule 147   varparen -> PAR_I PAR_D
Rule 148   varparen -> varparen PAR_I valores PAR_D
Rule 149   varparen -> varparen PAR_I PAR_D
Rule 150   returnfun -> returnCastable
Rule 151   returnfun -> castingcall
Rule 152   returnCastable -> entrada
Rule 153   returnCastable -> funcall
Rule 154   castingcall -> returnCastable PUNTO castingfun
Rule 155   castingcall -> VARIABLE PUNTO castingfun
Rule 156   castingfun -> TO_INT
Rule 157   castingfun -> TO_DOUBLE
Rule 158   castingfun -> TO_FLOAT
Rule 159   castingfun -> TO_LONG
Rule 160   array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 161   array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
Rule 162   array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 163   array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
Rule 164   array -> arrayInt
Rule 165   array -> arrayDouble
Rule 166   list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
Rule 167   list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
Rule 168   list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
Rule 169   valores -> valor
Rule 170   valores -> valor COMA valores
Rule 171   tuple -> PAR_I valores PAR_D
Rule 172   asignacion -> VAR VARIABLE IGUAL tuple
Rule 173   asignacion -> VAL VARIABLE IGUAL tuple
Rule 174   while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 175   for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
Rule 176   for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
Rule 177   for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
Rule 178   for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
Rule 179   for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
Rule 180   for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
Rule 181   match -> VARIABLE MATCH LLAVE_I cases LLAVE_D
Rule 182   cases -> casesInt
Rule 183   cases -> casesLgn
Rule 184   cases -> casesFlt
Rule 185   cases -> casesDob
Rule 186   cases -> casesStr
Rule 187   cases -> casesChar
Rule 188   cases -> casesBool
Rule 189   caseInt -> CASE INT FUNCION_FLECHA codeBlock
Rule 190   casesInt -> caseInt
Rule 191   casesInt -> caseInt casesInt
Rule 192   casesInt -> caseInt defcase
Rule 193   caseLgn -> CASE LONG FUNCION_FLECHA codeBlock
Rule 194   casesLgn -> caseLgn
Rule 195   casesLgn -> caseLgn casesLgn
Rule 196   casesLgn -> caseLgn defcase
Rule 197   caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock
Rule 198   casesFlt -> caseFlt
Rule 199   casesFlt -> caseFlt casesFlt
Rule 200   casesFlt -> caseFlt defcase
Rule 201   caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock
Rule 202   casesDob -> caseDob
Rule 203   casesDob -> caseDob casesDob
Rule 204   casesDob -> caseDob defcase
Rule 205   caseStr -> CASE STRING FUNCION_FLECHA codeBlock
Rule 206   casesStr -> caseStr
Rule 207   casesStr -> caseStr casesStr
Rule 208   casesStr -> caseStr defcase
Rule 209   caseChar -> CASE CHAR FUNCION_FLECHA codeBlock
Rule 210   casesChar -> caseChar
Rule 211   casesChar -> caseChar casesChar
Rule 212   casesChar -> caseChar defcase
Rule 213   caseBool -> CASE booleanos FUNCION_FLECHA codeBlock
Rule 214   casesBool -> caseBool
Rule 215   casesBool -> caseBool casesBool
Rule 216   casesBool -> caseBool defcase
Rule 217   defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock
Rule 218   codeBlock -> contenidoLine
Rule 219   codeBlock -> LLAVE_I contenido LLAVE_D
Rule 220   if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 221   if -> if elseif
Rule 222   if -> if else
Rule 223   elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 224   elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
Rule 225   else -> ELSE LLAVE_I contenido LLAVE_D
Rule 226   else -> elseif else
Rule 227   condicional -> valorC logicos condicional
Rule 228   condicional -> valorC
Rule 229   valorC -> VARIABLE
Rule 230   valorC -> booleanos
Rule 231   valorC -> relacional
Rule 232   valorC -> NOT VARIABLE
Rule 233   valorC -> NOT booleanos
Rule 234   valorC -> NOT relacional
Rule 235   logicos -> AND
Rule 236   logicos -> OR
Rule 237   logicos -> NOT
Rule 238   relacional -> numeros comparacion numeros
Rule 239   relacional -> aritmetica comparacion aritmetica
Rule 240   relacional -> aritmetica comparacion numeros
Rule 241   relacional -> numeros comparacion aritmetica
Rule 242   relacional -> booleanos comparacion booleanos
Rule 243   relacional -> STRING comparacion STRING
Rule 244   relacional -> CHAR comparacion CHAR
Rule 245   relacional -> VARIABLE comparacion numeros
Rule 246   relacional -> numeros comparacion VARIABLE
Rule 247   relacional -> VARIABLE comparacion booleanos
Rule 248   relacional -> booleanos comparacion VARIABLE
Rule 249   relacional -> VARIABLE comparacion STRING
Rule 250   relacional -> STRING comparacion VARIABLE
Rule 251   relacional -> VARIABLE comparacion CHAR
Rule 252   relacional -> CHAR comparacion VARIABLE
Rule 253   relacional -> VARIABLE comparacion VARIABLE
Rule 254   comparacion -> IGUAL_COMPARACION
Rule 255   comparacion -> DIFERENTE
Rule 256   comparacion -> MAYOR
Rule 257   comparacion -> MENOR
Rule 258   aritmetica -> numeros aritmeticos numeros
Rule 259   aritmetica -> VARIABLE aritmeticos numeros
Rule 260   aritmetica -> numeros aritmeticos VARIABLE
Rule 261   aritmetica -> VARIABLE aritmeticos VARIABLE
Rule 262   aritmetica -> aritmetica aritmeticos numeros
Rule 263   aritmetica -> aritmetica aritmeticos VARIABLE
Rule 264   aritmeticos -> MENOS
Rule 265   aritmeticos -> MAS
Rule 266   aritmeticos -> MULTIPLICACION
Rule 267   aritmeticos -> DIVISION
Rule 268   aritmeticos -> MOD
Rule 269   arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
Rule 270   arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
Rule 271   valoresInt -> INT
Rule 272   valoresInt -> valoresInt COMA INT
Rule 273   valoresDouble -> DOUBLE
Rule 274   valoresDouble -> valoresDouble COMA DOUBLE
Rule 275   startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D
Rule 276   startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
Rule 277   asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla
Rule 278   asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla
Rule 279   dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
Rule 280   dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
Rule 281   dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
Rule 282   dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D
Rule 283   dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
Rule 284   dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
Rule 285   dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
Rule 286   dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D
Rule 287   dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
Rule 288   dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
Rule 289   dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
Rule 290   dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D
Rule 291   dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
Rule 292   dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
Rule 293   dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
Rule 294   dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D
Rule 295   dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
Rule 296   dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
Rule 297   dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
Rule 298   dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D
Rule 299   asignacionInt -> VAR VARIABLE IGUAL intvalues
Rule 300   asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
Rule 301   asignacionInt -> VAL VARIABLE IGUAL intvalues
Rule 302   asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
Rule 303   intvalues -> INT
Rule 304   intvalues -> stringCastInt
Rule 305   asignacionLong -> VAR VARIABLE IGUAL longvalues
Rule 306   asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
Rule 307   asignacionLong -> VAL VARIABLE IGUAL longvalues
Rule 308   asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
Rule 309   longvalues -> INT
Rule 310   longvalues -> intvalues
Rule 311   longvalues -> stringCastLong
Rule 312   asignacionFloat -> VAR VARIABLE IGUAL floatvalues
Rule 313   asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
Rule 314   asignacionFloat -> VAL VARIABLE IGUAL floatvalues
Rule 315   asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
Rule 316   floatvalues -> FLOAT
Rule 317   floatvalues -> longvalues
Rule 318   floatvalues -> stringCastFloat
Rule 319   asignacionDouble -> VAR VARIABLE IGUAL doublevalues
Rule 320   asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
Rule 321   asignacionDouble -> VAL VARIABLE IGUAL doublevalues
Rule 322   asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
Rule 323   doublevalues -> DOUBLE
Rule 324   doublevalues -> floatvalues
Rule 325   doublevalues -> stringCastDouble
Rule 326   stringCastInt -> STRING PUNTO TO_INT
Rule 327   stringCastLong -> STRING PUNTO TO_LONG
Rule 328   stringCastFloat -> STRING PUNTO TO_FLOAT
Rule 329   stringCastDouble -> STRING PUNTO TO_DOUBLE

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 235
ARRAYCLASS           : 99 160 161 161 162 163 163 269 269 270 270
ARROBA               : 
BACKTICK             : 
BOOLCLASS            : 83 85 86 87 94
CASE                 : 189 193 197 201 205 209 213 217
CATCH                : 
CHAR                 : 76 77 78 79 102 209 244 244 251 252
CHARCLASS            : 77 79 80 81 92
CLASS                : 
COMA                 : 138 139 170 272 274 276 279 279 280 280 281 281 282 282 283 283 284 284 285 285 286 286 287 287 288 288 289 289 290 290 291 291 292 292 293 293 294 294 295 295 296 296 297 297 298 298
CORCHETE_D           : 99 100 161 161 163 163 167 168 269 270
CORCHETE_I           : 99 100 161 161 163 163 167 168 269 270
DEF                  : 115 116 123 124 125 126 127 128 129 130 131 132 133
DIFERENTE            : 255
DIVISION             : 267
DO                   : 
DOBLE_PUNTO          : 64 65 66 67 68 69 71 73 74 75 77 79 80 81 83 85 86 87 117 118 134 135 161 163 167 168 269 270 277 278 300 302 306 308 313 315 320 322
DOUBLE               : 114 201 273 274 281 285 287 288 289 290 293 297 323
DOUBLECLASS          : 68 69 97 270 281 285 287 288 289 290 293 297 320 322
ELSE                 : 223 224 225
EXTENDS              : 
FINAL                : 
FINALLY              : 
FLASE                : 109
FLOAT                : 113 197 282 283 284 285 286 289 294 298 316
FLOATCLASS           : 66 67 98 282 283 284 285 286 289 294 298 313 315
FOR                  : 175 176 177 178 179 180
FOR_SOME             : 
FUNCION_FLECHA       : 189 193 197 201 205 209 213 217
HASHTAG              : 
IF                   : 220 223 224
IGUAL                : 49 50 51 52 53 54 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 115 118 123 124 125 126 127 128 129 130 131 132 133 160 161 162 163 166 167 168 172 173 269 270 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 305 306 307 308 312 313 314 315 319 320 321 322
IGUAL_COMPARACION    : 254
IMPLICIT             : 
IMPORT               : 2
INT                  : 91 107 111 161 163 177 177 178 178 179 179 180 180 189 271 272 276 279 286 290 292 295 296 297 298 303 309
INTCLASS             : 95 269 279 286 290 292 295 296 297 298 300 302
ITERATOR             : 175 176 177 178 179 180
LAZY                 : 
LIBRERIA_IO          : 
LISTCLASS            : 100 166 167 167 168 168
LLAVE_D              : 1 115 116 123 124 125 126 127 128 129 130 131 132 133 174 175 176 177 178 179 180 181 219 220 223 224 225
LLAVE_I              : 1 115 116 123 124 125 126 127 128 129 130 131 132 133 174 175 176 177 178 179 180 181 219 220 223 224 225
LONG                 : 112 193 280 284 288 291 292 293 294 296
LONGCLASS            : 64 65 96 280 284 288 291 292 293 294 296 306 308
MACRO                : 
MAS                  : 142 265
MATCH                : 181
MAYOR                : 256
MAYOR_IGUAL          : 
MENOR                : 257
MENOR_IGUAL          : 
MENOS                : 264
MOD                  : 268
MULTIPLICACION       : 266
NEW                  : 161 163 167
NOT                  : 232 233 234 237
NULL                 : 
OBJECT               : 1
OR                   : 236
OVERRIDE             : 
PACKAGE              : 
PAR_D                : 91 106 107 120 121 122 135 140 141 144 146 147 148 149 160 161 162 163 166 167 168 171 174 175 176 177 178 179 180 220 223 224 269 270 275 276 279 279 280 280 281 281 282 282 283 283 284 284 285 285 286 286 287 287 288 288 289 289 290 290 291 291 292 292 293 293 294 294 295 295 296 296 297 297 298 298
PAR_I                : 91 106 107 120 121 122 135 140 141 144 146 147 148 149 160 161 162 163 166 167 168 171 174 175 176 177 178 179 180 220 223 224 269 270 275 276 279 279 280 280 281 281 282 282 283 283 284 284 285 285 286 286 287 287 288 288 289 289 290 290 291 291 292 292 293 293 294 294 295 295 296 296 297 297 298 298
PRINT                : 141
PRINTLN              : 140
PRIVATE              : 
PROTECTED            : 
PUNTO                : 4 4 4 154 155 275 276 326 327 328 329
READLINE             : 4 144
RETURN               : 123 124 125 126 127 128 129 130 131 132 133
REVERSE              : 
SEALED               : 
STARTSWITH           : 275 276
STRING               : 70 71 72 73 101 205 243 243 249 250 275 275 276 276 279 280 281 282 283 287 291 295 326 327 328 329
STRINGCLASS          : 71 73 74 75 93 279 280 281 282 283 287 291 295
SUBGUION             : 217
SUPER                : 
THIS                 : 
THROW                : 
TO                   : 177 179
TO_DOUBLE            : 157 329
TO_FLOAT             : 158 328
TO_INT               : 156 326
TO_LONG              : 159 327
TRAIT                : 
TRUE                 : 108
TRY                  : 
TYPE                 : 
UNTIL                : 178 180
VAL                  : 50 52 54 65 67 69 72 73 75 78 79 81 84 85 87 162 163 166 167 168 173 278 301 302 307 308 314 315 321 322
VAR                  : 49 51 53 64 66 68 70 71 74 76 77 80 82 83 86 160 161 172 175 179 180 269 270 277 299 300 305 306 312 313 319 320
VARIABLE             : 1 4 4 4 49 49 50 50 51 52 53 54 64 64 65 65 66 66 67 67 68 68 69 69 70 71 72 73 74 74 75 75 76 77 78 79 80 80 81 81 82 83 84 85 86 86 87 87 88 89 90 91 103 106 106 107 115 116 117 118 123 124 124 125 126 127 128 128 129 130 131 132 132 133 145 155 160 161 162 163 166 167 168 172 173 175 175 176 176 177 178 179 180 181 229 232 245 246 247 248 249 250 251 252 253 253 259 260 261 261 263 269 270 277 278 299 300 301 302 305 306 307 308 312 313 314 315 319 320 321 322
WHILE                : 174
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

aritmetica           : 31 42 51 52 90 126 130 239 239 240 241 262 263
aritmeticos          : 258 259 260 261 262 263
array                : 62
arrayDouble          : 165
arrayInt             : 164
asignacion           : 9 16 22 33 44
asignacionBoolean    : 61
asignacionChar       : 60
asignacionDouble     : 58
asignacionFloat      : 57
asignacionInt        : 56
asignacionLong       : 55
asignacionString     : 59
booleanos            : 82 83 84 85 105 213 230 233 242 242 247 248
caseBool             : 214 215 216
caseChar             : 210 211 212
caseDob              : 202 203 204
caseFlt              : 198 199 200
caseInt              : 190 191 192
caseLgn              : 194 195 196
caseStr              : 206 207 208
cases                : 181
casesBool            : 188 215
casesChar            : 187 211
casesDob             : 185 203
casesFlt             : 184 199
casesInt             : 182 191
casesLgn             : 183 195
casesStr             : 186 207
castingcall          : 151
castingfun           : 154 155
codeBlock            : 189 193 197 201 205 209 213 217
comparacion          : 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253
condicional          : 174 220 223 224 227
contenido            : 33 34 35 36 37 38 39 40 41 42 43 115 116 123 124 125 126 131 132 133 174 175 176 177 178 179 180 219 220 223 224 225
contenidoLine        : 218
cuerpo               : 1 3 15 16 17 18 19 20 21
declaracion          : 121 122
dectipo              : 123 124 125 126 127 128 129 130
dectipoTupla         : 131 132 133
dectupla             : 277 278
defcase              : 192 196 200 204 208 212 216
doublevalues         : 319 320 321 322
else                 : 222 226
elseif               : 221 224 226
entrada              : 8 26 37 48 152
floatvalues          : 312 313 314 315 324
for                  : 11 18 28 39
funcall              : 6 24 35 46 153
funcion              : 5 15
if                   : 13 19 30 40 221 222
impresion            : 7 25 36 47
inicio               : 2 0
intvalues            : 299 300 301 302 310
io                   : 2
list                 : 63
logicos              : 227
longvalues           : 305 306 307 308 317
match                : 12 20 29 41
numeros              : 104 238 238 240 241 245 246 258 258 259 260 262
parametro            : 115 116 123 124 125 126 127 128 129 130 131 132 133
parametros           : 119 122
reasignacion         : 23 34 45
relacional           : 231 234
returnCastable       : 150 154
returnfun            : 53 54 89 125 129 133
startsWith           : 14 21 32 43 110
stringCastDouble     : 325
stringCastFloat      : 318
stringCastInt        : 304
stringCastLong       : 311
tipo                 : 99 100 117 118 134 136 137 138 139 161 161 163 163 167 168
tipos                : 135
tiposentry           : 137 139
tuple                : 131 172 173
valor                : 88 91 118 123 127 142 143 169 170
valorC               : 227 228
valorI               : 140 141 142
valores              : 146 148 160 162 166 167 168 170 171
valoresDouble        : 270 274
valoresInt           : 269 272
varparen             : 145 148 149
while                : 10 17 27 38

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D
    (2) inicio -> . IMPORT io inicio
    (3) inicio -> . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . startsWith
    (15) cuerpo -> . funcion cuerpo
    (16) cuerpo -> . asignacion cuerpo
    (17) cuerpo -> . while cuerpo
    (18) cuerpo -> . for cuerpo
    (19) cuerpo -> . if cuerpo
    (20) cuerpo -> . match cuerpo
    (21) cuerpo -> . startsWith cuerpo
    (115) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (116) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    OBJECT          shift and go to state 2
    IMPORT          shift and go to state 5
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    inicio                         shift and go to state 1
    cuerpo                         shift and go to state 4
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    for                            shift and go to state 12
    match                          shift and go to state 13
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> OBJECT . VARIABLE LLAVE_I cuerpo LLAVE_D

    VARIABLE        shift and go to state 37


state 3

    (145) funcall -> VARIABLE . varparen
    (181) match -> VARIABLE . MATCH LLAVE_I cases LLAVE_D
    (146) varparen -> . PAR_I valores PAR_D
    (147) varparen -> . PAR_I PAR_D
    (148) varparen -> . varparen PAR_I valores PAR_D
    (149) varparen -> . varparen PAR_I PAR_D

    MATCH           shift and go to state 39
    PAR_I           shift and go to state 40

    varparen                       shift and go to state 38

state 4

    (3) inicio -> cuerpo .

    $end            reduce using rule 3 (inicio -> cuerpo .)


state 5

    (2) inicio -> IMPORT . io inicio
    (4) io -> . VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE

    VARIABLE        shift and go to state 42

    io                             shift and go to state 41

state 6

    (5) cuerpo -> funcion .
    (15) cuerpo -> funcion . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . startsWith
    (15) cuerpo -> . funcion cuerpo
    (16) cuerpo -> . asignacion cuerpo
    (17) cuerpo -> . while cuerpo
    (18) cuerpo -> . for cuerpo
    (19) cuerpo -> . if cuerpo
    (20) cuerpo -> . match cuerpo
    (21) cuerpo -> . startsWith cuerpo
    (115) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (116) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    $end            reduce using rule 5 (cuerpo -> funcion .)
    LLAVE_D         reduce using rule 5 (cuerpo -> funcion .)
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    funcion                        shift and go to state 6
    cuerpo                         shift and go to state 43
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    for                            shift and go to state 12
    match                          shift and go to state 13
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 7

    (6) cuerpo -> funcall .

    $end            reduce using rule 6 (cuerpo -> funcall .)
    LLAVE_D         reduce using rule 6 (cuerpo -> funcall .)


state 8

    (7) cuerpo -> impresion .

    $end            reduce using rule 7 (cuerpo -> impresion .)
    LLAVE_D         reduce using rule 7 (cuerpo -> impresion .)


state 9

    (8) cuerpo -> entrada .

    $end            reduce using rule 8 (cuerpo -> entrada .)
    LLAVE_D         reduce using rule 8 (cuerpo -> entrada .)


state 10

    (9) cuerpo -> asignacion .
    (16) cuerpo -> asignacion . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . startsWith
    (15) cuerpo -> . funcion cuerpo
    (16) cuerpo -> . asignacion cuerpo
    (17) cuerpo -> . while cuerpo
    (18) cuerpo -> . for cuerpo
    (19) cuerpo -> . if cuerpo
    (20) cuerpo -> . match cuerpo
    (21) cuerpo -> . startsWith cuerpo
    (115) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (116) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    $end            reduce using rule 9 (cuerpo -> asignacion .)
    LLAVE_D         reduce using rule 9 (cuerpo -> asignacion .)
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    asignacion                     shift and go to state 10
    cuerpo                         shift and go to state 44
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    while                          shift and go to state 11
    for                            shift and go to state 12
    match                          shift and go to state 13
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 11

    (10) cuerpo -> while .
    (17) cuerpo -> while . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . startsWith
    (15) cuerpo -> . funcion cuerpo
    (16) cuerpo -> . asignacion cuerpo
    (17) cuerpo -> . while cuerpo
    (18) cuerpo -> . for cuerpo
    (19) cuerpo -> . if cuerpo
    (20) cuerpo -> . match cuerpo
    (21) cuerpo -> . startsWith cuerpo
    (115) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (116) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    $end            reduce using rule 10 (cuerpo -> while .)
    LLAVE_D         reduce using rule 10 (cuerpo -> while .)
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    while                          shift and go to state 11
    cuerpo                         shift and go to state 45
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    for                            shift and go to state 12
    match                          shift and go to state 13
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 12

    (11) cuerpo -> for .
    (18) cuerpo -> for . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . startsWith
    (15) cuerpo -> . funcion cuerpo
    (16) cuerpo -> . asignacion cuerpo
    (17) cuerpo -> . while cuerpo
    (18) cuerpo -> . for cuerpo
    (19) cuerpo -> . if cuerpo
    (20) cuerpo -> . match cuerpo
    (21) cuerpo -> . startsWith cuerpo
    (115) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (116) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    $end            reduce using rule 11 (cuerpo -> for .)
    LLAVE_D         reduce using rule 11 (cuerpo -> for .)
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    for                            shift and go to state 12
    cuerpo                         shift and go to state 46
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    match                          shift and go to state 13
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 13

    (12) cuerpo -> match .
    (20) cuerpo -> match . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . startsWith
    (15) cuerpo -> . funcion cuerpo
    (16) cuerpo -> . asignacion cuerpo
    (17) cuerpo -> . while cuerpo
    (18) cuerpo -> . for cuerpo
    (19) cuerpo -> . if cuerpo
    (20) cuerpo -> . match cuerpo
    (21) cuerpo -> . startsWith cuerpo
    (115) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (116) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    $end            reduce using rule 12 (cuerpo -> match .)
    LLAVE_D         reduce using rule 12 (cuerpo -> match .)
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    match                          shift and go to state 13
    cuerpo                         shift and go to state 47
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    for                            shift and go to state 12
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 14

    (13) cuerpo -> if .
    (19) cuerpo -> if . cuerpo
    (221) if -> if . elseif
    (222) if -> if . else
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . startsWith
    (15) cuerpo -> . funcion cuerpo
    (16) cuerpo -> . asignacion cuerpo
    (17) cuerpo -> . while cuerpo
    (18) cuerpo -> . for cuerpo
    (19) cuerpo -> . if cuerpo
    (20) cuerpo -> . match cuerpo
    (21) cuerpo -> . startsWith cuerpo
    (223) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (224) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (225) else -> . ELSE LLAVE_I contenido LLAVE_D
    (226) else -> . elseif else
    (115) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (116) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    $end            reduce using rule 13 (cuerpo -> if .)
    LLAVE_D         reduce using rule 13 (cuerpo -> if .)
    ELSE            shift and go to state 51
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    if                             shift and go to state 14
    cuerpo                         shift and go to state 48
    elseif                         shift and go to state 49
    else                           shift and go to state 50
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    for                            shift and go to state 12
    match                          shift and go to state 13
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 15

    (14) cuerpo -> startsWith .
    (21) cuerpo -> startsWith . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . startsWith
    (15) cuerpo -> . funcion cuerpo
    (16) cuerpo -> . asignacion cuerpo
    (17) cuerpo -> . while cuerpo
    (18) cuerpo -> . for cuerpo
    (19) cuerpo -> . if cuerpo
    (20) cuerpo -> . match cuerpo
    (21) cuerpo -> . startsWith cuerpo
    (115) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (116) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    $end            reduce using rule 14 (cuerpo -> startsWith .)
    LLAVE_D         reduce using rule 14 (cuerpo -> startsWith .)
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    startsWith                     shift and go to state 15
    cuerpo                         shift and go to state 52
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    for                            shift and go to state 12
    match                          shift and go to state 13
    if                             shift and go to state 14
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 16

    (115) funcion -> DEF . VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (116) funcion -> DEF . VARIABLE parametro LLAVE_I contenido LLAVE_D
    (123) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (124) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (126) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (127) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (128) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (129) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (130) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (131) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D

    VARIABLE        shift and go to state 53


state 17

    (140) impresion -> PRINTLN . PAR_I valorI PAR_D

    PAR_I           shift and go to state 54


state 18

    (141) impresion -> PRINT . PAR_I valorI PAR_D

    PAR_I           shift and go to state 55


state 19

    (144) entrada -> READLINE . PAR_I PAR_D

    PAR_I           shift and go to state 56


state 20

    (49) asignacion -> VAR . VARIABLE IGUAL VARIABLE
    (51) asignacion -> VAR . VARIABLE IGUAL aritmetica
    (53) asignacion -> VAR . VARIABLE IGUAL returnfun
    (172) asignacion -> VAR . VARIABLE IGUAL tuple
    (277) asignacion -> VAR . VARIABLE DOBLE_PUNTO dectupla
    (64) asignacionLong -> VAR . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> VAR . VARIABLE IGUAL longvalues
    (306) asignacionLong -> VAR . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> VAR . VARIABLE IGUAL intvalues
    (300) asignacionInt -> VAR . VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> VAR . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> VAR . VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> VAR . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> VAR . VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> VAR . VARIABLE IGUAL STRING
    (71) asignacionString -> VAR . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> VAR . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> VAR . VARIABLE IGUAL CHAR
    (77) asignacionChar -> VAR . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> VAR . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> VAR . VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> VAR . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> VAR . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> VAR . VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (269) arrayInt -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VARIABLE        shift and go to state 57


state 21

    (50) asignacion -> VAL . VARIABLE IGUAL VARIABLE
    (52) asignacion -> VAL . VARIABLE IGUAL aritmetica
    (54) asignacion -> VAL . VARIABLE IGUAL returnfun
    (173) asignacion -> VAL . VARIABLE IGUAL tuple
    (278) asignacion -> VAL . VARIABLE DOBLE_PUNTO dectupla
    (65) asignacionLong -> VAL . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (307) asignacionLong -> VAL . VARIABLE IGUAL longvalues
    (308) asignacionLong -> VAL . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (301) asignacionInt -> VAL . VARIABLE IGUAL intvalues
    (302) asignacionInt -> VAL . VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (67) asignacionFloat -> VAL . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (314) asignacionFloat -> VAL . VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> VAL . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (69) asignacionDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (321) asignacionDouble -> VAL . VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (72) asignacionString -> VAL . VARIABLE IGUAL STRING
    (73) asignacionString -> VAL . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> VAL . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (78) asignacionChar -> VAL . VARIABLE IGUAL CHAR
    (79) asignacionChar -> VAL . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> VAL . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> VAL . VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> VAL . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> VAL . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (162) array -> VAL . VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> VAL . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (166) list -> VAL . VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> VAL . VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> VAL . VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    VARIABLE        shift and go to state 58


state 22

    (55) asignacion -> asignacionLong .

    DEF             reduce using rule 55 (asignacion -> asignacionLong .)
    VARIABLE        reduce using rule 55 (asignacion -> asignacionLong .)
    PRINTLN         reduce using rule 55 (asignacion -> asignacionLong .)
    PRINT           reduce using rule 55 (asignacion -> asignacionLong .)
    READLINE        reduce using rule 55 (asignacion -> asignacionLong .)
    VAR             reduce using rule 55 (asignacion -> asignacionLong .)
    VAL             reduce using rule 55 (asignacion -> asignacionLong .)
    WHILE           reduce using rule 55 (asignacion -> asignacionLong .)
    FOR             reduce using rule 55 (asignacion -> asignacionLong .)
    IF              reduce using rule 55 (asignacion -> asignacionLong .)
    STRING          reduce using rule 55 (asignacion -> asignacionLong .)
    $end            reduce using rule 55 (asignacion -> asignacionLong .)
    LLAVE_D         reduce using rule 55 (asignacion -> asignacionLong .)
    INT             reduce using rule 55 (asignacion -> asignacionLong .)
    LONG            reduce using rule 55 (asignacion -> asignacionLong .)
    FLOAT           reduce using rule 55 (asignacion -> asignacionLong .)
    DOUBLE          reduce using rule 55 (asignacion -> asignacionLong .)
    RETURN          reduce using rule 55 (asignacion -> asignacionLong .)
    CASE            reduce using rule 55 (asignacion -> asignacionLong .)


state 23

    (56) asignacion -> asignacionInt .

    DEF             reduce using rule 56 (asignacion -> asignacionInt .)
    VARIABLE        reduce using rule 56 (asignacion -> asignacionInt .)
    PRINTLN         reduce using rule 56 (asignacion -> asignacionInt .)
    PRINT           reduce using rule 56 (asignacion -> asignacionInt .)
    READLINE        reduce using rule 56 (asignacion -> asignacionInt .)
    VAR             reduce using rule 56 (asignacion -> asignacionInt .)
    VAL             reduce using rule 56 (asignacion -> asignacionInt .)
    WHILE           reduce using rule 56 (asignacion -> asignacionInt .)
    FOR             reduce using rule 56 (asignacion -> asignacionInt .)
    IF              reduce using rule 56 (asignacion -> asignacionInt .)
    STRING          reduce using rule 56 (asignacion -> asignacionInt .)
    $end            reduce using rule 56 (asignacion -> asignacionInt .)
    LLAVE_D         reduce using rule 56 (asignacion -> asignacionInt .)
    INT             reduce using rule 56 (asignacion -> asignacionInt .)
    LONG            reduce using rule 56 (asignacion -> asignacionInt .)
    FLOAT           reduce using rule 56 (asignacion -> asignacionInt .)
    DOUBLE          reduce using rule 56 (asignacion -> asignacionInt .)
    RETURN          reduce using rule 56 (asignacion -> asignacionInt .)
    CASE            reduce using rule 56 (asignacion -> asignacionInt .)


state 24

    (57) asignacion -> asignacionFloat .

    DEF             reduce using rule 57 (asignacion -> asignacionFloat .)
    VARIABLE        reduce using rule 57 (asignacion -> asignacionFloat .)
    PRINTLN         reduce using rule 57 (asignacion -> asignacionFloat .)
    PRINT           reduce using rule 57 (asignacion -> asignacionFloat .)
    READLINE        reduce using rule 57 (asignacion -> asignacionFloat .)
    VAR             reduce using rule 57 (asignacion -> asignacionFloat .)
    VAL             reduce using rule 57 (asignacion -> asignacionFloat .)
    WHILE           reduce using rule 57 (asignacion -> asignacionFloat .)
    FOR             reduce using rule 57 (asignacion -> asignacionFloat .)
    IF              reduce using rule 57 (asignacion -> asignacionFloat .)
    STRING          reduce using rule 57 (asignacion -> asignacionFloat .)
    $end            reduce using rule 57 (asignacion -> asignacionFloat .)
    LLAVE_D         reduce using rule 57 (asignacion -> asignacionFloat .)
    INT             reduce using rule 57 (asignacion -> asignacionFloat .)
    LONG            reduce using rule 57 (asignacion -> asignacionFloat .)
    FLOAT           reduce using rule 57 (asignacion -> asignacionFloat .)
    DOUBLE          reduce using rule 57 (asignacion -> asignacionFloat .)
    RETURN          reduce using rule 57 (asignacion -> asignacionFloat .)
    CASE            reduce using rule 57 (asignacion -> asignacionFloat .)


state 25

    (58) asignacion -> asignacionDouble .

    DEF             reduce using rule 58 (asignacion -> asignacionDouble .)
    VARIABLE        reduce using rule 58 (asignacion -> asignacionDouble .)
    PRINTLN         reduce using rule 58 (asignacion -> asignacionDouble .)
    PRINT           reduce using rule 58 (asignacion -> asignacionDouble .)
    READLINE        reduce using rule 58 (asignacion -> asignacionDouble .)
    VAR             reduce using rule 58 (asignacion -> asignacionDouble .)
    VAL             reduce using rule 58 (asignacion -> asignacionDouble .)
    WHILE           reduce using rule 58 (asignacion -> asignacionDouble .)
    FOR             reduce using rule 58 (asignacion -> asignacionDouble .)
    IF              reduce using rule 58 (asignacion -> asignacionDouble .)
    STRING          reduce using rule 58 (asignacion -> asignacionDouble .)
    $end            reduce using rule 58 (asignacion -> asignacionDouble .)
    LLAVE_D         reduce using rule 58 (asignacion -> asignacionDouble .)
    INT             reduce using rule 58 (asignacion -> asignacionDouble .)
    LONG            reduce using rule 58 (asignacion -> asignacionDouble .)
    FLOAT           reduce using rule 58 (asignacion -> asignacionDouble .)
    DOUBLE          reduce using rule 58 (asignacion -> asignacionDouble .)
    RETURN          reduce using rule 58 (asignacion -> asignacionDouble .)
    CASE            reduce using rule 58 (asignacion -> asignacionDouble .)


state 26

    (59) asignacion -> asignacionString .

    DEF             reduce using rule 59 (asignacion -> asignacionString .)
    VARIABLE        reduce using rule 59 (asignacion -> asignacionString .)
    PRINTLN         reduce using rule 59 (asignacion -> asignacionString .)
    PRINT           reduce using rule 59 (asignacion -> asignacionString .)
    READLINE        reduce using rule 59 (asignacion -> asignacionString .)
    VAR             reduce using rule 59 (asignacion -> asignacionString .)
    VAL             reduce using rule 59 (asignacion -> asignacionString .)
    WHILE           reduce using rule 59 (asignacion -> asignacionString .)
    FOR             reduce using rule 59 (asignacion -> asignacionString .)
    IF              reduce using rule 59 (asignacion -> asignacionString .)
    STRING          reduce using rule 59 (asignacion -> asignacionString .)
    $end            reduce using rule 59 (asignacion -> asignacionString .)
    LLAVE_D         reduce using rule 59 (asignacion -> asignacionString .)
    INT             reduce using rule 59 (asignacion -> asignacionString .)
    LONG            reduce using rule 59 (asignacion -> asignacionString .)
    FLOAT           reduce using rule 59 (asignacion -> asignacionString .)
    DOUBLE          reduce using rule 59 (asignacion -> asignacionString .)
    RETURN          reduce using rule 59 (asignacion -> asignacionString .)
    CASE            reduce using rule 59 (asignacion -> asignacionString .)


state 27

    (60) asignacion -> asignacionChar .

    DEF             reduce using rule 60 (asignacion -> asignacionChar .)
    VARIABLE        reduce using rule 60 (asignacion -> asignacionChar .)
    PRINTLN         reduce using rule 60 (asignacion -> asignacionChar .)
    PRINT           reduce using rule 60 (asignacion -> asignacionChar .)
    READLINE        reduce using rule 60 (asignacion -> asignacionChar .)
    VAR             reduce using rule 60 (asignacion -> asignacionChar .)
    VAL             reduce using rule 60 (asignacion -> asignacionChar .)
    WHILE           reduce using rule 60 (asignacion -> asignacionChar .)
    FOR             reduce using rule 60 (asignacion -> asignacionChar .)
    IF              reduce using rule 60 (asignacion -> asignacionChar .)
    STRING          reduce using rule 60 (asignacion -> asignacionChar .)
    $end            reduce using rule 60 (asignacion -> asignacionChar .)
    LLAVE_D         reduce using rule 60 (asignacion -> asignacionChar .)
    INT             reduce using rule 60 (asignacion -> asignacionChar .)
    LONG            reduce using rule 60 (asignacion -> asignacionChar .)
    FLOAT           reduce using rule 60 (asignacion -> asignacionChar .)
    DOUBLE          reduce using rule 60 (asignacion -> asignacionChar .)
    RETURN          reduce using rule 60 (asignacion -> asignacionChar .)
    CASE            reduce using rule 60 (asignacion -> asignacionChar .)


state 28

    (61) asignacion -> asignacionBoolean .

    DEF             reduce using rule 61 (asignacion -> asignacionBoolean .)
    VARIABLE        reduce using rule 61 (asignacion -> asignacionBoolean .)
    PRINTLN         reduce using rule 61 (asignacion -> asignacionBoolean .)
    PRINT           reduce using rule 61 (asignacion -> asignacionBoolean .)
    READLINE        reduce using rule 61 (asignacion -> asignacionBoolean .)
    VAR             reduce using rule 61 (asignacion -> asignacionBoolean .)
    VAL             reduce using rule 61 (asignacion -> asignacionBoolean .)
    WHILE           reduce using rule 61 (asignacion -> asignacionBoolean .)
    FOR             reduce using rule 61 (asignacion -> asignacionBoolean .)
    IF              reduce using rule 61 (asignacion -> asignacionBoolean .)
    STRING          reduce using rule 61 (asignacion -> asignacionBoolean .)
    $end            reduce using rule 61 (asignacion -> asignacionBoolean .)
    LLAVE_D         reduce using rule 61 (asignacion -> asignacionBoolean .)
    INT             reduce using rule 61 (asignacion -> asignacionBoolean .)
    LONG            reduce using rule 61 (asignacion -> asignacionBoolean .)
    FLOAT           reduce using rule 61 (asignacion -> asignacionBoolean .)
    DOUBLE          reduce using rule 61 (asignacion -> asignacionBoolean .)
    RETURN          reduce using rule 61 (asignacion -> asignacionBoolean .)
    CASE            reduce using rule 61 (asignacion -> asignacionBoolean .)


state 29

    (62) asignacion -> array .

    DEF             reduce using rule 62 (asignacion -> array .)
    VARIABLE        reduce using rule 62 (asignacion -> array .)
    PRINTLN         reduce using rule 62 (asignacion -> array .)
    PRINT           reduce using rule 62 (asignacion -> array .)
    READLINE        reduce using rule 62 (asignacion -> array .)
    VAR             reduce using rule 62 (asignacion -> array .)
    VAL             reduce using rule 62 (asignacion -> array .)
    WHILE           reduce using rule 62 (asignacion -> array .)
    FOR             reduce using rule 62 (asignacion -> array .)
    IF              reduce using rule 62 (asignacion -> array .)
    STRING          reduce using rule 62 (asignacion -> array .)
    $end            reduce using rule 62 (asignacion -> array .)
    LLAVE_D         reduce using rule 62 (asignacion -> array .)
    INT             reduce using rule 62 (asignacion -> array .)
    LONG            reduce using rule 62 (asignacion -> array .)
    FLOAT           reduce using rule 62 (asignacion -> array .)
    DOUBLE          reduce using rule 62 (asignacion -> array .)
    RETURN          reduce using rule 62 (asignacion -> array .)
    CASE            reduce using rule 62 (asignacion -> array .)


state 30

    (63) asignacion -> list .

    DEF             reduce using rule 63 (asignacion -> list .)
    VARIABLE        reduce using rule 63 (asignacion -> list .)
    PRINTLN         reduce using rule 63 (asignacion -> list .)
    PRINT           reduce using rule 63 (asignacion -> list .)
    READLINE        reduce using rule 63 (asignacion -> list .)
    VAR             reduce using rule 63 (asignacion -> list .)
    VAL             reduce using rule 63 (asignacion -> list .)
    WHILE           reduce using rule 63 (asignacion -> list .)
    FOR             reduce using rule 63 (asignacion -> list .)
    IF              reduce using rule 63 (asignacion -> list .)
    STRING          reduce using rule 63 (asignacion -> list .)
    $end            reduce using rule 63 (asignacion -> list .)
    LLAVE_D         reduce using rule 63 (asignacion -> list .)
    INT             reduce using rule 63 (asignacion -> list .)
    LONG            reduce using rule 63 (asignacion -> list .)
    FLOAT           reduce using rule 63 (asignacion -> list .)
    DOUBLE          reduce using rule 63 (asignacion -> list .)
    RETURN          reduce using rule 63 (asignacion -> list .)
    CASE            reduce using rule 63 (asignacion -> list .)


state 31

    (174) while -> WHILE . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 59


state 32

    (175) for -> FOR . PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> FOR . PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> FOR . PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> FOR . PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> FOR . PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> FOR . PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 60


state 33

    (220) if -> IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 61


state 34

    (275) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    PUNTO           shift and go to state 62


state 35

    (164) array -> arrayInt .

    DEF             reduce using rule 164 (array -> arrayInt .)
    VARIABLE        reduce using rule 164 (array -> arrayInt .)
    PRINTLN         reduce using rule 164 (array -> arrayInt .)
    PRINT           reduce using rule 164 (array -> arrayInt .)
    READLINE        reduce using rule 164 (array -> arrayInt .)
    VAR             reduce using rule 164 (array -> arrayInt .)
    VAL             reduce using rule 164 (array -> arrayInt .)
    WHILE           reduce using rule 164 (array -> arrayInt .)
    FOR             reduce using rule 164 (array -> arrayInt .)
    IF              reduce using rule 164 (array -> arrayInt .)
    STRING          reduce using rule 164 (array -> arrayInt .)
    $end            reduce using rule 164 (array -> arrayInt .)
    LLAVE_D         reduce using rule 164 (array -> arrayInt .)
    INT             reduce using rule 164 (array -> arrayInt .)
    LONG            reduce using rule 164 (array -> arrayInt .)
    FLOAT           reduce using rule 164 (array -> arrayInt .)
    DOUBLE          reduce using rule 164 (array -> arrayInt .)
    RETURN          reduce using rule 164 (array -> arrayInt .)
    CASE            reduce using rule 164 (array -> arrayInt .)


state 36

    (165) array -> arrayDouble .

    DEF             reduce using rule 165 (array -> arrayDouble .)
    VARIABLE        reduce using rule 165 (array -> arrayDouble .)
    PRINTLN         reduce using rule 165 (array -> arrayDouble .)
    PRINT           reduce using rule 165 (array -> arrayDouble .)
    READLINE        reduce using rule 165 (array -> arrayDouble .)
    VAR             reduce using rule 165 (array -> arrayDouble .)
    VAL             reduce using rule 165 (array -> arrayDouble .)
    WHILE           reduce using rule 165 (array -> arrayDouble .)
    FOR             reduce using rule 165 (array -> arrayDouble .)
    IF              reduce using rule 165 (array -> arrayDouble .)
    STRING          reduce using rule 165 (array -> arrayDouble .)
    $end            reduce using rule 165 (array -> arrayDouble .)
    LLAVE_D         reduce using rule 165 (array -> arrayDouble .)
    INT             reduce using rule 165 (array -> arrayDouble .)
    LONG            reduce using rule 165 (array -> arrayDouble .)
    FLOAT           reduce using rule 165 (array -> arrayDouble .)
    DOUBLE          reduce using rule 165 (array -> arrayDouble .)
    RETURN          reduce using rule 165 (array -> arrayDouble .)
    CASE            reduce using rule 165 (array -> arrayDouble .)


state 37

    (1) inicio -> OBJECT VARIABLE . LLAVE_I cuerpo LLAVE_D

    LLAVE_I         shift and go to state 63


state 38

    (145) funcall -> VARIABLE varparen .
    (148) varparen -> varparen . PAR_I valores PAR_D
    (149) varparen -> varparen . PAR_I PAR_D

    $end            reduce using rule 145 (funcall -> VARIABLE varparen .)
    LLAVE_D         reduce using rule 145 (funcall -> VARIABLE varparen .)
    VAR             reduce using rule 145 (funcall -> VARIABLE varparen .)
    VAL             reduce using rule 145 (funcall -> VARIABLE varparen .)
    VARIABLE        reduce using rule 145 (funcall -> VARIABLE varparen .)
    PRINTLN         reduce using rule 145 (funcall -> VARIABLE varparen .)
    PRINT           reduce using rule 145 (funcall -> VARIABLE varparen .)
    READLINE        reduce using rule 145 (funcall -> VARIABLE varparen .)
    WHILE           reduce using rule 145 (funcall -> VARIABLE varparen .)
    FOR             reduce using rule 145 (funcall -> VARIABLE varparen .)
    IF              reduce using rule 145 (funcall -> VARIABLE varparen .)
    STRING          reduce using rule 145 (funcall -> VARIABLE varparen .)
    INT             reduce using rule 145 (funcall -> VARIABLE varparen .)
    LONG            reduce using rule 145 (funcall -> VARIABLE varparen .)
    FLOAT           reduce using rule 145 (funcall -> VARIABLE varparen .)
    DOUBLE          reduce using rule 145 (funcall -> VARIABLE varparen .)
    PUNTO           reduce using rule 145 (funcall -> VARIABLE varparen .)
    DEF             reduce using rule 145 (funcall -> VARIABLE varparen .)
    RETURN          reduce using rule 145 (funcall -> VARIABLE varparen .)
    CASE            reduce using rule 145 (funcall -> VARIABLE varparen .)
    PAR_I           shift and go to state 64


state 39

    (181) match -> VARIABLE MATCH . LLAVE_I cases LLAVE_D

    LLAVE_I         shift and go to state 65


state 40

    (146) varparen -> PAR_I . valores PAR_D
    (147) varparen -> PAR_I . PAR_D
    (169) valores -> . valor
    (170) valores -> . valor COMA valores
    (101) valor -> . STRING
    (102) valor -> . CHAR
    (103) valor -> . VARIABLE
    (104) valor -> . numeros
    (105) valor -> . booleanos
    (106) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (107) valor -> . VARIABLE PAR_I INT PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    PAR_D           shift and go to state 67
    STRING          shift and go to state 69
    CHAR            shift and go to state 70
    VARIABLE        shift and go to state 71
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79

    valores                        shift and go to state 66
    valor                          shift and go to state 68
    numeros                        shift and go to state 72
    booleanos                      shift and go to state 73
    startsWith                     shift and go to state 80

state 41

    (2) inicio -> IMPORT io . inicio
    (1) inicio -> . OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D
    (2) inicio -> . IMPORT io inicio
    (3) inicio -> . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . startsWith
    (15) cuerpo -> . funcion cuerpo
    (16) cuerpo -> . asignacion cuerpo
    (17) cuerpo -> . while cuerpo
    (18) cuerpo -> . for cuerpo
    (19) cuerpo -> . if cuerpo
    (20) cuerpo -> . match cuerpo
    (21) cuerpo -> . startsWith cuerpo
    (115) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (116) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    OBJECT          shift and go to state 2
    IMPORT          shift and go to state 5
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    inicio                         shift and go to state 81
    cuerpo                         shift and go to state 4
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    for                            shift and go to state 12
    match                          shift and go to state 13
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 42

    (4) io -> VARIABLE . PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE

    PUNTO           shift and go to state 82


state 43

    (15) cuerpo -> funcion cuerpo .

    $end            reduce using rule 15 (cuerpo -> funcion cuerpo .)
    LLAVE_D         reduce using rule 15 (cuerpo -> funcion cuerpo .)


state 44

    (16) cuerpo -> asignacion cuerpo .

    $end            reduce using rule 16 (cuerpo -> asignacion cuerpo .)
    LLAVE_D         reduce using rule 16 (cuerpo -> asignacion cuerpo .)


state 45

    (17) cuerpo -> while cuerpo .

    $end            reduce using rule 17 (cuerpo -> while cuerpo .)
    LLAVE_D         reduce using rule 17 (cuerpo -> while cuerpo .)


state 46

    (18) cuerpo -> for cuerpo .

    $end            reduce using rule 18 (cuerpo -> for cuerpo .)
    LLAVE_D         reduce using rule 18 (cuerpo -> for cuerpo .)


state 47

    (20) cuerpo -> match cuerpo .

    $end            reduce using rule 20 (cuerpo -> match cuerpo .)
    LLAVE_D         reduce using rule 20 (cuerpo -> match cuerpo .)


state 48

    (19) cuerpo -> if cuerpo .

    $end            reduce using rule 19 (cuerpo -> if cuerpo .)
    LLAVE_D         reduce using rule 19 (cuerpo -> if cuerpo .)


state 49

    (221) if -> if elseif .
    (226) else -> elseif . else
    (225) else -> . ELSE LLAVE_I contenido LLAVE_D
    (226) else -> . elseif else
    (223) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (224) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

  ! shift/reduce conflict for ELSE resolved as shift
    DEF             reduce using rule 221 (if -> if elseif .)
    VARIABLE        reduce using rule 221 (if -> if elseif .)
    PRINTLN         reduce using rule 221 (if -> if elseif .)
    PRINT           reduce using rule 221 (if -> if elseif .)
    READLINE        reduce using rule 221 (if -> if elseif .)
    VAR             reduce using rule 221 (if -> if elseif .)
    VAL             reduce using rule 221 (if -> if elseif .)
    WHILE           reduce using rule 221 (if -> if elseif .)
    FOR             reduce using rule 221 (if -> if elseif .)
    IF              reduce using rule 221 (if -> if elseif .)
    STRING          reduce using rule 221 (if -> if elseif .)
    $end            reduce using rule 221 (if -> if elseif .)
    LLAVE_D         reduce using rule 221 (if -> if elseif .)
    INT             reduce using rule 221 (if -> if elseif .)
    LONG            reduce using rule 221 (if -> if elseif .)
    FLOAT           reduce using rule 221 (if -> if elseif .)
    DOUBLE          reduce using rule 221 (if -> if elseif .)
    RETURN          reduce using rule 221 (if -> if elseif .)
    ELSE            shift and go to state 85

  ! ELSE            [ reduce using rule 221 (if -> if elseif .) ]

    elseif                         shift and go to state 83
    else                           shift and go to state 84

state 50

    (222) if -> if else .

    ELSE            reduce using rule 222 (if -> if else .)
    DEF             reduce using rule 222 (if -> if else .)
    VARIABLE        reduce using rule 222 (if -> if else .)
    PRINTLN         reduce using rule 222 (if -> if else .)
    PRINT           reduce using rule 222 (if -> if else .)
    READLINE        reduce using rule 222 (if -> if else .)
    VAR             reduce using rule 222 (if -> if else .)
    VAL             reduce using rule 222 (if -> if else .)
    WHILE           reduce using rule 222 (if -> if else .)
    FOR             reduce using rule 222 (if -> if else .)
    IF              reduce using rule 222 (if -> if else .)
    STRING          reduce using rule 222 (if -> if else .)
    $end            reduce using rule 222 (if -> if else .)
    LLAVE_D         reduce using rule 222 (if -> if else .)
    INT             reduce using rule 222 (if -> if else .)
    LONG            reduce using rule 222 (if -> if else .)
    FLOAT           reduce using rule 222 (if -> if else .)
    DOUBLE          reduce using rule 222 (if -> if else .)
    RETURN          reduce using rule 222 (if -> if else .)


state 51

    (223) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (224) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (225) else -> ELSE . LLAVE_I contenido LLAVE_D

    IF              shift and go to state 86
    LLAVE_I         shift and go to state 87


state 52

    (21) cuerpo -> startsWith cuerpo .

    $end            reduce using rule 21 (cuerpo -> startsWith cuerpo .)
    LLAVE_D         reduce using rule 21 (cuerpo -> startsWith cuerpo .)


state 53

    (115) funcion -> DEF VARIABLE . parametro IGUAL LLAVE_I contenido LLAVE_D
    (116) funcion -> DEF VARIABLE . parametro LLAVE_I contenido LLAVE_D
    (123) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (124) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (126) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (127) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (128) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (129) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (130) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (131) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (119) parametro -> . parametros
    (120) parametro -> . PAR_I PAR_D
    (121) parametros -> . PAR_I declaracion PAR_D
    (122) parametros -> . PAR_I declaracion PAR_D parametros

    PAR_I           shift and go to state 90

    parametro                      shift and go to state 88
    parametros                     shift and go to state 89

state 54

    (140) impresion -> PRINTLN PAR_I . valorI PAR_D
    (142) valorI -> . valor MAS valorI
    (143) valorI -> . valor
    (101) valor -> . STRING
    (102) valor -> . CHAR
    (103) valor -> . VARIABLE
    (104) valor -> . numeros
    (105) valor -> . booleanos
    (106) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (107) valor -> . VARIABLE PAR_I INT PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 69
    CHAR            shift and go to state 70
    VARIABLE        shift and go to state 71
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79

    valorI                         shift and go to state 91
    valor                          shift and go to state 92
    numeros                        shift and go to state 72
    booleanos                      shift and go to state 73
    startsWith                     shift and go to state 80

state 55

    (141) impresion -> PRINT PAR_I . valorI PAR_D
    (142) valorI -> . valor MAS valorI
    (143) valorI -> . valor
    (101) valor -> . STRING
    (102) valor -> . CHAR
    (103) valor -> . VARIABLE
    (104) valor -> . numeros
    (105) valor -> . booleanos
    (106) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (107) valor -> . VARIABLE PAR_I INT PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 69
    CHAR            shift and go to state 70
    VARIABLE        shift and go to state 71
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79

    valorI                         shift and go to state 93
    valor                          shift and go to state 92
    numeros                        shift and go to state 72
    booleanos                      shift and go to state 73
    startsWith                     shift and go to state 80

state 56

    (144) entrada -> READLINE PAR_I . PAR_D

    PAR_D           shift and go to state 94


state 57

    (49) asignacion -> VAR VARIABLE . IGUAL VARIABLE
    (51) asignacion -> VAR VARIABLE . IGUAL aritmetica
    (53) asignacion -> VAR VARIABLE . IGUAL returnfun
    (172) asignacion -> VAR VARIABLE . IGUAL tuple
    (277) asignacion -> VAR VARIABLE . DOBLE_PUNTO dectupla
    (64) asignacionLong -> VAR VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> VAR VARIABLE . IGUAL longvalues
    (306) asignacionLong -> VAR VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> VAR VARIABLE . IGUAL intvalues
    (300) asignacionInt -> VAR VARIABLE . DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> VAR VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> VAR VARIABLE . IGUAL floatvalues
    (313) asignacionFloat -> VAR VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> VAR VARIABLE . IGUAL doublevalues
    (320) asignacionDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> VAR VARIABLE . IGUAL STRING
    (71) asignacionString -> VAR VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> VAR VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> VAR VARIABLE . IGUAL CHAR
    (77) asignacionChar -> VAR VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> VAR VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> VAR VARIABLE . IGUAL booleanos
    (83) asignacionBoolean -> VAR VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> VAR VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> VAR VARIABLE . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (269) arrayInt -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    IGUAL           shift and go to state 95
    DOBLE_PUNTO     shift and go to state 96


state 58

    (50) asignacion -> VAL VARIABLE . IGUAL VARIABLE
    (52) asignacion -> VAL VARIABLE . IGUAL aritmetica
    (54) asignacion -> VAL VARIABLE . IGUAL returnfun
    (173) asignacion -> VAL VARIABLE . IGUAL tuple
    (278) asignacion -> VAL VARIABLE . DOBLE_PUNTO dectupla
    (65) asignacionLong -> VAL VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (307) asignacionLong -> VAL VARIABLE . IGUAL longvalues
    (308) asignacionLong -> VAL VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (301) asignacionInt -> VAL VARIABLE . IGUAL intvalues
    (302) asignacionInt -> VAL VARIABLE . DOBLE_PUNTO INTCLASS IGUAL intvalues
    (67) asignacionFloat -> VAL VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (314) asignacionFloat -> VAL VARIABLE . IGUAL floatvalues
    (315) asignacionFloat -> VAL VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (69) asignacionDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (321) asignacionDouble -> VAL VARIABLE . IGUAL doublevalues
    (322) asignacionDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (72) asignacionString -> VAL VARIABLE . IGUAL STRING
    (73) asignacionString -> VAL VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (75) asignacionString -> VAL VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (78) asignacionChar -> VAL VARIABLE . IGUAL CHAR
    (79) asignacionChar -> VAL VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (81) asignacionChar -> VAL VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (84) asignacionBoolean -> VAL VARIABLE . IGUAL booleanos
    (85) asignacionBoolean -> VAL VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> VAL VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (162) array -> VAL VARIABLE . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> VAL VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (166) list -> VAL VARIABLE . IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> VAL VARIABLE . DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> VAL VARIABLE . DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    IGUAL           shift and go to state 97
    DOBLE_PUNTO     shift and go to state 98


state 59

    (174) while -> WHILE PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) condicional -> . valorC logicos condicional
    (228) condicional -> . valorC
    (229) valorC -> . VARIABLE
    (230) valorC -> . booleanos
    (231) valorC -> . relacional
    (232) valorC -> . NOT VARIABLE
    (233) valorC -> . NOT booleanos
    (234) valorC -> . NOT relacional
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (238) relacional -> . numeros comparacion numeros
    (239) relacional -> . aritmetica comparacion aritmetica
    (240) relacional -> . aritmetica comparacion numeros
    (241) relacional -> . numeros comparacion aritmetica
    (242) relacional -> . booleanos comparacion booleanos
    (243) relacional -> . STRING comparacion STRING
    (244) relacional -> . CHAR comparacion CHAR
    (245) relacional -> . VARIABLE comparacion numeros
    (246) relacional -> . numeros comparacion VARIABLE
    (247) relacional -> . VARIABLE comparacion booleanos
    (248) relacional -> . booleanos comparacion VARIABLE
    (249) relacional -> . VARIABLE comparacion STRING
    (250) relacional -> . STRING comparacion VARIABLE
    (251) relacional -> . VARIABLE comparacion CHAR
    (252) relacional -> . CHAR comparacion VARIABLE
    (253) relacional -> . VARIABLE comparacion VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 101
    NOT             shift and go to state 104
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79
    STRING          shift and go to state 107
    CHAR            shift and go to state 108
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    condicional                    shift and go to state 99
    valorC                         shift and go to state 100
    booleanos                      shift and go to state 102
    relacional                     shift and go to state 103
    startsWith                     shift and go to state 80
    numeros                        shift and go to state 105
    aritmetica                     shift and go to state 106

state 60

    (175) for -> FOR PAR_I . VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> FOR PAR_I . VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> FOR PAR_I . VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> FOR PAR_I . VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> FOR PAR_I . VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> FOR PAR_I . VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VAR             shift and go to state 109
    VARIABLE        shift and go to state 110


state 61

    (220) if -> IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) condicional -> . valorC logicos condicional
    (228) condicional -> . valorC
    (229) valorC -> . VARIABLE
    (230) valorC -> . booleanos
    (231) valorC -> . relacional
    (232) valorC -> . NOT VARIABLE
    (233) valorC -> . NOT booleanos
    (234) valorC -> . NOT relacional
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (238) relacional -> . numeros comparacion numeros
    (239) relacional -> . aritmetica comparacion aritmetica
    (240) relacional -> . aritmetica comparacion numeros
    (241) relacional -> . numeros comparacion aritmetica
    (242) relacional -> . booleanos comparacion booleanos
    (243) relacional -> . STRING comparacion STRING
    (244) relacional -> . CHAR comparacion CHAR
    (245) relacional -> . VARIABLE comparacion numeros
    (246) relacional -> . numeros comparacion VARIABLE
    (247) relacional -> . VARIABLE comparacion booleanos
    (248) relacional -> . booleanos comparacion VARIABLE
    (249) relacional -> . VARIABLE comparacion STRING
    (250) relacional -> . STRING comparacion VARIABLE
    (251) relacional -> . VARIABLE comparacion CHAR
    (252) relacional -> . CHAR comparacion VARIABLE
    (253) relacional -> . VARIABLE comparacion VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 101
    NOT             shift and go to state 104
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79
    STRING          shift and go to state 107
    CHAR            shift and go to state 108
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    condicional                    shift and go to state 111
    valorC                         shift and go to state 100
    booleanos                      shift and go to state 102
    relacional                     shift and go to state 103
    startsWith                     shift and go to state 80
    numeros                        shift and go to state 105
    aritmetica                     shift and go to state 106

state 62

    (275) startsWith -> STRING PUNTO . STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> STRING PUNTO . STARTSWITH PAR_I STRING COMA INT PAR_D

    STARTSWITH      shift and go to state 112


state 63

    (1) inicio -> OBJECT VARIABLE LLAVE_I . cuerpo LLAVE_D
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . startsWith
    (15) cuerpo -> . funcion cuerpo
    (16) cuerpo -> . asignacion cuerpo
    (17) cuerpo -> . while cuerpo
    (18) cuerpo -> . for cuerpo
    (19) cuerpo -> . if cuerpo
    (20) cuerpo -> . match cuerpo
    (21) cuerpo -> . startsWith cuerpo
    (115) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (116) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (123) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (124) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    cuerpo                         shift and go to state 113
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    for                            shift and go to state 12
    match                          shift and go to state 13
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 64

    (148) varparen -> varparen PAR_I . valores PAR_D
    (149) varparen -> varparen PAR_I . PAR_D
    (169) valores -> . valor
    (170) valores -> . valor COMA valores
    (101) valor -> . STRING
    (102) valor -> . CHAR
    (103) valor -> . VARIABLE
    (104) valor -> . numeros
    (105) valor -> . booleanos
    (106) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (107) valor -> . VARIABLE PAR_I INT PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    PAR_D           shift and go to state 115
    STRING          shift and go to state 69
    CHAR            shift and go to state 70
    VARIABLE        shift and go to state 71
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79

    valores                        shift and go to state 114
    valor                          shift and go to state 68
    numeros                        shift and go to state 72
    booleanos                      shift and go to state 73
    startsWith                     shift and go to state 80

state 65

    (181) match -> VARIABLE MATCH LLAVE_I . cases LLAVE_D
    (182) cases -> . casesInt
    (183) cases -> . casesLgn
    (184) cases -> . casesFlt
    (185) cases -> . casesDob
    (186) cases -> . casesStr
    (187) cases -> . casesChar
    (188) cases -> . casesBool
    (190) casesInt -> . caseInt
    (191) casesInt -> . caseInt casesInt
    (192) casesInt -> . caseInt defcase
    (194) casesLgn -> . caseLgn
    (195) casesLgn -> . caseLgn casesLgn
    (196) casesLgn -> . caseLgn defcase
    (198) casesFlt -> . caseFlt
    (199) casesFlt -> . caseFlt casesFlt
    (200) casesFlt -> . caseFlt defcase
    (202) casesDob -> . caseDob
    (203) casesDob -> . caseDob casesDob
    (204) casesDob -> . caseDob defcase
    (206) casesStr -> . caseStr
    (207) casesStr -> . caseStr casesStr
    (208) casesStr -> . caseStr defcase
    (210) casesChar -> . caseChar
    (211) casesChar -> . caseChar casesChar
    (212) casesChar -> . caseChar defcase
    (214) casesBool -> . caseBool
    (215) casesBool -> . caseBool casesBool
    (216) casesBool -> . caseBool defcase
    (189) caseInt -> . CASE INT FUNCION_FLECHA codeBlock
    (193) caseLgn -> . CASE LONG FUNCION_FLECHA codeBlock
    (197) caseFlt -> . CASE FLOAT FUNCION_FLECHA codeBlock
    (201) caseDob -> . CASE DOUBLE FUNCION_FLECHA codeBlock
    (205) caseStr -> . CASE STRING FUNCION_FLECHA codeBlock
    (209) caseChar -> . CASE CHAR FUNCION_FLECHA codeBlock
    (213) caseBool -> . CASE booleanos FUNCION_FLECHA codeBlock

    CASE            shift and go to state 131

    cases                          shift and go to state 116
    casesInt                       shift and go to state 117
    casesLgn                       shift and go to state 118
    casesFlt                       shift and go to state 119
    casesDob                       shift and go to state 120
    casesStr                       shift and go to state 121
    casesChar                      shift and go to state 122
    casesBool                      shift and go to state 123
    caseInt                        shift and go to state 124
    caseLgn                        shift and go to state 125
    caseFlt                        shift and go to state 126
    caseDob                        shift and go to state 127
    caseStr                        shift and go to state 128
    caseChar                       shift and go to state 129
    caseBool                       shift and go to state 130

state 66

    (146) varparen -> PAR_I valores . PAR_D

    PAR_D           shift and go to state 132


state 67

    (147) varparen -> PAR_I PAR_D .

    PAR_I           reduce using rule 147 (varparen -> PAR_I PAR_D .)
    $end            reduce using rule 147 (varparen -> PAR_I PAR_D .)
    LLAVE_D         reduce using rule 147 (varparen -> PAR_I PAR_D .)
    VAR             reduce using rule 147 (varparen -> PAR_I PAR_D .)
    VAL             reduce using rule 147 (varparen -> PAR_I PAR_D .)
    VARIABLE        reduce using rule 147 (varparen -> PAR_I PAR_D .)
    PRINTLN         reduce using rule 147 (varparen -> PAR_I PAR_D .)
    PRINT           reduce using rule 147 (varparen -> PAR_I PAR_D .)
    READLINE        reduce using rule 147 (varparen -> PAR_I PAR_D .)
    WHILE           reduce using rule 147 (varparen -> PAR_I PAR_D .)
    FOR             reduce using rule 147 (varparen -> PAR_I PAR_D .)
    IF              reduce using rule 147 (varparen -> PAR_I PAR_D .)
    STRING          reduce using rule 147 (varparen -> PAR_I PAR_D .)
    INT             reduce using rule 147 (varparen -> PAR_I PAR_D .)
    LONG            reduce using rule 147 (varparen -> PAR_I PAR_D .)
    FLOAT           reduce using rule 147 (varparen -> PAR_I PAR_D .)
    DOUBLE          reduce using rule 147 (varparen -> PAR_I PAR_D .)
    RETURN          reduce using rule 147 (varparen -> PAR_I PAR_D .)
    PUNTO           reduce using rule 147 (varparen -> PAR_I PAR_D .)
    DEF             reduce using rule 147 (varparen -> PAR_I PAR_D .)
    CASE            reduce using rule 147 (varparen -> PAR_I PAR_D .)


state 68

    (169) valores -> valor .
    (170) valores -> valor . COMA valores

    PAR_D           reduce using rule 169 (valores -> valor .)
    COMA            shift and go to state 133


state 69

    (101) valor -> STRING .
    (275) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    COMA            reduce using rule 101 (valor -> STRING .)
    PAR_D           reduce using rule 101 (valor -> STRING .)
    MAS             reduce using rule 101 (valor -> STRING .)
    VAR             reduce using rule 101 (valor -> STRING .)
    VAL             reduce using rule 101 (valor -> STRING .)
    VARIABLE        reduce using rule 101 (valor -> STRING .)
    PRINTLN         reduce using rule 101 (valor -> STRING .)
    PRINT           reduce using rule 101 (valor -> STRING .)
    READLINE        reduce using rule 101 (valor -> STRING .)
    WHILE           reduce using rule 101 (valor -> STRING .)
    FOR             reduce using rule 101 (valor -> STRING .)
    IF              reduce using rule 101 (valor -> STRING .)
    STRING          reduce using rule 101 (valor -> STRING .)
    INT             reduce using rule 101 (valor -> STRING .)
    LONG            reduce using rule 101 (valor -> STRING .)
    FLOAT           reduce using rule 101 (valor -> STRING .)
    DOUBLE          reduce using rule 101 (valor -> STRING .)
    LLAVE_D         reduce using rule 101 (valor -> STRING .)
    RETURN          reduce using rule 101 (valor -> STRING .)
    CASE            reduce using rule 101 (valor -> STRING .)
    PUNTO           shift and go to state 62


state 70

    (102) valor -> CHAR .

    COMA            reduce using rule 102 (valor -> CHAR .)
    PAR_D           reduce using rule 102 (valor -> CHAR .)
    MAS             reduce using rule 102 (valor -> CHAR .)
    VAR             reduce using rule 102 (valor -> CHAR .)
    VAL             reduce using rule 102 (valor -> CHAR .)
    VARIABLE        reduce using rule 102 (valor -> CHAR .)
    PRINTLN         reduce using rule 102 (valor -> CHAR .)
    PRINT           reduce using rule 102 (valor -> CHAR .)
    READLINE        reduce using rule 102 (valor -> CHAR .)
    WHILE           reduce using rule 102 (valor -> CHAR .)
    FOR             reduce using rule 102 (valor -> CHAR .)
    IF              reduce using rule 102 (valor -> CHAR .)
    STRING          reduce using rule 102 (valor -> CHAR .)
    INT             reduce using rule 102 (valor -> CHAR .)
    LONG            reduce using rule 102 (valor -> CHAR .)
    FLOAT           reduce using rule 102 (valor -> CHAR .)
    DOUBLE          reduce using rule 102 (valor -> CHAR .)
    LLAVE_D         reduce using rule 102 (valor -> CHAR .)
    RETURN          reduce using rule 102 (valor -> CHAR .)
    CASE            reduce using rule 102 (valor -> CHAR .)


state 71

    (103) valor -> VARIABLE .
    (106) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (107) valor -> VARIABLE . PAR_I INT PAR_D

    COMA            reduce using rule 103 (valor -> VARIABLE .)
    PAR_D           reduce using rule 103 (valor -> VARIABLE .)
    MAS             reduce using rule 103 (valor -> VARIABLE .)
    VAR             reduce using rule 103 (valor -> VARIABLE .)
    VAL             reduce using rule 103 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 103 (valor -> VARIABLE .)
    PRINTLN         reduce using rule 103 (valor -> VARIABLE .)
    PRINT           reduce using rule 103 (valor -> VARIABLE .)
    READLINE        reduce using rule 103 (valor -> VARIABLE .)
    WHILE           reduce using rule 103 (valor -> VARIABLE .)
    FOR             reduce using rule 103 (valor -> VARIABLE .)
    IF              reduce using rule 103 (valor -> VARIABLE .)
    STRING          reduce using rule 103 (valor -> VARIABLE .)
    INT             reduce using rule 103 (valor -> VARIABLE .)
    LONG            reduce using rule 103 (valor -> VARIABLE .)
    FLOAT           reduce using rule 103 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 103 (valor -> VARIABLE .)
    LLAVE_D         reduce using rule 103 (valor -> VARIABLE .)
    RETURN          reduce using rule 103 (valor -> VARIABLE .)
    CASE            reduce using rule 103 (valor -> VARIABLE .)
    PAR_I           shift and go to state 134


state 72

    (104) valor -> numeros .

    COMA            reduce using rule 104 (valor -> numeros .)
    PAR_D           reduce using rule 104 (valor -> numeros .)
    MAS             reduce using rule 104 (valor -> numeros .)
    VAR             reduce using rule 104 (valor -> numeros .)
    VAL             reduce using rule 104 (valor -> numeros .)
    VARIABLE        reduce using rule 104 (valor -> numeros .)
    PRINTLN         reduce using rule 104 (valor -> numeros .)
    PRINT           reduce using rule 104 (valor -> numeros .)
    READLINE        reduce using rule 104 (valor -> numeros .)
    WHILE           reduce using rule 104 (valor -> numeros .)
    FOR             reduce using rule 104 (valor -> numeros .)
    IF              reduce using rule 104 (valor -> numeros .)
    STRING          reduce using rule 104 (valor -> numeros .)
    INT             reduce using rule 104 (valor -> numeros .)
    LONG            reduce using rule 104 (valor -> numeros .)
    FLOAT           reduce using rule 104 (valor -> numeros .)
    DOUBLE          reduce using rule 104 (valor -> numeros .)
    LLAVE_D         reduce using rule 104 (valor -> numeros .)
    RETURN          reduce using rule 104 (valor -> numeros .)
    CASE            reduce using rule 104 (valor -> numeros .)


state 73

    (105) valor -> booleanos .

    COMA            reduce using rule 105 (valor -> booleanos .)
    PAR_D           reduce using rule 105 (valor -> booleanos .)
    MAS             reduce using rule 105 (valor -> booleanos .)
    VAR             reduce using rule 105 (valor -> booleanos .)
    VAL             reduce using rule 105 (valor -> booleanos .)
    VARIABLE        reduce using rule 105 (valor -> booleanos .)
    PRINTLN         reduce using rule 105 (valor -> booleanos .)
    PRINT           reduce using rule 105 (valor -> booleanos .)
    READLINE        reduce using rule 105 (valor -> booleanos .)
    WHILE           reduce using rule 105 (valor -> booleanos .)
    FOR             reduce using rule 105 (valor -> booleanos .)
    IF              reduce using rule 105 (valor -> booleanos .)
    STRING          reduce using rule 105 (valor -> booleanos .)
    INT             reduce using rule 105 (valor -> booleanos .)
    LONG            reduce using rule 105 (valor -> booleanos .)
    FLOAT           reduce using rule 105 (valor -> booleanos .)
    DOUBLE          reduce using rule 105 (valor -> booleanos .)
    LLAVE_D         reduce using rule 105 (valor -> booleanos .)
    RETURN          reduce using rule 105 (valor -> booleanos .)
    CASE            reduce using rule 105 (valor -> booleanos .)


state 74

    (111) numeros -> INT .

    COMA            reduce using rule 111 (numeros -> INT .)
    PAR_D           reduce using rule 111 (numeros -> INT .)
    MAS             reduce using rule 111 (numeros -> INT .)
    IGUAL_COMPARACION reduce using rule 111 (numeros -> INT .)
    DIFERENTE       reduce using rule 111 (numeros -> INT .)
    MAYOR           reduce using rule 111 (numeros -> INT .)
    MENOR           reduce using rule 111 (numeros -> INT .)
    MENOS           reduce using rule 111 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 111 (numeros -> INT .)
    DIVISION        reduce using rule 111 (numeros -> INT .)
    MOD             reduce using rule 111 (numeros -> INT .)
    AND             reduce using rule 111 (numeros -> INT .)
    OR              reduce using rule 111 (numeros -> INT .)
    NOT             reduce using rule 111 (numeros -> INT .)
    VAR             reduce using rule 111 (numeros -> INT .)
    VAL             reduce using rule 111 (numeros -> INT .)
    VARIABLE        reduce using rule 111 (numeros -> INT .)
    PRINTLN         reduce using rule 111 (numeros -> INT .)
    PRINT           reduce using rule 111 (numeros -> INT .)
    READLINE        reduce using rule 111 (numeros -> INT .)
    WHILE           reduce using rule 111 (numeros -> INT .)
    FOR             reduce using rule 111 (numeros -> INT .)
    IF              reduce using rule 111 (numeros -> INT .)
    STRING          reduce using rule 111 (numeros -> INT .)
    INT             reduce using rule 111 (numeros -> INT .)
    LONG            reduce using rule 111 (numeros -> INT .)
    FLOAT           reduce using rule 111 (numeros -> INT .)
    DOUBLE          reduce using rule 111 (numeros -> INT .)
    LLAVE_D         reduce using rule 111 (numeros -> INT .)
    DEF             reduce using rule 111 (numeros -> INT .)
    $end            reduce using rule 111 (numeros -> INT .)
    RETURN          reduce using rule 111 (numeros -> INT .)
    CASE            reduce using rule 111 (numeros -> INT .)


state 75

    (112) numeros -> LONG .

    COMA            reduce using rule 112 (numeros -> LONG .)
    PAR_D           reduce using rule 112 (numeros -> LONG .)
    MAS             reduce using rule 112 (numeros -> LONG .)
    IGUAL_COMPARACION reduce using rule 112 (numeros -> LONG .)
    DIFERENTE       reduce using rule 112 (numeros -> LONG .)
    MAYOR           reduce using rule 112 (numeros -> LONG .)
    MENOR           reduce using rule 112 (numeros -> LONG .)
    MENOS           reduce using rule 112 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 112 (numeros -> LONG .)
    DIVISION        reduce using rule 112 (numeros -> LONG .)
    MOD             reduce using rule 112 (numeros -> LONG .)
    AND             reduce using rule 112 (numeros -> LONG .)
    OR              reduce using rule 112 (numeros -> LONG .)
    NOT             reduce using rule 112 (numeros -> LONG .)
    VAR             reduce using rule 112 (numeros -> LONG .)
    VAL             reduce using rule 112 (numeros -> LONG .)
    VARIABLE        reduce using rule 112 (numeros -> LONG .)
    PRINTLN         reduce using rule 112 (numeros -> LONG .)
    PRINT           reduce using rule 112 (numeros -> LONG .)
    READLINE        reduce using rule 112 (numeros -> LONG .)
    WHILE           reduce using rule 112 (numeros -> LONG .)
    FOR             reduce using rule 112 (numeros -> LONG .)
    IF              reduce using rule 112 (numeros -> LONG .)
    STRING          reduce using rule 112 (numeros -> LONG .)
    INT             reduce using rule 112 (numeros -> LONG .)
    LONG            reduce using rule 112 (numeros -> LONG .)
    FLOAT           reduce using rule 112 (numeros -> LONG .)
    DOUBLE          reduce using rule 112 (numeros -> LONG .)
    LLAVE_D         reduce using rule 112 (numeros -> LONG .)
    DEF             reduce using rule 112 (numeros -> LONG .)
    $end            reduce using rule 112 (numeros -> LONG .)
    RETURN          reduce using rule 112 (numeros -> LONG .)
    CASE            reduce using rule 112 (numeros -> LONG .)


state 76

    (113) numeros -> FLOAT .

    COMA            reduce using rule 113 (numeros -> FLOAT .)
    PAR_D           reduce using rule 113 (numeros -> FLOAT .)
    MAS             reduce using rule 113 (numeros -> FLOAT .)
    IGUAL_COMPARACION reduce using rule 113 (numeros -> FLOAT .)
    DIFERENTE       reduce using rule 113 (numeros -> FLOAT .)
    MAYOR           reduce using rule 113 (numeros -> FLOAT .)
    MENOR           reduce using rule 113 (numeros -> FLOAT .)
    MENOS           reduce using rule 113 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 113 (numeros -> FLOAT .)
    DIVISION        reduce using rule 113 (numeros -> FLOAT .)
    MOD             reduce using rule 113 (numeros -> FLOAT .)
    AND             reduce using rule 113 (numeros -> FLOAT .)
    OR              reduce using rule 113 (numeros -> FLOAT .)
    NOT             reduce using rule 113 (numeros -> FLOAT .)
    VAR             reduce using rule 113 (numeros -> FLOAT .)
    VAL             reduce using rule 113 (numeros -> FLOAT .)
    VARIABLE        reduce using rule 113 (numeros -> FLOAT .)
    PRINTLN         reduce using rule 113 (numeros -> FLOAT .)
    PRINT           reduce using rule 113 (numeros -> FLOAT .)
    READLINE        reduce using rule 113 (numeros -> FLOAT .)
    WHILE           reduce using rule 113 (numeros -> FLOAT .)
    FOR             reduce using rule 113 (numeros -> FLOAT .)
    IF              reduce using rule 113 (numeros -> FLOAT .)
    STRING          reduce using rule 113 (numeros -> FLOAT .)
    INT             reduce using rule 113 (numeros -> FLOAT .)
    LONG            reduce using rule 113 (numeros -> FLOAT .)
    FLOAT           reduce using rule 113 (numeros -> FLOAT .)
    DOUBLE          reduce using rule 113 (numeros -> FLOAT .)
    LLAVE_D         reduce using rule 113 (numeros -> FLOAT .)
    DEF             reduce using rule 113 (numeros -> FLOAT .)
    $end            reduce using rule 113 (numeros -> FLOAT .)
    RETURN          reduce using rule 113 (numeros -> FLOAT .)
    CASE            reduce using rule 113 (numeros -> FLOAT .)


state 77

    (114) numeros -> DOUBLE .

    COMA            reduce using rule 114 (numeros -> DOUBLE .)
    PAR_D           reduce using rule 114 (numeros -> DOUBLE .)
    MAS             reduce using rule 114 (numeros -> DOUBLE .)
    IGUAL_COMPARACION reduce using rule 114 (numeros -> DOUBLE .)
    DIFERENTE       reduce using rule 114 (numeros -> DOUBLE .)
    MAYOR           reduce using rule 114 (numeros -> DOUBLE .)
    MENOR           reduce using rule 114 (numeros -> DOUBLE .)
    MENOS           reduce using rule 114 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 114 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 114 (numeros -> DOUBLE .)
    MOD             reduce using rule 114 (numeros -> DOUBLE .)
    AND             reduce using rule 114 (numeros -> DOUBLE .)
    OR              reduce using rule 114 (numeros -> DOUBLE .)
    NOT             reduce using rule 114 (numeros -> DOUBLE .)
    VAR             reduce using rule 114 (numeros -> DOUBLE .)
    VAL             reduce using rule 114 (numeros -> DOUBLE .)
    VARIABLE        reduce using rule 114 (numeros -> DOUBLE .)
    PRINTLN         reduce using rule 114 (numeros -> DOUBLE .)
    PRINT           reduce using rule 114 (numeros -> DOUBLE .)
    READLINE        reduce using rule 114 (numeros -> DOUBLE .)
    WHILE           reduce using rule 114 (numeros -> DOUBLE .)
    FOR             reduce using rule 114 (numeros -> DOUBLE .)
    IF              reduce using rule 114 (numeros -> DOUBLE .)
    STRING          reduce using rule 114 (numeros -> DOUBLE .)
    INT             reduce using rule 114 (numeros -> DOUBLE .)
    LONG            reduce using rule 114 (numeros -> DOUBLE .)
    FLOAT           reduce using rule 114 (numeros -> DOUBLE .)
    DOUBLE          reduce using rule 114 (numeros -> DOUBLE .)
    LLAVE_D         reduce using rule 114 (numeros -> DOUBLE .)
    DEF             reduce using rule 114 (numeros -> DOUBLE .)
    $end            reduce using rule 114 (numeros -> DOUBLE .)
    RETURN          reduce using rule 114 (numeros -> DOUBLE .)
    CASE            reduce using rule 114 (numeros -> DOUBLE .)


state 78

    (108) booleanos -> TRUE .

    COMA            reduce using rule 108 (booleanos -> TRUE .)
    PAR_D           reduce using rule 108 (booleanos -> TRUE .)
    MAS             reduce using rule 108 (booleanos -> TRUE .)
    IGUAL_COMPARACION reduce using rule 108 (booleanos -> TRUE .)
    DIFERENTE       reduce using rule 108 (booleanos -> TRUE .)
    MAYOR           reduce using rule 108 (booleanos -> TRUE .)
    MENOR           reduce using rule 108 (booleanos -> TRUE .)
    AND             reduce using rule 108 (booleanos -> TRUE .)
    OR              reduce using rule 108 (booleanos -> TRUE .)
    NOT             reduce using rule 108 (booleanos -> TRUE .)
    DEF             reduce using rule 108 (booleanos -> TRUE .)
    VARIABLE        reduce using rule 108 (booleanos -> TRUE .)
    PRINTLN         reduce using rule 108 (booleanos -> TRUE .)
    PRINT           reduce using rule 108 (booleanos -> TRUE .)
    READLINE        reduce using rule 108 (booleanos -> TRUE .)
    VAR             reduce using rule 108 (booleanos -> TRUE .)
    VAL             reduce using rule 108 (booleanos -> TRUE .)
    WHILE           reduce using rule 108 (booleanos -> TRUE .)
    FOR             reduce using rule 108 (booleanos -> TRUE .)
    IF              reduce using rule 108 (booleanos -> TRUE .)
    STRING          reduce using rule 108 (booleanos -> TRUE .)
    $end            reduce using rule 108 (booleanos -> TRUE .)
    LLAVE_D         reduce using rule 108 (booleanos -> TRUE .)
    INT             reduce using rule 108 (booleanos -> TRUE .)
    LONG            reduce using rule 108 (booleanos -> TRUE .)
    FLOAT           reduce using rule 108 (booleanos -> TRUE .)
    DOUBLE          reduce using rule 108 (booleanos -> TRUE .)
    RETURN          reduce using rule 108 (booleanos -> TRUE .)
    CASE            reduce using rule 108 (booleanos -> TRUE .)
    FUNCION_FLECHA  reduce using rule 108 (booleanos -> TRUE .)


state 79

    (109) booleanos -> FLASE .

    COMA            reduce using rule 109 (booleanos -> FLASE .)
    PAR_D           reduce using rule 109 (booleanos -> FLASE .)
    MAS             reduce using rule 109 (booleanos -> FLASE .)
    IGUAL_COMPARACION reduce using rule 109 (booleanos -> FLASE .)
    DIFERENTE       reduce using rule 109 (booleanos -> FLASE .)
    MAYOR           reduce using rule 109 (booleanos -> FLASE .)
    MENOR           reduce using rule 109 (booleanos -> FLASE .)
    AND             reduce using rule 109 (booleanos -> FLASE .)
    OR              reduce using rule 109 (booleanos -> FLASE .)
    NOT             reduce using rule 109 (booleanos -> FLASE .)
    DEF             reduce using rule 109 (booleanos -> FLASE .)
    VARIABLE        reduce using rule 109 (booleanos -> FLASE .)
    PRINTLN         reduce using rule 109 (booleanos -> FLASE .)
    PRINT           reduce using rule 109 (booleanos -> FLASE .)
    READLINE        reduce using rule 109 (booleanos -> FLASE .)
    VAR             reduce using rule 109 (booleanos -> FLASE .)
    VAL             reduce using rule 109 (booleanos -> FLASE .)
    WHILE           reduce using rule 109 (booleanos -> FLASE .)
    FOR             reduce using rule 109 (booleanos -> FLASE .)
    IF              reduce using rule 109 (booleanos -> FLASE .)
    STRING          reduce using rule 109 (booleanos -> FLASE .)
    $end            reduce using rule 109 (booleanos -> FLASE .)
    LLAVE_D         reduce using rule 109 (booleanos -> FLASE .)
    INT             reduce using rule 109 (booleanos -> FLASE .)
    LONG            reduce using rule 109 (booleanos -> FLASE .)
    FLOAT           reduce using rule 109 (booleanos -> FLASE .)
    DOUBLE          reduce using rule 109 (booleanos -> FLASE .)
    RETURN          reduce using rule 109 (booleanos -> FLASE .)
    CASE            reduce using rule 109 (booleanos -> FLASE .)
    FUNCION_FLECHA  reduce using rule 109 (booleanos -> FLASE .)


state 80

    (110) booleanos -> startsWith .

    COMA            reduce using rule 110 (booleanos -> startsWith .)
    PAR_D           reduce using rule 110 (booleanos -> startsWith .)
    MAS             reduce using rule 110 (booleanos -> startsWith .)
    IGUAL_COMPARACION reduce using rule 110 (booleanos -> startsWith .)
    DIFERENTE       reduce using rule 110 (booleanos -> startsWith .)
    MAYOR           reduce using rule 110 (booleanos -> startsWith .)
    MENOR           reduce using rule 110 (booleanos -> startsWith .)
    AND             reduce using rule 110 (booleanos -> startsWith .)
    OR              reduce using rule 110 (booleanos -> startsWith .)
    NOT             reduce using rule 110 (booleanos -> startsWith .)
    DEF             reduce using rule 110 (booleanos -> startsWith .)
    VARIABLE        reduce using rule 110 (booleanos -> startsWith .)
    PRINTLN         reduce using rule 110 (booleanos -> startsWith .)
    PRINT           reduce using rule 110 (booleanos -> startsWith .)
    READLINE        reduce using rule 110 (booleanos -> startsWith .)
    VAR             reduce using rule 110 (booleanos -> startsWith .)
    VAL             reduce using rule 110 (booleanos -> startsWith .)
    WHILE           reduce using rule 110 (booleanos -> startsWith .)
    FOR             reduce using rule 110 (booleanos -> startsWith .)
    IF              reduce using rule 110 (booleanos -> startsWith .)
    STRING          reduce using rule 110 (booleanos -> startsWith .)
    $end            reduce using rule 110 (booleanos -> startsWith .)
    LLAVE_D         reduce using rule 110 (booleanos -> startsWith .)
    INT             reduce using rule 110 (booleanos -> startsWith .)
    LONG            reduce using rule 110 (booleanos -> startsWith .)
    FLOAT           reduce using rule 110 (booleanos -> startsWith .)
    DOUBLE          reduce using rule 110 (booleanos -> startsWith .)
    RETURN          reduce using rule 110 (booleanos -> startsWith .)
    CASE            reduce using rule 110 (booleanos -> startsWith .)
    FUNCION_FLECHA  reduce using rule 110 (booleanos -> startsWith .)


state 81

    (2) inicio -> IMPORT io inicio .

    $end            reduce using rule 2 (inicio -> IMPORT io inicio .)


state 82

    (4) io -> VARIABLE PUNTO . VARIABLE PUNTO VARIABLE PUNTO READLINE

    VARIABLE        shift and go to state 135


state 83

    (226) else -> elseif . else
    (225) else -> . ELSE LLAVE_I contenido LLAVE_D
    (226) else -> . elseif else
    (223) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (224) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    ELSE            shift and go to state 85

    elseif                         shift and go to state 83
    else                           shift and go to state 84

state 84

    (226) else -> elseif else .

    ELSE            reduce using rule 226 (else -> elseif else .)
    DEF             reduce using rule 226 (else -> elseif else .)
    VARIABLE        reduce using rule 226 (else -> elseif else .)
    PRINTLN         reduce using rule 226 (else -> elseif else .)
    PRINT           reduce using rule 226 (else -> elseif else .)
    READLINE        reduce using rule 226 (else -> elseif else .)
    VAR             reduce using rule 226 (else -> elseif else .)
    VAL             reduce using rule 226 (else -> elseif else .)
    WHILE           reduce using rule 226 (else -> elseif else .)
    FOR             reduce using rule 226 (else -> elseif else .)
    IF              reduce using rule 226 (else -> elseif else .)
    STRING          reduce using rule 226 (else -> elseif else .)
    $end            reduce using rule 226 (else -> elseif else .)
    LLAVE_D         reduce using rule 226 (else -> elseif else .)
    INT             reduce using rule 226 (else -> elseif else .)
    LONG            reduce using rule 226 (else -> elseif else .)
    FLOAT           reduce using rule 226 (else -> elseif else .)
    DOUBLE          reduce using rule 226 (else -> elseif else .)
    RETURN          reduce using rule 226 (else -> elseif else .)


state 85

    (225) else -> ELSE . LLAVE_I contenido LLAVE_D
    (223) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (224) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    LLAVE_I         shift and go to state 87
    IF              shift and go to state 86


state 86

    (223) elseif -> ELSE IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (224) elseif -> ELSE IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    PAR_I           shift and go to state 136


state 87

    (225) else -> ELSE LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    contenido                      shift and go to state 137
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 88

    (115) funcion -> DEF VARIABLE parametro . IGUAL LLAVE_I contenido LLAVE_D
    (116) funcion -> DEF VARIABLE parametro . LLAVE_I contenido LLAVE_D
    (123) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (124) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (126) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (127) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (128) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (129) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (130) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (131) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (134) dectipo -> . DOBLE_PUNTO tipo
    (135) dectipoTupla -> . DOBLE_PUNTO PAR_I tipos PAR_D

    IGUAL           shift and go to state 151
    LLAVE_I         shift and go to state 152
    DOBLE_PUNTO     shift and go to state 155

    dectipo                        shift and go to state 153
    dectipoTupla                   shift and go to state 154

state 89

    (119) parametro -> parametros .

    IGUAL           reduce using rule 119 (parametro -> parametros .)
    LLAVE_I         reduce using rule 119 (parametro -> parametros .)
    DOBLE_PUNTO     reduce using rule 119 (parametro -> parametros .)


state 90

    (120) parametro -> PAR_I . PAR_D
    (121) parametros -> PAR_I . declaracion PAR_D
    (122) parametros -> PAR_I . declaracion PAR_D parametros
    (117) declaracion -> . VARIABLE DOBLE_PUNTO tipo
    (118) declaracion -> . VARIABLE DOBLE_PUNTO tipo IGUAL valor

    PAR_D           shift and go to state 156
    VARIABLE        shift and go to state 158

    declaracion                    shift and go to state 157

state 91

    (140) impresion -> PRINTLN PAR_I valorI . PAR_D

    PAR_D           shift and go to state 159


state 92

    (142) valorI -> valor . MAS valorI
    (143) valorI -> valor .

    MAS             shift and go to state 160
    PAR_D           reduce using rule 143 (valorI -> valor .)


state 93

    (141) impresion -> PRINT PAR_I valorI . PAR_D

    PAR_D           shift and go to state 161


state 94

    (144) entrada -> READLINE PAR_I PAR_D .

    $end            reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    LLAVE_D         reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    VAR             reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    VAL             reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    VARIABLE        reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    PRINTLN         reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    PRINT           reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    READLINE        reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    WHILE           reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    FOR             reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    IF              reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    STRING          reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    INT             reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    LONG            reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    FLOAT           reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    DOUBLE          reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    PUNTO           reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    DEF             reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    RETURN          reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)
    CASE            reduce using rule 144 (entrada -> READLINE PAR_I PAR_D .)


state 95

    (49) asignacion -> VAR VARIABLE IGUAL . VARIABLE
    (51) asignacion -> VAR VARIABLE IGUAL . aritmetica
    (53) asignacion -> VAR VARIABLE IGUAL . returnfun
    (172) asignacion -> VAR VARIABLE IGUAL . tuple
    (305) asignacionLong -> VAR VARIABLE IGUAL . longvalues
    (299) asignacionInt -> VAR VARIABLE IGUAL . intvalues
    (312) asignacionFloat -> VAR VARIABLE IGUAL . floatvalues
    (319) asignacionDouble -> VAR VARIABLE IGUAL . doublevalues
    (70) asignacionString -> VAR VARIABLE IGUAL . STRING
    (76) asignacionChar -> VAR VARIABLE IGUAL . CHAR
    (82) asignacionBoolean -> VAR VARIABLE IGUAL . booleanos
    (160) array -> VAR VARIABLE IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (150) returnfun -> . returnCastable
    (151) returnfun -> . castingcall
    (171) tuple -> . PAR_I valores PAR_D
    (309) longvalues -> . INT
    (310) longvalues -> . intvalues
    (311) longvalues -> . stringCastLong
    (303) intvalues -> . INT
    (304) intvalues -> . stringCastInt
    (316) floatvalues -> . FLOAT
    (317) floatvalues -> . longvalues
    (318) floatvalues -> . stringCastFloat
    (323) doublevalues -> . DOUBLE
    (324) doublevalues -> . floatvalues
    (325) doublevalues -> . stringCastDouble
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (152) returnCastable -> . entrada
    (153) returnCastable -> . funcall
    (154) castingcall -> . returnCastable PUNTO castingfun
    (155) castingcall -> . VARIABLE PUNTO castingfun
    (327) stringCastLong -> . STRING PUNTO TO_LONG
    (326) stringCastInt -> . STRING PUNTO TO_INT
    (328) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (329) stringCastDouble -> . STRING PUNTO TO_DOUBLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (145) funcall -> . VARIABLE varparen

    VARIABLE        shift and go to state 162
    STRING          shift and go to state 170
    CHAR            shift and go to state 171
    ARRAYCLASS      shift and go to state 173
    PAR_I           shift and go to state 174
    INT             shift and go to state 177
    FLOAT           shift and go to state 180
    DOUBLE          shift and go to state 182
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79
    LONG            shift and go to state 75
    READLINE        shift and go to state 19

    aritmetica                     shift and go to state 163
    returnfun                      shift and go to state 164
    tuple                          shift and go to state 165
    longvalues                     shift and go to state 166
    intvalues                      shift and go to state 167
    floatvalues                    shift and go to state 168
    doublevalues                   shift and go to state 169
    booleanos                      shift and go to state 172
    numeros                        shift and go to state 150
    returnCastable                 shift and go to state 175
    castingcall                    shift and go to state 176
    stringCastLong                 shift and go to state 178
    stringCastInt                  shift and go to state 179
    stringCastFloat                shift and go to state 181
    stringCastDouble               shift and go to state 183
    startsWith                     shift and go to state 80
    entrada                        shift and go to state 184
    funcall                        shift and go to state 185

state 96

    (277) asignacion -> VAR VARIABLE DOBLE_PUNTO . dectupla
    (64) asignacionLong -> VAR VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL VARIABLE
    (306) asignacionLong -> VAR VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL longvalues
    (300) asignacionInt -> VAR VARIABLE DOBLE_PUNTO . INTCLASS IGUAL intvalues
    (66) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL VARIABLE
    (313) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL VARIABLE
    (320) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL doublevalues
    (71) asignacionString -> VAR VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL STRING
    (74) asignacionString -> VAR VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL VARIABLE
    (77) asignacionChar -> VAR VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL CHAR
    (80) asignacionChar -> VAR VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL VARIABLE
    (83) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL VARIABLE
    (161) array -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (269) arrayInt -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (279) dectupla -> . PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
    (280) dectupla -> . PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
    (281) dectupla -> . PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
    (282) dectupla -> . PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D
    (283) dectupla -> . PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
    (284) dectupla -> . PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
    (285) dectupla -> . PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
    (286) dectupla -> . PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D
    (287) dectupla -> . PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
    (288) dectupla -> . PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
    (289) dectupla -> . PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
    (290) dectupla -> . PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D
    (291) dectupla -> . PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
    (292) dectupla -> . PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
    (293) dectupla -> . PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
    (294) dectupla -> . PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D
    (295) dectupla -> . PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
    (296) dectupla -> . PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
    (297) dectupla -> . PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
    (298) dectupla -> . PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    LONGCLASS       shift and go to state 187
    INTCLASS        shift and go to state 188
    FLOATCLASS      shift and go to state 189
    DOUBLECLASS     shift and go to state 190
    STRINGCLASS     shift and go to state 191
    CHARCLASS       shift and go to state 192
    BOOLCLASS       shift and go to state 193
    ARRAYCLASS      shift and go to state 194
    PAR_I           shift and go to state 195

    dectupla                       shift and go to state 186

state 97

    (50) asignacion -> VAL VARIABLE IGUAL . VARIABLE
    (52) asignacion -> VAL VARIABLE IGUAL . aritmetica
    (54) asignacion -> VAL VARIABLE IGUAL . returnfun
    (173) asignacion -> VAL VARIABLE IGUAL . tuple
    (307) asignacionLong -> VAL VARIABLE IGUAL . longvalues
    (301) asignacionInt -> VAL VARIABLE IGUAL . intvalues
    (314) asignacionFloat -> VAL VARIABLE IGUAL . floatvalues
    (321) asignacionDouble -> VAL VARIABLE IGUAL . doublevalues
    (72) asignacionString -> VAL VARIABLE IGUAL . STRING
    (78) asignacionChar -> VAL VARIABLE IGUAL . CHAR
    (84) asignacionBoolean -> VAL VARIABLE IGUAL . booleanos
    (162) array -> VAL VARIABLE IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (166) list -> VAL VARIABLE IGUAL . LISTCLASS PAR_I valores PAR_D
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (150) returnfun -> . returnCastable
    (151) returnfun -> . castingcall
    (171) tuple -> . PAR_I valores PAR_D
    (309) longvalues -> . INT
    (310) longvalues -> . intvalues
    (311) longvalues -> . stringCastLong
    (303) intvalues -> . INT
    (304) intvalues -> . stringCastInt
    (316) floatvalues -> . FLOAT
    (317) floatvalues -> . longvalues
    (318) floatvalues -> . stringCastFloat
    (323) doublevalues -> . DOUBLE
    (324) doublevalues -> . floatvalues
    (325) doublevalues -> . stringCastDouble
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (152) returnCastable -> . entrada
    (153) returnCastable -> . funcall
    (154) castingcall -> . returnCastable PUNTO castingfun
    (155) castingcall -> . VARIABLE PUNTO castingfun
    (327) stringCastLong -> . STRING PUNTO TO_LONG
    (326) stringCastInt -> . STRING PUNTO TO_INT
    (328) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (329) stringCastDouble -> . STRING PUNTO TO_DOUBLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (145) funcall -> . VARIABLE varparen

    VARIABLE        shift and go to state 196
    STRING          shift and go to state 204
    CHAR            shift and go to state 205
    ARRAYCLASS      shift and go to state 207
    LISTCLASS       shift and go to state 208
    PAR_I           shift and go to state 174
    INT             shift and go to state 177
    FLOAT           shift and go to state 180
    DOUBLE          shift and go to state 182
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79
    LONG            shift and go to state 75
    READLINE        shift and go to state 19

    aritmetica                     shift and go to state 197
    returnfun                      shift and go to state 198
    tuple                          shift and go to state 199
    longvalues                     shift and go to state 200
    intvalues                      shift and go to state 201
    floatvalues                    shift and go to state 202
    doublevalues                   shift and go to state 203
    booleanos                      shift and go to state 206
    numeros                        shift and go to state 150
    returnCastable                 shift and go to state 175
    castingcall                    shift and go to state 176
    stringCastLong                 shift and go to state 178
    stringCastInt                  shift and go to state 179
    stringCastFloat                shift and go to state 181
    stringCastDouble               shift and go to state 183
    startsWith                     shift and go to state 80
    entrada                        shift and go to state 184
    funcall                        shift and go to state 185

state 98

    (278) asignacion -> VAL VARIABLE DOBLE_PUNTO . dectupla
    (65) asignacionLong -> VAL VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL VARIABLE
    (308) asignacionLong -> VAL VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL longvalues
    (302) asignacionInt -> VAL VARIABLE DOBLE_PUNTO . INTCLASS IGUAL intvalues
    (67) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL VARIABLE
    (315) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL floatvalues
    (69) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL VARIABLE
    (322) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL doublevalues
    (73) asignacionString -> VAL VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL STRING
    (75) asignacionString -> VAL VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL VARIABLE
    (79) asignacionChar -> VAL VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL CHAR
    (81) asignacionChar -> VAL VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL VARIABLE
    (85) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL booleanos
    (87) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL VARIABLE
    (163) array -> VAL VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) list -> VAL VARIABLE DOBLE_PUNTO . LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> VAL VARIABLE DOBLE_PUNTO . LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (279) dectupla -> . PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
    (280) dectupla -> . PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
    (281) dectupla -> . PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
    (282) dectupla -> . PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D
    (283) dectupla -> . PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
    (284) dectupla -> . PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
    (285) dectupla -> . PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
    (286) dectupla -> . PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D
    (287) dectupla -> . PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
    (288) dectupla -> . PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
    (289) dectupla -> . PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
    (290) dectupla -> . PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D
    (291) dectupla -> . PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
    (292) dectupla -> . PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
    (293) dectupla -> . PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
    (294) dectupla -> . PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D
    (295) dectupla -> . PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
    (296) dectupla -> . PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
    (297) dectupla -> . PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
    (298) dectupla -> . PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    LONGCLASS       shift and go to state 210
    INTCLASS        shift and go to state 211
    FLOATCLASS      shift and go to state 212
    DOUBLECLASS     shift and go to state 213
    STRINGCLASS     shift and go to state 214
    CHARCLASS       shift and go to state 215
    BOOLCLASS       shift and go to state 216
    ARRAYCLASS      shift and go to state 217
    LISTCLASS       shift and go to state 218
    PAR_I           shift and go to state 195

    dectupla                       shift and go to state 209

state 99

    (174) while -> WHILE PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 219


state 100

    (227) condicional -> valorC . logicos condicional
    (228) condicional -> valorC .
    (235) logicos -> . AND
    (236) logicos -> . OR
    (237) logicos -> . NOT

    PAR_D           reduce using rule 228 (condicional -> valorC .)
    AND             shift and go to state 221
    OR              shift and go to state 222
    NOT             shift and go to state 223

    logicos                        shift and go to state 220

state 101

    (229) valorC -> VARIABLE .
    (245) relacional -> VARIABLE . comparacion numeros
    (247) relacional -> VARIABLE . comparacion booleanos
    (249) relacional -> VARIABLE . comparacion STRING
    (251) relacional -> VARIABLE . comparacion CHAR
    (253) relacional -> VARIABLE . comparacion VARIABLE
    (259) aritmetica -> VARIABLE . aritmeticos numeros
    (261) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (254) comparacion -> . IGUAL_COMPARACION
    (255) comparacion -> . DIFERENTE
    (256) comparacion -> . MAYOR
    (257) comparacion -> . MENOR
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD

    AND             reduce using rule 229 (valorC -> VARIABLE .)
    OR              reduce using rule 229 (valorC -> VARIABLE .)
    NOT             reduce using rule 229 (valorC -> VARIABLE .)
    PAR_D           reduce using rule 229 (valorC -> VARIABLE .)
    IGUAL_COMPARACION shift and go to state 226
    DIFERENTE       shift and go to state 227
    MAYOR           shift and go to state 228
    MENOR           shift and go to state 229
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234

    comparacion                    shift and go to state 224
    aritmeticos                    shift and go to state 225

state 102

    (230) valorC -> booleanos .
    (242) relacional -> booleanos . comparacion booleanos
    (248) relacional -> booleanos . comparacion VARIABLE
    (254) comparacion -> . IGUAL_COMPARACION
    (255) comparacion -> . DIFERENTE
    (256) comparacion -> . MAYOR
    (257) comparacion -> . MENOR

    AND             reduce using rule 230 (valorC -> booleanos .)
    OR              reduce using rule 230 (valorC -> booleanos .)
    NOT             reduce using rule 230 (valorC -> booleanos .)
    PAR_D           reduce using rule 230 (valorC -> booleanos .)
    IGUAL_COMPARACION shift and go to state 226
    DIFERENTE       shift and go to state 227
    MAYOR           shift and go to state 228
    MENOR           shift and go to state 229

    comparacion                    shift and go to state 235

state 103

    (231) valorC -> relacional .

    AND             reduce using rule 231 (valorC -> relacional .)
    OR              reduce using rule 231 (valorC -> relacional .)
    NOT             reduce using rule 231 (valorC -> relacional .)
    PAR_D           reduce using rule 231 (valorC -> relacional .)


state 104

    (232) valorC -> NOT . VARIABLE
    (233) valorC -> NOT . booleanos
    (234) valorC -> NOT . relacional
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (238) relacional -> . numeros comparacion numeros
    (239) relacional -> . aritmetica comparacion aritmetica
    (240) relacional -> . aritmetica comparacion numeros
    (241) relacional -> . numeros comparacion aritmetica
    (242) relacional -> . booleanos comparacion booleanos
    (243) relacional -> . STRING comparacion STRING
    (244) relacional -> . CHAR comparacion CHAR
    (245) relacional -> . VARIABLE comparacion numeros
    (246) relacional -> . numeros comparacion VARIABLE
    (247) relacional -> . VARIABLE comparacion booleanos
    (248) relacional -> . booleanos comparacion VARIABLE
    (249) relacional -> . VARIABLE comparacion STRING
    (250) relacional -> . STRING comparacion VARIABLE
    (251) relacional -> . VARIABLE comparacion CHAR
    (252) relacional -> . CHAR comparacion VARIABLE
    (253) relacional -> . VARIABLE comparacion VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 236
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79
    STRING          shift and go to state 107
    CHAR            shift and go to state 108
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    booleanos                      shift and go to state 237
    relacional                     shift and go to state 238
    startsWith                     shift and go to state 80
    numeros                        shift and go to state 105
    aritmetica                     shift and go to state 106

state 105

    (238) relacional -> numeros . comparacion numeros
    (241) relacional -> numeros . comparacion aritmetica
    (246) relacional -> numeros . comparacion VARIABLE
    (258) aritmetica -> numeros . aritmeticos numeros
    (260) aritmetica -> numeros . aritmeticos VARIABLE
    (254) comparacion -> . IGUAL_COMPARACION
    (255) comparacion -> . DIFERENTE
    (256) comparacion -> . MAYOR
    (257) comparacion -> . MENOR
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD

    IGUAL_COMPARACION shift and go to state 226
    DIFERENTE       shift and go to state 227
    MAYOR           shift and go to state 228
    MENOR           shift and go to state 229
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234

    comparacion                    shift and go to state 239
    aritmeticos                    shift and go to state 240

state 106

    (239) relacional -> aritmetica . comparacion aritmetica
    (240) relacional -> aritmetica . comparacion numeros
    (262) aritmetica -> aritmetica . aritmeticos numeros
    (263) aritmetica -> aritmetica . aritmeticos VARIABLE
    (254) comparacion -> . IGUAL_COMPARACION
    (255) comparacion -> . DIFERENTE
    (256) comparacion -> . MAYOR
    (257) comparacion -> . MENOR
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD

    IGUAL_COMPARACION shift and go to state 226
    DIFERENTE       shift and go to state 227
    MAYOR           shift and go to state 228
    MENOR           shift and go to state 229
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234

    comparacion                    shift and go to state 241
    aritmeticos                    shift and go to state 242

state 107

    (243) relacional -> STRING . comparacion STRING
    (250) relacional -> STRING . comparacion VARIABLE
    (275) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (254) comparacion -> . IGUAL_COMPARACION
    (255) comparacion -> . DIFERENTE
    (256) comparacion -> . MAYOR
    (257) comparacion -> . MENOR

    PUNTO           shift and go to state 62
    IGUAL_COMPARACION shift and go to state 226
    DIFERENTE       shift and go to state 227
    MAYOR           shift and go to state 228
    MENOR           shift and go to state 229

    comparacion                    shift and go to state 243

state 108

    (244) relacional -> CHAR . comparacion CHAR
    (252) relacional -> CHAR . comparacion VARIABLE
    (254) comparacion -> . IGUAL_COMPARACION
    (255) comparacion -> . DIFERENTE
    (256) comparacion -> . MAYOR
    (257) comparacion -> . MENOR

    IGUAL_COMPARACION shift and go to state 226
    DIFERENTE       shift and go to state 227
    MAYOR           shift and go to state 228
    MENOR           shift and go to state 229

    comparacion                    shift and go to state 244

state 109

    (175) for -> FOR PAR_I VAR . VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> FOR PAR_I VAR . VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> FOR PAR_I VAR . VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 245


state 110

    (176) for -> FOR PAR_I VARIABLE . ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> FOR PAR_I VARIABLE . ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> FOR PAR_I VARIABLE . ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    ITERATOR        shift and go to state 246


state 111

    (220) if -> IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 247


state 112

    (275) startsWith -> STRING PUNTO STARTSWITH . PAR_I STRING PAR_D
    (276) startsWith -> STRING PUNTO STARTSWITH . PAR_I STRING COMA INT PAR_D

    PAR_I           shift and go to state 248


state 113

    (1) inicio -> OBJECT VARIABLE LLAVE_I cuerpo . LLAVE_D

    LLAVE_D         shift and go to state 249


state 114

    (148) varparen -> varparen PAR_I valores . PAR_D

    PAR_D           shift and go to state 250


state 115

    (149) varparen -> varparen PAR_I PAR_D .

    PAR_I           reduce using rule 149 (varparen -> varparen PAR_I PAR_D .)
    $end            reduce using rule 149 (varparen -> varparen PAR_I PAR_D .)
    LLAVE_D         reduce using rule 149 (varparen -> varparen PAR_I PAR_D .)
    VAR             reduce using rule 149 (varparen -> varparen PAR_I PAR_D .)
    VAL             reduce using rule 149 (varparen -> varparen PAR_I PAR_D .)
    VARIABLE        reduce using rule 149 (varparen -> varparen PAR_I PAR_D .)
    PRINTLN         reduce using rule 149 (varparen -> varparen PAR_I PAR_D .)
    PRINT           reduce using rule 149 (varparen -> varparen PAR_I PAR_D .)
    READLINE        reduce using rule 149 (varparen -> varparen PAR_I PAR_D .)
    WHILE           reduce using rule 149 (varparen -> varparen PAR_I PAR_D .)
    FOR             reduce using rule 149 (varparen -> varparen PAR_I PAR_D .)
    IF              reduce using rule 149 (varparen -> varparen PAR_I PAR_D .)
    STRING          reduce using rule 149 (varparen -> varparen PAR_I PAR_D .)
    INT             reduce using rule 149 (varparen -> varparen PAR_I PAR_D .)
    LONG            reduce using rule 149 (varparen -> varparen PAR_I PAR_D .)
    FLOAT           reduce using rule 149 (varparen -> varparen PAR_I PAR_D .)
    DOUBLE          reduce using rule 149 (varparen -> varparen PAR_I PAR_D .)
    RETURN          reduce using rule 149 (varparen -> varparen PAR_I PAR_D .)
    PUNTO           reduce using rule 149 (varparen -> varparen PAR_I PAR_D .)
    DEF             reduce using rule 149 (varparen -> varparen PAR_I PAR_D .)
    CASE            reduce using rule 149 (varparen -> varparen PAR_I PAR_D .)


state 116

    (181) match -> VARIABLE MATCH LLAVE_I cases . LLAVE_D

    LLAVE_D         shift and go to state 251


state 117

    (182) cases -> casesInt .

    LLAVE_D         reduce using rule 182 (cases -> casesInt .)


state 118

    (183) cases -> casesLgn .

    LLAVE_D         reduce using rule 183 (cases -> casesLgn .)


state 119

    (184) cases -> casesFlt .

    LLAVE_D         reduce using rule 184 (cases -> casesFlt .)


state 120

    (185) cases -> casesDob .

    LLAVE_D         reduce using rule 185 (cases -> casesDob .)


state 121

    (186) cases -> casesStr .

    LLAVE_D         reduce using rule 186 (cases -> casesStr .)


state 122

    (187) cases -> casesChar .

    LLAVE_D         reduce using rule 187 (cases -> casesChar .)


state 123

    (188) cases -> casesBool .

    LLAVE_D         reduce using rule 188 (cases -> casesBool .)


state 124

    (190) casesInt -> caseInt .
    (191) casesInt -> caseInt . casesInt
    (192) casesInt -> caseInt . defcase
    (190) casesInt -> . caseInt
    (191) casesInt -> . caseInt casesInt
    (192) casesInt -> . caseInt defcase
    (217) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (189) caseInt -> . CASE INT FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 190 (casesInt -> caseInt .)
    CASE            shift and go to state 254

    caseInt                        shift and go to state 124
    casesInt                       shift and go to state 252
    defcase                        shift and go to state 253

state 125

    (194) casesLgn -> caseLgn .
    (195) casesLgn -> caseLgn . casesLgn
    (196) casesLgn -> caseLgn . defcase
    (194) casesLgn -> . caseLgn
    (195) casesLgn -> . caseLgn casesLgn
    (196) casesLgn -> . caseLgn defcase
    (217) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (193) caseLgn -> . CASE LONG FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 194 (casesLgn -> caseLgn .)
    CASE            shift and go to state 257

    caseLgn                        shift and go to state 125
    casesLgn                       shift and go to state 255
    defcase                        shift and go to state 256

state 126

    (198) casesFlt -> caseFlt .
    (199) casesFlt -> caseFlt . casesFlt
    (200) casesFlt -> caseFlt . defcase
    (198) casesFlt -> . caseFlt
    (199) casesFlt -> . caseFlt casesFlt
    (200) casesFlt -> . caseFlt defcase
    (217) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (197) caseFlt -> . CASE FLOAT FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 198 (casesFlt -> caseFlt .)
    CASE            shift and go to state 260

    caseFlt                        shift and go to state 126
    casesFlt                       shift and go to state 258
    defcase                        shift and go to state 259

state 127

    (202) casesDob -> caseDob .
    (203) casesDob -> caseDob . casesDob
    (204) casesDob -> caseDob . defcase
    (202) casesDob -> . caseDob
    (203) casesDob -> . caseDob casesDob
    (204) casesDob -> . caseDob defcase
    (217) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (201) caseDob -> . CASE DOUBLE FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 202 (casesDob -> caseDob .)
    CASE            shift and go to state 263

    caseDob                        shift and go to state 127
    casesDob                       shift and go to state 261
    defcase                        shift and go to state 262

state 128

    (206) casesStr -> caseStr .
    (207) casesStr -> caseStr . casesStr
    (208) casesStr -> caseStr . defcase
    (206) casesStr -> . caseStr
    (207) casesStr -> . caseStr casesStr
    (208) casesStr -> . caseStr defcase
    (217) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (205) caseStr -> . CASE STRING FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 206 (casesStr -> caseStr .)
    CASE            shift and go to state 266

    caseStr                        shift and go to state 128
    casesStr                       shift and go to state 264
    defcase                        shift and go to state 265

state 129

    (210) casesChar -> caseChar .
    (211) casesChar -> caseChar . casesChar
    (212) casesChar -> caseChar . defcase
    (210) casesChar -> . caseChar
    (211) casesChar -> . caseChar casesChar
    (212) casesChar -> . caseChar defcase
    (217) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (209) caseChar -> . CASE CHAR FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 210 (casesChar -> caseChar .)
    CASE            shift and go to state 269

    caseChar                       shift and go to state 129
    casesChar                      shift and go to state 267
    defcase                        shift and go to state 268

state 130

    (214) casesBool -> caseBool .
    (215) casesBool -> caseBool . casesBool
    (216) casesBool -> caseBool . defcase
    (214) casesBool -> . caseBool
    (215) casesBool -> . caseBool casesBool
    (216) casesBool -> . caseBool defcase
    (217) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (213) caseBool -> . CASE booleanos FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 214 (casesBool -> caseBool .)
    CASE            shift and go to state 272

    caseBool                       shift and go to state 130
    casesBool                      shift and go to state 270
    defcase                        shift and go to state 271

state 131

    (189) caseInt -> CASE . INT FUNCION_FLECHA codeBlock
    (193) caseLgn -> CASE . LONG FUNCION_FLECHA codeBlock
    (197) caseFlt -> CASE . FLOAT FUNCION_FLECHA codeBlock
    (201) caseDob -> CASE . DOUBLE FUNCION_FLECHA codeBlock
    (205) caseStr -> CASE . STRING FUNCION_FLECHA codeBlock
    (209) caseChar -> CASE . CHAR FUNCION_FLECHA codeBlock
    (213) caseBool -> CASE . booleanos FUNCION_FLECHA codeBlock
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    INT             shift and go to state 273
    LONG            shift and go to state 274
    FLOAT           shift and go to state 275
    DOUBLE          shift and go to state 276
    STRING          shift and go to state 277
    CHAR            shift and go to state 278
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79

    booleanos                      shift and go to state 279
    startsWith                     shift and go to state 80

state 132

    (146) varparen -> PAR_I valores PAR_D .

    PAR_I           reduce using rule 146 (varparen -> PAR_I valores PAR_D .)
    $end            reduce using rule 146 (varparen -> PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 146 (varparen -> PAR_I valores PAR_D .)
    VAR             reduce using rule 146 (varparen -> PAR_I valores PAR_D .)
    VAL             reduce using rule 146 (varparen -> PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 146 (varparen -> PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 146 (varparen -> PAR_I valores PAR_D .)
    PRINT           reduce using rule 146 (varparen -> PAR_I valores PAR_D .)
    READLINE        reduce using rule 146 (varparen -> PAR_I valores PAR_D .)
    WHILE           reduce using rule 146 (varparen -> PAR_I valores PAR_D .)
    FOR             reduce using rule 146 (varparen -> PAR_I valores PAR_D .)
    IF              reduce using rule 146 (varparen -> PAR_I valores PAR_D .)
    STRING          reduce using rule 146 (varparen -> PAR_I valores PAR_D .)
    INT             reduce using rule 146 (varparen -> PAR_I valores PAR_D .)
    LONG            reduce using rule 146 (varparen -> PAR_I valores PAR_D .)
    FLOAT           reduce using rule 146 (varparen -> PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 146 (varparen -> PAR_I valores PAR_D .)
    RETURN          reduce using rule 146 (varparen -> PAR_I valores PAR_D .)
    PUNTO           reduce using rule 146 (varparen -> PAR_I valores PAR_D .)
    DEF             reduce using rule 146 (varparen -> PAR_I valores PAR_D .)
    CASE            reduce using rule 146 (varparen -> PAR_I valores PAR_D .)


state 133

    (170) valores -> valor COMA . valores
    (169) valores -> . valor
    (170) valores -> . valor COMA valores
    (101) valor -> . STRING
    (102) valor -> . CHAR
    (103) valor -> . VARIABLE
    (104) valor -> . numeros
    (105) valor -> . booleanos
    (106) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (107) valor -> . VARIABLE PAR_I INT PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 69
    CHAR            shift and go to state 70
    VARIABLE        shift and go to state 71
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79

    valor                          shift and go to state 68
    valores                        shift and go to state 280
    numeros                        shift and go to state 72
    booleanos                      shift and go to state 73
    startsWith                     shift and go to state 80

state 134

    (106) valor -> VARIABLE PAR_I . VARIABLE PAR_D
    (107) valor -> VARIABLE PAR_I . INT PAR_D

    VARIABLE        shift and go to state 281
    INT             shift and go to state 282


state 135

    (4) io -> VARIABLE PUNTO VARIABLE . PUNTO VARIABLE PUNTO READLINE

    PUNTO           shift and go to state 283


state 136

    (223) elseif -> ELSE IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (224) elseif -> ELSE IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (227) condicional -> . valorC logicos condicional
    (228) condicional -> . valorC
    (229) valorC -> . VARIABLE
    (230) valorC -> . booleanos
    (231) valorC -> . relacional
    (232) valorC -> . NOT VARIABLE
    (233) valorC -> . NOT booleanos
    (234) valorC -> . NOT relacional
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (238) relacional -> . numeros comparacion numeros
    (239) relacional -> . aritmetica comparacion aritmetica
    (240) relacional -> . aritmetica comparacion numeros
    (241) relacional -> . numeros comparacion aritmetica
    (242) relacional -> . booleanos comparacion booleanos
    (243) relacional -> . STRING comparacion STRING
    (244) relacional -> . CHAR comparacion CHAR
    (245) relacional -> . VARIABLE comparacion numeros
    (246) relacional -> . numeros comparacion VARIABLE
    (247) relacional -> . VARIABLE comparacion booleanos
    (248) relacional -> . booleanos comparacion VARIABLE
    (249) relacional -> . VARIABLE comparacion STRING
    (250) relacional -> . STRING comparacion VARIABLE
    (251) relacional -> . VARIABLE comparacion CHAR
    (252) relacional -> . CHAR comparacion VARIABLE
    (253) relacional -> . VARIABLE comparacion VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 101
    NOT             shift and go to state 104
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79
    STRING          shift and go to state 107
    CHAR            shift and go to state 108
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    condicional                    shift and go to state 284
    valorC                         shift and go to state 100
    booleanos                      shift and go to state 102
    relacional                     shift and go to state 103
    startsWith                     shift and go to state 80
    numeros                        shift and go to state 105
    aritmetica                     shift and go to state 106

state 137

    (225) else -> ELSE LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 285


state 138

    (22) contenido -> asignacion .
    (33) contenido -> asignacion . contenido
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_D         reduce using rule 22 (contenido -> asignacion .)
    RETURN          reduce using rule 22 (contenido -> asignacion .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    asignacion                     shift and go to state 138
    contenido                      shift and go to state 286
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 139

    (23) contenido -> reasignacion .
    (34) contenido -> reasignacion . contenido
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_D         reduce using rule 23 (contenido -> reasignacion .)
    RETURN          reduce using rule 23 (contenido -> reasignacion .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    reasignacion                   shift and go to state 139
    contenido                      shift and go to state 287
    asignacion                     shift and go to state 138
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 140

    (24) contenido -> funcall .
    (35) contenido -> funcall . contenido
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_D         reduce using rule 24 (contenido -> funcall .)
    RETURN          reduce using rule 24 (contenido -> funcall .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    funcall                        shift and go to state 140
    contenido                      shift and go to state 288
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 141

    (25) contenido -> impresion .
    (36) contenido -> impresion . contenido
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_D         reduce using rule 25 (contenido -> impresion .)
    RETURN          reduce using rule 25 (contenido -> impresion .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    impresion                      shift and go to state 141
    contenido                      shift and go to state 289
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 142

    (26) contenido -> entrada .
    (37) contenido -> entrada . contenido
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_D         reduce using rule 26 (contenido -> entrada .)
    RETURN          reduce using rule 26 (contenido -> entrada .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    entrada                        shift and go to state 142
    contenido                      shift and go to state 290
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 143

    (27) contenido -> while .
    (38) contenido -> while . contenido
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_D         reduce using rule 27 (contenido -> while .)
    RETURN          reduce using rule 27 (contenido -> while .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    while                          shift and go to state 143
    contenido                      shift and go to state 291
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 144

    (28) contenido -> for .
    (39) contenido -> for . contenido
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_D         reduce using rule 28 (contenido -> for .)
    RETURN          reduce using rule 28 (contenido -> for .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    for                            shift and go to state 144
    contenido                      shift and go to state 292
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 145

    (29) contenido -> match .
    (41) contenido -> match . contenido
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_D         reduce using rule 29 (contenido -> match .)
    RETURN          reduce using rule 29 (contenido -> match .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    match                          shift and go to state 145
    contenido                      shift and go to state 293
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 146

    (30) contenido -> if .
    (40) contenido -> if . contenido
    (221) if -> if . elseif
    (222) if -> if . else
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (223) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (224) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (225) else -> . ELSE LLAVE_I contenido LLAVE_D
    (226) else -> . elseif else
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_D         reduce using rule 30 (contenido -> if .)
    RETURN          reduce using rule 30 (contenido -> if .)
    ELSE            shift and go to state 51
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    if                             shift and go to state 146
    contenido                      shift and go to state 294
    elseif                         shift and go to state 49
    else                           shift and go to state 50
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 147

    (31) contenido -> aritmetica .
    (42) contenido -> aritmetica . contenido
    (262) aritmetica -> aritmetica . aritmeticos numeros
    (263) aritmetica -> aritmetica . aritmeticos VARIABLE
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_D         reduce using rule 31 (contenido -> aritmetica .)
    RETURN          reduce using rule 31 (contenido -> aritmetica .)
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    aritmetica                     shift and go to state 147
    contenido                      shift and go to state 295
    aritmeticos                    shift and go to state 242
    numeros                        shift and go to state 150
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 148

    (32) contenido -> startsWith .
    (43) contenido -> startsWith . contenido
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_D         reduce using rule 32 (contenido -> startsWith .)
    RETURN          reduce using rule 32 (contenido -> startsWith .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    startsWith                     shift and go to state 148
    contenido                      shift and go to state 296
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 149

    (88) reasignacion -> VARIABLE . IGUAL valor
    (89) reasignacion -> VARIABLE . IGUAL returnfun
    (90) reasignacion -> VARIABLE . IGUAL aritmetica
    (91) reasignacion -> VARIABLE . PAR_I INT PAR_D IGUAL valor
    (145) funcall -> VARIABLE . varparen
    (181) match -> VARIABLE . MATCH LLAVE_I cases LLAVE_D
    (259) aritmetica -> VARIABLE . aritmeticos numeros
    (261) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (146) varparen -> . PAR_I valores PAR_D
    (147) varparen -> . PAR_I PAR_D
    (148) varparen -> . varparen PAR_I valores PAR_D
    (149) varparen -> . varparen PAR_I PAR_D
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD

    IGUAL           shift and go to state 297
    PAR_I           shift and go to state 298
    MATCH           shift and go to state 39
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234

    varparen                       shift and go to state 38
    aritmeticos                    shift and go to state 225

state 150

    (258) aritmetica -> numeros . aritmeticos numeros
    (260) aritmetica -> numeros . aritmeticos VARIABLE
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD

    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234

    aritmeticos                    shift and go to state 240

state 151

    (115) funcion -> DEF VARIABLE parametro IGUAL . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 299


state 152

    (116) funcion -> DEF VARIABLE parametro LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    contenido                      shift and go to state 300
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 153

    (123) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (124) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (126) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (127) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I RETURN valor LLAVE_D
    (128) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I RETURN aritmetica LLAVE_D

    IGUAL           shift and go to state 301


state 154

    (131) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D

    IGUAL           shift and go to state 302


state 155

    (134) dectipo -> DOBLE_PUNTO . tipo
    (135) dectipoTupla -> DOBLE_PUNTO . PAR_I tipos PAR_D
    (92) tipo -> . CHARCLASS
    (93) tipo -> . STRINGCLASS
    (94) tipo -> . BOOLCLASS
    (95) tipo -> . INTCLASS
    (96) tipo -> . LONGCLASS
    (97) tipo -> . DOUBLECLASS
    (98) tipo -> . FLOATCLASS
    (99) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (100) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    PAR_I           shift and go to state 304
    CHARCLASS       shift and go to state 305
    STRINGCLASS     shift and go to state 306
    BOOLCLASS       shift and go to state 307
    INTCLASS        shift and go to state 308
    LONGCLASS       shift and go to state 309
    DOUBLECLASS     shift and go to state 310
    FLOATCLASS      shift and go to state 311
    ARRAYCLASS      shift and go to state 312
    LISTCLASS       shift and go to state 313

    tipo                           shift and go to state 303

state 156

    (120) parametro -> PAR_I PAR_D .

    IGUAL           reduce using rule 120 (parametro -> PAR_I PAR_D .)
    LLAVE_I         reduce using rule 120 (parametro -> PAR_I PAR_D .)
    DOBLE_PUNTO     reduce using rule 120 (parametro -> PAR_I PAR_D .)


state 157

    (121) parametros -> PAR_I declaracion . PAR_D
    (122) parametros -> PAR_I declaracion . PAR_D parametros

    PAR_D           shift and go to state 314


state 158

    (117) declaracion -> VARIABLE . DOBLE_PUNTO tipo
    (118) declaracion -> VARIABLE . DOBLE_PUNTO tipo IGUAL valor

    DOBLE_PUNTO     shift and go to state 315


state 159

    (140) impresion -> PRINTLN PAR_I valorI PAR_D .

    $end            reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    LLAVE_D         reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VAR             reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VAL             reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VARIABLE        reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    PRINTLN         reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    PRINT           reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    READLINE        reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    WHILE           reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    FOR             reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    IF              reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    STRING          reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    INT             reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    LONG            reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    FLOAT           reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    DOUBLE          reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    RETURN          reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    CASE            reduce using rule 140 (impresion -> PRINTLN PAR_I valorI PAR_D .)


state 160

    (142) valorI -> valor MAS . valorI
    (142) valorI -> . valor MAS valorI
    (143) valorI -> . valor
    (101) valor -> . STRING
    (102) valor -> . CHAR
    (103) valor -> . VARIABLE
    (104) valor -> . numeros
    (105) valor -> . booleanos
    (106) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (107) valor -> . VARIABLE PAR_I INT PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 69
    CHAR            shift and go to state 70
    VARIABLE        shift and go to state 71
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79

    valor                          shift and go to state 92
    valorI                         shift and go to state 316
    numeros                        shift and go to state 72
    booleanos                      shift and go to state 73
    startsWith                     shift and go to state 80

state 161

    (141) impresion -> PRINT PAR_I valorI PAR_D .

    $end            reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    LLAVE_D         reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    VAR             reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    VAL             reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    VARIABLE        reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    PRINTLN         reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    PRINT           reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    READLINE        reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    WHILE           reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    FOR             reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    IF              reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    STRING          reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    INT             reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    LONG            reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    FLOAT           reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    DOUBLE          reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    RETURN          reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)
    CASE            reduce using rule 141 (impresion -> PRINT PAR_I valorI PAR_D .)


state 162

    (49) asignacion -> VAR VARIABLE IGUAL VARIABLE .
    (259) aritmetica -> VARIABLE . aritmeticos numeros
    (261) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (155) castingcall -> VARIABLE . PUNTO castingfun
    (145) funcall -> VARIABLE . varparen
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD
    (146) varparen -> . PAR_I valores PAR_D
    (147) varparen -> . PAR_I PAR_D
    (148) varparen -> . varparen PAR_I valores PAR_D
    (149) varparen -> . varparen PAR_I PAR_D

    DEF             reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VARIABLE        reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PRINTLN         reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PRINT           reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    READLINE        reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VAR             reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VAL             reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    WHILE           reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    FOR             reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    IF              reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    STRING          reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    $end            reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    INT             reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    LONG            reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    FLOAT           reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    DOUBLE          reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    RETURN          reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    CASE            reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PUNTO           shift and go to state 317
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234
    PAR_I           shift and go to state 40

    aritmeticos                    shift and go to state 225
    varparen                       shift and go to state 38

state 163

    (51) asignacion -> VAR VARIABLE IGUAL aritmetica .
    (262) aritmetica -> aritmetica . aritmeticos numeros
    (263) aritmetica -> aritmetica . aritmeticos VARIABLE
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD

    DEF             reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VAR             reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    STRING          reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    $end            reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234

    aritmeticos                    shift and go to state 242

state 164

    (53) asignacion -> VAR VARIABLE IGUAL returnfun .

    DEF             reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    VARIABLE        reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    PRINTLN         reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    PRINT           reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    READLINE        reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    VAR             reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    VAL             reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    WHILE           reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    FOR             reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    IF              reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    STRING          reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    $end            reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    LLAVE_D         reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    INT             reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    LONG            reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    FLOAT           reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    DOUBLE          reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    RETURN          reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    CASE            reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)


state 165

    (172) asignacion -> VAR VARIABLE IGUAL tuple .

    DEF             reduce using rule 172 (asignacion -> VAR VARIABLE IGUAL tuple .)
    VARIABLE        reduce using rule 172 (asignacion -> VAR VARIABLE IGUAL tuple .)
    PRINTLN         reduce using rule 172 (asignacion -> VAR VARIABLE IGUAL tuple .)
    PRINT           reduce using rule 172 (asignacion -> VAR VARIABLE IGUAL tuple .)
    READLINE        reduce using rule 172 (asignacion -> VAR VARIABLE IGUAL tuple .)
    VAR             reduce using rule 172 (asignacion -> VAR VARIABLE IGUAL tuple .)
    VAL             reduce using rule 172 (asignacion -> VAR VARIABLE IGUAL tuple .)
    WHILE           reduce using rule 172 (asignacion -> VAR VARIABLE IGUAL tuple .)
    FOR             reduce using rule 172 (asignacion -> VAR VARIABLE IGUAL tuple .)
    IF              reduce using rule 172 (asignacion -> VAR VARIABLE IGUAL tuple .)
    STRING          reduce using rule 172 (asignacion -> VAR VARIABLE IGUAL tuple .)
    $end            reduce using rule 172 (asignacion -> VAR VARIABLE IGUAL tuple .)
    LLAVE_D         reduce using rule 172 (asignacion -> VAR VARIABLE IGUAL tuple .)
    INT             reduce using rule 172 (asignacion -> VAR VARIABLE IGUAL tuple .)
    LONG            reduce using rule 172 (asignacion -> VAR VARIABLE IGUAL tuple .)
    FLOAT           reduce using rule 172 (asignacion -> VAR VARIABLE IGUAL tuple .)
    DOUBLE          reduce using rule 172 (asignacion -> VAR VARIABLE IGUAL tuple .)
    RETURN          reduce using rule 172 (asignacion -> VAR VARIABLE IGUAL tuple .)
    CASE            reduce using rule 172 (asignacion -> VAR VARIABLE IGUAL tuple .)


state 166

    (305) asignacionLong -> VAR VARIABLE IGUAL longvalues .
    (317) floatvalues -> longvalues .

  ! reduce/reduce conflict for DEF resolved using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VAR resolved using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for IF resolved using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for $end resolved using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for INT resolved using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    DEF             reduce using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    VARIABLE        reduce using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    PRINTLN         reduce using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    PRINT           reduce using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    READLINE        reduce using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    VAR             reduce using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    VAL             reduce using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    WHILE           reduce using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    FOR             reduce using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    IF              reduce using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    STRING          reduce using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    $end            reduce using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    LLAVE_D         reduce using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    INT             reduce using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    LONG            reduce using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    FLOAT           reduce using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    DOUBLE          reduce using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    RETURN          reduce using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    CASE            reduce using rule 305 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)

  ! DEF             [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! VARIABLE        [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! PRINTLN         [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! PRINT           [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! READLINE        [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! VAR             [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! VAL             [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! WHILE           [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! FOR             [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! IF              [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! STRING          [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! $end            [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! LLAVE_D         [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! INT             [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! LONG            [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! FLOAT           [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! DOUBLE          [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! RETURN          [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! CASE            [ reduce using rule 317 (floatvalues -> longvalues .) ]


state 167

    (299) asignacionInt -> VAR VARIABLE IGUAL intvalues .
    (310) longvalues -> intvalues .

  ! reduce/reduce conflict for DEF resolved using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VAR resolved using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for IF resolved using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for $end resolved using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for INT resolved using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    DEF             reduce using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    VARIABLE        reduce using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    PRINTLN         reduce using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    PRINT           reduce using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    READLINE        reduce using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    VAR             reduce using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    VAL             reduce using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    WHILE           reduce using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    FOR             reduce using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    IF              reduce using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    STRING          reduce using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    $end            reduce using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    LLAVE_D         reduce using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    INT             reduce using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    LONG            reduce using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    FLOAT           reduce using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    DOUBLE          reduce using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    RETURN          reduce using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    CASE            reduce using rule 299 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)

  ! DEF             [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! VARIABLE        [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! PRINTLN         [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! PRINT           [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! READLINE        [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! VAR             [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! VAL             [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! WHILE           [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! FOR             [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! IF              [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! STRING          [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! $end            [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! LLAVE_D         [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! INT             [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! LONG            [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! FLOAT           [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! DOUBLE          [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! RETURN          [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! CASE            [ reduce using rule 310 (longvalues -> intvalues .) ]


state 168

    (312) asignacionFloat -> VAR VARIABLE IGUAL floatvalues .
    (324) doublevalues -> floatvalues .

  ! reduce/reduce conflict for DEF resolved using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VAR resolved using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for IF resolved using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for $end resolved using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for INT resolved using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    DEF             reduce using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    VARIABLE        reduce using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    PRINTLN         reduce using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    PRINT           reduce using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    READLINE        reduce using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    VAR             reduce using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    VAL             reduce using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    WHILE           reduce using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    FOR             reduce using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    IF              reduce using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    STRING          reduce using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    $end            reduce using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    LLAVE_D         reduce using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    INT             reduce using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    LONG            reduce using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    FLOAT           reduce using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    DOUBLE          reduce using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    RETURN          reduce using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    CASE            reduce using rule 312 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)

  ! DEF             [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! VARIABLE        [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! PRINTLN         [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! PRINT           [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! READLINE        [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! VAR             [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! VAL             [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! WHILE           [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! FOR             [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! IF              [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! STRING          [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! $end            [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! LLAVE_D         [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! INT             [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! LONG            [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! FLOAT           [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! DOUBLE          [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! RETURN          [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! CASE            [ reduce using rule 324 (doublevalues -> floatvalues .) ]


state 169

    (319) asignacionDouble -> VAR VARIABLE IGUAL doublevalues .

    DEF             reduce using rule 319 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    VARIABLE        reduce using rule 319 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    PRINTLN         reduce using rule 319 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    PRINT           reduce using rule 319 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    READLINE        reduce using rule 319 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    VAR             reduce using rule 319 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    VAL             reduce using rule 319 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    WHILE           reduce using rule 319 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    FOR             reduce using rule 319 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    IF              reduce using rule 319 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    STRING          reduce using rule 319 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    $end            reduce using rule 319 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    LLAVE_D         reduce using rule 319 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    INT             reduce using rule 319 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    LONG            reduce using rule 319 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    FLOAT           reduce using rule 319 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    DOUBLE          reduce using rule 319 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    RETURN          reduce using rule 319 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    CASE            reduce using rule 319 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)


state 170

    (70) asignacionString -> VAR VARIABLE IGUAL STRING .
    (327) stringCastLong -> STRING . PUNTO TO_LONG
    (326) stringCastInt -> STRING . PUNTO TO_INT
    (328) stringCastFloat -> STRING . PUNTO TO_FLOAT
    (329) stringCastDouble -> STRING . PUNTO TO_DOUBLE
    (275) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    DEF             reduce using rule 70 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VARIABLE        reduce using rule 70 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PRINTLN         reduce using rule 70 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PRINT           reduce using rule 70 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    READLINE        reduce using rule 70 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VAR             reduce using rule 70 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VAL             reduce using rule 70 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    WHILE           reduce using rule 70 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    FOR             reduce using rule 70 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    IF              reduce using rule 70 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    STRING          reduce using rule 70 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    $end            reduce using rule 70 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    LLAVE_D         reduce using rule 70 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    INT             reduce using rule 70 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    LONG            reduce using rule 70 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    FLOAT           reduce using rule 70 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    DOUBLE          reduce using rule 70 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    RETURN          reduce using rule 70 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    CASE            reduce using rule 70 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PUNTO           shift and go to state 318


state 171

    (76) asignacionChar -> VAR VARIABLE IGUAL CHAR .

    DEF             reduce using rule 76 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VARIABLE        reduce using rule 76 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    PRINTLN         reduce using rule 76 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    PRINT           reduce using rule 76 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    READLINE        reduce using rule 76 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VAR             reduce using rule 76 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VAL             reduce using rule 76 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    WHILE           reduce using rule 76 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    FOR             reduce using rule 76 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    IF              reduce using rule 76 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    STRING          reduce using rule 76 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    $end            reduce using rule 76 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    LLAVE_D         reduce using rule 76 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    INT             reduce using rule 76 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    LONG            reduce using rule 76 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    FLOAT           reduce using rule 76 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    DOUBLE          reduce using rule 76 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    RETURN          reduce using rule 76 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    CASE            reduce using rule 76 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)


state 172

    (82) asignacionBoolean -> VAR VARIABLE IGUAL booleanos .

    DEF             reduce using rule 82 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 82 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    PRINTLN         reduce using rule 82 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 82 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    READLINE        reduce using rule 82 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VAR             reduce using rule 82 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VAL             reduce using rule 82 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 82 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    FOR             reduce using rule 82 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    IF              reduce using rule 82 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    STRING          reduce using rule 82 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    $end            reduce using rule 82 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    LLAVE_D         reduce using rule 82 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    INT             reduce using rule 82 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    LONG            reduce using rule 82 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    FLOAT           reduce using rule 82 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    DOUBLE          reduce using rule 82 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    RETURN          reduce using rule 82 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 82 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)


state 173

    (160) array -> VAR VARIABLE IGUAL ARRAYCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 319


state 174

    (171) tuple -> PAR_I . valores PAR_D
    (169) valores -> . valor
    (170) valores -> . valor COMA valores
    (101) valor -> . STRING
    (102) valor -> . CHAR
    (103) valor -> . VARIABLE
    (104) valor -> . numeros
    (105) valor -> . booleanos
    (106) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (107) valor -> . VARIABLE PAR_I INT PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 69
    CHAR            shift and go to state 70
    VARIABLE        shift and go to state 71
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79

    valores                        shift and go to state 320
    valor                          shift and go to state 68
    numeros                        shift and go to state 72
    booleanos                      shift and go to state 73
    startsWith                     shift and go to state 80

state 175

    (150) returnfun -> returnCastable .
    (154) castingcall -> returnCastable . PUNTO castingfun

    DEF             reduce using rule 150 (returnfun -> returnCastable .)
    VARIABLE        reduce using rule 150 (returnfun -> returnCastable .)
    PRINTLN         reduce using rule 150 (returnfun -> returnCastable .)
    PRINT           reduce using rule 150 (returnfun -> returnCastable .)
    READLINE        reduce using rule 150 (returnfun -> returnCastable .)
    VAR             reduce using rule 150 (returnfun -> returnCastable .)
    VAL             reduce using rule 150 (returnfun -> returnCastable .)
    WHILE           reduce using rule 150 (returnfun -> returnCastable .)
    FOR             reduce using rule 150 (returnfun -> returnCastable .)
    IF              reduce using rule 150 (returnfun -> returnCastable .)
    STRING          reduce using rule 150 (returnfun -> returnCastable .)
    $end            reduce using rule 150 (returnfun -> returnCastable .)
    LLAVE_D         reduce using rule 150 (returnfun -> returnCastable .)
    INT             reduce using rule 150 (returnfun -> returnCastable .)
    LONG            reduce using rule 150 (returnfun -> returnCastable .)
    FLOAT           reduce using rule 150 (returnfun -> returnCastable .)
    DOUBLE          reduce using rule 150 (returnfun -> returnCastable .)
    RETURN          reduce using rule 150 (returnfun -> returnCastable .)
    CASE            reduce using rule 150 (returnfun -> returnCastable .)
    PUNTO           shift and go to state 321


state 176

    (151) returnfun -> castingcall .

    DEF             reduce using rule 151 (returnfun -> castingcall .)
    VARIABLE        reduce using rule 151 (returnfun -> castingcall .)
    PRINTLN         reduce using rule 151 (returnfun -> castingcall .)
    PRINT           reduce using rule 151 (returnfun -> castingcall .)
    READLINE        reduce using rule 151 (returnfun -> castingcall .)
    VAR             reduce using rule 151 (returnfun -> castingcall .)
    VAL             reduce using rule 151 (returnfun -> castingcall .)
    WHILE           reduce using rule 151 (returnfun -> castingcall .)
    FOR             reduce using rule 151 (returnfun -> castingcall .)
    IF              reduce using rule 151 (returnfun -> castingcall .)
    STRING          reduce using rule 151 (returnfun -> castingcall .)
    $end            reduce using rule 151 (returnfun -> castingcall .)
    LLAVE_D         reduce using rule 151 (returnfun -> castingcall .)
    INT             reduce using rule 151 (returnfun -> castingcall .)
    LONG            reduce using rule 151 (returnfun -> castingcall .)
    FLOAT           reduce using rule 151 (returnfun -> castingcall .)
    DOUBLE          reduce using rule 151 (returnfun -> castingcall .)
    RETURN          reduce using rule 151 (returnfun -> castingcall .)
    CASE            reduce using rule 151 (returnfun -> castingcall .)


state 177

    (309) longvalues -> INT .
    (303) intvalues -> INT .
    (111) numeros -> INT .

  ! reduce/reduce conflict for DEF resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for PRINT resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for READLINE resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for VAR resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for VAL resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for WHILE resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for FOR resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for IF resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for STRING resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for $end resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for INT resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for LONG resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for FLOAT resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for RETURN resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for CASE resolved using rule 303 (intvalues -> INT .)
    DEF             reduce using rule 303 (intvalues -> INT .)
    VARIABLE        reduce using rule 303 (intvalues -> INT .)
    PRINTLN         reduce using rule 303 (intvalues -> INT .)
    PRINT           reduce using rule 303 (intvalues -> INT .)
    READLINE        reduce using rule 303 (intvalues -> INT .)
    VAR             reduce using rule 303 (intvalues -> INT .)
    VAL             reduce using rule 303 (intvalues -> INT .)
    WHILE           reduce using rule 303 (intvalues -> INT .)
    FOR             reduce using rule 303 (intvalues -> INT .)
    IF              reduce using rule 303 (intvalues -> INT .)
    STRING          reduce using rule 303 (intvalues -> INT .)
    $end            reduce using rule 303 (intvalues -> INT .)
    LLAVE_D         reduce using rule 303 (intvalues -> INT .)
    INT             reduce using rule 303 (intvalues -> INT .)
    LONG            reduce using rule 303 (intvalues -> INT .)
    FLOAT           reduce using rule 303 (intvalues -> INT .)
    DOUBLE          reduce using rule 303 (intvalues -> INT .)
    RETURN          reduce using rule 303 (intvalues -> INT .)
    CASE            reduce using rule 303 (intvalues -> INT .)
    MENOS           reduce using rule 111 (numeros -> INT .)
    MAS             reduce using rule 111 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 111 (numeros -> INT .)
    DIVISION        reduce using rule 111 (numeros -> INT .)
    MOD             reduce using rule 111 (numeros -> INT .)

  ! DEF             [ reduce using rule 309 (longvalues -> INT .) ]
  ! VARIABLE        [ reduce using rule 309 (longvalues -> INT .) ]
  ! PRINTLN         [ reduce using rule 309 (longvalues -> INT .) ]
  ! PRINT           [ reduce using rule 309 (longvalues -> INT .) ]
  ! READLINE        [ reduce using rule 309 (longvalues -> INT .) ]
  ! VAR             [ reduce using rule 309 (longvalues -> INT .) ]
  ! VAL             [ reduce using rule 309 (longvalues -> INT .) ]
  ! WHILE           [ reduce using rule 309 (longvalues -> INT .) ]
  ! FOR             [ reduce using rule 309 (longvalues -> INT .) ]
  ! IF              [ reduce using rule 309 (longvalues -> INT .) ]
  ! STRING          [ reduce using rule 309 (longvalues -> INT .) ]
  ! $end            [ reduce using rule 309 (longvalues -> INT .) ]
  ! LLAVE_D         [ reduce using rule 309 (longvalues -> INT .) ]
  ! INT             [ reduce using rule 309 (longvalues -> INT .) ]
  ! LONG            [ reduce using rule 309 (longvalues -> INT .) ]
  ! FLOAT           [ reduce using rule 309 (longvalues -> INT .) ]
  ! DOUBLE          [ reduce using rule 309 (longvalues -> INT .) ]
  ! RETURN          [ reduce using rule 309 (longvalues -> INT .) ]
  ! CASE            [ reduce using rule 309 (longvalues -> INT .) ]


state 178

    (311) longvalues -> stringCastLong .

    DEF             reduce using rule 311 (longvalues -> stringCastLong .)
    VARIABLE        reduce using rule 311 (longvalues -> stringCastLong .)
    PRINTLN         reduce using rule 311 (longvalues -> stringCastLong .)
    PRINT           reduce using rule 311 (longvalues -> stringCastLong .)
    READLINE        reduce using rule 311 (longvalues -> stringCastLong .)
    VAR             reduce using rule 311 (longvalues -> stringCastLong .)
    VAL             reduce using rule 311 (longvalues -> stringCastLong .)
    WHILE           reduce using rule 311 (longvalues -> stringCastLong .)
    FOR             reduce using rule 311 (longvalues -> stringCastLong .)
    IF              reduce using rule 311 (longvalues -> stringCastLong .)
    STRING          reduce using rule 311 (longvalues -> stringCastLong .)
    $end            reduce using rule 311 (longvalues -> stringCastLong .)
    LLAVE_D         reduce using rule 311 (longvalues -> stringCastLong .)
    INT             reduce using rule 311 (longvalues -> stringCastLong .)
    LONG            reduce using rule 311 (longvalues -> stringCastLong .)
    FLOAT           reduce using rule 311 (longvalues -> stringCastLong .)
    DOUBLE          reduce using rule 311 (longvalues -> stringCastLong .)
    RETURN          reduce using rule 311 (longvalues -> stringCastLong .)
    CASE            reduce using rule 311 (longvalues -> stringCastLong .)


state 179

    (304) intvalues -> stringCastInt .

    DEF             reduce using rule 304 (intvalues -> stringCastInt .)
    VARIABLE        reduce using rule 304 (intvalues -> stringCastInt .)
    PRINTLN         reduce using rule 304 (intvalues -> stringCastInt .)
    PRINT           reduce using rule 304 (intvalues -> stringCastInt .)
    READLINE        reduce using rule 304 (intvalues -> stringCastInt .)
    VAR             reduce using rule 304 (intvalues -> stringCastInt .)
    VAL             reduce using rule 304 (intvalues -> stringCastInt .)
    WHILE           reduce using rule 304 (intvalues -> stringCastInt .)
    FOR             reduce using rule 304 (intvalues -> stringCastInt .)
    IF              reduce using rule 304 (intvalues -> stringCastInt .)
    STRING          reduce using rule 304 (intvalues -> stringCastInt .)
    $end            reduce using rule 304 (intvalues -> stringCastInt .)
    LLAVE_D         reduce using rule 304 (intvalues -> stringCastInt .)
    INT             reduce using rule 304 (intvalues -> stringCastInt .)
    LONG            reduce using rule 304 (intvalues -> stringCastInt .)
    FLOAT           reduce using rule 304 (intvalues -> stringCastInt .)
    DOUBLE          reduce using rule 304 (intvalues -> stringCastInt .)
    RETURN          reduce using rule 304 (intvalues -> stringCastInt .)
    CASE            reduce using rule 304 (intvalues -> stringCastInt .)


state 180

    (316) floatvalues -> FLOAT .
    (113) numeros -> FLOAT .

    DEF             reduce using rule 316 (floatvalues -> FLOAT .)
    VARIABLE        reduce using rule 316 (floatvalues -> FLOAT .)
    PRINTLN         reduce using rule 316 (floatvalues -> FLOAT .)
    PRINT           reduce using rule 316 (floatvalues -> FLOAT .)
    READLINE        reduce using rule 316 (floatvalues -> FLOAT .)
    VAR             reduce using rule 316 (floatvalues -> FLOAT .)
    VAL             reduce using rule 316 (floatvalues -> FLOAT .)
    WHILE           reduce using rule 316 (floatvalues -> FLOAT .)
    FOR             reduce using rule 316 (floatvalues -> FLOAT .)
    IF              reduce using rule 316 (floatvalues -> FLOAT .)
    STRING          reduce using rule 316 (floatvalues -> FLOAT .)
    $end            reduce using rule 316 (floatvalues -> FLOAT .)
    LLAVE_D         reduce using rule 316 (floatvalues -> FLOAT .)
    INT             reduce using rule 316 (floatvalues -> FLOAT .)
    LONG            reduce using rule 316 (floatvalues -> FLOAT .)
    FLOAT           reduce using rule 316 (floatvalues -> FLOAT .)
    DOUBLE          reduce using rule 316 (floatvalues -> FLOAT .)
    RETURN          reduce using rule 316 (floatvalues -> FLOAT .)
    CASE            reduce using rule 316 (floatvalues -> FLOAT .)
    MENOS           reduce using rule 113 (numeros -> FLOAT .)
    MAS             reduce using rule 113 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 113 (numeros -> FLOAT .)
    DIVISION        reduce using rule 113 (numeros -> FLOAT .)
    MOD             reduce using rule 113 (numeros -> FLOAT .)


state 181

    (318) floatvalues -> stringCastFloat .

    DEF             reduce using rule 318 (floatvalues -> stringCastFloat .)
    VARIABLE        reduce using rule 318 (floatvalues -> stringCastFloat .)
    PRINTLN         reduce using rule 318 (floatvalues -> stringCastFloat .)
    PRINT           reduce using rule 318 (floatvalues -> stringCastFloat .)
    READLINE        reduce using rule 318 (floatvalues -> stringCastFloat .)
    VAR             reduce using rule 318 (floatvalues -> stringCastFloat .)
    VAL             reduce using rule 318 (floatvalues -> stringCastFloat .)
    WHILE           reduce using rule 318 (floatvalues -> stringCastFloat .)
    FOR             reduce using rule 318 (floatvalues -> stringCastFloat .)
    IF              reduce using rule 318 (floatvalues -> stringCastFloat .)
    STRING          reduce using rule 318 (floatvalues -> stringCastFloat .)
    $end            reduce using rule 318 (floatvalues -> stringCastFloat .)
    LLAVE_D         reduce using rule 318 (floatvalues -> stringCastFloat .)
    INT             reduce using rule 318 (floatvalues -> stringCastFloat .)
    LONG            reduce using rule 318 (floatvalues -> stringCastFloat .)
    FLOAT           reduce using rule 318 (floatvalues -> stringCastFloat .)
    DOUBLE          reduce using rule 318 (floatvalues -> stringCastFloat .)
    RETURN          reduce using rule 318 (floatvalues -> stringCastFloat .)
    CASE            reduce using rule 318 (floatvalues -> stringCastFloat .)


state 182

    (323) doublevalues -> DOUBLE .
    (114) numeros -> DOUBLE .

    DEF             reduce using rule 323 (doublevalues -> DOUBLE .)
    VARIABLE        reduce using rule 323 (doublevalues -> DOUBLE .)
    PRINTLN         reduce using rule 323 (doublevalues -> DOUBLE .)
    PRINT           reduce using rule 323 (doublevalues -> DOUBLE .)
    READLINE        reduce using rule 323 (doublevalues -> DOUBLE .)
    VAR             reduce using rule 323 (doublevalues -> DOUBLE .)
    VAL             reduce using rule 323 (doublevalues -> DOUBLE .)
    WHILE           reduce using rule 323 (doublevalues -> DOUBLE .)
    FOR             reduce using rule 323 (doublevalues -> DOUBLE .)
    IF              reduce using rule 323 (doublevalues -> DOUBLE .)
    STRING          reduce using rule 323 (doublevalues -> DOUBLE .)
    $end            reduce using rule 323 (doublevalues -> DOUBLE .)
    LLAVE_D         reduce using rule 323 (doublevalues -> DOUBLE .)
    INT             reduce using rule 323 (doublevalues -> DOUBLE .)
    LONG            reduce using rule 323 (doublevalues -> DOUBLE .)
    FLOAT           reduce using rule 323 (doublevalues -> DOUBLE .)
    DOUBLE          reduce using rule 323 (doublevalues -> DOUBLE .)
    RETURN          reduce using rule 323 (doublevalues -> DOUBLE .)
    CASE            reduce using rule 323 (doublevalues -> DOUBLE .)
    MENOS           reduce using rule 114 (numeros -> DOUBLE .)
    MAS             reduce using rule 114 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 114 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 114 (numeros -> DOUBLE .)
    MOD             reduce using rule 114 (numeros -> DOUBLE .)


state 183

    (325) doublevalues -> stringCastDouble .

    DEF             reduce using rule 325 (doublevalues -> stringCastDouble .)
    VARIABLE        reduce using rule 325 (doublevalues -> stringCastDouble .)
    PRINTLN         reduce using rule 325 (doublevalues -> stringCastDouble .)
    PRINT           reduce using rule 325 (doublevalues -> stringCastDouble .)
    READLINE        reduce using rule 325 (doublevalues -> stringCastDouble .)
    VAR             reduce using rule 325 (doublevalues -> stringCastDouble .)
    VAL             reduce using rule 325 (doublevalues -> stringCastDouble .)
    WHILE           reduce using rule 325 (doublevalues -> stringCastDouble .)
    FOR             reduce using rule 325 (doublevalues -> stringCastDouble .)
    IF              reduce using rule 325 (doublevalues -> stringCastDouble .)
    STRING          reduce using rule 325 (doublevalues -> stringCastDouble .)
    $end            reduce using rule 325 (doublevalues -> stringCastDouble .)
    LLAVE_D         reduce using rule 325 (doublevalues -> stringCastDouble .)
    INT             reduce using rule 325 (doublevalues -> stringCastDouble .)
    LONG            reduce using rule 325 (doublevalues -> stringCastDouble .)
    FLOAT           reduce using rule 325 (doublevalues -> stringCastDouble .)
    DOUBLE          reduce using rule 325 (doublevalues -> stringCastDouble .)
    RETURN          reduce using rule 325 (doublevalues -> stringCastDouble .)
    CASE            reduce using rule 325 (doublevalues -> stringCastDouble .)


state 184

    (152) returnCastable -> entrada .

    PUNTO           reduce using rule 152 (returnCastable -> entrada .)
    DEF             reduce using rule 152 (returnCastable -> entrada .)
    VARIABLE        reduce using rule 152 (returnCastable -> entrada .)
    PRINTLN         reduce using rule 152 (returnCastable -> entrada .)
    PRINT           reduce using rule 152 (returnCastable -> entrada .)
    READLINE        reduce using rule 152 (returnCastable -> entrada .)
    VAR             reduce using rule 152 (returnCastable -> entrada .)
    VAL             reduce using rule 152 (returnCastable -> entrada .)
    WHILE           reduce using rule 152 (returnCastable -> entrada .)
    FOR             reduce using rule 152 (returnCastable -> entrada .)
    IF              reduce using rule 152 (returnCastable -> entrada .)
    STRING          reduce using rule 152 (returnCastable -> entrada .)
    $end            reduce using rule 152 (returnCastable -> entrada .)
    LLAVE_D         reduce using rule 152 (returnCastable -> entrada .)
    INT             reduce using rule 152 (returnCastable -> entrada .)
    LONG            reduce using rule 152 (returnCastable -> entrada .)
    FLOAT           reduce using rule 152 (returnCastable -> entrada .)
    DOUBLE          reduce using rule 152 (returnCastable -> entrada .)
    RETURN          reduce using rule 152 (returnCastable -> entrada .)
    CASE            reduce using rule 152 (returnCastable -> entrada .)


state 185

    (153) returnCastable -> funcall .

    PUNTO           reduce using rule 153 (returnCastable -> funcall .)
    DEF             reduce using rule 153 (returnCastable -> funcall .)
    VARIABLE        reduce using rule 153 (returnCastable -> funcall .)
    PRINTLN         reduce using rule 153 (returnCastable -> funcall .)
    PRINT           reduce using rule 153 (returnCastable -> funcall .)
    READLINE        reduce using rule 153 (returnCastable -> funcall .)
    VAR             reduce using rule 153 (returnCastable -> funcall .)
    VAL             reduce using rule 153 (returnCastable -> funcall .)
    WHILE           reduce using rule 153 (returnCastable -> funcall .)
    FOR             reduce using rule 153 (returnCastable -> funcall .)
    IF              reduce using rule 153 (returnCastable -> funcall .)
    STRING          reduce using rule 153 (returnCastable -> funcall .)
    $end            reduce using rule 153 (returnCastable -> funcall .)
    LLAVE_D         reduce using rule 153 (returnCastable -> funcall .)
    INT             reduce using rule 153 (returnCastable -> funcall .)
    LONG            reduce using rule 153 (returnCastable -> funcall .)
    FLOAT           reduce using rule 153 (returnCastable -> funcall .)
    DOUBLE          reduce using rule 153 (returnCastable -> funcall .)
    RETURN          reduce using rule 153 (returnCastable -> funcall .)
    CASE            reduce using rule 153 (returnCastable -> funcall .)


state 186

    (277) asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .

    DEF             reduce using rule 277 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    VARIABLE        reduce using rule 277 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    PRINTLN         reduce using rule 277 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    PRINT           reduce using rule 277 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    READLINE        reduce using rule 277 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    VAR             reduce using rule 277 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    VAL             reduce using rule 277 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    WHILE           reduce using rule 277 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    FOR             reduce using rule 277 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    IF              reduce using rule 277 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    STRING          reduce using rule 277 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    $end            reduce using rule 277 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    LLAVE_D         reduce using rule 277 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    INT             reduce using rule 277 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    LONG            reduce using rule 277 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    FLOAT           reduce using rule 277 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    DOUBLE          reduce using rule 277 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    RETURN          reduce using rule 277 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    CASE            reduce using rule 277 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)


state 187

    (64) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL VARIABLE
    (306) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL longvalues

    IGUAL           shift and go to state 322


state 188

    (300) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS . IGUAL intvalues

    IGUAL           shift and go to state 323


state 189

    (66) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL VARIABLE
    (313) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL floatvalues

    IGUAL           shift and go to state 324


state 190

    (68) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL VARIABLE
    (320) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL doublevalues

    IGUAL           shift and go to state 325


state 191

    (71) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL STRING
    (74) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 326


state 192

    (77) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL CHAR
    (80) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 327


state 193

    (83) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL booleanos
    (86) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 328


state 194

    (161) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (269) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    CORCHETE_I      shift and go to state 329


state 195

    (279) dectupla -> PAR_I . STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
    (280) dectupla -> PAR_I . STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
    (281) dectupla -> PAR_I . STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
    (282) dectupla -> PAR_I . STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D
    (283) dectupla -> PAR_I . FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
    (284) dectupla -> PAR_I . FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
    (285) dectupla -> PAR_I . FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
    (286) dectupla -> PAR_I . FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D
    (287) dectupla -> PAR_I . DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
    (288) dectupla -> PAR_I . DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
    (289) dectupla -> PAR_I . DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
    (290) dectupla -> PAR_I . DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D
    (291) dectupla -> PAR_I . LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
    (292) dectupla -> PAR_I . LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
    (293) dectupla -> PAR_I . LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
    (294) dectupla -> PAR_I . LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D
    (295) dectupla -> PAR_I . INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
    (296) dectupla -> PAR_I . INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
    (297) dectupla -> PAR_I . INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
    (298) dectupla -> PAR_I . INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    STRINGCLASS     shift and go to state 330
    FLOATCLASS      shift and go to state 334
    DOUBLECLASS     shift and go to state 333
    LONGCLASS       shift and go to state 332
    INTCLASS        shift and go to state 331


state 196

    (50) asignacion -> VAL VARIABLE IGUAL VARIABLE .
    (259) aritmetica -> VARIABLE . aritmeticos numeros
    (261) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (155) castingcall -> VARIABLE . PUNTO castingfun
    (145) funcall -> VARIABLE . varparen
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD
    (146) varparen -> . PAR_I valores PAR_D
    (147) varparen -> . PAR_I PAR_D
    (148) varparen -> . varparen PAR_I valores PAR_D
    (149) varparen -> . varparen PAR_I PAR_D

    DEF             reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VARIABLE        reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PRINTLN         reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PRINT           reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    READLINE        reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VAR             reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VAL             reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    WHILE           reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    FOR             reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    IF              reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    STRING          reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    $end            reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    INT             reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    LONG            reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    FLOAT           reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    DOUBLE          reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    RETURN          reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    CASE            reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PUNTO           shift and go to state 317
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234
    PAR_I           shift and go to state 40

    aritmeticos                    shift and go to state 225
    varparen                       shift and go to state 38

state 197

    (52) asignacion -> VAL VARIABLE IGUAL aritmetica .
    (262) aritmetica -> aritmetica . aritmeticos numeros
    (263) aritmetica -> aritmetica . aritmeticos VARIABLE
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD

    DEF             reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VAR             reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    STRING          reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    $end            reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234

    aritmeticos                    shift and go to state 242

state 198

    (54) asignacion -> VAL VARIABLE IGUAL returnfun .

    DEF             reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    VARIABLE        reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    PRINTLN         reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    PRINT           reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    READLINE        reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    VAR             reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    VAL             reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    WHILE           reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    FOR             reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    IF              reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    STRING          reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    $end            reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    LLAVE_D         reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    INT             reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    LONG            reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    FLOAT           reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    DOUBLE          reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    RETURN          reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    CASE            reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)


state 199

    (173) asignacion -> VAL VARIABLE IGUAL tuple .

    DEF             reduce using rule 173 (asignacion -> VAL VARIABLE IGUAL tuple .)
    VARIABLE        reduce using rule 173 (asignacion -> VAL VARIABLE IGUAL tuple .)
    PRINTLN         reduce using rule 173 (asignacion -> VAL VARIABLE IGUAL tuple .)
    PRINT           reduce using rule 173 (asignacion -> VAL VARIABLE IGUAL tuple .)
    READLINE        reduce using rule 173 (asignacion -> VAL VARIABLE IGUAL tuple .)
    VAR             reduce using rule 173 (asignacion -> VAL VARIABLE IGUAL tuple .)
    VAL             reduce using rule 173 (asignacion -> VAL VARIABLE IGUAL tuple .)
    WHILE           reduce using rule 173 (asignacion -> VAL VARIABLE IGUAL tuple .)
    FOR             reduce using rule 173 (asignacion -> VAL VARIABLE IGUAL tuple .)
    IF              reduce using rule 173 (asignacion -> VAL VARIABLE IGUAL tuple .)
    STRING          reduce using rule 173 (asignacion -> VAL VARIABLE IGUAL tuple .)
    $end            reduce using rule 173 (asignacion -> VAL VARIABLE IGUAL tuple .)
    LLAVE_D         reduce using rule 173 (asignacion -> VAL VARIABLE IGUAL tuple .)
    INT             reduce using rule 173 (asignacion -> VAL VARIABLE IGUAL tuple .)
    LONG            reduce using rule 173 (asignacion -> VAL VARIABLE IGUAL tuple .)
    FLOAT           reduce using rule 173 (asignacion -> VAL VARIABLE IGUAL tuple .)
    DOUBLE          reduce using rule 173 (asignacion -> VAL VARIABLE IGUAL tuple .)
    RETURN          reduce using rule 173 (asignacion -> VAL VARIABLE IGUAL tuple .)
    CASE            reduce using rule 173 (asignacion -> VAL VARIABLE IGUAL tuple .)


state 200

    (307) asignacionLong -> VAL VARIABLE IGUAL longvalues .
    (317) floatvalues -> longvalues .

  ! reduce/reduce conflict for DEF resolved using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VAR resolved using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for IF resolved using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for $end resolved using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for INT resolved using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    DEF             reduce using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    VARIABLE        reduce using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    PRINTLN         reduce using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    PRINT           reduce using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    READLINE        reduce using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    VAR             reduce using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    VAL             reduce using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    WHILE           reduce using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    FOR             reduce using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    IF              reduce using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    STRING          reduce using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    $end            reduce using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    LLAVE_D         reduce using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    INT             reduce using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    LONG            reduce using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    FLOAT           reduce using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    DOUBLE          reduce using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    RETURN          reduce using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    CASE            reduce using rule 307 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)

  ! DEF             [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! VARIABLE        [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! PRINTLN         [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! PRINT           [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! READLINE        [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! VAR             [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! VAL             [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! WHILE           [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! FOR             [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! IF              [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! STRING          [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! $end            [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! LLAVE_D         [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! INT             [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! LONG            [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! FLOAT           [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! DOUBLE          [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! RETURN          [ reduce using rule 317 (floatvalues -> longvalues .) ]
  ! CASE            [ reduce using rule 317 (floatvalues -> longvalues .) ]


state 201

    (301) asignacionInt -> VAL VARIABLE IGUAL intvalues .
    (310) longvalues -> intvalues .

  ! reduce/reduce conflict for DEF resolved using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VAR resolved using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for IF resolved using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for $end resolved using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for INT resolved using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    DEF             reduce using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    VARIABLE        reduce using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    PRINTLN         reduce using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    PRINT           reduce using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    READLINE        reduce using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    VAR             reduce using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    VAL             reduce using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    WHILE           reduce using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    FOR             reduce using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    IF              reduce using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    STRING          reduce using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    $end            reduce using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    LLAVE_D         reduce using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    INT             reduce using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    LONG            reduce using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    FLOAT           reduce using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    DOUBLE          reduce using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    RETURN          reduce using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    CASE            reduce using rule 301 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)

  ! DEF             [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! VARIABLE        [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! PRINTLN         [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! PRINT           [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! READLINE        [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! VAR             [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! VAL             [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! WHILE           [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! FOR             [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! IF              [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! STRING          [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! $end            [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! LLAVE_D         [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! INT             [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! LONG            [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! FLOAT           [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! DOUBLE          [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! RETURN          [ reduce using rule 310 (longvalues -> intvalues .) ]
  ! CASE            [ reduce using rule 310 (longvalues -> intvalues .) ]


state 202

    (314) asignacionFloat -> VAL VARIABLE IGUAL floatvalues .
    (324) doublevalues -> floatvalues .

  ! reduce/reduce conflict for DEF resolved using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VAR resolved using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for IF resolved using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for $end resolved using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for INT resolved using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    DEF             reduce using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    VARIABLE        reduce using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    PRINTLN         reduce using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    PRINT           reduce using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    READLINE        reduce using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    VAR             reduce using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    VAL             reduce using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    WHILE           reduce using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    FOR             reduce using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    IF              reduce using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    STRING          reduce using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    $end            reduce using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    LLAVE_D         reduce using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    INT             reduce using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    LONG            reduce using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    FLOAT           reduce using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    DOUBLE          reduce using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    RETURN          reduce using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    CASE            reduce using rule 314 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)

  ! DEF             [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! VARIABLE        [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! PRINTLN         [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! PRINT           [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! READLINE        [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! VAR             [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! VAL             [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! WHILE           [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! FOR             [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! IF              [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! STRING          [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! $end            [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! LLAVE_D         [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! INT             [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! LONG            [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! FLOAT           [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! DOUBLE          [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! RETURN          [ reduce using rule 324 (doublevalues -> floatvalues .) ]
  ! CASE            [ reduce using rule 324 (doublevalues -> floatvalues .) ]


state 203

    (321) asignacionDouble -> VAL VARIABLE IGUAL doublevalues .

    DEF             reduce using rule 321 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    VARIABLE        reduce using rule 321 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    PRINTLN         reduce using rule 321 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    PRINT           reduce using rule 321 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    READLINE        reduce using rule 321 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    VAR             reduce using rule 321 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    VAL             reduce using rule 321 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    WHILE           reduce using rule 321 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    FOR             reduce using rule 321 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    IF              reduce using rule 321 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    STRING          reduce using rule 321 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    $end            reduce using rule 321 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    LLAVE_D         reduce using rule 321 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    INT             reduce using rule 321 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    LONG            reduce using rule 321 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    FLOAT           reduce using rule 321 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    DOUBLE          reduce using rule 321 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    RETURN          reduce using rule 321 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    CASE            reduce using rule 321 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)


state 204

    (72) asignacionString -> VAL VARIABLE IGUAL STRING .
    (327) stringCastLong -> STRING . PUNTO TO_LONG
    (326) stringCastInt -> STRING . PUNTO TO_INT
    (328) stringCastFloat -> STRING . PUNTO TO_FLOAT
    (329) stringCastDouble -> STRING . PUNTO TO_DOUBLE
    (275) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    DEF             reduce using rule 72 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VARIABLE        reduce using rule 72 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PRINTLN         reduce using rule 72 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PRINT           reduce using rule 72 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    READLINE        reduce using rule 72 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VAR             reduce using rule 72 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VAL             reduce using rule 72 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    WHILE           reduce using rule 72 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    FOR             reduce using rule 72 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    IF              reduce using rule 72 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    STRING          reduce using rule 72 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    $end            reduce using rule 72 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    LLAVE_D         reduce using rule 72 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    INT             reduce using rule 72 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    LONG            reduce using rule 72 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    FLOAT           reduce using rule 72 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    DOUBLE          reduce using rule 72 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    RETURN          reduce using rule 72 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    CASE            reduce using rule 72 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PUNTO           shift and go to state 318


state 205

    (78) asignacionChar -> VAL VARIABLE IGUAL CHAR .

    DEF             reduce using rule 78 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VARIABLE        reduce using rule 78 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    PRINTLN         reduce using rule 78 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    PRINT           reduce using rule 78 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    READLINE        reduce using rule 78 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VAR             reduce using rule 78 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VAL             reduce using rule 78 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    WHILE           reduce using rule 78 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    FOR             reduce using rule 78 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    IF              reduce using rule 78 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    STRING          reduce using rule 78 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    $end            reduce using rule 78 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    LLAVE_D         reduce using rule 78 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    INT             reduce using rule 78 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    LONG            reduce using rule 78 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    FLOAT           reduce using rule 78 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    DOUBLE          reduce using rule 78 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    RETURN          reduce using rule 78 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    CASE            reduce using rule 78 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)


state 206

    (84) asignacionBoolean -> VAL VARIABLE IGUAL booleanos .

    DEF             reduce using rule 84 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 84 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    PRINTLN         reduce using rule 84 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 84 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    READLINE        reduce using rule 84 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VAR             reduce using rule 84 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VAL             reduce using rule 84 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 84 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    FOR             reduce using rule 84 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    IF              reduce using rule 84 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    STRING          reduce using rule 84 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    $end            reduce using rule 84 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    LLAVE_D         reduce using rule 84 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    INT             reduce using rule 84 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    LONG            reduce using rule 84 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    FLOAT           reduce using rule 84 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    DOUBLE          reduce using rule 84 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    RETURN          reduce using rule 84 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 84 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)


state 207

    (162) array -> VAL VARIABLE IGUAL ARRAYCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 335


state 208

    (166) list -> VAL VARIABLE IGUAL LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 336


state 209

    (278) asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .

    DEF             reduce using rule 278 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    VARIABLE        reduce using rule 278 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    PRINTLN         reduce using rule 278 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    PRINT           reduce using rule 278 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    READLINE        reduce using rule 278 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    VAR             reduce using rule 278 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    VAL             reduce using rule 278 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    WHILE           reduce using rule 278 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    FOR             reduce using rule 278 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    IF              reduce using rule 278 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    STRING          reduce using rule 278 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    $end            reduce using rule 278 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    LLAVE_D         reduce using rule 278 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    INT             reduce using rule 278 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    LONG            reduce using rule 278 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    FLOAT           reduce using rule 278 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    DOUBLE          reduce using rule 278 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    RETURN          reduce using rule 278 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    CASE            reduce using rule 278 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)


state 210

    (65) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL VARIABLE
    (308) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL longvalues

    IGUAL           shift and go to state 337


state 211

    (302) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS . IGUAL intvalues

    IGUAL           shift and go to state 338


state 212

    (67) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL VARIABLE
    (315) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL floatvalues

    IGUAL           shift and go to state 339


state 213

    (69) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL VARIABLE
    (322) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL doublevalues

    IGUAL           shift and go to state 340


state 214

    (73) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL STRING
    (75) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 341


state 215

    (79) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL CHAR
    (81) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 342


state 216

    (85) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL booleanos
    (87) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 343


state 217

    (163) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 344


state 218

    (167) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS . CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS . CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    CORCHETE_I      shift and go to state 345


state 219

    (174) while -> WHILE PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 346


state 220

    (227) condicional -> valorC logicos . condicional
    (227) condicional -> . valorC logicos condicional
    (228) condicional -> . valorC
    (229) valorC -> . VARIABLE
    (230) valorC -> . booleanos
    (231) valorC -> . relacional
    (232) valorC -> . NOT VARIABLE
    (233) valorC -> . NOT booleanos
    (234) valorC -> . NOT relacional
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (238) relacional -> . numeros comparacion numeros
    (239) relacional -> . aritmetica comparacion aritmetica
    (240) relacional -> . aritmetica comparacion numeros
    (241) relacional -> . numeros comparacion aritmetica
    (242) relacional -> . booleanos comparacion booleanos
    (243) relacional -> . STRING comparacion STRING
    (244) relacional -> . CHAR comparacion CHAR
    (245) relacional -> . VARIABLE comparacion numeros
    (246) relacional -> . numeros comparacion VARIABLE
    (247) relacional -> . VARIABLE comparacion booleanos
    (248) relacional -> . booleanos comparacion VARIABLE
    (249) relacional -> . VARIABLE comparacion STRING
    (250) relacional -> . STRING comparacion VARIABLE
    (251) relacional -> . VARIABLE comparacion CHAR
    (252) relacional -> . CHAR comparacion VARIABLE
    (253) relacional -> . VARIABLE comparacion VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 101
    NOT             shift and go to state 104
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79
    STRING          shift and go to state 107
    CHAR            shift and go to state 108
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    valorC                         shift and go to state 100
    condicional                    shift and go to state 347
    booleanos                      shift and go to state 102
    relacional                     shift and go to state 103
    startsWith                     shift and go to state 80
    numeros                        shift and go to state 105
    aritmetica                     shift and go to state 106

state 221

    (235) logicos -> AND .

    VARIABLE        reduce using rule 235 (logicos -> AND .)
    NOT             reduce using rule 235 (logicos -> AND .)
    TRUE            reduce using rule 235 (logicos -> AND .)
    FLASE           reduce using rule 235 (logicos -> AND .)
    STRING          reduce using rule 235 (logicos -> AND .)
    CHAR            reduce using rule 235 (logicos -> AND .)
    INT             reduce using rule 235 (logicos -> AND .)
    LONG            reduce using rule 235 (logicos -> AND .)
    FLOAT           reduce using rule 235 (logicos -> AND .)
    DOUBLE          reduce using rule 235 (logicos -> AND .)


state 222

    (236) logicos -> OR .

    VARIABLE        reduce using rule 236 (logicos -> OR .)
    NOT             reduce using rule 236 (logicos -> OR .)
    TRUE            reduce using rule 236 (logicos -> OR .)
    FLASE           reduce using rule 236 (logicos -> OR .)
    STRING          reduce using rule 236 (logicos -> OR .)
    CHAR            reduce using rule 236 (logicos -> OR .)
    INT             reduce using rule 236 (logicos -> OR .)
    LONG            reduce using rule 236 (logicos -> OR .)
    FLOAT           reduce using rule 236 (logicos -> OR .)
    DOUBLE          reduce using rule 236 (logicos -> OR .)


state 223

    (237) logicos -> NOT .

    VARIABLE        reduce using rule 237 (logicos -> NOT .)
    NOT             reduce using rule 237 (logicos -> NOT .)
    TRUE            reduce using rule 237 (logicos -> NOT .)
    FLASE           reduce using rule 237 (logicos -> NOT .)
    STRING          reduce using rule 237 (logicos -> NOT .)
    CHAR            reduce using rule 237 (logicos -> NOT .)
    INT             reduce using rule 237 (logicos -> NOT .)
    LONG            reduce using rule 237 (logicos -> NOT .)
    FLOAT           reduce using rule 237 (logicos -> NOT .)
    DOUBLE          reduce using rule 237 (logicos -> NOT .)


state 224

    (245) relacional -> VARIABLE comparacion . numeros
    (247) relacional -> VARIABLE comparacion . booleanos
    (249) relacional -> VARIABLE comparacion . STRING
    (251) relacional -> VARIABLE comparacion . CHAR
    (253) relacional -> VARIABLE comparacion . VARIABLE
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 351
    CHAR            shift and go to state 352
    VARIABLE        shift and go to state 348
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79

    numeros                        shift and go to state 349
    booleanos                      shift and go to state 350
    startsWith                     shift and go to state 80

state 225

    (259) aritmetica -> VARIABLE aritmeticos . numeros
    (261) aritmetica -> VARIABLE aritmeticos . VARIABLE
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE

    VARIABLE        shift and go to state 353
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    numeros                        shift and go to state 354

state 226

    (254) comparacion -> IGUAL_COMPARACION .

    STRING          reduce using rule 254 (comparacion -> IGUAL_COMPARACION .)
    CHAR            reduce using rule 254 (comparacion -> IGUAL_COMPARACION .)
    VARIABLE        reduce using rule 254 (comparacion -> IGUAL_COMPARACION .)
    INT             reduce using rule 254 (comparacion -> IGUAL_COMPARACION .)
    LONG            reduce using rule 254 (comparacion -> IGUAL_COMPARACION .)
    FLOAT           reduce using rule 254 (comparacion -> IGUAL_COMPARACION .)
    DOUBLE          reduce using rule 254 (comparacion -> IGUAL_COMPARACION .)
    TRUE            reduce using rule 254 (comparacion -> IGUAL_COMPARACION .)
    FLASE           reduce using rule 254 (comparacion -> IGUAL_COMPARACION .)


state 227

    (255) comparacion -> DIFERENTE .

    STRING          reduce using rule 255 (comparacion -> DIFERENTE .)
    CHAR            reduce using rule 255 (comparacion -> DIFERENTE .)
    VARIABLE        reduce using rule 255 (comparacion -> DIFERENTE .)
    INT             reduce using rule 255 (comparacion -> DIFERENTE .)
    LONG            reduce using rule 255 (comparacion -> DIFERENTE .)
    FLOAT           reduce using rule 255 (comparacion -> DIFERENTE .)
    DOUBLE          reduce using rule 255 (comparacion -> DIFERENTE .)
    TRUE            reduce using rule 255 (comparacion -> DIFERENTE .)
    FLASE           reduce using rule 255 (comparacion -> DIFERENTE .)


state 228

    (256) comparacion -> MAYOR .

    STRING          reduce using rule 256 (comparacion -> MAYOR .)
    CHAR            reduce using rule 256 (comparacion -> MAYOR .)
    VARIABLE        reduce using rule 256 (comparacion -> MAYOR .)
    INT             reduce using rule 256 (comparacion -> MAYOR .)
    LONG            reduce using rule 256 (comparacion -> MAYOR .)
    FLOAT           reduce using rule 256 (comparacion -> MAYOR .)
    DOUBLE          reduce using rule 256 (comparacion -> MAYOR .)
    TRUE            reduce using rule 256 (comparacion -> MAYOR .)
    FLASE           reduce using rule 256 (comparacion -> MAYOR .)


state 229

    (257) comparacion -> MENOR .

    STRING          reduce using rule 257 (comparacion -> MENOR .)
    CHAR            reduce using rule 257 (comparacion -> MENOR .)
    VARIABLE        reduce using rule 257 (comparacion -> MENOR .)
    INT             reduce using rule 257 (comparacion -> MENOR .)
    LONG            reduce using rule 257 (comparacion -> MENOR .)
    FLOAT           reduce using rule 257 (comparacion -> MENOR .)
    DOUBLE          reduce using rule 257 (comparacion -> MENOR .)
    TRUE            reduce using rule 257 (comparacion -> MENOR .)
    FLASE           reduce using rule 257 (comparacion -> MENOR .)


state 230

    (264) aritmeticos -> MENOS .

    VARIABLE        reduce using rule 264 (aritmeticos -> MENOS .)
    INT             reduce using rule 264 (aritmeticos -> MENOS .)
    LONG            reduce using rule 264 (aritmeticos -> MENOS .)
    FLOAT           reduce using rule 264 (aritmeticos -> MENOS .)
    DOUBLE          reduce using rule 264 (aritmeticos -> MENOS .)


state 231

    (265) aritmeticos -> MAS .

    VARIABLE        reduce using rule 265 (aritmeticos -> MAS .)
    INT             reduce using rule 265 (aritmeticos -> MAS .)
    LONG            reduce using rule 265 (aritmeticos -> MAS .)
    FLOAT           reduce using rule 265 (aritmeticos -> MAS .)
    DOUBLE          reduce using rule 265 (aritmeticos -> MAS .)


state 232

    (266) aritmeticos -> MULTIPLICACION .

    VARIABLE        reduce using rule 266 (aritmeticos -> MULTIPLICACION .)
    INT             reduce using rule 266 (aritmeticos -> MULTIPLICACION .)
    LONG            reduce using rule 266 (aritmeticos -> MULTIPLICACION .)
    FLOAT           reduce using rule 266 (aritmeticos -> MULTIPLICACION .)
    DOUBLE          reduce using rule 266 (aritmeticos -> MULTIPLICACION .)


state 233

    (267) aritmeticos -> DIVISION .

    VARIABLE        reduce using rule 267 (aritmeticos -> DIVISION .)
    INT             reduce using rule 267 (aritmeticos -> DIVISION .)
    LONG            reduce using rule 267 (aritmeticos -> DIVISION .)
    FLOAT           reduce using rule 267 (aritmeticos -> DIVISION .)
    DOUBLE          reduce using rule 267 (aritmeticos -> DIVISION .)


state 234

    (268) aritmeticos -> MOD .

    VARIABLE        reduce using rule 268 (aritmeticos -> MOD .)
    INT             reduce using rule 268 (aritmeticos -> MOD .)
    LONG            reduce using rule 268 (aritmeticos -> MOD .)
    FLOAT           reduce using rule 268 (aritmeticos -> MOD .)
    DOUBLE          reduce using rule 268 (aritmeticos -> MOD .)


state 235

    (242) relacional -> booleanos comparacion . booleanos
    (248) relacional -> booleanos comparacion . VARIABLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    VARIABLE        shift and go to state 356
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79
    STRING          shift and go to state 34

    booleanos                      shift and go to state 355
    startsWith                     shift and go to state 80

state 236

    (232) valorC -> NOT VARIABLE .
    (245) relacional -> VARIABLE . comparacion numeros
    (247) relacional -> VARIABLE . comparacion booleanos
    (249) relacional -> VARIABLE . comparacion STRING
    (251) relacional -> VARIABLE . comparacion CHAR
    (253) relacional -> VARIABLE . comparacion VARIABLE
    (259) aritmetica -> VARIABLE . aritmeticos numeros
    (261) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (254) comparacion -> . IGUAL_COMPARACION
    (255) comparacion -> . DIFERENTE
    (256) comparacion -> . MAYOR
    (257) comparacion -> . MENOR
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD

    AND             reduce using rule 232 (valorC -> NOT VARIABLE .)
    OR              reduce using rule 232 (valorC -> NOT VARIABLE .)
    NOT             reduce using rule 232 (valorC -> NOT VARIABLE .)
    PAR_D           reduce using rule 232 (valorC -> NOT VARIABLE .)
    IGUAL_COMPARACION shift and go to state 226
    DIFERENTE       shift and go to state 227
    MAYOR           shift and go to state 228
    MENOR           shift and go to state 229
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234

    comparacion                    shift and go to state 224
    aritmeticos                    shift and go to state 225

state 237

    (233) valorC -> NOT booleanos .
    (242) relacional -> booleanos . comparacion booleanos
    (248) relacional -> booleanos . comparacion VARIABLE
    (254) comparacion -> . IGUAL_COMPARACION
    (255) comparacion -> . DIFERENTE
    (256) comparacion -> . MAYOR
    (257) comparacion -> . MENOR

    AND             reduce using rule 233 (valorC -> NOT booleanos .)
    OR              reduce using rule 233 (valorC -> NOT booleanos .)
    NOT             reduce using rule 233 (valorC -> NOT booleanos .)
    PAR_D           reduce using rule 233 (valorC -> NOT booleanos .)
    IGUAL_COMPARACION shift and go to state 226
    DIFERENTE       shift and go to state 227
    MAYOR           shift and go to state 228
    MENOR           shift and go to state 229

    comparacion                    shift and go to state 235

state 238

    (234) valorC -> NOT relacional .

    AND             reduce using rule 234 (valorC -> NOT relacional .)
    OR              reduce using rule 234 (valorC -> NOT relacional .)
    NOT             reduce using rule 234 (valorC -> NOT relacional .)
    PAR_D           reduce using rule 234 (valorC -> NOT relacional .)


state 239

    (238) relacional -> numeros comparacion . numeros
    (241) relacional -> numeros comparacion . aritmetica
    (246) relacional -> numeros comparacion . VARIABLE
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 359
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    numeros                        shift and go to state 357
    aritmetica                     shift and go to state 358

state 240

    (258) aritmetica -> numeros aritmeticos . numeros
    (260) aritmetica -> numeros aritmeticos . VARIABLE
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE

    VARIABLE        shift and go to state 361
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    numeros                        shift and go to state 360

state 241

    (239) relacional -> aritmetica comparacion . aritmetica
    (240) relacional -> aritmetica comparacion . numeros
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE

    VARIABLE        shift and go to state 364
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    aritmetica                     shift and go to state 362
    numeros                        shift and go to state 363

state 242

    (262) aritmetica -> aritmetica aritmeticos . numeros
    (263) aritmetica -> aritmetica aritmeticos . VARIABLE
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE

    VARIABLE        shift and go to state 366
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    numeros                        shift and go to state 365

state 243

    (243) relacional -> STRING comparacion . STRING
    (250) relacional -> STRING comparacion . VARIABLE

    STRING          shift and go to state 367
    VARIABLE        shift and go to state 368


state 244

    (244) relacional -> CHAR comparacion . CHAR
    (252) relacional -> CHAR comparacion . VARIABLE

    CHAR            shift and go to state 369
    VARIABLE        shift and go to state 370


state 245

    (175) for -> FOR PAR_I VAR VARIABLE . ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> FOR PAR_I VAR VARIABLE . ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> FOR PAR_I VAR VARIABLE . ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    ITERATOR        shift and go to state 371


state 246

    (176) for -> FOR PAR_I VARIABLE ITERATOR . VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> FOR PAR_I VARIABLE ITERATOR . INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> FOR PAR_I VARIABLE ITERATOR . INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 372
    INT             shift and go to state 373


state 247

    (220) if -> IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 374


state 248

    (275) startsWith -> STRING PUNTO STARTSWITH PAR_I . STRING PAR_D
    (276) startsWith -> STRING PUNTO STARTSWITH PAR_I . STRING COMA INT PAR_D

    STRING          shift and go to state 375


state 249

    (1) inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D .

    $end            reduce using rule 1 (inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D .)


state 250

    (148) varparen -> varparen PAR_I valores PAR_D .

    PAR_I           reduce using rule 148 (varparen -> varparen PAR_I valores PAR_D .)
    $end            reduce using rule 148 (varparen -> varparen PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 148 (varparen -> varparen PAR_I valores PAR_D .)
    VAR             reduce using rule 148 (varparen -> varparen PAR_I valores PAR_D .)
    VAL             reduce using rule 148 (varparen -> varparen PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 148 (varparen -> varparen PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 148 (varparen -> varparen PAR_I valores PAR_D .)
    PRINT           reduce using rule 148 (varparen -> varparen PAR_I valores PAR_D .)
    READLINE        reduce using rule 148 (varparen -> varparen PAR_I valores PAR_D .)
    WHILE           reduce using rule 148 (varparen -> varparen PAR_I valores PAR_D .)
    FOR             reduce using rule 148 (varparen -> varparen PAR_I valores PAR_D .)
    IF              reduce using rule 148 (varparen -> varparen PAR_I valores PAR_D .)
    STRING          reduce using rule 148 (varparen -> varparen PAR_I valores PAR_D .)
    INT             reduce using rule 148 (varparen -> varparen PAR_I valores PAR_D .)
    LONG            reduce using rule 148 (varparen -> varparen PAR_I valores PAR_D .)
    FLOAT           reduce using rule 148 (varparen -> varparen PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 148 (varparen -> varparen PAR_I valores PAR_D .)
    RETURN          reduce using rule 148 (varparen -> varparen PAR_I valores PAR_D .)
    PUNTO           reduce using rule 148 (varparen -> varparen PAR_I valores PAR_D .)
    DEF             reduce using rule 148 (varparen -> varparen PAR_I valores PAR_D .)
    CASE            reduce using rule 148 (varparen -> varparen PAR_I valores PAR_D .)


state 251

    (181) match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .

    DEF             reduce using rule 181 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VARIABLE        reduce using rule 181 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    PRINTLN         reduce using rule 181 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    PRINT           reduce using rule 181 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    READLINE        reduce using rule 181 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VAR             reduce using rule 181 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VAL             reduce using rule 181 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    WHILE           reduce using rule 181 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    FOR             reduce using rule 181 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    IF              reduce using rule 181 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    STRING          reduce using rule 181 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    $end            reduce using rule 181 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    LLAVE_D         reduce using rule 181 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    INT             reduce using rule 181 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    LONG            reduce using rule 181 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    FLOAT           reduce using rule 181 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    DOUBLE          reduce using rule 181 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    RETURN          reduce using rule 181 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)


state 252

    (191) casesInt -> caseInt casesInt .

    LLAVE_D         reduce using rule 191 (casesInt -> caseInt casesInt .)


state 253

    (192) casesInt -> caseInt defcase .

    LLAVE_D         reduce using rule 192 (casesInt -> caseInt defcase .)


state 254

    (217) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (189) caseInt -> CASE . INT FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 376
    INT             shift and go to state 273


state 255

    (195) casesLgn -> caseLgn casesLgn .

    LLAVE_D         reduce using rule 195 (casesLgn -> caseLgn casesLgn .)


state 256

    (196) casesLgn -> caseLgn defcase .

    LLAVE_D         reduce using rule 196 (casesLgn -> caseLgn defcase .)


state 257

    (217) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (193) caseLgn -> CASE . LONG FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 376
    LONG            shift and go to state 274


state 258

    (199) casesFlt -> caseFlt casesFlt .

    LLAVE_D         reduce using rule 199 (casesFlt -> caseFlt casesFlt .)


state 259

    (200) casesFlt -> caseFlt defcase .

    LLAVE_D         reduce using rule 200 (casesFlt -> caseFlt defcase .)


state 260

    (217) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (197) caseFlt -> CASE . FLOAT FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 376
    FLOAT           shift and go to state 275


state 261

    (203) casesDob -> caseDob casesDob .

    LLAVE_D         reduce using rule 203 (casesDob -> caseDob casesDob .)


state 262

    (204) casesDob -> caseDob defcase .

    LLAVE_D         reduce using rule 204 (casesDob -> caseDob defcase .)


state 263

    (217) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (201) caseDob -> CASE . DOUBLE FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 376
    DOUBLE          shift and go to state 276


state 264

    (207) casesStr -> caseStr casesStr .

    LLAVE_D         reduce using rule 207 (casesStr -> caseStr casesStr .)


state 265

    (208) casesStr -> caseStr defcase .

    LLAVE_D         reduce using rule 208 (casesStr -> caseStr defcase .)


state 266

    (217) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (205) caseStr -> CASE . STRING FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 376
    STRING          shift and go to state 377


state 267

    (211) casesChar -> caseChar casesChar .

    LLAVE_D         reduce using rule 211 (casesChar -> caseChar casesChar .)


state 268

    (212) casesChar -> caseChar defcase .

    LLAVE_D         reduce using rule 212 (casesChar -> caseChar defcase .)


state 269

    (217) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (209) caseChar -> CASE . CHAR FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 376
    CHAR            shift and go to state 278


state 270

    (215) casesBool -> caseBool casesBool .

    LLAVE_D         reduce using rule 215 (casesBool -> caseBool casesBool .)


state 271

    (216) casesBool -> caseBool defcase .

    LLAVE_D         reduce using rule 216 (casesBool -> caseBool defcase .)


state 272

    (217) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (213) caseBool -> CASE . booleanos FUNCION_FLECHA codeBlock
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    SUBGUION        shift and go to state 376
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79
    STRING          shift and go to state 34

    booleanos                      shift and go to state 279
    startsWith                     shift and go to state 80

state 273

    (189) caseInt -> CASE INT . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 378


state 274

    (193) caseLgn -> CASE LONG . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 379


state 275

    (197) caseFlt -> CASE FLOAT . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 380


state 276

    (201) caseDob -> CASE DOUBLE . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 381


state 277

    (205) caseStr -> CASE STRING . FUNCION_FLECHA codeBlock
    (275) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    FUNCION_FLECHA  shift and go to state 382
    PUNTO           shift and go to state 62


state 278

    (209) caseChar -> CASE CHAR . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 383


state 279

    (213) caseBool -> CASE booleanos . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 384


state 280

    (170) valores -> valor COMA valores .

    PAR_D           reduce using rule 170 (valores -> valor COMA valores .)


state 281

    (106) valor -> VARIABLE PAR_I VARIABLE . PAR_D

    PAR_D           shift and go to state 385


state 282

    (107) valor -> VARIABLE PAR_I INT . PAR_D

    PAR_D           shift and go to state 386


state 283

    (4) io -> VARIABLE PUNTO VARIABLE PUNTO . VARIABLE PUNTO READLINE

    VARIABLE        shift and go to state 387


state 284

    (223) elseif -> ELSE IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D
    (224) elseif -> ELSE IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D elseif

    PAR_D           shift and go to state 388


state 285

    (225) else -> ELSE LLAVE_I contenido LLAVE_D .

    ELSE            reduce using rule 225 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 225 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 225 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 225 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 225 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 225 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 225 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 225 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 225 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 225 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 225 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 225 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 225 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 225 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 225 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 225 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 225 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 225 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 225 (else -> ELSE LLAVE_I contenido LLAVE_D .)


state 286

    (33) contenido -> asignacion contenido .

    LLAVE_D         reduce using rule 33 (contenido -> asignacion contenido .)
    RETURN          reduce using rule 33 (contenido -> asignacion contenido .)


state 287

    (34) contenido -> reasignacion contenido .

    LLAVE_D         reduce using rule 34 (contenido -> reasignacion contenido .)
    RETURN          reduce using rule 34 (contenido -> reasignacion contenido .)


state 288

    (35) contenido -> funcall contenido .

    LLAVE_D         reduce using rule 35 (contenido -> funcall contenido .)
    RETURN          reduce using rule 35 (contenido -> funcall contenido .)


state 289

    (36) contenido -> impresion contenido .

    LLAVE_D         reduce using rule 36 (contenido -> impresion contenido .)
    RETURN          reduce using rule 36 (contenido -> impresion contenido .)


state 290

    (37) contenido -> entrada contenido .

    LLAVE_D         reduce using rule 37 (contenido -> entrada contenido .)
    RETURN          reduce using rule 37 (contenido -> entrada contenido .)


state 291

    (38) contenido -> while contenido .

    LLAVE_D         reduce using rule 38 (contenido -> while contenido .)
    RETURN          reduce using rule 38 (contenido -> while contenido .)


state 292

    (39) contenido -> for contenido .

    LLAVE_D         reduce using rule 39 (contenido -> for contenido .)
    RETURN          reduce using rule 39 (contenido -> for contenido .)


state 293

    (41) contenido -> match contenido .

    LLAVE_D         reduce using rule 41 (contenido -> match contenido .)
    RETURN          reduce using rule 41 (contenido -> match contenido .)


state 294

    (40) contenido -> if contenido .

    LLAVE_D         reduce using rule 40 (contenido -> if contenido .)
    RETURN          reduce using rule 40 (contenido -> if contenido .)


state 295

    (42) contenido -> aritmetica contenido .

    LLAVE_D         reduce using rule 42 (contenido -> aritmetica contenido .)
    RETURN          reduce using rule 42 (contenido -> aritmetica contenido .)


state 296

    (43) contenido -> startsWith contenido .

    LLAVE_D         reduce using rule 43 (contenido -> startsWith contenido .)
    RETURN          reduce using rule 43 (contenido -> startsWith contenido .)


state 297

    (88) reasignacion -> VARIABLE IGUAL . valor
    (89) reasignacion -> VARIABLE IGUAL . returnfun
    (90) reasignacion -> VARIABLE IGUAL . aritmetica
    (101) valor -> . STRING
    (102) valor -> . CHAR
    (103) valor -> . VARIABLE
    (104) valor -> . numeros
    (105) valor -> . booleanos
    (106) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (107) valor -> . VARIABLE PAR_I INT PAR_D
    (150) returnfun -> . returnCastable
    (151) returnfun -> . castingcall
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (152) returnCastable -> . entrada
    (153) returnCastable -> . funcall
    (154) castingcall -> . returnCastable PUNTO castingfun
    (155) castingcall -> . VARIABLE PUNTO castingfun
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (145) funcall -> . VARIABLE varparen

    STRING          shift and go to state 69
    CHAR            shift and go to state 70
    VARIABLE        shift and go to state 389
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79
    READLINE        shift and go to state 19

    valor                          shift and go to state 390
    returnfun                      shift and go to state 391
    aritmetica                     shift and go to state 392
    numeros                        shift and go to state 393
    booleanos                      shift and go to state 73
    returnCastable                 shift and go to state 175
    castingcall                    shift and go to state 176
    startsWith                     shift and go to state 80
    entrada                        shift and go to state 184
    funcall                        shift and go to state 185

state 298

    (91) reasignacion -> VARIABLE PAR_I . INT PAR_D IGUAL valor
    (146) varparen -> PAR_I . valores PAR_D
    (147) varparen -> PAR_I . PAR_D
    (169) valores -> . valor
    (170) valores -> . valor COMA valores
    (101) valor -> . STRING
    (102) valor -> . CHAR
    (103) valor -> . VARIABLE
    (104) valor -> . numeros
    (105) valor -> . booleanos
    (106) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (107) valor -> . VARIABLE PAR_I INT PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    INT             shift and go to state 394
    PAR_D           shift and go to state 67
    STRING          shift and go to state 69
    CHAR            shift and go to state 70
    VARIABLE        shift and go to state 71
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79

    valor                          shift and go to state 68
    valores                        shift and go to state 66
    numeros                        shift and go to state 72
    booleanos                      shift and go to state 73
    startsWith                     shift and go to state 80

state 299

    (115) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    contenido                      shift and go to state 395
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 300

    (116) funcion -> DEF VARIABLE parametro LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 396


state 301

    (123) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN valor LLAVE_D
    (124) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN returnfun LLAVE_D
    (126) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN aritmetica LLAVE_D
    (127) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I RETURN valor LLAVE_D
    (128) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I RETURN VARIABLE LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I RETURN returnfun LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I RETURN aritmetica LLAVE_D

    LLAVE_I         shift and go to state 397


state 302

    (131) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN tuple LLAVE_D
    (132) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN returnfun LLAVE_D

    LLAVE_I         shift and go to state 398


state 303

    (134) dectipo -> DOBLE_PUNTO tipo .

    IGUAL           reduce using rule 134 (dectipo -> DOBLE_PUNTO tipo .)


state 304

    (135) dectipoTupla -> DOBLE_PUNTO PAR_I . tipos PAR_D
    (136) tipos -> . tipo
    (137) tipos -> . tipo tiposentry
    (92) tipo -> . CHARCLASS
    (93) tipo -> . STRINGCLASS
    (94) tipo -> . BOOLCLASS
    (95) tipo -> . INTCLASS
    (96) tipo -> . LONGCLASS
    (97) tipo -> . DOUBLECLASS
    (98) tipo -> . FLOATCLASS
    (99) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (100) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 305
    STRINGCLASS     shift and go to state 306
    BOOLCLASS       shift and go to state 307
    INTCLASS        shift and go to state 308
    LONGCLASS       shift and go to state 309
    DOUBLECLASS     shift and go to state 310
    FLOATCLASS      shift and go to state 311
    ARRAYCLASS      shift and go to state 312
    LISTCLASS       shift and go to state 313

    tipos                          shift and go to state 399
    tipo                           shift and go to state 400

state 305

    (92) tipo -> CHARCLASS .

    IGUAL           reduce using rule 92 (tipo -> CHARCLASS .)
    COMA            reduce using rule 92 (tipo -> CHARCLASS .)
    PAR_D           reduce using rule 92 (tipo -> CHARCLASS .)
    CORCHETE_D      reduce using rule 92 (tipo -> CHARCLASS .)


state 306

    (93) tipo -> STRINGCLASS .

    IGUAL           reduce using rule 93 (tipo -> STRINGCLASS .)
    COMA            reduce using rule 93 (tipo -> STRINGCLASS .)
    PAR_D           reduce using rule 93 (tipo -> STRINGCLASS .)
    CORCHETE_D      reduce using rule 93 (tipo -> STRINGCLASS .)


state 307

    (94) tipo -> BOOLCLASS .

    IGUAL           reduce using rule 94 (tipo -> BOOLCLASS .)
    COMA            reduce using rule 94 (tipo -> BOOLCLASS .)
    PAR_D           reduce using rule 94 (tipo -> BOOLCLASS .)
    CORCHETE_D      reduce using rule 94 (tipo -> BOOLCLASS .)


state 308

    (95) tipo -> INTCLASS .

    IGUAL           reduce using rule 95 (tipo -> INTCLASS .)
    COMA            reduce using rule 95 (tipo -> INTCLASS .)
    PAR_D           reduce using rule 95 (tipo -> INTCLASS .)
    CORCHETE_D      reduce using rule 95 (tipo -> INTCLASS .)


state 309

    (96) tipo -> LONGCLASS .

    IGUAL           reduce using rule 96 (tipo -> LONGCLASS .)
    COMA            reduce using rule 96 (tipo -> LONGCLASS .)
    PAR_D           reduce using rule 96 (tipo -> LONGCLASS .)
    CORCHETE_D      reduce using rule 96 (tipo -> LONGCLASS .)


state 310

    (97) tipo -> DOUBLECLASS .

    IGUAL           reduce using rule 97 (tipo -> DOUBLECLASS .)
    COMA            reduce using rule 97 (tipo -> DOUBLECLASS .)
    PAR_D           reduce using rule 97 (tipo -> DOUBLECLASS .)
    CORCHETE_D      reduce using rule 97 (tipo -> DOUBLECLASS .)


state 311

    (98) tipo -> FLOATCLASS .

    IGUAL           reduce using rule 98 (tipo -> FLOATCLASS .)
    COMA            reduce using rule 98 (tipo -> FLOATCLASS .)
    PAR_D           reduce using rule 98 (tipo -> FLOATCLASS .)
    CORCHETE_D      reduce using rule 98 (tipo -> FLOATCLASS .)


state 312

    (99) tipo -> ARRAYCLASS . CORCHETE_I tipo CORCHETE_D

    CORCHETE_I      shift and go to state 401


state 313

    (100) tipo -> LISTCLASS . CORCHETE_I tipo CORCHETE_D

    CORCHETE_I      shift and go to state 402


state 314

    (121) parametros -> PAR_I declaracion PAR_D .
    (122) parametros -> PAR_I declaracion PAR_D . parametros
    (121) parametros -> . PAR_I declaracion PAR_D
    (122) parametros -> . PAR_I declaracion PAR_D parametros

    IGUAL           reduce using rule 121 (parametros -> PAR_I declaracion PAR_D .)
    LLAVE_I         reduce using rule 121 (parametros -> PAR_I declaracion PAR_D .)
    DOBLE_PUNTO     reduce using rule 121 (parametros -> PAR_I declaracion PAR_D .)
    PAR_I           shift and go to state 403

    parametros                     shift and go to state 404

state 315

    (117) declaracion -> VARIABLE DOBLE_PUNTO . tipo
    (118) declaracion -> VARIABLE DOBLE_PUNTO . tipo IGUAL valor
    (92) tipo -> . CHARCLASS
    (93) tipo -> . STRINGCLASS
    (94) tipo -> . BOOLCLASS
    (95) tipo -> . INTCLASS
    (96) tipo -> . LONGCLASS
    (97) tipo -> . DOUBLECLASS
    (98) tipo -> . FLOATCLASS
    (99) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (100) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 305
    STRINGCLASS     shift and go to state 306
    BOOLCLASS       shift and go to state 307
    INTCLASS        shift and go to state 308
    LONGCLASS       shift and go to state 309
    DOUBLECLASS     shift and go to state 310
    FLOATCLASS      shift and go to state 311
    ARRAYCLASS      shift and go to state 312
    LISTCLASS       shift and go to state 313

    tipo                           shift and go to state 405

state 316

    (142) valorI -> valor MAS valorI .

    PAR_D           reduce using rule 142 (valorI -> valor MAS valorI .)


state 317

    (155) castingcall -> VARIABLE PUNTO . castingfun
    (156) castingfun -> . TO_INT
    (157) castingfun -> . TO_DOUBLE
    (158) castingfun -> . TO_FLOAT
    (159) castingfun -> . TO_LONG

    TO_INT          shift and go to state 407
    TO_DOUBLE       shift and go to state 408
    TO_FLOAT        shift and go to state 409
    TO_LONG         shift and go to state 410

    castingfun                     shift and go to state 406

state 318

    (327) stringCastLong -> STRING PUNTO . TO_LONG
    (326) stringCastInt -> STRING PUNTO . TO_INT
    (328) stringCastFloat -> STRING PUNTO . TO_FLOAT
    (329) stringCastDouble -> STRING PUNTO . TO_DOUBLE
    (275) startsWith -> STRING PUNTO . STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> STRING PUNTO . STARTSWITH PAR_I STRING COMA INT PAR_D

    TO_LONG         shift and go to state 411
    TO_INT          shift and go to state 412
    TO_FLOAT        shift and go to state 413
    TO_DOUBLE       shift and go to state 414
    STARTSWITH      shift and go to state 112


state 319

    (160) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (169) valores -> . valor
    (170) valores -> . valor COMA valores
    (101) valor -> . STRING
    (102) valor -> . CHAR
    (103) valor -> . VARIABLE
    (104) valor -> . numeros
    (105) valor -> . booleanos
    (106) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (107) valor -> . VARIABLE PAR_I INT PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 69
    CHAR            shift and go to state 70
    VARIABLE        shift and go to state 71
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79

    valores                        shift and go to state 415
    valor                          shift and go to state 68
    numeros                        shift and go to state 72
    booleanos                      shift and go to state 73
    startsWith                     shift and go to state 80

state 320

    (171) tuple -> PAR_I valores . PAR_D

    PAR_D           shift and go to state 416


state 321

    (154) castingcall -> returnCastable PUNTO . castingfun
    (156) castingfun -> . TO_INT
    (157) castingfun -> . TO_DOUBLE
    (158) castingfun -> . TO_FLOAT
    (159) castingfun -> . TO_LONG

    TO_INT          shift and go to state 407
    TO_DOUBLE       shift and go to state 408
    TO_FLOAT        shift and go to state 409
    TO_LONG         shift and go to state 410

    castingfun                     shift and go to state 417

state 322

    (64) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . VARIABLE
    (306) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . longvalues
    (309) longvalues -> . INT
    (310) longvalues -> . intvalues
    (311) longvalues -> . stringCastLong
    (303) intvalues -> . INT
    (304) intvalues -> . stringCastInt
    (327) stringCastLong -> . STRING PUNTO TO_LONG
    (326) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 418
    INT             shift and go to state 420
    STRING          shift and go to state 422

    longvalues                     shift and go to state 419
    intvalues                      shift and go to state 421
    stringCastLong                 shift and go to state 178
    stringCastInt                  shift and go to state 179

state 323

    (300) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL . intvalues
    (303) intvalues -> . INT
    (304) intvalues -> . stringCastInt
    (326) stringCastInt -> . STRING PUNTO TO_INT

    INT             shift and go to state 424
    STRING          shift and go to state 425

    intvalues                      shift and go to state 423
    stringCastInt                  shift and go to state 179

state 324

    (66) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . VARIABLE
    (313) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . floatvalues
    (316) floatvalues -> . FLOAT
    (317) floatvalues -> . longvalues
    (318) floatvalues -> . stringCastFloat
    (309) longvalues -> . INT
    (310) longvalues -> . intvalues
    (311) longvalues -> . stringCastLong
    (328) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (303) intvalues -> . INT
    (304) intvalues -> . stringCastInt
    (327) stringCastLong -> . STRING PUNTO TO_LONG
    (326) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 426
    FLOAT           shift and go to state 428
    INT             shift and go to state 420
    STRING          shift and go to state 430

    floatvalues                    shift and go to state 427
    longvalues                     shift and go to state 429
    stringCastFloat                shift and go to state 181
    intvalues                      shift and go to state 421
    stringCastLong                 shift and go to state 178
    stringCastInt                  shift and go to state 179

state 325

    (68) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . VARIABLE
    (320) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . doublevalues
    (323) doublevalues -> . DOUBLE
    (324) doublevalues -> . floatvalues
    (325) doublevalues -> . stringCastDouble
    (316) floatvalues -> . FLOAT
    (317) floatvalues -> . longvalues
    (318) floatvalues -> . stringCastFloat
    (329) stringCastDouble -> . STRING PUNTO TO_DOUBLE
    (309) longvalues -> . INT
    (310) longvalues -> . intvalues
    (311) longvalues -> . stringCastLong
    (328) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (303) intvalues -> . INT
    (304) intvalues -> . stringCastInt
    (327) stringCastLong -> . STRING PUNTO TO_LONG
    (326) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 431
    DOUBLE          shift and go to state 433
    FLOAT           shift and go to state 428
    STRING          shift and go to state 435
    INT             shift and go to state 420

    doublevalues                   shift and go to state 432
    floatvalues                    shift and go to state 434
    stringCastDouble               shift and go to state 183
    longvalues                     shift and go to state 429
    stringCastFloat                shift and go to state 181
    intvalues                      shift and go to state 421
    stringCastLong                 shift and go to state 178
    stringCastInt                  shift and go to state 179

state 326

    (71) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . STRING
    (74) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . VARIABLE

    STRING          shift and go to state 437
    VARIABLE        shift and go to state 436


state 327

    (77) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . CHAR
    (80) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . VARIABLE

    CHAR            shift and go to state 439
    VARIABLE        shift and go to state 438


state 328

    (83) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . booleanos
    (86) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . VARIABLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    VARIABLE        shift and go to state 440
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79
    STRING          shift and go to state 34

    booleanos                      shift and go to state 441
    startsWith                     shift and go to state 80

state 329

    (161) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (269) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (92) tipo -> . CHARCLASS
    (93) tipo -> . STRINGCLASS
    (94) tipo -> . BOOLCLASS
    (95) tipo -> . INTCLASS
    (96) tipo -> . LONGCLASS
    (97) tipo -> . DOUBLECLASS
    (98) tipo -> . FLOATCLASS
    (99) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (100) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    INTCLASS        shift and go to state 443
    DOUBLECLASS     shift and go to state 444
    CHARCLASS       shift and go to state 305
    STRINGCLASS     shift and go to state 306
    BOOLCLASS       shift and go to state 307
    LONGCLASS       shift and go to state 309
    FLOATCLASS      shift and go to state 311
    ARRAYCLASS      shift and go to state 312
    LISTCLASS       shift and go to state 313

    tipo                           shift and go to state 442

state 330

    (279) dectupla -> PAR_I STRINGCLASS . COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
    (280) dectupla -> PAR_I STRINGCLASS . COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
    (281) dectupla -> PAR_I STRINGCLASS . COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
    (282) dectupla -> PAR_I STRINGCLASS . COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D

    COMA            shift and go to state 445


state 331

    (295) dectupla -> PAR_I INTCLASS . COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
    (296) dectupla -> PAR_I INTCLASS . COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
    (297) dectupla -> PAR_I INTCLASS . COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
    (298) dectupla -> PAR_I INTCLASS . COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    COMA            shift and go to state 446


state 332

    (291) dectupla -> PAR_I LONGCLASS . COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
    (292) dectupla -> PAR_I LONGCLASS . COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
    (293) dectupla -> PAR_I LONGCLASS . COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
    (294) dectupla -> PAR_I LONGCLASS . COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D

    COMA            shift and go to state 447


state 333

    (287) dectupla -> PAR_I DOUBLECLASS . COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
    (288) dectupla -> PAR_I DOUBLECLASS . COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
    (289) dectupla -> PAR_I DOUBLECLASS . COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
    (290) dectupla -> PAR_I DOUBLECLASS . COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D

    COMA            shift and go to state 448


state 334

    (283) dectupla -> PAR_I FLOATCLASS . COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
    (284) dectupla -> PAR_I FLOATCLASS . COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
    (285) dectupla -> PAR_I FLOATCLASS . COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
    (286) dectupla -> PAR_I FLOATCLASS . COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D

    COMA            shift and go to state 449


state 335

    (162) array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (169) valores -> . valor
    (170) valores -> . valor COMA valores
    (101) valor -> . STRING
    (102) valor -> . CHAR
    (103) valor -> . VARIABLE
    (104) valor -> . numeros
    (105) valor -> . booleanos
    (106) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (107) valor -> . VARIABLE PAR_I INT PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 69
    CHAR            shift and go to state 70
    VARIABLE        shift and go to state 71
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79

    valores                        shift and go to state 450
    valor                          shift and go to state 68
    numeros                        shift and go to state 72
    booleanos                      shift and go to state 73
    startsWith                     shift and go to state 80

state 336

    (166) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I . valores PAR_D
    (169) valores -> . valor
    (170) valores -> . valor COMA valores
    (101) valor -> . STRING
    (102) valor -> . CHAR
    (103) valor -> . VARIABLE
    (104) valor -> . numeros
    (105) valor -> . booleanos
    (106) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (107) valor -> . VARIABLE PAR_I INT PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 69
    CHAR            shift and go to state 70
    VARIABLE        shift and go to state 71
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79

    valores                        shift and go to state 451
    valor                          shift and go to state 68
    numeros                        shift and go to state 72
    booleanos                      shift and go to state 73
    startsWith                     shift and go to state 80

state 337

    (65) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . VARIABLE
    (308) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . longvalues
    (309) longvalues -> . INT
    (310) longvalues -> . intvalues
    (311) longvalues -> . stringCastLong
    (303) intvalues -> . INT
    (304) intvalues -> . stringCastInt
    (327) stringCastLong -> . STRING PUNTO TO_LONG
    (326) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 452
    INT             shift and go to state 420
    STRING          shift and go to state 422

    longvalues                     shift and go to state 453
    intvalues                      shift and go to state 421
    stringCastLong                 shift and go to state 178
    stringCastInt                  shift and go to state 179

state 338

    (302) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL . intvalues
    (303) intvalues -> . INT
    (304) intvalues -> . stringCastInt
    (326) stringCastInt -> . STRING PUNTO TO_INT

    INT             shift and go to state 424
    STRING          shift and go to state 425

    intvalues                      shift and go to state 454
    stringCastInt                  shift and go to state 179

state 339

    (67) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . VARIABLE
    (315) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . floatvalues
    (316) floatvalues -> . FLOAT
    (317) floatvalues -> . longvalues
    (318) floatvalues -> . stringCastFloat
    (309) longvalues -> . INT
    (310) longvalues -> . intvalues
    (311) longvalues -> . stringCastLong
    (328) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (303) intvalues -> . INT
    (304) intvalues -> . stringCastInt
    (327) stringCastLong -> . STRING PUNTO TO_LONG
    (326) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 455
    FLOAT           shift and go to state 428
    INT             shift and go to state 420
    STRING          shift and go to state 430

    floatvalues                    shift and go to state 456
    longvalues                     shift and go to state 429
    stringCastFloat                shift and go to state 181
    intvalues                      shift and go to state 421
    stringCastLong                 shift and go to state 178
    stringCastInt                  shift and go to state 179

state 340

    (69) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . VARIABLE
    (322) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . doublevalues
    (323) doublevalues -> . DOUBLE
    (324) doublevalues -> . floatvalues
    (325) doublevalues -> . stringCastDouble
    (316) floatvalues -> . FLOAT
    (317) floatvalues -> . longvalues
    (318) floatvalues -> . stringCastFloat
    (329) stringCastDouble -> . STRING PUNTO TO_DOUBLE
    (309) longvalues -> . INT
    (310) longvalues -> . intvalues
    (311) longvalues -> . stringCastLong
    (328) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (303) intvalues -> . INT
    (304) intvalues -> . stringCastInt
    (327) stringCastLong -> . STRING PUNTO TO_LONG
    (326) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 457
    DOUBLE          shift and go to state 433
    FLOAT           shift and go to state 428
    STRING          shift and go to state 435
    INT             shift and go to state 420

    doublevalues                   shift and go to state 458
    floatvalues                    shift and go to state 434
    stringCastDouble               shift and go to state 183
    longvalues                     shift and go to state 429
    stringCastFloat                shift and go to state 181
    intvalues                      shift and go to state 421
    stringCastLong                 shift and go to state 178
    stringCastInt                  shift and go to state 179

state 341

    (73) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . STRING
    (75) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . VARIABLE

    STRING          shift and go to state 460
    VARIABLE        shift and go to state 459


state 342

    (79) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . CHAR
    (81) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . VARIABLE

    CHAR            shift and go to state 462
    VARIABLE        shift and go to state 461


state 343

    (85) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . booleanos
    (87) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . VARIABLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    VARIABLE        shift and go to state 463
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79
    STRING          shift and go to state 34

    booleanos                      shift and go to state 464
    startsWith                     shift and go to state 80

state 344

    (163) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (92) tipo -> . CHARCLASS
    (93) tipo -> . STRINGCLASS
    (94) tipo -> . BOOLCLASS
    (95) tipo -> . INTCLASS
    (96) tipo -> . LONGCLASS
    (97) tipo -> . DOUBLECLASS
    (98) tipo -> . FLOATCLASS
    (99) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (100) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 305
    STRINGCLASS     shift and go to state 306
    BOOLCLASS       shift and go to state 307
    INTCLASS        shift and go to state 308
    LONGCLASS       shift and go to state 309
    DOUBLECLASS     shift and go to state 310
    FLOATCLASS      shift and go to state 311
    ARRAYCLASS      shift and go to state 312
    LISTCLASS       shift and go to state 313

    tipo                           shift and go to state 465

state 345

    (167) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I . tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I . tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (92) tipo -> . CHARCLASS
    (93) tipo -> . STRINGCLASS
    (94) tipo -> . BOOLCLASS
    (95) tipo -> . INTCLASS
    (96) tipo -> . LONGCLASS
    (97) tipo -> . DOUBLECLASS
    (98) tipo -> . FLOATCLASS
    (99) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (100) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 305
    STRINGCLASS     shift and go to state 306
    BOOLCLASS       shift and go to state 307
    INTCLASS        shift and go to state 308
    LONGCLASS       shift and go to state 309
    DOUBLECLASS     shift and go to state 310
    FLOATCLASS      shift and go to state 311
    ARRAYCLASS      shift and go to state 312
    LISTCLASS       shift and go to state 313

    tipo                           shift and go to state 466

state 346

    (174) while -> WHILE PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    contenido                      shift and go to state 467
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 347

    (227) condicional -> valorC logicos condicional .

    PAR_D           reduce using rule 227 (condicional -> valorC logicos condicional .)


state 348

    (253) relacional -> VARIABLE comparacion VARIABLE .

    AND             reduce using rule 253 (relacional -> VARIABLE comparacion VARIABLE .)
    OR              reduce using rule 253 (relacional -> VARIABLE comparacion VARIABLE .)
    NOT             reduce using rule 253 (relacional -> VARIABLE comparacion VARIABLE .)
    PAR_D           reduce using rule 253 (relacional -> VARIABLE comparacion VARIABLE .)


state 349

    (245) relacional -> VARIABLE comparacion numeros .

    AND             reduce using rule 245 (relacional -> VARIABLE comparacion numeros .)
    OR              reduce using rule 245 (relacional -> VARIABLE comparacion numeros .)
    NOT             reduce using rule 245 (relacional -> VARIABLE comparacion numeros .)
    PAR_D           reduce using rule 245 (relacional -> VARIABLE comparacion numeros .)


state 350

    (247) relacional -> VARIABLE comparacion booleanos .

    AND             reduce using rule 247 (relacional -> VARIABLE comparacion booleanos .)
    OR              reduce using rule 247 (relacional -> VARIABLE comparacion booleanos .)
    NOT             reduce using rule 247 (relacional -> VARIABLE comparacion booleanos .)
    PAR_D           reduce using rule 247 (relacional -> VARIABLE comparacion booleanos .)


state 351

    (249) relacional -> VARIABLE comparacion STRING .
    (275) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    AND             reduce using rule 249 (relacional -> VARIABLE comparacion STRING .)
    OR              reduce using rule 249 (relacional -> VARIABLE comparacion STRING .)
    NOT             reduce using rule 249 (relacional -> VARIABLE comparacion STRING .)
    PAR_D           reduce using rule 249 (relacional -> VARIABLE comparacion STRING .)
    PUNTO           shift and go to state 62


state 352

    (251) relacional -> VARIABLE comparacion CHAR .

    AND             reduce using rule 251 (relacional -> VARIABLE comparacion CHAR .)
    OR              reduce using rule 251 (relacional -> VARIABLE comparacion CHAR .)
    NOT             reduce using rule 251 (relacional -> VARIABLE comparacion CHAR .)
    PAR_D           reduce using rule 251 (relacional -> VARIABLE comparacion CHAR .)


state 353

    (261) aritmetica -> VARIABLE aritmeticos VARIABLE .

    IGUAL_COMPARACION reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MAYOR           reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MENOR           reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MENOS           reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MAS             reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DIVISION        reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MOD             reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VAR             reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VAL             reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PRINT           reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    READLINE        reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    WHILE           reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    FOR             reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    IF              reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    STRING          reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    INT             reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    LONG            reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    FLOAT           reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DEF             reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    $end            reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    RETURN          reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    CASE            reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    AND             reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    OR              reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    NOT             reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PAR_D           reduce using rule 261 (aritmetica -> VARIABLE aritmeticos VARIABLE .)


state 354

    (259) aritmetica -> VARIABLE aritmeticos numeros .

    IGUAL_COMPARACION reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    DIFERENTE       reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    MAYOR           reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    MENOR           reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    MENOS           reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    MAS             reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    DIVISION        reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    MOD             reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    VAR             reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    VAL             reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    VARIABLE        reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    PRINTLN         reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    PRINT           reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    READLINE        reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    WHILE           reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    FOR             reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    IF              reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    STRING          reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    INT             reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    LONG            reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    FLOAT           reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    DOUBLE          reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    LLAVE_D         reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    DEF             reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    $end            reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    RETURN          reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    CASE            reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    AND             reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    OR              reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    NOT             reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)
    PAR_D           reduce using rule 259 (aritmetica -> VARIABLE aritmeticos numeros .)


state 355

    (242) relacional -> booleanos comparacion booleanos .

    AND             reduce using rule 242 (relacional -> booleanos comparacion booleanos .)
    OR              reduce using rule 242 (relacional -> booleanos comparacion booleanos .)
    NOT             reduce using rule 242 (relacional -> booleanos comparacion booleanos .)
    PAR_D           reduce using rule 242 (relacional -> booleanos comparacion booleanos .)


state 356

    (248) relacional -> booleanos comparacion VARIABLE .

    AND             reduce using rule 248 (relacional -> booleanos comparacion VARIABLE .)
    OR              reduce using rule 248 (relacional -> booleanos comparacion VARIABLE .)
    NOT             reduce using rule 248 (relacional -> booleanos comparacion VARIABLE .)
    PAR_D           reduce using rule 248 (relacional -> booleanos comparacion VARIABLE .)


state 357

    (238) relacional -> numeros comparacion numeros .
    (258) aritmetica -> numeros . aritmeticos numeros
    (260) aritmetica -> numeros . aritmeticos VARIABLE
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD

    AND             reduce using rule 238 (relacional -> numeros comparacion numeros .)
    OR              reduce using rule 238 (relacional -> numeros comparacion numeros .)
    NOT             reduce using rule 238 (relacional -> numeros comparacion numeros .)
    PAR_D           reduce using rule 238 (relacional -> numeros comparacion numeros .)
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234

    aritmeticos                    shift and go to state 240

state 358

    (241) relacional -> numeros comparacion aritmetica .
    (262) aritmetica -> aritmetica . aritmeticos numeros
    (263) aritmetica -> aritmetica . aritmeticos VARIABLE
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD

    AND             reduce using rule 241 (relacional -> numeros comparacion aritmetica .)
    OR              reduce using rule 241 (relacional -> numeros comparacion aritmetica .)
    NOT             reduce using rule 241 (relacional -> numeros comparacion aritmetica .)
    PAR_D           reduce using rule 241 (relacional -> numeros comparacion aritmetica .)
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234

    aritmeticos                    shift and go to state 242

state 359

    (246) relacional -> numeros comparacion VARIABLE .
    (259) aritmetica -> VARIABLE . aritmeticos numeros
    (261) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD

    AND             reduce using rule 246 (relacional -> numeros comparacion VARIABLE .)
    OR              reduce using rule 246 (relacional -> numeros comparacion VARIABLE .)
    NOT             reduce using rule 246 (relacional -> numeros comparacion VARIABLE .)
    PAR_D           reduce using rule 246 (relacional -> numeros comparacion VARIABLE .)
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234

    aritmeticos                    shift and go to state 225

state 360

    (258) aritmetica -> numeros aritmeticos numeros .

    IGUAL_COMPARACION reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    DIFERENTE       reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    MAYOR           reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    MENOR           reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    MENOS           reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    MAS             reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    DIVISION        reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    MOD             reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    VAR             reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    VAL             reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    VARIABLE        reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    PRINTLN         reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    PRINT           reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    READLINE        reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    WHILE           reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    FOR             reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    IF              reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    STRING          reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    INT             reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    LONG            reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    FLOAT           reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    DOUBLE          reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    LLAVE_D         reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    DEF             reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    $end            reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    RETURN          reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    CASE            reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    AND             reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    OR              reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    NOT             reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)
    PAR_D           reduce using rule 258 (aritmetica -> numeros aritmeticos numeros .)


state 361

    (260) aritmetica -> numeros aritmeticos VARIABLE .

    IGUAL_COMPARACION reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    MAYOR           reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    MENOR           reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    MENOS           reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    MAS             reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    DIVISION        reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    MOD             reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    VAR             reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    VAL             reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    PRINT           reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    READLINE        reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    WHILE           reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    FOR             reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    IF              reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    STRING          reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    INT             reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    LONG            reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    FLOAT           reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    DEF             reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    $end            reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    RETURN          reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    CASE            reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    AND             reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    OR              reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    NOT             reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)
    PAR_D           reduce using rule 260 (aritmetica -> numeros aritmeticos VARIABLE .)


state 362

    (239) relacional -> aritmetica comparacion aritmetica .
    (262) aritmetica -> aritmetica . aritmeticos numeros
    (263) aritmetica -> aritmetica . aritmeticos VARIABLE
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD

    AND             reduce using rule 239 (relacional -> aritmetica comparacion aritmetica .)
    OR              reduce using rule 239 (relacional -> aritmetica comparacion aritmetica .)
    NOT             reduce using rule 239 (relacional -> aritmetica comparacion aritmetica .)
    PAR_D           reduce using rule 239 (relacional -> aritmetica comparacion aritmetica .)
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234

    aritmeticos                    shift and go to state 242

state 363

    (240) relacional -> aritmetica comparacion numeros .
    (258) aritmetica -> numeros . aritmeticos numeros
    (260) aritmetica -> numeros . aritmeticos VARIABLE
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD

    AND             reduce using rule 240 (relacional -> aritmetica comparacion numeros .)
    OR              reduce using rule 240 (relacional -> aritmetica comparacion numeros .)
    NOT             reduce using rule 240 (relacional -> aritmetica comparacion numeros .)
    PAR_D           reduce using rule 240 (relacional -> aritmetica comparacion numeros .)
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234

    aritmeticos                    shift and go to state 240

state 364

    (259) aritmetica -> VARIABLE . aritmeticos numeros
    (261) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD

    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234

    aritmeticos                    shift and go to state 225

state 365

    (262) aritmetica -> aritmetica aritmeticos numeros .

    IGUAL_COMPARACION reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    DIFERENTE       reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    MAYOR           reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    MENOR           reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    MENOS           reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    MAS             reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    DIVISION        reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    MOD             reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    VAR             reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    VAL             reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    VARIABLE        reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    PRINTLN         reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    PRINT           reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    READLINE        reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    WHILE           reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    FOR             reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    IF              reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    STRING          reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    INT             reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    LONG            reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    FLOAT           reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    DOUBLE          reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    LLAVE_D         reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    DEF             reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    $end            reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    RETURN          reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    CASE            reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    AND             reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    OR              reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    NOT             reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)
    PAR_D           reduce using rule 262 (aritmetica -> aritmetica aritmeticos numeros .)


state 366

    (263) aritmetica -> aritmetica aritmeticos VARIABLE .

    IGUAL_COMPARACION reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MAYOR           reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MENOR           reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MENOS           reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MAS             reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DIVISION        reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MOD             reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VAR             reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VAL             reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PRINT           reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    READLINE        reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    WHILE           reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    FOR             reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    IF              reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    STRING          reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    INT             reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    LONG            reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    FLOAT           reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DEF             reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    $end            reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    RETURN          reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    CASE            reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    AND             reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    OR              reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    NOT             reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PAR_D           reduce using rule 263 (aritmetica -> aritmetica aritmeticos VARIABLE .)


state 367

    (243) relacional -> STRING comparacion STRING .

    AND             reduce using rule 243 (relacional -> STRING comparacion STRING .)
    OR              reduce using rule 243 (relacional -> STRING comparacion STRING .)
    NOT             reduce using rule 243 (relacional -> STRING comparacion STRING .)
    PAR_D           reduce using rule 243 (relacional -> STRING comparacion STRING .)


state 368

    (250) relacional -> STRING comparacion VARIABLE .

    AND             reduce using rule 250 (relacional -> STRING comparacion VARIABLE .)
    OR              reduce using rule 250 (relacional -> STRING comparacion VARIABLE .)
    NOT             reduce using rule 250 (relacional -> STRING comparacion VARIABLE .)
    PAR_D           reduce using rule 250 (relacional -> STRING comparacion VARIABLE .)


state 369

    (244) relacional -> CHAR comparacion CHAR .

    AND             reduce using rule 244 (relacional -> CHAR comparacion CHAR .)
    OR              reduce using rule 244 (relacional -> CHAR comparacion CHAR .)
    NOT             reduce using rule 244 (relacional -> CHAR comparacion CHAR .)
    PAR_D           reduce using rule 244 (relacional -> CHAR comparacion CHAR .)


state 370

    (252) relacional -> CHAR comparacion VARIABLE .

    AND             reduce using rule 252 (relacional -> CHAR comparacion VARIABLE .)
    OR              reduce using rule 252 (relacional -> CHAR comparacion VARIABLE .)
    NOT             reduce using rule 252 (relacional -> CHAR comparacion VARIABLE .)
    PAR_D           reduce using rule 252 (relacional -> CHAR comparacion VARIABLE .)


state 371

    (175) for -> FOR PAR_I VAR VARIABLE ITERATOR . VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> FOR PAR_I VAR VARIABLE ITERATOR . INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> FOR PAR_I VAR VARIABLE ITERATOR . INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 468
    INT             shift and go to state 469


state 372

    (176) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 470


state 373

    (177) for -> FOR PAR_I VARIABLE ITERATOR INT . TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> FOR PAR_I VARIABLE ITERATOR INT . UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    TO              shift and go to state 471
    UNTIL           shift and go to state 472


state 374

    (220) if -> IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    contenido                      shift and go to state 473
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 375

    (275) startsWith -> STRING PUNTO STARTSWITH PAR_I STRING . PAR_D
    (276) startsWith -> STRING PUNTO STARTSWITH PAR_I STRING . COMA INT PAR_D

    PAR_D           shift and go to state 474
    COMA            shift and go to state 475


state 376

    (217) defcase -> CASE SUBGUION . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 476


state 377

    (205) caseStr -> CASE STRING . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 382


state 378

    (189) caseInt -> CASE INT FUNCION_FLECHA . codeBlock
    (218) codeBlock -> . contenidoLine
    (219) codeBlock -> . LLAVE_I contenido LLAVE_D
    (44) contenidoLine -> . asignacion
    (45) contenidoLine -> . reasignacion
    (46) contenidoLine -> . funcall
    (47) contenidoLine -> . impresion
    (48) contenidoLine -> . entrada
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_I         shift and go to state 479
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 485
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 477
    contenidoLine                  shift and go to state 478
    asignacion                     shift and go to state 480
    reasignacion                   shift and go to state 481
    funcall                        shift and go to state 482
    impresion                      shift and go to state 483
    entrada                        shift and go to state 484
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 379

    (193) caseLgn -> CASE LONG FUNCION_FLECHA . codeBlock
    (218) codeBlock -> . contenidoLine
    (219) codeBlock -> . LLAVE_I contenido LLAVE_D
    (44) contenidoLine -> . asignacion
    (45) contenidoLine -> . reasignacion
    (46) contenidoLine -> . funcall
    (47) contenidoLine -> . impresion
    (48) contenidoLine -> . entrada
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_I         shift and go to state 479
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 485
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 486
    contenidoLine                  shift and go to state 478
    asignacion                     shift and go to state 480
    reasignacion                   shift and go to state 481
    funcall                        shift and go to state 482
    impresion                      shift and go to state 483
    entrada                        shift and go to state 484
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 380

    (197) caseFlt -> CASE FLOAT FUNCION_FLECHA . codeBlock
    (218) codeBlock -> . contenidoLine
    (219) codeBlock -> . LLAVE_I contenido LLAVE_D
    (44) contenidoLine -> . asignacion
    (45) contenidoLine -> . reasignacion
    (46) contenidoLine -> . funcall
    (47) contenidoLine -> . impresion
    (48) contenidoLine -> . entrada
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_I         shift and go to state 479
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 485
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 487
    contenidoLine                  shift and go to state 478
    asignacion                     shift and go to state 480
    reasignacion                   shift and go to state 481
    funcall                        shift and go to state 482
    impresion                      shift and go to state 483
    entrada                        shift and go to state 484
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 381

    (201) caseDob -> CASE DOUBLE FUNCION_FLECHA . codeBlock
    (218) codeBlock -> . contenidoLine
    (219) codeBlock -> . LLAVE_I contenido LLAVE_D
    (44) contenidoLine -> . asignacion
    (45) contenidoLine -> . reasignacion
    (46) contenidoLine -> . funcall
    (47) contenidoLine -> . impresion
    (48) contenidoLine -> . entrada
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_I         shift and go to state 479
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 485
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 488
    contenidoLine                  shift and go to state 478
    asignacion                     shift and go to state 480
    reasignacion                   shift and go to state 481
    funcall                        shift and go to state 482
    impresion                      shift and go to state 483
    entrada                        shift and go to state 484
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 382

    (205) caseStr -> CASE STRING FUNCION_FLECHA . codeBlock
    (218) codeBlock -> . contenidoLine
    (219) codeBlock -> . LLAVE_I contenido LLAVE_D
    (44) contenidoLine -> . asignacion
    (45) contenidoLine -> . reasignacion
    (46) contenidoLine -> . funcall
    (47) contenidoLine -> . impresion
    (48) contenidoLine -> . entrada
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_I         shift and go to state 479
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 485
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 489
    contenidoLine                  shift and go to state 478
    asignacion                     shift and go to state 480
    reasignacion                   shift and go to state 481
    funcall                        shift and go to state 482
    impresion                      shift and go to state 483
    entrada                        shift and go to state 484
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 383

    (209) caseChar -> CASE CHAR FUNCION_FLECHA . codeBlock
    (218) codeBlock -> . contenidoLine
    (219) codeBlock -> . LLAVE_I contenido LLAVE_D
    (44) contenidoLine -> . asignacion
    (45) contenidoLine -> . reasignacion
    (46) contenidoLine -> . funcall
    (47) contenidoLine -> . impresion
    (48) contenidoLine -> . entrada
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_I         shift and go to state 479
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 485
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 490
    contenidoLine                  shift and go to state 478
    asignacion                     shift and go to state 480
    reasignacion                   shift and go to state 481
    funcall                        shift and go to state 482
    impresion                      shift and go to state 483
    entrada                        shift and go to state 484
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 384

    (213) caseBool -> CASE booleanos FUNCION_FLECHA . codeBlock
    (218) codeBlock -> . contenidoLine
    (219) codeBlock -> . LLAVE_I contenido LLAVE_D
    (44) contenidoLine -> . asignacion
    (45) contenidoLine -> . reasignacion
    (46) contenidoLine -> . funcall
    (47) contenidoLine -> . impresion
    (48) contenidoLine -> . entrada
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_I         shift and go to state 479
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 485
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 491
    contenidoLine                  shift and go to state 478
    asignacion                     shift and go to state 480
    reasignacion                   shift and go to state 481
    funcall                        shift and go to state 482
    impresion                      shift and go to state 483
    entrada                        shift and go to state 484
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 385

    (106) valor -> VARIABLE PAR_I VARIABLE PAR_D .

    COMA            reduce using rule 106 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    PAR_D           reduce using rule 106 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    MAS             reduce using rule 106 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    VAR             reduce using rule 106 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    VAL             reduce using rule 106 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    VARIABLE        reduce using rule 106 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    PRINTLN         reduce using rule 106 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    PRINT           reduce using rule 106 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    READLINE        reduce using rule 106 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    WHILE           reduce using rule 106 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    FOR             reduce using rule 106 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    IF              reduce using rule 106 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    STRING          reduce using rule 106 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    INT             reduce using rule 106 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    LONG            reduce using rule 106 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    FLOAT           reduce using rule 106 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    DOUBLE          reduce using rule 106 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    LLAVE_D         reduce using rule 106 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    RETURN          reduce using rule 106 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    CASE            reduce using rule 106 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)


state 386

    (107) valor -> VARIABLE PAR_I INT PAR_D .

    COMA            reduce using rule 107 (valor -> VARIABLE PAR_I INT PAR_D .)
    PAR_D           reduce using rule 107 (valor -> VARIABLE PAR_I INT PAR_D .)
    MAS             reduce using rule 107 (valor -> VARIABLE PAR_I INT PAR_D .)
    VAR             reduce using rule 107 (valor -> VARIABLE PAR_I INT PAR_D .)
    VAL             reduce using rule 107 (valor -> VARIABLE PAR_I INT PAR_D .)
    VARIABLE        reduce using rule 107 (valor -> VARIABLE PAR_I INT PAR_D .)
    PRINTLN         reduce using rule 107 (valor -> VARIABLE PAR_I INT PAR_D .)
    PRINT           reduce using rule 107 (valor -> VARIABLE PAR_I INT PAR_D .)
    READLINE        reduce using rule 107 (valor -> VARIABLE PAR_I INT PAR_D .)
    WHILE           reduce using rule 107 (valor -> VARIABLE PAR_I INT PAR_D .)
    FOR             reduce using rule 107 (valor -> VARIABLE PAR_I INT PAR_D .)
    IF              reduce using rule 107 (valor -> VARIABLE PAR_I INT PAR_D .)
    STRING          reduce using rule 107 (valor -> VARIABLE PAR_I INT PAR_D .)
    INT             reduce using rule 107 (valor -> VARIABLE PAR_I INT PAR_D .)
    LONG            reduce using rule 107 (valor -> VARIABLE PAR_I INT PAR_D .)
    FLOAT           reduce using rule 107 (valor -> VARIABLE PAR_I INT PAR_D .)
    DOUBLE          reduce using rule 107 (valor -> VARIABLE PAR_I INT PAR_D .)
    LLAVE_D         reduce using rule 107 (valor -> VARIABLE PAR_I INT PAR_D .)
    RETURN          reduce using rule 107 (valor -> VARIABLE PAR_I INT PAR_D .)
    CASE            reduce using rule 107 (valor -> VARIABLE PAR_I INT PAR_D .)


state 387

    (4) io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE . PUNTO READLINE

    PUNTO           shift and go to state 492


state 388

    (223) elseif -> ELSE IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D
    (224) elseif -> ELSE IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D elseif

    LLAVE_I         shift and go to state 493


state 389

    (103) valor -> VARIABLE .
    (106) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (107) valor -> VARIABLE . PAR_I INT PAR_D
    (259) aritmetica -> VARIABLE . aritmeticos numeros
    (261) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (155) castingcall -> VARIABLE . PUNTO castingfun
    (145) funcall -> VARIABLE . varparen
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD
    (146) varparen -> . PAR_I valores PAR_D
    (147) varparen -> . PAR_I PAR_D
    (148) varparen -> . varparen PAR_I valores PAR_D
    (149) varparen -> . varparen PAR_I PAR_D

    VAR             reduce using rule 103 (valor -> VARIABLE .)
    VAL             reduce using rule 103 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 103 (valor -> VARIABLE .)
    PRINTLN         reduce using rule 103 (valor -> VARIABLE .)
    PRINT           reduce using rule 103 (valor -> VARIABLE .)
    READLINE        reduce using rule 103 (valor -> VARIABLE .)
    WHILE           reduce using rule 103 (valor -> VARIABLE .)
    FOR             reduce using rule 103 (valor -> VARIABLE .)
    IF              reduce using rule 103 (valor -> VARIABLE .)
    STRING          reduce using rule 103 (valor -> VARIABLE .)
    INT             reduce using rule 103 (valor -> VARIABLE .)
    LONG            reduce using rule 103 (valor -> VARIABLE .)
    FLOAT           reduce using rule 103 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 103 (valor -> VARIABLE .)
    LLAVE_D         reduce using rule 103 (valor -> VARIABLE .)
    RETURN          reduce using rule 103 (valor -> VARIABLE .)
    CASE            reduce using rule 103 (valor -> VARIABLE .)
    PAR_I           shift and go to state 494
    PUNTO           shift and go to state 317
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234

    aritmeticos                    shift and go to state 225
    varparen                       shift and go to state 38

state 390

    (88) reasignacion -> VARIABLE IGUAL valor .

    VAR             reduce using rule 88 (reasignacion -> VARIABLE IGUAL valor .)
    VAL             reduce using rule 88 (reasignacion -> VARIABLE IGUAL valor .)
    VARIABLE        reduce using rule 88 (reasignacion -> VARIABLE IGUAL valor .)
    PRINTLN         reduce using rule 88 (reasignacion -> VARIABLE IGUAL valor .)
    PRINT           reduce using rule 88 (reasignacion -> VARIABLE IGUAL valor .)
    READLINE        reduce using rule 88 (reasignacion -> VARIABLE IGUAL valor .)
    WHILE           reduce using rule 88 (reasignacion -> VARIABLE IGUAL valor .)
    FOR             reduce using rule 88 (reasignacion -> VARIABLE IGUAL valor .)
    IF              reduce using rule 88 (reasignacion -> VARIABLE IGUAL valor .)
    STRING          reduce using rule 88 (reasignacion -> VARIABLE IGUAL valor .)
    INT             reduce using rule 88 (reasignacion -> VARIABLE IGUAL valor .)
    LONG            reduce using rule 88 (reasignacion -> VARIABLE IGUAL valor .)
    FLOAT           reduce using rule 88 (reasignacion -> VARIABLE IGUAL valor .)
    DOUBLE          reduce using rule 88 (reasignacion -> VARIABLE IGUAL valor .)
    LLAVE_D         reduce using rule 88 (reasignacion -> VARIABLE IGUAL valor .)
    RETURN          reduce using rule 88 (reasignacion -> VARIABLE IGUAL valor .)
    CASE            reduce using rule 88 (reasignacion -> VARIABLE IGUAL valor .)


state 391

    (89) reasignacion -> VARIABLE IGUAL returnfun .

    VAR             reduce using rule 89 (reasignacion -> VARIABLE IGUAL returnfun .)
    VAL             reduce using rule 89 (reasignacion -> VARIABLE IGUAL returnfun .)
    VARIABLE        reduce using rule 89 (reasignacion -> VARIABLE IGUAL returnfun .)
    PRINTLN         reduce using rule 89 (reasignacion -> VARIABLE IGUAL returnfun .)
    PRINT           reduce using rule 89 (reasignacion -> VARIABLE IGUAL returnfun .)
    READLINE        reduce using rule 89 (reasignacion -> VARIABLE IGUAL returnfun .)
    WHILE           reduce using rule 89 (reasignacion -> VARIABLE IGUAL returnfun .)
    FOR             reduce using rule 89 (reasignacion -> VARIABLE IGUAL returnfun .)
    IF              reduce using rule 89 (reasignacion -> VARIABLE IGUAL returnfun .)
    STRING          reduce using rule 89 (reasignacion -> VARIABLE IGUAL returnfun .)
    INT             reduce using rule 89 (reasignacion -> VARIABLE IGUAL returnfun .)
    LONG            reduce using rule 89 (reasignacion -> VARIABLE IGUAL returnfun .)
    FLOAT           reduce using rule 89 (reasignacion -> VARIABLE IGUAL returnfun .)
    DOUBLE          reduce using rule 89 (reasignacion -> VARIABLE IGUAL returnfun .)
    LLAVE_D         reduce using rule 89 (reasignacion -> VARIABLE IGUAL returnfun .)
    RETURN          reduce using rule 89 (reasignacion -> VARIABLE IGUAL returnfun .)
    CASE            reduce using rule 89 (reasignacion -> VARIABLE IGUAL returnfun .)


state 392

    (90) reasignacion -> VARIABLE IGUAL aritmetica .
    (262) aritmetica -> aritmetica . aritmeticos numeros
    (263) aritmetica -> aritmetica . aritmeticos VARIABLE
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD

    VAR             reduce using rule 90 (reasignacion -> VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 90 (reasignacion -> VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 90 (reasignacion -> VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 90 (reasignacion -> VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 90 (reasignacion -> VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 90 (reasignacion -> VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 90 (reasignacion -> VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 90 (reasignacion -> VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 90 (reasignacion -> VARIABLE IGUAL aritmetica .)
    STRING          reduce using rule 90 (reasignacion -> VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 90 (reasignacion -> VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 90 (reasignacion -> VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 90 (reasignacion -> VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 90 (reasignacion -> VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 90 (reasignacion -> VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 90 (reasignacion -> VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 90 (reasignacion -> VARIABLE IGUAL aritmetica .)
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234

    aritmeticos                    shift and go to state 242

state 393

    (104) valor -> numeros .
    (258) aritmetica -> numeros . aritmeticos numeros
    (260) aritmetica -> numeros . aritmeticos VARIABLE
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD

    VAR             reduce using rule 104 (valor -> numeros .)
    VAL             reduce using rule 104 (valor -> numeros .)
    VARIABLE        reduce using rule 104 (valor -> numeros .)
    PRINTLN         reduce using rule 104 (valor -> numeros .)
    PRINT           reduce using rule 104 (valor -> numeros .)
    READLINE        reduce using rule 104 (valor -> numeros .)
    WHILE           reduce using rule 104 (valor -> numeros .)
    FOR             reduce using rule 104 (valor -> numeros .)
    IF              reduce using rule 104 (valor -> numeros .)
    STRING          reduce using rule 104 (valor -> numeros .)
    INT             reduce using rule 104 (valor -> numeros .)
    LONG            reduce using rule 104 (valor -> numeros .)
    FLOAT           reduce using rule 104 (valor -> numeros .)
    DOUBLE          reduce using rule 104 (valor -> numeros .)
    LLAVE_D         reduce using rule 104 (valor -> numeros .)
    RETURN          reduce using rule 104 (valor -> numeros .)
    CASE            reduce using rule 104 (valor -> numeros .)
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234

    aritmeticos                    shift and go to state 240

state 394

    (91) reasignacion -> VARIABLE PAR_I INT . PAR_D IGUAL valor
    (111) numeros -> INT .

  ! shift/reduce conflict for PAR_D resolved as shift
    PAR_D           shift and go to state 495
    COMA            reduce using rule 111 (numeros -> INT .)

  ! PAR_D           [ reduce using rule 111 (numeros -> INT .) ]


state 395

    (115) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 496


state 396

    (116) funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 116 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 116 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 116 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 116 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 116 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 116 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 116 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 116 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 116 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 116 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 116 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 116 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 116 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)


state 397

    (123) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN valor LLAVE_D
    (124) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN VARIABLE LLAVE_D
    (125) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN returnfun LLAVE_D
    (126) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN aritmetica LLAVE_D
    (127) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . RETURN valor LLAVE_D
    (128) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . RETURN VARIABLE LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . RETURN returnfun LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . RETURN aritmetica LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    RETURN          shift and go to state 498
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    contenido                      shift and go to state 497
    aritmetica                     shift and go to state 147
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 398

    (131) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN tuple LLAVE_D
    (132) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN VARIABLE LLAVE_D
    (133) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN returnfun LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    contenido                      shift and go to state 499
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 399

    (135) dectipoTupla -> DOBLE_PUNTO PAR_I tipos . PAR_D

    PAR_D           shift and go to state 500


state 400

    (136) tipos -> tipo .
    (137) tipos -> tipo . tiposentry
    (138) tiposentry -> . COMA tipo
    (139) tiposentry -> . COMA tipo tiposentry

    PAR_D           reduce using rule 136 (tipos -> tipo .)
    COMA            shift and go to state 502

    tiposentry                     shift and go to state 501

state 401

    (99) tipo -> ARRAYCLASS CORCHETE_I . tipo CORCHETE_D
    (92) tipo -> . CHARCLASS
    (93) tipo -> . STRINGCLASS
    (94) tipo -> . BOOLCLASS
    (95) tipo -> . INTCLASS
    (96) tipo -> . LONGCLASS
    (97) tipo -> . DOUBLECLASS
    (98) tipo -> . FLOATCLASS
    (99) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (100) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 305
    STRINGCLASS     shift and go to state 306
    BOOLCLASS       shift and go to state 307
    INTCLASS        shift and go to state 308
    LONGCLASS       shift and go to state 309
    DOUBLECLASS     shift and go to state 310
    FLOATCLASS      shift and go to state 311
    ARRAYCLASS      shift and go to state 312
    LISTCLASS       shift and go to state 313

    tipo                           shift and go to state 503

state 402

    (100) tipo -> LISTCLASS CORCHETE_I . tipo CORCHETE_D
    (92) tipo -> . CHARCLASS
    (93) tipo -> . STRINGCLASS
    (94) tipo -> . BOOLCLASS
    (95) tipo -> . INTCLASS
    (96) tipo -> . LONGCLASS
    (97) tipo -> . DOUBLECLASS
    (98) tipo -> . FLOATCLASS
    (99) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (100) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 305
    STRINGCLASS     shift and go to state 306
    BOOLCLASS       shift and go to state 307
    INTCLASS        shift and go to state 308
    LONGCLASS       shift and go to state 309
    DOUBLECLASS     shift and go to state 310
    FLOATCLASS      shift and go to state 311
    ARRAYCLASS      shift and go to state 312
    LISTCLASS       shift and go to state 313

    tipo                           shift and go to state 504

state 403

    (121) parametros -> PAR_I . declaracion PAR_D
    (122) parametros -> PAR_I . declaracion PAR_D parametros
    (117) declaracion -> . VARIABLE DOBLE_PUNTO tipo
    (118) declaracion -> . VARIABLE DOBLE_PUNTO tipo IGUAL valor

    VARIABLE        shift and go to state 158

    declaracion                    shift and go to state 157

state 404

    (122) parametros -> PAR_I declaracion PAR_D parametros .

    IGUAL           reduce using rule 122 (parametros -> PAR_I declaracion PAR_D parametros .)
    LLAVE_I         reduce using rule 122 (parametros -> PAR_I declaracion PAR_D parametros .)
    DOBLE_PUNTO     reduce using rule 122 (parametros -> PAR_I declaracion PAR_D parametros .)


state 405

    (117) declaracion -> VARIABLE DOBLE_PUNTO tipo .
    (118) declaracion -> VARIABLE DOBLE_PUNTO tipo . IGUAL valor

    PAR_D           reduce using rule 117 (declaracion -> VARIABLE DOBLE_PUNTO tipo .)
    IGUAL           shift and go to state 505


state 406

    (155) castingcall -> VARIABLE PUNTO castingfun .

    DEF             reduce using rule 155 (castingcall -> VARIABLE PUNTO castingfun .)
    VARIABLE        reduce using rule 155 (castingcall -> VARIABLE PUNTO castingfun .)
    PRINTLN         reduce using rule 155 (castingcall -> VARIABLE PUNTO castingfun .)
    PRINT           reduce using rule 155 (castingcall -> VARIABLE PUNTO castingfun .)
    READLINE        reduce using rule 155 (castingcall -> VARIABLE PUNTO castingfun .)
    VAR             reduce using rule 155 (castingcall -> VARIABLE PUNTO castingfun .)
    VAL             reduce using rule 155 (castingcall -> VARIABLE PUNTO castingfun .)
    WHILE           reduce using rule 155 (castingcall -> VARIABLE PUNTO castingfun .)
    FOR             reduce using rule 155 (castingcall -> VARIABLE PUNTO castingfun .)
    IF              reduce using rule 155 (castingcall -> VARIABLE PUNTO castingfun .)
    STRING          reduce using rule 155 (castingcall -> VARIABLE PUNTO castingfun .)
    $end            reduce using rule 155 (castingcall -> VARIABLE PUNTO castingfun .)
    LLAVE_D         reduce using rule 155 (castingcall -> VARIABLE PUNTO castingfun .)
    INT             reduce using rule 155 (castingcall -> VARIABLE PUNTO castingfun .)
    LONG            reduce using rule 155 (castingcall -> VARIABLE PUNTO castingfun .)
    FLOAT           reduce using rule 155 (castingcall -> VARIABLE PUNTO castingfun .)
    DOUBLE          reduce using rule 155 (castingcall -> VARIABLE PUNTO castingfun .)
    RETURN          reduce using rule 155 (castingcall -> VARIABLE PUNTO castingfun .)
    CASE            reduce using rule 155 (castingcall -> VARIABLE PUNTO castingfun .)


state 407

    (156) castingfun -> TO_INT .

    DEF             reduce using rule 156 (castingfun -> TO_INT .)
    VARIABLE        reduce using rule 156 (castingfun -> TO_INT .)
    PRINTLN         reduce using rule 156 (castingfun -> TO_INT .)
    PRINT           reduce using rule 156 (castingfun -> TO_INT .)
    READLINE        reduce using rule 156 (castingfun -> TO_INT .)
    VAR             reduce using rule 156 (castingfun -> TO_INT .)
    VAL             reduce using rule 156 (castingfun -> TO_INT .)
    WHILE           reduce using rule 156 (castingfun -> TO_INT .)
    FOR             reduce using rule 156 (castingfun -> TO_INT .)
    IF              reduce using rule 156 (castingfun -> TO_INT .)
    STRING          reduce using rule 156 (castingfun -> TO_INT .)
    $end            reduce using rule 156 (castingfun -> TO_INT .)
    LLAVE_D         reduce using rule 156 (castingfun -> TO_INT .)
    INT             reduce using rule 156 (castingfun -> TO_INT .)
    LONG            reduce using rule 156 (castingfun -> TO_INT .)
    FLOAT           reduce using rule 156 (castingfun -> TO_INT .)
    DOUBLE          reduce using rule 156 (castingfun -> TO_INT .)
    RETURN          reduce using rule 156 (castingfun -> TO_INT .)
    CASE            reduce using rule 156 (castingfun -> TO_INT .)


state 408

    (157) castingfun -> TO_DOUBLE .

    DEF             reduce using rule 157 (castingfun -> TO_DOUBLE .)
    VARIABLE        reduce using rule 157 (castingfun -> TO_DOUBLE .)
    PRINTLN         reduce using rule 157 (castingfun -> TO_DOUBLE .)
    PRINT           reduce using rule 157 (castingfun -> TO_DOUBLE .)
    READLINE        reduce using rule 157 (castingfun -> TO_DOUBLE .)
    VAR             reduce using rule 157 (castingfun -> TO_DOUBLE .)
    VAL             reduce using rule 157 (castingfun -> TO_DOUBLE .)
    WHILE           reduce using rule 157 (castingfun -> TO_DOUBLE .)
    FOR             reduce using rule 157 (castingfun -> TO_DOUBLE .)
    IF              reduce using rule 157 (castingfun -> TO_DOUBLE .)
    STRING          reduce using rule 157 (castingfun -> TO_DOUBLE .)
    $end            reduce using rule 157 (castingfun -> TO_DOUBLE .)
    LLAVE_D         reduce using rule 157 (castingfun -> TO_DOUBLE .)
    INT             reduce using rule 157 (castingfun -> TO_DOUBLE .)
    LONG            reduce using rule 157 (castingfun -> TO_DOUBLE .)
    FLOAT           reduce using rule 157 (castingfun -> TO_DOUBLE .)
    DOUBLE          reduce using rule 157 (castingfun -> TO_DOUBLE .)
    RETURN          reduce using rule 157 (castingfun -> TO_DOUBLE .)
    CASE            reduce using rule 157 (castingfun -> TO_DOUBLE .)


state 409

    (158) castingfun -> TO_FLOAT .

    DEF             reduce using rule 158 (castingfun -> TO_FLOAT .)
    VARIABLE        reduce using rule 158 (castingfun -> TO_FLOAT .)
    PRINTLN         reduce using rule 158 (castingfun -> TO_FLOAT .)
    PRINT           reduce using rule 158 (castingfun -> TO_FLOAT .)
    READLINE        reduce using rule 158 (castingfun -> TO_FLOAT .)
    VAR             reduce using rule 158 (castingfun -> TO_FLOAT .)
    VAL             reduce using rule 158 (castingfun -> TO_FLOAT .)
    WHILE           reduce using rule 158 (castingfun -> TO_FLOAT .)
    FOR             reduce using rule 158 (castingfun -> TO_FLOAT .)
    IF              reduce using rule 158 (castingfun -> TO_FLOAT .)
    STRING          reduce using rule 158 (castingfun -> TO_FLOAT .)
    $end            reduce using rule 158 (castingfun -> TO_FLOAT .)
    LLAVE_D         reduce using rule 158 (castingfun -> TO_FLOAT .)
    INT             reduce using rule 158 (castingfun -> TO_FLOAT .)
    LONG            reduce using rule 158 (castingfun -> TO_FLOAT .)
    FLOAT           reduce using rule 158 (castingfun -> TO_FLOAT .)
    DOUBLE          reduce using rule 158 (castingfun -> TO_FLOAT .)
    RETURN          reduce using rule 158 (castingfun -> TO_FLOAT .)
    CASE            reduce using rule 158 (castingfun -> TO_FLOAT .)


state 410

    (159) castingfun -> TO_LONG .

    DEF             reduce using rule 159 (castingfun -> TO_LONG .)
    VARIABLE        reduce using rule 159 (castingfun -> TO_LONG .)
    PRINTLN         reduce using rule 159 (castingfun -> TO_LONG .)
    PRINT           reduce using rule 159 (castingfun -> TO_LONG .)
    READLINE        reduce using rule 159 (castingfun -> TO_LONG .)
    VAR             reduce using rule 159 (castingfun -> TO_LONG .)
    VAL             reduce using rule 159 (castingfun -> TO_LONG .)
    WHILE           reduce using rule 159 (castingfun -> TO_LONG .)
    FOR             reduce using rule 159 (castingfun -> TO_LONG .)
    IF              reduce using rule 159 (castingfun -> TO_LONG .)
    STRING          reduce using rule 159 (castingfun -> TO_LONG .)
    $end            reduce using rule 159 (castingfun -> TO_LONG .)
    LLAVE_D         reduce using rule 159 (castingfun -> TO_LONG .)
    INT             reduce using rule 159 (castingfun -> TO_LONG .)
    LONG            reduce using rule 159 (castingfun -> TO_LONG .)
    FLOAT           reduce using rule 159 (castingfun -> TO_LONG .)
    DOUBLE          reduce using rule 159 (castingfun -> TO_LONG .)
    RETURN          reduce using rule 159 (castingfun -> TO_LONG .)
    CASE            reduce using rule 159 (castingfun -> TO_LONG .)


state 411

    (327) stringCastLong -> STRING PUNTO TO_LONG .

    DEF             reduce using rule 327 (stringCastLong -> STRING PUNTO TO_LONG .)
    VARIABLE        reduce using rule 327 (stringCastLong -> STRING PUNTO TO_LONG .)
    PRINTLN         reduce using rule 327 (stringCastLong -> STRING PUNTO TO_LONG .)
    PRINT           reduce using rule 327 (stringCastLong -> STRING PUNTO TO_LONG .)
    READLINE        reduce using rule 327 (stringCastLong -> STRING PUNTO TO_LONG .)
    VAR             reduce using rule 327 (stringCastLong -> STRING PUNTO TO_LONG .)
    VAL             reduce using rule 327 (stringCastLong -> STRING PUNTO TO_LONG .)
    WHILE           reduce using rule 327 (stringCastLong -> STRING PUNTO TO_LONG .)
    FOR             reduce using rule 327 (stringCastLong -> STRING PUNTO TO_LONG .)
    IF              reduce using rule 327 (stringCastLong -> STRING PUNTO TO_LONG .)
    STRING          reduce using rule 327 (stringCastLong -> STRING PUNTO TO_LONG .)
    $end            reduce using rule 327 (stringCastLong -> STRING PUNTO TO_LONG .)
    LLAVE_D         reduce using rule 327 (stringCastLong -> STRING PUNTO TO_LONG .)
    INT             reduce using rule 327 (stringCastLong -> STRING PUNTO TO_LONG .)
    LONG            reduce using rule 327 (stringCastLong -> STRING PUNTO TO_LONG .)
    FLOAT           reduce using rule 327 (stringCastLong -> STRING PUNTO TO_LONG .)
    DOUBLE          reduce using rule 327 (stringCastLong -> STRING PUNTO TO_LONG .)
    RETURN          reduce using rule 327 (stringCastLong -> STRING PUNTO TO_LONG .)
    CASE            reduce using rule 327 (stringCastLong -> STRING PUNTO TO_LONG .)


state 412

    (326) stringCastInt -> STRING PUNTO TO_INT .

    DEF             reduce using rule 326 (stringCastInt -> STRING PUNTO TO_INT .)
    VARIABLE        reduce using rule 326 (stringCastInt -> STRING PUNTO TO_INT .)
    PRINTLN         reduce using rule 326 (stringCastInt -> STRING PUNTO TO_INT .)
    PRINT           reduce using rule 326 (stringCastInt -> STRING PUNTO TO_INT .)
    READLINE        reduce using rule 326 (stringCastInt -> STRING PUNTO TO_INT .)
    VAR             reduce using rule 326 (stringCastInt -> STRING PUNTO TO_INT .)
    VAL             reduce using rule 326 (stringCastInt -> STRING PUNTO TO_INT .)
    WHILE           reduce using rule 326 (stringCastInt -> STRING PUNTO TO_INT .)
    FOR             reduce using rule 326 (stringCastInt -> STRING PUNTO TO_INT .)
    IF              reduce using rule 326 (stringCastInt -> STRING PUNTO TO_INT .)
    STRING          reduce using rule 326 (stringCastInt -> STRING PUNTO TO_INT .)
    $end            reduce using rule 326 (stringCastInt -> STRING PUNTO TO_INT .)
    LLAVE_D         reduce using rule 326 (stringCastInt -> STRING PUNTO TO_INT .)
    INT             reduce using rule 326 (stringCastInt -> STRING PUNTO TO_INT .)
    LONG            reduce using rule 326 (stringCastInt -> STRING PUNTO TO_INT .)
    FLOAT           reduce using rule 326 (stringCastInt -> STRING PUNTO TO_INT .)
    DOUBLE          reduce using rule 326 (stringCastInt -> STRING PUNTO TO_INT .)
    RETURN          reduce using rule 326 (stringCastInt -> STRING PUNTO TO_INT .)
    CASE            reduce using rule 326 (stringCastInt -> STRING PUNTO TO_INT .)


state 413

    (328) stringCastFloat -> STRING PUNTO TO_FLOAT .

    DEF             reduce using rule 328 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    VARIABLE        reduce using rule 328 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    PRINTLN         reduce using rule 328 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    PRINT           reduce using rule 328 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    READLINE        reduce using rule 328 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    VAR             reduce using rule 328 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    VAL             reduce using rule 328 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    WHILE           reduce using rule 328 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    FOR             reduce using rule 328 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    IF              reduce using rule 328 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    STRING          reduce using rule 328 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    $end            reduce using rule 328 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    LLAVE_D         reduce using rule 328 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    INT             reduce using rule 328 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    LONG            reduce using rule 328 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    FLOAT           reduce using rule 328 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    DOUBLE          reduce using rule 328 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    RETURN          reduce using rule 328 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    CASE            reduce using rule 328 (stringCastFloat -> STRING PUNTO TO_FLOAT .)


state 414

    (329) stringCastDouble -> STRING PUNTO TO_DOUBLE .

    DEF             reduce using rule 329 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    VARIABLE        reduce using rule 329 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    PRINTLN         reduce using rule 329 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    PRINT           reduce using rule 329 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    READLINE        reduce using rule 329 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    VAR             reduce using rule 329 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    VAL             reduce using rule 329 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    WHILE           reduce using rule 329 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    FOR             reduce using rule 329 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    IF              reduce using rule 329 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    STRING          reduce using rule 329 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    $end            reduce using rule 329 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    LLAVE_D         reduce using rule 329 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    INT             reduce using rule 329 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    LONG            reduce using rule 329 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    FLOAT           reduce using rule 329 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    DOUBLE          reduce using rule 329 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    RETURN          reduce using rule 329 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    CASE            reduce using rule 329 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)


state 415

    (160) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 506


state 416

    (171) tuple -> PAR_I valores PAR_D .

    DEF             reduce using rule 171 (tuple -> PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 171 (tuple -> PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 171 (tuple -> PAR_I valores PAR_D .)
    PRINT           reduce using rule 171 (tuple -> PAR_I valores PAR_D .)
    READLINE        reduce using rule 171 (tuple -> PAR_I valores PAR_D .)
    VAR             reduce using rule 171 (tuple -> PAR_I valores PAR_D .)
    VAL             reduce using rule 171 (tuple -> PAR_I valores PAR_D .)
    WHILE           reduce using rule 171 (tuple -> PAR_I valores PAR_D .)
    FOR             reduce using rule 171 (tuple -> PAR_I valores PAR_D .)
    IF              reduce using rule 171 (tuple -> PAR_I valores PAR_D .)
    STRING          reduce using rule 171 (tuple -> PAR_I valores PAR_D .)
    $end            reduce using rule 171 (tuple -> PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 171 (tuple -> PAR_I valores PAR_D .)
    INT             reduce using rule 171 (tuple -> PAR_I valores PAR_D .)
    LONG            reduce using rule 171 (tuple -> PAR_I valores PAR_D .)
    FLOAT           reduce using rule 171 (tuple -> PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 171 (tuple -> PAR_I valores PAR_D .)
    RETURN          reduce using rule 171 (tuple -> PAR_I valores PAR_D .)
    CASE            reduce using rule 171 (tuple -> PAR_I valores PAR_D .)


state 417

    (154) castingcall -> returnCastable PUNTO castingfun .

    DEF             reduce using rule 154 (castingcall -> returnCastable PUNTO castingfun .)
    VARIABLE        reduce using rule 154 (castingcall -> returnCastable PUNTO castingfun .)
    PRINTLN         reduce using rule 154 (castingcall -> returnCastable PUNTO castingfun .)
    PRINT           reduce using rule 154 (castingcall -> returnCastable PUNTO castingfun .)
    READLINE        reduce using rule 154 (castingcall -> returnCastable PUNTO castingfun .)
    VAR             reduce using rule 154 (castingcall -> returnCastable PUNTO castingfun .)
    VAL             reduce using rule 154 (castingcall -> returnCastable PUNTO castingfun .)
    WHILE           reduce using rule 154 (castingcall -> returnCastable PUNTO castingfun .)
    FOR             reduce using rule 154 (castingcall -> returnCastable PUNTO castingfun .)
    IF              reduce using rule 154 (castingcall -> returnCastable PUNTO castingfun .)
    STRING          reduce using rule 154 (castingcall -> returnCastable PUNTO castingfun .)
    $end            reduce using rule 154 (castingcall -> returnCastable PUNTO castingfun .)
    LLAVE_D         reduce using rule 154 (castingcall -> returnCastable PUNTO castingfun .)
    INT             reduce using rule 154 (castingcall -> returnCastable PUNTO castingfun .)
    LONG            reduce using rule 154 (castingcall -> returnCastable PUNTO castingfun .)
    FLOAT           reduce using rule 154 (castingcall -> returnCastable PUNTO castingfun .)
    DOUBLE          reduce using rule 154 (castingcall -> returnCastable PUNTO castingfun .)
    RETURN          reduce using rule 154 (castingcall -> returnCastable PUNTO castingfun .)
    CASE            reduce using rule 154 (castingcall -> returnCastable PUNTO castingfun .)


state 418

    (64) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)


state 419

    (306) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .

    DEF             reduce using rule 306 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VARIABLE        reduce using rule 306 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    PRINTLN         reduce using rule 306 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    PRINT           reduce using rule 306 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    READLINE        reduce using rule 306 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VAR             reduce using rule 306 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VAL             reduce using rule 306 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    WHILE           reduce using rule 306 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    FOR             reduce using rule 306 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    IF              reduce using rule 306 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    STRING          reduce using rule 306 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    $end            reduce using rule 306 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    LLAVE_D         reduce using rule 306 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    INT             reduce using rule 306 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    LONG            reduce using rule 306 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    FLOAT           reduce using rule 306 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    DOUBLE          reduce using rule 306 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    RETURN          reduce using rule 306 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    CASE            reduce using rule 306 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)


state 420

    (309) longvalues -> INT .
    (303) intvalues -> INT .

  ! reduce/reduce conflict for DEF resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for PRINT resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for READLINE resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for VAR resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for VAL resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for WHILE resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for FOR resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for IF resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for STRING resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for $end resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for INT resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for LONG resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for FLOAT resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for RETURN resolved using rule 303 (intvalues -> INT .)
  ! reduce/reduce conflict for CASE resolved using rule 303 (intvalues -> INT .)
    DEF             reduce using rule 303 (intvalues -> INT .)
    VARIABLE        reduce using rule 303 (intvalues -> INT .)
    PRINTLN         reduce using rule 303 (intvalues -> INT .)
    PRINT           reduce using rule 303 (intvalues -> INT .)
    READLINE        reduce using rule 303 (intvalues -> INT .)
    VAR             reduce using rule 303 (intvalues -> INT .)
    VAL             reduce using rule 303 (intvalues -> INT .)
    WHILE           reduce using rule 303 (intvalues -> INT .)
    FOR             reduce using rule 303 (intvalues -> INT .)
    IF              reduce using rule 303 (intvalues -> INT .)
    STRING          reduce using rule 303 (intvalues -> INT .)
    $end            reduce using rule 303 (intvalues -> INT .)
    LLAVE_D         reduce using rule 303 (intvalues -> INT .)
    INT             reduce using rule 303 (intvalues -> INT .)
    LONG            reduce using rule 303 (intvalues -> INT .)
    FLOAT           reduce using rule 303 (intvalues -> INT .)
    DOUBLE          reduce using rule 303 (intvalues -> INT .)
    RETURN          reduce using rule 303 (intvalues -> INT .)
    CASE            reduce using rule 303 (intvalues -> INT .)

  ! DEF             [ reduce using rule 309 (longvalues -> INT .) ]
  ! VARIABLE        [ reduce using rule 309 (longvalues -> INT .) ]
  ! PRINTLN         [ reduce using rule 309 (longvalues -> INT .) ]
  ! PRINT           [ reduce using rule 309 (longvalues -> INT .) ]
  ! READLINE        [ reduce using rule 309 (longvalues -> INT .) ]
  ! VAR             [ reduce using rule 309 (longvalues -> INT .) ]
  ! VAL             [ reduce using rule 309 (longvalues -> INT .) ]
  ! WHILE           [ reduce using rule 309 (longvalues -> INT .) ]
  ! FOR             [ reduce using rule 309 (longvalues -> INT .) ]
  ! IF              [ reduce using rule 309 (longvalues -> INT .) ]
  ! STRING          [ reduce using rule 309 (longvalues -> INT .) ]
  ! $end            [ reduce using rule 309 (longvalues -> INT .) ]
  ! LLAVE_D         [ reduce using rule 309 (longvalues -> INT .) ]
  ! INT             [ reduce using rule 309 (longvalues -> INT .) ]
  ! LONG            [ reduce using rule 309 (longvalues -> INT .) ]
  ! FLOAT           [ reduce using rule 309 (longvalues -> INT .) ]
  ! DOUBLE          [ reduce using rule 309 (longvalues -> INT .) ]
  ! RETURN          [ reduce using rule 309 (longvalues -> INT .) ]
  ! CASE            [ reduce using rule 309 (longvalues -> INT .) ]


state 421

    (310) longvalues -> intvalues .

    DEF             reduce using rule 310 (longvalues -> intvalues .)
    VARIABLE        reduce using rule 310 (longvalues -> intvalues .)
    PRINTLN         reduce using rule 310 (longvalues -> intvalues .)
    PRINT           reduce using rule 310 (longvalues -> intvalues .)
    READLINE        reduce using rule 310 (longvalues -> intvalues .)
    VAR             reduce using rule 310 (longvalues -> intvalues .)
    VAL             reduce using rule 310 (longvalues -> intvalues .)
    WHILE           reduce using rule 310 (longvalues -> intvalues .)
    FOR             reduce using rule 310 (longvalues -> intvalues .)
    IF              reduce using rule 310 (longvalues -> intvalues .)
    STRING          reduce using rule 310 (longvalues -> intvalues .)
    $end            reduce using rule 310 (longvalues -> intvalues .)
    LLAVE_D         reduce using rule 310 (longvalues -> intvalues .)
    INT             reduce using rule 310 (longvalues -> intvalues .)
    LONG            reduce using rule 310 (longvalues -> intvalues .)
    FLOAT           reduce using rule 310 (longvalues -> intvalues .)
    DOUBLE          reduce using rule 310 (longvalues -> intvalues .)
    RETURN          reduce using rule 310 (longvalues -> intvalues .)
    CASE            reduce using rule 310 (longvalues -> intvalues .)


state 422

    (327) stringCastLong -> STRING . PUNTO TO_LONG
    (326) stringCastInt -> STRING . PUNTO TO_INT

    PUNTO           shift and go to state 507


state 423

    (300) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .

    DEF             reduce using rule 300 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VARIABLE        reduce using rule 300 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    PRINTLN         reduce using rule 300 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    PRINT           reduce using rule 300 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    READLINE        reduce using rule 300 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VAR             reduce using rule 300 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VAL             reduce using rule 300 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    WHILE           reduce using rule 300 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    FOR             reduce using rule 300 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    IF              reduce using rule 300 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    STRING          reduce using rule 300 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    $end            reduce using rule 300 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    LLAVE_D         reduce using rule 300 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    INT             reduce using rule 300 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    LONG            reduce using rule 300 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    FLOAT           reduce using rule 300 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    DOUBLE          reduce using rule 300 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    RETURN          reduce using rule 300 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    CASE            reduce using rule 300 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)


state 424

    (303) intvalues -> INT .

    DEF             reduce using rule 303 (intvalues -> INT .)
    VARIABLE        reduce using rule 303 (intvalues -> INT .)
    PRINTLN         reduce using rule 303 (intvalues -> INT .)
    PRINT           reduce using rule 303 (intvalues -> INT .)
    READLINE        reduce using rule 303 (intvalues -> INT .)
    VAR             reduce using rule 303 (intvalues -> INT .)
    VAL             reduce using rule 303 (intvalues -> INT .)
    WHILE           reduce using rule 303 (intvalues -> INT .)
    FOR             reduce using rule 303 (intvalues -> INT .)
    IF              reduce using rule 303 (intvalues -> INT .)
    STRING          reduce using rule 303 (intvalues -> INT .)
    $end            reduce using rule 303 (intvalues -> INT .)
    LLAVE_D         reduce using rule 303 (intvalues -> INT .)
    INT             reduce using rule 303 (intvalues -> INT .)
    LONG            reduce using rule 303 (intvalues -> INT .)
    FLOAT           reduce using rule 303 (intvalues -> INT .)
    DOUBLE          reduce using rule 303 (intvalues -> INT .)
    RETURN          reduce using rule 303 (intvalues -> INT .)
    CASE            reduce using rule 303 (intvalues -> INT .)


state 425

    (326) stringCastInt -> STRING . PUNTO TO_INT

    PUNTO           shift and go to state 508


state 426

    (66) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .

    DEF             reduce using rule 66 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 66 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 66 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 66 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 66 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 66 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 66 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 66 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 66 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    IF              reduce using rule 66 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 66 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    $end            reduce using rule 66 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 66 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    INT             reduce using rule 66 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 66 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 66 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 66 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 66 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 66 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)


state 427

    (313) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .

    DEF             reduce using rule 313 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VARIABLE        reduce using rule 313 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    PRINTLN         reduce using rule 313 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    PRINT           reduce using rule 313 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    READLINE        reduce using rule 313 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VAR             reduce using rule 313 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VAL             reduce using rule 313 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    WHILE           reduce using rule 313 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    FOR             reduce using rule 313 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    IF              reduce using rule 313 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    STRING          reduce using rule 313 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    $end            reduce using rule 313 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    LLAVE_D         reduce using rule 313 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    INT             reduce using rule 313 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    LONG            reduce using rule 313 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    FLOAT           reduce using rule 313 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    DOUBLE          reduce using rule 313 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    RETURN          reduce using rule 313 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    CASE            reduce using rule 313 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)


state 428

    (316) floatvalues -> FLOAT .

    DEF             reduce using rule 316 (floatvalues -> FLOAT .)
    VARIABLE        reduce using rule 316 (floatvalues -> FLOAT .)
    PRINTLN         reduce using rule 316 (floatvalues -> FLOAT .)
    PRINT           reduce using rule 316 (floatvalues -> FLOAT .)
    READLINE        reduce using rule 316 (floatvalues -> FLOAT .)
    VAR             reduce using rule 316 (floatvalues -> FLOAT .)
    VAL             reduce using rule 316 (floatvalues -> FLOAT .)
    WHILE           reduce using rule 316 (floatvalues -> FLOAT .)
    FOR             reduce using rule 316 (floatvalues -> FLOAT .)
    IF              reduce using rule 316 (floatvalues -> FLOAT .)
    STRING          reduce using rule 316 (floatvalues -> FLOAT .)
    $end            reduce using rule 316 (floatvalues -> FLOAT .)
    LLAVE_D         reduce using rule 316 (floatvalues -> FLOAT .)
    INT             reduce using rule 316 (floatvalues -> FLOAT .)
    LONG            reduce using rule 316 (floatvalues -> FLOAT .)
    FLOAT           reduce using rule 316 (floatvalues -> FLOAT .)
    DOUBLE          reduce using rule 316 (floatvalues -> FLOAT .)
    RETURN          reduce using rule 316 (floatvalues -> FLOAT .)
    CASE            reduce using rule 316 (floatvalues -> FLOAT .)


state 429

    (317) floatvalues -> longvalues .

    DEF             reduce using rule 317 (floatvalues -> longvalues .)
    VARIABLE        reduce using rule 317 (floatvalues -> longvalues .)
    PRINTLN         reduce using rule 317 (floatvalues -> longvalues .)
    PRINT           reduce using rule 317 (floatvalues -> longvalues .)
    READLINE        reduce using rule 317 (floatvalues -> longvalues .)
    VAR             reduce using rule 317 (floatvalues -> longvalues .)
    VAL             reduce using rule 317 (floatvalues -> longvalues .)
    WHILE           reduce using rule 317 (floatvalues -> longvalues .)
    FOR             reduce using rule 317 (floatvalues -> longvalues .)
    IF              reduce using rule 317 (floatvalues -> longvalues .)
    STRING          reduce using rule 317 (floatvalues -> longvalues .)
    $end            reduce using rule 317 (floatvalues -> longvalues .)
    LLAVE_D         reduce using rule 317 (floatvalues -> longvalues .)
    INT             reduce using rule 317 (floatvalues -> longvalues .)
    LONG            reduce using rule 317 (floatvalues -> longvalues .)
    FLOAT           reduce using rule 317 (floatvalues -> longvalues .)
    DOUBLE          reduce using rule 317 (floatvalues -> longvalues .)
    RETURN          reduce using rule 317 (floatvalues -> longvalues .)
    CASE            reduce using rule 317 (floatvalues -> longvalues .)


state 430

    (328) stringCastFloat -> STRING . PUNTO TO_FLOAT
    (327) stringCastLong -> STRING . PUNTO TO_LONG
    (326) stringCastInt -> STRING . PUNTO TO_INT

    PUNTO           shift and go to state 509


state 431

    (68) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .

    DEF             reduce using rule 68 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 68 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 68 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 68 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 68 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAR             reduce using rule 68 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAL             reduce using rule 68 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 68 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FOR             reduce using rule 68 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    IF              reduce using rule 68 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    STRING          reduce using rule 68 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    $end            reduce using rule 68 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 68 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    INT             reduce using rule 68 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LONG            reduce using rule 68 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 68 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 68 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 68 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    CASE            reduce using rule 68 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)


state 432

    (320) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .

    DEF             reduce using rule 320 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VARIABLE        reduce using rule 320 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    PRINTLN         reduce using rule 320 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    PRINT           reduce using rule 320 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    READLINE        reduce using rule 320 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VAR             reduce using rule 320 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VAL             reduce using rule 320 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    WHILE           reduce using rule 320 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    FOR             reduce using rule 320 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    IF              reduce using rule 320 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    STRING          reduce using rule 320 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    $end            reduce using rule 320 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    LLAVE_D         reduce using rule 320 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    INT             reduce using rule 320 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    LONG            reduce using rule 320 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    FLOAT           reduce using rule 320 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    DOUBLE          reduce using rule 320 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    RETURN          reduce using rule 320 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    CASE            reduce using rule 320 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)


state 433

    (323) doublevalues -> DOUBLE .

    DEF             reduce using rule 323 (doublevalues -> DOUBLE .)
    VARIABLE        reduce using rule 323 (doublevalues -> DOUBLE .)
    PRINTLN         reduce using rule 323 (doublevalues -> DOUBLE .)
    PRINT           reduce using rule 323 (doublevalues -> DOUBLE .)
    READLINE        reduce using rule 323 (doublevalues -> DOUBLE .)
    VAR             reduce using rule 323 (doublevalues -> DOUBLE .)
    VAL             reduce using rule 323 (doublevalues -> DOUBLE .)
    WHILE           reduce using rule 323 (doublevalues -> DOUBLE .)
    FOR             reduce using rule 323 (doublevalues -> DOUBLE .)
    IF              reduce using rule 323 (doublevalues -> DOUBLE .)
    STRING          reduce using rule 323 (doublevalues -> DOUBLE .)
    $end            reduce using rule 323 (doublevalues -> DOUBLE .)
    LLAVE_D         reduce using rule 323 (doublevalues -> DOUBLE .)
    INT             reduce using rule 323 (doublevalues -> DOUBLE .)
    LONG            reduce using rule 323 (doublevalues -> DOUBLE .)
    FLOAT           reduce using rule 323 (doublevalues -> DOUBLE .)
    DOUBLE          reduce using rule 323 (doublevalues -> DOUBLE .)
    RETURN          reduce using rule 323 (doublevalues -> DOUBLE .)
    CASE            reduce using rule 323 (doublevalues -> DOUBLE .)


state 434

    (324) doublevalues -> floatvalues .

    DEF             reduce using rule 324 (doublevalues -> floatvalues .)
    VARIABLE        reduce using rule 324 (doublevalues -> floatvalues .)
    PRINTLN         reduce using rule 324 (doublevalues -> floatvalues .)
    PRINT           reduce using rule 324 (doublevalues -> floatvalues .)
    READLINE        reduce using rule 324 (doublevalues -> floatvalues .)
    VAR             reduce using rule 324 (doublevalues -> floatvalues .)
    VAL             reduce using rule 324 (doublevalues -> floatvalues .)
    WHILE           reduce using rule 324 (doublevalues -> floatvalues .)
    FOR             reduce using rule 324 (doublevalues -> floatvalues .)
    IF              reduce using rule 324 (doublevalues -> floatvalues .)
    STRING          reduce using rule 324 (doublevalues -> floatvalues .)
    $end            reduce using rule 324 (doublevalues -> floatvalues .)
    LLAVE_D         reduce using rule 324 (doublevalues -> floatvalues .)
    INT             reduce using rule 324 (doublevalues -> floatvalues .)
    LONG            reduce using rule 324 (doublevalues -> floatvalues .)
    FLOAT           reduce using rule 324 (doublevalues -> floatvalues .)
    DOUBLE          reduce using rule 324 (doublevalues -> floatvalues .)
    RETURN          reduce using rule 324 (doublevalues -> floatvalues .)
    CASE            reduce using rule 324 (doublevalues -> floatvalues .)


state 435

    (329) stringCastDouble -> STRING . PUNTO TO_DOUBLE
    (328) stringCastFloat -> STRING . PUNTO TO_FLOAT
    (327) stringCastLong -> STRING . PUNTO TO_LONG
    (326) stringCastInt -> STRING . PUNTO TO_INT

    PUNTO           shift and go to state 510


state 436

    (74) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 74 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 74 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 74 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 74 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 74 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 74 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 74 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 74 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 74 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 74 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 74 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 74 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 74 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 74 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 74 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 74 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 74 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 74 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 74 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)


state 437

    (71) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .

    DEF             reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VARIABLE        reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINTLN         reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINT           reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    READLINE        reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAR             reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAL             reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    WHILE           reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FOR             reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    IF              reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    STRING          reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    $end            reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LLAVE_D         reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    INT             reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LONG            reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FLOAT           reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    DOUBLE          reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    RETURN          reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    CASE            reduce using rule 71 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)


state 438

    (80) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .

    DEF             reduce using rule 80 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 80 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 80 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 80 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 80 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 80 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 80 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 80 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 80 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    IF              reduce using rule 80 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 80 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    $end            reduce using rule 80 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 80 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    INT             reduce using rule 80 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 80 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 80 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 80 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 80 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 80 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)


state 439

    (77) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .

    DEF             reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VARIABLE        reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINTLN         reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINT           reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    READLINE        reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAR             reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAL             reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    WHILE           reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FOR             reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    IF              reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    STRING          reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    $end            reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LLAVE_D         reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    INT             reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LONG            reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FLOAT           reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    DOUBLE          reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    RETURN          reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    CASE            reduce using rule 77 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)


state 440

    (86) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .

    DEF             reduce using rule 86 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 86 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 86 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 86 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 86 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 86 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 86 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 86 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 86 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    IF              reduce using rule 86 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 86 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    $end            reduce using rule 86 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 86 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    INT             reduce using rule 86 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 86 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 86 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 86 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 86 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 86 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)


state 441

    (83) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .

    DEF             reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VARIABLE        reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINTLN         reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINT           reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    READLINE        reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAR             reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAL             reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    WHILE           reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FOR             reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    IF              reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    STRING          reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    $end            reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LLAVE_D         reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    INT             reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LONG            reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FLOAT           reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    DOUBLE          reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    RETURN          reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    CASE            reduce using rule 83 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)


state 442

    (161) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 511


state 443

    (269) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS . CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (95) tipo -> INTCLASS .

  ! shift/reduce conflict for CORCHETE_D resolved as shift
    CORCHETE_D      shift and go to state 512

  ! CORCHETE_D      [ reduce using rule 95 (tipo -> INTCLASS .) ]


state 444

    (270) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS . CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (97) tipo -> DOUBLECLASS .

  ! shift/reduce conflict for CORCHETE_D resolved as shift
    CORCHETE_D      shift and go to state 513

  ! CORCHETE_D      [ reduce using rule 97 (tipo -> DOUBLECLASS .) ]


state 445

    (279) dectupla -> PAR_I STRINGCLASS COMA . INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
    (280) dectupla -> PAR_I STRINGCLASS COMA . LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
    (281) dectupla -> PAR_I STRINGCLASS COMA . DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
    (282) dectupla -> PAR_I STRINGCLASS COMA . FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D

    INTCLASS        shift and go to state 514
    LONGCLASS       shift and go to state 515
    DOUBLECLASS     shift and go to state 516
    FLOATCLASS      shift and go to state 517


state 446

    (295) dectupla -> PAR_I INTCLASS COMA . STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
    (296) dectupla -> PAR_I INTCLASS COMA . LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
    (297) dectupla -> PAR_I INTCLASS COMA . DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
    (298) dectupla -> PAR_I INTCLASS COMA . FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    STRINGCLASS     shift and go to state 518
    LONGCLASS       shift and go to state 519
    DOUBLECLASS     shift and go to state 520
    FLOATCLASS      shift and go to state 521


state 447

    (291) dectupla -> PAR_I LONGCLASS COMA . STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
    (292) dectupla -> PAR_I LONGCLASS COMA . INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
    (293) dectupla -> PAR_I LONGCLASS COMA . DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
    (294) dectupla -> PAR_I LONGCLASS COMA . FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D

    STRINGCLASS     shift and go to state 522
    INTCLASS        shift and go to state 523
    DOUBLECLASS     shift and go to state 524
    FLOATCLASS      shift and go to state 525


state 448

    (287) dectupla -> PAR_I DOUBLECLASS COMA . STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
    (288) dectupla -> PAR_I DOUBLECLASS COMA . LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
    (289) dectupla -> PAR_I DOUBLECLASS COMA . FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
    (290) dectupla -> PAR_I DOUBLECLASS COMA . INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D

    STRINGCLASS     shift and go to state 526
    LONGCLASS       shift and go to state 527
    FLOATCLASS      shift and go to state 528
    INTCLASS        shift and go to state 529


state 449

    (283) dectupla -> PAR_I FLOATCLASS COMA . STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
    (284) dectupla -> PAR_I FLOATCLASS COMA . LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
    (285) dectupla -> PAR_I FLOATCLASS COMA . DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
    (286) dectupla -> PAR_I FLOATCLASS COMA . INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D

    STRINGCLASS     shift and go to state 530
    LONGCLASS       shift and go to state 531
    DOUBLECLASS     shift and go to state 532
    INTCLASS        shift and go to state 533


state 450

    (162) array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 534


state 451

    (166) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 535


state 452

    (65) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)


state 453

    (308) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .

    DEF             reduce using rule 308 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VARIABLE        reduce using rule 308 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    PRINTLN         reduce using rule 308 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    PRINT           reduce using rule 308 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    READLINE        reduce using rule 308 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VAR             reduce using rule 308 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VAL             reduce using rule 308 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    WHILE           reduce using rule 308 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    FOR             reduce using rule 308 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    IF              reduce using rule 308 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    STRING          reduce using rule 308 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    $end            reduce using rule 308 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    LLAVE_D         reduce using rule 308 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    INT             reduce using rule 308 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    LONG            reduce using rule 308 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    FLOAT           reduce using rule 308 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    DOUBLE          reduce using rule 308 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    RETURN          reduce using rule 308 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    CASE            reduce using rule 308 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)


state 454

    (302) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .

    DEF             reduce using rule 302 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VARIABLE        reduce using rule 302 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    PRINTLN         reduce using rule 302 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    PRINT           reduce using rule 302 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    READLINE        reduce using rule 302 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VAR             reduce using rule 302 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VAL             reduce using rule 302 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    WHILE           reduce using rule 302 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    FOR             reduce using rule 302 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    IF              reduce using rule 302 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    STRING          reduce using rule 302 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    $end            reduce using rule 302 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    LLAVE_D         reduce using rule 302 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    INT             reduce using rule 302 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    LONG            reduce using rule 302 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    FLOAT           reduce using rule 302 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    DOUBLE          reduce using rule 302 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    RETURN          reduce using rule 302 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    CASE            reduce using rule 302 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)


state 455

    (67) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .

    DEF             reduce using rule 67 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 67 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 67 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 67 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 67 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 67 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 67 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 67 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 67 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    IF              reduce using rule 67 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 67 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    $end            reduce using rule 67 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 67 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    INT             reduce using rule 67 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 67 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 67 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 67 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 67 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 67 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)


state 456

    (315) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .

    DEF             reduce using rule 315 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VARIABLE        reduce using rule 315 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    PRINTLN         reduce using rule 315 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    PRINT           reduce using rule 315 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    READLINE        reduce using rule 315 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VAR             reduce using rule 315 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VAL             reduce using rule 315 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    WHILE           reduce using rule 315 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    FOR             reduce using rule 315 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    IF              reduce using rule 315 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    STRING          reduce using rule 315 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    $end            reduce using rule 315 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    LLAVE_D         reduce using rule 315 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    INT             reduce using rule 315 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    LONG            reduce using rule 315 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    FLOAT           reduce using rule 315 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    DOUBLE          reduce using rule 315 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    RETURN          reduce using rule 315 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    CASE            reduce using rule 315 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)


state 457

    (69) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .

    DEF             reduce using rule 69 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 69 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 69 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 69 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 69 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAR             reduce using rule 69 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAL             reduce using rule 69 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 69 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FOR             reduce using rule 69 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    IF              reduce using rule 69 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    STRING          reduce using rule 69 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    $end            reduce using rule 69 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 69 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    INT             reduce using rule 69 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LONG            reduce using rule 69 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 69 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 69 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 69 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    CASE            reduce using rule 69 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)


state 458

    (322) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .

    DEF             reduce using rule 322 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VARIABLE        reduce using rule 322 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    PRINTLN         reduce using rule 322 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    PRINT           reduce using rule 322 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    READLINE        reduce using rule 322 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VAR             reduce using rule 322 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VAL             reduce using rule 322 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    WHILE           reduce using rule 322 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    FOR             reduce using rule 322 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    IF              reduce using rule 322 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    STRING          reduce using rule 322 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    $end            reduce using rule 322 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    LLAVE_D         reduce using rule 322 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    INT             reduce using rule 322 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    LONG            reduce using rule 322 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    FLOAT           reduce using rule 322 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    DOUBLE          reduce using rule 322 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    RETURN          reduce using rule 322 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    CASE            reduce using rule 322 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)


state 459

    (75) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 75 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 75 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 75 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 75 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 75 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 75 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 75 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 75 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 75 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 75 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 75 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 75 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 75 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 75 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 75 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 75 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 75 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 75 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 75 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)


state 460

    (73) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .

    DEF             reduce using rule 73 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VARIABLE        reduce using rule 73 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINTLN         reduce using rule 73 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINT           reduce using rule 73 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    READLINE        reduce using rule 73 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAR             reduce using rule 73 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAL             reduce using rule 73 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    WHILE           reduce using rule 73 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FOR             reduce using rule 73 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    IF              reduce using rule 73 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    STRING          reduce using rule 73 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    $end            reduce using rule 73 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LLAVE_D         reduce using rule 73 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    INT             reduce using rule 73 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LONG            reduce using rule 73 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FLOAT           reduce using rule 73 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    DOUBLE          reduce using rule 73 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    RETURN          reduce using rule 73 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    CASE            reduce using rule 73 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)


state 461

    (81) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .

    DEF             reduce using rule 81 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 81 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 81 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 81 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 81 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 81 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 81 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 81 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 81 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    IF              reduce using rule 81 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 81 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    $end            reduce using rule 81 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 81 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    INT             reduce using rule 81 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 81 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 81 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 81 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 81 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 81 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)


state 462

    (79) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .

    DEF             reduce using rule 79 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VARIABLE        reduce using rule 79 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINTLN         reduce using rule 79 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINT           reduce using rule 79 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    READLINE        reduce using rule 79 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAR             reduce using rule 79 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAL             reduce using rule 79 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    WHILE           reduce using rule 79 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FOR             reduce using rule 79 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    IF              reduce using rule 79 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    STRING          reduce using rule 79 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    $end            reduce using rule 79 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LLAVE_D         reduce using rule 79 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    INT             reduce using rule 79 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LONG            reduce using rule 79 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FLOAT           reduce using rule 79 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    DOUBLE          reduce using rule 79 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    RETURN          reduce using rule 79 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    CASE            reduce using rule 79 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)


state 463

    (87) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .

    DEF             reduce using rule 87 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 87 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 87 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 87 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 87 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 87 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 87 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 87 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 87 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    IF              reduce using rule 87 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 87 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    $end            reduce using rule 87 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 87 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    INT             reduce using rule 87 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 87 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 87 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 87 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 87 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 87 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)


state 464

    (85) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .

    DEF             reduce using rule 85 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VARIABLE        reduce using rule 85 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINTLN         reduce using rule 85 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINT           reduce using rule 85 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    READLINE        reduce using rule 85 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAR             reduce using rule 85 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAL             reduce using rule 85 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    WHILE           reduce using rule 85 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FOR             reduce using rule 85 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    IF              reduce using rule 85 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    STRING          reduce using rule 85 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    $end            reduce using rule 85 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LLAVE_D         reduce using rule 85 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    INT             reduce using rule 85 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LONG            reduce using rule 85 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FLOAT           reduce using rule 85 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    DOUBLE          reduce using rule 85 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    RETURN          reduce using rule 85 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    CASE            reduce using rule 85 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)


state 465

    (163) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 536


state 466

    (167) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo . CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo . CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    CORCHETE_D      shift and go to state 537


state 467

    (174) while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 538


state 468

    (175) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 539


state 469

    (179) for -> FOR PAR_I VAR VARIABLE ITERATOR INT . TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> FOR PAR_I VAR VARIABLE ITERATOR INT . UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    TO              shift and go to state 540
    UNTIL           shift and go to state 541


state 470

    (176) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 542


state 471

    (177) for -> FOR PAR_I VARIABLE ITERATOR INT TO . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 543


state 472

    (178) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 544


state 473

    (220) if -> IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 545


state 474

    (275) startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .

    DEF             reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    VARIABLE        reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    PRINTLN         reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    PRINT           reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    READLINE        reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    VAR             reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    VAL             reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    WHILE           reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    FOR             reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    IF              reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    STRING          reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    $end            reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    LLAVE_D         reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    COMA            reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    PAR_D           reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    MAS             reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    IGUAL_COMPARACION reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    DIFERENTE       reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    MAYOR           reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    MENOR           reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    AND             reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    OR              reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    NOT             reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    INT             reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    LONG            reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    FLOAT           reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    DOUBLE          reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    RETURN          reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    CASE            reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    FUNCION_FLECHA  reduce using rule 275 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)


state 475

    (276) startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA . INT PAR_D

    INT             shift and go to state 546


state 476

    (217) defcase -> CASE SUBGUION FUNCION_FLECHA . codeBlock
    (218) codeBlock -> . contenidoLine
    (219) codeBlock -> . LLAVE_I contenido LLAVE_D
    (44) contenidoLine -> . asignacion
    (45) contenidoLine -> . reasignacion
    (46) contenidoLine -> . funcall
    (47) contenidoLine -> . impresion
    (48) contenidoLine -> . entrada
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    LLAVE_I         shift and go to state 479
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 485
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 547
    contenidoLine                  shift and go to state 478
    asignacion                     shift and go to state 480
    reasignacion                   shift and go to state 481
    funcall                        shift and go to state 482
    impresion                      shift and go to state 483
    entrada                        shift and go to state 484
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 477

    (189) caseInt -> CASE INT FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 189 (caseInt -> CASE INT FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 189 (caseInt -> CASE INT FUNCION_FLECHA codeBlock .)


state 478

    (218) codeBlock -> contenidoLine .

    CASE            reduce using rule 218 (codeBlock -> contenidoLine .)
    LLAVE_D         reduce using rule 218 (codeBlock -> contenidoLine .)


state 479

    (219) codeBlock -> LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    contenido                      shift and go to state 548
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 480

    (44) contenidoLine -> asignacion .

    CASE            reduce using rule 44 (contenidoLine -> asignacion .)
    LLAVE_D         reduce using rule 44 (contenidoLine -> asignacion .)


state 481

    (45) contenidoLine -> reasignacion .

    CASE            reduce using rule 45 (contenidoLine -> reasignacion .)
    LLAVE_D         reduce using rule 45 (contenidoLine -> reasignacion .)


state 482

    (46) contenidoLine -> funcall .

    CASE            reduce using rule 46 (contenidoLine -> funcall .)
    LLAVE_D         reduce using rule 46 (contenidoLine -> funcall .)


state 483

    (47) contenidoLine -> impresion .

    CASE            reduce using rule 47 (contenidoLine -> impresion .)
    LLAVE_D         reduce using rule 47 (contenidoLine -> impresion .)


state 484

    (48) contenidoLine -> entrada .

    CASE            reduce using rule 48 (contenidoLine -> entrada .)
    LLAVE_D         reduce using rule 48 (contenidoLine -> entrada .)


state 485

    (88) reasignacion -> VARIABLE . IGUAL valor
    (89) reasignacion -> VARIABLE . IGUAL returnfun
    (90) reasignacion -> VARIABLE . IGUAL aritmetica
    (91) reasignacion -> VARIABLE . PAR_I INT PAR_D IGUAL valor
    (145) funcall -> VARIABLE . varparen
    (146) varparen -> . PAR_I valores PAR_D
    (147) varparen -> . PAR_I PAR_D
    (148) varparen -> . varparen PAR_I valores PAR_D
    (149) varparen -> . varparen PAR_I PAR_D

    IGUAL           shift and go to state 297
    PAR_I           shift and go to state 298

    varparen                       shift and go to state 38

state 486

    (193) caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 193 (caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 193 (caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .)


state 487

    (197) caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 197 (caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 197 (caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .)


state 488

    (201) caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 201 (caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 201 (caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .)


state 489

    (205) caseStr -> CASE STRING FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 205 (caseStr -> CASE STRING FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 205 (caseStr -> CASE STRING FUNCION_FLECHA codeBlock .)


state 490

    (209) caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 209 (caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 209 (caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .)


state 491

    (213) caseBool -> CASE booleanos FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 213 (caseBool -> CASE booleanos FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 213 (caseBool -> CASE booleanos FUNCION_FLECHA codeBlock .)


state 492

    (4) io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO . READLINE

    READLINE        shift and go to state 549


state 493

    (223) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (224) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D elseif
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    contenido                      shift and go to state 550
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 494

    (106) valor -> VARIABLE PAR_I . VARIABLE PAR_D
    (107) valor -> VARIABLE PAR_I . INT PAR_D
    (146) varparen -> PAR_I . valores PAR_D
    (147) varparen -> PAR_I . PAR_D
    (169) valores -> . valor
    (170) valores -> . valor COMA valores
    (101) valor -> . STRING
    (102) valor -> . CHAR
    (103) valor -> . VARIABLE
    (104) valor -> . numeros
    (105) valor -> . booleanos
    (106) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (107) valor -> . VARIABLE PAR_I INT PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    VARIABLE        shift and go to state 551
    INT             shift and go to state 552
    PAR_D           shift and go to state 67
    STRING          shift and go to state 69
    CHAR            shift and go to state 70
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79

    valores                        shift and go to state 66
    valor                          shift and go to state 68
    numeros                        shift and go to state 72
    booleanos                      shift and go to state 73
    startsWith                     shift and go to state 80

state 495

    (91) reasignacion -> VARIABLE PAR_I INT PAR_D . IGUAL valor

    IGUAL           shift and go to state 553


state 496

    (115) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 115 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 115 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 115 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 115 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 115 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 115 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 115 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 115 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 115 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 115 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 115 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 115 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 115 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)


state 497

    (123) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN valor LLAVE_D
    (124) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN VARIABLE LLAVE_D
    (125) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN returnfun LLAVE_D
    (126) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN aritmetica LLAVE_D

    RETURN          shift and go to state 554


state 498

    (127) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN . valor LLAVE_D
    (128) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN . VARIABLE LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN . returnfun LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN . aritmetica LLAVE_D
    (101) valor -> . STRING
    (102) valor -> . CHAR
    (103) valor -> . VARIABLE
    (104) valor -> . numeros
    (105) valor -> . booleanos
    (106) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (107) valor -> . VARIABLE PAR_I INT PAR_D
    (150) returnfun -> . returnCastable
    (151) returnfun -> . castingcall
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (152) returnCastable -> . entrada
    (153) returnCastable -> . funcall
    (154) castingcall -> . returnCastable PUNTO castingfun
    (155) castingcall -> . VARIABLE PUNTO castingfun
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (145) funcall -> . VARIABLE varparen

    VARIABLE        shift and go to state 555
    STRING          shift and go to state 69
    CHAR            shift and go to state 70
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79
    READLINE        shift and go to state 19

    valor                          shift and go to state 556
    returnfun                      shift and go to state 557
    aritmetica                     shift and go to state 558
    numeros                        shift and go to state 393
    booleanos                      shift and go to state 73
    returnCastable                 shift and go to state 175
    castingcall                    shift and go to state 176
    startsWith                     shift and go to state 80
    entrada                        shift and go to state 184
    funcall                        shift and go to state 185

state 499

    (131) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN tuple LLAVE_D
    (132) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN VARIABLE LLAVE_D
    (133) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN returnfun LLAVE_D

    RETURN          shift and go to state 559


state 500

    (135) dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D .

    IGUAL           reduce using rule 135 (dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D .)


state 501

    (137) tipos -> tipo tiposentry .

    PAR_D           reduce using rule 137 (tipos -> tipo tiposentry .)


state 502

    (138) tiposentry -> COMA . tipo
    (139) tiposentry -> COMA . tipo tiposentry
    (92) tipo -> . CHARCLASS
    (93) tipo -> . STRINGCLASS
    (94) tipo -> . BOOLCLASS
    (95) tipo -> . INTCLASS
    (96) tipo -> . LONGCLASS
    (97) tipo -> . DOUBLECLASS
    (98) tipo -> . FLOATCLASS
    (99) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (100) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 305
    STRINGCLASS     shift and go to state 306
    BOOLCLASS       shift and go to state 307
    INTCLASS        shift and go to state 308
    LONGCLASS       shift and go to state 309
    DOUBLECLASS     shift and go to state 310
    FLOATCLASS      shift and go to state 311
    ARRAYCLASS      shift and go to state 312
    LISTCLASS       shift and go to state 313

    tipo                           shift and go to state 560

state 503

    (99) tipo -> ARRAYCLASS CORCHETE_I tipo . CORCHETE_D

    CORCHETE_D      shift and go to state 561


state 504

    (100) tipo -> LISTCLASS CORCHETE_I tipo . CORCHETE_D

    CORCHETE_D      shift and go to state 562


state 505

    (118) declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL . valor
    (101) valor -> . STRING
    (102) valor -> . CHAR
    (103) valor -> . VARIABLE
    (104) valor -> . numeros
    (105) valor -> . booleanos
    (106) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (107) valor -> . VARIABLE PAR_I INT PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 69
    CHAR            shift and go to state 70
    VARIABLE        shift and go to state 71
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79

    valor                          shift and go to state 563
    numeros                        shift and go to state 72
    booleanos                      shift and go to state 73
    startsWith                     shift and go to state 80

state 506

    (160) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 160 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 160 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 160 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 160 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 160 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 160 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 160 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 160 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 160 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 160 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    STRING          reduce using rule 160 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 160 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 160 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 160 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 160 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 160 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 160 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 160 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 160 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 507

    (327) stringCastLong -> STRING PUNTO . TO_LONG
    (326) stringCastInt -> STRING PUNTO . TO_INT

    TO_LONG         shift and go to state 411
    TO_INT          shift and go to state 412


state 508

    (326) stringCastInt -> STRING PUNTO . TO_INT

    TO_INT          shift and go to state 412


state 509

    (328) stringCastFloat -> STRING PUNTO . TO_FLOAT
    (327) stringCastLong -> STRING PUNTO . TO_LONG
    (326) stringCastInt -> STRING PUNTO . TO_INT

    TO_FLOAT        shift and go to state 413
    TO_LONG         shift and go to state 411
    TO_INT          shift and go to state 412


state 510

    (329) stringCastDouble -> STRING PUNTO . TO_DOUBLE
    (328) stringCastFloat -> STRING PUNTO . TO_FLOAT
    (327) stringCastLong -> STRING PUNTO . TO_LONG
    (326) stringCastInt -> STRING PUNTO . TO_INT

    TO_DOUBLE       shift and go to state 414
    TO_FLOAT        shift and go to state 413
    TO_LONG         shift and go to state 411
    TO_INT          shift and go to state 412


state 511

    (161) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    IGUAL           shift and go to state 564


state 512

    (269) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D . IGUAL ARRAYCLASS PAR_I valoresInt PAR_D

    IGUAL           shift and go to state 565


state 513

    (270) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D . IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    IGUAL           shift and go to state 566


state 514

    (279) dectupla -> PAR_I STRINGCLASS COMA INTCLASS . PAR_D IGUAL PAR_I STRING COMA INT PAR_D

    PAR_D           shift and go to state 567


state 515

    (280) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS . PAR_D IGUAL PAR_I STRING COMA LONG PAR_D

    PAR_D           shift and go to state 568


state 516

    (281) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS . PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D

    PAR_D           shift and go to state 569


state 517

    (282) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS . PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D

    PAR_D           shift and go to state 570


state 518

    (295) dectupla -> PAR_I INTCLASS COMA STRINGCLASS . PAR_D IGUAL PAR_I INT COMA STRING PAR_D

    PAR_D           shift and go to state 571


state 519

    (296) dectupla -> PAR_I INTCLASS COMA LONGCLASS . PAR_D IGUAL PAR_I INT COMA LONG PAR_D

    PAR_D           shift and go to state 572


state 520

    (297) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS . PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D

    PAR_D           shift and go to state 573


state 521

    (298) dectupla -> PAR_I INTCLASS COMA FLOATCLASS . PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    PAR_D           shift and go to state 574


state 522

    (291) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS . PAR_D IGUAL PAR_I LONG COMA STRING PAR_D

    PAR_D           shift and go to state 575


state 523

    (292) dectupla -> PAR_I LONGCLASS COMA INTCLASS . PAR_D IGUAL PAR_I LONG COMA INT PAR_D

    PAR_D           shift and go to state 576


state 524

    (293) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS . PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D

    PAR_D           shift and go to state 577


state 525

    (294) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS . PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D

    PAR_D           shift and go to state 578


state 526

    (287) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS . PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D

    PAR_D           shift and go to state 579


state 527

    (288) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS . PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D

    PAR_D           shift and go to state 580


state 528

    (289) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS . PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D

    PAR_D           shift and go to state 581


state 529

    (290) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS . PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D

    PAR_D           shift and go to state 582


state 530

    (283) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS . PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D

    PAR_D           shift and go to state 583


state 531

    (284) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS . PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D

    PAR_D           shift and go to state 584


state 532

    (285) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS . PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D

    PAR_D           shift and go to state 585


state 533

    (286) dectupla -> PAR_I FLOATCLASS COMA INTCLASS . PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D

    PAR_D           shift and go to state 586


state 534

    (162) array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 162 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 162 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 162 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 162 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 162 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 162 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 162 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 162 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 162 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 162 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    STRING          reduce using rule 162 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 162 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 162 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 162 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 162 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 162 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 162 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 162 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 162 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 535

    (166) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 166 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 166 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 166 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 166 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 166 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 166 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 166 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 166 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 166 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 166 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    STRING          reduce using rule 166 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 166 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 166 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 166 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 166 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 166 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 166 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 166 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 166 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)


state 536

    (163) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    IGUAL           shift and go to state 587


state 537

    (167) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D . IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D . IGUAL LISTCLASS PAR_I valores PAR_D

    IGUAL           shift and go to state 588


state 538

    (174) while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 174 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 174 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 174 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 174 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 174 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 174 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 174 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 174 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 174 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 174 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 174 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 174 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 174 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 174 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 174 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 174 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 174 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 174 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)


state 539

    (175) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 589


state 540

    (179) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 590


state 541

    (180) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 591


state 542

    (176) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    contenido                      shift and go to state 592
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 543

    (177) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 593


state 544

    (178) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 594


state 545

    (220) if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .

    ELSE            reduce using rule 220 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 220 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 220 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 220 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 220 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 220 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 220 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 220 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 220 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 220 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 220 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 220 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 220 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 220 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 220 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 220 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 220 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 220 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 220 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)


state 546

    (276) startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT . PAR_D

    PAR_D           shift and go to state 595


state 547

    (217) defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock .

    LLAVE_D         reduce using rule 217 (defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock .)


state 548

    (219) codeBlock -> LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 596


state 549

    (4) io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .

    OBJECT          reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    IMPORT          reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    DEF             reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    VARIABLE        reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    PRINTLN         reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    PRINT           reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    READLINE        reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    VAR             reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    VAL             reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    WHILE           reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    FOR             reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    IF              reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    STRING          reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)


state 550

    (223) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D
    (224) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D elseif

    LLAVE_D         shift and go to state 597


state 551

    (106) valor -> VARIABLE PAR_I VARIABLE . PAR_D
    (103) valor -> VARIABLE .
    (106) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (107) valor -> VARIABLE . PAR_I INT PAR_D

  ! shift/reduce conflict for PAR_D resolved as shift
    PAR_D           shift and go to state 385
    COMA            reduce using rule 103 (valor -> VARIABLE .)
    PAR_I           shift and go to state 134

  ! PAR_D           [ reduce using rule 103 (valor -> VARIABLE .) ]


state 552

    (107) valor -> VARIABLE PAR_I INT . PAR_D
    (111) numeros -> INT .

  ! shift/reduce conflict for PAR_D resolved as shift
    PAR_D           shift and go to state 386
    COMA            reduce using rule 111 (numeros -> INT .)

  ! PAR_D           [ reduce using rule 111 (numeros -> INT .) ]


state 553

    (91) reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL . valor
    (101) valor -> . STRING
    (102) valor -> . CHAR
    (103) valor -> . VARIABLE
    (104) valor -> . numeros
    (105) valor -> . booleanos
    (106) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (107) valor -> . VARIABLE PAR_I INT PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 69
    CHAR            shift and go to state 70
    VARIABLE        shift and go to state 71
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79

    valor                          shift and go to state 598
    numeros                        shift and go to state 72
    booleanos                      shift and go to state 73
    startsWith                     shift and go to state 80

state 554

    (123) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . valor LLAVE_D
    (124) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . VARIABLE LLAVE_D
    (125) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . returnfun LLAVE_D
    (126) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . aritmetica LLAVE_D
    (101) valor -> . STRING
    (102) valor -> . CHAR
    (103) valor -> . VARIABLE
    (104) valor -> . numeros
    (105) valor -> . booleanos
    (106) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (107) valor -> . VARIABLE PAR_I INT PAR_D
    (150) returnfun -> . returnCastable
    (151) returnfun -> . castingcall
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (152) returnCastable -> . entrada
    (153) returnCastable -> . funcall
    (154) castingcall -> . returnCastable PUNTO castingfun
    (155) castingcall -> . VARIABLE PUNTO castingfun
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (145) funcall -> . VARIABLE varparen

    VARIABLE        shift and go to state 599
    STRING          shift and go to state 69
    CHAR            shift and go to state 70
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79
    READLINE        shift and go to state 19

    valor                          shift and go to state 600
    returnfun                      shift and go to state 601
    aritmetica                     shift and go to state 602
    numeros                        shift and go to state 393
    booleanos                      shift and go to state 73
    returnCastable                 shift and go to state 175
    castingcall                    shift and go to state 176
    startsWith                     shift and go to state 80
    entrada                        shift and go to state 184
    funcall                        shift and go to state 185

state 555

    (128) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE . LLAVE_D
    (103) valor -> VARIABLE .
    (106) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (107) valor -> VARIABLE . PAR_I INT PAR_D
    (259) aritmetica -> VARIABLE . aritmeticos numeros
    (261) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (155) castingcall -> VARIABLE . PUNTO castingfun
    (145) funcall -> VARIABLE . varparen
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD
    (146) varparen -> . PAR_I valores PAR_D
    (147) varparen -> . PAR_I PAR_D
    (148) varparen -> . varparen PAR_I valores PAR_D
    (149) varparen -> . varparen PAR_I PAR_D

  ! shift/reduce conflict for LLAVE_D resolved as shift
    LLAVE_D         shift and go to state 603
    PAR_I           shift and go to state 494
    PUNTO           shift and go to state 317
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234

  ! LLAVE_D         [ reduce using rule 103 (valor -> VARIABLE .) ]

    aritmeticos                    shift and go to state 225
    varparen                       shift and go to state 38

state 556

    (127) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor . LLAVE_D

    LLAVE_D         shift and go to state 604


state 557

    (129) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun . LLAVE_D

    LLAVE_D         shift and go to state 605


state 558

    (130) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica . LLAVE_D
    (262) aritmetica -> aritmetica . aritmeticos numeros
    (263) aritmetica -> aritmetica . aritmeticos VARIABLE
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD

    LLAVE_D         shift and go to state 606
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234

    aritmeticos                    shift and go to state 242

state 559

    (131) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . tuple LLAVE_D
    (132) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . VARIABLE LLAVE_D
    (133) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . returnfun LLAVE_D
    (171) tuple -> . PAR_I valores PAR_D
    (150) returnfun -> . returnCastable
    (151) returnfun -> . castingcall
    (152) returnCastable -> . entrada
    (153) returnCastable -> . funcall
    (154) castingcall -> . returnCastable PUNTO castingfun
    (155) castingcall -> . VARIABLE PUNTO castingfun
    (144) entrada -> . READLINE PAR_I PAR_D
    (145) funcall -> . VARIABLE varparen

    VARIABLE        shift and go to state 607
    PAR_I           shift and go to state 174
    READLINE        shift and go to state 19

    tuple                          shift and go to state 608
    returnfun                      shift and go to state 609
    returnCastable                 shift and go to state 175
    castingcall                    shift and go to state 176
    entrada                        shift and go to state 184
    funcall                        shift and go to state 185

state 560

    (138) tiposentry -> COMA tipo .
    (139) tiposentry -> COMA tipo . tiposentry
    (138) tiposentry -> . COMA tipo
    (139) tiposentry -> . COMA tipo tiposentry

    PAR_D           reduce using rule 138 (tiposentry -> COMA tipo .)
    COMA            shift and go to state 502

    tiposentry                     shift and go to state 610

state 561

    (99) tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .

    IGUAL           reduce using rule 99 (tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .)
    COMA            reduce using rule 99 (tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .)
    PAR_D           reduce using rule 99 (tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .)
    CORCHETE_D      reduce using rule 99 (tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .)


state 562

    (100) tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .

    IGUAL           reduce using rule 100 (tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .)
    COMA            reduce using rule 100 (tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .)
    PAR_D           reduce using rule 100 (tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .)
    CORCHETE_D      reduce using rule 100 (tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .)


state 563

    (118) declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor .

    PAR_D           reduce using rule 118 (declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor .)


state 564

    (161) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    NEW             shift and go to state 611


state 565

    (269) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL . ARRAYCLASS PAR_I valoresInt PAR_D

    ARRAYCLASS      shift and go to state 612


state 566

    (270) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL . ARRAYCLASS PAR_I valoresDouble PAR_D

    ARRAYCLASS      shift and go to state 613


state 567

    (279) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D . IGUAL PAR_I STRING COMA INT PAR_D

    IGUAL           shift and go to state 614


state 568

    (280) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D . IGUAL PAR_I STRING COMA LONG PAR_D

    IGUAL           shift and go to state 615


state 569

    (281) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D . IGUAL PAR_I STRING COMA DOUBLE PAR_D

    IGUAL           shift and go to state 616


state 570

    (282) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D . IGUAL PAR_I STRING COMA FLOAT PAR_D

    IGUAL           shift and go to state 617


state 571

    (295) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D . IGUAL PAR_I INT COMA STRING PAR_D

    IGUAL           shift and go to state 618


state 572

    (296) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D . IGUAL PAR_I INT COMA LONG PAR_D

    IGUAL           shift and go to state 619


state 573

    (297) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D . IGUAL PAR_I INT COMA DOUBLE PAR_D

    IGUAL           shift and go to state 620


state 574

    (298) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D . IGUAL PAR_I INT COMA FLOAT PAR_D

    IGUAL           shift and go to state 621


state 575

    (291) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D . IGUAL PAR_I LONG COMA STRING PAR_D

    IGUAL           shift and go to state 622


state 576

    (292) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D . IGUAL PAR_I LONG COMA INT PAR_D

    IGUAL           shift and go to state 623


state 577

    (293) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D . IGUAL PAR_I LONG COMA DOUBLE PAR_D

    IGUAL           shift and go to state 624


state 578

    (294) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D . IGUAL PAR_I LONG COMA FLOAT PAR_D

    IGUAL           shift and go to state 625


state 579

    (287) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D . IGUAL PAR_I DOUBLE COMA STRING PAR_D

    IGUAL           shift and go to state 626


state 580

    (288) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D . IGUAL PAR_I DOUBLE COMA LONG PAR_D

    IGUAL           shift and go to state 627


state 581

    (289) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D . IGUAL PAR_I DOUBLE COMA FLOAT PAR_D

    IGUAL           shift and go to state 628


state 582

    (290) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D . IGUAL PAR_I DOUBLE COMA INT PAR_D

    IGUAL           shift and go to state 629


state 583

    (283) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D . IGUAL PAR_I FLOAT COMA STRING PAR_D

    IGUAL           shift and go to state 630


state 584

    (284) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D . IGUAL PAR_I FLOAT COMA LONG PAR_D

    IGUAL           shift and go to state 631


state 585

    (285) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D . IGUAL PAR_I FLOAT COMA DOUBLE PAR_D

    IGUAL           shift and go to state 632


state 586

    (286) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D . IGUAL PAR_I FLOAT COMA INT PAR_D

    IGUAL           shift and go to state 633


state 587

    (163) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    NEW             shift and go to state 634


state 588

    (167) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL . NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL . LISTCLASS PAR_I valores PAR_D

    NEW             shift and go to state 636
    LISTCLASS       shift and go to state 635


state 589

    (175) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    contenido                      shift and go to state 637
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 590

    (179) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 638


state 591

    (180) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 639


state 592

    (176) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 640


state 593

    (177) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 641


state 594

    (178) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 642


state 595

    (276) startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .

    DEF             reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    VARIABLE        reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    PRINTLN         reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    PRINT           reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    READLINE        reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    VAR             reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    VAL             reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    WHILE           reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    FOR             reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    IF              reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    STRING          reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    $end            reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    LLAVE_D         reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    COMA            reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    PAR_D           reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    MAS             reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    IGUAL_COMPARACION reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    DIFERENTE       reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    MAYOR           reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    MENOR           reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    AND             reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    OR              reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    NOT             reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    INT             reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    LONG            reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    FLOAT           reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    DOUBLE          reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    RETURN          reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    CASE            reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    FUNCION_FLECHA  reduce using rule 276 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)


state 596

    (219) codeBlock -> LLAVE_I contenido LLAVE_D .

    CASE            reduce using rule 219 (codeBlock -> LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 219 (codeBlock -> LLAVE_I contenido LLAVE_D .)


state 597

    (223) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .
    (224) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D . elseif
    (223) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (224) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

  ! shift/reduce conflict for ELSE resolved as shift
    DEF             reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    ELSE            shift and go to state 643

  ! ELSE            [ reduce using rule 223 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .) ]

    elseif                         shift and go to state 644

state 598

    (91) reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .

    VAR             reduce using rule 91 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    VAL             reduce using rule 91 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    VARIABLE        reduce using rule 91 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    PRINTLN         reduce using rule 91 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    PRINT           reduce using rule 91 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    READLINE        reduce using rule 91 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    WHILE           reduce using rule 91 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    FOR             reduce using rule 91 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    IF              reduce using rule 91 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    STRING          reduce using rule 91 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    INT             reduce using rule 91 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    LONG            reduce using rule 91 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    FLOAT           reduce using rule 91 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    DOUBLE          reduce using rule 91 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    LLAVE_D         reduce using rule 91 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    RETURN          reduce using rule 91 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    CASE            reduce using rule 91 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)


state 599

    (124) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE . LLAVE_D
    (103) valor -> VARIABLE .
    (106) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (107) valor -> VARIABLE . PAR_I INT PAR_D
    (259) aritmetica -> VARIABLE . aritmeticos numeros
    (261) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (155) castingcall -> VARIABLE . PUNTO castingfun
    (145) funcall -> VARIABLE . varparen
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD
    (146) varparen -> . PAR_I valores PAR_D
    (147) varparen -> . PAR_I PAR_D
    (148) varparen -> . varparen PAR_I valores PAR_D
    (149) varparen -> . varparen PAR_I PAR_D

  ! shift/reduce conflict for LLAVE_D resolved as shift
    LLAVE_D         shift and go to state 645
    PAR_I           shift and go to state 494
    PUNTO           shift and go to state 317
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234

  ! LLAVE_D         [ reduce using rule 103 (valor -> VARIABLE .) ]

    aritmeticos                    shift and go to state 225
    varparen                       shift and go to state 38

state 600

    (123) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor . LLAVE_D

    LLAVE_D         shift and go to state 646


state 601

    (125) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun . LLAVE_D

    LLAVE_D         shift and go to state 647


state 602

    (126) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica . LLAVE_D
    (262) aritmetica -> aritmetica . aritmeticos numeros
    (263) aritmetica -> aritmetica . aritmeticos VARIABLE
    (264) aritmeticos -> . MENOS
    (265) aritmeticos -> . MAS
    (266) aritmeticos -> . MULTIPLICACION
    (267) aritmeticos -> . DIVISION
    (268) aritmeticos -> . MOD

    LLAVE_D         shift and go to state 648
    MENOS           shift and go to state 230
    MAS             shift and go to state 231
    MULTIPLICACION  shift and go to state 232
    DIVISION        shift and go to state 233
    MOD             shift and go to state 234

    aritmeticos                    shift and go to state 242

state 603

    (128) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .

    DEF             reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    VARIABLE        reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    PRINTLN         reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    PRINT           reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    READLINE        reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    VAR             reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    VAL             reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    WHILE           reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    FOR             reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    IF              reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    STRING          reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    $end            reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    LLAVE_D         reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)


state 604

    (127) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .

    DEF             reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    VARIABLE        reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    PRINTLN         reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    PRINT           reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    READLINE        reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    VAR             reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    VAL             reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    WHILE           reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    FOR             reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    IF              reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    STRING          reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    $end            reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    LLAVE_D         reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)


state 605

    (129) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .

    DEF             reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    VARIABLE        reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    PRINTLN         reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    PRINT           reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    READLINE        reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    VAR             reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    VAL             reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    WHILE           reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    FOR             reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    IF              reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    STRING          reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    $end            reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    LLAVE_D         reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)


state 606

    (130) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .

    DEF             reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    VARIABLE        reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    PRINTLN         reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    PRINT           reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    READLINE        reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    VAR             reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    VAL             reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    WHILE           reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    FOR             reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    IF              reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    STRING          reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    $end            reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    LLAVE_D         reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)


state 607

    (132) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE . LLAVE_D
    (155) castingcall -> VARIABLE . PUNTO castingfun
    (145) funcall -> VARIABLE . varparen
    (146) varparen -> . PAR_I valores PAR_D
    (147) varparen -> . PAR_I PAR_D
    (148) varparen -> . varparen PAR_I valores PAR_D
    (149) varparen -> . varparen PAR_I PAR_D

    LLAVE_D         shift and go to state 649
    PUNTO           shift and go to state 317
    PAR_I           shift and go to state 40

    varparen                       shift and go to state 38

state 608

    (131) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple . LLAVE_D

    LLAVE_D         shift and go to state 650


state 609

    (133) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun . LLAVE_D

    LLAVE_D         shift and go to state 651


state 610

    (139) tiposentry -> COMA tipo tiposentry .

    PAR_D           reduce using rule 139 (tiposentry -> COMA tipo tiposentry .)


state 611

    (161) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW . ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    ARRAYCLASS      shift and go to state 652


state 612

    (269) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS . PAR_I valoresInt PAR_D

    PAR_I           shift and go to state 653


state 613

    (270) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS . PAR_I valoresDouble PAR_D

    PAR_I           shift and go to state 654


state 614

    (279) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL . PAR_I STRING COMA INT PAR_D

    PAR_I           shift and go to state 655


state 615

    (280) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL . PAR_I STRING COMA LONG PAR_D

    PAR_I           shift and go to state 656


state 616

    (281) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL . PAR_I STRING COMA DOUBLE PAR_D

    PAR_I           shift and go to state 657


state 617

    (282) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL . PAR_I STRING COMA FLOAT PAR_D

    PAR_I           shift and go to state 658


state 618

    (295) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL . PAR_I INT COMA STRING PAR_D

    PAR_I           shift and go to state 659


state 619

    (296) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL . PAR_I INT COMA LONG PAR_D

    PAR_I           shift and go to state 660


state 620

    (297) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL . PAR_I INT COMA DOUBLE PAR_D

    PAR_I           shift and go to state 661


state 621

    (298) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL . PAR_I INT COMA FLOAT PAR_D

    PAR_I           shift and go to state 662


state 622

    (291) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL . PAR_I LONG COMA STRING PAR_D

    PAR_I           shift and go to state 663


state 623

    (292) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL . PAR_I LONG COMA INT PAR_D

    PAR_I           shift and go to state 664


state 624

    (293) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL . PAR_I LONG COMA DOUBLE PAR_D

    PAR_I           shift and go to state 665


state 625

    (294) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL . PAR_I LONG COMA FLOAT PAR_D

    PAR_I           shift and go to state 666


state 626

    (287) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL . PAR_I DOUBLE COMA STRING PAR_D

    PAR_I           shift and go to state 667


state 627

    (288) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL . PAR_I DOUBLE COMA LONG PAR_D

    PAR_I           shift and go to state 668


state 628

    (289) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL . PAR_I DOUBLE COMA FLOAT PAR_D

    PAR_I           shift and go to state 669


state 629

    (290) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL . PAR_I DOUBLE COMA INT PAR_D

    PAR_I           shift and go to state 670


state 630

    (283) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL . PAR_I FLOAT COMA STRING PAR_D

    PAR_I           shift and go to state 671


state 631

    (284) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL . PAR_I FLOAT COMA LONG PAR_D

    PAR_I           shift and go to state 672


state 632

    (285) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL . PAR_I FLOAT COMA DOUBLE PAR_D

    PAR_I           shift and go to state 673


state 633

    (286) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL . PAR_I FLOAT COMA INT PAR_D

    PAR_I           shift and go to state 674


state 634

    (163) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW . ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    ARRAYCLASS      shift and go to state 675


state 635

    (168) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 676


state 636

    (167) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW . LISTCLASS PAR_I valores PAR_D

    LISTCLASS       shift and go to state 677


state 637

    (175) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 678


state 638

    (179) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 679


state 639

    (180) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 680


state 640

    (176) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 176 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)


state 641

    (177) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    contenido                      shift and go to state 681
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 642

    (178) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    contenido                      shift and go to state 682
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 643

    (223) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (224) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    IF              shift and go to state 86


state 644

    (224) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .

    ELSE            reduce using rule 224 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    DEF             reduce using rule 224 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    VARIABLE        reduce using rule 224 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    PRINTLN         reduce using rule 224 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    PRINT           reduce using rule 224 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    READLINE        reduce using rule 224 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    VAR             reduce using rule 224 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    VAL             reduce using rule 224 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    WHILE           reduce using rule 224 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    FOR             reduce using rule 224 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    IF              reduce using rule 224 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    STRING          reduce using rule 224 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    $end            reduce using rule 224 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    LLAVE_D         reduce using rule 224 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    INT             reduce using rule 224 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    LONG            reduce using rule 224 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    FLOAT           reduce using rule 224 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    DOUBLE          reduce using rule 224 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    RETURN          reduce using rule 224 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)


state 645

    (124) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .

    DEF             reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VARIABLE        reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINTLN         reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINT           reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    READLINE        reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAR             reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAL             reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    WHILE           reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    FOR             reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    IF              reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    STRING          reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    $end            reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    LLAVE_D         reduce using rule 124 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)


state 646

    (123) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .

    DEF             reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VARIABLE        reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    PRINTLN         reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    PRINT           reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    READLINE        reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAR             reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAL             reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    WHILE           reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    FOR             reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    IF              reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    STRING          reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    $end            reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    LLAVE_D         reduce using rule 123 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)


state 647

    (125) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .

    DEF             reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VARIABLE        reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINTLN         reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINT           reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    READLINE        reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAR             reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAL             reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    WHILE           reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    FOR             reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    IF              reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    STRING          reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    $end            reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    LLAVE_D         reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)


state 648

    (126) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .

    DEF             reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    VARIABLE        reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    PRINTLN         reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    PRINT           reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    READLINE        reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    VAR             reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    VAL             reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    WHILE           reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    FOR             reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    IF              reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    STRING          reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    $end            reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    LLAVE_D         reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)


state 649

    (132) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .

    DEF             reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VARIABLE        reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINTLN         reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINT           reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    READLINE        reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAR             reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAL             reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    WHILE           reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    FOR             reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    IF              reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    STRING          reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    $end            reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    LLAVE_D         reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)


state 650

    (131) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .

    DEF             reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    VARIABLE        reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    PRINTLN         reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    PRINT           reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    READLINE        reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    VAR             reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    VAL             reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    WHILE           reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    FOR             reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    IF              reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    STRING          reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    $end            reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    LLAVE_D         reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)


state 651

    (133) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .

    DEF             reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VARIABLE        reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINTLN         reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINT           reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    READLINE        reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAR             reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAL             reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    WHILE           reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    FOR             reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    IF              reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    STRING          reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    $end            reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    LLAVE_D         reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)


state 652

    (161) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS . CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 683


state 653

    (269) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I . valoresInt PAR_D
    (271) valoresInt -> . INT
    (272) valoresInt -> . valoresInt COMA INT

    INT             shift and go to state 685

    valoresInt                     shift and go to state 684

state 654

    (270) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I . valoresDouble PAR_D
    (273) valoresDouble -> . DOUBLE
    (274) valoresDouble -> . valoresDouble COMA DOUBLE

    DOUBLE          shift and go to state 687

    valoresDouble                  shift and go to state 686

state 655

    (279) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I . STRING COMA INT PAR_D

    STRING          shift and go to state 688


state 656

    (280) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I . STRING COMA LONG PAR_D

    STRING          shift and go to state 689


state 657

    (281) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I . STRING COMA DOUBLE PAR_D

    STRING          shift and go to state 690


state 658

    (282) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I . STRING COMA FLOAT PAR_D

    STRING          shift and go to state 691


state 659

    (295) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I . INT COMA STRING PAR_D

    INT             shift and go to state 692


state 660

    (296) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I . INT COMA LONG PAR_D

    INT             shift and go to state 693


state 661

    (297) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I . INT COMA DOUBLE PAR_D

    INT             shift and go to state 694


state 662

    (298) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I . INT COMA FLOAT PAR_D

    INT             shift and go to state 695


state 663

    (291) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I . LONG COMA STRING PAR_D

    LONG            shift and go to state 696


state 664

    (292) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I . LONG COMA INT PAR_D

    LONG            shift and go to state 697


state 665

    (293) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I . LONG COMA DOUBLE PAR_D

    LONG            shift and go to state 698


state 666

    (294) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I . LONG COMA FLOAT PAR_D

    LONG            shift and go to state 699


state 667

    (287) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I . DOUBLE COMA STRING PAR_D

    DOUBLE          shift and go to state 700


state 668

    (288) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I . DOUBLE COMA LONG PAR_D

    DOUBLE          shift and go to state 701


state 669

    (289) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I . DOUBLE COMA FLOAT PAR_D

    DOUBLE          shift and go to state 702


state 670

    (290) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I . DOUBLE COMA INT PAR_D

    DOUBLE          shift and go to state 703


state 671

    (283) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I . FLOAT COMA STRING PAR_D

    FLOAT           shift and go to state 704


state 672

    (284) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I . FLOAT COMA LONG PAR_D

    FLOAT           shift and go to state 705


state 673

    (285) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I . FLOAT COMA DOUBLE PAR_D

    FLOAT           shift and go to state 706


state 674

    (286) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I . FLOAT COMA INT PAR_D

    FLOAT           shift and go to state 707


state 675

    (163) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS . CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 708


state 676

    (168) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I . valores PAR_D
    (169) valores -> . valor
    (170) valores -> . valor COMA valores
    (101) valor -> . STRING
    (102) valor -> . CHAR
    (103) valor -> . VARIABLE
    (104) valor -> . numeros
    (105) valor -> . booleanos
    (106) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (107) valor -> . VARIABLE PAR_I INT PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 69
    CHAR            shift and go to state 70
    VARIABLE        shift and go to state 71
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79

    valores                        shift and go to state 709
    valor                          shift and go to state 68
    numeros                        shift and go to state 72
    booleanos                      shift and go to state 73
    startsWith                     shift and go to state 80

state 677

    (167) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 710


state 678

    (175) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 175 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 175 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 175 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 175 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 175 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 175 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 175 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 175 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 175 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 175 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 175 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 175 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 175 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 175 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 175 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 175 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 175 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 175 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)


state 679

    (179) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    contenido                      shift and go to state 711
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 680

    (180) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (172) asignacion -> . VAR VARIABLE IGUAL tuple
    (173) asignacion -> . VAL VARIABLE IGUAL tuple
    (277) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (278) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (88) reasignacion -> . VARIABLE IGUAL valor
    (89) reasignacion -> . VARIABLE IGUAL returnfun
    (90) reasignacion -> . VARIABLE IGUAL aritmetica
    (91) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (145) funcall -> . VARIABLE varparen
    (140) impresion -> . PRINTLN PAR_I valorI PAR_D
    (141) impresion -> . PRINT PAR_I valorI PAR_D
    (144) entrada -> . READLINE PAR_I PAR_D
    (174) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (175) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (176) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (177) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (178) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (179) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (180) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (181) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (220) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (221) if -> . if elseif
    (222) if -> . if else
    (258) aritmetica -> . numeros aritmeticos numeros
    (259) aritmetica -> . VARIABLE aritmeticos numeros
    (260) aritmetica -> . numeros aritmeticos VARIABLE
    (261) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (262) aritmetica -> . aritmetica aritmeticos numeros
    (263) aritmetica -> . aritmetica aritmeticos VARIABLE
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (305) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (306) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (307) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (308) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (299) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (300) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (301) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (302) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (66) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (67) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (312) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (313) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (314) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (315) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (68) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (69) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (319) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (320) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (321) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (322) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (70) asignacionString -> . VAR VARIABLE IGUAL STRING
    (71) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (72) asignacionString -> . VAL VARIABLE IGUAL STRING
    (73) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (74) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (75) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (76) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (77) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (78) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (79) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (80) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (81) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (82) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (83) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (84) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (85) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (86) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (160) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (161) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (162) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (163) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (164) array -> . arrayInt
    (165) array -> . arrayDouble
    (166) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (167) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (168) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (269) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (270) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 149
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    contenido                      shift and go to state 712
    asignacion                     shift and go to state 138
    reasignacion                   shift and go to state 139
    funcall                        shift and go to state 140
    impresion                      shift and go to state 141
    entrada                        shift and go to state 142
    while                          shift and go to state 143
    for                            shift and go to state 144
    match                          shift and go to state 145
    if                             shift and go to state 146
    aritmetica                     shift and go to state 147
    startsWith                     shift and go to state 148
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 150
    arrayInt                       shift and go to state 35
    arrayDouble                    shift and go to state 36

state 681

    (177) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 713


state 682

    (178) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 714


state 683

    (161) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I . tipo CORCHETE_D PAR_I INT PAR_D
    (92) tipo -> . CHARCLASS
    (93) tipo -> . STRINGCLASS
    (94) tipo -> . BOOLCLASS
    (95) tipo -> . INTCLASS
    (96) tipo -> . LONGCLASS
    (97) tipo -> . DOUBLECLASS
    (98) tipo -> . FLOATCLASS
    (99) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (100) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 305
    STRINGCLASS     shift and go to state 306
    BOOLCLASS       shift and go to state 307
    INTCLASS        shift and go to state 308
    LONGCLASS       shift and go to state 309
    DOUBLECLASS     shift and go to state 310
    FLOATCLASS      shift and go to state 311
    ARRAYCLASS      shift and go to state 312
    LISTCLASS       shift and go to state 313

    tipo                           shift and go to state 715

state 684

    (269) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt . PAR_D
    (272) valoresInt -> valoresInt . COMA INT

    PAR_D           shift and go to state 716
    COMA            shift and go to state 717


state 685

    (271) valoresInt -> INT .

    PAR_D           reduce using rule 271 (valoresInt -> INT .)
    COMA            reduce using rule 271 (valoresInt -> INT .)


state 686

    (270) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble . PAR_D
    (274) valoresDouble -> valoresDouble . COMA DOUBLE

    PAR_D           shift and go to state 718
    COMA            shift and go to state 719


state 687

    (273) valoresDouble -> DOUBLE .

    PAR_D           reduce using rule 273 (valoresDouble -> DOUBLE .)
    COMA            reduce using rule 273 (valoresDouble -> DOUBLE .)


state 688

    (279) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING . COMA INT PAR_D

    COMA            shift and go to state 720


state 689

    (280) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING . COMA LONG PAR_D

    COMA            shift and go to state 721


state 690

    (281) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING . COMA DOUBLE PAR_D

    COMA            shift and go to state 722


state 691

    (282) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING . COMA FLOAT PAR_D

    COMA            shift and go to state 723


state 692

    (295) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT . COMA STRING PAR_D

    COMA            shift and go to state 724


state 693

    (296) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT . COMA LONG PAR_D

    COMA            shift and go to state 725


state 694

    (297) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT . COMA DOUBLE PAR_D

    COMA            shift and go to state 726


state 695

    (298) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT . COMA FLOAT PAR_D

    COMA            shift and go to state 727


state 696

    (291) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG . COMA STRING PAR_D

    COMA            shift and go to state 728


state 697

    (292) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG . COMA INT PAR_D

    COMA            shift and go to state 729


state 698

    (293) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG . COMA DOUBLE PAR_D

    COMA            shift and go to state 730


state 699

    (294) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG . COMA FLOAT PAR_D

    COMA            shift and go to state 731


state 700

    (287) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE . COMA STRING PAR_D

    COMA            shift and go to state 732


state 701

    (288) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE . COMA LONG PAR_D

    COMA            shift and go to state 733


state 702

    (289) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE . COMA FLOAT PAR_D

    COMA            shift and go to state 734


state 703

    (290) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE . COMA INT PAR_D

    COMA            shift and go to state 735


state 704

    (283) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT . COMA STRING PAR_D

    COMA            shift and go to state 736


state 705

    (284) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT . COMA LONG PAR_D

    COMA            shift and go to state 737


state 706

    (285) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT . COMA DOUBLE PAR_D

    COMA            shift and go to state 738


state 707

    (286) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT . COMA INT PAR_D

    COMA            shift and go to state 739


state 708

    (163) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I . tipo CORCHETE_D PAR_I INT PAR_D
    (92) tipo -> . CHARCLASS
    (93) tipo -> . STRINGCLASS
    (94) tipo -> . BOOLCLASS
    (95) tipo -> . INTCLASS
    (96) tipo -> . LONGCLASS
    (97) tipo -> . DOUBLECLASS
    (98) tipo -> . FLOATCLASS
    (99) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (100) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 305
    STRINGCLASS     shift and go to state 306
    BOOLCLASS       shift and go to state 307
    INTCLASS        shift and go to state 308
    LONGCLASS       shift and go to state 309
    DOUBLECLASS     shift and go to state 310
    FLOATCLASS      shift and go to state 311
    ARRAYCLASS      shift and go to state 312
    LISTCLASS       shift and go to state 313

    tipo                           shift and go to state 740

state 709

    (168) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 741


state 710

    (167) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I . valores PAR_D
    (169) valores -> . valor
    (170) valores -> . valor COMA valores
    (101) valor -> . STRING
    (102) valor -> . CHAR
    (103) valor -> . VARIABLE
    (104) valor -> . numeros
    (105) valor -> . booleanos
    (106) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (107) valor -> . VARIABLE PAR_I INT PAR_D
    (111) numeros -> . INT
    (112) numeros -> . LONG
    (113) numeros -> . FLOAT
    (114) numeros -> . DOUBLE
    (108) booleanos -> . TRUE
    (109) booleanos -> . FLASE
    (110) booleanos -> . startsWith
    (275) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (276) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 69
    CHAR            shift and go to state 70
    VARIABLE        shift and go to state 71
    INT             shift and go to state 74
    LONG            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    TRUE            shift and go to state 78
    FLASE           shift and go to state 79

    valores                        shift and go to state 742
    valor                          shift and go to state 68
    numeros                        shift and go to state 72
    booleanos                      shift and go to state 73
    startsWith                     shift and go to state 80

state 711

    (179) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 743


state 712

    (180) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 744


state 713

    (177) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 177 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)


state 714

    (178) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 178 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 178 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 178 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 178 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 178 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 178 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 178 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 178 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 178 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 178 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 178 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 178 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 178 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 178 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 178 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 178 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 178 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 178 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)


state 715

    (161) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo . CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 745


state 716

    (269) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .

    DEF             reduce using rule 269 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    VARIABLE        reduce using rule 269 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    PRINTLN         reduce using rule 269 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    PRINT           reduce using rule 269 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    READLINE        reduce using rule 269 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    VAR             reduce using rule 269 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    VAL             reduce using rule 269 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    WHILE           reduce using rule 269 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    FOR             reduce using rule 269 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    IF              reduce using rule 269 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    STRING          reduce using rule 269 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    $end            reduce using rule 269 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    LLAVE_D         reduce using rule 269 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    INT             reduce using rule 269 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    LONG            reduce using rule 269 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    FLOAT           reduce using rule 269 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    DOUBLE          reduce using rule 269 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    RETURN          reduce using rule 269 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    CASE            reduce using rule 269 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)


state 717

    (272) valoresInt -> valoresInt COMA . INT

    INT             shift and go to state 746


state 718

    (270) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .

    DEF             reduce using rule 270 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    VARIABLE        reduce using rule 270 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    PRINTLN         reduce using rule 270 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    PRINT           reduce using rule 270 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    READLINE        reduce using rule 270 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    VAR             reduce using rule 270 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    VAL             reduce using rule 270 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    WHILE           reduce using rule 270 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    FOR             reduce using rule 270 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    IF              reduce using rule 270 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    STRING          reduce using rule 270 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    $end            reduce using rule 270 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    LLAVE_D         reduce using rule 270 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    INT             reduce using rule 270 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    LONG            reduce using rule 270 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    FLOAT           reduce using rule 270 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    DOUBLE          reduce using rule 270 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    RETURN          reduce using rule 270 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    CASE            reduce using rule 270 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)


state 719

    (274) valoresDouble -> valoresDouble COMA . DOUBLE

    DOUBLE          shift and go to state 747


state 720

    (279) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA . INT PAR_D

    INT             shift and go to state 748


state 721

    (280) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA . LONG PAR_D

    LONG            shift and go to state 749


state 722

    (281) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA . DOUBLE PAR_D

    DOUBLE          shift and go to state 750


state 723

    (282) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA . FLOAT PAR_D

    FLOAT           shift and go to state 751


state 724

    (295) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA . STRING PAR_D

    STRING          shift and go to state 752


state 725

    (296) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA . LONG PAR_D

    LONG            shift and go to state 753


state 726

    (297) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA . DOUBLE PAR_D

    DOUBLE          shift and go to state 754


state 727

    (298) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA . FLOAT PAR_D

    FLOAT           shift and go to state 755


state 728

    (291) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA . STRING PAR_D

    STRING          shift and go to state 756


state 729

    (292) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA . INT PAR_D

    INT             shift and go to state 757


state 730

    (293) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA . DOUBLE PAR_D

    DOUBLE          shift and go to state 758


state 731

    (294) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA . FLOAT PAR_D

    FLOAT           shift and go to state 759


state 732

    (287) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA . STRING PAR_D

    STRING          shift and go to state 760


state 733

    (288) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA . LONG PAR_D

    LONG            shift and go to state 761


state 734

    (289) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA . FLOAT PAR_D

    FLOAT           shift and go to state 762


state 735

    (290) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA . INT PAR_D

    INT             shift and go to state 763


state 736

    (283) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA . STRING PAR_D

    STRING          shift and go to state 764


state 737

    (284) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA . LONG PAR_D

    LONG            shift and go to state 765


state 738

    (285) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA . DOUBLE PAR_D

    DOUBLE          shift and go to state 766


state 739

    (286) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA . INT PAR_D

    INT             shift and go to state 767


state 740

    (163) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo . CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 768


state 741

    (168) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 168 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 168 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 168 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 168 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 168 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 168 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 168 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 168 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 168 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 168 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    STRING          reduce using rule 168 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 168 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 168 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 168 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 168 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 168 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 168 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 168 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 168 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)


state 742

    (167) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 769


state 743

    (179) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 179 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)


state 744

    (180) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 180 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 180 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 180 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 180 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 180 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 180 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 180 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 180 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 180 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 180 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 180 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 180 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 180 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 180 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 180 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 180 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 180 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 180 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)


state 745

    (161) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D . PAR_I INT PAR_D

    PAR_I           shift and go to state 770


state 746

    (272) valoresInt -> valoresInt COMA INT .

    PAR_D           reduce using rule 272 (valoresInt -> valoresInt COMA INT .)
    COMA            reduce using rule 272 (valoresInt -> valoresInt COMA INT .)


state 747

    (274) valoresDouble -> valoresDouble COMA DOUBLE .

    PAR_D           reduce using rule 274 (valoresDouble -> valoresDouble COMA DOUBLE .)
    COMA            reduce using rule 274 (valoresDouble -> valoresDouble COMA DOUBLE .)


state 748

    (279) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT . PAR_D

    PAR_D           shift and go to state 771


state 749

    (280) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG . PAR_D

    PAR_D           shift and go to state 772


state 750

    (281) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE . PAR_D

    PAR_D           shift and go to state 773


state 751

    (282) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT . PAR_D

    PAR_D           shift and go to state 774


state 752

    (295) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING . PAR_D

    PAR_D           shift and go to state 775


state 753

    (296) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG . PAR_D

    PAR_D           shift and go to state 776


state 754

    (297) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE . PAR_D

    PAR_D           shift and go to state 777


state 755

    (298) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT . PAR_D

    PAR_D           shift and go to state 778


state 756

    (291) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING . PAR_D

    PAR_D           shift and go to state 779


state 757

    (292) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT . PAR_D

    PAR_D           shift and go to state 780


state 758

    (293) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE . PAR_D

    PAR_D           shift and go to state 781


state 759

    (294) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT . PAR_D

    PAR_D           shift and go to state 782


state 760

    (287) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING . PAR_D

    PAR_D           shift and go to state 783


state 761

    (288) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG . PAR_D

    PAR_D           shift and go to state 784


state 762

    (289) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT . PAR_D

    PAR_D           shift and go to state 785


state 763

    (290) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT . PAR_D

    PAR_D           shift and go to state 786


state 764

    (283) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING . PAR_D

    PAR_D           shift and go to state 787


state 765

    (284) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG . PAR_D

    PAR_D           shift and go to state 788


state 766

    (285) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE . PAR_D

    PAR_D           shift and go to state 789


state 767

    (286) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT . PAR_D

    PAR_D           shift and go to state 790


state 768

    (163) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D . PAR_I INT PAR_D

    PAR_I           shift and go to state 791


state 769

    (167) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 167 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 167 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 167 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 167 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 167 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 167 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 167 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 167 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 167 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 167 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    STRING          reduce using rule 167 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 167 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 167 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 167 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 167 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 167 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 167 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 167 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 167 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)


state 770

    (161) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I . INT PAR_D

    INT             shift and go to state 792


state 771

    (279) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .

    DEF             reduce using rule 279 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    VARIABLE        reduce using rule 279 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    PRINTLN         reduce using rule 279 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    PRINT           reduce using rule 279 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    READLINE        reduce using rule 279 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    VAR             reduce using rule 279 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    VAL             reduce using rule 279 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    WHILE           reduce using rule 279 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    FOR             reduce using rule 279 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    IF              reduce using rule 279 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    STRING          reduce using rule 279 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    $end            reduce using rule 279 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    LLAVE_D         reduce using rule 279 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    INT             reduce using rule 279 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    LONG            reduce using rule 279 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    FLOAT           reduce using rule 279 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    DOUBLE          reduce using rule 279 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    RETURN          reduce using rule 279 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    CASE            reduce using rule 279 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)


state 772

    (280) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .

    DEF             reduce using rule 280 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    VARIABLE        reduce using rule 280 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    PRINTLN         reduce using rule 280 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    PRINT           reduce using rule 280 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    READLINE        reduce using rule 280 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    VAR             reduce using rule 280 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    VAL             reduce using rule 280 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    WHILE           reduce using rule 280 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    FOR             reduce using rule 280 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    IF              reduce using rule 280 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    STRING          reduce using rule 280 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    $end            reduce using rule 280 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    LLAVE_D         reduce using rule 280 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    INT             reduce using rule 280 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    LONG            reduce using rule 280 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    FLOAT           reduce using rule 280 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    DOUBLE          reduce using rule 280 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    RETURN          reduce using rule 280 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    CASE            reduce using rule 280 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)


state 773

    (281) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .

    DEF             reduce using rule 281 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    VARIABLE        reduce using rule 281 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    PRINTLN         reduce using rule 281 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    PRINT           reduce using rule 281 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    READLINE        reduce using rule 281 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    VAR             reduce using rule 281 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    VAL             reduce using rule 281 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    WHILE           reduce using rule 281 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    FOR             reduce using rule 281 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    IF              reduce using rule 281 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    STRING          reduce using rule 281 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    $end            reduce using rule 281 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    LLAVE_D         reduce using rule 281 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    INT             reduce using rule 281 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    LONG            reduce using rule 281 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    FLOAT           reduce using rule 281 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    DOUBLE          reduce using rule 281 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    RETURN          reduce using rule 281 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    CASE            reduce using rule 281 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)


state 774

    (282) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .

    DEF             reduce using rule 282 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    VARIABLE        reduce using rule 282 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    PRINTLN         reduce using rule 282 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    PRINT           reduce using rule 282 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    READLINE        reduce using rule 282 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    VAR             reduce using rule 282 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    VAL             reduce using rule 282 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    WHILE           reduce using rule 282 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    FOR             reduce using rule 282 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    IF              reduce using rule 282 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    STRING          reduce using rule 282 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    $end            reduce using rule 282 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    LLAVE_D         reduce using rule 282 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    INT             reduce using rule 282 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    LONG            reduce using rule 282 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    FLOAT           reduce using rule 282 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    DOUBLE          reduce using rule 282 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    RETURN          reduce using rule 282 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    CASE            reduce using rule 282 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)


state 775

    (295) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .

    DEF             reduce using rule 295 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    VARIABLE        reduce using rule 295 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    PRINTLN         reduce using rule 295 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    PRINT           reduce using rule 295 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    READLINE        reduce using rule 295 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    VAR             reduce using rule 295 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    VAL             reduce using rule 295 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    WHILE           reduce using rule 295 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    FOR             reduce using rule 295 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    IF              reduce using rule 295 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    STRING          reduce using rule 295 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    $end            reduce using rule 295 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    LLAVE_D         reduce using rule 295 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    INT             reduce using rule 295 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    LONG            reduce using rule 295 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    FLOAT           reduce using rule 295 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    DOUBLE          reduce using rule 295 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    RETURN          reduce using rule 295 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    CASE            reduce using rule 295 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)


state 776

    (296) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .

    DEF             reduce using rule 296 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    VARIABLE        reduce using rule 296 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    PRINTLN         reduce using rule 296 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    PRINT           reduce using rule 296 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    READLINE        reduce using rule 296 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    VAR             reduce using rule 296 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    VAL             reduce using rule 296 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    WHILE           reduce using rule 296 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    FOR             reduce using rule 296 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    IF              reduce using rule 296 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    STRING          reduce using rule 296 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    $end            reduce using rule 296 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    LLAVE_D         reduce using rule 296 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    INT             reduce using rule 296 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    LONG            reduce using rule 296 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    FLOAT           reduce using rule 296 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    DOUBLE          reduce using rule 296 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    RETURN          reduce using rule 296 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    CASE            reduce using rule 296 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)


state 777

    (297) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .

    DEF             reduce using rule 297 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    VARIABLE        reduce using rule 297 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    PRINTLN         reduce using rule 297 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    PRINT           reduce using rule 297 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    READLINE        reduce using rule 297 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    VAR             reduce using rule 297 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    VAL             reduce using rule 297 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    WHILE           reduce using rule 297 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    FOR             reduce using rule 297 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    IF              reduce using rule 297 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    STRING          reduce using rule 297 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    $end            reduce using rule 297 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    LLAVE_D         reduce using rule 297 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    INT             reduce using rule 297 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    LONG            reduce using rule 297 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    FLOAT           reduce using rule 297 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    DOUBLE          reduce using rule 297 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    RETURN          reduce using rule 297 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    CASE            reduce using rule 297 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)


state 778

    (298) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .

    DEF             reduce using rule 298 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    VARIABLE        reduce using rule 298 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    PRINTLN         reduce using rule 298 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    PRINT           reduce using rule 298 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    READLINE        reduce using rule 298 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    VAR             reduce using rule 298 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    VAL             reduce using rule 298 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    WHILE           reduce using rule 298 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    FOR             reduce using rule 298 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    IF              reduce using rule 298 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    STRING          reduce using rule 298 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    $end            reduce using rule 298 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    LLAVE_D         reduce using rule 298 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    INT             reduce using rule 298 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    LONG            reduce using rule 298 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    FLOAT           reduce using rule 298 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    DOUBLE          reduce using rule 298 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    RETURN          reduce using rule 298 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    CASE            reduce using rule 298 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)


state 779

    (291) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .

    DEF             reduce using rule 291 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    VARIABLE        reduce using rule 291 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    PRINTLN         reduce using rule 291 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    PRINT           reduce using rule 291 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    READLINE        reduce using rule 291 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    VAR             reduce using rule 291 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    VAL             reduce using rule 291 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    WHILE           reduce using rule 291 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    FOR             reduce using rule 291 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    IF              reduce using rule 291 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    STRING          reduce using rule 291 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    $end            reduce using rule 291 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    LLAVE_D         reduce using rule 291 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    INT             reduce using rule 291 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    LONG            reduce using rule 291 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    FLOAT           reduce using rule 291 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    DOUBLE          reduce using rule 291 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    RETURN          reduce using rule 291 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    CASE            reduce using rule 291 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)


state 780

    (292) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .

    DEF             reduce using rule 292 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    VARIABLE        reduce using rule 292 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    PRINTLN         reduce using rule 292 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    PRINT           reduce using rule 292 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    READLINE        reduce using rule 292 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    VAR             reduce using rule 292 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    VAL             reduce using rule 292 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    WHILE           reduce using rule 292 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    FOR             reduce using rule 292 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    IF              reduce using rule 292 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    STRING          reduce using rule 292 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    $end            reduce using rule 292 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    LLAVE_D         reduce using rule 292 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    INT             reduce using rule 292 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    LONG            reduce using rule 292 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    FLOAT           reduce using rule 292 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    DOUBLE          reduce using rule 292 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    RETURN          reduce using rule 292 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    CASE            reduce using rule 292 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)


state 781

    (293) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .

    DEF             reduce using rule 293 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    VARIABLE        reduce using rule 293 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    PRINTLN         reduce using rule 293 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    PRINT           reduce using rule 293 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    READLINE        reduce using rule 293 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    VAR             reduce using rule 293 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    VAL             reduce using rule 293 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    WHILE           reduce using rule 293 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    FOR             reduce using rule 293 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    IF              reduce using rule 293 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    STRING          reduce using rule 293 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    $end            reduce using rule 293 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    LLAVE_D         reduce using rule 293 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    INT             reduce using rule 293 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    LONG            reduce using rule 293 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    FLOAT           reduce using rule 293 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    DOUBLE          reduce using rule 293 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    RETURN          reduce using rule 293 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    CASE            reduce using rule 293 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)


state 782

    (294) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .

    DEF             reduce using rule 294 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    VARIABLE        reduce using rule 294 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    PRINTLN         reduce using rule 294 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    PRINT           reduce using rule 294 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    READLINE        reduce using rule 294 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    VAR             reduce using rule 294 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    VAL             reduce using rule 294 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    WHILE           reduce using rule 294 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    FOR             reduce using rule 294 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    IF              reduce using rule 294 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    STRING          reduce using rule 294 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    $end            reduce using rule 294 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    LLAVE_D         reduce using rule 294 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    INT             reduce using rule 294 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    LONG            reduce using rule 294 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    FLOAT           reduce using rule 294 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    DOUBLE          reduce using rule 294 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    RETURN          reduce using rule 294 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    CASE            reduce using rule 294 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)


state 783

    (287) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .

    DEF             reduce using rule 287 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    VARIABLE        reduce using rule 287 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    PRINTLN         reduce using rule 287 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    PRINT           reduce using rule 287 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    READLINE        reduce using rule 287 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    VAR             reduce using rule 287 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    VAL             reduce using rule 287 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    WHILE           reduce using rule 287 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    FOR             reduce using rule 287 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    IF              reduce using rule 287 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    STRING          reduce using rule 287 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    $end            reduce using rule 287 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    LLAVE_D         reduce using rule 287 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    INT             reduce using rule 287 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    LONG            reduce using rule 287 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    FLOAT           reduce using rule 287 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    DOUBLE          reduce using rule 287 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    RETURN          reduce using rule 287 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    CASE            reduce using rule 287 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)


state 784

    (288) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .

    DEF             reduce using rule 288 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    VARIABLE        reduce using rule 288 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    PRINTLN         reduce using rule 288 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    PRINT           reduce using rule 288 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    READLINE        reduce using rule 288 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    VAR             reduce using rule 288 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    VAL             reduce using rule 288 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    WHILE           reduce using rule 288 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    FOR             reduce using rule 288 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    IF              reduce using rule 288 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    STRING          reduce using rule 288 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    $end            reduce using rule 288 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    LLAVE_D         reduce using rule 288 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    INT             reduce using rule 288 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    LONG            reduce using rule 288 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    FLOAT           reduce using rule 288 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    DOUBLE          reduce using rule 288 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    RETURN          reduce using rule 288 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    CASE            reduce using rule 288 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)


state 785

    (289) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .

    DEF             reduce using rule 289 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    VARIABLE        reduce using rule 289 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    PRINTLN         reduce using rule 289 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    PRINT           reduce using rule 289 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    READLINE        reduce using rule 289 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    VAR             reduce using rule 289 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    VAL             reduce using rule 289 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    WHILE           reduce using rule 289 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    FOR             reduce using rule 289 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    IF              reduce using rule 289 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    STRING          reduce using rule 289 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    $end            reduce using rule 289 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    LLAVE_D         reduce using rule 289 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    INT             reduce using rule 289 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    LONG            reduce using rule 289 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    FLOAT           reduce using rule 289 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    DOUBLE          reduce using rule 289 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    RETURN          reduce using rule 289 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    CASE            reduce using rule 289 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)


state 786

    (290) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .

    DEF             reduce using rule 290 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    VARIABLE        reduce using rule 290 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    PRINTLN         reduce using rule 290 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    PRINT           reduce using rule 290 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    READLINE        reduce using rule 290 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    VAR             reduce using rule 290 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    VAL             reduce using rule 290 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    WHILE           reduce using rule 290 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    FOR             reduce using rule 290 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    IF              reduce using rule 290 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    STRING          reduce using rule 290 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    $end            reduce using rule 290 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    LLAVE_D         reduce using rule 290 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    INT             reduce using rule 290 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    LONG            reduce using rule 290 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    FLOAT           reduce using rule 290 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    DOUBLE          reduce using rule 290 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    RETURN          reduce using rule 290 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    CASE            reduce using rule 290 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)


state 787

    (283) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .

    DEF             reduce using rule 283 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    VARIABLE        reduce using rule 283 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    PRINTLN         reduce using rule 283 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    PRINT           reduce using rule 283 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    READLINE        reduce using rule 283 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    VAR             reduce using rule 283 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    VAL             reduce using rule 283 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    WHILE           reduce using rule 283 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    FOR             reduce using rule 283 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    IF              reduce using rule 283 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    STRING          reduce using rule 283 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    $end            reduce using rule 283 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    LLAVE_D         reduce using rule 283 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    INT             reduce using rule 283 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    LONG            reduce using rule 283 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    FLOAT           reduce using rule 283 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    DOUBLE          reduce using rule 283 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    RETURN          reduce using rule 283 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    CASE            reduce using rule 283 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)


state 788

    (284) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .

    DEF             reduce using rule 284 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    VARIABLE        reduce using rule 284 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    PRINTLN         reduce using rule 284 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    PRINT           reduce using rule 284 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    READLINE        reduce using rule 284 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    VAR             reduce using rule 284 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    VAL             reduce using rule 284 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    WHILE           reduce using rule 284 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    FOR             reduce using rule 284 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    IF              reduce using rule 284 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    STRING          reduce using rule 284 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    $end            reduce using rule 284 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    LLAVE_D         reduce using rule 284 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    INT             reduce using rule 284 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    LONG            reduce using rule 284 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    FLOAT           reduce using rule 284 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    DOUBLE          reduce using rule 284 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    RETURN          reduce using rule 284 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    CASE            reduce using rule 284 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)


state 789

    (285) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .

    DEF             reduce using rule 285 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    VARIABLE        reduce using rule 285 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    PRINTLN         reduce using rule 285 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    PRINT           reduce using rule 285 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    READLINE        reduce using rule 285 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    VAR             reduce using rule 285 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    VAL             reduce using rule 285 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    WHILE           reduce using rule 285 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    FOR             reduce using rule 285 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    IF              reduce using rule 285 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    STRING          reduce using rule 285 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    $end            reduce using rule 285 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    LLAVE_D         reduce using rule 285 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    INT             reduce using rule 285 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    LONG            reduce using rule 285 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    FLOAT           reduce using rule 285 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    DOUBLE          reduce using rule 285 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    RETURN          reduce using rule 285 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    CASE            reduce using rule 285 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)


state 790

    (286) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .

    DEF             reduce using rule 286 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    VARIABLE        reduce using rule 286 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    PRINTLN         reduce using rule 286 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    PRINT           reduce using rule 286 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    READLINE        reduce using rule 286 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    VAR             reduce using rule 286 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    VAL             reduce using rule 286 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    WHILE           reduce using rule 286 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    FOR             reduce using rule 286 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    IF              reduce using rule 286 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    STRING          reduce using rule 286 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    $end            reduce using rule 286 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    LLAVE_D         reduce using rule 286 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    INT             reduce using rule 286 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    LONG            reduce using rule 286 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    FLOAT           reduce using rule 286 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    DOUBLE          reduce using rule 286 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    RETURN          reduce using rule 286 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    CASE            reduce using rule 286 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)


state 791

    (163) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I . INT PAR_D

    INT             shift and go to state 793


state 792

    (161) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT . PAR_D

    PAR_D           shift and go to state 794


state 793

    (163) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT . PAR_D

    PAR_D           shift and go to state 795


state 794

    (161) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .

    DEF             reduce using rule 161 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VARIABLE        reduce using rule 161 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINTLN         reduce using rule 161 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINT           reduce using rule 161 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    READLINE        reduce using rule 161 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAR             reduce using rule 161 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAL             reduce using rule 161 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    WHILE           reduce using rule 161 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FOR             reduce using rule 161 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    IF              reduce using rule 161 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    STRING          reduce using rule 161 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    $end            reduce using rule 161 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LLAVE_D         reduce using rule 161 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    INT             reduce using rule 161 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LONG            reduce using rule 161 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FLOAT           reduce using rule 161 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    DOUBLE          reduce using rule 161 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    RETURN          reduce using rule 161 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    CASE            reduce using rule 161 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)


state 795

    (163) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .

    DEF             reduce using rule 163 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VARIABLE        reduce using rule 163 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINTLN         reduce using rule 163 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINT           reduce using rule 163 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    READLINE        reduce using rule 163 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAR             reduce using rule 163 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAL             reduce using rule 163 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    WHILE           reduce using rule 163 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FOR             reduce using rule 163 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    IF              reduce using rule 163 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    STRING          reduce using rule 163 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    $end            reduce using rule 163 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LLAVE_D         reduce using rule 163 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    INT             reduce using rule 163 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LONG            reduce using rule 163 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FLOAT           reduce using rule 163 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    DOUBLE          reduce using rule 163 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    RETURN          reduce using rule 163 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    CASE            reduce using rule 163 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 49 resolved as shift
WARNING: shift/reduce conflict for PAR_D in state 394 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_D in state 443 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_D in state 444 resolved as shift
WARNING: shift/reduce conflict for PAR_D in state 551 resolved as shift
WARNING: shift/reduce conflict for PAR_D in state 552 resolved as shift
WARNING: shift/reduce conflict for LLAVE_D in state 555 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 597 resolved as shift
WARNING: shift/reduce conflict for LLAVE_D in state 599 resolved as shift
WARNING: reduce/reduce conflict in state 166 resolved using rule (asignacionLong -> VAR VARIABLE IGUAL longvalues)
WARNING: rejected rule (floatvalues -> longvalues) in state 166
WARNING: reduce/reduce conflict in state 167 resolved using rule (asignacionInt -> VAR VARIABLE IGUAL intvalues)
WARNING: rejected rule (longvalues -> intvalues) in state 167
WARNING: reduce/reduce conflict in state 168 resolved using rule (asignacionFloat -> VAR VARIABLE IGUAL floatvalues)
WARNING: rejected rule (doublevalues -> floatvalues) in state 168
WARNING: reduce/reduce conflict in state 177 resolved using rule (intvalues -> INT)
WARNING: rejected rule (longvalues -> INT) in state 177
WARNING: reduce/reduce conflict in state 200 resolved using rule (asignacionLong -> VAL VARIABLE IGUAL longvalues)
WARNING: rejected rule (floatvalues -> longvalues) in state 200
WARNING: reduce/reduce conflict in state 201 resolved using rule (asignacionInt -> VAL VARIABLE IGUAL intvalues)
WARNING: rejected rule (longvalues -> intvalues) in state 201
WARNING: reduce/reduce conflict in state 202 resolved using rule (asignacionFloat -> VAL VARIABLE IGUAL floatvalues)
WARNING: rejected rule (doublevalues -> floatvalues) in state 202
WARNING: reduce/reduce conflict in state 420 resolved using rule (intvalues -> INT)
WARNING: rejected rule (longvalues -> INT) in state 420
WARNING: Rule (longvalues -> INT) is never reduced

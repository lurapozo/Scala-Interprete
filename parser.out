Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ARROBA
    BACKTICK
    CATCH
    CLASS
    DO
    EXTENDS
    FINAL
    FINALLY
    FOR_SOME
    HASHTAG
    IMPLICIT
    IMPORT
    LAZY
    LIBRERIA_IO
    MACRO
    MAYOR_IGUAL
    MENOR_IGUAL
    NEW
    NULL
    OBJECT
    OVERRIDE
    PACKAGE
    PRIVATE
    PROTECTED
    REVERSE
    SEALED
    SUPER
    THIS
    THROW
    TRAIT
    TRY
    TYPE
    WITH
    YIELD

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> funcion
Rule 2     cuerpo -> funcall
Rule 3     cuerpo -> impresion
Rule 4     cuerpo -> entrada
Rule 5     cuerpo -> asignacion
Rule 6     cuerpo -> while
Rule 7     cuerpo -> for
Rule 8     cuerpo -> match
Rule 9     cuerpo -> if
Rule 10    cuerpo -> funcion cuerpo
Rule 11    cuerpo -> asignacion cuerpo
Rule 12    cuerpo -> while cuerpo
Rule 13    cuerpo -> for cuerpo
Rule 14    cuerpo -> if cuerpo
Rule 15    cuerpo -> match cuerpo
Rule 16    contenido -> asignacion
Rule 17    contenido -> reasignacion
Rule 18    contenido -> funcall
Rule 19    contenido -> impresion
Rule 20    contenido -> entrada
Rule 21    contenido -> while
Rule 22    contenido -> for
Rule 23    contenido -> match
Rule 24    contenido -> if
Rule 25    contenido -> aritmetica
Rule 26    contenido -> asignacion contenido
Rule 27    contenido -> reasignacion contenido
Rule 28    contenido -> funcall contenido
Rule 29    contenido -> impresion contenido
Rule 30    contenido -> entrada contenido
Rule 31    contenido -> while contenido
Rule 32    contenido -> for contenido
Rule 33    contenido -> if contenido
Rule 34    contenido -> match contenido
Rule 35    contenido -> aritmetica contenido
Rule 36    contenidoLine -> asignacion
Rule 37    contenidoLine -> reasignacion
Rule 38    contenidoLine -> funcall
Rule 39    contenidoLine -> impresion
Rule 40    contenidoLine -> entrada
Rule 41    asignacion -> VAR VARIABLE IGUAL VARIABLE
Rule 42    asignacion -> VAL VARIABLE IGUAL VARIABLE
Rule 43    asignacion -> VAR VARIABLE IGUAL aritmetica
Rule 44    asignacion -> VAL VARIABLE IGUAL aritmetica
Rule 45    asignacion -> VAR VARIABLE IGUAL returnfun
Rule 46    asignacion -> VAL VARIABLE IGUAL returnfun
Rule 47    asignacion -> asignacionLong
Rule 48    asignacion -> asignacionInt
Rule 49    asignacion -> asignacionFloat
Rule 50    asignacion -> asignacionDouble
Rule 51    asignacion -> asignacionString
Rule 52    asignacion -> asignacionChar
Rule 53    asignacion -> asignacionBoolean
Rule 54    asignacion -> array
Rule 55    asignacion -> list
Rule 56    asignacionLong -> VAR VARIABLE IGUAL LONG
Rule 57    asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
Rule 58    asignacionLong -> VAL VARIABLE IGUAL LONG
Rule 59    asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
Rule 60    asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
Rule 61    asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
Rule 62    asignacionInt -> VAR VARIABLE IGUAL INT
Rule 63    asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
Rule 64    asignacionInt -> VAL VARIABLE IGUAL INT
Rule 65    asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
Rule 66    asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
Rule 67    asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
Rule 68    asignacionFloat -> VAR VARIABLE IGUAL FLOAT
Rule 69    asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
Rule 70    asignacionFloat -> VAL VARIABLE IGUAL FLOAT
Rule 71    asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
Rule 72    asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
Rule 73    asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
Rule 74    asignacionDouble -> VAR VARIABLE IGUAL DOUBLE
Rule 75    asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
Rule 76    asignacionDouble -> VAL VARIABLE IGUAL DOUBLE
Rule 77    asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
Rule 78    asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
Rule 79    asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
Rule 80    asignacionString -> VAR VARIABLE IGUAL STRING
Rule 81    asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
Rule 82    asignacionString -> VAL VARIABLE IGUAL STRING
Rule 83    asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
Rule 84    asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
Rule 85    asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
Rule 86    asignacionChar -> VAR VARIABLE IGUAL CHAR
Rule 87    asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
Rule 88    asignacionChar -> VAL VARIABLE IGUAL CHAR
Rule 89    asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
Rule 90    asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
Rule 91    asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
Rule 92    asignacionBoolean -> VAR VARIABLE IGUAL booleanos
Rule 93    asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
Rule 94    asignacionBoolean -> VAL VARIABLE IGUAL booleanos
Rule 95    asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
Rule 96    asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
Rule 97    asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
Rule 98    reasignacion -> VARIABLE IGUAL valor
Rule 99    reasignacion -> VARIABLE IGUAL returnfun
Rule 100   tipo -> CHARCLASS
Rule 101   tipo -> STRINGCLASS
Rule 102   tipo -> BOOLCLASS
Rule 103   tipo -> INTCLASS
Rule 104   tipo -> LONGCLASS
Rule 105   tipo -> DOUBLECLASS
Rule 106   tipo -> FLOATCLASS
Rule 107   valor -> STRING
Rule 108   valor -> CHAR
Rule 109   valor -> VARIABLE
Rule 110   valor -> numeros
Rule 111   valor -> booleanos
Rule 112   booleanos -> TRUE
Rule 113   booleanos -> FLASE
Rule 114   numeros -> INT
Rule 115   numeros -> LONG
Rule 116   numeros -> FLOAT
Rule 117   numeros -> DOUBLE
Rule 118   funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
Rule 119   declaracion -> VARIABLE DOBLE_PUNTO tipo
Rule 120   declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor
Rule 121   parametro -> parametros
Rule 122   parametro -> PAR_I PAR_D
Rule 123   parametros -> PAR_I declaracion PAR_D
Rule 124   parametros -> PAR_I declaracion PAR_D parametros
Rule 125   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
Rule 126   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
Rule 127   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
Rule 128   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
Rule 129   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
Rule 130   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
Rule 131   dectipo -> DOBLE_PUNTO tipo
Rule 132   dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D
Rule 133   tipos -> tipo
Rule 134   tipos -> tipo tiposentry
Rule 135   tiposentry -> COMA tipo
Rule 136   tiposentry -> COMA tipo tiposentry
Rule 137   impresion -> PRINTLN PAR_I valorI PAR_D
Rule 138   impresion -> PRINT PAR_I valorI PAR_D
Rule 139   valorI -> valor MAS valorI
Rule 140   valorI -> valor
Rule 141   entrada -> READLINE PAR_I PAR_D
Rule 142   funcall -> VARIABLE PAR_I valores PAR_D
Rule 143   funcall -> VARIABLE PAR_I PAR_D
Rule 144   returnfun -> returnCastable
Rule 145   returnfun -> castingcall
Rule 146   returnCastable -> entrada
Rule 147   returnCastable -> funcall
Rule 148   castingcall -> returnCastable PUNTO castingfun
Rule 149   castingcall -> VARIABLE PUNTO castingfun
Rule 150   castingfun -> TO_INT
Rule 151   castingfun -> TO_DOUBLE
Rule 152   castingfun -> TO_FLOAT
Rule 153   castingfun -> TO_LONG
Rule 154   array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 155   array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 156   array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
Rule 157   list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
Rule 158   list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
Rule 159   valores -> valor
Rule 160   valores -> valor COMA valores
Rule 161   tuple -> PAR_I valores PAR_D
Rule 162   asignacion -> VAR VARIABLE IGUAL tuple
Rule 163   asignacion -> VAL VARIABLE IGUAL tuple
Rule 164   asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple
Rule 165   asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple
Rule 166   while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 167   for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
Rule 168   for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
Rule 169   for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
Rule 170   for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
Rule 171   for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
Rule 172   for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
Rule 173   match -> VARIABLE MATCH LLAVE_I cases LLAVE_D
Rule 174   cases -> casesInt
Rule 175   cases -> casesLgn
Rule 176   cases -> casesFlt
Rule 177   cases -> casesDob
Rule 178   cases -> casesStr
Rule 179   cases -> casesChar
Rule 180   cases -> casesBool
Rule 181   caseInt -> CASE INT FUNCION_FLECHA codeBlock
Rule 182   casesInt -> caseInt
Rule 183   casesInt -> caseInt casesInt
Rule 184   casesInt -> caseInt defcase
Rule 185   caseLgn -> CASE LONG FUNCION_FLECHA codeBlock
Rule 186   casesLgn -> caseLgn
Rule 187   casesLgn -> caseLgn casesLgn
Rule 188   casesLgn -> caseLgn defcase
Rule 189   caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock
Rule 190   casesFlt -> caseFlt
Rule 191   casesFlt -> caseFlt casesFlt
Rule 192   casesFlt -> caseFlt defcase
Rule 193   caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock
Rule 194   casesDob -> caseDob
Rule 195   casesDob -> caseDob casesDob
Rule 196   casesDob -> caseDob defcase
Rule 197   caseStr -> CASE STRING FUNCION_FLECHA codeBlock
Rule 198   casesStr -> caseStr
Rule 199   casesStr -> caseStr casesStr
Rule 200   casesStr -> caseStr defcase
Rule 201   caseChar -> CASE CHAR FUNCION_FLECHA codeBlock
Rule 202   casesChar -> caseChar
Rule 203   casesChar -> caseChar casesChar
Rule 204   casesChar -> caseChar defcase
Rule 205   caseBool -> CASE booleanos FUNCION_FLECHA codeBlock
Rule 206   casesBool -> caseBool
Rule 207   casesBool -> caseBool casesBool
Rule 208   casesBool -> caseBool defcase
Rule 209   defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock
Rule 210   codeBlock -> contenidoLine
Rule 211   codeBlock -> LLAVE_I contenido LLAVE_D
Rule 212   if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 213   if -> if elseif
Rule 214   if -> if else
Rule 215   elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 216   else -> ELSE LLAVE_I contenido LLAVE_D
Rule 217   else -> elseif else
Rule 218   condicional -> valorC logicos condicional
Rule 219   condicional -> valorC
Rule 220   valorC -> VARIABLE
Rule 221   valorC -> booleanos
Rule 222   valorC -> relacional
Rule 223   valorC -> NOT VARIABLE
Rule 224   valorC -> NOT booleanos
Rule 225   valorC -> NOT relacional
Rule 226   logicos -> AND
Rule 227   logicos -> OR
Rule 228   logicos -> NOT
Rule 229   relacional -> numeros comparacion numeros
Rule 230   relacional -> aritmetica comparacion aritmetica
Rule 231   relacional -> aritmetica comparacion numeros
Rule 232   relacional -> numeros comparacion aritmetica
Rule 233   relacional -> booleanos comparacion booleanos
Rule 234   relacional -> STRING comparacion STRING
Rule 235   relacional -> CHAR comparacion CHAR
Rule 236   relacional -> VARIABLE comparacion numeros
Rule 237   relacional -> numeros comparacion VARIABLE
Rule 238   relacional -> VARIABLE comparacion booleanos
Rule 239   relacional -> booleanos comparacion VARIABLE
Rule 240   relacional -> VARIABLE comparacion STRING
Rule 241   relacional -> STRING comparacion VARIABLE
Rule 242   relacional -> VARIABLE comparacion CHAR
Rule 243   relacional -> CHAR comparacion VARIABLE
Rule 244   relacional -> VARIABLE comparacion VARIABLE
Rule 245   comparacion -> IGUAL_COMPARACION
Rule 246   comparacion -> DIFERENTE
Rule 247   comparacion -> MAYOR
Rule 248   comparacion -> MENOR
Rule 249   aritmetica -> numeros aritmeticos numeros
Rule 250   aritmetica -> VARIABLE aritmeticos numeros
Rule 251   aritmetica -> numeros aritmeticos VARIABLE
Rule 252   aritmetica -> VARIABLE aritmeticos VARIABLE
Rule 253   aritmetica -> aritmetica aritmeticos numeros
Rule 254   aritmetica -> aritmetica aritmeticos VARIABLE
Rule 255   aritmeticos -> MENOS
Rule 256   aritmeticos -> MAS
Rule 257   aritmeticos -> MULTIPLICACION
Rule 258   aritmeticos -> DIVISION
Rule 259   aritmeticos -> MOD

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 226
ARRAYCLASS           : 154 155 155 156 156
ARROBA               : 
BACKTICK             : 
BOOLCLASS            : 93 95 96 97 102
CASE                 : 181 185 189 193 197 201 205 209
CATCH                : 
CHAR                 : 86 87 88 89 108 201 235 235 242 243
CHARCLASS            : 87 89 90 91 100
CLASS                : 
COMA                 : 135 136 160
CORCHETE_D           : 155 156 156 158
CORCHETE_I           : 155 156 156 158
DEF                  : 118 125 126 127 128 129 130
DIFERENTE            : 246
DIVISION             : 258
DO                   : 
DOBLE_PUNTO          : 57 59 60 61 63 65 66 67 69 71 72 73 75 77 78 79 81 83 84 85 87 89 90 91 93 95 96 97 119 120 131 132 155 156 158
DOUBLE               : 74 75 76 77 117 193
DOUBLECLASS          : 75 77 78 79 105
ELSE                 : 215 216
EXTENDS              : 
FINAL                : 
FINALLY              : 
FLASE                : 113
FLOAT                : 68 69 70 71 116 189
FLOATCLASS           : 69 71 72 73 106
FOR                  : 167 168 169 170 171 172
FOR_SOME             : 
FUNCION_FLECHA       : 181 185 189 193 197 201 205 209
HASHTAG              : 
IF                   : 212 215
IGUAL                : 41 42 43 44 45 46 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 118 120 125 126 127 128 129 130 154 155 156 157 158 162 163 164 165
IGUAL_COMPARACION    : 245
IMPLICIT             : 
IMPORT               : 
INT                  : 62 63 64 65 114 156 169 169 170 170 171 171 172 172 181
INTCLASS             : 63 65 66 67 103
ITERATOR             : 167 168 169 170 171 172
LAZY                 : 
LIBRERIA_IO          : 
LISTCLASS            : 157 158 158
LLAVE_D              : 118 125 126 127 128 129 130 166 167 168 169 170 171 172 173 211 212 215 216
LLAVE_I              : 118 125 126 127 128 129 130 166 167 168 169 170 171 172 173 211 212 215 216
LONG                 : 56 57 58 59 115 185
LONGCLASS            : 57 59 60 61 104
MACRO                : 
MAS                  : 139 256
MATCH                : 173
MAYOR                : 247
MAYOR_IGUAL          : 
MENOR                : 248
MENOR_IGUAL          : 
MENOS                : 255
MOD                  : 259
MULTIPLICACION       : 257
NEW                  : 
NOT                  : 223 224 225 228
NULL                 : 
OBJECT               : 
OR                   : 227
OVERRIDE             : 
PACKAGE              : 
PAR_D                : 122 123 124 132 137 138 141 142 143 154 155 156 157 158 161 166 167 168 169 170 171 172 212 215
PAR_I                : 122 123 124 132 137 138 141 142 143 154 155 156 157 158 161 166 167 168 169 170 171 172 212 215
PRINT                : 138
PRINTLN              : 137
PRIVATE              : 
PROTECTED            : 
PUNTO                : 148 149
READLINE             : 141
RETURN               : 125 126 127 128 129 130
REVERSE              : 
SEALED               : 
STRING               : 80 81 82 83 107 197 234 234 240 241
STRINGCLASS          : 81 83 84 85 101
SUBGUION             : 209
SUPER                : 
THIS                 : 
THROW                : 
TO                   : 169 171
TO_DOUBLE            : 151
TO_FLOAT             : 152
TO_INT               : 150
TO_LONG              : 153
TRAIT                : 
TRUE                 : 112
TRY                  : 
TYPE                 : 
UNTIL                : 170 172
VAL                  : 42 44 46 58 59 61 64 65 67 70 71 73 76 77 79 82 83 85 88 89 91 94 95 97 157 158 163 165
VAR                  : 41 43 45 56 57 60 62 63 66 68 69 72 74 75 78 80 81 84 86 87 90 92 93 96 154 155 156 162 164 167 171 172
VARIABLE             : 41 41 42 42 43 44 45 46 56 57 58 59 60 60 61 61 62 63 64 65 66 66 67 67 68 69 70 71 72 72 73 73 74 75 76 77 78 78 79 79 80 81 82 83 84 84 85 85 86 87 88 89 90 90 91 91 92 93 94 95 96 96 97 97 98 99 109 118 119 120 125 126 126 127 128 129 129 130 142 143 149 154 155 156 157 158 162 163 164 165 167 167 168 168 169 170 171 172 173 220 223 236 237 238 239 240 241 242 243 244 244 250 251 252 252 254
WHILE                : 166
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

aritmetica           : 25 35 43 44 230 230 231 232 253 254
aritmeticos          : 249 250 251 252 253 254
array                : 54
asignacion           : 5 11 16 26 36
asignacionBoolean    : 53
asignacionChar       : 52
asignacionDouble     : 50
asignacionFloat      : 49
asignacionInt        : 48
asignacionLong       : 47
asignacionString     : 51
booleanos            : 92 93 94 95 111 205 221 224 233 233 238 239
caseBool             : 206 207 208
caseChar             : 202 203 204
caseDob              : 194 195 196
caseFlt              : 190 191 192
caseInt              : 182 183 184
caseLgn              : 186 187 188
caseStr              : 198 199 200
cases                : 173
casesBool            : 180 207
casesChar            : 179 203
casesDob             : 177 195
casesFlt             : 176 191
casesInt             : 174 183
casesLgn             : 175 187
casesStr             : 178 199
castingcall          : 145
castingfun           : 148 149
codeBlock            : 181 185 189 193 197 201 205 209
comparacion          : 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244
condicional          : 166 212 215 218
contenido            : 26 27 28 29 30 31 32 33 34 35 118 125 126 127 128 129 130 166 167 168 169 170 171 172 211 212 215 216
contenidoLine        : 210
cuerpo               : 10 11 12 13 14 15 0
declaracion          : 123 124
dectipo              : 125 126 127
dectipoTupla         : 128 129 130 164 165
defcase              : 184 188 192 196 200 204 208
else                 : 214 217
elseif               : 213 217
entrada              : 4 20 30 40 146
for                  : 7 13 22 32
funcall              : 2 18 28 38 147
funcion              : 1 10
if                   : 9 14 24 33 213 214
impresion            : 3 19 29 39
list                 : 55
logicos              : 218
match                : 8 15 23 34
numeros              : 110 229 229 231 232 236 237 249 249 250 251 253
parametro            : 118 125 126 127 128 129 130
parametros           : 121 124
reasignacion         : 17 27 37
relacional           : 222 225
returnCastable       : 144 148
returnfun            : 45 46 99 127 130
tipo                 : 119 120 131 133 134 135 136 155 156 156 158
tipos                : 132
tiposentry           : 134 136
tuple                : 128 162 163 164 165
valor                : 98 120 125 139 140 159 160
valorC               : 218 219
valorI               : 137 138 139
valores              : 142 154 155 157 158 160 161
while                : 6 12 21 31

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . funcall
    (3) cuerpo -> . impresion
    (4) cuerpo -> . entrada
    (5) cuerpo -> . asignacion
    (6) cuerpo -> . while
    (7) cuerpo -> . for
    (8) cuerpo -> . match
    (9) cuerpo -> . if
    (10) cuerpo -> . funcion cuerpo
    (11) cuerpo -> . asignacion cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . for cuerpo
    (14) cuerpo -> . if cuerpo
    (15) cuerpo -> . match cuerpo
    (118) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    DEF             shift and go to state 11
    VARIABLE        shift and go to state 12
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29

    cuerpo                         shift and go to state 1
    funcion                        shift and go to state 2
    funcall                        shift and go to state 3
    impresion                      shift and go to state 4
    entrada                        shift and go to state 5
    asignacion                     shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    match                          shift and go to state 9
    if                             shift and go to state 10
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> funcion .
    (10) cuerpo -> funcion . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . funcall
    (3) cuerpo -> . impresion
    (4) cuerpo -> . entrada
    (5) cuerpo -> . asignacion
    (6) cuerpo -> . while
    (7) cuerpo -> . for
    (8) cuerpo -> . match
    (9) cuerpo -> . if
    (10) cuerpo -> . funcion cuerpo
    (11) cuerpo -> . asignacion cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . for cuerpo
    (14) cuerpo -> . if cuerpo
    (15) cuerpo -> . match cuerpo
    (118) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 1 (cuerpo -> funcion .)
    DEF             shift and go to state 11
    VARIABLE        shift and go to state 12
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29

    funcion                        shift and go to state 2
    cuerpo                         shift and go to state 30
    funcall                        shift and go to state 3
    impresion                      shift and go to state 4
    entrada                        shift and go to state 5
    asignacion                     shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    match                          shift and go to state 9
    if                             shift and go to state 10
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 3

    (2) cuerpo -> funcall .

    $end            reduce using rule 2 (cuerpo -> funcall .)


state 4

    (3) cuerpo -> impresion .

    $end            reduce using rule 3 (cuerpo -> impresion .)


state 5

    (4) cuerpo -> entrada .

    $end            reduce using rule 4 (cuerpo -> entrada .)


state 6

    (5) cuerpo -> asignacion .
    (11) cuerpo -> asignacion . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . funcall
    (3) cuerpo -> . impresion
    (4) cuerpo -> . entrada
    (5) cuerpo -> . asignacion
    (6) cuerpo -> . while
    (7) cuerpo -> . for
    (8) cuerpo -> . match
    (9) cuerpo -> . if
    (10) cuerpo -> . funcion cuerpo
    (11) cuerpo -> . asignacion cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . for cuerpo
    (14) cuerpo -> . if cuerpo
    (15) cuerpo -> . match cuerpo
    (118) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 5 (cuerpo -> asignacion .)
    DEF             shift and go to state 11
    VARIABLE        shift and go to state 12
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29

    asignacion                     shift and go to state 6
    cuerpo                         shift and go to state 31
    funcion                        shift and go to state 2
    funcall                        shift and go to state 3
    impresion                      shift and go to state 4
    entrada                        shift and go to state 5
    while                          shift and go to state 7
    for                            shift and go to state 8
    match                          shift and go to state 9
    if                             shift and go to state 10
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 7

    (6) cuerpo -> while .
    (12) cuerpo -> while . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . funcall
    (3) cuerpo -> . impresion
    (4) cuerpo -> . entrada
    (5) cuerpo -> . asignacion
    (6) cuerpo -> . while
    (7) cuerpo -> . for
    (8) cuerpo -> . match
    (9) cuerpo -> . if
    (10) cuerpo -> . funcion cuerpo
    (11) cuerpo -> . asignacion cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . for cuerpo
    (14) cuerpo -> . if cuerpo
    (15) cuerpo -> . match cuerpo
    (118) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 6 (cuerpo -> while .)
    DEF             shift and go to state 11
    VARIABLE        shift and go to state 12
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29

    while                          shift and go to state 7
    cuerpo                         shift and go to state 32
    funcion                        shift and go to state 2
    funcall                        shift and go to state 3
    impresion                      shift and go to state 4
    entrada                        shift and go to state 5
    asignacion                     shift and go to state 6
    for                            shift and go to state 8
    match                          shift and go to state 9
    if                             shift and go to state 10
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 8

    (7) cuerpo -> for .
    (13) cuerpo -> for . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . funcall
    (3) cuerpo -> . impresion
    (4) cuerpo -> . entrada
    (5) cuerpo -> . asignacion
    (6) cuerpo -> . while
    (7) cuerpo -> . for
    (8) cuerpo -> . match
    (9) cuerpo -> . if
    (10) cuerpo -> . funcion cuerpo
    (11) cuerpo -> . asignacion cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . for cuerpo
    (14) cuerpo -> . if cuerpo
    (15) cuerpo -> . match cuerpo
    (118) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 7 (cuerpo -> for .)
    DEF             shift and go to state 11
    VARIABLE        shift and go to state 12
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29

    for                            shift and go to state 8
    cuerpo                         shift and go to state 33
    funcion                        shift and go to state 2
    funcall                        shift and go to state 3
    impresion                      shift and go to state 4
    entrada                        shift and go to state 5
    asignacion                     shift and go to state 6
    while                          shift and go to state 7
    match                          shift and go to state 9
    if                             shift and go to state 10
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 9

    (8) cuerpo -> match .
    (15) cuerpo -> match . cuerpo
    (1) cuerpo -> . funcion
    (2) cuerpo -> . funcall
    (3) cuerpo -> . impresion
    (4) cuerpo -> . entrada
    (5) cuerpo -> . asignacion
    (6) cuerpo -> . while
    (7) cuerpo -> . for
    (8) cuerpo -> . match
    (9) cuerpo -> . if
    (10) cuerpo -> . funcion cuerpo
    (11) cuerpo -> . asignacion cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . for cuerpo
    (14) cuerpo -> . if cuerpo
    (15) cuerpo -> . match cuerpo
    (118) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 8 (cuerpo -> match .)
    DEF             shift and go to state 11
    VARIABLE        shift and go to state 12
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29

    match                          shift and go to state 9
    cuerpo                         shift and go to state 34
    funcion                        shift and go to state 2
    funcall                        shift and go to state 3
    impresion                      shift and go to state 4
    entrada                        shift and go to state 5
    asignacion                     shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    if                             shift and go to state 10
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 10

    (9) cuerpo -> if .
    (14) cuerpo -> if . cuerpo
    (213) if -> if . elseif
    (214) if -> if . else
    (1) cuerpo -> . funcion
    (2) cuerpo -> . funcall
    (3) cuerpo -> . impresion
    (4) cuerpo -> . entrada
    (5) cuerpo -> . asignacion
    (6) cuerpo -> . while
    (7) cuerpo -> . for
    (8) cuerpo -> . match
    (9) cuerpo -> . if
    (10) cuerpo -> . funcion cuerpo
    (11) cuerpo -> . asignacion cuerpo
    (12) cuerpo -> . while cuerpo
    (13) cuerpo -> . for cuerpo
    (14) cuerpo -> . if cuerpo
    (15) cuerpo -> . match cuerpo
    (215) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (216) else -> . ELSE LLAVE_I contenido LLAVE_D
    (217) else -> . elseif else
    (118) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (125) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (126) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (127) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    $end            reduce using rule 9 (cuerpo -> if .)
    ELSE            shift and go to state 38
    DEF             shift and go to state 11
    VARIABLE        shift and go to state 12
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29

    if                             shift and go to state 10
    cuerpo                         shift and go to state 35
    elseif                         shift and go to state 36
    else                           shift and go to state 37
    funcion                        shift and go to state 2
    funcall                        shift and go to state 3
    impresion                      shift and go to state 4
    entrada                        shift and go to state 5
    asignacion                     shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    match                          shift and go to state 9
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 11

    (118) funcion -> DEF . VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (125) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (126) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (127) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (128) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D

    VARIABLE        shift and go to state 39


state 12

    (142) funcall -> VARIABLE . PAR_I valores PAR_D
    (143) funcall -> VARIABLE . PAR_I PAR_D
    (173) match -> VARIABLE . MATCH LLAVE_I cases LLAVE_D

    PAR_I           shift and go to state 40
    MATCH           shift and go to state 41


state 13

    (137) impresion -> PRINTLN . PAR_I valorI PAR_D

    PAR_I           shift and go to state 42


state 14

    (138) impresion -> PRINT . PAR_I valorI PAR_D

    PAR_I           shift and go to state 43


state 15

    (141) entrada -> READLINE . PAR_I PAR_D

    PAR_I           shift and go to state 44


state 16

    (41) asignacion -> VAR . VARIABLE IGUAL VARIABLE
    (43) asignacion -> VAR . VARIABLE IGUAL aritmetica
    (45) asignacion -> VAR . VARIABLE IGUAL returnfun
    (162) asignacion -> VAR . VARIABLE IGUAL tuple
    (164) asignacion -> VAR . VARIABLE dectipoTupla IGUAL tuple
    (56) asignacionLong -> VAR . VARIABLE IGUAL LONG
    (57) asignacionLong -> VAR . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> VAR . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> VAR . VARIABLE IGUAL INT
    (63) asignacionInt -> VAR . VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> VAR . VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> VAR . VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> VAR . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> VAR . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> VAR . VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> VAR . VARIABLE IGUAL STRING
    (81) asignacionString -> VAR . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> VAR . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> VAR . VARIABLE IGUAL CHAR
    (87) asignacionChar -> VAR . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> VAR . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> VAR . VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> VAR . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> VAR . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> VAR . VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    VARIABLE        shift and go to state 45


state 17

    (42) asignacion -> VAL . VARIABLE IGUAL VARIABLE
    (44) asignacion -> VAL . VARIABLE IGUAL aritmetica
    (46) asignacion -> VAL . VARIABLE IGUAL returnfun
    (163) asignacion -> VAL . VARIABLE IGUAL tuple
    (165) asignacion -> VAL . VARIABLE dectipoTupla IGUAL tuple
    (58) asignacionLong -> VAL . VARIABLE IGUAL LONG
    (59) asignacionLong -> VAL . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> VAL . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionInt -> VAL . VARIABLE IGUAL INT
    (65) asignacionInt -> VAL . VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> VAL . VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionFloat -> VAL . VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> VAL . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> VAL . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionDouble -> VAL . VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionString -> VAL . VARIABLE IGUAL STRING
    (83) asignacionString -> VAL . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> VAL . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionChar -> VAL . VARIABLE IGUAL CHAR
    (89) asignacionChar -> VAL . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> VAL . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionBoolean -> VAL . VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> VAL . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> VAL . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) list -> VAL . VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> VAL . VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    VARIABLE        shift and go to state 46


state 18

    (47) asignacion -> asignacionLong .

    DEF             reduce using rule 47 (asignacion -> asignacionLong .)
    VARIABLE        reduce using rule 47 (asignacion -> asignacionLong .)
    PRINTLN         reduce using rule 47 (asignacion -> asignacionLong .)
    PRINT           reduce using rule 47 (asignacion -> asignacionLong .)
    READLINE        reduce using rule 47 (asignacion -> asignacionLong .)
    VAR             reduce using rule 47 (asignacion -> asignacionLong .)
    VAL             reduce using rule 47 (asignacion -> asignacionLong .)
    WHILE           reduce using rule 47 (asignacion -> asignacionLong .)
    FOR             reduce using rule 47 (asignacion -> asignacionLong .)
    IF              reduce using rule 47 (asignacion -> asignacionLong .)
    $end            reduce using rule 47 (asignacion -> asignacionLong .)
    INT             reduce using rule 47 (asignacion -> asignacionLong .)
    LONG            reduce using rule 47 (asignacion -> asignacionLong .)
    FLOAT           reduce using rule 47 (asignacion -> asignacionLong .)
    DOUBLE          reduce using rule 47 (asignacion -> asignacionLong .)
    LLAVE_D         reduce using rule 47 (asignacion -> asignacionLong .)
    RETURN          reduce using rule 47 (asignacion -> asignacionLong .)
    CASE            reduce using rule 47 (asignacion -> asignacionLong .)


state 19

    (48) asignacion -> asignacionInt .

    DEF             reduce using rule 48 (asignacion -> asignacionInt .)
    VARIABLE        reduce using rule 48 (asignacion -> asignacionInt .)
    PRINTLN         reduce using rule 48 (asignacion -> asignacionInt .)
    PRINT           reduce using rule 48 (asignacion -> asignacionInt .)
    READLINE        reduce using rule 48 (asignacion -> asignacionInt .)
    VAR             reduce using rule 48 (asignacion -> asignacionInt .)
    VAL             reduce using rule 48 (asignacion -> asignacionInt .)
    WHILE           reduce using rule 48 (asignacion -> asignacionInt .)
    FOR             reduce using rule 48 (asignacion -> asignacionInt .)
    IF              reduce using rule 48 (asignacion -> asignacionInt .)
    $end            reduce using rule 48 (asignacion -> asignacionInt .)
    INT             reduce using rule 48 (asignacion -> asignacionInt .)
    LONG            reduce using rule 48 (asignacion -> asignacionInt .)
    FLOAT           reduce using rule 48 (asignacion -> asignacionInt .)
    DOUBLE          reduce using rule 48 (asignacion -> asignacionInt .)
    LLAVE_D         reduce using rule 48 (asignacion -> asignacionInt .)
    RETURN          reduce using rule 48 (asignacion -> asignacionInt .)
    CASE            reduce using rule 48 (asignacion -> asignacionInt .)


state 20

    (49) asignacion -> asignacionFloat .

    DEF             reduce using rule 49 (asignacion -> asignacionFloat .)
    VARIABLE        reduce using rule 49 (asignacion -> asignacionFloat .)
    PRINTLN         reduce using rule 49 (asignacion -> asignacionFloat .)
    PRINT           reduce using rule 49 (asignacion -> asignacionFloat .)
    READLINE        reduce using rule 49 (asignacion -> asignacionFloat .)
    VAR             reduce using rule 49 (asignacion -> asignacionFloat .)
    VAL             reduce using rule 49 (asignacion -> asignacionFloat .)
    WHILE           reduce using rule 49 (asignacion -> asignacionFloat .)
    FOR             reduce using rule 49 (asignacion -> asignacionFloat .)
    IF              reduce using rule 49 (asignacion -> asignacionFloat .)
    $end            reduce using rule 49 (asignacion -> asignacionFloat .)
    INT             reduce using rule 49 (asignacion -> asignacionFloat .)
    LONG            reduce using rule 49 (asignacion -> asignacionFloat .)
    FLOAT           reduce using rule 49 (asignacion -> asignacionFloat .)
    DOUBLE          reduce using rule 49 (asignacion -> asignacionFloat .)
    LLAVE_D         reduce using rule 49 (asignacion -> asignacionFloat .)
    RETURN          reduce using rule 49 (asignacion -> asignacionFloat .)
    CASE            reduce using rule 49 (asignacion -> asignacionFloat .)


state 21

    (50) asignacion -> asignacionDouble .

    DEF             reduce using rule 50 (asignacion -> asignacionDouble .)
    VARIABLE        reduce using rule 50 (asignacion -> asignacionDouble .)
    PRINTLN         reduce using rule 50 (asignacion -> asignacionDouble .)
    PRINT           reduce using rule 50 (asignacion -> asignacionDouble .)
    READLINE        reduce using rule 50 (asignacion -> asignacionDouble .)
    VAR             reduce using rule 50 (asignacion -> asignacionDouble .)
    VAL             reduce using rule 50 (asignacion -> asignacionDouble .)
    WHILE           reduce using rule 50 (asignacion -> asignacionDouble .)
    FOR             reduce using rule 50 (asignacion -> asignacionDouble .)
    IF              reduce using rule 50 (asignacion -> asignacionDouble .)
    $end            reduce using rule 50 (asignacion -> asignacionDouble .)
    INT             reduce using rule 50 (asignacion -> asignacionDouble .)
    LONG            reduce using rule 50 (asignacion -> asignacionDouble .)
    FLOAT           reduce using rule 50 (asignacion -> asignacionDouble .)
    DOUBLE          reduce using rule 50 (asignacion -> asignacionDouble .)
    LLAVE_D         reduce using rule 50 (asignacion -> asignacionDouble .)
    RETURN          reduce using rule 50 (asignacion -> asignacionDouble .)
    CASE            reduce using rule 50 (asignacion -> asignacionDouble .)


state 22

    (51) asignacion -> asignacionString .

    DEF             reduce using rule 51 (asignacion -> asignacionString .)
    VARIABLE        reduce using rule 51 (asignacion -> asignacionString .)
    PRINTLN         reduce using rule 51 (asignacion -> asignacionString .)
    PRINT           reduce using rule 51 (asignacion -> asignacionString .)
    READLINE        reduce using rule 51 (asignacion -> asignacionString .)
    VAR             reduce using rule 51 (asignacion -> asignacionString .)
    VAL             reduce using rule 51 (asignacion -> asignacionString .)
    WHILE           reduce using rule 51 (asignacion -> asignacionString .)
    FOR             reduce using rule 51 (asignacion -> asignacionString .)
    IF              reduce using rule 51 (asignacion -> asignacionString .)
    $end            reduce using rule 51 (asignacion -> asignacionString .)
    INT             reduce using rule 51 (asignacion -> asignacionString .)
    LONG            reduce using rule 51 (asignacion -> asignacionString .)
    FLOAT           reduce using rule 51 (asignacion -> asignacionString .)
    DOUBLE          reduce using rule 51 (asignacion -> asignacionString .)
    LLAVE_D         reduce using rule 51 (asignacion -> asignacionString .)
    RETURN          reduce using rule 51 (asignacion -> asignacionString .)
    CASE            reduce using rule 51 (asignacion -> asignacionString .)


state 23

    (52) asignacion -> asignacionChar .

    DEF             reduce using rule 52 (asignacion -> asignacionChar .)
    VARIABLE        reduce using rule 52 (asignacion -> asignacionChar .)
    PRINTLN         reduce using rule 52 (asignacion -> asignacionChar .)
    PRINT           reduce using rule 52 (asignacion -> asignacionChar .)
    READLINE        reduce using rule 52 (asignacion -> asignacionChar .)
    VAR             reduce using rule 52 (asignacion -> asignacionChar .)
    VAL             reduce using rule 52 (asignacion -> asignacionChar .)
    WHILE           reduce using rule 52 (asignacion -> asignacionChar .)
    FOR             reduce using rule 52 (asignacion -> asignacionChar .)
    IF              reduce using rule 52 (asignacion -> asignacionChar .)
    $end            reduce using rule 52 (asignacion -> asignacionChar .)
    INT             reduce using rule 52 (asignacion -> asignacionChar .)
    LONG            reduce using rule 52 (asignacion -> asignacionChar .)
    FLOAT           reduce using rule 52 (asignacion -> asignacionChar .)
    DOUBLE          reduce using rule 52 (asignacion -> asignacionChar .)
    LLAVE_D         reduce using rule 52 (asignacion -> asignacionChar .)
    RETURN          reduce using rule 52 (asignacion -> asignacionChar .)
    CASE            reduce using rule 52 (asignacion -> asignacionChar .)


state 24

    (53) asignacion -> asignacionBoolean .

    DEF             reduce using rule 53 (asignacion -> asignacionBoolean .)
    VARIABLE        reduce using rule 53 (asignacion -> asignacionBoolean .)
    PRINTLN         reduce using rule 53 (asignacion -> asignacionBoolean .)
    PRINT           reduce using rule 53 (asignacion -> asignacionBoolean .)
    READLINE        reduce using rule 53 (asignacion -> asignacionBoolean .)
    VAR             reduce using rule 53 (asignacion -> asignacionBoolean .)
    VAL             reduce using rule 53 (asignacion -> asignacionBoolean .)
    WHILE           reduce using rule 53 (asignacion -> asignacionBoolean .)
    FOR             reduce using rule 53 (asignacion -> asignacionBoolean .)
    IF              reduce using rule 53 (asignacion -> asignacionBoolean .)
    $end            reduce using rule 53 (asignacion -> asignacionBoolean .)
    INT             reduce using rule 53 (asignacion -> asignacionBoolean .)
    LONG            reduce using rule 53 (asignacion -> asignacionBoolean .)
    FLOAT           reduce using rule 53 (asignacion -> asignacionBoolean .)
    DOUBLE          reduce using rule 53 (asignacion -> asignacionBoolean .)
    LLAVE_D         reduce using rule 53 (asignacion -> asignacionBoolean .)
    RETURN          reduce using rule 53 (asignacion -> asignacionBoolean .)
    CASE            reduce using rule 53 (asignacion -> asignacionBoolean .)


state 25

    (54) asignacion -> array .

    DEF             reduce using rule 54 (asignacion -> array .)
    VARIABLE        reduce using rule 54 (asignacion -> array .)
    PRINTLN         reduce using rule 54 (asignacion -> array .)
    PRINT           reduce using rule 54 (asignacion -> array .)
    READLINE        reduce using rule 54 (asignacion -> array .)
    VAR             reduce using rule 54 (asignacion -> array .)
    VAL             reduce using rule 54 (asignacion -> array .)
    WHILE           reduce using rule 54 (asignacion -> array .)
    FOR             reduce using rule 54 (asignacion -> array .)
    IF              reduce using rule 54 (asignacion -> array .)
    $end            reduce using rule 54 (asignacion -> array .)
    INT             reduce using rule 54 (asignacion -> array .)
    LONG            reduce using rule 54 (asignacion -> array .)
    FLOAT           reduce using rule 54 (asignacion -> array .)
    DOUBLE          reduce using rule 54 (asignacion -> array .)
    LLAVE_D         reduce using rule 54 (asignacion -> array .)
    RETURN          reduce using rule 54 (asignacion -> array .)
    CASE            reduce using rule 54 (asignacion -> array .)


state 26

    (55) asignacion -> list .

    DEF             reduce using rule 55 (asignacion -> list .)
    VARIABLE        reduce using rule 55 (asignacion -> list .)
    PRINTLN         reduce using rule 55 (asignacion -> list .)
    PRINT           reduce using rule 55 (asignacion -> list .)
    READLINE        reduce using rule 55 (asignacion -> list .)
    VAR             reduce using rule 55 (asignacion -> list .)
    VAL             reduce using rule 55 (asignacion -> list .)
    WHILE           reduce using rule 55 (asignacion -> list .)
    FOR             reduce using rule 55 (asignacion -> list .)
    IF              reduce using rule 55 (asignacion -> list .)
    $end            reduce using rule 55 (asignacion -> list .)
    INT             reduce using rule 55 (asignacion -> list .)
    LONG            reduce using rule 55 (asignacion -> list .)
    FLOAT           reduce using rule 55 (asignacion -> list .)
    DOUBLE          reduce using rule 55 (asignacion -> list .)
    LLAVE_D         reduce using rule 55 (asignacion -> list .)
    RETURN          reduce using rule 55 (asignacion -> list .)
    CASE            reduce using rule 55 (asignacion -> list .)


state 27

    (166) while -> WHILE . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 47


state 28

    (167) for -> FOR . PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> FOR . PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> FOR . PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> FOR . PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> FOR . PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> FOR . PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 48


state 29

    (212) if -> IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 49


state 30

    (10) cuerpo -> funcion cuerpo .

    $end            reduce using rule 10 (cuerpo -> funcion cuerpo .)


state 31

    (11) cuerpo -> asignacion cuerpo .

    $end            reduce using rule 11 (cuerpo -> asignacion cuerpo .)


state 32

    (12) cuerpo -> while cuerpo .

    $end            reduce using rule 12 (cuerpo -> while cuerpo .)


state 33

    (13) cuerpo -> for cuerpo .

    $end            reduce using rule 13 (cuerpo -> for cuerpo .)


state 34

    (15) cuerpo -> match cuerpo .

    $end            reduce using rule 15 (cuerpo -> match cuerpo .)


state 35

    (14) cuerpo -> if cuerpo .

    $end            reduce using rule 14 (cuerpo -> if cuerpo .)


state 36

    (213) if -> if elseif .
    (217) else -> elseif . else
    (216) else -> . ELSE LLAVE_I contenido LLAVE_D
    (217) else -> . elseif else
    (215) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

  ! shift/reduce conflict for ELSE resolved as shift
    DEF             reduce using rule 213 (if -> if elseif .)
    VARIABLE        reduce using rule 213 (if -> if elseif .)
    PRINTLN         reduce using rule 213 (if -> if elseif .)
    PRINT           reduce using rule 213 (if -> if elseif .)
    READLINE        reduce using rule 213 (if -> if elseif .)
    VAR             reduce using rule 213 (if -> if elseif .)
    VAL             reduce using rule 213 (if -> if elseif .)
    WHILE           reduce using rule 213 (if -> if elseif .)
    FOR             reduce using rule 213 (if -> if elseif .)
    IF              reduce using rule 213 (if -> if elseif .)
    $end            reduce using rule 213 (if -> if elseif .)
    INT             reduce using rule 213 (if -> if elseif .)
    LONG            reduce using rule 213 (if -> if elseif .)
    FLOAT           reduce using rule 213 (if -> if elseif .)
    DOUBLE          reduce using rule 213 (if -> if elseif .)
    LLAVE_D         reduce using rule 213 (if -> if elseif .)
    RETURN          reduce using rule 213 (if -> if elseif .)
    ELSE            shift and go to state 52

  ! ELSE            [ reduce using rule 213 (if -> if elseif .) ]

    elseif                         shift and go to state 50
    else                           shift and go to state 51

state 37

    (214) if -> if else .

    ELSE            reduce using rule 214 (if -> if else .)
    DEF             reduce using rule 214 (if -> if else .)
    VARIABLE        reduce using rule 214 (if -> if else .)
    PRINTLN         reduce using rule 214 (if -> if else .)
    PRINT           reduce using rule 214 (if -> if else .)
    READLINE        reduce using rule 214 (if -> if else .)
    VAR             reduce using rule 214 (if -> if else .)
    VAL             reduce using rule 214 (if -> if else .)
    WHILE           reduce using rule 214 (if -> if else .)
    FOR             reduce using rule 214 (if -> if else .)
    IF              reduce using rule 214 (if -> if else .)
    $end            reduce using rule 214 (if -> if else .)
    INT             reduce using rule 214 (if -> if else .)
    LONG            reduce using rule 214 (if -> if else .)
    FLOAT           reduce using rule 214 (if -> if else .)
    DOUBLE          reduce using rule 214 (if -> if else .)
    LLAVE_D         reduce using rule 214 (if -> if else .)
    RETURN          reduce using rule 214 (if -> if else .)


state 38

    (215) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (216) else -> ELSE . LLAVE_I contenido LLAVE_D

    IF              shift and go to state 53
    LLAVE_I         shift and go to state 54


state 39

    (118) funcion -> DEF VARIABLE . parametro IGUAL LLAVE_I contenido LLAVE_D
    (125) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (126) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (127) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (128) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (121) parametro -> . parametros
    (122) parametro -> . PAR_I PAR_D
    (123) parametros -> . PAR_I declaracion PAR_D
    (124) parametros -> . PAR_I declaracion PAR_D parametros

    PAR_I           shift and go to state 57

    parametro                      shift and go to state 55
    parametros                     shift and go to state 56

state 40

    (142) funcall -> VARIABLE PAR_I . valores PAR_D
    (143) funcall -> VARIABLE PAR_I . PAR_D
    (159) valores -> . valor
    (160) valores -> . valor COMA valores
    (107) valor -> . STRING
    (108) valor -> . CHAR
    (109) valor -> . VARIABLE
    (110) valor -> . numeros
    (111) valor -> . booleanos
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE

    PAR_D           shift and go to state 60
    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valores                        shift and go to state 59
    valor                          shift and go to state 61
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 41

    (173) match -> VARIABLE MATCH . LLAVE_I cases LLAVE_D

    LLAVE_I         shift and go to state 72


state 42

    (137) impresion -> PRINTLN PAR_I . valorI PAR_D
    (139) valorI -> . valor MAS valorI
    (140) valorI -> . valor
    (107) valor -> . STRING
    (108) valor -> . CHAR
    (109) valor -> . VARIABLE
    (110) valor -> . numeros
    (111) valor -> . booleanos
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valorI                         shift and go to state 73
    valor                          shift and go to state 74
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 43

    (138) impresion -> PRINT PAR_I . valorI PAR_D
    (139) valorI -> . valor MAS valorI
    (140) valorI -> . valor
    (107) valor -> . STRING
    (108) valor -> . CHAR
    (109) valor -> . VARIABLE
    (110) valor -> . numeros
    (111) valor -> . booleanos
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valorI                         shift and go to state 75
    valor                          shift and go to state 74
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 44

    (141) entrada -> READLINE PAR_I . PAR_D

    PAR_D           shift and go to state 76


state 45

    (41) asignacion -> VAR VARIABLE . IGUAL VARIABLE
    (43) asignacion -> VAR VARIABLE . IGUAL aritmetica
    (45) asignacion -> VAR VARIABLE . IGUAL returnfun
    (162) asignacion -> VAR VARIABLE . IGUAL tuple
    (164) asignacion -> VAR VARIABLE . dectipoTupla IGUAL tuple
    (56) asignacionLong -> VAR VARIABLE . IGUAL LONG
    (57) asignacionLong -> VAR VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> VAR VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> VAR VARIABLE . IGUAL INT
    (63) asignacionInt -> VAR VARIABLE . DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> VAR VARIABLE . DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> VAR VARIABLE . IGUAL FLOAT
    (69) asignacionFloat -> VAR VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> VAR VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> VAR VARIABLE . IGUAL DOUBLE
    (75) asignacionDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> VAR VARIABLE . IGUAL STRING
    (81) asignacionString -> VAR VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> VAR VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> VAR VARIABLE . IGUAL CHAR
    (87) asignacionChar -> VAR VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> VAR VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> VAR VARIABLE . IGUAL booleanos
    (93) asignacionBoolean -> VAR VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> VAR VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> VAR VARIABLE . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (132) dectipoTupla -> . DOBLE_PUNTO PAR_I tipos PAR_D

    IGUAL           shift and go to state 77
    DOBLE_PUNTO     shift and go to state 79

    dectipoTupla                   shift and go to state 78

state 46

    (42) asignacion -> VAL VARIABLE . IGUAL VARIABLE
    (44) asignacion -> VAL VARIABLE . IGUAL aritmetica
    (46) asignacion -> VAL VARIABLE . IGUAL returnfun
    (163) asignacion -> VAL VARIABLE . IGUAL tuple
    (165) asignacion -> VAL VARIABLE . dectipoTupla IGUAL tuple
    (58) asignacionLong -> VAL VARIABLE . IGUAL LONG
    (59) asignacionLong -> VAL VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> VAL VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionInt -> VAL VARIABLE . IGUAL INT
    (65) asignacionInt -> VAL VARIABLE . DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> VAL VARIABLE . DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionFloat -> VAL VARIABLE . IGUAL FLOAT
    (71) asignacionFloat -> VAL VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> VAL VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionDouble -> VAL VARIABLE . IGUAL DOUBLE
    (77) asignacionDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionString -> VAL VARIABLE . IGUAL STRING
    (83) asignacionString -> VAL VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> VAL VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionChar -> VAL VARIABLE . IGUAL CHAR
    (89) asignacionChar -> VAL VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> VAL VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionBoolean -> VAL VARIABLE . IGUAL booleanos
    (95) asignacionBoolean -> VAL VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> VAL VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (157) list -> VAL VARIABLE . IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> VAL VARIABLE . DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (132) dectipoTupla -> . DOBLE_PUNTO PAR_I tipos PAR_D

    IGUAL           shift and go to state 80
    DOBLE_PUNTO     shift and go to state 82

    dectipoTupla                   shift and go to state 81

state 47

    (166) while -> WHILE PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) condicional -> . valorC logicos condicional
    (219) condicional -> . valorC
    (220) valorC -> . VARIABLE
    (221) valorC -> . booleanos
    (222) valorC -> . relacional
    (223) valorC -> . NOT VARIABLE
    (224) valorC -> . NOT booleanos
    (225) valorC -> . NOT relacional
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE
    (229) relacional -> . numeros comparacion numeros
    (230) relacional -> . aritmetica comparacion aritmetica
    (231) relacional -> . aritmetica comparacion numeros
    (232) relacional -> . numeros comparacion aritmetica
    (233) relacional -> . booleanos comparacion booleanos
    (234) relacional -> . STRING comparacion STRING
    (235) relacional -> . CHAR comparacion CHAR
    (236) relacional -> . VARIABLE comparacion numeros
    (237) relacional -> . numeros comparacion VARIABLE
    (238) relacional -> . VARIABLE comparacion booleanos
    (239) relacional -> . booleanos comparacion VARIABLE
    (240) relacional -> . VARIABLE comparacion STRING
    (241) relacional -> . STRING comparacion VARIABLE
    (242) relacional -> . VARIABLE comparacion CHAR
    (243) relacional -> . CHAR comparacion VARIABLE
    (244) relacional -> . VARIABLE comparacion VARIABLE
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 85
    NOT             shift and go to state 88
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71
    STRING          shift and go to state 91
    CHAR            shift and go to state 92
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    condicional                    shift and go to state 83
    valorC                         shift and go to state 84
    booleanos                      shift and go to state 86
    relacional                     shift and go to state 87
    numeros                        shift and go to state 89
    aritmetica                     shift and go to state 90

state 48

    (167) for -> FOR PAR_I . VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> FOR PAR_I . VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> FOR PAR_I . VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> FOR PAR_I . VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> FOR PAR_I . VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> FOR PAR_I . VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VAR             shift and go to state 93
    VARIABLE        shift and go to state 94


state 49

    (212) if -> IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) condicional -> . valorC logicos condicional
    (219) condicional -> . valorC
    (220) valorC -> . VARIABLE
    (221) valorC -> . booleanos
    (222) valorC -> . relacional
    (223) valorC -> . NOT VARIABLE
    (224) valorC -> . NOT booleanos
    (225) valorC -> . NOT relacional
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE
    (229) relacional -> . numeros comparacion numeros
    (230) relacional -> . aritmetica comparacion aritmetica
    (231) relacional -> . aritmetica comparacion numeros
    (232) relacional -> . numeros comparacion aritmetica
    (233) relacional -> . booleanos comparacion booleanos
    (234) relacional -> . STRING comparacion STRING
    (235) relacional -> . CHAR comparacion CHAR
    (236) relacional -> . VARIABLE comparacion numeros
    (237) relacional -> . numeros comparacion VARIABLE
    (238) relacional -> . VARIABLE comparacion booleanos
    (239) relacional -> . booleanos comparacion VARIABLE
    (240) relacional -> . VARIABLE comparacion STRING
    (241) relacional -> . STRING comparacion VARIABLE
    (242) relacional -> . VARIABLE comparacion CHAR
    (243) relacional -> . CHAR comparacion VARIABLE
    (244) relacional -> . VARIABLE comparacion VARIABLE
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 85
    NOT             shift and go to state 88
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71
    STRING          shift and go to state 91
    CHAR            shift and go to state 92
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    condicional                    shift and go to state 95
    valorC                         shift and go to state 84
    booleanos                      shift and go to state 86
    relacional                     shift and go to state 87
    numeros                        shift and go to state 89
    aritmetica                     shift and go to state 90

state 50

    (217) else -> elseif . else
    (216) else -> . ELSE LLAVE_I contenido LLAVE_D
    (217) else -> . elseif else
    (215) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    ELSE            shift and go to state 52

    elseif                         shift and go to state 50
    else                           shift and go to state 51

state 51

    (217) else -> elseif else .

    ELSE            reduce using rule 217 (else -> elseif else .)
    DEF             reduce using rule 217 (else -> elseif else .)
    VARIABLE        reduce using rule 217 (else -> elseif else .)
    PRINTLN         reduce using rule 217 (else -> elseif else .)
    PRINT           reduce using rule 217 (else -> elseif else .)
    READLINE        reduce using rule 217 (else -> elseif else .)
    VAR             reduce using rule 217 (else -> elseif else .)
    VAL             reduce using rule 217 (else -> elseif else .)
    WHILE           reduce using rule 217 (else -> elseif else .)
    FOR             reduce using rule 217 (else -> elseif else .)
    IF              reduce using rule 217 (else -> elseif else .)
    $end            reduce using rule 217 (else -> elseif else .)
    INT             reduce using rule 217 (else -> elseif else .)
    LONG            reduce using rule 217 (else -> elseif else .)
    FLOAT           reduce using rule 217 (else -> elseif else .)
    DOUBLE          reduce using rule 217 (else -> elseif else .)
    LLAVE_D         reduce using rule 217 (else -> elseif else .)
    RETURN          reduce using rule 217 (else -> elseif else .)


state 52

    (216) else -> ELSE . LLAVE_I contenido LLAVE_D
    (215) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 54
    IF              shift and go to state 53


state 53

    (215) elseif -> ELSE IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 96


state 54

    (216) else -> ELSE LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 97
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 55

    (118) funcion -> DEF VARIABLE parametro . IGUAL LLAVE_I contenido LLAVE_D
    (125) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (126) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (127) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (128) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) dectipo -> . DOBLE_PUNTO tipo
    (132) dectipoTupla -> . DOBLE_PUNTO PAR_I tipos PAR_D

    IGUAL           shift and go to state 110
    DOBLE_PUNTO     shift and go to state 113

    dectipo                        shift and go to state 111
    dectipoTupla                   shift and go to state 112

state 56

    (121) parametro -> parametros .

    IGUAL           reduce using rule 121 (parametro -> parametros .)
    DOBLE_PUNTO     reduce using rule 121 (parametro -> parametros .)


state 57

    (122) parametro -> PAR_I . PAR_D
    (123) parametros -> PAR_I . declaracion PAR_D
    (124) parametros -> PAR_I . declaracion PAR_D parametros
    (119) declaracion -> . VARIABLE DOBLE_PUNTO tipo
    (120) declaracion -> . VARIABLE DOBLE_PUNTO tipo IGUAL valor

    PAR_D           shift and go to state 114
    VARIABLE        shift and go to state 116

    declaracion                    shift and go to state 115

state 58

    (109) valor -> VARIABLE .

    COMA            reduce using rule 109 (valor -> VARIABLE .)
    PAR_D           reduce using rule 109 (valor -> VARIABLE .)
    MAS             reduce using rule 109 (valor -> VARIABLE .)


state 59

    (142) funcall -> VARIABLE PAR_I valores . PAR_D

    PAR_D           shift and go to state 117


state 60

    (143) funcall -> VARIABLE PAR_I PAR_D .

    $end            reduce using rule 143 (funcall -> VARIABLE PAR_I PAR_D .)
    VAR             reduce using rule 143 (funcall -> VARIABLE PAR_I PAR_D .)
    VAL             reduce using rule 143 (funcall -> VARIABLE PAR_I PAR_D .)
    VARIABLE        reduce using rule 143 (funcall -> VARIABLE PAR_I PAR_D .)
    PRINTLN         reduce using rule 143 (funcall -> VARIABLE PAR_I PAR_D .)
    PRINT           reduce using rule 143 (funcall -> VARIABLE PAR_I PAR_D .)
    READLINE        reduce using rule 143 (funcall -> VARIABLE PAR_I PAR_D .)
    WHILE           reduce using rule 143 (funcall -> VARIABLE PAR_I PAR_D .)
    FOR             reduce using rule 143 (funcall -> VARIABLE PAR_I PAR_D .)
    IF              reduce using rule 143 (funcall -> VARIABLE PAR_I PAR_D .)
    INT             reduce using rule 143 (funcall -> VARIABLE PAR_I PAR_D .)
    LONG            reduce using rule 143 (funcall -> VARIABLE PAR_I PAR_D .)
    FLOAT           reduce using rule 143 (funcall -> VARIABLE PAR_I PAR_D .)
    DOUBLE          reduce using rule 143 (funcall -> VARIABLE PAR_I PAR_D .)
    LLAVE_D         reduce using rule 143 (funcall -> VARIABLE PAR_I PAR_D .)
    PUNTO           reduce using rule 143 (funcall -> VARIABLE PAR_I PAR_D .)
    DEF             reduce using rule 143 (funcall -> VARIABLE PAR_I PAR_D .)
    RETURN          reduce using rule 143 (funcall -> VARIABLE PAR_I PAR_D .)
    CASE            reduce using rule 143 (funcall -> VARIABLE PAR_I PAR_D .)


state 61

    (159) valores -> valor .
    (160) valores -> valor . COMA valores

    PAR_D           reduce using rule 159 (valores -> valor .)
    COMA            shift and go to state 118


state 62

    (107) valor -> STRING .

    COMA            reduce using rule 107 (valor -> STRING .)
    PAR_D           reduce using rule 107 (valor -> STRING .)
    MAS             reduce using rule 107 (valor -> STRING .)
    VAR             reduce using rule 107 (valor -> STRING .)
    VAL             reduce using rule 107 (valor -> STRING .)
    VARIABLE        reduce using rule 107 (valor -> STRING .)
    PRINTLN         reduce using rule 107 (valor -> STRING .)
    PRINT           reduce using rule 107 (valor -> STRING .)
    READLINE        reduce using rule 107 (valor -> STRING .)
    WHILE           reduce using rule 107 (valor -> STRING .)
    FOR             reduce using rule 107 (valor -> STRING .)
    IF              reduce using rule 107 (valor -> STRING .)
    INT             reduce using rule 107 (valor -> STRING .)
    LONG            reduce using rule 107 (valor -> STRING .)
    FLOAT           reduce using rule 107 (valor -> STRING .)
    DOUBLE          reduce using rule 107 (valor -> STRING .)
    LLAVE_D         reduce using rule 107 (valor -> STRING .)
    RETURN          reduce using rule 107 (valor -> STRING .)
    CASE            reduce using rule 107 (valor -> STRING .)


state 63

    (108) valor -> CHAR .

    COMA            reduce using rule 108 (valor -> CHAR .)
    PAR_D           reduce using rule 108 (valor -> CHAR .)
    MAS             reduce using rule 108 (valor -> CHAR .)
    VAR             reduce using rule 108 (valor -> CHAR .)
    VAL             reduce using rule 108 (valor -> CHAR .)
    VARIABLE        reduce using rule 108 (valor -> CHAR .)
    PRINTLN         reduce using rule 108 (valor -> CHAR .)
    PRINT           reduce using rule 108 (valor -> CHAR .)
    READLINE        reduce using rule 108 (valor -> CHAR .)
    WHILE           reduce using rule 108 (valor -> CHAR .)
    FOR             reduce using rule 108 (valor -> CHAR .)
    IF              reduce using rule 108 (valor -> CHAR .)
    INT             reduce using rule 108 (valor -> CHAR .)
    LONG            reduce using rule 108 (valor -> CHAR .)
    FLOAT           reduce using rule 108 (valor -> CHAR .)
    DOUBLE          reduce using rule 108 (valor -> CHAR .)
    LLAVE_D         reduce using rule 108 (valor -> CHAR .)
    RETURN          reduce using rule 108 (valor -> CHAR .)
    CASE            reduce using rule 108 (valor -> CHAR .)


state 64

    (110) valor -> numeros .

    COMA            reduce using rule 110 (valor -> numeros .)
    PAR_D           reduce using rule 110 (valor -> numeros .)
    MAS             reduce using rule 110 (valor -> numeros .)
    VAR             reduce using rule 110 (valor -> numeros .)
    VAL             reduce using rule 110 (valor -> numeros .)
    VARIABLE        reduce using rule 110 (valor -> numeros .)
    PRINTLN         reduce using rule 110 (valor -> numeros .)
    PRINT           reduce using rule 110 (valor -> numeros .)
    READLINE        reduce using rule 110 (valor -> numeros .)
    WHILE           reduce using rule 110 (valor -> numeros .)
    FOR             reduce using rule 110 (valor -> numeros .)
    IF              reduce using rule 110 (valor -> numeros .)
    INT             reduce using rule 110 (valor -> numeros .)
    LONG            reduce using rule 110 (valor -> numeros .)
    FLOAT           reduce using rule 110 (valor -> numeros .)
    DOUBLE          reduce using rule 110 (valor -> numeros .)
    LLAVE_D         reduce using rule 110 (valor -> numeros .)
    RETURN          reduce using rule 110 (valor -> numeros .)
    CASE            reduce using rule 110 (valor -> numeros .)


state 65

    (111) valor -> booleanos .

    COMA            reduce using rule 111 (valor -> booleanos .)
    PAR_D           reduce using rule 111 (valor -> booleanos .)
    MAS             reduce using rule 111 (valor -> booleanos .)
    VAR             reduce using rule 111 (valor -> booleanos .)
    VAL             reduce using rule 111 (valor -> booleanos .)
    VARIABLE        reduce using rule 111 (valor -> booleanos .)
    PRINTLN         reduce using rule 111 (valor -> booleanos .)
    PRINT           reduce using rule 111 (valor -> booleanos .)
    READLINE        reduce using rule 111 (valor -> booleanos .)
    WHILE           reduce using rule 111 (valor -> booleanos .)
    FOR             reduce using rule 111 (valor -> booleanos .)
    IF              reduce using rule 111 (valor -> booleanos .)
    INT             reduce using rule 111 (valor -> booleanos .)
    LONG            reduce using rule 111 (valor -> booleanos .)
    FLOAT           reduce using rule 111 (valor -> booleanos .)
    DOUBLE          reduce using rule 111 (valor -> booleanos .)
    LLAVE_D         reduce using rule 111 (valor -> booleanos .)
    RETURN          reduce using rule 111 (valor -> booleanos .)
    CASE            reduce using rule 111 (valor -> booleanos .)


state 66

    (114) numeros -> INT .

    COMA            reduce using rule 114 (numeros -> INT .)
    PAR_D           reduce using rule 114 (numeros -> INT .)
    MAS             reduce using rule 114 (numeros -> INT .)
    IGUAL_COMPARACION reduce using rule 114 (numeros -> INT .)
    DIFERENTE       reduce using rule 114 (numeros -> INT .)
    MAYOR           reduce using rule 114 (numeros -> INT .)
    MENOR           reduce using rule 114 (numeros -> INT .)
    MENOS           reduce using rule 114 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 114 (numeros -> INT .)
    DIVISION        reduce using rule 114 (numeros -> INT .)
    MOD             reduce using rule 114 (numeros -> INT .)
    AND             reduce using rule 114 (numeros -> INT .)
    OR              reduce using rule 114 (numeros -> INT .)
    NOT             reduce using rule 114 (numeros -> INT .)
    VAR             reduce using rule 114 (numeros -> INT .)
    VAL             reduce using rule 114 (numeros -> INT .)
    VARIABLE        reduce using rule 114 (numeros -> INT .)
    PRINTLN         reduce using rule 114 (numeros -> INT .)
    PRINT           reduce using rule 114 (numeros -> INT .)
    READLINE        reduce using rule 114 (numeros -> INT .)
    WHILE           reduce using rule 114 (numeros -> INT .)
    FOR             reduce using rule 114 (numeros -> INT .)
    IF              reduce using rule 114 (numeros -> INT .)
    INT             reduce using rule 114 (numeros -> INT .)
    LONG            reduce using rule 114 (numeros -> INT .)
    FLOAT           reduce using rule 114 (numeros -> INT .)
    DOUBLE          reduce using rule 114 (numeros -> INT .)
    LLAVE_D         reduce using rule 114 (numeros -> INT .)
    DEF             reduce using rule 114 (numeros -> INT .)
    $end            reduce using rule 114 (numeros -> INT .)
    RETURN          reduce using rule 114 (numeros -> INT .)
    CASE            reduce using rule 114 (numeros -> INT .)


state 67

    (115) numeros -> LONG .

    COMA            reduce using rule 115 (numeros -> LONG .)
    PAR_D           reduce using rule 115 (numeros -> LONG .)
    MAS             reduce using rule 115 (numeros -> LONG .)
    IGUAL_COMPARACION reduce using rule 115 (numeros -> LONG .)
    DIFERENTE       reduce using rule 115 (numeros -> LONG .)
    MAYOR           reduce using rule 115 (numeros -> LONG .)
    MENOR           reduce using rule 115 (numeros -> LONG .)
    MENOS           reduce using rule 115 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 115 (numeros -> LONG .)
    DIVISION        reduce using rule 115 (numeros -> LONG .)
    MOD             reduce using rule 115 (numeros -> LONG .)
    AND             reduce using rule 115 (numeros -> LONG .)
    OR              reduce using rule 115 (numeros -> LONG .)
    NOT             reduce using rule 115 (numeros -> LONG .)
    VAR             reduce using rule 115 (numeros -> LONG .)
    VAL             reduce using rule 115 (numeros -> LONG .)
    VARIABLE        reduce using rule 115 (numeros -> LONG .)
    PRINTLN         reduce using rule 115 (numeros -> LONG .)
    PRINT           reduce using rule 115 (numeros -> LONG .)
    READLINE        reduce using rule 115 (numeros -> LONG .)
    WHILE           reduce using rule 115 (numeros -> LONG .)
    FOR             reduce using rule 115 (numeros -> LONG .)
    IF              reduce using rule 115 (numeros -> LONG .)
    INT             reduce using rule 115 (numeros -> LONG .)
    LONG            reduce using rule 115 (numeros -> LONG .)
    FLOAT           reduce using rule 115 (numeros -> LONG .)
    DOUBLE          reduce using rule 115 (numeros -> LONG .)
    LLAVE_D         reduce using rule 115 (numeros -> LONG .)
    DEF             reduce using rule 115 (numeros -> LONG .)
    $end            reduce using rule 115 (numeros -> LONG .)
    RETURN          reduce using rule 115 (numeros -> LONG .)
    CASE            reduce using rule 115 (numeros -> LONG .)


state 68

    (116) numeros -> FLOAT .

    COMA            reduce using rule 116 (numeros -> FLOAT .)
    PAR_D           reduce using rule 116 (numeros -> FLOAT .)
    MAS             reduce using rule 116 (numeros -> FLOAT .)
    IGUAL_COMPARACION reduce using rule 116 (numeros -> FLOAT .)
    DIFERENTE       reduce using rule 116 (numeros -> FLOAT .)
    MAYOR           reduce using rule 116 (numeros -> FLOAT .)
    MENOR           reduce using rule 116 (numeros -> FLOAT .)
    MENOS           reduce using rule 116 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 116 (numeros -> FLOAT .)
    DIVISION        reduce using rule 116 (numeros -> FLOAT .)
    MOD             reduce using rule 116 (numeros -> FLOAT .)
    AND             reduce using rule 116 (numeros -> FLOAT .)
    OR              reduce using rule 116 (numeros -> FLOAT .)
    NOT             reduce using rule 116 (numeros -> FLOAT .)
    VAR             reduce using rule 116 (numeros -> FLOAT .)
    VAL             reduce using rule 116 (numeros -> FLOAT .)
    VARIABLE        reduce using rule 116 (numeros -> FLOAT .)
    PRINTLN         reduce using rule 116 (numeros -> FLOAT .)
    PRINT           reduce using rule 116 (numeros -> FLOAT .)
    READLINE        reduce using rule 116 (numeros -> FLOAT .)
    WHILE           reduce using rule 116 (numeros -> FLOAT .)
    FOR             reduce using rule 116 (numeros -> FLOAT .)
    IF              reduce using rule 116 (numeros -> FLOAT .)
    INT             reduce using rule 116 (numeros -> FLOAT .)
    LONG            reduce using rule 116 (numeros -> FLOAT .)
    FLOAT           reduce using rule 116 (numeros -> FLOAT .)
    DOUBLE          reduce using rule 116 (numeros -> FLOAT .)
    LLAVE_D         reduce using rule 116 (numeros -> FLOAT .)
    DEF             reduce using rule 116 (numeros -> FLOAT .)
    $end            reduce using rule 116 (numeros -> FLOAT .)
    RETURN          reduce using rule 116 (numeros -> FLOAT .)
    CASE            reduce using rule 116 (numeros -> FLOAT .)


state 69

    (117) numeros -> DOUBLE .

    COMA            reduce using rule 117 (numeros -> DOUBLE .)
    PAR_D           reduce using rule 117 (numeros -> DOUBLE .)
    MAS             reduce using rule 117 (numeros -> DOUBLE .)
    IGUAL_COMPARACION reduce using rule 117 (numeros -> DOUBLE .)
    DIFERENTE       reduce using rule 117 (numeros -> DOUBLE .)
    MAYOR           reduce using rule 117 (numeros -> DOUBLE .)
    MENOR           reduce using rule 117 (numeros -> DOUBLE .)
    MENOS           reduce using rule 117 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 117 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 117 (numeros -> DOUBLE .)
    MOD             reduce using rule 117 (numeros -> DOUBLE .)
    AND             reduce using rule 117 (numeros -> DOUBLE .)
    OR              reduce using rule 117 (numeros -> DOUBLE .)
    NOT             reduce using rule 117 (numeros -> DOUBLE .)
    VAR             reduce using rule 117 (numeros -> DOUBLE .)
    VAL             reduce using rule 117 (numeros -> DOUBLE .)
    VARIABLE        reduce using rule 117 (numeros -> DOUBLE .)
    PRINTLN         reduce using rule 117 (numeros -> DOUBLE .)
    PRINT           reduce using rule 117 (numeros -> DOUBLE .)
    READLINE        reduce using rule 117 (numeros -> DOUBLE .)
    WHILE           reduce using rule 117 (numeros -> DOUBLE .)
    FOR             reduce using rule 117 (numeros -> DOUBLE .)
    IF              reduce using rule 117 (numeros -> DOUBLE .)
    INT             reduce using rule 117 (numeros -> DOUBLE .)
    LONG            reduce using rule 117 (numeros -> DOUBLE .)
    FLOAT           reduce using rule 117 (numeros -> DOUBLE .)
    DOUBLE          reduce using rule 117 (numeros -> DOUBLE .)
    LLAVE_D         reduce using rule 117 (numeros -> DOUBLE .)
    DEF             reduce using rule 117 (numeros -> DOUBLE .)
    $end            reduce using rule 117 (numeros -> DOUBLE .)
    RETURN          reduce using rule 117 (numeros -> DOUBLE .)
    CASE            reduce using rule 117 (numeros -> DOUBLE .)


state 70

    (112) booleanos -> TRUE .

    COMA            reduce using rule 112 (booleanos -> TRUE .)
    PAR_D           reduce using rule 112 (booleanos -> TRUE .)
    MAS             reduce using rule 112 (booleanos -> TRUE .)
    IGUAL_COMPARACION reduce using rule 112 (booleanos -> TRUE .)
    DIFERENTE       reduce using rule 112 (booleanos -> TRUE .)
    MAYOR           reduce using rule 112 (booleanos -> TRUE .)
    MENOR           reduce using rule 112 (booleanos -> TRUE .)
    AND             reduce using rule 112 (booleanos -> TRUE .)
    OR              reduce using rule 112 (booleanos -> TRUE .)
    NOT             reduce using rule 112 (booleanos -> TRUE .)
    DEF             reduce using rule 112 (booleanos -> TRUE .)
    VARIABLE        reduce using rule 112 (booleanos -> TRUE .)
    PRINTLN         reduce using rule 112 (booleanos -> TRUE .)
    PRINT           reduce using rule 112 (booleanos -> TRUE .)
    READLINE        reduce using rule 112 (booleanos -> TRUE .)
    VAR             reduce using rule 112 (booleanos -> TRUE .)
    VAL             reduce using rule 112 (booleanos -> TRUE .)
    WHILE           reduce using rule 112 (booleanos -> TRUE .)
    FOR             reduce using rule 112 (booleanos -> TRUE .)
    IF              reduce using rule 112 (booleanos -> TRUE .)
    $end            reduce using rule 112 (booleanos -> TRUE .)
    INT             reduce using rule 112 (booleanos -> TRUE .)
    LONG            reduce using rule 112 (booleanos -> TRUE .)
    FLOAT           reduce using rule 112 (booleanos -> TRUE .)
    DOUBLE          reduce using rule 112 (booleanos -> TRUE .)
    LLAVE_D         reduce using rule 112 (booleanos -> TRUE .)
    RETURN          reduce using rule 112 (booleanos -> TRUE .)
    CASE            reduce using rule 112 (booleanos -> TRUE .)
    FUNCION_FLECHA  reduce using rule 112 (booleanos -> TRUE .)


state 71

    (113) booleanos -> FLASE .

    COMA            reduce using rule 113 (booleanos -> FLASE .)
    PAR_D           reduce using rule 113 (booleanos -> FLASE .)
    MAS             reduce using rule 113 (booleanos -> FLASE .)
    IGUAL_COMPARACION reduce using rule 113 (booleanos -> FLASE .)
    DIFERENTE       reduce using rule 113 (booleanos -> FLASE .)
    MAYOR           reduce using rule 113 (booleanos -> FLASE .)
    MENOR           reduce using rule 113 (booleanos -> FLASE .)
    AND             reduce using rule 113 (booleanos -> FLASE .)
    OR              reduce using rule 113 (booleanos -> FLASE .)
    NOT             reduce using rule 113 (booleanos -> FLASE .)
    DEF             reduce using rule 113 (booleanos -> FLASE .)
    VARIABLE        reduce using rule 113 (booleanos -> FLASE .)
    PRINTLN         reduce using rule 113 (booleanos -> FLASE .)
    PRINT           reduce using rule 113 (booleanos -> FLASE .)
    READLINE        reduce using rule 113 (booleanos -> FLASE .)
    VAR             reduce using rule 113 (booleanos -> FLASE .)
    VAL             reduce using rule 113 (booleanos -> FLASE .)
    WHILE           reduce using rule 113 (booleanos -> FLASE .)
    FOR             reduce using rule 113 (booleanos -> FLASE .)
    IF              reduce using rule 113 (booleanos -> FLASE .)
    $end            reduce using rule 113 (booleanos -> FLASE .)
    INT             reduce using rule 113 (booleanos -> FLASE .)
    LONG            reduce using rule 113 (booleanos -> FLASE .)
    FLOAT           reduce using rule 113 (booleanos -> FLASE .)
    DOUBLE          reduce using rule 113 (booleanos -> FLASE .)
    LLAVE_D         reduce using rule 113 (booleanos -> FLASE .)
    RETURN          reduce using rule 113 (booleanos -> FLASE .)
    CASE            reduce using rule 113 (booleanos -> FLASE .)
    FUNCION_FLECHA  reduce using rule 113 (booleanos -> FLASE .)


state 72

    (173) match -> VARIABLE MATCH LLAVE_I . cases LLAVE_D
    (174) cases -> . casesInt
    (175) cases -> . casesLgn
    (176) cases -> . casesFlt
    (177) cases -> . casesDob
    (178) cases -> . casesStr
    (179) cases -> . casesChar
    (180) cases -> . casesBool
    (182) casesInt -> . caseInt
    (183) casesInt -> . caseInt casesInt
    (184) casesInt -> . caseInt defcase
    (186) casesLgn -> . caseLgn
    (187) casesLgn -> . caseLgn casesLgn
    (188) casesLgn -> . caseLgn defcase
    (190) casesFlt -> . caseFlt
    (191) casesFlt -> . caseFlt casesFlt
    (192) casesFlt -> . caseFlt defcase
    (194) casesDob -> . caseDob
    (195) casesDob -> . caseDob casesDob
    (196) casesDob -> . caseDob defcase
    (198) casesStr -> . caseStr
    (199) casesStr -> . caseStr casesStr
    (200) casesStr -> . caseStr defcase
    (202) casesChar -> . caseChar
    (203) casesChar -> . caseChar casesChar
    (204) casesChar -> . caseChar defcase
    (206) casesBool -> . caseBool
    (207) casesBool -> . caseBool casesBool
    (208) casesBool -> . caseBool defcase
    (181) caseInt -> . CASE INT FUNCION_FLECHA codeBlock
    (185) caseLgn -> . CASE LONG FUNCION_FLECHA codeBlock
    (189) caseFlt -> . CASE FLOAT FUNCION_FLECHA codeBlock
    (193) caseDob -> . CASE DOUBLE FUNCION_FLECHA codeBlock
    (197) caseStr -> . CASE STRING FUNCION_FLECHA codeBlock
    (201) caseChar -> . CASE CHAR FUNCION_FLECHA codeBlock
    (205) caseBool -> . CASE booleanos FUNCION_FLECHA codeBlock

    CASE            shift and go to state 134

    cases                          shift and go to state 119
    casesInt                       shift and go to state 120
    casesLgn                       shift and go to state 121
    casesFlt                       shift and go to state 122
    casesDob                       shift and go to state 123
    casesStr                       shift and go to state 124
    casesChar                      shift and go to state 125
    casesBool                      shift and go to state 126
    caseInt                        shift and go to state 127
    caseLgn                        shift and go to state 128
    caseFlt                        shift and go to state 129
    caseDob                        shift and go to state 130
    caseStr                        shift and go to state 131
    caseChar                       shift and go to state 132
    caseBool                       shift and go to state 133

state 73

    (137) impresion -> PRINTLN PAR_I valorI . PAR_D

    PAR_D           shift and go to state 135


state 74

    (139) valorI -> valor . MAS valorI
    (140) valorI -> valor .

    MAS             shift and go to state 136
    PAR_D           reduce using rule 140 (valorI -> valor .)


state 75

    (138) impresion -> PRINT PAR_I valorI . PAR_D

    PAR_D           shift and go to state 137


state 76

    (141) entrada -> READLINE PAR_I PAR_D .

    $end            reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    VAR             reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    VAL             reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    VARIABLE        reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    PRINTLN         reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    PRINT           reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    READLINE        reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    WHILE           reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    FOR             reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    IF              reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    INT             reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    LONG            reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    FLOAT           reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    DOUBLE          reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    LLAVE_D         reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    PUNTO           reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    DEF             reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    RETURN          reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)
    CASE            reduce using rule 141 (entrada -> READLINE PAR_I PAR_D .)


state 77

    (41) asignacion -> VAR VARIABLE IGUAL . VARIABLE
    (43) asignacion -> VAR VARIABLE IGUAL . aritmetica
    (45) asignacion -> VAR VARIABLE IGUAL . returnfun
    (162) asignacion -> VAR VARIABLE IGUAL . tuple
    (56) asignacionLong -> VAR VARIABLE IGUAL . LONG
    (62) asignacionInt -> VAR VARIABLE IGUAL . INT
    (68) asignacionFloat -> VAR VARIABLE IGUAL . FLOAT
    (74) asignacionDouble -> VAR VARIABLE IGUAL . DOUBLE
    (80) asignacionString -> VAR VARIABLE IGUAL . STRING
    (86) asignacionChar -> VAR VARIABLE IGUAL . CHAR
    (92) asignacionBoolean -> VAR VARIABLE IGUAL . booleanos
    (154) array -> VAR VARIABLE IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (144) returnfun -> . returnCastable
    (145) returnfun -> . castingcall
    (161) tuple -> . PAR_I valores PAR_D
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (146) returnCastable -> . entrada
    (147) returnCastable -> . funcall
    (148) castingcall -> . returnCastable PUNTO castingfun
    (149) castingcall -> . VARIABLE PUNTO castingfun
    (141) entrada -> . READLINE PAR_I PAR_D
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D

    VARIABLE        shift and go to state 138
    LONG            shift and go to state 142
    INT             shift and go to state 143
    FLOAT           shift and go to state 144
    DOUBLE          shift and go to state 145
    STRING          shift and go to state 146
    CHAR            shift and go to state 147
    ARRAYCLASS      shift and go to state 149
    PAR_I           shift and go to state 150
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71
    READLINE        shift and go to state 15

    aritmetica                     shift and go to state 139
    returnfun                      shift and go to state 140
    tuple                          shift and go to state 141
    booleanos                      shift and go to state 148
    numeros                        shift and go to state 109
    returnCastable                 shift and go to state 151
    castingcall                    shift and go to state 152
    entrada                        shift and go to state 153
    funcall                        shift and go to state 154

state 78

    (164) asignacion -> VAR VARIABLE dectipoTupla . IGUAL tuple

    IGUAL           shift and go to state 155


state 79

    (57) asignacionLong -> VAR VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL LONG
    (60) asignacionLong -> VAR VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL VARIABLE
    (63) asignacionInt -> VAR VARIABLE DOBLE_PUNTO . INTCLASS IGUAL INT
    (66) asignacionInt -> VAR VARIABLE DOBLE_PUNTO . INTCLASS IGUAL VARIABLE
    (69) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL VARIABLE
    (75) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL VARIABLE
    (81) asignacionString -> VAR VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL STRING
    (84) asignacionString -> VAR VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL VARIABLE
    (87) asignacionChar -> VAR VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL CHAR
    (90) asignacionChar -> VAR VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL VARIABLE
    (93) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL VARIABLE
    (155) array -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (132) dectipoTupla -> DOBLE_PUNTO . PAR_I tipos PAR_D

    LONGCLASS       shift and go to state 156
    INTCLASS        shift and go to state 157
    FLOATCLASS      shift and go to state 158
    DOUBLECLASS     shift and go to state 159
    STRINGCLASS     shift and go to state 160
    CHARCLASS       shift and go to state 161
    BOOLCLASS       shift and go to state 162
    ARRAYCLASS      shift and go to state 163
    PAR_I           shift and go to state 164


state 80

    (42) asignacion -> VAL VARIABLE IGUAL . VARIABLE
    (44) asignacion -> VAL VARIABLE IGUAL . aritmetica
    (46) asignacion -> VAL VARIABLE IGUAL . returnfun
    (163) asignacion -> VAL VARIABLE IGUAL . tuple
    (58) asignacionLong -> VAL VARIABLE IGUAL . LONG
    (64) asignacionInt -> VAL VARIABLE IGUAL . INT
    (70) asignacionFloat -> VAL VARIABLE IGUAL . FLOAT
    (76) asignacionDouble -> VAL VARIABLE IGUAL . DOUBLE
    (82) asignacionString -> VAL VARIABLE IGUAL . STRING
    (88) asignacionChar -> VAL VARIABLE IGUAL . CHAR
    (94) asignacionBoolean -> VAL VARIABLE IGUAL . booleanos
    (157) list -> VAL VARIABLE IGUAL . LISTCLASS PAR_I valores PAR_D
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (144) returnfun -> . returnCastable
    (145) returnfun -> . castingcall
    (161) tuple -> . PAR_I valores PAR_D
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (146) returnCastable -> . entrada
    (147) returnCastable -> . funcall
    (148) castingcall -> . returnCastable PUNTO castingfun
    (149) castingcall -> . VARIABLE PUNTO castingfun
    (141) entrada -> . READLINE PAR_I PAR_D
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D

    VARIABLE        shift and go to state 165
    LONG            shift and go to state 169
    INT             shift and go to state 170
    FLOAT           shift and go to state 171
    DOUBLE          shift and go to state 172
    STRING          shift and go to state 173
    CHAR            shift and go to state 174
    LISTCLASS       shift and go to state 176
    PAR_I           shift and go to state 150
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71
    READLINE        shift and go to state 15

    aritmetica                     shift and go to state 166
    returnfun                      shift and go to state 167
    tuple                          shift and go to state 168
    booleanos                      shift and go to state 175
    numeros                        shift and go to state 109
    returnCastable                 shift and go to state 151
    castingcall                    shift and go to state 152
    entrada                        shift and go to state 153
    funcall                        shift and go to state 154

state 81

    (165) asignacion -> VAL VARIABLE dectipoTupla . IGUAL tuple

    IGUAL           shift and go to state 177


state 82

    (59) asignacionLong -> VAL VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL LONG
    (61) asignacionLong -> VAL VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> VAL VARIABLE DOBLE_PUNTO . INTCLASS IGUAL INT
    (67) asignacionInt -> VAL VARIABLE DOBLE_PUNTO . INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> VAL VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL STRING
    (85) asignacionString -> VAL VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> VAL VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL CHAR
    (91) asignacionChar -> VAL VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL VARIABLE
    (158) list -> VAL VARIABLE DOBLE_PUNTO . LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (132) dectipoTupla -> DOBLE_PUNTO . PAR_I tipos PAR_D

    LONGCLASS       shift and go to state 178
    INTCLASS        shift and go to state 179
    FLOATCLASS      shift and go to state 180
    DOUBLECLASS     shift and go to state 181
    STRINGCLASS     shift and go to state 182
    CHARCLASS       shift and go to state 183
    BOOLCLASS       shift and go to state 184
    LISTCLASS       shift and go to state 185
    PAR_I           shift and go to state 164


state 83

    (166) while -> WHILE PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 186


state 84

    (218) condicional -> valorC . logicos condicional
    (219) condicional -> valorC .
    (226) logicos -> . AND
    (227) logicos -> . OR
    (228) logicos -> . NOT

    PAR_D           reduce using rule 219 (condicional -> valorC .)
    AND             shift and go to state 188
    OR              shift and go to state 189
    NOT             shift and go to state 190

    logicos                        shift and go to state 187

state 85

    (220) valorC -> VARIABLE .
    (236) relacional -> VARIABLE . comparacion numeros
    (238) relacional -> VARIABLE . comparacion booleanos
    (240) relacional -> VARIABLE . comparacion STRING
    (242) relacional -> VARIABLE . comparacion CHAR
    (244) relacional -> VARIABLE . comparacion VARIABLE
    (250) aritmetica -> VARIABLE . aritmeticos numeros
    (252) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (245) comparacion -> . IGUAL_COMPARACION
    (246) comparacion -> . DIFERENTE
    (247) comparacion -> . MAYOR
    (248) comparacion -> . MENOR
    (255) aritmeticos -> . MENOS
    (256) aritmeticos -> . MAS
    (257) aritmeticos -> . MULTIPLICACION
    (258) aritmeticos -> . DIVISION
    (259) aritmeticos -> . MOD

    AND             reduce using rule 220 (valorC -> VARIABLE .)
    OR              reduce using rule 220 (valorC -> VARIABLE .)
    NOT             reduce using rule 220 (valorC -> VARIABLE .)
    PAR_D           reduce using rule 220 (valorC -> VARIABLE .)
    IGUAL_COMPARACION shift and go to state 193
    DIFERENTE       shift and go to state 194
    MAYOR           shift and go to state 195
    MENOR           shift and go to state 196
    MENOS           shift and go to state 197
    MAS             shift and go to state 198
    MULTIPLICACION  shift and go to state 199
    DIVISION        shift and go to state 200
    MOD             shift and go to state 201

    comparacion                    shift and go to state 191
    aritmeticos                    shift and go to state 192

state 86

    (221) valorC -> booleanos .
    (233) relacional -> booleanos . comparacion booleanos
    (239) relacional -> booleanos . comparacion VARIABLE
    (245) comparacion -> . IGUAL_COMPARACION
    (246) comparacion -> . DIFERENTE
    (247) comparacion -> . MAYOR
    (248) comparacion -> . MENOR

    AND             reduce using rule 221 (valorC -> booleanos .)
    OR              reduce using rule 221 (valorC -> booleanos .)
    NOT             reduce using rule 221 (valorC -> booleanos .)
    PAR_D           reduce using rule 221 (valorC -> booleanos .)
    IGUAL_COMPARACION shift and go to state 193
    DIFERENTE       shift and go to state 194
    MAYOR           shift and go to state 195
    MENOR           shift and go to state 196

    comparacion                    shift and go to state 202

state 87

    (222) valorC -> relacional .

    AND             reduce using rule 222 (valorC -> relacional .)
    OR              reduce using rule 222 (valorC -> relacional .)
    NOT             reduce using rule 222 (valorC -> relacional .)
    PAR_D           reduce using rule 222 (valorC -> relacional .)


state 88

    (223) valorC -> NOT . VARIABLE
    (224) valorC -> NOT . booleanos
    (225) valorC -> NOT . relacional
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE
    (229) relacional -> . numeros comparacion numeros
    (230) relacional -> . aritmetica comparacion aritmetica
    (231) relacional -> . aritmetica comparacion numeros
    (232) relacional -> . numeros comparacion aritmetica
    (233) relacional -> . booleanos comparacion booleanos
    (234) relacional -> . STRING comparacion STRING
    (235) relacional -> . CHAR comparacion CHAR
    (236) relacional -> . VARIABLE comparacion numeros
    (237) relacional -> . numeros comparacion VARIABLE
    (238) relacional -> . VARIABLE comparacion booleanos
    (239) relacional -> . booleanos comparacion VARIABLE
    (240) relacional -> . VARIABLE comparacion STRING
    (241) relacional -> . STRING comparacion VARIABLE
    (242) relacional -> . VARIABLE comparacion CHAR
    (243) relacional -> . CHAR comparacion VARIABLE
    (244) relacional -> . VARIABLE comparacion VARIABLE
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 203
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71
    STRING          shift and go to state 91
    CHAR            shift and go to state 92
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    booleanos                      shift and go to state 204
    relacional                     shift and go to state 205
    numeros                        shift and go to state 89
    aritmetica                     shift and go to state 90

state 89

    (229) relacional -> numeros . comparacion numeros
    (232) relacional -> numeros . comparacion aritmetica
    (237) relacional -> numeros . comparacion VARIABLE
    (249) aritmetica -> numeros . aritmeticos numeros
    (251) aritmetica -> numeros . aritmeticos VARIABLE
    (245) comparacion -> . IGUAL_COMPARACION
    (246) comparacion -> . DIFERENTE
    (247) comparacion -> . MAYOR
    (248) comparacion -> . MENOR
    (255) aritmeticos -> . MENOS
    (256) aritmeticos -> . MAS
    (257) aritmeticos -> . MULTIPLICACION
    (258) aritmeticos -> . DIVISION
    (259) aritmeticos -> . MOD

    IGUAL_COMPARACION shift and go to state 193
    DIFERENTE       shift and go to state 194
    MAYOR           shift and go to state 195
    MENOR           shift and go to state 196
    MENOS           shift and go to state 197
    MAS             shift and go to state 198
    MULTIPLICACION  shift and go to state 199
    DIVISION        shift and go to state 200
    MOD             shift and go to state 201

    comparacion                    shift and go to state 206
    aritmeticos                    shift and go to state 207

state 90

    (230) relacional -> aritmetica . comparacion aritmetica
    (231) relacional -> aritmetica . comparacion numeros
    (253) aritmetica -> aritmetica . aritmeticos numeros
    (254) aritmetica -> aritmetica . aritmeticos VARIABLE
    (245) comparacion -> . IGUAL_COMPARACION
    (246) comparacion -> . DIFERENTE
    (247) comparacion -> . MAYOR
    (248) comparacion -> . MENOR
    (255) aritmeticos -> . MENOS
    (256) aritmeticos -> . MAS
    (257) aritmeticos -> . MULTIPLICACION
    (258) aritmeticos -> . DIVISION
    (259) aritmeticos -> . MOD

    IGUAL_COMPARACION shift and go to state 193
    DIFERENTE       shift and go to state 194
    MAYOR           shift and go to state 195
    MENOR           shift and go to state 196
    MENOS           shift and go to state 197
    MAS             shift and go to state 198
    MULTIPLICACION  shift and go to state 199
    DIVISION        shift and go to state 200
    MOD             shift and go to state 201

    comparacion                    shift and go to state 208
    aritmeticos                    shift and go to state 209

state 91

    (234) relacional -> STRING . comparacion STRING
    (241) relacional -> STRING . comparacion VARIABLE
    (245) comparacion -> . IGUAL_COMPARACION
    (246) comparacion -> . DIFERENTE
    (247) comparacion -> . MAYOR
    (248) comparacion -> . MENOR

    IGUAL_COMPARACION shift and go to state 193
    DIFERENTE       shift and go to state 194
    MAYOR           shift and go to state 195
    MENOR           shift and go to state 196

    comparacion                    shift and go to state 210

state 92

    (235) relacional -> CHAR . comparacion CHAR
    (243) relacional -> CHAR . comparacion VARIABLE
    (245) comparacion -> . IGUAL_COMPARACION
    (246) comparacion -> . DIFERENTE
    (247) comparacion -> . MAYOR
    (248) comparacion -> . MENOR

    IGUAL_COMPARACION shift and go to state 193
    DIFERENTE       shift and go to state 194
    MAYOR           shift and go to state 195
    MENOR           shift and go to state 196

    comparacion                    shift and go to state 211

state 93

    (167) for -> FOR PAR_I VAR . VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> FOR PAR_I VAR . VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> FOR PAR_I VAR . VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 212


state 94

    (168) for -> FOR PAR_I VARIABLE . ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> FOR PAR_I VARIABLE . ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> FOR PAR_I VARIABLE . ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    ITERATOR        shift and go to state 213


state 95

    (212) if -> IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 214


state 96

    (215) elseif -> ELSE IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (218) condicional -> . valorC logicos condicional
    (219) condicional -> . valorC
    (220) valorC -> . VARIABLE
    (221) valorC -> . booleanos
    (222) valorC -> . relacional
    (223) valorC -> . NOT VARIABLE
    (224) valorC -> . NOT booleanos
    (225) valorC -> . NOT relacional
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE
    (229) relacional -> . numeros comparacion numeros
    (230) relacional -> . aritmetica comparacion aritmetica
    (231) relacional -> . aritmetica comparacion numeros
    (232) relacional -> . numeros comparacion aritmetica
    (233) relacional -> . booleanos comparacion booleanos
    (234) relacional -> . STRING comparacion STRING
    (235) relacional -> . CHAR comparacion CHAR
    (236) relacional -> . VARIABLE comparacion numeros
    (237) relacional -> . numeros comparacion VARIABLE
    (238) relacional -> . VARIABLE comparacion booleanos
    (239) relacional -> . booleanos comparacion VARIABLE
    (240) relacional -> . VARIABLE comparacion STRING
    (241) relacional -> . STRING comparacion VARIABLE
    (242) relacional -> . VARIABLE comparacion CHAR
    (243) relacional -> . CHAR comparacion VARIABLE
    (244) relacional -> . VARIABLE comparacion VARIABLE
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 85
    NOT             shift and go to state 88
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71
    STRING          shift and go to state 91
    CHAR            shift and go to state 92
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    condicional                    shift and go to state 215
    valorC                         shift and go to state 84
    booleanos                      shift and go to state 86
    relacional                     shift and go to state 87
    numeros                        shift and go to state 89
    aritmetica                     shift and go to state 90

state 97

    (216) else -> ELSE LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 216


state 98

    (16) contenido -> asignacion .
    (26) contenido -> asignacion . contenido
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 16 (contenido -> asignacion .)
    RETURN          reduce using rule 16 (contenido -> asignacion .)
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    asignacion                     shift and go to state 98
    contenido                      shift and go to state 217
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 99

    (17) contenido -> reasignacion .
    (27) contenido -> reasignacion . contenido
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 17 (contenido -> reasignacion .)
    RETURN          reduce using rule 17 (contenido -> reasignacion .)
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    reasignacion                   shift and go to state 99
    contenido                      shift and go to state 218
    asignacion                     shift and go to state 98
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 100

    (18) contenido -> funcall .
    (28) contenido -> funcall . contenido
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 18 (contenido -> funcall .)
    RETURN          reduce using rule 18 (contenido -> funcall .)
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    funcall                        shift and go to state 100
    contenido                      shift and go to state 219
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 101

    (19) contenido -> impresion .
    (29) contenido -> impresion . contenido
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 19 (contenido -> impresion .)
    RETURN          reduce using rule 19 (contenido -> impresion .)
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    impresion                      shift and go to state 101
    contenido                      shift and go to state 220
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 102

    (20) contenido -> entrada .
    (30) contenido -> entrada . contenido
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 20 (contenido -> entrada .)
    RETURN          reduce using rule 20 (contenido -> entrada .)
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    entrada                        shift and go to state 102
    contenido                      shift and go to state 221
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 103

    (21) contenido -> while .
    (31) contenido -> while . contenido
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 21 (contenido -> while .)
    RETURN          reduce using rule 21 (contenido -> while .)
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    while                          shift and go to state 103
    contenido                      shift and go to state 222
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 104

    (22) contenido -> for .
    (32) contenido -> for . contenido
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 22 (contenido -> for .)
    RETURN          reduce using rule 22 (contenido -> for .)
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    for                            shift and go to state 104
    contenido                      shift and go to state 223
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 105

    (23) contenido -> match .
    (34) contenido -> match . contenido
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 23 (contenido -> match .)
    RETURN          reduce using rule 23 (contenido -> match .)
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    match                          shift and go to state 105
    contenido                      shift and go to state 224
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 106

    (24) contenido -> if .
    (33) contenido -> if . contenido
    (213) if -> if . elseif
    (214) if -> if . else
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (215) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (216) else -> . ELSE LLAVE_I contenido LLAVE_D
    (217) else -> . elseif else
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 24 (contenido -> if .)
    RETURN          reduce using rule 24 (contenido -> if .)
    ELSE            shift and go to state 38
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    if                             shift and go to state 106
    contenido                      shift and go to state 225
    elseif                         shift and go to state 36
    else                           shift and go to state 37
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 107

    (25) contenido -> aritmetica .
    (35) contenido -> aritmetica . contenido
    (253) aritmetica -> aritmetica . aritmeticos numeros
    (254) aritmetica -> aritmetica . aritmeticos VARIABLE
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (255) aritmeticos -> . MENOS
    (256) aritmeticos -> . MAS
    (257) aritmeticos -> . MULTIPLICACION
    (258) aritmeticos -> . DIVISION
    (259) aritmeticos -> . MOD
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 25 (contenido -> aritmetica .)
    RETURN          reduce using rule 25 (contenido -> aritmetica .)
    MENOS           shift and go to state 197
    MAS             shift and go to state 198
    MULTIPLICACION  shift and go to state 199
    DIVISION        shift and go to state 200
    MOD             shift and go to state 201
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    aritmetica                     shift and go to state 107
    contenido                      shift and go to state 226
    aritmeticos                    shift and go to state 209
    numeros                        shift and go to state 109
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 108

    (98) reasignacion -> VARIABLE . IGUAL valor
    (99) reasignacion -> VARIABLE . IGUAL returnfun
    (142) funcall -> VARIABLE . PAR_I valores PAR_D
    (143) funcall -> VARIABLE . PAR_I PAR_D
    (173) match -> VARIABLE . MATCH LLAVE_I cases LLAVE_D
    (250) aritmetica -> VARIABLE . aritmeticos numeros
    (252) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (255) aritmeticos -> . MENOS
    (256) aritmeticos -> . MAS
    (257) aritmeticos -> . MULTIPLICACION
    (258) aritmeticos -> . DIVISION
    (259) aritmeticos -> . MOD

    IGUAL           shift and go to state 227
    PAR_I           shift and go to state 40
    MATCH           shift and go to state 41
    MENOS           shift and go to state 197
    MAS             shift and go to state 198
    MULTIPLICACION  shift and go to state 199
    DIVISION        shift and go to state 200
    MOD             shift and go to state 201

    aritmeticos                    shift and go to state 192

state 109

    (249) aritmetica -> numeros . aritmeticos numeros
    (251) aritmetica -> numeros . aritmeticos VARIABLE
    (255) aritmeticos -> . MENOS
    (256) aritmeticos -> . MAS
    (257) aritmeticos -> . MULTIPLICACION
    (258) aritmeticos -> . DIVISION
    (259) aritmeticos -> . MOD

    MENOS           shift and go to state 197
    MAS             shift and go to state 198
    MULTIPLICACION  shift and go to state 199
    DIVISION        shift and go to state 200
    MOD             shift and go to state 201

    aritmeticos                    shift and go to state 207

state 110

    (118) funcion -> DEF VARIABLE parametro IGUAL . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 228


state 111

    (125) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (126) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (127) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D

    IGUAL           shift and go to state 229


state 112

    (128) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D

    IGUAL           shift and go to state 230


state 113

    (131) dectipo -> DOBLE_PUNTO . tipo
    (132) dectipoTupla -> DOBLE_PUNTO . PAR_I tipos PAR_D
    (100) tipo -> . CHARCLASS
    (101) tipo -> . STRINGCLASS
    (102) tipo -> . BOOLCLASS
    (103) tipo -> . INTCLASS
    (104) tipo -> . LONGCLASS
    (105) tipo -> . DOUBLECLASS
    (106) tipo -> . FLOATCLASS

    PAR_I           shift and go to state 164
    CHARCLASS       shift and go to state 232
    STRINGCLASS     shift and go to state 233
    BOOLCLASS       shift and go to state 234
    INTCLASS        shift and go to state 235
    LONGCLASS       shift and go to state 236
    DOUBLECLASS     shift and go to state 237
    FLOATCLASS      shift and go to state 238

    tipo                           shift and go to state 231

state 114

    (122) parametro -> PAR_I PAR_D .

    IGUAL           reduce using rule 122 (parametro -> PAR_I PAR_D .)
    DOBLE_PUNTO     reduce using rule 122 (parametro -> PAR_I PAR_D .)


state 115

    (123) parametros -> PAR_I declaracion . PAR_D
    (124) parametros -> PAR_I declaracion . PAR_D parametros

    PAR_D           shift and go to state 239


state 116

    (119) declaracion -> VARIABLE . DOBLE_PUNTO tipo
    (120) declaracion -> VARIABLE . DOBLE_PUNTO tipo IGUAL valor

    DOBLE_PUNTO     shift and go to state 240


state 117

    (142) funcall -> VARIABLE PAR_I valores PAR_D .

    $end            reduce using rule 142 (funcall -> VARIABLE PAR_I valores PAR_D .)
    VAR             reduce using rule 142 (funcall -> VARIABLE PAR_I valores PAR_D .)
    VAL             reduce using rule 142 (funcall -> VARIABLE PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 142 (funcall -> VARIABLE PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 142 (funcall -> VARIABLE PAR_I valores PAR_D .)
    PRINT           reduce using rule 142 (funcall -> VARIABLE PAR_I valores PAR_D .)
    READLINE        reduce using rule 142 (funcall -> VARIABLE PAR_I valores PAR_D .)
    WHILE           reduce using rule 142 (funcall -> VARIABLE PAR_I valores PAR_D .)
    FOR             reduce using rule 142 (funcall -> VARIABLE PAR_I valores PAR_D .)
    IF              reduce using rule 142 (funcall -> VARIABLE PAR_I valores PAR_D .)
    INT             reduce using rule 142 (funcall -> VARIABLE PAR_I valores PAR_D .)
    LONG            reduce using rule 142 (funcall -> VARIABLE PAR_I valores PAR_D .)
    FLOAT           reduce using rule 142 (funcall -> VARIABLE PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 142 (funcall -> VARIABLE PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 142 (funcall -> VARIABLE PAR_I valores PAR_D .)
    PUNTO           reduce using rule 142 (funcall -> VARIABLE PAR_I valores PAR_D .)
    DEF             reduce using rule 142 (funcall -> VARIABLE PAR_I valores PAR_D .)
    RETURN          reduce using rule 142 (funcall -> VARIABLE PAR_I valores PAR_D .)
    CASE            reduce using rule 142 (funcall -> VARIABLE PAR_I valores PAR_D .)


state 118

    (160) valores -> valor COMA . valores
    (159) valores -> . valor
    (160) valores -> . valor COMA valores
    (107) valor -> . STRING
    (108) valor -> . CHAR
    (109) valor -> . VARIABLE
    (110) valor -> . numeros
    (111) valor -> . booleanos
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valor                          shift and go to state 61
    valores                        shift and go to state 241
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 119

    (173) match -> VARIABLE MATCH LLAVE_I cases . LLAVE_D

    LLAVE_D         shift and go to state 242


state 120

    (174) cases -> casesInt .

    LLAVE_D         reduce using rule 174 (cases -> casesInt .)


state 121

    (175) cases -> casesLgn .

    LLAVE_D         reduce using rule 175 (cases -> casesLgn .)


state 122

    (176) cases -> casesFlt .

    LLAVE_D         reduce using rule 176 (cases -> casesFlt .)


state 123

    (177) cases -> casesDob .

    LLAVE_D         reduce using rule 177 (cases -> casesDob .)


state 124

    (178) cases -> casesStr .

    LLAVE_D         reduce using rule 178 (cases -> casesStr .)


state 125

    (179) cases -> casesChar .

    LLAVE_D         reduce using rule 179 (cases -> casesChar .)


state 126

    (180) cases -> casesBool .

    LLAVE_D         reduce using rule 180 (cases -> casesBool .)


state 127

    (182) casesInt -> caseInt .
    (183) casesInt -> caseInt . casesInt
    (184) casesInt -> caseInt . defcase
    (182) casesInt -> . caseInt
    (183) casesInt -> . caseInt casesInt
    (184) casesInt -> . caseInt defcase
    (209) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (181) caseInt -> . CASE INT FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 182 (casesInt -> caseInt .)
    CASE            shift and go to state 245

    caseInt                        shift and go to state 127
    casesInt                       shift and go to state 243
    defcase                        shift and go to state 244

state 128

    (186) casesLgn -> caseLgn .
    (187) casesLgn -> caseLgn . casesLgn
    (188) casesLgn -> caseLgn . defcase
    (186) casesLgn -> . caseLgn
    (187) casesLgn -> . caseLgn casesLgn
    (188) casesLgn -> . caseLgn defcase
    (209) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (185) caseLgn -> . CASE LONG FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 186 (casesLgn -> caseLgn .)
    CASE            shift and go to state 248

    caseLgn                        shift and go to state 128
    casesLgn                       shift and go to state 246
    defcase                        shift and go to state 247

state 129

    (190) casesFlt -> caseFlt .
    (191) casesFlt -> caseFlt . casesFlt
    (192) casesFlt -> caseFlt . defcase
    (190) casesFlt -> . caseFlt
    (191) casesFlt -> . caseFlt casesFlt
    (192) casesFlt -> . caseFlt defcase
    (209) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (189) caseFlt -> . CASE FLOAT FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 190 (casesFlt -> caseFlt .)
    CASE            shift and go to state 251

    caseFlt                        shift and go to state 129
    casesFlt                       shift and go to state 249
    defcase                        shift and go to state 250

state 130

    (194) casesDob -> caseDob .
    (195) casesDob -> caseDob . casesDob
    (196) casesDob -> caseDob . defcase
    (194) casesDob -> . caseDob
    (195) casesDob -> . caseDob casesDob
    (196) casesDob -> . caseDob defcase
    (209) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (193) caseDob -> . CASE DOUBLE FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 194 (casesDob -> caseDob .)
    CASE            shift and go to state 254

    caseDob                        shift and go to state 130
    casesDob                       shift and go to state 252
    defcase                        shift and go to state 253

state 131

    (198) casesStr -> caseStr .
    (199) casesStr -> caseStr . casesStr
    (200) casesStr -> caseStr . defcase
    (198) casesStr -> . caseStr
    (199) casesStr -> . caseStr casesStr
    (200) casesStr -> . caseStr defcase
    (209) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (197) caseStr -> . CASE STRING FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 198 (casesStr -> caseStr .)
    CASE            shift and go to state 257

    caseStr                        shift and go to state 131
    casesStr                       shift and go to state 255
    defcase                        shift and go to state 256

state 132

    (202) casesChar -> caseChar .
    (203) casesChar -> caseChar . casesChar
    (204) casesChar -> caseChar . defcase
    (202) casesChar -> . caseChar
    (203) casesChar -> . caseChar casesChar
    (204) casesChar -> . caseChar defcase
    (209) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (201) caseChar -> . CASE CHAR FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 202 (casesChar -> caseChar .)
    CASE            shift and go to state 260

    caseChar                       shift and go to state 132
    casesChar                      shift and go to state 258
    defcase                        shift and go to state 259

state 133

    (206) casesBool -> caseBool .
    (207) casesBool -> caseBool . casesBool
    (208) casesBool -> caseBool . defcase
    (206) casesBool -> . caseBool
    (207) casesBool -> . caseBool casesBool
    (208) casesBool -> . caseBool defcase
    (209) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (205) caseBool -> . CASE booleanos FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 206 (casesBool -> caseBool .)
    CASE            shift and go to state 263

    caseBool                       shift and go to state 133
    casesBool                      shift and go to state 261
    defcase                        shift and go to state 262

state 134

    (181) caseInt -> CASE . INT FUNCION_FLECHA codeBlock
    (185) caseLgn -> CASE . LONG FUNCION_FLECHA codeBlock
    (189) caseFlt -> CASE . FLOAT FUNCION_FLECHA codeBlock
    (193) caseDob -> CASE . DOUBLE FUNCION_FLECHA codeBlock
    (197) caseStr -> CASE . STRING FUNCION_FLECHA codeBlock
    (201) caseChar -> CASE . CHAR FUNCION_FLECHA codeBlock
    (205) caseBool -> CASE . booleanos FUNCION_FLECHA codeBlock
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE

    INT             shift and go to state 264
    LONG            shift and go to state 265
    FLOAT           shift and go to state 266
    DOUBLE          shift and go to state 267
    STRING          shift and go to state 268
    CHAR            shift and go to state 269
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    booleanos                      shift and go to state 270

state 135

    (137) impresion -> PRINTLN PAR_I valorI PAR_D .

    $end            reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VAR             reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VAL             reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VARIABLE        reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    PRINTLN         reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    PRINT           reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    READLINE        reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    WHILE           reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    FOR             reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    IF              reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    INT             reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    LONG            reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    FLOAT           reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    DOUBLE          reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    LLAVE_D         reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    RETURN          reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    CASE            reduce using rule 137 (impresion -> PRINTLN PAR_I valorI PAR_D .)


state 136

    (139) valorI -> valor MAS . valorI
    (139) valorI -> . valor MAS valorI
    (140) valorI -> . valor
    (107) valor -> . STRING
    (108) valor -> . CHAR
    (109) valor -> . VARIABLE
    (110) valor -> . numeros
    (111) valor -> . booleanos
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valor                          shift and go to state 74
    valorI                         shift and go to state 271
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 137

    (138) impresion -> PRINT PAR_I valorI PAR_D .

    $end            reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    VAR             reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    VAL             reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    VARIABLE        reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    PRINTLN         reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    PRINT           reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    READLINE        reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    WHILE           reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    FOR             reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    IF              reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    INT             reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    LONG            reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    FLOAT           reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    DOUBLE          reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    LLAVE_D         reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    RETURN          reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)
    CASE            reduce using rule 138 (impresion -> PRINT PAR_I valorI PAR_D .)


state 138

    (41) asignacion -> VAR VARIABLE IGUAL VARIABLE .
    (250) aritmetica -> VARIABLE . aritmeticos numeros
    (252) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (149) castingcall -> VARIABLE . PUNTO castingfun
    (142) funcall -> VARIABLE . PAR_I valores PAR_D
    (143) funcall -> VARIABLE . PAR_I PAR_D
    (255) aritmeticos -> . MENOS
    (256) aritmeticos -> . MAS
    (257) aritmeticos -> . MULTIPLICACION
    (258) aritmeticos -> . DIVISION
    (259) aritmeticos -> . MOD

    DEF             reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VARIABLE        reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PRINTLN         reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PRINT           reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    READLINE        reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VAR             reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VAL             reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    WHILE           reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    FOR             reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    IF              reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    $end            reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    INT             reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    LONG            reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    FLOAT           reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    DOUBLE          reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    RETURN          reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    CASE            reduce using rule 41 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PUNTO           shift and go to state 272
    PAR_I           shift and go to state 40
    MENOS           shift and go to state 197
    MAS             shift and go to state 198
    MULTIPLICACION  shift and go to state 199
    DIVISION        shift and go to state 200
    MOD             shift and go to state 201

    aritmeticos                    shift and go to state 192

state 139

    (43) asignacion -> VAR VARIABLE IGUAL aritmetica .
    (253) aritmetica -> aritmetica . aritmeticos numeros
    (254) aritmetica -> aritmetica . aritmeticos VARIABLE
    (255) aritmeticos -> . MENOS
    (256) aritmeticos -> . MAS
    (257) aritmeticos -> . MULTIPLICACION
    (258) aritmeticos -> . DIVISION
    (259) aritmeticos -> . MOD

    DEF             reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VAR             reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    $end            reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 43 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    MENOS           shift and go to state 197
    MAS             shift and go to state 198
    MULTIPLICACION  shift and go to state 199
    DIVISION        shift and go to state 200
    MOD             shift and go to state 201

    aritmeticos                    shift and go to state 209

state 140

    (45) asignacion -> VAR VARIABLE IGUAL returnfun .

    DEF             reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    VARIABLE        reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    PRINTLN         reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    PRINT           reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    READLINE        reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    VAR             reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    VAL             reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    WHILE           reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    FOR             reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    IF              reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    $end            reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    INT             reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    LONG            reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    FLOAT           reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    DOUBLE          reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    LLAVE_D         reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    RETURN          reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    CASE            reduce using rule 45 (asignacion -> VAR VARIABLE IGUAL returnfun .)


state 141

    (162) asignacion -> VAR VARIABLE IGUAL tuple .

    DEF             reduce using rule 162 (asignacion -> VAR VARIABLE IGUAL tuple .)
    VARIABLE        reduce using rule 162 (asignacion -> VAR VARIABLE IGUAL tuple .)
    PRINTLN         reduce using rule 162 (asignacion -> VAR VARIABLE IGUAL tuple .)
    PRINT           reduce using rule 162 (asignacion -> VAR VARIABLE IGUAL tuple .)
    READLINE        reduce using rule 162 (asignacion -> VAR VARIABLE IGUAL tuple .)
    VAR             reduce using rule 162 (asignacion -> VAR VARIABLE IGUAL tuple .)
    VAL             reduce using rule 162 (asignacion -> VAR VARIABLE IGUAL tuple .)
    WHILE           reduce using rule 162 (asignacion -> VAR VARIABLE IGUAL tuple .)
    FOR             reduce using rule 162 (asignacion -> VAR VARIABLE IGUAL tuple .)
    IF              reduce using rule 162 (asignacion -> VAR VARIABLE IGUAL tuple .)
    $end            reduce using rule 162 (asignacion -> VAR VARIABLE IGUAL tuple .)
    INT             reduce using rule 162 (asignacion -> VAR VARIABLE IGUAL tuple .)
    LONG            reduce using rule 162 (asignacion -> VAR VARIABLE IGUAL tuple .)
    FLOAT           reduce using rule 162 (asignacion -> VAR VARIABLE IGUAL tuple .)
    DOUBLE          reduce using rule 162 (asignacion -> VAR VARIABLE IGUAL tuple .)
    LLAVE_D         reduce using rule 162 (asignacion -> VAR VARIABLE IGUAL tuple .)
    RETURN          reduce using rule 162 (asignacion -> VAR VARIABLE IGUAL tuple .)
    CASE            reduce using rule 162 (asignacion -> VAR VARIABLE IGUAL tuple .)


state 142

    (56) asignacionLong -> VAR VARIABLE IGUAL LONG .
    (115) numeros -> LONG .

    DEF             reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    VARIABLE        reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    PRINTLN         reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    PRINT           reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    READLINE        reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    VAR             reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    VAL             reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    WHILE           reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    FOR             reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    IF              reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    $end            reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    INT             reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    LONG            reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    FLOAT           reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    DOUBLE          reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    LLAVE_D         reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    RETURN          reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    CASE            reduce using rule 56 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    MENOS           reduce using rule 115 (numeros -> LONG .)
    MAS             reduce using rule 115 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 115 (numeros -> LONG .)
    DIVISION        reduce using rule 115 (numeros -> LONG .)
    MOD             reduce using rule 115 (numeros -> LONG .)


state 143

    (62) asignacionInt -> VAR VARIABLE IGUAL INT .
    (114) numeros -> INT .

    DEF             reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    VARIABLE        reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    PRINTLN         reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    PRINT           reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    READLINE        reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    VAR             reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    VAL             reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    WHILE           reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    FOR             reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    IF              reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    $end            reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    INT             reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    LONG            reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    FLOAT           reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    DOUBLE          reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    LLAVE_D         reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    RETURN          reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    CASE            reduce using rule 62 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    MENOS           reduce using rule 114 (numeros -> INT .)
    MAS             reduce using rule 114 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 114 (numeros -> INT .)
    DIVISION        reduce using rule 114 (numeros -> INT .)
    MOD             reduce using rule 114 (numeros -> INT .)


state 144

    (68) asignacionFloat -> VAR VARIABLE IGUAL FLOAT .
    (116) numeros -> FLOAT .

    DEF             reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    VARIABLE        reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    PRINTLN         reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    PRINT           reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    READLINE        reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    VAR             reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    VAL             reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    WHILE           reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    FOR             reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    IF              reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    $end            reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    INT             reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    LONG            reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    FLOAT           reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    DOUBLE          reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    LLAVE_D         reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    RETURN          reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    CASE            reduce using rule 68 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    MENOS           reduce using rule 116 (numeros -> FLOAT .)
    MAS             reduce using rule 116 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 116 (numeros -> FLOAT .)
    DIVISION        reduce using rule 116 (numeros -> FLOAT .)
    MOD             reduce using rule 116 (numeros -> FLOAT .)


state 145

    (74) asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .
    (117) numeros -> DOUBLE .

    DEF             reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    VARIABLE        reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    PRINTLN         reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    PRINT           reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    READLINE        reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    VAR             reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    VAL             reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    WHILE           reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    FOR             reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    IF              reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    $end            reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    INT             reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    LONG            reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    FLOAT           reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    DOUBLE          reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    LLAVE_D         reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    RETURN          reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    CASE            reduce using rule 74 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    MENOS           reduce using rule 117 (numeros -> DOUBLE .)
    MAS             reduce using rule 117 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 117 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 117 (numeros -> DOUBLE .)
    MOD             reduce using rule 117 (numeros -> DOUBLE .)


state 146

    (80) asignacionString -> VAR VARIABLE IGUAL STRING .

    DEF             reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VARIABLE        reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PRINTLN         reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PRINT           reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    READLINE        reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VAR             reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VAL             reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    WHILE           reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    FOR             reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    IF              reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    $end            reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    INT             reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    LONG            reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    FLOAT           reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    DOUBLE          reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    LLAVE_D         reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    RETURN          reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    CASE            reduce using rule 80 (asignacionString -> VAR VARIABLE IGUAL STRING .)


state 147

    (86) asignacionChar -> VAR VARIABLE IGUAL CHAR .

    DEF             reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VARIABLE        reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    PRINTLN         reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    PRINT           reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    READLINE        reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VAR             reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VAL             reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    WHILE           reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    FOR             reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    IF              reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    $end            reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    INT             reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    LONG            reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    FLOAT           reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    DOUBLE          reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    LLAVE_D         reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    RETURN          reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    CASE            reduce using rule 86 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)


state 148

    (92) asignacionBoolean -> VAR VARIABLE IGUAL booleanos .

    DEF             reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    PRINTLN         reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    READLINE        reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VAR             reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VAL             reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    FOR             reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    IF              reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    $end            reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    INT             reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    LONG            reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    FLOAT           reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    DOUBLE          reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    LLAVE_D         reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    RETURN          reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 92 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)


state 149

    (154) array -> VAR VARIABLE IGUAL ARRAYCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 273


state 150

    (161) tuple -> PAR_I . valores PAR_D
    (159) valores -> . valor
    (160) valores -> . valor COMA valores
    (107) valor -> . STRING
    (108) valor -> . CHAR
    (109) valor -> . VARIABLE
    (110) valor -> . numeros
    (111) valor -> . booleanos
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valores                        shift and go to state 274
    valor                          shift and go to state 61
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 151

    (144) returnfun -> returnCastable .
    (148) castingcall -> returnCastable . PUNTO castingfun

    DEF             reduce using rule 144 (returnfun -> returnCastable .)
    VARIABLE        reduce using rule 144 (returnfun -> returnCastable .)
    PRINTLN         reduce using rule 144 (returnfun -> returnCastable .)
    PRINT           reduce using rule 144 (returnfun -> returnCastable .)
    READLINE        reduce using rule 144 (returnfun -> returnCastable .)
    VAR             reduce using rule 144 (returnfun -> returnCastable .)
    VAL             reduce using rule 144 (returnfun -> returnCastable .)
    WHILE           reduce using rule 144 (returnfun -> returnCastable .)
    FOR             reduce using rule 144 (returnfun -> returnCastable .)
    IF              reduce using rule 144 (returnfun -> returnCastable .)
    $end            reduce using rule 144 (returnfun -> returnCastable .)
    INT             reduce using rule 144 (returnfun -> returnCastable .)
    LONG            reduce using rule 144 (returnfun -> returnCastable .)
    FLOAT           reduce using rule 144 (returnfun -> returnCastable .)
    DOUBLE          reduce using rule 144 (returnfun -> returnCastable .)
    LLAVE_D         reduce using rule 144 (returnfun -> returnCastable .)
    RETURN          reduce using rule 144 (returnfun -> returnCastable .)
    CASE            reduce using rule 144 (returnfun -> returnCastable .)
    PUNTO           shift and go to state 275


state 152

    (145) returnfun -> castingcall .

    DEF             reduce using rule 145 (returnfun -> castingcall .)
    VARIABLE        reduce using rule 145 (returnfun -> castingcall .)
    PRINTLN         reduce using rule 145 (returnfun -> castingcall .)
    PRINT           reduce using rule 145 (returnfun -> castingcall .)
    READLINE        reduce using rule 145 (returnfun -> castingcall .)
    VAR             reduce using rule 145 (returnfun -> castingcall .)
    VAL             reduce using rule 145 (returnfun -> castingcall .)
    WHILE           reduce using rule 145 (returnfun -> castingcall .)
    FOR             reduce using rule 145 (returnfun -> castingcall .)
    IF              reduce using rule 145 (returnfun -> castingcall .)
    $end            reduce using rule 145 (returnfun -> castingcall .)
    INT             reduce using rule 145 (returnfun -> castingcall .)
    LONG            reduce using rule 145 (returnfun -> castingcall .)
    FLOAT           reduce using rule 145 (returnfun -> castingcall .)
    DOUBLE          reduce using rule 145 (returnfun -> castingcall .)
    LLAVE_D         reduce using rule 145 (returnfun -> castingcall .)
    RETURN          reduce using rule 145 (returnfun -> castingcall .)
    CASE            reduce using rule 145 (returnfun -> castingcall .)


state 153

    (146) returnCastable -> entrada .

    PUNTO           reduce using rule 146 (returnCastable -> entrada .)
    DEF             reduce using rule 146 (returnCastable -> entrada .)
    VARIABLE        reduce using rule 146 (returnCastable -> entrada .)
    PRINTLN         reduce using rule 146 (returnCastable -> entrada .)
    PRINT           reduce using rule 146 (returnCastable -> entrada .)
    READLINE        reduce using rule 146 (returnCastable -> entrada .)
    VAR             reduce using rule 146 (returnCastable -> entrada .)
    VAL             reduce using rule 146 (returnCastable -> entrada .)
    WHILE           reduce using rule 146 (returnCastable -> entrada .)
    FOR             reduce using rule 146 (returnCastable -> entrada .)
    IF              reduce using rule 146 (returnCastable -> entrada .)
    $end            reduce using rule 146 (returnCastable -> entrada .)
    INT             reduce using rule 146 (returnCastable -> entrada .)
    LONG            reduce using rule 146 (returnCastable -> entrada .)
    FLOAT           reduce using rule 146 (returnCastable -> entrada .)
    DOUBLE          reduce using rule 146 (returnCastable -> entrada .)
    LLAVE_D         reduce using rule 146 (returnCastable -> entrada .)
    RETURN          reduce using rule 146 (returnCastable -> entrada .)
    CASE            reduce using rule 146 (returnCastable -> entrada .)


state 154

    (147) returnCastable -> funcall .

    PUNTO           reduce using rule 147 (returnCastable -> funcall .)
    DEF             reduce using rule 147 (returnCastable -> funcall .)
    VARIABLE        reduce using rule 147 (returnCastable -> funcall .)
    PRINTLN         reduce using rule 147 (returnCastable -> funcall .)
    PRINT           reduce using rule 147 (returnCastable -> funcall .)
    READLINE        reduce using rule 147 (returnCastable -> funcall .)
    VAR             reduce using rule 147 (returnCastable -> funcall .)
    VAL             reduce using rule 147 (returnCastable -> funcall .)
    WHILE           reduce using rule 147 (returnCastable -> funcall .)
    FOR             reduce using rule 147 (returnCastable -> funcall .)
    IF              reduce using rule 147 (returnCastable -> funcall .)
    $end            reduce using rule 147 (returnCastable -> funcall .)
    INT             reduce using rule 147 (returnCastable -> funcall .)
    LONG            reduce using rule 147 (returnCastable -> funcall .)
    FLOAT           reduce using rule 147 (returnCastable -> funcall .)
    DOUBLE          reduce using rule 147 (returnCastable -> funcall .)
    LLAVE_D         reduce using rule 147 (returnCastable -> funcall .)
    RETURN          reduce using rule 147 (returnCastable -> funcall .)
    CASE            reduce using rule 147 (returnCastable -> funcall .)


state 155

    (164) asignacion -> VAR VARIABLE dectipoTupla IGUAL . tuple
    (161) tuple -> . PAR_I valores PAR_D

    PAR_I           shift and go to state 150

    tuple                          shift and go to state 276

state 156

    (57) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL LONG
    (60) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 277


state 157

    (63) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS . IGUAL INT
    (66) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 278


state 158

    (69) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL FLOAT
    (72) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 279


state 159

    (75) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL DOUBLE
    (78) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 280


state 160

    (81) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL STRING
    (84) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 281


state 161

    (87) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL CHAR
    (90) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 282


state 162

    (93) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL booleanos
    (96) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 283


state 163

    (155) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 284


state 164

    (132) dectipoTupla -> DOBLE_PUNTO PAR_I . tipos PAR_D
    (133) tipos -> . tipo
    (134) tipos -> . tipo tiposentry
    (100) tipo -> . CHARCLASS
    (101) tipo -> . STRINGCLASS
    (102) tipo -> . BOOLCLASS
    (103) tipo -> . INTCLASS
    (104) tipo -> . LONGCLASS
    (105) tipo -> . DOUBLECLASS
    (106) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 232
    STRINGCLASS     shift and go to state 233
    BOOLCLASS       shift and go to state 234
    INTCLASS        shift and go to state 235
    LONGCLASS       shift and go to state 236
    DOUBLECLASS     shift and go to state 237
    FLOATCLASS      shift and go to state 238

    tipos                          shift and go to state 285
    tipo                           shift and go to state 286

state 165

    (42) asignacion -> VAL VARIABLE IGUAL VARIABLE .
    (250) aritmetica -> VARIABLE . aritmeticos numeros
    (252) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (149) castingcall -> VARIABLE . PUNTO castingfun
    (142) funcall -> VARIABLE . PAR_I valores PAR_D
    (143) funcall -> VARIABLE . PAR_I PAR_D
    (255) aritmeticos -> . MENOS
    (256) aritmeticos -> . MAS
    (257) aritmeticos -> . MULTIPLICACION
    (258) aritmeticos -> . DIVISION
    (259) aritmeticos -> . MOD

    DEF             reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VARIABLE        reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PRINTLN         reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PRINT           reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    READLINE        reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VAR             reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VAL             reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    WHILE           reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    FOR             reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    IF              reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    $end            reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    INT             reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    LONG            reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    FLOAT           reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    DOUBLE          reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    RETURN          reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    CASE            reduce using rule 42 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PUNTO           shift and go to state 272
    PAR_I           shift and go to state 40
    MENOS           shift and go to state 197
    MAS             shift and go to state 198
    MULTIPLICACION  shift and go to state 199
    DIVISION        shift and go to state 200
    MOD             shift and go to state 201

    aritmeticos                    shift and go to state 192

state 166

    (44) asignacion -> VAL VARIABLE IGUAL aritmetica .
    (253) aritmetica -> aritmetica . aritmeticos numeros
    (254) aritmetica -> aritmetica . aritmeticos VARIABLE
    (255) aritmeticos -> . MENOS
    (256) aritmeticos -> . MAS
    (257) aritmeticos -> . MULTIPLICACION
    (258) aritmeticos -> . DIVISION
    (259) aritmeticos -> . MOD

    DEF             reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VAR             reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    $end            reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 44 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    MENOS           shift and go to state 197
    MAS             shift and go to state 198
    MULTIPLICACION  shift and go to state 199
    DIVISION        shift and go to state 200
    MOD             shift and go to state 201

    aritmeticos                    shift and go to state 209

state 167

    (46) asignacion -> VAL VARIABLE IGUAL returnfun .

    DEF             reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    VARIABLE        reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    PRINTLN         reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    PRINT           reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    READLINE        reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    VAR             reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    VAL             reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    WHILE           reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    FOR             reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    IF              reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    $end            reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    INT             reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    LONG            reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    FLOAT           reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    DOUBLE          reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    LLAVE_D         reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    RETURN          reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    CASE            reduce using rule 46 (asignacion -> VAL VARIABLE IGUAL returnfun .)


state 168

    (163) asignacion -> VAL VARIABLE IGUAL tuple .

    DEF             reduce using rule 163 (asignacion -> VAL VARIABLE IGUAL tuple .)
    VARIABLE        reduce using rule 163 (asignacion -> VAL VARIABLE IGUAL tuple .)
    PRINTLN         reduce using rule 163 (asignacion -> VAL VARIABLE IGUAL tuple .)
    PRINT           reduce using rule 163 (asignacion -> VAL VARIABLE IGUAL tuple .)
    READLINE        reduce using rule 163 (asignacion -> VAL VARIABLE IGUAL tuple .)
    VAR             reduce using rule 163 (asignacion -> VAL VARIABLE IGUAL tuple .)
    VAL             reduce using rule 163 (asignacion -> VAL VARIABLE IGUAL tuple .)
    WHILE           reduce using rule 163 (asignacion -> VAL VARIABLE IGUAL tuple .)
    FOR             reduce using rule 163 (asignacion -> VAL VARIABLE IGUAL tuple .)
    IF              reduce using rule 163 (asignacion -> VAL VARIABLE IGUAL tuple .)
    $end            reduce using rule 163 (asignacion -> VAL VARIABLE IGUAL tuple .)
    INT             reduce using rule 163 (asignacion -> VAL VARIABLE IGUAL tuple .)
    LONG            reduce using rule 163 (asignacion -> VAL VARIABLE IGUAL tuple .)
    FLOAT           reduce using rule 163 (asignacion -> VAL VARIABLE IGUAL tuple .)
    DOUBLE          reduce using rule 163 (asignacion -> VAL VARIABLE IGUAL tuple .)
    LLAVE_D         reduce using rule 163 (asignacion -> VAL VARIABLE IGUAL tuple .)
    RETURN          reduce using rule 163 (asignacion -> VAL VARIABLE IGUAL tuple .)
    CASE            reduce using rule 163 (asignacion -> VAL VARIABLE IGUAL tuple .)


state 169

    (58) asignacionLong -> VAL VARIABLE IGUAL LONG .
    (115) numeros -> LONG .

    DEF             reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    VARIABLE        reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    PRINTLN         reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    PRINT           reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    READLINE        reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    VAR             reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    VAL             reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    WHILE           reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    FOR             reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    IF              reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    $end            reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    INT             reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    LONG            reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    FLOAT           reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    DOUBLE          reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    LLAVE_D         reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    RETURN          reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    CASE            reduce using rule 58 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    MENOS           reduce using rule 115 (numeros -> LONG .)
    MAS             reduce using rule 115 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 115 (numeros -> LONG .)
    DIVISION        reduce using rule 115 (numeros -> LONG .)
    MOD             reduce using rule 115 (numeros -> LONG .)


state 170

    (64) asignacionInt -> VAL VARIABLE IGUAL INT .
    (114) numeros -> INT .

    DEF             reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    VARIABLE        reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    PRINTLN         reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    PRINT           reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    READLINE        reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    VAR             reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    VAL             reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    WHILE           reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    FOR             reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    IF              reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    $end            reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    INT             reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    LONG            reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    FLOAT           reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    DOUBLE          reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    LLAVE_D         reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    RETURN          reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    CASE            reduce using rule 64 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    MENOS           reduce using rule 114 (numeros -> INT .)
    MAS             reduce using rule 114 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 114 (numeros -> INT .)
    DIVISION        reduce using rule 114 (numeros -> INT .)
    MOD             reduce using rule 114 (numeros -> INT .)


state 171

    (70) asignacionFloat -> VAL VARIABLE IGUAL FLOAT .
    (116) numeros -> FLOAT .

    DEF             reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    VARIABLE        reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    PRINTLN         reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    PRINT           reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    READLINE        reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    VAR             reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    VAL             reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    WHILE           reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    FOR             reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    IF              reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    $end            reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    INT             reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    LONG            reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    FLOAT           reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    DOUBLE          reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    LLAVE_D         reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    RETURN          reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    CASE            reduce using rule 70 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    MENOS           reduce using rule 116 (numeros -> FLOAT .)
    MAS             reduce using rule 116 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 116 (numeros -> FLOAT .)
    DIVISION        reduce using rule 116 (numeros -> FLOAT .)
    MOD             reduce using rule 116 (numeros -> FLOAT .)


state 172

    (76) asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .
    (117) numeros -> DOUBLE .

    DEF             reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    VARIABLE        reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    PRINTLN         reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    PRINT           reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    READLINE        reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    VAR             reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    VAL             reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    WHILE           reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    FOR             reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    IF              reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    $end            reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    INT             reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    LONG            reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    FLOAT           reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    DOUBLE          reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    LLAVE_D         reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    RETURN          reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    CASE            reduce using rule 76 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    MENOS           reduce using rule 117 (numeros -> DOUBLE .)
    MAS             reduce using rule 117 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 117 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 117 (numeros -> DOUBLE .)
    MOD             reduce using rule 117 (numeros -> DOUBLE .)


state 173

    (82) asignacionString -> VAL VARIABLE IGUAL STRING .

    DEF             reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VARIABLE        reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PRINTLN         reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PRINT           reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    READLINE        reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VAR             reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VAL             reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    WHILE           reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    FOR             reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    IF              reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    $end            reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    INT             reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    LONG            reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    FLOAT           reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    DOUBLE          reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    LLAVE_D         reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    RETURN          reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    CASE            reduce using rule 82 (asignacionString -> VAL VARIABLE IGUAL STRING .)


state 174

    (88) asignacionChar -> VAL VARIABLE IGUAL CHAR .

    DEF             reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VARIABLE        reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    PRINTLN         reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    PRINT           reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    READLINE        reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VAR             reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VAL             reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    WHILE           reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    FOR             reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    IF              reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    $end            reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    INT             reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    LONG            reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    FLOAT           reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    DOUBLE          reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    LLAVE_D         reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    RETURN          reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    CASE            reduce using rule 88 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)


state 175

    (94) asignacionBoolean -> VAL VARIABLE IGUAL booleanos .

    DEF             reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    PRINTLN         reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    READLINE        reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VAR             reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VAL             reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    FOR             reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    IF              reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    $end            reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    INT             reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    LONG            reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    FLOAT           reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    DOUBLE          reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    LLAVE_D         reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    RETURN          reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 94 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)


state 176

    (157) list -> VAL VARIABLE IGUAL LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 287


state 177

    (165) asignacion -> VAL VARIABLE dectipoTupla IGUAL . tuple
    (161) tuple -> . PAR_I valores PAR_D

    PAR_I           shift and go to state 150

    tuple                          shift and go to state 288

state 178

    (59) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL LONG
    (61) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 289


state 179

    (65) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS . IGUAL INT
    (67) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 290


state 180

    (71) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL FLOAT
    (73) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 291


state 181

    (77) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL DOUBLE
    (79) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 292


state 182

    (83) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL STRING
    (85) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 293


state 183

    (89) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL CHAR
    (91) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 294


state 184

    (95) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL booleanos
    (97) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 295


state 185

    (158) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS . CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    CORCHETE_I      shift and go to state 296


state 186

    (166) while -> WHILE PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 297


state 187

    (218) condicional -> valorC logicos . condicional
    (218) condicional -> . valorC logicos condicional
    (219) condicional -> . valorC
    (220) valorC -> . VARIABLE
    (221) valorC -> . booleanos
    (222) valorC -> . relacional
    (223) valorC -> . NOT VARIABLE
    (224) valorC -> . NOT booleanos
    (225) valorC -> . NOT relacional
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE
    (229) relacional -> . numeros comparacion numeros
    (230) relacional -> . aritmetica comparacion aritmetica
    (231) relacional -> . aritmetica comparacion numeros
    (232) relacional -> . numeros comparacion aritmetica
    (233) relacional -> . booleanos comparacion booleanos
    (234) relacional -> . STRING comparacion STRING
    (235) relacional -> . CHAR comparacion CHAR
    (236) relacional -> . VARIABLE comparacion numeros
    (237) relacional -> . numeros comparacion VARIABLE
    (238) relacional -> . VARIABLE comparacion booleanos
    (239) relacional -> . booleanos comparacion VARIABLE
    (240) relacional -> . VARIABLE comparacion STRING
    (241) relacional -> . STRING comparacion VARIABLE
    (242) relacional -> . VARIABLE comparacion CHAR
    (243) relacional -> . CHAR comparacion VARIABLE
    (244) relacional -> . VARIABLE comparacion VARIABLE
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 85
    NOT             shift and go to state 88
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71
    STRING          shift and go to state 91
    CHAR            shift and go to state 92
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    valorC                         shift and go to state 84
    condicional                    shift and go to state 298
    booleanos                      shift and go to state 86
    relacional                     shift and go to state 87
    numeros                        shift and go to state 89
    aritmetica                     shift and go to state 90

state 188

    (226) logicos -> AND .

    VARIABLE        reduce using rule 226 (logicos -> AND .)
    NOT             reduce using rule 226 (logicos -> AND .)
    TRUE            reduce using rule 226 (logicos -> AND .)
    FLASE           reduce using rule 226 (logicos -> AND .)
    STRING          reduce using rule 226 (logicos -> AND .)
    CHAR            reduce using rule 226 (logicos -> AND .)
    INT             reduce using rule 226 (logicos -> AND .)
    LONG            reduce using rule 226 (logicos -> AND .)
    FLOAT           reduce using rule 226 (logicos -> AND .)
    DOUBLE          reduce using rule 226 (logicos -> AND .)


state 189

    (227) logicos -> OR .

    VARIABLE        reduce using rule 227 (logicos -> OR .)
    NOT             reduce using rule 227 (logicos -> OR .)
    TRUE            reduce using rule 227 (logicos -> OR .)
    FLASE           reduce using rule 227 (logicos -> OR .)
    STRING          reduce using rule 227 (logicos -> OR .)
    CHAR            reduce using rule 227 (logicos -> OR .)
    INT             reduce using rule 227 (logicos -> OR .)
    LONG            reduce using rule 227 (logicos -> OR .)
    FLOAT           reduce using rule 227 (logicos -> OR .)
    DOUBLE          reduce using rule 227 (logicos -> OR .)


state 190

    (228) logicos -> NOT .

    VARIABLE        reduce using rule 228 (logicos -> NOT .)
    NOT             reduce using rule 228 (logicos -> NOT .)
    TRUE            reduce using rule 228 (logicos -> NOT .)
    FLASE           reduce using rule 228 (logicos -> NOT .)
    STRING          reduce using rule 228 (logicos -> NOT .)
    CHAR            reduce using rule 228 (logicos -> NOT .)
    INT             reduce using rule 228 (logicos -> NOT .)
    LONG            reduce using rule 228 (logicos -> NOT .)
    FLOAT           reduce using rule 228 (logicos -> NOT .)
    DOUBLE          reduce using rule 228 (logicos -> NOT .)


state 191

    (236) relacional -> VARIABLE comparacion . numeros
    (238) relacional -> VARIABLE comparacion . booleanos
    (240) relacional -> VARIABLE comparacion . STRING
    (242) relacional -> VARIABLE comparacion . CHAR
    (244) relacional -> VARIABLE comparacion . VARIABLE
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE

    STRING          shift and go to state 302
    CHAR            shift and go to state 303
    VARIABLE        shift and go to state 299
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    numeros                        shift and go to state 300
    booleanos                      shift and go to state 301

state 192

    (250) aritmetica -> VARIABLE aritmeticos . numeros
    (252) aritmetica -> VARIABLE aritmeticos . VARIABLE
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    VARIABLE        shift and go to state 304
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    numeros                        shift and go to state 305

state 193

    (245) comparacion -> IGUAL_COMPARACION .

    STRING          reduce using rule 245 (comparacion -> IGUAL_COMPARACION .)
    CHAR            reduce using rule 245 (comparacion -> IGUAL_COMPARACION .)
    VARIABLE        reduce using rule 245 (comparacion -> IGUAL_COMPARACION .)
    INT             reduce using rule 245 (comparacion -> IGUAL_COMPARACION .)
    LONG            reduce using rule 245 (comparacion -> IGUAL_COMPARACION .)
    FLOAT           reduce using rule 245 (comparacion -> IGUAL_COMPARACION .)
    DOUBLE          reduce using rule 245 (comparacion -> IGUAL_COMPARACION .)
    TRUE            reduce using rule 245 (comparacion -> IGUAL_COMPARACION .)
    FLASE           reduce using rule 245 (comparacion -> IGUAL_COMPARACION .)


state 194

    (246) comparacion -> DIFERENTE .

    STRING          reduce using rule 246 (comparacion -> DIFERENTE .)
    CHAR            reduce using rule 246 (comparacion -> DIFERENTE .)
    VARIABLE        reduce using rule 246 (comparacion -> DIFERENTE .)
    INT             reduce using rule 246 (comparacion -> DIFERENTE .)
    LONG            reduce using rule 246 (comparacion -> DIFERENTE .)
    FLOAT           reduce using rule 246 (comparacion -> DIFERENTE .)
    DOUBLE          reduce using rule 246 (comparacion -> DIFERENTE .)
    TRUE            reduce using rule 246 (comparacion -> DIFERENTE .)
    FLASE           reduce using rule 246 (comparacion -> DIFERENTE .)


state 195

    (247) comparacion -> MAYOR .

    STRING          reduce using rule 247 (comparacion -> MAYOR .)
    CHAR            reduce using rule 247 (comparacion -> MAYOR .)
    VARIABLE        reduce using rule 247 (comparacion -> MAYOR .)
    INT             reduce using rule 247 (comparacion -> MAYOR .)
    LONG            reduce using rule 247 (comparacion -> MAYOR .)
    FLOAT           reduce using rule 247 (comparacion -> MAYOR .)
    DOUBLE          reduce using rule 247 (comparacion -> MAYOR .)
    TRUE            reduce using rule 247 (comparacion -> MAYOR .)
    FLASE           reduce using rule 247 (comparacion -> MAYOR .)


state 196

    (248) comparacion -> MENOR .

    STRING          reduce using rule 248 (comparacion -> MENOR .)
    CHAR            reduce using rule 248 (comparacion -> MENOR .)
    VARIABLE        reduce using rule 248 (comparacion -> MENOR .)
    INT             reduce using rule 248 (comparacion -> MENOR .)
    LONG            reduce using rule 248 (comparacion -> MENOR .)
    FLOAT           reduce using rule 248 (comparacion -> MENOR .)
    DOUBLE          reduce using rule 248 (comparacion -> MENOR .)
    TRUE            reduce using rule 248 (comparacion -> MENOR .)
    FLASE           reduce using rule 248 (comparacion -> MENOR .)


state 197

    (255) aritmeticos -> MENOS .

    VARIABLE        reduce using rule 255 (aritmeticos -> MENOS .)
    INT             reduce using rule 255 (aritmeticos -> MENOS .)
    LONG            reduce using rule 255 (aritmeticos -> MENOS .)
    FLOAT           reduce using rule 255 (aritmeticos -> MENOS .)
    DOUBLE          reduce using rule 255 (aritmeticos -> MENOS .)


state 198

    (256) aritmeticos -> MAS .

    VARIABLE        reduce using rule 256 (aritmeticos -> MAS .)
    INT             reduce using rule 256 (aritmeticos -> MAS .)
    LONG            reduce using rule 256 (aritmeticos -> MAS .)
    FLOAT           reduce using rule 256 (aritmeticos -> MAS .)
    DOUBLE          reduce using rule 256 (aritmeticos -> MAS .)


state 199

    (257) aritmeticos -> MULTIPLICACION .

    VARIABLE        reduce using rule 257 (aritmeticos -> MULTIPLICACION .)
    INT             reduce using rule 257 (aritmeticos -> MULTIPLICACION .)
    LONG            reduce using rule 257 (aritmeticos -> MULTIPLICACION .)
    FLOAT           reduce using rule 257 (aritmeticos -> MULTIPLICACION .)
    DOUBLE          reduce using rule 257 (aritmeticos -> MULTIPLICACION .)


state 200

    (258) aritmeticos -> DIVISION .

    VARIABLE        reduce using rule 258 (aritmeticos -> DIVISION .)
    INT             reduce using rule 258 (aritmeticos -> DIVISION .)
    LONG            reduce using rule 258 (aritmeticos -> DIVISION .)
    FLOAT           reduce using rule 258 (aritmeticos -> DIVISION .)
    DOUBLE          reduce using rule 258 (aritmeticos -> DIVISION .)


state 201

    (259) aritmeticos -> MOD .

    VARIABLE        reduce using rule 259 (aritmeticos -> MOD .)
    INT             reduce using rule 259 (aritmeticos -> MOD .)
    LONG            reduce using rule 259 (aritmeticos -> MOD .)
    FLOAT           reduce using rule 259 (aritmeticos -> MOD .)
    DOUBLE          reduce using rule 259 (aritmeticos -> MOD .)


state 202

    (233) relacional -> booleanos comparacion . booleanos
    (239) relacional -> booleanos comparacion . VARIABLE
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE

    VARIABLE        shift and go to state 307
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    booleanos                      shift and go to state 306

state 203

    (223) valorC -> NOT VARIABLE .
    (236) relacional -> VARIABLE . comparacion numeros
    (238) relacional -> VARIABLE . comparacion booleanos
    (240) relacional -> VARIABLE . comparacion STRING
    (242) relacional -> VARIABLE . comparacion CHAR
    (244) relacional -> VARIABLE . comparacion VARIABLE
    (250) aritmetica -> VARIABLE . aritmeticos numeros
    (252) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (245) comparacion -> . IGUAL_COMPARACION
    (246) comparacion -> . DIFERENTE
    (247) comparacion -> . MAYOR
    (248) comparacion -> . MENOR
    (255) aritmeticos -> . MENOS
    (256) aritmeticos -> . MAS
    (257) aritmeticos -> . MULTIPLICACION
    (258) aritmeticos -> . DIVISION
    (259) aritmeticos -> . MOD

    AND             reduce using rule 223 (valorC -> NOT VARIABLE .)
    OR              reduce using rule 223 (valorC -> NOT VARIABLE .)
    NOT             reduce using rule 223 (valorC -> NOT VARIABLE .)
    PAR_D           reduce using rule 223 (valorC -> NOT VARIABLE .)
    IGUAL_COMPARACION shift and go to state 193
    DIFERENTE       shift and go to state 194
    MAYOR           shift and go to state 195
    MENOR           shift and go to state 196
    MENOS           shift and go to state 197
    MAS             shift and go to state 198
    MULTIPLICACION  shift and go to state 199
    DIVISION        shift and go to state 200
    MOD             shift and go to state 201

    comparacion                    shift and go to state 191
    aritmeticos                    shift and go to state 192

state 204

    (224) valorC -> NOT booleanos .
    (233) relacional -> booleanos . comparacion booleanos
    (239) relacional -> booleanos . comparacion VARIABLE
    (245) comparacion -> . IGUAL_COMPARACION
    (246) comparacion -> . DIFERENTE
    (247) comparacion -> . MAYOR
    (248) comparacion -> . MENOR

    AND             reduce using rule 224 (valorC -> NOT booleanos .)
    OR              reduce using rule 224 (valorC -> NOT booleanos .)
    NOT             reduce using rule 224 (valorC -> NOT booleanos .)
    PAR_D           reduce using rule 224 (valorC -> NOT booleanos .)
    IGUAL_COMPARACION shift and go to state 193
    DIFERENTE       shift and go to state 194
    MAYOR           shift and go to state 195
    MENOR           shift and go to state 196

    comparacion                    shift and go to state 202

state 205

    (225) valorC -> NOT relacional .

    AND             reduce using rule 225 (valorC -> NOT relacional .)
    OR              reduce using rule 225 (valorC -> NOT relacional .)
    NOT             reduce using rule 225 (valorC -> NOT relacional .)
    PAR_D           reduce using rule 225 (valorC -> NOT relacional .)


state 206

    (229) relacional -> numeros comparacion . numeros
    (232) relacional -> numeros comparacion . aritmetica
    (237) relacional -> numeros comparacion . VARIABLE
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 310
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    numeros                        shift and go to state 308
    aritmetica                     shift and go to state 309

state 207

    (249) aritmetica -> numeros aritmeticos . numeros
    (251) aritmetica -> numeros aritmeticos . VARIABLE
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    VARIABLE        shift and go to state 312
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    numeros                        shift and go to state 311

state 208

    (230) relacional -> aritmetica comparacion . aritmetica
    (231) relacional -> aritmetica comparacion . numeros
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    VARIABLE        shift and go to state 315
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    aritmetica                     shift and go to state 313
    numeros                        shift and go to state 314

state 209

    (253) aritmetica -> aritmetica aritmeticos . numeros
    (254) aritmetica -> aritmetica aritmeticos . VARIABLE
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    VARIABLE        shift and go to state 317
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    numeros                        shift and go to state 316

state 210

    (234) relacional -> STRING comparacion . STRING
    (241) relacional -> STRING comparacion . VARIABLE

    STRING          shift and go to state 318
    VARIABLE        shift and go to state 319


state 211

    (235) relacional -> CHAR comparacion . CHAR
    (243) relacional -> CHAR comparacion . VARIABLE

    CHAR            shift and go to state 320
    VARIABLE        shift and go to state 321


state 212

    (167) for -> FOR PAR_I VAR VARIABLE . ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> FOR PAR_I VAR VARIABLE . ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> FOR PAR_I VAR VARIABLE . ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    ITERATOR        shift and go to state 322


state 213

    (168) for -> FOR PAR_I VARIABLE ITERATOR . VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> FOR PAR_I VARIABLE ITERATOR . INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> FOR PAR_I VARIABLE ITERATOR . INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 323
    INT             shift and go to state 324


state 214

    (212) if -> IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 325


state 215

    (215) elseif -> ELSE IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 326


state 216

    (216) else -> ELSE LLAVE_I contenido LLAVE_D .

    ELSE            reduce using rule 216 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 216 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 216 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 216 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 216 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 216 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 216 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 216 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 216 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 216 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 216 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 216 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 216 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 216 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 216 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 216 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 216 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 216 (else -> ELSE LLAVE_I contenido LLAVE_D .)


state 217

    (26) contenido -> asignacion contenido .

    LLAVE_D         reduce using rule 26 (contenido -> asignacion contenido .)
    RETURN          reduce using rule 26 (contenido -> asignacion contenido .)


state 218

    (27) contenido -> reasignacion contenido .

    LLAVE_D         reduce using rule 27 (contenido -> reasignacion contenido .)
    RETURN          reduce using rule 27 (contenido -> reasignacion contenido .)


state 219

    (28) contenido -> funcall contenido .

    LLAVE_D         reduce using rule 28 (contenido -> funcall contenido .)
    RETURN          reduce using rule 28 (contenido -> funcall contenido .)


state 220

    (29) contenido -> impresion contenido .

    LLAVE_D         reduce using rule 29 (contenido -> impresion contenido .)
    RETURN          reduce using rule 29 (contenido -> impresion contenido .)


state 221

    (30) contenido -> entrada contenido .

    LLAVE_D         reduce using rule 30 (contenido -> entrada contenido .)
    RETURN          reduce using rule 30 (contenido -> entrada contenido .)


state 222

    (31) contenido -> while contenido .

    LLAVE_D         reduce using rule 31 (contenido -> while contenido .)
    RETURN          reduce using rule 31 (contenido -> while contenido .)


state 223

    (32) contenido -> for contenido .

    LLAVE_D         reduce using rule 32 (contenido -> for contenido .)
    RETURN          reduce using rule 32 (contenido -> for contenido .)


state 224

    (34) contenido -> match contenido .

    LLAVE_D         reduce using rule 34 (contenido -> match contenido .)
    RETURN          reduce using rule 34 (contenido -> match contenido .)


state 225

    (33) contenido -> if contenido .

    LLAVE_D         reduce using rule 33 (contenido -> if contenido .)
    RETURN          reduce using rule 33 (contenido -> if contenido .)


state 226

    (35) contenido -> aritmetica contenido .

    LLAVE_D         reduce using rule 35 (contenido -> aritmetica contenido .)
    RETURN          reduce using rule 35 (contenido -> aritmetica contenido .)


state 227

    (98) reasignacion -> VARIABLE IGUAL . valor
    (99) reasignacion -> VARIABLE IGUAL . returnfun
    (107) valor -> . STRING
    (108) valor -> . CHAR
    (109) valor -> . VARIABLE
    (110) valor -> . numeros
    (111) valor -> . booleanos
    (144) returnfun -> . returnCastable
    (145) returnfun -> . castingcall
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE
    (146) returnCastable -> . entrada
    (147) returnCastable -> . funcall
    (148) castingcall -> . returnCastable PUNTO castingfun
    (149) castingcall -> . VARIABLE PUNTO castingfun
    (141) entrada -> . READLINE PAR_I PAR_D
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 327
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71
    READLINE        shift and go to state 15

    valor                          shift and go to state 328
    returnfun                      shift and go to state 329
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65
    returnCastable                 shift and go to state 151
    castingcall                    shift and go to state 152
    entrada                        shift and go to state 153
    funcall                        shift and go to state 154

state 228

    (118) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 330
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 229

    (125) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN valor LLAVE_D
    (126) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (127) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN returnfun LLAVE_D

    LLAVE_I         shift and go to state 331


state 230

    (128) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN tuple LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN returnfun LLAVE_D

    LLAVE_I         shift and go to state 332


state 231

    (131) dectipo -> DOBLE_PUNTO tipo .

    IGUAL           reduce using rule 131 (dectipo -> DOBLE_PUNTO tipo .)


state 232

    (100) tipo -> CHARCLASS .

    IGUAL           reduce using rule 100 (tipo -> CHARCLASS .)
    COMA            reduce using rule 100 (tipo -> CHARCLASS .)
    PAR_D           reduce using rule 100 (tipo -> CHARCLASS .)
    CORCHETE_D      reduce using rule 100 (tipo -> CHARCLASS .)


state 233

    (101) tipo -> STRINGCLASS .

    IGUAL           reduce using rule 101 (tipo -> STRINGCLASS .)
    COMA            reduce using rule 101 (tipo -> STRINGCLASS .)
    PAR_D           reduce using rule 101 (tipo -> STRINGCLASS .)
    CORCHETE_D      reduce using rule 101 (tipo -> STRINGCLASS .)


state 234

    (102) tipo -> BOOLCLASS .

    IGUAL           reduce using rule 102 (tipo -> BOOLCLASS .)
    COMA            reduce using rule 102 (tipo -> BOOLCLASS .)
    PAR_D           reduce using rule 102 (tipo -> BOOLCLASS .)
    CORCHETE_D      reduce using rule 102 (tipo -> BOOLCLASS .)


state 235

    (103) tipo -> INTCLASS .

    IGUAL           reduce using rule 103 (tipo -> INTCLASS .)
    COMA            reduce using rule 103 (tipo -> INTCLASS .)
    PAR_D           reduce using rule 103 (tipo -> INTCLASS .)
    CORCHETE_D      reduce using rule 103 (tipo -> INTCLASS .)


state 236

    (104) tipo -> LONGCLASS .

    IGUAL           reduce using rule 104 (tipo -> LONGCLASS .)
    COMA            reduce using rule 104 (tipo -> LONGCLASS .)
    PAR_D           reduce using rule 104 (tipo -> LONGCLASS .)
    CORCHETE_D      reduce using rule 104 (tipo -> LONGCLASS .)


state 237

    (105) tipo -> DOUBLECLASS .

    IGUAL           reduce using rule 105 (tipo -> DOUBLECLASS .)
    COMA            reduce using rule 105 (tipo -> DOUBLECLASS .)
    PAR_D           reduce using rule 105 (tipo -> DOUBLECLASS .)
    CORCHETE_D      reduce using rule 105 (tipo -> DOUBLECLASS .)


state 238

    (106) tipo -> FLOATCLASS .

    IGUAL           reduce using rule 106 (tipo -> FLOATCLASS .)
    COMA            reduce using rule 106 (tipo -> FLOATCLASS .)
    PAR_D           reduce using rule 106 (tipo -> FLOATCLASS .)
    CORCHETE_D      reduce using rule 106 (tipo -> FLOATCLASS .)


state 239

    (123) parametros -> PAR_I declaracion PAR_D .
    (124) parametros -> PAR_I declaracion PAR_D . parametros
    (123) parametros -> . PAR_I declaracion PAR_D
    (124) parametros -> . PAR_I declaracion PAR_D parametros

    IGUAL           reduce using rule 123 (parametros -> PAR_I declaracion PAR_D .)
    DOBLE_PUNTO     reduce using rule 123 (parametros -> PAR_I declaracion PAR_D .)
    PAR_I           shift and go to state 333

    parametros                     shift and go to state 334

state 240

    (119) declaracion -> VARIABLE DOBLE_PUNTO . tipo
    (120) declaracion -> VARIABLE DOBLE_PUNTO . tipo IGUAL valor
    (100) tipo -> . CHARCLASS
    (101) tipo -> . STRINGCLASS
    (102) tipo -> . BOOLCLASS
    (103) tipo -> . INTCLASS
    (104) tipo -> . LONGCLASS
    (105) tipo -> . DOUBLECLASS
    (106) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 232
    STRINGCLASS     shift and go to state 233
    BOOLCLASS       shift and go to state 234
    INTCLASS        shift and go to state 235
    LONGCLASS       shift and go to state 236
    DOUBLECLASS     shift and go to state 237
    FLOATCLASS      shift and go to state 238

    tipo                           shift and go to state 335

state 241

    (160) valores -> valor COMA valores .

    PAR_D           reduce using rule 160 (valores -> valor COMA valores .)


state 242

    (173) match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .

    DEF             reduce using rule 173 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VARIABLE        reduce using rule 173 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    PRINTLN         reduce using rule 173 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    PRINT           reduce using rule 173 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    READLINE        reduce using rule 173 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VAR             reduce using rule 173 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VAL             reduce using rule 173 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    WHILE           reduce using rule 173 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    FOR             reduce using rule 173 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    IF              reduce using rule 173 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    $end            reduce using rule 173 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    INT             reduce using rule 173 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    LONG            reduce using rule 173 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    FLOAT           reduce using rule 173 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    DOUBLE          reduce using rule 173 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    LLAVE_D         reduce using rule 173 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    RETURN          reduce using rule 173 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)


state 243

    (183) casesInt -> caseInt casesInt .

    LLAVE_D         reduce using rule 183 (casesInt -> caseInt casesInt .)


state 244

    (184) casesInt -> caseInt defcase .

    LLAVE_D         reduce using rule 184 (casesInt -> caseInt defcase .)


state 245

    (209) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (181) caseInt -> CASE . INT FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 336
    INT             shift and go to state 264


state 246

    (187) casesLgn -> caseLgn casesLgn .

    LLAVE_D         reduce using rule 187 (casesLgn -> caseLgn casesLgn .)


state 247

    (188) casesLgn -> caseLgn defcase .

    LLAVE_D         reduce using rule 188 (casesLgn -> caseLgn defcase .)


state 248

    (209) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (185) caseLgn -> CASE . LONG FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 336
    LONG            shift and go to state 265


state 249

    (191) casesFlt -> caseFlt casesFlt .

    LLAVE_D         reduce using rule 191 (casesFlt -> caseFlt casesFlt .)


state 250

    (192) casesFlt -> caseFlt defcase .

    LLAVE_D         reduce using rule 192 (casesFlt -> caseFlt defcase .)


state 251

    (209) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (189) caseFlt -> CASE . FLOAT FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 336
    FLOAT           shift and go to state 266


state 252

    (195) casesDob -> caseDob casesDob .

    LLAVE_D         reduce using rule 195 (casesDob -> caseDob casesDob .)


state 253

    (196) casesDob -> caseDob defcase .

    LLAVE_D         reduce using rule 196 (casesDob -> caseDob defcase .)


state 254

    (209) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (193) caseDob -> CASE . DOUBLE FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 336
    DOUBLE          shift and go to state 267


state 255

    (199) casesStr -> caseStr casesStr .

    LLAVE_D         reduce using rule 199 (casesStr -> caseStr casesStr .)


state 256

    (200) casesStr -> caseStr defcase .

    LLAVE_D         reduce using rule 200 (casesStr -> caseStr defcase .)


state 257

    (209) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (197) caseStr -> CASE . STRING FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 336
    STRING          shift and go to state 268


state 258

    (203) casesChar -> caseChar casesChar .

    LLAVE_D         reduce using rule 203 (casesChar -> caseChar casesChar .)


state 259

    (204) casesChar -> caseChar defcase .

    LLAVE_D         reduce using rule 204 (casesChar -> caseChar defcase .)


state 260

    (209) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (201) caseChar -> CASE . CHAR FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 336
    CHAR            shift and go to state 269


state 261

    (207) casesBool -> caseBool casesBool .

    LLAVE_D         reduce using rule 207 (casesBool -> caseBool casesBool .)


state 262

    (208) casesBool -> caseBool defcase .

    LLAVE_D         reduce using rule 208 (casesBool -> caseBool defcase .)


state 263

    (209) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (205) caseBool -> CASE . booleanos FUNCION_FLECHA codeBlock
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE

    SUBGUION        shift and go to state 336
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    booleanos                      shift and go to state 270

state 264

    (181) caseInt -> CASE INT . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 337


state 265

    (185) caseLgn -> CASE LONG . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 338


state 266

    (189) caseFlt -> CASE FLOAT . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 339


state 267

    (193) caseDob -> CASE DOUBLE . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 340


state 268

    (197) caseStr -> CASE STRING . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 341


state 269

    (201) caseChar -> CASE CHAR . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 342


state 270

    (205) caseBool -> CASE booleanos . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 343


state 271

    (139) valorI -> valor MAS valorI .

    PAR_D           reduce using rule 139 (valorI -> valor MAS valorI .)


state 272

    (149) castingcall -> VARIABLE PUNTO . castingfun
    (150) castingfun -> . TO_INT
    (151) castingfun -> . TO_DOUBLE
    (152) castingfun -> . TO_FLOAT
    (153) castingfun -> . TO_LONG

    TO_INT          shift and go to state 345
    TO_DOUBLE       shift and go to state 346
    TO_FLOAT        shift and go to state 347
    TO_LONG         shift and go to state 348

    castingfun                     shift and go to state 344

state 273

    (154) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (159) valores -> . valor
    (160) valores -> . valor COMA valores
    (107) valor -> . STRING
    (108) valor -> . CHAR
    (109) valor -> . VARIABLE
    (110) valor -> . numeros
    (111) valor -> . booleanos
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valores                        shift and go to state 349
    valor                          shift and go to state 61
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 274

    (161) tuple -> PAR_I valores . PAR_D

    PAR_D           shift and go to state 350


state 275

    (148) castingcall -> returnCastable PUNTO . castingfun
    (150) castingfun -> . TO_INT
    (151) castingfun -> . TO_DOUBLE
    (152) castingfun -> . TO_FLOAT
    (153) castingfun -> . TO_LONG

    TO_INT          shift and go to state 345
    TO_DOUBLE       shift and go to state 346
    TO_FLOAT        shift and go to state 347
    TO_LONG         shift and go to state 348

    castingfun                     shift and go to state 351

state 276

    (164) asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .

    DEF             reduce using rule 164 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    VARIABLE        reduce using rule 164 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    PRINTLN         reduce using rule 164 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    PRINT           reduce using rule 164 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    READLINE        reduce using rule 164 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    VAR             reduce using rule 164 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    VAL             reduce using rule 164 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    WHILE           reduce using rule 164 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    FOR             reduce using rule 164 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    IF              reduce using rule 164 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    $end            reduce using rule 164 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    INT             reduce using rule 164 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    LONG            reduce using rule 164 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    FLOAT           reduce using rule 164 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    DOUBLE          reduce using rule 164 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    LLAVE_D         reduce using rule 164 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    RETURN          reduce using rule 164 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    CASE            reduce using rule 164 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)


state 277

    (57) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . LONG
    (60) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . VARIABLE

    LONG            shift and go to state 353
    VARIABLE        shift and go to state 352


state 278

    (63) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL . INT
    (66) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL . VARIABLE

    INT             shift and go to state 355
    VARIABLE        shift and go to state 354


state 279

    (69) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . FLOAT
    (72) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . VARIABLE

    FLOAT           shift and go to state 357
    VARIABLE        shift and go to state 356


state 280

    (75) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . DOUBLE
    (78) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . VARIABLE

    DOUBLE          shift and go to state 359
    VARIABLE        shift and go to state 358


state 281

    (81) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . STRING
    (84) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . VARIABLE

    STRING          shift and go to state 361
    VARIABLE        shift and go to state 360


state 282

    (87) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . CHAR
    (90) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . VARIABLE

    CHAR            shift and go to state 363
    VARIABLE        shift and go to state 362


state 283

    (93) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . booleanos
    (96) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . VARIABLE
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE

    VARIABLE        shift and go to state 364
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    booleanos                      shift and go to state 365

state 284

    (155) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (100) tipo -> . CHARCLASS
    (101) tipo -> . STRINGCLASS
    (102) tipo -> . BOOLCLASS
    (103) tipo -> . INTCLASS
    (104) tipo -> . LONGCLASS
    (105) tipo -> . DOUBLECLASS
    (106) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 232
    STRINGCLASS     shift and go to state 233
    BOOLCLASS       shift and go to state 234
    INTCLASS        shift and go to state 235
    LONGCLASS       shift and go to state 236
    DOUBLECLASS     shift and go to state 237
    FLOATCLASS      shift and go to state 238

    tipo                           shift and go to state 366

state 285

    (132) dectipoTupla -> DOBLE_PUNTO PAR_I tipos . PAR_D

    PAR_D           shift and go to state 367


state 286

    (133) tipos -> tipo .
    (134) tipos -> tipo . tiposentry
    (135) tiposentry -> . COMA tipo
    (136) tiposentry -> . COMA tipo tiposentry

    PAR_D           reduce using rule 133 (tipos -> tipo .)
    COMA            shift and go to state 369

    tiposentry                     shift and go to state 368

state 287

    (157) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I . valores PAR_D
    (159) valores -> . valor
    (160) valores -> . valor COMA valores
    (107) valor -> . STRING
    (108) valor -> . CHAR
    (109) valor -> . VARIABLE
    (110) valor -> . numeros
    (111) valor -> . booleanos
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valores                        shift and go to state 370
    valor                          shift and go to state 61
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 288

    (165) asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .

    DEF             reduce using rule 165 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    VARIABLE        reduce using rule 165 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    PRINTLN         reduce using rule 165 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    PRINT           reduce using rule 165 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    READLINE        reduce using rule 165 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    VAR             reduce using rule 165 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    VAL             reduce using rule 165 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    WHILE           reduce using rule 165 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    FOR             reduce using rule 165 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    IF              reduce using rule 165 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    $end            reduce using rule 165 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    INT             reduce using rule 165 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    LONG            reduce using rule 165 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    FLOAT           reduce using rule 165 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    DOUBLE          reduce using rule 165 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    LLAVE_D         reduce using rule 165 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    RETURN          reduce using rule 165 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    CASE            reduce using rule 165 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)


state 289

    (59) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . LONG
    (61) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . VARIABLE

    LONG            shift and go to state 372
    VARIABLE        shift and go to state 371


state 290

    (65) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL . INT
    (67) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL . VARIABLE

    INT             shift and go to state 374
    VARIABLE        shift and go to state 373


state 291

    (71) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . FLOAT
    (73) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . VARIABLE

    FLOAT           shift and go to state 376
    VARIABLE        shift and go to state 375


state 292

    (77) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . DOUBLE
    (79) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . VARIABLE

    DOUBLE          shift and go to state 378
    VARIABLE        shift and go to state 377


state 293

    (83) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . STRING
    (85) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . VARIABLE

    STRING          shift and go to state 380
    VARIABLE        shift and go to state 379


state 294

    (89) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . CHAR
    (91) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . VARIABLE

    CHAR            shift and go to state 382
    VARIABLE        shift and go to state 381


state 295

    (95) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . booleanos
    (97) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . VARIABLE
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE

    VARIABLE        shift and go to state 383
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    booleanos                      shift and go to state 384

state 296

    (158) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I . tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (100) tipo -> . CHARCLASS
    (101) tipo -> . STRINGCLASS
    (102) tipo -> . BOOLCLASS
    (103) tipo -> . INTCLASS
    (104) tipo -> . LONGCLASS
    (105) tipo -> . DOUBLECLASS
    (106) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 232
    STRINGCLASS     shift and go to state 233
    BOOLCLASS       shift and go to state 234
    INTCLASS        shift and go to state 235
    LONGCLASS       shift and go to state 236
    DOUBLECLASS     shift and go to state 237
    FLOATCLASS      shift and go to state 238

    tipo                           shift and go to state 385

state 297

    (166) while -> WHILE PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 386
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 298

    (218) condicional -> valorC logicos condicional .

    PAR_D           reduce using rule 218 (condicional -> valorC logicos condicional .)


state 299

    (244) relacional -> VARIABLE comparacion VARIABLE .

    AND             reduce using rule 244 (relacional -> VARIABLE comparacion VARIABLE .)
    OR              reduce using rule 244 (relacional -> VARIABLE comparacion VARIABLE .)
    NOT             reduce using rule 244 (relacional -> VARIABLE comparacion VARIABLE .)
    PAR_D           reduce using rule 244 (relacional -> VARIABLE comparacion VARIABLE .)


state 300

    (236) relacional -> VARIABLE comparacion numeros .

    AND             reduce using rule 236 (relacional -> VARIABLE comparacion numeros .)
    OR              reduce using rule 236 (relacional -> VARIABLE comparacion numeros .)
    NOT             reduce using rule 236 (relacional -> VARIABLE comparacion numeros .)
    PAR_D           reduce using rule 236 (relacional -> VARIABLE comparacion numeros .)


state 301

    (238) relacional -> VARIABLE comparacion booleanos .

    AND             reduce using rule 238 (relacional -> VARIABLE comparacion booleanos .)
    OR              reduce using rule 238 (relacional -> VARIABLE comparacion booleanos .)
    NOT             reduce using rule 238 (relacional -> VARIABLE comparacion booleanos .)
    PAR_D           reduce using rule 238 (relacional -> VARIABLE comparacion booleanos .)


state 302

    (240) relacional -> VARIABLE comparacion STRING .

    AND             reduce using rule 240 (relacional -> VARIABLE comparacion STRING .)
    OR              reduce using rule 240 (relacional -> VARIABLE comparacion STRING .)
    NOT             reduce using rule 240 (relacional -> VARIABLE comparacion STRING .)
    PAR_D           reduce using rule 240 (relacional -> VARIABLE comparacion STRING .)


state 303

    (242) relacional -> VARIABLE comparacion CHAR .

    AND             reduce using rule 242 (relacional -> VARIABLE comparacion CHAR .)
    OR              reduce using rule 242 (relacional -> VARIABLE comparacion CHAR .)
    NOT             reduce using rule 242 (relacional -> VARIABLE comparacion CHAR .)
    PAR_D           reduce using rule 242 (relacional -> VARIABLE comparacion CHAR .)


state 304

    (252) aritmetica -> VARIABLE aritmeticos VARIABLE .

    IGUAL_COMPARACION reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MAYOR           reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MENOR           reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MENOS           reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MAS             reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DIVISION        reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MOD             reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VAR             reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VAL             reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PRINT           reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    READLINE        reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    WHILE           reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    FOR             reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    IF              reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    INT             reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    LONG            reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    FLOAT           reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DEF             reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    $end            reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    RETURN          reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    CASE            reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    AND             reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    OR              reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    NOT             reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PAR_D           reduce using rule 252 (aritmetica -> VARIABLE aritmeticos VARIABLE .)


state 305

    (250) aritmetica -> VARIABLE aritmeticos numeros .

    IGUAL_COMPARACION reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    DIFERENTE       reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    MAYOR           reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    MENOR           reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    MENOS           reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    MAS             reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    DIVISION        reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    MOD             reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    VAR             reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    VAL             reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    VARIABLE        reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    PRINTLN         reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    PRINT           reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    READLINE        reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    WHILE           reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    FOR             reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    IF              reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    INT             reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    LONG            reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    FLOAT           reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    DOUBLE          reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    LLAVE_D         reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    DEF             reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    $end            reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    RETURN          reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    CASE            reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    AND             reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    OR              reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    NOT             reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)
    PAR_D           reduce using rule 250 (aritmetica -> VARIABLE aritmeticos numeros .)


state 306

    (233) relacional -> booleanos comparacion booleanos .

    AND             reduce using rule 233 (relacional -> booleanos comparacion booleanos .)
    OR              reduce using rule 233 (relacional -> booleanos comparacion booleanos .)
    NOT             reduce using rule 233 (relacional -> booleanos comparacion booleanos .)
    PAR_D           reduce using rule 233 (relacional -> booleanos comparacion booleanos .)


state 307

    (239) relacional -> booleanos comparacion VARIABLE .

    AND             reduce using rule 239 (relacional -> booleanos comparacion VARIABLE .)
    OR              reduce using rule 239 (relacional -> booleanos comparacion VARIABLE .)
    NOT             reduce using rule 239 (relacional -> booleanos comparacion VARIABLE .)
    PAR_D           reduce using rule 239 (relacional -> booleanos comparacion VARIABLE .)


state 308

    (229) relacional -> numeros comparacion numeros .
    (249) aritmetica -> numeros . aritmeticos numeros
    (251) aritmetica -> numeros . aritmeticos VARIABLE
    (255) aritmeticos -> . MENOS
    (256) aritmeticos -> . MAS
    (257) aritmeticos -> . MULTIPLICACION
    (258) aritmeticos -> . DIVISION
    (259) aritmeticos -> . MOD

    AND             reduce using rule 229 (relacional -> numeros comparacion numeros .)
    OR              reduce using rule 229 (relacional -> numeros comparacion numeros .)
    NOT             reduce using rule 229 (relacional -> numeros comparacion numeros .)
    PAR_D           reduce using rule 229 (relacional -> numeros comparacion numeros .)
    MENOS           shift and go to state 197
    MAS             shift and go to state 198
    MULTIPLICACION  shift and go to state 199
    DIVISION        shift and go to state 200
    MOD             shift and go to state 201

    aritmeticos                    shift and go to state 207

state 309

    (232) relacional -> numeros comparacion aritmetica .
    (253) aritmetica -> aritmetica . aritmeticos numeros
    (254) aritmetica -> aritmetica . aritmeticos VARIABLE
    (255) aritmeticos -> . MENOS
    (256) aritmeticos -> . MAS
    (257) aritmeticos -> . MULTIPLICACION
    (258) aritmeticos -> . DIVISION
    (259) aritmeticos -> . MOD

    AND             reduce using rule 232 (relacional -> numeros comparacion aritmetica .)
    OR              reduce using rule 232 (relacional -> numeros comparacion aritmetica .)
    NOT             reduce using rule 232 (relacional -> numeros comparacion aritmetica .)
    PAR_D           reduce using rule 232 (relacional -> numeros comparacion aritmetica .)
    MENOS           shift and go to state 197
    MAS             shift and go to state 198
    MULTIPLICACION  shift and go to state 199
    DIVISION        shift and go to state 200
    MOD             shift and go to state 201

    aritmeticos                    shift and go to state 209

state 310

    (237) relacional -> numeros comparacion VARIABLE .
    (250) aritmetica -> VARIABLE . aritmeticos numeros
    (252) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (255) aritmeticos -> . MENOS
    (256) aritmeticos -> . MAS
    (257) aritmeticos -> . MULTIPLICACION
    (258) aritmeticos -> . DIVISION
    (259) aritmeticos -> . MOD

    AND             reduce using rule 237 (relacional -> numeros comparacion VARIABLE .)
    OR              reduce using rule 237 (relacional -> numeros comparacion VARIABLE .)
    NOT             reduce using rule 237 (relacional -> numeros comparacion VARIABLE .)
    PAR_D           reduce using rule 237 (relacional -> numeros comparacion VARIABLE .)
    MENOS           shift and go to state 197
    MAS             shift and go to state 198
    MULTIPLICACION  shift and go to state 199
    DIVISION        shift and go to state 200
    MOD             shift and go to state 201

    aritmeticos                    shift and go to state 192

state 311

    (249) aritmetica -> numeros aritmeticos numeros .

    IGUAL_COMPARACION reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    DIFERENTE       reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    MAYOR           reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    MENOR           reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    MENOS           reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    MAS             reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    DIVISION        reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    MOD             reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    VAR             reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    VAL             reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    VARIABLE        reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    PRINTLN         reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    PRINT           reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    READLINE        reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    WHILE           reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    FOR             reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    IF              reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    INT             reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    LONG            reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    FLOAT           reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    DOUBLE          reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    LLAVE_D         reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    DEF             reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    $end            reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    RETURN          reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    CASE            reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    AND             reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    OR              reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    NOT             reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)
    PAR_D           reduce using rule 249 (aritmetica -> numeros aritmeticos numeros .)


state 312

    (251) aritmetica -> numeros aritmeticos VARIABLE .

    IGUAL_COMPARACION reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    MAYOR           reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    MENOR           reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    MENOS           reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    MAS             reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    DIVISION        reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    MOD             reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    VAR             reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    VAL             reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    PRINT           reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    READLINE        reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    WHILE           reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    FOR             reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    IF              reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    INT             reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    LONG            reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    FLOAT           reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    DEF             reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    $end            reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    RETURN          reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    CASE            reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    AND             reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    OR              reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    NOT             reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)
    PAR_D           reduce using rule 251 (aritmetica -> numeros aritmeticos VARIABLE .)


state 313

    (230) relacional -> aritmetica comparacion aritmetica .
    (253) aritmetica -> aritmetica . aritmeticos numeros
    (254) aritmetica -> aritmetica . aritmeticos VARIABLE
    (255) aritmeticos -> . MENOS
    (256) aritmeticos -> . MAS
    (257) aritmeticos -> . MULTIPLICACION
    (258) aritmeticos -> . DIVISION
    (259) aritmeticos -> . MOD

    AND             reduce using rule 230 (relacional -> aritmetica comparacion aritmetica .)
    OR              reduce using rule 230 (relacional -> aritmetica comparacion aritmetica .)
    NOT             reduce using rule 230 (relacional -> aritmetica comparacion aritmetica .)
    PAR_D           reduce using rule 230 (relacional -> aritmetica comparacion aritmetica .)
    MENOS           shift and go to state 197
    MAS             shift and go to state 198
    MULTIPLICACION  shift and go to state 199
    DIVISION        shift and go to state 200
    MOD             shift and go to state 201

    aritmeticos                    shift and go to state 209

state 314

    (231) relacional -> aritmetica comparacion numeros .
    (249) aritmetica -> numeros . aritmeticos numeros
    (251) aritmetica -> numeros . aritmeticos VARIABLE
    (255) aritmeticos -> . MENOS
    (256) aritmeticos -> . MAS
    (257) aritmeticos -> . MULTIPLICACION
    (258) aritmeticos -> . DIVISION
    (259) aritmeticos -> . MOD

    AND             reduce using rule 231 (relacional -> aritmetica comparacion numeros .)
    OR              reduce using rule 231 (relacional -> aritmetica comparacion numeros .)
    NOT             reduce using rule 231 (relacional -> aritmetica comparacion numeros .)
    PAR_D           reduce using rule 231 (relacional -> aritmetica comparacion numeros .)
    MENOS           shift and go to state 197
    MAS             shift and go to state 198
    MULTIPLICACION  shift and go to state 199
    DIVISION        shift and go to state 200
    MOD             shift and go to state 201

    aritmeticos                    shift and go to state 207

state 315

    (250) aritmetica -> VARIABLE . aritmeticos numeros
    (252) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (255) aritmeticos -> . MENOS
    (256) aritmeticos -> . MAS
    (257) aritmeticos -> . MULTIPLICACION
    (258) aritmeticos -> . DIVISION
    (259) aritmeticos -> . MOD

    MENOS           shift and go to state 197
    MAS             shift and go to state 198
    MULTIPLICACION  shift and go to state 199
    DIVISION        shift and go to state 200
    MOD             shift and go to state 201

    aritmeticos                    shift and go to state 192

state 316

    (253) aritmetica -> aritmetica aritmeticos numeros .

    IGUAL_COMPARACION reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    DIFERENTE       reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    MAYOR           reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    MENOR           reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    MENOS           reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    MAS             reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    DIVISION        reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    MOD             reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    VAR             reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    VAL             reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    VARIABLE        reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    PRINTLN         reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    PRINT           reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    READLINE        reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    WHILE           reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    FOR             reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    IF              reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    INT             reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    LONG            reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    FLOAT           reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    DOUBLE          reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    LLAVE_D         reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    DEF             reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    $end            reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    RETURN          reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    CASE            reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    AND             reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    OR              reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    NOT             reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)
    PAR_D           reduce using rule 253 (aritmetica -> aritmetica aritmeticos numeros .)


state 317

    (254) aritmetica -> aritmetica aritmeticos VARIABLE .

    IGUAL_COMPARACION reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MAYOR           reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MENOR           reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MENOS           reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MAS             reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DIVISION        reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MOD             reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VAR             reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VAL             reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PRINT           reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    READLINE        reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    WHILE           reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    FOR             reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    IF              reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    INT             reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    LONG            reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    FLOAT           reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DEF             reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    $end            reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    RETURN          reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    CASE            reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    AND             reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    OR              reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    NOT             reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PAR_D           reduce using rule 254 (aritmetica -> aritmetica aritmeticos VARIABLE .)


state 318

    (234) relacional -> STRING comparacion STRING .

    AND             reduce using rule 234 (relacional -> STRING comparacion STRING .)
    OR              reduce using rule 234 (relacional -> STRING comparacion STRING .)
    NOT             reduce using rule 234 (relacional -> STRING comparacion STRING .)
    PAR_D           reduce using rule 234 (relacional -> STRING comparacion STRING .)


state 319

    (241) relacional -> STRING comparacion VARIABLE .

    AND             reduce using rule 241 (relacional -> STRING comparacion VARIABLE .)
    OR              reduce using rule 241 (relacional -> STRING comparacion VARIABLE .)
    NOT             reduce using rule 241 (relacional -> STRING comparacion VARIABLE .)
    PAR_D           reduce using rule 241 (relacional -> STRING comparacion VARIABLE .)


state 320

    (235) relacional -> CHAR comparacion CHAR .

    AND             reduce using rule 235 (relacional -> CHAR comparacion CHAR .)
    OR              reduce using rule 235 (relacional -> CHAR comparacion CHAR .)
    NOT             reduce using rule 235 (relacional -> CHAR comparacion CHAR .)
    PAR_D           reduce using rule 235 (relacional -> CHAR comparacion CHAR .)


state 321

    (243) relacional -> CHAR comparacion VARIABLE .

    AND             reduce using rule 243 (relacional -> CHAR comparacion VARIABLE .)
    OR              reduce using rule 243 (relacional -> CHAR comparacion VARIABLE .)
    NOT             reduce using rule 243 (relacional -> CHAR comparacion VARIABLE .)
    PAR_D           reduce using rule 243 (relacional -> CHAR comparacion VARIABLE .)


state 322

    (167) for -> FOR PAR_I VAR VARIABLE ITERATOR . VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> FOR PAR_I VAR VARIABLE ITERATOR . INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR . INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 387
    INT             shift and go to state 388


state 323

    (168) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 389


state 324

    (169) for -> FOR PAR_I VARIABLE ITERATOR INT . TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> FOR PAR_I VARIABLE ITERATOR INT . UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    TO              shift and go to state 390
    UNTIL           shift and go to state 391


state 325

    (212) if -> IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 392
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 326

    (215) elseif -> ELSE IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 393


state 327

    (109) valor -> VARIABLE .
    (149) castingcall -> VARIABLE . PUNTO castingfun
    (142) funcall -> VARIABLE . PAR_I valores PAR_D
    (143) funcall -> VARIABLE . PAR_I PAR_D

    VAR             reduce using rule 109 (valor -> VARIABLE .)
    VAL             reduce using rule 109 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 109 (valor -> VARIABLE .)
    PRINTLN         reduce using rule 109 (valor -> VARIABLE .)
    PRINT           reduce using rule 109 (valor -> VARIABLE .)
    READLINE        reduce using rule 109 (valor -> VARIABLE .)
    WHILE           reduce using rule 109 (valor -> VARIABLE .)
    FOR             reduce using rule 109 (valor -> VARIABLE .)
    IF              reduce using rule 109 (valor -> VARIABLE .)
    INT             reduce using rule 109 (valor -> VARIABLE .)
    LONG            reduce using rule 109 (valor -> VARIABLE .)
    FLOAT           reduce using rule 109 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 109 (valor -> VARIABLE .)
    LLAVE_D         reduce using rule 109 (valor -> VARIABLE .)
    RETURN          reduce using rule 109 (valor -> VARIABLE .)
    CASE            reduce using rule 109 (valor -> VARIABLE .)
    PUNTO           shift and go to state 272
    PAR_I           shift and go to state 40


state 328

    (98) reasignacion -> VARIABLE IGUAL valor .

    VAR             reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    VAL             reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    VARIABLE        reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    PRINTLN         reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    PRINT           reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    READLINE        reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    WHILE           reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    FOR             reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    IF              reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    INT             reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    LONG            reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    FLOAT           reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    DOUBLE          reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    LLAVE_D         reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    RETURN          reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)
    CASE            reduce using rule 98 (reasignacion -> VARIABLE IGUAL valor .)


state 329

    (99) reasignacion -> VARIABLE IGUAL returnfun .

    VAR             reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    VAL             reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    VARIABLE        reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    PRINTLN         reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    PRINT           reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    READLINE        reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    WHILE           reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    FOR             reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    IF              reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    INT             reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    LONG            reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    FLOAT           reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    DOUBLE          reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    LLAVE_D         reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    RETURN          reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)
    CASE            reduce using rule 99 (reasignacion -> VARIABLE IGUAL returnfun .)


state 330

    (118) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 394


state 331

    (125) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN valor LLAVE_D
    (126) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN VARIABLE LLAVE_D
    (127) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN returnfun LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 395
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 332

    (128) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN tuple LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN returnfun LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 396
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 333

    (123) parametros -> PAR_I . declaracion PAR_D
    (124) parametros -> PAR_I . declaracion PAR_D parametros
    (119) declaracion -> . VARIABLE DOBLE_PUNTO tipo
    (120) declaracion -> . VARIABLE DOBLE_PUNTO tipo IGUAL valor

    VARIABLE        shift and go to state 116

    declaracion                    shift and go to state 115

state 334

    (124) parametros -> PAR_I declaracion PAR_D parametros .

    IGUAL           reduce using rule 124 (parametros -> PAR_I declaracion PAR_D parametros .)
    DOBLE_PUNTO     reduce using rule 124 (parametros -> PAR_I declaracion PAR_D parametros .)


state 335

    (119) declaracion -> VARIABLE DOBLE_PUNTO tipo .
    (120) declaracion -> VARIABLE DOBLE_PUNTO tipo . IGUAL valor

    PAR_D           reduce using rule 119 (declaracion -> VARIABLE DOBLE_PUNTO tipo .)
    IGUAL           shift and go to state 397


state 336

    (209) defcase -> CASE SUBGUION . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 398


state 337

    (181) caseInt -> CASE INT FUNCION_FLECHA . codeBlock
    (210) codeBlock -> . contenidoLine
    (211) codeBlock -> . LLAVE_I contenido LLAVE_D
    (36) contenidoLine -> . asignacion
    (37) contenidoLine -> . reasignacion
    (38) contenidoLine -> . funcall
    (39) contenidoLine -> . impresion
    (40) contenidoLine -> . entrada
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 401
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 407
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15

    codeBlock                      shift and go to state 399
    contenidoLine                  shift and go to state 400
    asignacion                     shift and go to state 402
    reasignacion                   shift and go to state 403
    funcall                        shift and go to state 404
    impresion                      shift and go to state 405
    entrada                        shift and go to state 406
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 338

    (185) caseLgn -> CASE LONG FUNCION_FLECHA . codeBlock
    (210) codeBlock -> . contenidoLine
    (211) codeBlock -> . LLAVE_I contenido LLAVE_D
    (36) contenidoLine -> . asignacion
    (37) contenidoLine -> . reasignacion
    (38) contenidoLine -> . funcall
    (39) contenidoLine -> . impresion
    (40) contenidoLine -> . entrada
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 401
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 407
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15

    codeBlock                      shift and go to state 408
    contenidoLine                  shift and go to state 400
    asignacion                     shift and go to state 402
    reasignacion                   shift and go to state 403
    funcall                        shift and go to state 404
    impresion                      shift and go to state 405
    entrada                        shift and go to state 406
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 339

    (189) caseFlt -> CASE FLOAT FUNCION_FLECHA . codeBlock
    (210) codeBlock -> . contenidoLine
    (211) codeBlock -> . LLAVE_I contenido LLAVE_D
    (36) contenidoLine -> . asignacion
    (37) contenidoLine -> . reasignacion
    (38) contenidoLine -> . funcall
    (39) contenidoLine -> . impresion
    (40) contenidoLine -> . entrada
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 401
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 407
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15

    codeBlock                      shift and go to state 409
    contenidoLine                  shift and go to state 400
    asignacion                     shift and go to state 402
    reasignacion                   shift and go to state 403
    funcall                        shift and go to state 404
    impresion                      shift and go to state 405
    entrada                        shift and go to state 406
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 340

    (193) caseDob -> CASE DOUBLE FUNCION_FLECHA . codeBlock
    (210) codeBlock -> . contenidoLine
    (211) codeBlock -> . LLAVE_I contenido LLAVE_D
    (36) contenidoLine -> . asignacion
    (37) contenidoLine -> . reasignacion
    (38) contenidoLine -> . funcall
    (39) contenidoLine -> . impresion
    (40) contenidoLine -> . entrada
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 401
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 407
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15

    codeBlock                      shift and go to state 410
    contenidoLine                  shift and go to state 400
    asignacion                     shift and go to state 402
    reasignacion                   shift and go to state 403
    funcall                        shift and go to state 404
    impresion                      shift and go to state 405
    entrada                        shift and go to state 406
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 341

    (197) caseStr -> CASE STRING FUNCION_FLECHA . codeBlock
    (210) codeBlock -> . contenidoLine
    (211) codeBlock -> . LLAVE_I contenido LLAVE_D
    (36) contenidoLine -> . asignacion
    (37) contenidoLine -> . reasignacion
    (38) contenidoLine -> . funcall
    (39) contenidoLine -> . impresion
    (40) contenidoLine -> . entrada
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 401
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 407
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15

    codeBlock                      shift and go to state 411
    contenidoLine                  shift and go to state 400
    asignacion                     shift and go to state 402
    reasignacion                   shift and go to state 403
    funcall                        shift and go to state 404
    impresion                      shift and go to state 405
    entrada                        shift and go to state 406
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 342

    (201) caseChar -> CASE CHAR FUNCION_FLECHA . codeBlock
    (210) codeBlock -> . contenidoLine
    (211) codeBlock -> . LLAVE_I contenido LLAVE_D
    (36) contenidoLine -> . asignacion
    (37) contenidoLine -> . reasignacion
    (38) contenidoLine -> . funcall
    (39) contenidoLine -> . impresion
    (40) contenidoLine -> . entrada
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 401
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 407
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15

    codeBlock                      shift and go to state 412
    contenidoLine                  shift and go to state 400
    asignacion                     shift and go to state 402
    reasignacion                   shift and go to state 403
    funcall                        shift and go to state 404
    impresion                      shift and go to state 405
    entrada                        shift and go to state 406
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 343

    (205) caseBool -> CASE booleanos FUNCION_FLECHA . codeBlock
    (210) codeBlock -> . contenidoLine
    (211) codeBlock -> . LLAVE_I contenido LLAVE_D
    (36) contenidoLine -> . asignacion
    (37) contenidoLine -> . reasignacion
    (38) contenidoLine -> . funcall
    (39) contenidoLine -> . impresion
    (40) contenidoLine -> . entrada
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 401
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 407
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15

    codeBlock                      shift and go to state 413
    contenidoLine                  shift and go to state 400
    asignacion                     shift and go to state 402
    reasignacion                   shift and go to state 403
    funcall                        shift and go to state 404
    impresion                      shift and go to state 405
    entrada                        shift and go to state 406
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 344

    (149) castingcall -> VARIABLE PUNTO castingfun .

    DEF             reduce using rule 149 (castingcall -> VARIABLE PUNTO castingfun .)
    VARIABLE        reduce using rule 149 (castingcall -> VARIABLE PUNTO castingfun .)
    PRINTLN         reduce using rule 149 (castingcall -> VARIABLE PUNTO castingfun .)
    PRINT           reduce using rule 149 (castingcall -> VARIABLE PUNTO castingfun .)
    READLINE        reduce using rule 149 (castingcall -> VARIABLE PUNTO castingfun .)
    VAR             reduce using rule 149 (castingcall -> VARIABLE PUNTO castingfun .)
    VAL             reduce using rule 149 (castingcall -> VARIABLE PUNTO castingfun .)
    WHILE           reduce using rule 149 (castingcall -> VARIABLE PUNTO castingfun .)
    FOR             reduce using rule 149 (castingcall -> VARIABLE PUNTO castingfun .)
    IF              reduce using rule 149 (castingcall -> VARIABLE PUNTO castingfun .)
    $end            reduce using rule 149 (castingcall -> VARIABLE PUNTO castingfun .)
    INT             reduce using rule 149 (castingcall -> VARIABLE PUNTO castingfun .)
    LONG            reduce using rule 149 (castingcall -> VARIABLE PUNTO castingfun .)
    FLOAT           reduce using rule 149 (castingcall -> VARIABLE PUNTO castingfun .)
    DOUBLE          reduce using rule 149 (castingcall -> VARIABLE PUNTO castingfun .)
    LLAVE_D         reduce using rule 149 (castingcall -> VARIABLE PUNTO castingfun .)
    RETURN          reduce using rule 149 (castingcall -> VARIABLE PUNTO castingfun .)
    CASE            reduce using rule 149 (castingcall -> VARIABLE PUNTO castingfun .)


state 345

    (150) castingfun -> TO_INT .

    DEF             reduce using rule 150 (castingfun -> TO_INT .)
    VARIABLE        reduce using rule 150 (castingfun -> TO_INT .)
    PRINTLN         reduce using rule 150 (castingfun -> TO_INT .)
    PRINT           reduce using rule 150 (castingfun -> TO_INT .)
    READLINE        reduce using rule 150 (castingfun -> TO_INT .)
    VAR             reduce using rule 150 (castingfun -> TO_INT .)
    VAL             reduce using rule 150 (castingfun -> TO_INT .)
    WHILE           reduce using rule 150 (castingfun -> TO_INT .)
    FOR             reduce using rule 150 (castingfun -> TO_INT .)
    IF              reduce using rule 150 (castingfun -> TO_INT .)
    $end            reduce using rule 150 (castingfun -> TO_INT .)
    INT             reduce using rule 150 (castingfun -> TO_INT .)
    LONG            reduce using rule 150 (castingfun -> TO_INT .)
    FLOAT           reduce using rule 150 (castingfun -> TO_INT .)
    DOUBLE          reduce using rule 150 (castingfun -> TO_INT .)
    LLAVE_D         reduce using rule 150 (castingfun -> TO_INT .)
    RETURN          reduce using rule 150 (castingfun -> TO_INT .)
    CASE            reduce using rule 150 (castingfun -> TO_INT .)


state 346

    (151) castingfun -> TO_DOUBLE .

    DEF             reduce using rule 151 (castingfun -> TO_DOUBLE .)
    VARIABLE        reduce using rule 151 (castingfun -> TO_DOUBLE .)
    PRINTLN         reduce using rule 151 (castingfun -> TO_DOUBLE .)
    PRINT           reduce using rule 151 (castingfun -> TO_DOUBLE .)
    READLINE        reduce using rule 151 (castingfun -> TO_DOUBLE .)
    VAR             reduce using rule 151 (castingfun -> TO_DOUBLE .)
    VAL             reduce using rule 151 (castingfun -> TO_DOUBLE .)
    WHILE           reduce using rule 151 (castingfun -> TO_DOUBLE .)
    FOR             reduce using rule 151 (castingfun -> TO_DOUBLE .)
    IF              reduce using rule 151 (castingfun -> TO_DOUBLE .)
    $end            reduce using rule 151 (castingfun -> TO_DOUBLE .)
    INT             reduce using rule 151 (castingfun -> TO_DOUBLE .)
    LONG            reduce using rule 151 (castingfun -> TO_DOUBLE .)
    FLOAT           reduce using rule 151 (castingfun -> TO_DOUBLE .)
    DOUBLE          reduce using rule 151 (castingfun -> TO_DOUBLE .)
    LLAVE_D         reduce using rule 151 (castingfun -> TO_DOUBLE .)
    RETURN          reduce using rule 151 (castingfun -> TO_DOUBLE .)
    CASE            reduce using rule 151 (castingfun -> TO_DOUBLE .)


state 347

    (152) castingfun -> TO_FLOAT .

    DEF             reduce using rule 152 (castingfun -> TO_FLOAT .)
    VARIABLE        reduce using rule 152 (castingfun -> TO_FLOAT .)
    PRINTLN         reduce using rule 152 (castingfun -> TO_FLOAT .)
    PRINT           reduce using rule 152 (castingfun -> TO_FLOAT .)
    READLINE        reduce using rule 152 (castingfun -> TO_FLOAT .)
    VAR             reduce using rule 152 (castingfun -> TO_FLOAT .)
    VAL             reduce using rule 152 (castingfun -> TO_FLOAT .)
    WHILE           reduce using rule 152 (castingfun -> TO_FLOAT .)
    FOR             reduce using rule 152 (castingfun -> TO_FLOAT .)
    IF              reduce using rule 152 (castingfun -> TO_FLOAT .)
    $end            reduce using rule 152 (castingfun -> TO_FLOAT .)
    INT             reduce using rule 152 (castingfun -> TO_FLOAT .)
    LONG            reduce using rule 152 (castingfun -> TO_FLOAT .)
    FLOAT           reduce using rule 152 (castingfun -> TO_FLOAT .)
    DOUBLE          reduce using rule 152 (castingfun -> TO_FLOAT .)
    LLAVE_D         reduce using rule 152 (castingfun -> TO_FLOAT .)
    RETURN          reduce using rule 152 (castingfun -> TO_FLOAT .)
    CASE            reduce using rule 152 (castingfun -> TO_FLOAT .)


state 348

    (153) castingfun -> TO_LONG .

    DEF             reduce using rule 153 (castingfun -> TO_LONG .)
    VARIABLE        reduce using rule 153 (castingfun -> TO_LONG .)
    PRINTLN         reduce using rule 153 (castingfun -> TO_LONG .)
    PRINT           reduce using rule 153 (castingfun -> TO_LONG .)
    READLINE        reduce using rule 153 (castingfun -> TO_LONG .)
    VAR             reduce using rule 153 (castingfun -> TO_LONG .)
    VAL             reduce using rule 153 (castingfun -> TO_LONG .)
    WHILE           reduce using rule 153 (castingfun -> TO_LONG .)
    FOR             reduce using rule 153 (castingfun -> TO_LONG .)
    IF              reduce using rule 153 (castingfun -> TO_LONG .)
    $end            reduce using rule 153 (castingfun -> TO_LONG .)
    INT             reduce using rule 153 (castingfun -> TO_LONG .)
    LONG            reduce using rule 153 (castingfun -> TO_LONG .)
    FLOAT           reduce using rule 153 (castingfun -> TO_LONG .)
    DOUBLE          reduce using rule 153 (castingfun -> TO_LONG .)
    LLAVE_D         reduce using rule 153 (castingfun -> TO_LONG .)
    RETURN          reduce using rule 153 (castingfun -> TO_LONG .)
    CASE            reduce using rule 153 (castingfun -> TO_LONG .)


state 349

    (154) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 414


state 350

    (161) tuple -> PAR_I valores PAR_D .

    DEF             reduce using rule 161 (tuple -> PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 161 (tuple -> PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 161 (tuple -> PAR_I valores PAR_D .)
    PRINT           reduce using rule 161 (tuple -> PAR_I valores PAR_D .)
    READLINE        reduce using rule 161 (tuple -> PAR_I valores PAR_D .)
    VAR             reduce using rule 161 (tuple -> PAR_I valores PAR_D .)
    VAL             reduce using rule 161 (tuple -> PAR_I valores PAR_D .)
    WHILE           reduce using rule 161 (tuple -> PAR_I valores PAR_D .)
    FOR             reduce using rule 161 (tuple -> PAR_I valores PAR_D .)
    IF              reduce using rule 161 (tuple -> PAR_I valores PAR_D .)
    $end            reduce using rule 161 (tuple -> PAR_I valores PAR_D .)
    INT             reduce using rule 161 (tuple -> PAR_I valores PAR_D .)
    LONG            reduce using rule 161 (tuple -> PAR_I valores PAR_D .)
    FLOAT           reduce using rule 161 (tuple -> PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 161 (tuple -> PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 161 (tuple -> PAR_I valores PAR_D .)
    RETURN          reduce using rule 161 (tuple -> PAR_I valores PAR_D .)
    CASE            reduce using rule 161 (tuple -> PAR_I valores PAR_D .)


state 351

    (148) castingcall -> returnCastable PUNTO castingfun .

    DEF             reduce using rule 148 (castingcall -> returnCastable PUNTO castingfun .)
    VARIABLE        reduce using rule 148 (castingcall -> returnCastable PUNTO castingfun .)
    PRINTLN         reduce using rule 148 (castingcall -> returnCastable PUNTO castingfun .)
    PRINT           reduce using rule 148 (castingcall -> returnCastable PUNTO castingfun .)
    READLINE        reduce using rule 148 (castingcall -> returnCastable PUNTO castingfun .)
    VAR             reduce using rule 148 (castingcall -> returnCastable PUNTO castingfun .)
    VAL             reduce using rule 148 (castingcall -> returnCastable PUNTO castingfun .)
    WHILE           reduce using rule 148 (castingcall -> returnCastable PUNTO castingfun .)
    FOR             reduce using rule 148 (castingcall -> returnCastable PUNTO castingfun .)
    IF              reduce using rule 148 (castingcall -> returnCastable PUNTO castingfun .)
    $end            reduce using rule 148 (castingcall -> returnCastable PUNTO castingfun .)
    INT             reduce using rule 148 (castingcall -> returnCastable PUNTO castingfun .)
    LONG            reduce using rule 148 (castingcall -> returnCastable PUNTO castingfun .)
    FLOAT           reduce using rule 148 (castingcall -> returnCastable PUNTO castingfun .)
    DOUBLE          reduce using rule 148 (castingcall -> returnCastable PUNTO castingfun .)
    LLAVE_D         reduce using rule 148 (castingcall -> returnCastable PUNTO castingfun .)
    RETURN          reduce using rule 148 (castingcall -> returnCastable PUNTO castingfun .)
    CASE            reduce using rule 148 (castingcall -> returnCastable PUNTO castingfun .)


state 352

    (60) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)


state 353

    (57) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .

    DEF             reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VARIABLE        reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    PRINTLN         reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    PRINT           reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    READLINE        reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VAR             reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VAL             reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    WHILE           reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    FOR             reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    IF              reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    $end            reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    INT             reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    LONG            reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    FLOAT           reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    DOUBLE          reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    LLAVE_D         reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    RETURN          reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    CASE            reduce using rule 57 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)


state 354

    (66) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .

    DEF             reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    IF              reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    $end            reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    INT             reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)


state 355

    (63) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .

    DEF             reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VARIABLE        reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    PRINTLN         reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    PRINT           reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    READLINE        reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VAR             reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VAL             reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    WHILE           reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    FOR             reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    IF              reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    $end            reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    INT             reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    LONG            reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    FLOAT           reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    DOUBLE          reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    LLAVE_D         reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    RETURN          reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    CASE            reduce using rule 63 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)


state 356

    (72) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .

    DEF             reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    IF              reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    $end            reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    INT             reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)


state 357

    (69) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .

    DEF             reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VARIABLE        reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    PRINTLN         reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    PRINT           reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    READLINE        reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VAR             reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VAL             reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    WHILE           reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    FOR             reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    IF              reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    $end            reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    INT             reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    LONG            reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    FLOAT           reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    DOUBLE          reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    LLAVE_D         reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    RETURN          reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    CASE            reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)


state 358

    (78) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .

    DEF             reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAR             reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAL             reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FOR             reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    IF              reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    $end            reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    INT             reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LONG            reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    CASE            reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)


state 359

    (75) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .

    DEF             reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VARIABLE        reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    PRINTLN         reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    PRINT           reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    READLINE        reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VAR             reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VAL             reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    WHILE           reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    FOR             reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    IF              reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    $end            reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    INT             reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    LONG            reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    FLOAT           reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    DOUBLE          reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    LLAVE_D         reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    RETURN          reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    CASE            reduce using rule 75 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)


state 360

    (84) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)


state 361

    (81) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .

    DEF             reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VARIABLE        reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINTLN         reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINT           reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    READLINE        reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAR             reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAL             reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    WHILE           reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FOR             reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    IF              reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    $end            reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    INT             reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LONG            reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FLOAT           reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    DOUBLE          reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LLAVE_D         reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    RETURN          reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    CASE            reduce using rule 81 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)


state 362

    (90) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .

    DEF             reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    IF              reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    $end            reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    INT             reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)


state 363

    (87) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .

    DEF             reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VARIABLE        reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINTLN         reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINT           reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    READLINE        reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAR             reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAL             reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    WHILE           reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FOR             reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    IF              reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    $end            reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    INT             reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LONG            reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FLOAT           reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    DOUBLE          reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LLAVE_D         reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    RETURN          reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    CASE            reduce using rule 87 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)


state 364

    (96) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .

    DEF             reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    IF              reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    $end            reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    INT             reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)


state 365

    (93) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .

    DEF             reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VARIABLE        reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINTLN         reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINT           reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    READLINE        reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAR             reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAL             reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    WHILE           reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FOR             reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    IF              reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    $end            reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    INT             reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LONG            reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FLOAT           reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    DOUBLE          reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LLAVE_D         reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    RETURN          reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    CASE            reduce using rule 93 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)


state 366

    (155) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 415


state 367

    (132) dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D .

    IGUAL           reduce using rule 132 (dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D .)


state 368

    (134) tipos -> tipo tiposentry .

    PAR_D           reduce using rule 134 (tipos -> tipo tiposentry .)


state 369

    (135) tiposentry -> COMA . tipo
    (136) tiposentry -> COMA . tipo tiposentry
    (100) tipo -> . CHARCLASS
    (101) tipo -> . STRINGCLASS
    (102) tipo -> . BOOLCLASS
    (103) tipo -> . INTCLASS
    (104) tipo -> . LONGCLASS
    (105) tipo -> . DOUBLECLASS
    (106) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 232
    STRINGCLASS     shift and go to state 233
    BOOLCLASS       shift and go to state 234
    INTCLASS        shift and go to state 235
    LONGCLASS       shift and go to state 236
    DOUBLECLASS     shift and go to state 237
    FLOATCLASS      shift and go to state 238

    tipo                           shift and go to state 416

state 370

    (157) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 417


state 371

    (61) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 61 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)


state 372

    (59) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .

    DEF             reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VARIABLE        reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    PRINTLN         reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    PRINT           reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    READLINE        reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VAR             reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VAL             reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    WHILE           reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    FOR             reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    IF              reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    $end            reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    INT             reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    LONG            reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    FLOAT           reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    DOUBLE          reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    LLAVE_D         reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    RETURN          reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    CASE            reduce using rule 59 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)


state 373

    (67) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .

    DEF             reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    IF              reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    $end            reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    INT             reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)


state 374

    (65) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .

    DEF             reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VARIABLE        reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    PRINTLN         reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    PRINT           reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    READLINE        reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VAR             reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VAL             reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    WHILE           reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    FOR             reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    IF              reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    $end            reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    INT             reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    LONG            reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    FLOAT           reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    DOUBLE          reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    LLAVE_D         reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    RETURN          reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    CASE            reduce using rule 65 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)


state 375

    (73) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .

    DEF             reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    IF              reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    $end            reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    INT             reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 73 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)


state 376

    (71) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .

    DEF             reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VARIABLE        reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    PRINTLN         reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    PRINT           reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    READLINE        reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VAR             reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VAL             reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    WHILE           reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    FOR             reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    IF              reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    $end            reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    INT             reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    LONG            reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    FLOAT           reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    DOUBLE          reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    LLAVE_D         reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    RETURN          reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    CASE            reduce using rule 71 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)


state 377

    (79) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .

    DEF             reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAR             reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAL             reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FOR             reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    IF              reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    $end            reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    INT             reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LONG            reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    CASE            reduce using rule 79 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)


state 378

    (77) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .

    DEF             reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VARIABLE        reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    PRINTLN         reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    PRINT           reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    READLINE        reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VAR             reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VAL             reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    WHILE           reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    FOR             reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    IF              reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    $end            reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    INT             reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    LONG            reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    FLOAT           reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    DOUBLE          reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    LLAVE_D         reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    RETURN          reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    CASE            reduce using rule 77 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)


state 379

    (85) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 85 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)


state 380

    (83) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .

    DEF             reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VARIABLE        reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINTLN         reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINT           reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    READLINE        reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAR             reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAL             reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    WHILE           reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FOR             reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    IF              reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    $end            reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    INT             reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LONG            reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FLOAT           reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    DOUBLE          reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LLAVE_D         reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    RETURN          reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    CASE            reduce using rule 83 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)


state 381

    (91) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .

    DEF             reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    IF              reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    $end            reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    INT             reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 91 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)


state 382

    (89) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .

    DEF             reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VARIABLE        reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINTLN         reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINT           reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    READLINE        reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAR             reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAL             reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    WHILE           reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FOR             reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    IF              reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    $end            reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    INT             reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LONG            reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FLOAT           reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    DOUBLE          reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LLAVE_D         reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    RETURN          reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    CASE            reduce using rule 89 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)


state 383

    (97) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .

    DEF             reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    IF              reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    $end            reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    INT             reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 97 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)


state 384

    (95) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .

    DEF             reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VARIABLE        reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINTLN         reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINT           reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    READLINE        reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAR             reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAL             reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    WHILE           reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FOR             reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    IF              reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    $end            reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    INT             reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LONG            reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FLOAT           reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    DOUBLE          reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LLAVE_D         reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    RETURN          reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    CASE            reduce using rule 95 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)


state 385

    (158) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo . CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    CORCHETE_D      shift and go to state 418


state 386

    (166) while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 419


state 387

    (167) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 420


state 388

    (171) for -> FOR PAR_I VAR VARIABLE ITERATOR INT . TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR INT . UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    TO              shift and go to state 421
    UNTIL           shift and go to state 422


state 389

    (168) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 423


state 390

    (169) for -> FOR PAR_I VARIABLE ITERATOR INT TO . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 424


state 391

    (170) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 425


state 392

    (212) if -> IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 426


state 393

    (215) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 427
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 394

    (118) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 118 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 118 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 118 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 118 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 118 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 118 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 118 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 118 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 118 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 118 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 118 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)


state 395

    (125) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN valor LLAVE_D
    (126) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN VARIABLE LLAVE_D
    (127) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN returnfun LLAVE_D

    RETURN          shift and go to state 428


state 396

    (128) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN tuple LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN returnfun LLAVE_D

    RETURN          shift and go to state 429


state 397

    (120) declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL . valor
    (107) valor -> . STRING
    (108) valor -> . CHAR
    (109) valor -> . VARIABLE
    (110) valor -> . numeros
    (111) valor -> . booleanos
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valor                          shift and go to state 430
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 398

    (209) defcase -> CASE SUBGUION FUNCION_FLECHA . codeBlock
    (210) codeBlock -> . contenidoLine
    (211) codeBlock -> . LLAVE_I contenido LLAVE_D
    (36) contenidoLine -> . asignacion
    (37) contenidoLine -> . reasignacion
    (38) contenidoLine -> . funcall
    (39) contenidoLine -> . impresion
    (40) contenidoLine -> . entrada
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 401
    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 407
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15

    codeBlock                      shift and go to state 431
    contenidoLine                  shift and go to state 400
    asignacion                     shift and go to state 402
    reasignacion                   shift and go to state 403
    funcall                        shift and go to state 404
    impresion                      shift and go to state 405
    entrada                        shift and go to state 406
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26

state 399

    (181) caseInt -> CASE INT FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 181 (caseInt -> CASE INT FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 181 (caseInt -> CASE INT FUNCION_FLECHA codeBlock .)


state 400

    (210) codeBlock -> contenidoLine .

    CASE            reduce using rule 210 (codeBlock -> contenidoLine .)
    LLAVE_D         reduce using rule 210 (codeBlock -> contenidoLine .)


state 401

    (211) codeBlock -> LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 432
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 402

    (36) contenidoLine -> asignacion .

    CASE            reduce using rule 36 (contenidoLine -> asignacion .)
    LLAVE_D         reduce using rule 36 (contenidoLine -> asignacion .)


state 403

    (37) contenidoLine -> reasignacion .

    CASE            reduce using rule 37 (contenidoLine -> reasignacion .)
    LLAVE_D         reduce using rule 37 (contenidoLine -> reasignacion .)


state 404

    (38) contenidoLine -> funcall .

    CASE            reduce using rule 38 (contenidoLine -> funcall .)
    LLAVE_D         reduce using rule 38 (contenidoLine -> funcall .)


state 405

    (39) contenidoLine -> impresion .

    CASE            reduce using rule 39 (contenidoLine -> impresion .)
    LLAVE_D         reduce using rule 39 (contenidoLine -> impresion .)


state 406

    (40) contenidoLine -> entrada .

    CASE            reduce using rule 40 (contenidoLine -> entrada .)
    LLAVE_D         reduce using rule 40 (contenidoLine -> entrada .)


state 407

    (98) reasignacion -> VARIABLE . IGUAL valor
    (99) reasignacion -> VARIABLE . IGUAL returnfun
    (142) funcall -> VARIABLE . PAR_I valores PAR_D
    (143) funcall -> VARIABLE . PAR_I PAR_D

    IGUAL           shift and go to state 227
    PAR_I           shift and go to state 40


state 408

    (185) caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 185 (caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 185 (caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .)


state 409

    (189) caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 189 (caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 189 (caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .)


state 410

    (193) caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 193 (caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 193 (caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .)


state 411

    (197) caseStr -> CASE STRING FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 197 (caseStr -> CASE STRING FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 197 (caseStr -> CASE STRING FUNCION_FLECHA codeBlock .)


state 412

    (201) caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 201 (caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 201 (caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .)


state 413

    (205) caseBool -> CASE booleanos FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 205 (caseBool -> CASE booleanos FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 205 (caseBool -> CASE booleanos FUNCION_FLECHA codeBlock .)


state 414

    (154) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 154 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 154 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 154 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 154 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 154 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 154 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 154 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 154 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 154 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 154 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 154 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 154 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 154 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 154 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 154 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 154 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 154 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 154 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 415

    (155) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    IGUAL           shift and go to state 433


state 416

    (135) tiposentry -> COMA tipo .
    (136) tiposentry -> COMA tipo . tiposentry
    (135) tiposentry -> . COMA tipo
    (136) tiposentry -> . COMA tipo tiposentry

    PAR_D           reduce using rule 135 (tiposentry -> COMA tipo .)
    COMA            shift and go to state 369

    tiposentry                     shift and go to state 434

state 417

    (157) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 157 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 157 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 157 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 157 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 157 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 157 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 157 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 157 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 157 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 157 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 157 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 157 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 157 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 157 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 157 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 157 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 157 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 157 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)


state 418

    (158) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D . IGUAL LISTCLASS PAR_I valores PAR_D

    IGUAL           shift and go to state 435


state 419

    (166) while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 166 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 166 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 166 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 166 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 166 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 166 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 166 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 166 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 166 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 166 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 166 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 166 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 166 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 166 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 166 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 166 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 166 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)


state 420

    (167) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 436


state 421

    (171) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 437


state 422

    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 438


state 423

    (168) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 439
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 424

    (169) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 440


state 425

    (170) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 441


state 426

    (212) if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .

    ELSE            reduce using rule 212 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 212 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 212 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 212 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 212 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 212 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 212 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 212 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 212 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 212 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 212 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 212 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 212 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 212 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 212 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 212 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 212 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 212 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)


state 427

    (215) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 442


state 428

    (125) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . valor LLAVE_D
    (126) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . VARIABLE LLAVE_D
    (127) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . returnfun LLAVE_D
    (107) valor -> . STRING
    (108) valor -> . CHAR
    (109) valor -> . VARIABLE
    (110) valor -> . numeros
    (111) valor -> . booleanos
    (144) returnfun -> . returnCastable
    (145) returnfun -> . castingcall
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE
    (146) returnCastable -> . entrada
    (147) returnCastable -> . funcall
    (148) castingcall -> . returnCastable PUNTO castingfun
    (149) castingcall -> . VARIABLE PUNTO castingfun
    (141) entrada -> . READLINE PAR_I PAR_D
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D

    VARIABLE        shift and go to state 443
    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71
    READLINE        shift and go to state 15

    valor                          shift and go to state 444
    returnfun                      shift and go to state 445
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65
    returnCastable                 shift and go to state 151
    castingcall                    shift and go to state 152
    entrada                        shift and go to state 153
    funcall                        shift and go to state 154

state 429

    (128) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . tuple LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . returnfun LLAVE_D
    (161) tuple -> . PAR_I valores PAR_D
    (144) returnfun -> . returnCastable
    (145) returnfun -> . castingcall
    (146) returnCastable -> . entrada
    (147) returnCastable -> . funcall
    (148) castingcall -> . returnCastable PUNTO castingfun
    (149) castingcall -> . VARIABLE PUNTO castingfun
    (141) entrada -> . READLINE PAR_I PAR_D
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D

    VARIABLE        shift and go to state 446
    PAR_I           shift and go to state 150
    READLINE        shift and go to state 15

    tuple                          shift and go to state 447
    returnfun                      shift and go to state 448
    returnCastable                 shift and go to state 151
    castingcall                    shift and go to state 152
    entrada                        shift and go to state 153
    funcall                        shift and go to state 154

state 430

    (120) declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor .

    PAR_D           reduce using rule 120 (declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor .)


state 431

    (209) defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock .

    LLAVE_D         reduce using rule 209 (defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock .)


state 432

    (211) codeBlock -> LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 449


state 433

    (155) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (156) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    ARRAYCLASS      shift and go to state 450


state 434

    (136) tiposentry -> COMA tipo tiposentry .

    PAR_D           reduce using rule 136 (tiposentry -> COMA tipo tiposentry .)


state 435

    (158) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL . LISTCLASS PAR_I valores PAR_D

    LISTCLASS       shift and go to state 451


state 436

    (167) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 452
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 437

    (171) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 453


state 438

    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 454


state 439

    (168) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 455


state 440

    (169) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 456


state 441

    (170) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 457


state 442

    (215) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .

    ELSE            reduce using rule 215 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 215 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 215 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 215 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 215 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 215 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 215 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 215 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 215 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 215 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 215 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 215 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 215 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 215 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 215 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 215 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 215 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 215 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)


state 443

    (126) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE . LLAVE_D
    (109) valor -> VARIABLE .
    (149) castingcall -> VARIABLE . PUNTO castingfun
    (142) funcall -> VARIABLE . PAR_I valores PAR_D
    (143) funcall -> VARIABLE . PAR_I PAR_D

  ! shift/reduce conflict for LLAVE_D resolved as shift
    LLAVE_D         shift and go to state 458
    PUNTO           shift and go to state 272
    PAR_I           shift and go to state 40

  ! LLAVE_D         [ reduce using rule 109 (valor -> VARIABLE .) ]


state 444

    (125) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor . LLAVE_D

    LLAVE_D         shift and go to state 459


state 445

    (127) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun . LLAVE_D

    LLAVE_D         shift and go to state 460


state 446

    (129) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE . LLAVE_D
    (149) castingcall -> VARIABLE . PUNTO castingfun
    (142) funcall -> VARIABLE . PAR_I valores PAR_D
    (143) funcall -> VARIABLE . PAR_I PAR_D

    LLAVE_D         shift and go to state 461
    PUNTO           shift and go to state 272
    PAR_I           shift and go to state 40


state 447

    (128) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple . LLAVE_D

    LLAVE_D         shift and go to state 462


state 448

    (130) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun . LLAVE_D

    LLAVE_D         shift and go to state 463


state 449

    (211) codeBlock -> LLAVE_I contenido LLAVE_D .

    CASE            reduce using rule 211 (codeBlock -> LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 211 (codeBlock -> LLAVE_I contenido LLAVE_D .)


state 450

    (155) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS . PAR_I valores PAR_D
    (156) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS . CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    PAR_I           shift and go to state 465
    CORCHETE_I      shift and go to state 464


state 451

    (158) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 466


state 452

    (167) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 467


state 453

    (171) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 468


state 454

    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 469


state 455

    (168) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 168 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 168 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 168 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 168 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 168 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 168 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 168 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 168 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 168 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 168 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 168 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 168 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 168 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 168 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 168 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 168 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 168 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)


state 456

    (169) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 470
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 457

    (170) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 471
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 458

    (126) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .

    DEF             reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VARIABLE        reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINTLN         reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINT           reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    READLINE        reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAR             reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAL             reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    WHILE           reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    FOR             reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    IF              reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    $end            reduce using rule 126 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)


state 459

    (125) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .

    DEF             reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VARIABLE        reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    PRINTLN         reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    PRINT           reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    READLINE        reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAR             reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAL             reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    WHILE           reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    FOR             reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    IF              reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    $end            reduce using rule 125 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)


state 460

    (127) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .

    DEF             reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VARIABLE        reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINTLN         reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINT           reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    READLINE        reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAR             reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAL             reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    WHILE           reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    FOR             reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    IF              reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    $end            reduce using rule 127 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)


state 461

    (129) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .

    DEF             reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VARIABLE        reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINTLN         reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINT           reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    READLINE        reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAR             reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAL             reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    WHILE           reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    FOR             reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    IF              reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    $end            reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)


state 462

    (128) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .

    DEF             reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    VARIABLE        reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    PRINTLN         reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    PRINT           reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    READLINE        reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    VAR             reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    VAL             reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    WHILE           reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    FOR             reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    IF              reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    $end            reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)


state 463

    (130) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .

    DEF             reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VARIABLE        reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINTLN         reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINT           reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    READLINE        reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAR             reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAL             reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    WHILE           reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    FOR             reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    IF              reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    $end            reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)


state 464

    (156) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I . tipo CORCHETE_D PAR_I INT PAR_D
    (100) tipo -> . CHARCLASS
    (101) tipo -> . STRINGCLASS
    (102) tipo -> . BOOLCLASS
    (103) tipo -> . INTCLASS
    (104) tipo -> . LONGCLASS
    (105) tipo -> . DOUBLECLASS
    (106) tipo -> . FLOATCLASS

    CHARCLASS       shift and go to state 232
    STRINGCLASS     shift and go to state 233
    BOOLCLASS       shift and go to state 234
    INTCLASS        shift and go to state 235
    LONGCLASS       shift and go to state 236
    DOUBLECLASS     shift and go to state 237
    FLOATCLASS      shift and go to state 238

    tipo                           shift and go to state 472

state 465

    (155) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (159) valores -> . valor
    (160) valores -> . valor COMA valores
    (107) valor -> . STRING
    (108) valor -> . CHAR
    (109) valor -> . VARIABLE
    (110) valor -> . numeros
    (111) valor -> . booleanos
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valores                        shift and go to state 473
    valor                          shift and go to state 61
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 466

    (158) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I . valores PAR_D
    (159) valores -> . valor
    (160) valores -> . valor COMA valores
    (107) valor -> . STRING
    (108) valor -> . CHAR
    (109) valor -> . VARIABLE
    (110) valor -> . numeros
    (111) valor -> . booleanos
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE
    (112) booleanos -> . TRUE
    (113) booleanos -> . FLASE

    STRING          shift and go to state 62
    CHAR            shift and go to state 63
    VARIABLE        shift and go to state 58
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69
    TRUE            shift and go to state 70
    FLASE           shift and go to state 71

    valores                        shift and go to state 474
    valor                          shift and go to state 61
    numeros                        shift and go to state 64
    booleanos                      shift and go to state 65

state 467

    (167) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 167 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 167 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 167 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 167 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 167 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 167 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 167 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 167 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 167 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 167 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 167 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 167 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 167 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 167 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 167 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 167 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 167 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)


state 468

    (171) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 475
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 469

    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I . contenido LLAVE_D
    (16) contenido -> . asignacion
    (17) contenido -> . reasignacion
    (18) contenido -> . funcall
    (19) contenido -> . impresion
    (20) contenido -> . entrada
    (21) contenido -> . while
    (22) contenido -> . for
    (23) contenido -> . match
    (24) contenido -> . if
    (25) contenido -> . aritmetica
    (26) contenido -> . asignacion contenido
    (27) contenido -> . reasignacion contenido
    (28) contenido -> . funcall contenido
    (29) contenido -> . impresion contenido
    (30) contenido -> . entrada contenido
    (31) contenido -> . while contenido
    (32) contenido -> . for contenido
    (33) contenido -> . if contenido
    (34) contenido -> . match contenido
    (35) contenido -> . aritmetica contenido
    (41) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (42) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (43) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (44) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (45) asignacion -> . VAR VARIABLE IGUAL returnfun
    (46) asignacion -> . VAL VARIABLE IGUAL returnfun
    (47) asignacion -> . asignacionLong
    (48) asignacion -> . asignacionInt
    (49) asignacion -> . asignacionFloat
    (50) asignacion -> . asignacionDouble
    (51) asignacion -> . asignacionString
    (52) asignacion -> . asignacionChar
    (53) asignacion -> . asignacionBoolean
    (54) asignacion -> . array
    (55) asignacion -> . list
    (162) asignacion -> . VAR VARIABLE IGUAL tuple
    (163) asignacion -> . VAL VARIABLE IGUAL tuple
    (164) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (165) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (98) reasignacion -> . VARIABLE IGUAL valor
    (99) reasignacion -> . VARIABLE IGUAL returnfun
    (142) funcall -> . VARIABLE PAR_I valores PAR_D
    (143) funcall -> . VARIABLE PAR_I PAR_D
    (137) impresion -> . PRINTLN PAR_I valorI PAR_D
    (138) impresion -> . PRINT PAR_I valorI PAR_D
    (141) entrada -> . READLINE PAR_I PAR_D
    (166) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (167) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (168) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (169) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (170) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (171) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (172) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (173) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (212) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (213) if -> . if elseif
    (214) if -> . if else
    (249) aritmetica -> . numeros aritmeticos numeros
    (250) aritmetica -> . VARIABLE aritmeticos numeros
    (251) aritmetica -> . numeros aritmeticos VARIABLE
    (252) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (253) aritmetica -> . aritmetica aritmeticos numeros
    (254) aritmetica -> . aritmetica aritmeticos VARIABLE
    (56) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (57) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (58) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (59) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (61) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (62) asignacionInt -> . VAR VARIABLE IGUAL INT
    (63) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (64) asignacionInt -> . VAL VARIABLE IGUAL INT
    (65) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (70) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (71) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (73) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (74) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (75) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (76) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (77) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (79) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (80) asignacionString -> . VAR VARIABLE IGUAL STRING
    (81) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (82) asignacionString -> . VAL VARIABLE IGUAL STRING
    (83) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (85) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (87) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (88) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (89) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (91) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (93) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (94) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (95) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (154) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (155) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (156) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (157) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (158) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (114) numeros -> . INT
    (115) numeros -> . LONG
    (116) numeros -> . FLOAT
    (117) numeros -> . DOUBLE

    VAR             shift and go to state 16
    VAL             shift and go to state 17
    VARIABLE        shift and go to state 108
    PRINTLN         shift and go to state 13
    PRINT           shift and go to state 14
    READLINE        shift and go to state 15
    WHILE           shift and go to state 27
    FOR             shift and go to state 28
    IF              shift and go to state 29
    INT             shift and go to state 66
    LONG            shift and go to state 67
    FLOAT           shift and go to state 68
    DOUBLE          shift and go to state 69

    contenido                      shift and go to state 476
    asignacion                     shift and go to state 98
    reasignacion                   shift and go to state 99
    funcall                        shift and go to state 100
    impresion                      shift and go to state 101
    entrada                        shift and go to state 102
    while                          shift and go to state 103
    for                            shift and go to state 104
    match                          shift and go to state 105
    if                             shift and go to state 106
    aritmetica                     shift and go to state 107
    asignacionLong                 shift and go to state 18
    asignacionInt                  shift and go to state 19
    asignacionFloat                shift and go to state 20
    asignacionDouble               shift and go to state 21
    asignacionString               shift and go to state 22
    asignacionChar                 shift and go to state 23
    asignacionBoolean              shift and go to state 24
    array                          shift and go to state 25
    list                           shift and go to state 26
    numeros                        shift and go to state 109

state 470

    (169) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 477


state 471

    (170) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 478


state 472

    (156) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo . CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 479


state 473

    (155) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 480


state 474

    (158) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 481


state 475

    (171) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 482


state 476

    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 483


state 477

    (169) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 169 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)


state 478

    (170) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 170 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)


state 479

    (156) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D . PAR_I INT PAR_D

    PAR_I           shift and go to state 484


state 480

    (155) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 155 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 155 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 155 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 155 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 155 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 155 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 155 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 155 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 155 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 155 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 155 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 155 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 155 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 155 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 155 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 155 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 155 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 155 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 481

    (158) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 158 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 158 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 158 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 158 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 158 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 158 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 158 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 158 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 158 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 158 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 158 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 158 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 158 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 158 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 158 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 158 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 158 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 158 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)


state 482

    (171) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 171 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 171 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 171 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 171 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 171 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 171 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 171 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 171 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 171 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 171 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 171 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 171 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 171 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 171 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 171 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 171 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 171 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)


state 483

    (172) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 172 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)


state 484

    (156) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I . INT PAR_D

    INT             shift and go to state 485


state 485

    (156) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT . PAR_D

    PAR_D           shift and go to state 486


state 486

    (156) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .

    DEF             reduce using rule 156 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VARIABLE        reduce using rule 156 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINTLN         reduce using rule 156 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINT           reduce using rule 156 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    READLINE        reduce using rule 156 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAR             reduce using rule 156 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAL             reduce using rule 156 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    WHILE           reduce using rule 156 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FOR             reduce using rule 156 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    IF              reduce using rule 156 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    $end            reduce using rule 156 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    INT             reduce using rule 156 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LONG            reduce using rule 156 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FLOAT           reduce using rule 156 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    DOUBLE          reduce using rule 156 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LLAVE_D         reduce using rule 156 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    RETURN          reduce using rule 156 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    CASE            reduce using rule 156 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 36 resolved as shift
WARNING: shift/reduce conflict for LLAVE_D in state 443 resolved as shift

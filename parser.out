Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ARROBA
    BACKTICK
    CATCH
    CLASS
    DO
    EXTENDS
    FINAL
    FINALLY
    FOR_SOME
    HASHTAG
    IMPLICIT
    LAZY
    LIBRERIA_IO
    MACRO
    MAYOR_IGUAL
    MENOR_IGUAL
    NULL
    OVERRIDE
    PACKAGE
    PRIVATE
    PROTECTED
    REVERSE
    SEALED
    SUPER
    THIS
    THROW
    TRAIT
    TRY
    TYPE
    WITH
    YIELD

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D
Rule 2     inicio -> IMPORT io inicio
Rule 3     io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE
Rule 4     cuerpo -> funcion
Rule 5     cuerpo -> funcall
Rule 6     cuerpo -> impresion
Rule 7     cuerpo -> entrada
Rule 8     cuerpo -> asignacion
Rule 9     cuerpo -> while
Rule 10    cuerpo -> for
Rule 11    cuerpo -> match
Rule 12    cuerpo -> if
Rule 13    cuerpo -> funcion cuerpo
Rule 14    cuerpo -> asignacion cuerpo
Rule 15    cuerpo -> while cuerpo
Rule 16    cuerpo -> for cuerpo
Rule 17    cuerpo -> if cuerpo
Rule 18    cuerpo -> match cuerpo
Rule 19    contenido -> asignacion
Rule 20    contenido -> reasignacion
Rule 21    contenido -> funcall
Rule 22    contenido -> impresion
Rule 23    contenido -> entrada
Rule 24    contenido -> while
Rule 25    contenido -> for
Rule 26    contenido -> match
Rule 27    contenido -> if
Rule 28    contenido -> aritmetica
Rule 29    contenido -> asignacion contenido
Rule 30    contenido -> reasignacion contenido
Rule 31    contenido -> funcall contenido
Rule 32    contenido -> impresion contenido
Rule 33    contenido -> entrada contenido
Rule 34    contenido -> while contenido
Rule 35    contenido -> for contenido
Rule 36    contenido -> if contenido
Rule 37    contenido -> match contenido
Rule 38    contenido -> aritmetica contenido
Rule 39    contenidoLine -> asignacion
Rule 40    contenidoLine -> reasignacion
Rule 41    contenidoLine -> funcall
Rule 42    contenidoLine -> impresion
Rule 43    contenidoLine -> entrada
Rule 44    asignacion -> VAR VARIABLE IGUAL VARIABLE
Rule 45    asignacion -> VAL VARIABLE IGUAL VARIABLE
Rule 46    asignacion -> VAR VARIABLE IGUAL aritmetica
Rule 47    asignacion -> VAL VARIABLE IGUAL aritmetica
Rule 48    asignacion -> VAR VARIABLE IGUAL returnfun
Rule 49    asignacion -> VAL VARIABLE IGUAL returnfun
Rule 50    asignacion -> asignacionLong
Rule 51    asignacion -> asignacionInt
Rule 52    asignacion -> asignacionFloat
Rule 53    asignacion -> asignacionDouble
Rule 54    asignacion -> asignacionString
Rule 55    asignacion -> asignacionChar
Rule 56    asignacion -> asignacionBoolean
Rule 57    asignacion -> array
Rule 58    asignacion -> list
Rule 59    asignacionLong -> VAR VARIABLE IGUAL LONG
Rule 60    asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
Rule 61    asignacionLong -> VAL VARIABLE IGUAL LONG
Rule 62    asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
Rule 63    asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
Rule 64    asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
Rule 65    asignacionInt -> VAR VARIABLE IGUAL INT
Rule 66    asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
Rule 67    asignacionInt -> VAL VARIABLE IGUAL INT
Rule 68    asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
Rule 69    asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
Rule 70    asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
Rule 71    asignacionFloat -> VAR VARIABLE IGUAL FLOAT
Rule 72    asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
Rule 73    asignacionFloat -> VAL VARIABLE IGUAL FLOAT
Rule 74    asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
Rule 75    asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
Rule 76    asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
Rule 77    asignacionDouble -> VAR VARIABLE IGUAL DOUBLE
Rule 78    asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
Rule 79    asignacionDouble -> VAL VARIABLE IGUAL DOUBLE
Rule 80    asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
Rule 81    asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
Rule 82    asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
Rule 83    asignacionString -> VAR VARIABLE IGUAL STRING
Rule 84    asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
Rule 85    asignacionString -> VAL VARIABLE IGUAL STRING
Rule 86    asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
Rule 87    asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
Rule 88    asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
Rule 89    asignacionChar -> VAR VARIABLE IGUAL CHAR
Rule 90    asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
Rule 91    asignacionChar -> VAL VARIABLE IGUAL CHAR
Rule 92    asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
Rule 93    asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
Rule 94    asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
Rule 95    asignacionBoolean -> VAR VARIABLE IGUAL booleanos
Rule 96    asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
Rule 97    asignacionBoolean -> VAL VARIABLE IGUAL booleanos
Rule 98    asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
Rule 99    asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
Rule 100   asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
Rule 101   reasignacion -> VARIABLE IGUAL valor
Rule 102   reasignacion -> VARIABLE IGUAL returnfun
Rule 103   reasignacion -> VARIABLE IGUAL aritmetica
Rule 104   reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor
Rule 105   tipo -> CHARCLASS
Rule 106   tipo -> STRINGCLASS
Rule 107   tipo -> BOOLCLASS
Rule 108   tipo -> INTCLASS
Rule 109   tipo -> LONGCLASS
Rule 110   tipo -> DOUBLECLASS
Rule 111   tipo -> FLOATCLASS
Rule 112   tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D
Rule 113   tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D
Rule 114   valor -> STRING
Rule 115   valor -> CHAR
Rule 116   valor -> VARIABLE
Rule 117   valor -> numeros
Rule 118   valor -> booleanos
Rule 119   valor -> VARIABLE PAR_I VARIABLE PAR_D
Rule 120   valor -> VARIABLE PAR_I INT PAR_D
Rule 121   booleanos -> TRUE
Rule 122   booleanos -> FLASE
Rule 123   numeros -> INT
Rule 124   numeros -> LONG
Rule 125   numeros -> FLOAT
Rule 126   numeros -> DOUBLE
Rule 127   funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
Rule 128   funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
Rule 129   declaracion -> VARIABLE DOBLE_PUNTO tipo
Rule 130   declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor
Rule 131   parametro -> parametros
Rule 132   parametro -> PAR_I PAR_D
Rule 133   parametros -> PAR_I declaracion PAR_D
Rule 134   parametros -> PAR_I declaracion PAR_D parametros
Rule 135   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
Rule 136   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
Rule 137   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
Rule 138   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
Rule 139   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
Rule 140   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
Rule 141   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
Rule 142   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
Rule 143   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
Rule 144   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
Rule 145   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
Rule 146   dectipo -> DOBLE_PUNTO tipo
Rule 147   dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D
Rule 148   tipos -> tipo
Rule 149   tipos -> tipo tiposentry
Rule 150   tiposentry -> COMA tipo
Rule 151   tiposentry -> COMA tipo tiposentry
Rule 152   impresion -> PRINTLN PAR_I valorI PAR_D
Rule 153   impresion -> PRINT PAR_I valorI PAR_D
Rule 154   valorI -> valor MAS valorI
Rule 155   valorI -> valor
Rule 156   entrada -> READLINE PAR_I PAR_D
Rule 157   funcall -> VARIABLE varparen
Rule 158   varparen -> PAR_I valores PAR_D
Rule 159   varparen -> PAR_I PAR_D
Rule 160   varparen -> varparen PAR_I valores PAR_D
Rule 161   varparen -> varparen PAR_I PAR_D
Rule 162   returnfun -> returnCastable
Rule 163   returnfun -> castingcall
Rule 164   returnCastable -> entrada
Rule 165   returnCastable -> funcall
Rule 166   castingcall -> returnCastable PUNTO castingfun
Rule 167   castingcall -> VARIABLE PUNTO castingfun
Rule 168   castingfun -> TO_INT
Rule 169   castingfun -> TO_DOUBLE
Rule 170   castingfun -> TO_FLOAT
Rule 171   castingfun -> TO_LONG
Rule 172   array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 173   array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 174   array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
Rule 175   array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 176   array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 177   array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
Rule 178   list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
Rule 179   list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
Rule 180   list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
Rule 181   valores -> valor
Rule 182   valores -> valor COMA valores
Rule 183   tuple -> PAR_I valores PAR_D
Rule 184   asignacion -> VAR VARIABLE IGUAL tuple
Rule 185   asignacion -> VAL VARIABLE IGUAL tuple
Rule 186   asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple
Rule 187   asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple
Rule 188   while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 189   for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
Rule 190   for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
Rule 191   for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
Rule 192   for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
Rule 193   for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
Rule 194   for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
Rule 195   match -> VARIABLE MATCH LLAVE_I cases LLAVE_D
Rule 196   cases -> casesInt
Rule 197   cases -> casesLgn
Rule 198   cases -> casesFlt
Rule 199   cases -> casesDob
Rule 200   cases -> casesStr
Rule 201   cases -> casesChar
Rule 202   cases -> casesBool
Rule 203   caseInt -> CASE INT FUNCION_FLECHA codeBlock
Rule 204   casesInt -> caseInt
Rule 205   casesInt -> caseInt casesInt
Rule 206   casesInt -> caseInt defcase
Rule 207   caseLgn -> CASE LONG FUNCION_FLECHA codeBlock
Rule 208   casesLgn -> caseLgn
Rule 209   casesLgn -> caseLgn casesLgn
Rule 210   casesLgn -> caseLgn defcase
Rule 211   caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock
Rule 212   casesFlt -> caseFlt
Rule 213   casesFlt -> caseFlt casesFlt
Rule 214   casesFlt -> caseFlt defcase
Rule 215   caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock
Rule 216   casesDob -> caseDob
Rule 217   casesDob -> caseDob casesDob
Rule 218   casesDob -> caseDob defcase
Rule 219   caseStr -> CASE STRING FUNCION_FLECHA codeBlock
Rule 220   casesStr -> caseStr
Rule 221   casesStr -> caseStr casesStr
Rule 222   casesStr -> caseStr defcase
Rule 223   caseChar -> CASE CHAR FUNCION_FLECHA codeBlock
Rule 224   casesChar -> caseChar
Rule 225   casesChar -> caseChar casesChar
Rule 226   casesChar -> caseChar defcase
Rule 227   caseBool -> CASE booleanos FUNCION_FLECHA codeBlock
Rule 228   casesBool -> caseBool
Rule 229   casesBool -> caseBool casesBool
Rule 230   casesBool -> caseBool defcase
Rule 231   defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock
Rule 232   codeBlock -> contenidoLine
Rule 233   codeBlock -> LLAVE_I contenido LLAVE_D
Rule 234   if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 235   if -> if elseif
Rule 236   if -> if else
Rule 237   elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 238   elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
Rule 239   else -> ELSE LLAVE_I contenido LLAVE_D
Rule 240   else -> elseif else
Rule 241   condicional -> valorC logicos condicional
Rule 242   condicional -> valorC
Rule 243   valorC -> VARIABLE
Rule 244   valorC -> booleanos
Rule 245   valorC -> relacional
Rule 246   valorC -> NOT VARIABLE
Rule 247   valorC -> NOT booleanos
Rule 248   valorC -> NOT relacional
Rule 249   logicos -> AND
Rule 250   logicos -> OR
Rule 251   logicos -> NOT
Rule 252   relacional -> numeros comparacion numeros
Rule 253   relacional -> aritmetica comparacion aritmetica
Rule 254   relacional -> aritmetica comparacion numeros
Rule 255   relacional -> numeros comparacion aritmetica
Rule 256   relacional -> booleanos comparacion booleanos
Rule 257   relacional -> STRING comparacion STRING
Rule 258   relacional -> CHAR comparacion CHAR
Rule 259   relacional -> VARIABLE comparacion numeros
Rule 260   relacional -> numeros comparacion VARIABLE
Rule 261   relacional -> VARIABLE comparacion booleanos
Rule 262   relacional -> booleanos comparacion VARIABLE
Rule 263   relacional -> VARIABLE comparacion STRING
Rule 264   relacional -> STRING comparacion VARIABLE
Rule 265   relacional -> VARIABLE comparacion CHAR
Rule 266   relacional -> CHAR comparacion VARIABLE
Rule 267   relacional -> VARIABLE comparacion VARIABLE
Rule 268   comparacion -> IGUAL_COMPARACION
Rule 269   comparacion -> DIFERENTE
Rule 270   comparacion -> MAYOR
Rule 271   comparacion -> MENOR
Rule 272   aritmetica -> numeros aritmeticos numeros
Rule 273   aritmetica -> VARIABLE aritmeticos numeros
Rule 274   aritmetica -> numeros aritmeticos VARIABLE
Rule 275   aritmetica -> VARIABLE aritmeticos VARIABLE
Rule 276   aritmetica -> aritmetica aritmeticos numeros
Rule 277   aritmetica -> aritmetica aritmeticos VARIABLE
Rule 278   aritmeticos -> MENOS
Rule 279   aritmeticos -> MAS
Rule 280   aritmeticos -> MULTIPLICACION
Rule 281   aritmeticos -> DIVISION
Rule 282   aritmeticos -> MOD

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 249
ARRAYCLASS           : 112 172 173 173 174 174 175 176 176 177 177
ARROBA               : 
BACKTICK             : 
BOOLCLASS            : 96 98 99 100 107
CASE                 : 203 207 211 215 219 223 227 231
CATCH                : 
CHAR                 : 89 90 91 92 115 223 258 258 265 266
CHARCLASS            : 90 92 93 94 105
CLASS                : 
COMA                 : 150 151 182
CORCHETE_D           : 112 113 173 174 174 176 177 177 179 180
CORCHETE_I           : 112 113 173 174 174 176 177 177 179 180
DEF                  : 127 128 135 136 137 138 139 140 141 142 143 144 145
DIFERENTE            : 269
DIVISION             : 281
DO                   : 
DOBLE_PUNTO          : 60 62 63 64 66 68 69 70 72 74 75 76 78 80 81 82 84 86 87 88 90 92 93 94 96 98 99 100 129 130 146 147 173 174 176 177 179 180
DOUBLE               : 77 78 79 80 126 215
DOUBLECLASS          : 78 80 81 82 110
ELSE                 : 237 238 239
EXTENDS              : 
FINAL                : 
FINALLY              : 
FLASE                : 122
FLOAT                : 71 72 73 74 125 211
FLOATCLASS           : 72 74 75 76 111
FOR                  : 189 190 191 192 193 194
FOR_SOME             : 
FUNCION_FLECHA       : 203 207 211 215 219 223 227 231
HASHTAG              : 
IF                   : 234 237 238
IGUAL                : 44 45 46 47 48 49 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 127 130 135 136 137 138 139 140 141 142 143 144 145 172 173 174 175 176 177 178 179 180 184 185 186 187
IGUAL_COMPARACION    : 268
IMPLICIT             : 
IMPORT               : 2
INT                  : 65 66 67 68 104 120 123 174 177 191 191 192 192 193 193 194 194 203
INTCLASS             : 66 68 69 70 108
ITERATOR             : 189 190 191 192 193 194
LAZY                 : 
LIBRERIA_IO          : 
LISTCLASS            : 113 178 179 179 180 180
LLAVE_D              : 1 127 128 135 136 137 138 139 140 141 142 143 144 145 188 189 190 191 192 193 194 195 233 234 237 238 239
LLAVE_I              : 1 127 128 135 136 137 138 139 140 141 142 143 144 145 188 189 190 191 192 193 194 195 233 234 237 238 239
LONG                 : 59 60 61 62 124 207
LONGCLASS            : 60 62 63 64 109
MACRO                : 
MAS                  : 154 279
MATCH                : 195
MAYOR                : 270
MAYOR_IGUAL          : 
MENOR                : 271
MENOR_IGUAL          : 
MENOS                : 278
MOD                  : 282
MULTIPLICACION       : 280
NEW                  : 174 177 179
NOT                  : 246 247 248 251
NULL                 : 
OBJECT               : 1
OR                   : 250
OVERRIDE             : 
PACKAGE              : 
PAR_D                : 104 119 120 132 133 134 147 152 153 156 158 159 160 161 172 173 174 175 176 177 178 179 180 183 188 189 190 191 192 193 194 234 237 238
PAR_I                : 104 119 120 132 133 134 147 152 153 156 158 159 160 161 172 173 174 175 176 177 178 179 180 183 188 189 190 191 192 193 194 234 237 238
PRINT                : 153
PRINTLN              : 152
PRIVATE              : 
PROTECTED            : 
PUNTO                : 3 3 3 166 167
READLINE             : 3 156
RETURN               : 135 136 137 138 139 140 141 142 143 144 145
REVERSE              : 
SEALED               : 
STRING               : 83 84 85 86 114 219 257 257 263 264
STRINGCLASS          : 84 86 87 88 106
SUBGUION             : 231
SUPER                : 
THIS                 : 
THROW                : 
TO                   : 191 193
TO_DOUBLE            : 169
TO_FLOAT             : 170
TO_INT               : 168
TO_LONG              : 171
TRAIT                : 
TRUE                 : 121
TRY                  : 
TYPE                 : 
UNTIL                : 192 194
VAL                  : 45 47 49 61 62 64 67 68 70 73 74 76 79 80 82 85 86 88 91 92 94 97 98 100 175 176 177 178 179 180 185 187
VAR                  : 44 46 48 59 60 63 65 66 69 71 72 75 77 78 81 83 84 87 89 90 93 95 96 99 172 173 174 184 186 189 193 194
VARIABLE             : 1 3 3 3 44 44 45 45 46 47 48 49 59 60 61 62 63 63 64 64 65 66 67 68 69 69 70 70 71 72 73 74 75 75 76 76 77 78 79 80 81 81 82 82 83 84 85 86 87 87 88 88 89 90 91 92 93 93 94 94 95 96 97 98 99 99 100 100 101 102 103 104 116 119 119 120 127 128 129 130 135 136 136 137 138 139 140 140 141 142 143 144 144 145 157 167 172 173 174 175 176 177 178 179 180 184 185 186 187 189 189 190 190 191 192 193 194 195 243 246 259 260 261 262 263 264 265 266 267 267 273 274 275 275 277
WHILE                : 188
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

aritmetica           : 28 38 46 47 103 138 142 253 253 254 255 276 277
aritmeticos          : 272 273 274 275 276 277
array                : 57
asignacion           : 8 14 19 29 39
asignacionBoolean    : 56
asignacionChar       : 55
asignacionDouble     : 53
asignacionFloat      : 52
asignacionInt        : 51
asignacionLong       : 50
asignacionString     : 54
booleanos            : 95 96 97 98 118 227 244 247 256 256 261 262
caseBool             : 228 229 230
caseChar             : 224 225 226
caseDob              : 216 217 218
caseFlt              : 212 213 214
caseInt              : 204 205 206
caseLgn              : 208 209 210
caseStr              : 220 221 222
cases                : 195
casesBool            : 202 229
casesChar            : 201 225
casesDob             : 199 217
casesFlt             : 198 213
casesInt             : 196 205
casesLgn             : 197 209
casesStr             : 200 221
castingcall          : 163
castingfun           : 166 167
codeBlock            : 203 207 211 215 219 223 227 231
comparacion          : 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267
condicional          : 188 234 237 238 241
contenido            : 29 30 31 32 33 34 35 36 37 38 127 128 135 136 137 138 143 144 145 188 189 190 191 192 193 194 233 234 237 238 239
contenidoLine        : 232
cuerpo               : 1 13 14 15 16 17 18
declaracion          : 133 134
dectipo              : 135 136 137 138 139 140 141 142
dectipoTupla         : 143 144 145 186 187
defcase              : 206 210 214 218 222 226 230
else                 : 236 240
elseif               : 235 238 240
entrada              : 7 23 33 43 164
for                  : 10 16 25 35
funcall              : 5 21 31 41 165
funcion              : 4 13
if                   : 12 17 27 36 235 236
impresion            : 6 22 32 42
inicio               : 2 0
io                   : 2
list                 : 58
logicos              : 241
match                : 11 18 26 37
numeros              : 117 252 252 254 255 259 260 272 272 273 274 276
parametro            : 127 128 135 136 137 138 139 140 141 142 143 144 145
parametros           : 131 134
reasignacion         : 20 30 40
relacional           : 245 248
returnCastable       : 162 166
returnfun            : 48 49 102 137 141 145
tipo                 : 112 113 129 130 146 148 149 150 151 173 174 174 176 177 177 179 180
tipos                : 147
tiposentry           : 149 151
tuple                : 143 184 185 186 187
valor                : 101 104 130 135 139 154 155 181 182
valorC               : 241 242
valorI               : 152 153 154
valores              : 158 160 172 173 175 176 178 179 180 182 183
varparen             : 157 160 161
while                : 9 15 24 34

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D
    (2) inicio -> . IMPORT io inicio

    OBJECT          shift and go to state 2
    IMPORT          shift and go to state 3

    inicio                         shift and go to state 1

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> OBJECT . VARIABLE LLAVE_I cuerpo LLAVE_D

    VARIABLE        shift and go to state 4


state 3

    (2) inicio -> IMPORT . io inicio
    (3) io -> . VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE

    VARIABLE        shift and go to state 6

    io                             shift and go to state 5

state 4

    (1) inicio -> OBJECT VARIABLE . LLAVE_I cuerpo LLAVE_D

    LLAVE_I         shift and go to state 7


state 5

    (2) inicio -> IMPORT io . inicio
    (1) inicio -> . OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D
    (2) inicio -> . IMPORT io inicio

    OBJECT          shift and go to state 2
    IMPORT          shift and go to state 3

    inicio                         shift and go to state 8

state 6

    (3) io -> VARIABLE . PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE

    PUNTO           shift and go to state 9


state 7

    (1) inicio -> OBJECT VARIABLE LLAVE_I . cuerpo LLAVE_D
    (4) cuerpo -> . funcion
    (5) cuerpo -> . funcall
    (6) cuerpo -> . impresion
    (7) cuerpo -> . entrada
    (8) cuerpo -> . asignacion
    (9) cuerpo -> . while
    (10) cuerpo -> . for
    (11) cuerpo -> . match
    (12) cuerpo -> . if
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . asignacion cuerpo
    (15) cuerpo -> . while cuerpo
    (16) cuerpo -> . for cuerpo
    (17) cuerpo -> . if cuerpo
    (18) cuerpo -> . match cuerpo
    (127) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (135) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (136) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (137) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (138) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (139) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (140) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (141) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (142) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (143) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (144) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (145) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    DEF             shift and go to state 21
    VARIABLE        shift and go to state 10
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38

    cuerpo                         shift and go to state 11
    funcion                        shift and go to state 12
    funcall                        shift and go to state 13
    impresion                      shift and go to state 14
    entrada                        shift and go to state 15
    asignacion                     shift and go to state 16
    while                          shift and go to state 17
    for                            shift and go to state 18
    match                          shift and go to state 19
    if                             shift and go to state 20
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35

state 8

    (2) inicio -> IMPORT io inicio .

    $end            reduce using rule 2 (inicio -> IMPORT io inicio .)


state 9

    (3) io -> VARIABLE PUNTO . VARIABLE PUNTO VARIABLE PUNTO READLINE

    VARIABLE        shift and go to state 39


state 10

    (157) funcall -> VARIABLE . varparen
    (195) match -> VARIABLE . MATCH LLAVE_I cases LLAVE_D
    (158) varparen -> . PAR_I valores PAR_D
    (159) varparen -> . PAR_I PAR_D
    (160) varparen -> . varparen PAR_I valores PAR_D
    (161) varparen -> . varparen PAR_I PAR_D

    MATCH           shift and go to state 41
    PAR_I           shift and go to state 42

    varparen                       shift and go to state 40

state 11

    (1) inicio -> OBJECT VARIABLE LLAVE_I cuerpo . LLAVE_D

    LLAVE_D         shift and go to state 43


state 12

    (4) cuerpo -> funcion .
    (13) cuerpo -> funcion . cuerpo
    (4) cuerpo -> . funcion
    (5) cuerpo -> . funcall
    (6) cuerpo -> . impresion
    (7) cuerpo -> . entrada
    (8) cuerpo -> . asignacion
    (9) cuerpo -> . while
    (10) cuerpo -> . for
    (11) cuerpo -> . match
    (12) cuerpo -> . if
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . asignacion cuerpo
    (15) cuerpo -> . while cuerpo
    (16) cuerpo -> . for cuerpo
    (17) cuerpo -> . if cuerpo
    (18) cuerpo -> . match cuerpo
    (127) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (135) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (136) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (137) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (138) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (139) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (140) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (141) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (142) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (143) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (144) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (145) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_D         reduce using rule 4 (cuerpo -> funcion .)
    DEF             shift and go to state 21
    VARIABLE        shift and go to state 10
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38

    funcion                        shift and go to state 12
    cuerpo                         shift and go to state 44
    funcall                        shift and go to state 13
    impresion                      shift and go to state 14
    entrada                        shift and go to state 15
    asignacion                     shift and go to state 16
    while                          shift and go to state 17
    for                            shift and go to state 18
    match                          shift and go to state 19
    if                             shift and go to state 20
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35

state 13

    (5) cuerpo -> funcall .

    LLAVE_D         reduce using rule 5 (cuerpo -> funcall .)


state 14

    (6) cuerpo -> impresion .

    LLAVE_D         reduce using rule 6 (cuerpo -> impresion .)


state 15

    (7) cuerpo -> entrada .

    LLAVE_D         reduce using rule 7 (cuerpo -> entrada .)


state 16

    (8) cuerpo -> asignacion .
    (14) cuerpo -> asignacion . cuerpo
    (4) cuerpo -> . funcion
    (5) cuerpo -> . funcall
    (6) cuerpo -> . impresion
    (7) cuerpo -> . entrada
    (8) cuerpo -> . asignacion
    (9) cuerpo -> . while
    (10) cuerpo -> . for
    (11) cuerpo -> . match
    (12) cuerpo -> . if
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . asignacion cuerpo
    (15) cuerpo -> . while cuerpo
    (16) cuerpo -> . for cuerpo
    (17) cuerpo -> . if cuerpo
    (18) cuerpo -> . match cuerpo
    (127) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (135) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (136) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (137) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (138) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (139) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (140) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (141) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (142) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (143) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (144) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (145) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_D         reduce using rule 8 (cuerpo -> asignacion .)
    DEF             shift and go to state 21
    VARIABLE        shift and go to state 10
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38

    asignacion                     shift and go to state 16
    cuerpo                         shift and go to state 45
    funcion                        shift and go to state 12
    funcall                        shift and go to state 13
    impresion                      shift and go to state 14
    entrada                        shift and go to state 15
    while                          shift and go to state 17
    for                            shift and go to state 18
    match                          shift and go to state 19
    if                             shift and go to state 20
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35

state 17

    (9) cuerpo -> while .
    (15) cuerpo -> while . cuerpo
    (4) cuerpo -> . funcion
    (5) cuerpo -> . funcall
    (6) cuerpo -> . impresion
    (7) cuerpo -> . entrada
    (8) cuerpo -> . asignacion
    (9) cuerpo -> . while
    (10) cuerpo -> . for
    (11) cuerpo -> . match
    (12) cuerpo -> . if
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . asignacion cuerpo
    (15) cuerpo -> . while cuerpo
    (16) cuerpo -> . for cuerpo
    (17) cuerpo -> . if cuerpo
    (18) cuerpo -> . match cuerpo
    (127) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (135) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (136) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (137) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (138) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (139) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (140) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (141) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (142) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (143) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (144) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (145) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_D         reduce using rule 9 (cuerpo -> while .)
    DEF             shift and go to state 21
    VARIABLE        shift and go to state 10
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38

    while                          shift and go to state 17
    cuerpo                         shift and go to state 46
    funcion                        shift and go to state 12
    funcall                        shift and go to state 13
    impresion                      shift and go to state 14
    entrada                        shift and go to state 15
    asignacion                     shift and go to state 16
    for                            shift and go to state 18
    match                          shift and go to state 19
    if                             shift and go to state 20
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35

state 18

    (10) cuerpo -> for .
    (16) cuerpo -> for . cuerpo
    (4) cuerpo -> . funcion
    (5) cuerpo -> . funcall
    (6) cuerpo -> . impresion
    (7) cuerpo -> . entrada
    (8) cuerpo -> . asignacion
    (9) cuerpo -> . while
    (10) cuerpo -> . for
    (11) cuerpo -> . match
    (12) cuerpo -> . if
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . asignacion cuerpo
    (15) cuerpo -> . while cuerpo
    (16) cuerpo -> . for cuerpo
    (17) cuerpo -> . if cuerpo
    (18) cuerpo -> . match cuerpo
    (127) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (135) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (136) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (137) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (138) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (139) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (140) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (141) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (142) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (143) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (144) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (145) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_D         reduce using rule 10 (cuerpo -> for .)
    DEF             shift and go to state 21
    VARIABLE        shift and go to state 10
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38

    for                            shift and go to state 18
    cuerpo                         shift and go to state 47
    funcion                        shift and go to state 12
    funcall                        shift and go to state 13
    impresion                      shift and go to state 14
    entrada                        shift and go to state 15
    asignacion                     shift and go to state 16
    while                          shift and go to state 17
    match                          shift and go to state 19
    if                             shift and go to state 20
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35

state 19

    (11) cuerpo -> match .
    (18) cuerpo -> match . cuerpo
    (4) cuerpo -> . funcion
    (5) cuerpo -> . funcall
    (6) cuerpo -> . impresion
    (7) cuerpo -> . entrada
    (8) cuerpo -> . asignacion
    (9) cuerpo -> . while
    (10) cuerpo -> . for
    (11) cuerpo -> . match
    (12) cuerpo -> . if
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . asignacion cuerpo
    (15) cuerpo -> . while cuerpo
    (16) cuerpo -> . for cuerpo
    (17) cuerpo -> . if cuerpo
    (18) cuerpo -> . match cuerpo
    (127) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (135) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (136) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (137) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (138) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (139) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (140) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (141) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (142) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (143) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (144) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (145) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_D         reduce using rule 11 (cuerpo -> match .)
    DEF             shift and go to state 21
    VARIABLE        shift and go to state 10
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38

    match                          shift and go to state 19
    cuerpo                         shift and go to state 48
    funcion                        shift and go to state 12
    funcall                        shift and go to state 13
    impresion                      shift and go to state 14
    entrada                        shift and go to state 15
    asignacion                     shift and go to state 16
    while                          shift and go to state 17
    for                            shift and go to state 18
    if                             shift and go to state 20
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35

state 20

    (12) cuerpo -> if .
    (17) cuerpo -> if . cuerpo
    (235) if -> if . elseif
    (236) if -> if . else
    (4) cuerpo -> . funcion
    (5) cuerpo -> . funcall
    (6) cuerpo -> . impresion
    (7) cuerpo -> . entrada
    (8) cuerpo -> . asignacion
    (9) cuerpo -> . while
    (10) cuerpo -> . for
    (11) cuerpo -> . match
    (12) cuerpo -> . if
    (13) cuerpo -> . funcion cuerpo
    (14) cuerpo -> . asignacion cuerpo
    (15) cuerpo -> . while cuerpo
    (16) cuerpo -> . for cuerpo
    (17) cuerpo -> . if cuerpo
    (18) cuerpo -> . match cuerpo
    (237) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (238) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (239) else -> . ELSE LLAVE_I contenido LLAVE_D
    (240) else -> . elseif else
    (127) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (135) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (136) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (137) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (138) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (139) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (140) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (141) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (142) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (143) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (144) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (145) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_D         reduce using rule 12 (cuerpo -> if .)
    ELSE            shift and go to state 52
    DEF             shift and go to state 21
    VARIABLE        shift and go to state 10
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38

    if                             shift and go to state 20
    cuerpo                         shift and go to state 49
    elseif                         shift and go to state 50
    else                           shift and go to state 51
    funcion                        shift and go to state 12
    funcall                        shift and go to state 13
    impresion                      shift and go to state 14
    entrada                        shift and go to state 15
    asignacion                     shift and go to state 16
    while                          shift and go to state 17
    for                            shift and go to state 18
    match                          shift and go to state 19
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35

state 21

    (127) funcion -> DEF . VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (128) funcion -> DEF . VARIABLE parametro LLAVE_I contenido LLAVE_D
    (135) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (136) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (137) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (138) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (139) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (140) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (141) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (142) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (143) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (144) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (145) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D

    VARIABLE        shift and go to state 53


state 22

    (152) impresion -> PRINTLN . PAR_I valorI PAR_D

    PAR_I           shift and go to state 54


state 23

    (153) impresion -> PRINT . PAR_I valorI PAR_D

    PAR_I           shift and go to state 55


state 24

    (156) entrada -> READLINE . PAR_I PAR_D

    PAR_I           shift and go to state 56


state 25

    (44) asignacion -> VAR . VARIABLE IGUAL VARIABLE
    (46) asignacion -> VAR . VARIABLE IGUAL aritmetica
    (48) asignacion -> VAR . VARIABLE IGUAL returnfun
    (184) asignacion -> VAR . VARIABLE IGUAL tuple
    (186) asignacion -> VAR . VARIABLE dectipoTupla IGUAL tuple
    (59) asignacionLong -> VAR . VARIABLE IGUAL LONG
    (60) asignacionLong -> VAR . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> VAR . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> VAR . VARIABLE IGUAL INT
    (66) asignacionInt -> VAR . VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> VAR . VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> VAR . VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> VAR . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> VAR . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> VAR . VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> VAR . VARIABLE IGUAL STRING
    (84) asignacionString -> VAR . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> VAR . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> VAR . VARIABLE IGUAL CHAR
    (90) asignacionChar -> VAR . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> VAR . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> VAR . VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> VAR . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> VAR . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> VAR . VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    VARIABLE        shift and go to state 57


state 26

    (45) asignacion -> VAL . VARIABLE IGUAL VARIABLE
    (47) asignacion -> VAL . VARIABLE IGUAL aritmetica
    (49) asignacion -> VAL . VARIABLE IGUAL returnfun
    (185) asignacion -> VAL . VARIABLE IGUAL tuple
    (187) asignacion -> VAL . VARIABLE dectipoTupla IGUAL tuple
    (61) asignacionLong -> VAL . VARIABLE IGUAL LONG
    (62) asignacionLong -> VAL . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (64) asignacionLong -> VAL . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (67) asignacionInt -> VAL . VARIABLE IGUAL INT
    (68) asignacionInt -> VAL . VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (70) asignacionInt -> VAL . VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (73) asignacionFloat -> VAL . VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> VAL . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (76) asignacionFloat -> VAL . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (79) asignacionDouble -> VAL . VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (82) asignacionDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (85) asignacionString -> VAL . VARIABLE IGUAL STRING
    (86) asignacionString -> VAL . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (88) asignacionString -> VAL . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (91) asignacionChar -> VAL . VARIABLE IGUAL CHAR
    (92) asignacionChar -> VAL . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (94) asignacionChar -> VAL . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> VAL . VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> VAL . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (100) asignacionBoolean -> VAL . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (175) array -> VAL . VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> VAL . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> VAL . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> VAL . VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> VAL . VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> VAL . VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    VARIABLE        shift and go to state 58


state 27

    (50) asignacion -> asignacionLong .

    DEF             reduce using rule 50 (asignacion -> asignacionLong .)
    VARIABLE        reduce using rule 50 (asignacion -> asignacionLong .)
    PRINTLN         reduce using rule 50 (asignacion -> asignacionLong .)
    PRINT           reduce using rule 50 (asignacion -> asignacionLong .)
    READLINE        reduce using rule 50 (asignacion -> asignacionLong .)
    VAR             reduce using rule 50 (asignacion -> asignacionLong .)
    VAL             reduce using rule 50 (asignacion -> asignacionLong .)
    WHILE           reduce using rule 50 (asignacion -> asignacionLong .)
    FOR             reduce using rule 50 (asignacion -> asignacionLong .)
    IF              reduce using rule 50 (asignacion -> asignacionLong .)
    LLAVE_D         reduce using rule 50 (asignacion -> asignacionLong .)
    INT             reduce using rule 50 (asignacion -> asignacionLong .)
    LONG            reduce using rule 50 (asignacion -> asignacionLong .)
    FLOAT           reduce using rule 50 (asignacion -> asignacionLong .)
    DOUBLE          reduce using rule 50 (asignacion -> asignacionLong .)
    RETURN          reduce using rule 50 (asignacion -> asignacionLong .)
    CASE            reduce using rule 50 (asignacion -> asignacionLong .)


state 28

    (51) asignacion -> asignacionInt .

    DEF             reduce using rule 51 (asignacion -> asignacionInt .)
    VARIABLE        reduce using rule 51 (asignacion -> asignacionInt .)
    PRINTLN         reduce using rule 51 (asignacion -> asignacionInt .)
    PRINT           reduce using rule 51 (asignacion -> asignacionInt .)
    READLINE        reduce using rule 51 (asignacion -> asignacionInt .)
    VAR             reduce using rule 51 (asignacion -> asignacionInt .)
    VAL             reduce using rule 51 (asignacion -> asignacionInt .)
    WHILE           reduce using rule 51 (asignacion -> asignacionInt .)
    FOR             reduce using rule 51 (asignacion -> asignacionInt .)
    IF              reduce using rule 51 (asignacion -> asignacionInt .)
    LLAVE_D         reduce using rule 51 (asignacion -> asignacionInt .)
    INT             reduce using rule 51 (asignacion -> asignacionInt .)
    LONG            reduce using rule 51 (asignacion -> asignacionInt .)
    FLOAT           reduce using rule 51 (asignacion -> asignacionInt .)
    DOUBLE          reduce using rule 51 (asignacion -> asignacionInt .)
    RETURN          reduce using rule 51 (asignacion -> asignacionInt .)
    CASE            reduce using rule 51 (asignacion -> asignacionInt .)


state 29

    (52) asignacion -> asignacionFloat .

    DEF             reduce using rule 52 (asignacion -> asignacionFloat .)
    VARIABLE        reduce using rule 52 (asignacion -> asignacionFloat .)
    PRINTLN         reduce using rule 52 (asignacion -> asignacionFloat .)
    PRINT           reduce using rule 52 (asignacion -> asignacionFloat .)
    READLINE        reduce using rule 52 (asignacion -> asignacionFloat .)
    VAR             reduce using rule 52 (asignacion -> asignacionFloat .)
    VAL             reduce using rule 52 (asignacion -> asignacionFloat .)
    WHILE           reduce using rule 52 (asignacion -> asignacionFloat .)
    FOR             reduce using rule 52 (asignacion -> asignacionFloat .)
    IF              reduce using rule 52 (asignacion -> asignacionFloat .)
    LLAVE_D         reduce using rule 52 (asignacion -> asignacionFloat .)
    INT             reduce using rule 52 (asignacion -> asignacionFloat .)
    LONG            reduce using rule 52 (asignacion -> asignacionFloat .)
    FLOAT           reduce using rule 52 (asignacion -> asignacionFloat .)
    DOUBLE          reduce using rule 52 (asignacion -> asignacionFloat .)
    RETURN          reduce using rule 52 (asignacion -> asignacionFloat .)
    CASE            reduce using rule 52 (asignacion -> asignacionFloat .)


state 30

    (53) asignacion -> asignacionDouble .

    DEF             reduce using rule 53 (asignacion -> asignacionDouble .)
    VARIABLE        reduce using rule 53 (asignacion -> asignacionDouble .)
    PRINTLN         reduce using rule 53 (asignacion -> asignacionDouble .)
    PRINT           reduce using rule 53 (asignacion -> asignacionDouble .)
    READLINE        reduce using rule 53 (asignacion -> asignacionDouble .)
    VAR             reduce using rule 53 (asignacion -> asignacionDouble .)
    VAL             reduce using rule 53 (asignacion -> asignacionDouble .)
    WHILE           reduce using rule 53 (asignacion -> asignacionDouble .)
    FOR             reduce using rule 53 (asignacion -> asignacionDouble .)
    IF              reduce using rule 53 (asignacion -> asignacionDouble .)
    LLAVE_D         reduce using rule 53 (asignacion -> asignacionDouble .)
    INT             reduce using rule 53 (asignacion -> asignacionDouble .)
    LONG            reduce using rule 53 (asignacion -> asignacionDouble .)
    FLOAT           reduce using rule 53 (asignacion -> asignacionDouble .)
    DOUBLE          reduce using rule 53 (asignacion -> asignacionDouble .)
    RETURN          reduce using rule 53 (asignacion -> asignacionDouble .)
    CASE            reduce using rule 53 (asignacion -> asignacionDouble .)


state 31

    (54) asignacion -> asignacionString .

    DEF             reduce using rule 54 (asignacion -> asignacionString .)
    VARIABLE        reduce using rule 54 (asignacion -> asignacionString .)
    PRINTLN         reduce using rule 54 (asignacion -> asignacionString .)
    PRINT           reduce using rule 54 (asignacion -> asignacionString .)
    READLINE        reduce using rule 54 (asignacion -> asignacionString .)
    VAR             reduce using rule 54 (asignacion -> asignacionString .)
    VAL             reduce using rule 54 (asignacion -> asignacionString .)
    WHILE           reduce using rule 54 (asignacion -> asignacionString .)
    FOR             reduce using rule 54 (asignacion -> asignacionString .)
    IF              reduce using rule 54 (asignacion -> asignacionString .)
    LLAVE_D         reduce using rule 54 (asignacion -> asignacionString .)
    INT             reduce using rule 54 (asignacion -> asignacionString .)
    LONG            reduce using rule 54 (asignacion -> asignacionString .)
    FLOAT           reduce using rule 54 (asignacion -> asignacionString .)
    DOUBLE          reduce using rule 54 (asignacion -> asignacionString .)
    RETURN          reduce using rule 54 (asignacion -> asignacionString .)
    CASE            reduce using rule 54 (asignacion -> asignacionString .)


state 32

    (55) asignacion -> asignacionChar .

    DEF             reduce using rule 55 (asignacion -> asignacionChar .)
    VARIABLE        reduce using rule 55 (asignacion -> asignacionChar .)
    PRINTLN         reduce using rule 55 (asignacion -> asignacionChar .)
    PRINT           reduce using rule 55 (asignacion -> asignacionChar .)
    READLINE        reduce using rule 55 (asignacion -> asignacionChar .)
    VAR             reduce using rule 55 (asignacion -> asignacionChar .)
    VAL             reduce using rule 55 (asignacion -> asignacionChar .)
    WHILE           reduce using rule 55 (asignacion -> asignacionChar .)
    FOR             reduce using rule 55 (asignacion -> asignacionChar .)
    IF              reduce using rule 55 (asignacion -> asignacionChar .)
    LLAVE_D         reduce using rule 55 (asignacion -> asignacionChar .)
    INT             reduce using rule 55 (asignacion -> asignacionChar .)
    LONG            reduce using rule 55 (asignacion -> asignacionChar .)
    FLOAT           reduce using rule 55 (asignacion -> asignacionChar .)
    DOUBLE          reduce using rule 55 (asignacion -> asignacionChar .)
    RETURN          reduce using rule 55 (asignacion -> asignacionChar .)
    CASE            reduce using rule 55 (asignacion -> asignacionChar .)


state 33

    (56) asignacion -> asignacionBoolean .

    DEF             reduce using rule 56 (asignacion -> asignacionBoolean .)
    VARIABLE        reduce using rule 56 (asignacion -> asignacionBoolean .)
    PRINTLN         reduce using rule 56 (asignacion -> asignacionBoolean .)
    PRINT           reduce using rule 56 (asignacion -> asignacionBoolean .)
    READLINE        reduce using rule 56 (asignacion -> asignacionBoolean .)
    VAR             reduce using rule 56 (asignacion -> asignacionBoolean .)
    VAL             reduce using rule 56 (asignacion -> asignacionBoolean .)
    WHILE           reduce using rule 56 (asignacion -> asignacionBoolean .)
    FOR             reduce using rule 56 (asignacion -> asignacionBoolean .)
    IF              reduce using rule 56 (asignacion -> asignacionBoolean .)
    LLAVE_D         reduce using rule 56 (asignacion -> asignacionBoolean .)
    INT             reduce using rule 56 (asignacion -> asignacionBoolean .)
    LONG            reduce using rule 56 (asignacion -> asignacionBoolean .)
    FLOAT           reduce using rule 56 (asignacion -> asignacionBoolean .)
    DOUBLE          reduce using rule 56 (asignacion -> asignacionBoolean .)
    RETURN          reduce using rule 56 (asignacion -> asignacionBoolean .)
    CASE            reduce using rule 56 (asignacion -> asignacionBoolean .)


state 34

    (57) asignacion -> array .

    DEF             reduce using rule 57 (asignacion -> array .)
    VARIABLE        reduce using rule 57 (asignacion -> array .)
    PRINTLN         reduce using rule 57 (asignacion -> array .)
    PRINT           reduce using rule 57 (asignacion -> array .)
    READLINE        reduce using rule 57 (asignacion -> array .)
    VAR             reduce using rule 57 (asignacion -> array .)
    VAL             reduce using rule 57 (asignacion -> array .)
    WHILE           reduce using rule 57 (asignacion -> array .)
    FOR             reduce using rule 57 (asignacion -> array .)
    IF              reduce using rule 57 (asignacion -> array .)
    LLAVE_D         reduce using rule 57 (asignacion -> array .)
    INT             reduce using rule 57 (asignacion -> array .)
    LONG            reduce using rule 57 (asignacion -> array .)
    FLOAT           reduce using rule 57 (asignacion -> array .)
    DOUBLE          reduce using rule 57 (asignacion -> array .)
    RETURN          reduce using rule 57 (asignacion -> array .)
    CASE            reduce using rule 57 (asignacion -> array .)


state 35

    (58) asignacion -> list .

    DEF             reduce using rule 58 (asignacion -> list .)
    VARIABLE        reduce using rule 58 (asignacion -> list .)
    PRINTLN         reduce using rule 58 (asignacion -> list .)
    PRINT           reduce using rule 58 (asignacion -> list .)
    READLINE        reduce using rule 58 (asignacion -> list .)
    VAR             reduce using rule 58 (asignacion -> list .)
    VAL             reduce using rule 58 (asignacion -> list .)
    WHILE           reduce using rule 58 (asignacion -> list .)
    FOR             reduce using rule 58 (asignacion -> list .)
    IF              reduce using rule 58 (asignacion -> list .)
    LLAVE_D         reduce using rule 58 (asignacion -> list .)
    INT             reduce using rule 58 (asignacion -> list .)
    LONG            reduce using rule 58 (asignacion -> list .)
    FLOAT           reduce using rule 58 (asignacion -> list .)
    DOUBLE          reduce using rule 58 (asignacion -> list .)
    RETURN          reduce using rule 58 (asignacion -> list .)
    CASE            reduce using rule 58 (asignacion -> list .)


state 36

    (188) while -> WHILE . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 59


state 37

    (189) for -> FOR . PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> FOR . PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> FOR . PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> FOR . PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> FOR . PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> FOR . PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 60


state 38

    (234) if -> IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 61


state 39

    (3) io -> VARIABLE PUNTO VARIABLE . PUNTO VARIABLE PUNTO READLINE

    PUNTO           shift and go to state 62


state 40

    (157) funcall -> VARIABLE varparen .
    (160) varparen -> varparen . PAR_I valores PAR_D
    (161) varparen -> varparen . PAR_I PAR_D

    LLAVE_D         reduce using rule 157 (funcall -> VARIABLE varparen .)
    VAR             reduce using rule 157 (funcall -> VARIABLE varparen .)
    VAL             reduce using rule 157 (funcall -> VARIABLE varparen .)
    VARIABLE        reduce using rule 157 (funcall -> VARIABLE varparen .)
    PRINTLN         reduce using rule 157 (funcall -> VARIABLE varparen .)
    PRINT           reduce using rule 157 (funcall -> VARIABLE varparen .)
    READLINE        reduce using rule 157 (funcall -> VARIABLE varparen .)
    WHILE           reduce using rule 157 (funcall -> VARIABLE varparen .)
    FOR             reduce using rule 157 (funcall -> VARIABLE varparen .)
    IF              reduce using rule 157 (funcall -> VARIABLE varparen .)
    INT             reduce using rule 157 (funcall -> VARIABLE varparen .)
    LONG            reduce using rule 157 (funcall -> VARIABLE varparen .)
    FLOAT           reduce using rule 157 (funcall -> VARIABLE varparen .)
    DOUBLE          reduce using rule 157 (funcall -> VARIABLE varparen .)
    PUNTO           reduce using rule 157 (funcall -> VARIABLE varparen .)
    DEF             reduce using rule 157 (funcall -> VARIABLE varparen .)
    RETURN          reduce using rule 157 (funcall -> VARIABLE varparen .)
    CASE            reduce using rule 157 (funcall -> VARIABLE varparen .)
    PAR_I           shift and go to state 63


state 41

    (195) match -> VARIABLE MATCH . LLAVE_I cases LLAVE_D

    LLAVE_I         shift and go to state 64


state 42

    (158) varparen -> PAR_I . valores PAR_D
    (159) varparen -> PAR_I . PAR_D
    (181) valores -> . valor
    (182) valores -> . valor COMA valores
    (114) valor -> . STRING
    (115) valor -> . CHAR
    (116) valor -> . VARIABLE
    (117) valor -> . numeros
    (118) valor -> . booleanos
    (119) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (120) valor -> . VARIABLE PAR_I INT PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    PAR_D           shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valores                        shift and go to state 65
    valor                          shift and go to state 67
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72

state 43

    (1) inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D .

    $end            reduce using rule 1 (inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D .)


state 44

    (13) cuerpo -> funcion cuerpo .

    LLAVE_D         reduce using rule 13 (cuerpo -> funcion cuerpo .)


state 45

    (14) cuerpo -> asignacion cuerpo .

    LLAVE_D         reduce using rule 14 (cuerpo -> asignacion cuerpo .)


state 46

    (15) cuerpo -> while cuerpo .

    LLAVE_D         reduce using rule 15 (cuerpo -> while cuerpo .)


state 47

    (16) cuerpo -> for cuerpo .

    LLAVE_D         reduce using rule 16 (cuerpo -> for cuerpo .)


state 48

    (18) cuerpo -> match cuerpo .

    LLAVE_D         reduce using rule 18 (cuerpo -> match cuerpo .)


state 49

    (17) cuerpo -> if cuerpo .

    LLAVE_D         reduce using rule 17 (cuerpo -> if cuerpo .)


state 50

    (235) if -> if elseif .
    (240) else -> elseif . else
    (239) else -> . ELSE LLAVE_I contenido LLAVE_D
    (240) else -> . elseif else
    (237) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (238) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

  ! shift/reduce conflict for ELSE resolved as shift
    DEF             reduce using rule 235 (if -> if elseif .)
    VARIABLE        reduce using rule 235 (if -> if elseif .)
    PRINTLN         reduce using rule 235 (if -> if elseif .)
    PRINT           reduce using rule 235 (if -> if elseif .)
    READLINE        reduce using rule 235 (if -> if elseif .)
    VAR             reduce using rule 235 (if -> if elseif .)
    VAL             reduce using rule 235 (if -> if elseif .)
    WHILE           reduce using rule 235 (if -> if elseif .)
    FOR             reduce using rule 235 (if -> if elseif .)
    IF              reduce using rule 235 (if -> if elseif .)
    LLAVE_D         reduce using rule 235 (if -> if elseif .)
    INT             reduce using rule 235 (if -> if elseif .)
    LONG            reduce using rule 235 (if -> if elseif .)
    FLOAT           reduce using rule 235 (if -> if elseif .)
    DOUBLE          reduce using rule 235 (if -> if elseif .)
    RETURN          reduce using rule 235 (if -> if elseif .)
    ELSE            shift and go to state 81

  ! ELSE            [ reduce using rule 235 (if -> if elseif .) ]

    elseif                         shift and go to state 79
    else                           shift and go to state 80

state 51

    (236) if -> if else .

    ELSE            reduce using rule 236 (if -> if else .)
    DEF             reduce using rule 236 (if -> if else .)
    VARIABLE        reduce using rule 236 (if -> if else .)
    PRINTLN         reduce using rule 236 (if -> if else .)
    PRINT           reduce using rule 236 (if -> if else .)
    READLINE        reduce using rule 236 (if -> if else .)
    VAR             reduce using rule 236 (if -> if else .)
    VAL             reduce using rule 236 (if -> if else .)
    WHILE           reduce using rule 236 (if -> if else .)
    FOR             reduce using rule 236 (if -> if else .)
    IF              reduce using rule 236 (if -> if else .)
    LLAVE_D         reduce using rule 236 (if -> if else .)
    INT             reduce using rule 236 (if -> if else .)
    LONG            reduce using rule 236 (if -> if else .)
    FLOAT           reduce using rule 236 (if -> if else .)
    DOUBLE          reduce using rule 236 (if -> if else .)
    RETURN          reduce using rule 236 (if -> if else .)


state 52

    (237) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (238) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (239) else -> ELSE . LLAVE_I contenido LLAVE_D

    IF              shift and go to state 82
    LLAVE_I         shift and go to state 83


state 53

    (127) funcion -> DEF VARIABLE . parametro IGUAL LLAVE_I contenido LLAVE_D
    (128) funcion -> DEF VARIABLE . parametro LLAVE_I contenido LLAVE_D
    (135) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (136) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (137) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (138) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (139) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (140) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (141) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (142) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (143) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (144) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (145) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) parametro -> . parametros
    (132) parametro -> . PAR_I PAR_D
    (133) parametros -> . PAR_I declaracion PAR_D
    (134) parametros -> . PAR_I declaracion PAR_D parametros

    PAR_I           shift and go to state 86

    parametro                      shift and go to state 84
    parametros                     shift and go to state 85

state 54

    (152) impresion -> PRINTLN PAR_I . valorI PAR_D
    (154) valorI -> . valor MAS valorI
    (155) valorI -> . valor
    (114) valor -> . STRING
    (115) valor -> . CHAR
    (116) valor -> . VARIABLE
    (117) valor -> . numeros
    (118) valor -> . booleanos
    (119) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (120) valor -> . VARIABLE PAR_I INT PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valorI                         shift and go to state 87
    valor                          shift and go to state 88
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72

state 55

    (153) impresion -> PRINT PAR_I . valorI PAR_D
    (154) valorI -> . valor MAS valorI
    (155) valorI -> . valor
    (114) valor -> . STRING
    (115) valor -> . CHAR
    (116) valor -> . VARIABLE
    (117) valor -> . numeros
    (118) valor -> . booleanos
    (119) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (120) valor -> . VARIABLE PAR_I INT PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valorI                         shift and go to state 89
    valor                          shift and go to state 88
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72

state 56

    (156) entrada -> READLINE PAR_I . PAR_D

    PAR_D           shift and go to state 90


state 57

    (44) asignacion -> VAR VARIABLE . IGUAL VARIABLE
    (46) asignacion -> VAR VARIABLE . IGUAL aritmetica
    (48) asignacion -> VAR VARIABLE . IGUAL returnfun
    (184) asignacion -> VAR VARIABLE . IGUAL tuple
    (186) asignacion -> VAR VARIABLE . dectipoTupla IGUAL tuple
    (59) asignacionLong -> VAR VARIABLE . IGUAL LONG
    (60) asignacionLong -> VAR VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> VAR VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> VAR VARIABLE . IGUAL INT
    (66) asignacionInt -> VAR VARIABLE . DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> VAR VARIABLE . DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> VAR VARIABLE . IGUAL FLOAT
    (72) asignacionFloat -> VAR VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> VAR VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> VAR VARIABLE . IGUAL DOUBLE
    (78) asignacionDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> VAR VARIABLE . IGUAL STRING
    (84) asignacionString -> VAR VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> VAR VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> VAR VARIABLE . IGUAL CHAR
    (90) asignacionChar -> VAR VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> VAR VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> VAR VARIABLE . IGUAL booleanos
    (96) asignacionBoolean -> VAR VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> VAR VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> VAR VARIABLE . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (147) dectipoTupla -> . DOBLE_PUNTO PAR_I tipos PAR_D

    IGUAL           shift and go to state 91
    DOBLE_PUNTO     shift and go to state 93

    dectipoTupla                   shift and go to state 92

state 58

    (45) asignacion -> VAL VARIABLE . IGUAL VARIABLE
    (47) asignacion -> VAL VARIABLE . IGUAL aritmetica
    (49) asignacion -> VAL VARIABLE . IGUAL returnfun
    (185) asignacion -> VAL VARIABLE . IGUAL tuple
    (187) asignacion -> VAL VARIABLE . dectipoTupla IGUAL tuple
    (61) asignacionLong -> VAL VARIABLE . IGUAL LONG
    (62) asignacionLong -> VAL VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL LONG
    (64) asignacionLong -> VAL VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (67) asignacionInt -> VAL VARIABLE . IGUAL INT
    (68) asignacionInt -> VAL VARIABLE . DOBLE_PUNTO INTCLASS IGUAL INT
    (70) asignacionInt -> VAL VARIABLE . DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (73) asignacionFloat -> VAL VARIABLE . IGUAL FLOAT
    (74) asignacionFloat -> VAL VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (76) asignacionFloat -> VAL VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (79) asignacionDouble -> VAL VARIABLE . IGUAL DOUBLE
    (80) asignacionDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (82) asignacionDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (85) asignacionString -> VAL VARIABLE . IGUAL STRING
    (86) asignacionString -> VAL VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (88) asignacionString -> VAL VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (91) asignacionChar -> VAL VARIABLE . IGUAL CHAR
    (92) asignacionChar -> VAL VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (94) asignacionChar -> VAL VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (97) asignacionBoolean -> VAL VARIABLE . IGUAL booleanos
    (98) asignacionBoolean -> VAL VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (100) asignacionBoolean -> VAL VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (175) array -> VAL VARIABLE . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> VAL VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> VAL VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> VAL VARIABLE . IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> VAL VARIABLE . DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> VAL VARIABLE . DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (147) dectipoTupla -> . DOBLE_PUNTO PAR_I tipos PAR_D

    IGUAL           shift and go to state 94
    DOBLE_PUNTO     shift and go to state 96

    dectipoTupla                   shift and go to state 95

state 59

    (188) while -> WHILE PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (241) condicional -> . valorC logicos condicional
    (242) condicional -> . valorC
    (243) valorC -> . VARIABLE
    (244) valorC -> . booleanos
    (245) valorC -> . relacional
    (246) valorC -> . NOT VARIABLE
    (247) valorC -> . NOT booleanos
    (248) valorC -> . NOT relacional
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE
    (252) relacional -> . numeros comparacion numeros
    (253) relacional -> . aritmetica comparacion aritmetica
    (254) relacional -> . aritmetica comparacion numeros
    (255) relacional -> . numeros comparacion aritmetica
    (256) relacional -> . booleanos comparacion booleanos
    (257) relacional -> . STRING comparacion STRING
    (258) relacional -> . CHAR comparacion CHAR
    (259) relacional -> . VARIABLE comparacion numeros
    (260) relacional -> . numeros comparacion VARIABLE
    (261) relacional -> . VARIABLE comparacion booleanos
    (262) relacional -> . booleanos comparacion VARIABLE
    (263) relacional -> . VARIABLE comparacion STRING
    (264) relacional -> . STRING comparacion VARIABLE
    (265) relacional -> . VARIABLE comparacion CHAR
    (266) relacional -> . CHAR comparacion VARIABLE
    (267) relacional -> . VARIABLE comparacion VARIABLE
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 99
    NOT             shift and go to state 102
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    STRING          shift and go to state 105
    CHAR            shift and go to state 106
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    condicional                    shift and go to state 97
    valorC                         shift and go to state 98
    booleanos                      shift and go to state 100
    relacional                     shift and go to state 101
    numeros                        shift and go to state 103
    aritmetica                     shift and go to state 104

state 60

    (189) for -> FOR PAR_I . VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> FOR PAR_I . VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> FOR PAR_I . VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> FOR PAR_I . VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> FOR PAR_I . VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> FOR PAR_I . VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VAR             shift and go to state 107
    VARIABLE        shift and go to state 108


state 61

    (234) if -> IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (241) condicional -> . valorC logicos condicional
    (242) condicional -> . valorC
    (243) valorC -> . VARIABLE
    (244) valorC -> . booleanos
    (245) valorC -> . relacional
    (246) valorC -> . NOT VARIABLE
    (247) valorC -> . NOT booleanos
    (248) valorC -> . NOT relacional
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE
    (252) relacional -> . numeros comparacion numeros
    (253) relacional -> . aritmetica comparacion aritmetica
    (254) relacional -> . aritmetica comparacion numeros
    (255) relacional -> . numeros comparacion aritmetica
    (256) relacional -> . booleanos comparacion booleanos
    (257) relacional -> . STRING comparacion STRING
    (258) relacional -> . CHAR comparacion CHAR
    (259) relacional -> . VARIABLE comparacion numeros
    (260) relacional -> . numeros comparacion VARIABLE
    (261) relacional -> . VARIABLE comparacion booleanos
    (262) relacional -> . booleanos comparacion VARIABLE
    (263) relacional -> . VARIABLE comparacion STRING
    (264) relacional -> . STRING comparacion VARIABLE
    (265) relacional -> . VARIABLE comparacion CHAR
    (266) relacional -> . CHAR comparacion VARIABLE
    (267) relacional -> . VARIABLE comparacion VARIABLE
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 99
    NOT             shift and go to state 102
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    STRING          shift and go to state 105
    CHAR            shift and go to state 106
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    condicional                    shift and go to state 109
    valorC                         shift and go to state 98
    booleanos                      shift and go to state 100
    relacional                     shift and go to state 101
    numeros                        shift and go to state 103
    aritmetica                     shift and go to state 104

state 62

    (3) io -> VARIABLE PUNTO VARIABLE PUNTO . VARIABLE PUNTO READLINE

    VARIABLE        shift and go to state 110


state 63

    (160) varparen -> varparen PAR_I . valores PAR_D
    (161) varparen -> varparen PAR_I . PAR_D
    (181) valores -> . valor
    (182) valores -> . valor COMA valores
    (114) valor -> . STRING
    (115) valor -> . CHAR
    (116) valor -> . VARIABLE
    (117) valor -> . numeros
    (118) valor -> . booleanos
    (119) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (120) valor -> . VARIABLE PAR_I INT PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    PAR_D           shift and go to state 112
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valores                        shift and go to state 111
    valor                          shift and go to state 67
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72

state 64

    (195) match -> VARIABLE MATCH LLAVE_I . cases LLAVE_D
    (196) cases -> . casesInt
    (197) cases -> . casesLgn
    (198) cases -> . casesFlt
    (199) cases -> . casesDob
    (200) cases -> . casesStr
    (201) cases -> . casesChar
    (202) cases -> . casesBool
    (204) casesInt -> . caseInt
    (205) casesInt -> . caseInt casesInt
    (206) casesInt -> . caseInt defcase
    (208) casesLgn -> . caseLgn
    (209) casesLgn -> . caseLgn casesLgn
    (210) casesLgn -> . caseLgn defcase
    (212) casesFlt -> . caseFlt
    (213) casesFlt -> . caseFlt casesFlt
    (214) casesFlt -> . caseFlt defcase
    (216) casesDob -> . caseDob
    (217) casesDob -> . caseDob casesDob
    (218) casesDob -> . caseDob defcase
    (220) casesStr -> . caseStr
    (221) casesStr -> . caseStr casesStr
    (222) casesStr -> . caseStr defcase
    (224) casesChar -> . caseChar
    (225) casesChar -> . caseChar casesChar
    (226) casesChar -> . caseChar defcase
    (228) casesBool -> . caseBool
    (229) casesBool -> . caseBool casesBool
    (230) casesBool -> . caseBool defcase
    (203) caseInt -> . CASE INT FUNCION_FLECHA codeBlock
    (207) caseLgn -> . CASE LONG FUNCION_FLECHA codeBlock
    (211) caseFlt -> . CASE FLOAT FUNCION_FLECHA codeBlock
    (215) caseDob -> . CASE DOUBLE FUNCION_FLECHA codeBlock
    (219) caseStr -> . CASE STRING FUNCION_FLECHA codeBlock
    (223) caseChar -> . CASE CHAR FUNCION_FLECHA codeBlock
    (227) caseBool -> . CASE booleanos FUNCION_FLECHA codeBlock

    CASE            shift and go to state 128

    cases                          shift and go to state 113
    casesInt                       shift and go to state 114
    casesLgn                       shift and go to state 115
    casesFlt                       shift and go to state 116
    casesDob                       shift and go to state 117
    casesStr                       shift and go to state 118
    casesChar                      shift and go to state 119
    casesBool                      shift and go to state 120
    caseInt                        shift and go to state 121
    caseLgn                        shift and go to state 122
    caseFlt                        shift and go to state 123
    caseDob                        shift and go to state 124
    caseStr                        shift and go to state 125
    caseChar                       shift and go to state 126
    caseBool                       shift and go to state 127

state 65

    (158) varparen -> PAR_I valores . PAR_D

    PAR_D           shift and go to state 129


state 66

    (159) varparen -> PAR_I PAR_D .

    PAR_I           reduce using rule 159 (varparen -> PAR_I PAR_D .)
    LLAVE_D         reduce using rule 159 (varparen -> PAR_I PAR_D .)
    VAR             reduce using rule 159 (varparen -> PAR_I PAR_D .)
    VAL             reduce using rule 159 (varparen -> PAR_I PAR_D .)
    VARIABLE        reduce using rule 159 (varparen -> PAR_I PAR_D .)
    PRINTLN         reduce using rule 159 (varparen -> PAR_I PAR_D .)
    PRINT           reduce using rule 159 (varparen -> PAR_I PAR_D .)
    READLINE        reduce using rule 159 (varparen -> PAR_I PAR_D .)
    WHILE           reduce using rule 159 (varparen -> PAR_I PAR_D .)
    FOR             reduce using rule 159 (varparen -> PAR_I PAR_D .)
    IF              reduce using rule 159 (varparen -> PAR_I PAR_D .)
    INT             reduce using rule 159 (varparen -> PAR_I PAR_D .)
    LONG            reduce using rule 159 (varparen -> PAR_I PAR_D .)
    FLOAT           reduce using rule 159 (varparen -> PAR_I PAR_D .)
    DOUBLE          reduce using rule 159 (varparen -> PAR_I PAR_D .)
    RETURN          reduce using rule 159 (varparen -> PAR_I PAR_D .)
    PUNTO           reduce using rule 159 (varparen -> PAR_I PAR_D .)
    DEF             reduce using rule 159 (varparen -> PAR_I PAR_D .)
    CASE            reduce using rule 159 (varparen -> PAR_I PAR_D .)


state 67

    (181) valores -> valor .
    (182) valores -> valor . COMA valores

    PAR_D           reduce using rule 181 (valores -> valor .)
    COMA            shift and go to state 130


state 68

    (114) valor -> STRING .

    COMA            reduce using rule 114 (valor -> STRING .)
    PAR_D           reduce using rule 114 (valor -> STRING .)
    MAS             reduce using rule 114 (valor -> STRING .)
    VAR             reduce using rule 114 (valor -> STRING .)
    VAL             reduce using rule 114 (valor -> STRING .)
    VARIABLE        reduce using rule 114 (valor -> STRING .)
    PRINTLN         reduce using rule 114 (valor -> STRING .)
    PRINT           reduce using rule 114 (valor -> STRING .)
    READLINE        reduce using rule 114 (valor -> STRING .)
    WHILE           reduce using rule 114 (valor -> STRING .)
    FOR             reduce using rule 114 (valor -> STRING .)
    IF              reduce using rule 114 (valor -> STRING .)
    INT             reduce using rule 114 (valor -> STRING .)
    LONG            reduce using rule 114 (valor -> STRING .)
    FLOAT           reduce using rule 114 (valor -> STRING .)
    DOUBLE          reduce using rule 114 (valor -> STRING .)
    LLAVE_D         reduce using rule 114 (valor -> STRING .)
    RETURN          reduce using rule 114 (valor -> STRING .)
    CASE            reduce using rule 114 (valor -> STRING .)


state 69

    (115) valor -> CHAR .

    COMA            reduce using rule 115 (valor -> CHAR .)
    PAR_D           reduce using rule 115 (valor -> CHAR .)
    MAS             reduce using rule 115 (valor -> CHAR .)
    VAR             reduce using rule 115 (valor -> CHAR .)
    VAL             reduce using rule 115 (valor -> CHAR .)
    VARIABLE        reduce using rule 115 (valor -> CHAR .)
    PRINTLN         reduce using rule 115 (valor -> CHAR .)
    PRINT           reduce using rule 115 (valor -> CHAR .)
    READLINE        reduce using rule 115 (valor -> CHAR .)
    WHILE           reduce using rule 115 (valor -> CHAR .)
    FOR             reduce using rule 115 (valor -> CHAR .)
    IF              reduce using rule 115 (valor -> CHAR .)
    INT             reduce using rule 115 (valor -> CHAR .)
    LONG            reduce using rule 115 (valor -> CHAR .)
    FLOAT           reduce using rule 115 (valor -> CHAR .)
    DOUBLE          reduce using rule 115 (valor -> CHAR .)
    LLAVE_D         reduce using rule 115 (valor -> CHAR .)
    RETURN          reduce using rule 115 (valor -> CHAR .)
    CASE            reduce using rule 115 (valor -> CHAR .)


state 70

    (116) valor -> VARIABLE .
    (119) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (120) valor -> VARIABLE . PAR_I INT PAR_D

    COMA            reduce using rule 116 (valor -> VARIABLE .)
    PAR_D           reduce using rule 116 (valor -> VARIABLE .)
    MAS             reduce using rule 116 (valor -> VARIABLE .)
    VAR             reduce using rule 116 (valor -> VARIABLE .)
    VAL             reduce using rule 116 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 116 (valor -> VARIABLE .)
    PRINTLN         reduce using rule 116 (valor -> VARIABLE .)
    PRINT           reduce using rule 116 (valor -> VARIABLE .)
    READLINE        reduce using rule 116 (valor -> VARIABLE .)
    WHILE           reduce using rule 116 (valor -> VARIABLE .)
    FOR             reduce using rule 116 (valor -> VARIABLE .)
    IF              reduce using rule 116 (valor -> VARIABLE .)
    INT             reduce using rule 116 (valor -> VARIABLE .)
    LONG            reduce using rule 116 (valor -> VARIABLE .)
    FLOAT           reduce using rule 116 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 116 (valor -> VARIABLE .)
    LLAVE_D         reduce using rule 116 (valor -> VARIABLE .)
    RETURN          reduce using rule 116 (valor -> VARIABLE .)
    CASE            reduce using rule 116 (valor -> VARIABLE .)
    PAR_I           shift and go to state 131


state 71

    (117) valor -> numeros .

    COMA            reduce using rule 117 (valor -> numeros .)
    PAR_D           reduce using rule 117 (valor -> numeros .)
    MAS             reduce using rule 117 (valor -> numeros .)
    VAR             reduce using rule 117 (valor -> numeros .)
    VAL             reduce using rule 117 (valor -> numeros .)
    VARIABLE        reduce using rule 117 (valor -> numeros .)
    PRINTLN         reduce using rule 117 (valor -> numeros .)
    PRINT           reduce using rule 117 (valor -> numeros .)
    READLINE        reduce using rule 117 (valor -> numeros .)
    WHILE           reduce using rule 117 (valor -> numeros .)
    FOR             reduce using rule 117 (valor -> numeros .)
    IF              reduce using rule 117 (valor -> numeros .)
    INT             reduce using rule 117 (valor -> numeros .)
    LONG            reduce using rule 117 (valor -> numeros .)
    FLOAT           reduce using rule 117 (valor -> numeros .)
    DOUBLE          reduce using rule 117 (valor -> numeros .)
    LLAVE_D         reduce using rule 117 (valor -> numeros .)
    RETURN          reduce using rule 117 (valor -> numeros .)
    CASE            reduce using rule 117 (valor -> numeros .)


state 72

    (118) valor -> booleanos .

    COMA            reduce using rule 118 (valor -> booleanos .)
    PAR_D           reduce using rule 118 (valor -> booleanos .)
    MAS             reduce using rule 118 (valor -> booleanos .)
    VAR             reduce using rule 118 (valor -> booleanos .)
    VAL             reduce using rule 118 (valor -> booleanos .)
    VARIABLE        reduce using rule 118 (valor -> booleanos .)
    PRINTLN         reduce using rule 118 (valor -> booleanos .)
    PRINT           reduce using rule 118 (valor -> booleanos .)
    READLINE        reduce using rule 118 (valor -> booleanos .)
    WHILE           reduce using rule 118 (valor -> booleanos .)
    FOR             reduce using rule 118 (valor -> booleanos .)
    IF              reduce using rule 118 (valor -> booleanos .)
    INT             reduce using rule 118 (valor -> booleanos .)
    LONG            reduce using rule 118 (valor -> booleanos .)
    FLOAT           reduce using rule 118 (valor -> booleanos .)
    DOUBLE          reduce using rule 118 (valor -> booleanos .)
    LLAVE_D         reduce using rule 118 (valor -> booleanos .)
    RETURN          reduce using rule 118 (valor -> booleanos .)
    CASE            reduce using rule 118 (valor -> booleanos .)


state 73

    (123) numeros -> INT .

    COMA            reduce using rule 123 (numeros -> INT .)
    PAR_D           reduce using rule 123 (numeros -> INT .)
    MAS             reduce using rule 123 (numeros -> INT .)
    IGUAL_COMPARACION reduce using rule 123 (numeros -> INT .)
    DIFERENTE       reduce using rule 123 (numeros -> INT .)
    MAYOR           reduce using rule 123 (numeros -> INT .)
    MENOR           reduce using rule 123 (numeros -> INT .)
    MENOS           reduce using rule 123 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 123 (numeros -> INT .)
    DIVISION        reduce using rule 123 (numeros -> INT .)
    MOD             reduce using rule 123 (numeros -> INT .)
    AND             reduce using rule 123 (numeros -> INT .)
    OR              reduce using rule 123 (numeros -> INT .)
    NOT             reduce using rule 123 (numeros -> INT .)
    VAR             reduce using rule 123 (numeros -> INT .)
    VAL             reduce using rule 123 (numeros -> INT .)
    VARIABLE        reduce using rule 123 (numeros -> INT .)
    PRINTLN         reduce using rule 123 (numeros -> INT .)
    PRINT           reduce using rule 123 (numeros -> INT .)
    READLINE        reduce using rule 123 (numeros -> INT .)
    WHILE           reduce using rule 123 (numeros -> INT .)
    FOR             reduce using rule 123 (numeros -> INT .)
    IF              reduce using rule 123 (numeros -> INT .)
    INT             reduce using rule 123 (numeros -> INT .)
    LONG            reduce using rule 123 (numeros -> INT .)
    FLOAT           reduce using rule 123 (numeros -> INT .)
    DOUBLE          reduce using rule 123 (numeros -> INT .)
    LLAVE_D         reduce using rule 123 (numeros -> INT .)
    DEF             reduce using rule 123 (numeros -> INT .)
    RETURN          reduce using rule 123 (numeros -> INT .)
    CASE            reduce using rule 123 (numeros -> INT .)


state 74

    (124) numeros -> LONG .

    COMA            reduce using rule 124 (numeros -> LONG .)
    PAR_D           reduce using rule 124 (numeros -> LONG .)
    MAS             reduce using rule 124 (numeros -> LONG .)
    IGUAL_COMPARACION reduce using rule 124 (numeros -> LONG .)
    DIFERENTE       reduce using rule 124 (numeros -> LONG .)
    MAYOR           reduce using rule 124 (numeros -> LONG .)
    MENOR           reduce using rule 124 (numeros -> LONG .)
    MENOS           reduce using rule 124 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 124 (numeros -> LONG .)
    DIVISION        reduce using rule 124 (numeros -> LONG .)
    MOD             reduce using rule 124 (numeros -> LONG .)
    AND             reduce using rule 124 (numeros -> LONG .)
    OR              reduce using rule 124 (numeros -> LONG .)
    NOT             reduce using rule 124 (numeros -> LONG .)
    VAR             reduce using rule 124 (numeros -> LONG .)
    VAL             reduce using rule 124 (numeros -> LONG .)
    VARIABLE        reduce using rule 124 (numeros -> LONG .)
    PRINTLN         reduce using rule 124 (numeros -> LONG .)
    PRINT           reduce using rule 124 (numeros -> LONG .)
    READLINE        reduce using rule 124 (numeros -> LONG .)
    WHILE           reduce using rule 124 (numeros -> LONG .)
    FOR             reduce using rule 124 (numeros -> LONG .)
    IF              reduce using rule 124 (numeros -> LONG .)
    INT             reduce using rule 124 (numeros -> LONG .)
    LONG            reduce using rule 124 (numeros -> LONG .)
    FLOAT           reduce using rule 124 (numeros -> LONG .)
    DOUBLE          reduce using rule 124 (numeros -> LONG .)
    LLAVE_D         reduce using rule 124 (numeros -> LONG .)
    DEF             reduce using rule 124 (numeros -> LONG .)
    RETURN          reduce using rule 124 (numeros -> LONG .)
    CASE            reduce using rule 124 (numeros -> LONG .)


state 75

    (125) numeros -> FLOAT .

    COMA            reduce using rule 125 (numeros -> FLOAT .)
    PAR_D           reduce using rule 125 (numeros -> FLOAT .)
    MAS             reduce using rule 125 (numeros -> FLOAT .)
    IGUAL_COMPARACION reduce using rule 125 (numeros -> FLOAT .)
    DIFERENTE       reduce using rule 125 (numeros -> FLOAT .)
    MAYOR           reduce using rule 125 (numeros -> FLOAT .)
    MENOR           reduce using rule 125 (numeros -> FLOAT .)
    MENOS           reduce using rule 125 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 125 (numeros -> FLOAT .)
    DIVISION        reduce using rule 125 (numeros -> FLOAT .)
    MOD             reduce using rule 125 (numeros -> FLOAT .)
    AND             reduce using rule 125 (numeros -> FLOAT .)
    OR              reduce using rule 125 (numeros -> FLOAT .)
    NOT             reduce using rule 125 (numeros -> FLOAT .)
    VAR             reduce using rule 125 (numeros -> FLOAT .)
    VAL             reduce using rule 125 (numeros -> FLOAT .)
    VARIABLE        reduce using rule 125 (numeros -> FLOAT .)
    PRINTLN         reduce using rule 125 (numeros -> FLOAT .)
    PRINT           reduce using rule 125 (numeros -> FLOAT .)
    READLINE        reduce using rule 125 (numeros -> FLOAT .)
    WHILE           reduce using rule 125 (numeros -> FLOAT .)
    FOR             reduce using rule 125 (numeros -> FLOAT .)
    IF              reduce using rule 125 (numeros -> FLOAT .)
    INT             reduce using rule 125 (numeros -> FLOAT .)
    LONG            reduce using rule 125 (numeros -> FLOAT .)
    FLOAT           reduce using rule 125 (numeros -> FLOAT .)
    DOUBLE          reduce using rule 125 (numeros -> FLOAT .)
    LLAVE_D         reduce using rule 125 (numeros -> FLOAT .)
    DEF             reduce using rule 125 (numeros -> FLOAT .)
    RETURN          reduce using rule 125 (numeros -> FLOAT .)
    CASE            reduce using rule 125 (numeros -> FLOAT .)


state 76

    (126) numeros -> DOUBLE .

    COMA            reduce using rule 126 (numeros -> DOUBLE .)
    PAR_D           reduce using rule 126 (numeros -> DOUBLE .)
    MAS             reduce using rule 126 (numeros -> DOUBLE .)
    IGUAL_COMPARACION reduce using rule 126 (numeros -> DOUBLE .)
    DIFERENTE       reduce using rule 126 (numeros -> DOUBLE .)
    MAYOR           reduce using rule 126 (numeros -> DOUBLE .)
    MENOR           reduce using rule 126 (numeros -> DOUBLE .)
    MENOS           reduce using rule 126 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 126 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 126 (numeros -> DOUBLE .)
    MOD             reduce using rule 126 (numeros -> DOUBLE .)
    AND             reduce using rule 126 (numeros -> DOUBLE .)
    OR              reduce using rule 126 (numeros -> DOUBLE .)
    NOT             reduce using rule 126 (numeros -> DOUBLE .)
    VAR             reduce using rule 126 (numeros -> DOUBLE .)
    VAL             reduce using rule 126 (numeros -> DOUBLE .)
    VARIABLE        reduce using rule 126 (numeros -> DOUBLE .)
    PRINTLN         reduce using rule 126 (numeros -> DOUBLE .)
    PRINT           reduce using rule 126 (numeros -> DOUBLE .)
    READLINE        reduce using rule 126 (numeros -> DOUBLE .)
    WHILE           reduce using rule 126 (numeros -> DOUBLE .)
    FOR             reduce using rule 126 (numeros -> DOUBLE .)
    IF              reduce using rule 126 (numeros -> DOUBLE .)
    INT             reduce using rule 126 (numeros -> DOUBLE .)
    LONG            reduce using rule 126 (numeros -> DOUBLE .)
    FLOAT           reduce using rule 126 (numeros -> DOUBLE .)
    DOUBLE          reduce using rule 126 (numeros -> DOUBLE .)
    LLAVE_D         reduce using rule 126 (numeros -> DOUBLE .)
    DEF             reduce using rule 126 (numeros -> DOUBLE .)
    RETURN          reduce using rule 126 (numeros -> DOUBLE .)
    CASE            reduce using rule 126 (numeros -> DOUBLE .)


state 77

    (121) booleanos -> TRUE .

    COMA            reduce using rule 121 (booleanos -> TRUE .)
    PAR_D           reduce using rule 121 (booleanos -> TRUE .)
    MAS             reduce using rule 121 (booleanos -> TRUE .)
    IGUAL_COMPARACION reduce using rule 121 (booleanos -> TRUE .)
    DIFERENTE       reduce using rule 121 (booleanos -> TRUE .)
    MAYOR           reduce using rule 121 (booleanos -> TRUE .)
    MENOR           reduce using rule 121 (booleanos -> TRUE .)
    AND             reduce using rule 121 (booleanos -> TRUE .)
    OR              reduce using rule 121 (booleanos -> TRUE .)
    NOT             reduce using rule 121 (booleanos -> TRUE .)
    DEF             reduce using rule 121 (booleanos -> TRUE .)
    VARIABLE        reduce using rule 121 (booleanos -> TRUE .)
    PRINTLN         reduce using rule 121 (booleanos -> TRUE .)
    PRINT           reduce using rule 121 (booleanos -> TRUE .)
    READLINE        reduce using rule 121 (booleanos -> TRUE .)
    VAR             reduce using rule 121 (booleanos -> TRUE .)
    VAL             reduce using rule 121 (booleanos -> TRUE .)
    WHILE           reduce using rule 121 (booleanos -> TRUE .)
    FOR             reduce using rule 121 (booleanos -> TRUE .)
    IF              reduce using rule 121 (booleanos -> TRUE .)
    LLAVE_D         reduce using rule 121 (booleanos -> TRUE .)
    INT             reduce using rule 121 (booleanos -> TRUE .)
    LONG            reduce using rule 121 (booleanos -> TRUE .)
    FLOAT           reduce using rule 121 (booleanos -> TRUE .)
    DOUBLE          reduce using rule 121 (booleanos -> TRUE .)
    RETURN          reduce using rule 121 (booleanos -> TRUE .)
    CASE            reduce using rule 121 (booleanos -> TRUE .)
    FUNCION_FLECHA  reduce using rule 121 (booleanos -> TRUE .)


state 78

    (122) booleanos -> FLASE .

    COMA            reduce using rule 122 (booleanos -> FLASE .)
    PAR_D           reduce using rule 122 (booleanos -> FLASE .)
    MAS             reduce using rule 122 (booleanos -> FLASE .)
    IGUAL_COMPARACION reduce using rule 122 (booleanos -> FLASE .)
    DIFERENTE       reduce using rule 122 (booleanos -> FLASE .)
    MAYOR           reduce using rule 122 (booleanos -> FLASE .)
    MENOR           reduce using rule 122 (booleanos -> FLASE .)
    AND             reduce using rule 122 (booleanos -> FLASE .)
    OR              reduce using rule 122 (booleanos -> FLASE .)
    NOT             reduce using rule 122 (booleanos -> FLASE .)
    DEF             reduce using rule 122 (booleanos -> FLASE .)
    VARIABLE        reduce using rule 122 (booleanos -> FLASE .)
    PRINTLN         reduce using rule 122 (booleanos -> FLASE .)
    PRINT           reduce using rule 122 (booleanos -> FLASE .)
    READLINE        reduce using rule 122 (booleanos -> FLASE .)
    VAR             reduce using rule 122 (booleanos -> FLASE .)
    VAL             reduce using rule 122 (booleanos -> FLASE .)
    WHILE           reduce using rule 122 (booleanos -> FLASE .)
    FOR             reduce using rule 122 (booleanos -> FLASE .)
    IF              reduce using rule 122 (booleanos -> FLASE .)
    LLAVE_D         reduce using rule 122 (booleanos -> FLASE .)
    INT             reduce using rule 122 (booleanos -> FLASE .)
    LONG            reduce using rule 122 (booleanos -> FLASE .)
    FLOAT           reduce using rule 122 (booleanos -> FLASE .)
    DOUBLE          reduce using rule 122 (booleanos -> FLASE .)
    RETURN          reduce using rule 122 (booleanos -> FLASE .)
    CASE            reduce using rule 122 (booleanos -> FLASE .)
    FUNCION_FLECHA  reduce using rule 122 (booleanos -> FLASE .)


state 79

    (240) else -> elseif . else
    (239) else -> . ELSE LLAVE_I contenido LLAVE_D
    (240) else -> . elseif else
    (237) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (238) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    ELSE            shift and go to state 81

    elseif                         shift and go to state 79
    else                           shift and go to state 80

state 80

    (240) else -> elseif else .

    ELSE            reduce using rule 240 (else -> elseif else .)
    DEF             reduce using rule 240 (else -> elseif else .)
    VARIABLE        reduce using rule 240 (else -> elseif else .)
    PRINTLN         reduce using rule 240 (else -> elseif else .)
    PRINT           reduce using rule 240 (else -> elseif else .)
    READLINE        reduce using rule 240 (else -> elseif else .)
    VAR             reduce using rule 240 (else -> elseif else .)
    VAL             reduce using rule 240 (else -> elseif else .)
    WHILE           reduce using rule 240 (else -> elseif else .)
    FOR             reduce using rule 240 (else -> elseif else .)
    IF              reduce using rule 240 (else -> elseif else .)
    LLAVE_D         reduce using rule 240 (else -> elseif else .)
    INT             reduce using rule 240 (else -> elseif else .)
    LONG            reduce using rule 240 (else -> elseif else .)
    FLOAT           reduce using rule 240 (else -> elseif else .)
    DOUBLE          reduce using rule 240 (else -> elseif else .)
    RETURN          reduce using rule 240 (else -> elseif else .)


state 81

    (239) else -> ELSE . LLAVE_I contenido LLAVE_D
    (237) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (238) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    LLAVE_I         shift and go to state 83
    IF              shift and go to state 82


state 82

    (237) elseif -> ELSE IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (238) elseif -> ELSE IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    PAR_I           shift and go to state 132


state 83

    (239) else -> ELSE LLAVE_I . contenido LLAVE_D
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 133
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 84

    (127) funcion -> DEF VARIABLE parametro . IGUAL LLAVE_I contenido LLAVE_D
    (128) funcion -> DEF VARIABLE parametro . LLAVE_I contenido LLAVE_D
    (135) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (136) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (137) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (138) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (139) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (140) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (141) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (142) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (143) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (144) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (145) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (146) dectipo -> . DOBLE_PUNTO tipo
    (147) dectipoTupla -> . DOBLE_PUNTO PAR_I tipos PAR_D

    IGUAL           shift and go to state 146
    LLAVE_I         shift and go to state 147
    DOBLE_PUNTO     shift and go to state 150

    dectipo                        shift and go to state 148
    dectipoTupla                   shift and go to state 149

state 85

    (131) parametro -> parametros .

    IGUAL           reduce using rule 131 (parametro -> parametros .)
    LLAVE_I         reduce using rule 131 (parametro -> parametros .)
    DOBLE_PUNTO     reduce using rule 131 (parametro -> parametros .)


state 86

    (132) parametro -> PAR_I . PAR_D
    (133) parametros -> PAR_I . declaracion PAR_D
    (134) parametros -> PAR_I . declaracion PAR_D parametros
    (129) declaracion -> . VARIABLE DOBLE_PUNTO tipo
    (130) declaracion -> . VARIABLE DOBLE_PUNTO tipo IGUAL valor

    PAR_D           shift and go to state 151
    VARIABLE        shift and go to state 153

    declaracion                    shift and go to state 152

state 87

    (152) impresion -> PRINTLN PAR_I valorI . PAR_D

    PAR_D           shift and go to state 154


state 88

    (154) valorI -> valor . MAS valorI
    (155) valorI -> valor .

    MAS             shift and go to state 155
    PAR_D           reduce using rule 155 (valorI -> valor .)


state 89

    (153) impresion -> PRINT PAR_I valorI . PAR_D

    PAR_D           shift and go to state 156


state 90

    (156) entrada -> READLINE PAR_I PAR_D .

    LLAVE_D         reduce using rule 156 (entrada -> READLINE PAR_I PAR_D .)
    VAR             reduce using rule 156 (entrada -> READLINE PAR_I PAR_D .)
    VAL             reduce using rule 156 (entrada -> READLINE PAR_I PAR_D .)
    VARIABLE        reduce using rule 156 (entrada -> READLINE PAR_I PAR_D .)
    PRINTLN         reduce using rule 156 (entrada -> READLINE PAR_I PAR_D .)
    PRINT           reduce using rule 156 (entrada -> READLINE PAR_I PAR_D .)
    READLINE        reduce using rule 156 (entrada -> READLINE PAR_I PAR_D .)
    WHILE           reduce using rule 156 (entrada -> READLINE PAR_I PAR_D .)
    FOR             reduce using rule 156 (entrada -> READLINE PAR_I PAR_D .)
    IF              reduce using rule 156 (entrada -> READLINE PAR_I PAR_D .)
    INT             reduce using rule 156 (entrada -> READLINE PAR_I PAR_D .)
    LONG            reduce using rule 156 (entrada -> READLINE PAR_I PAR_D .)
    FLOAT           reduce using rule 156 (entrada -> READLINE PAR_I PAR_D .)
    DOUBLE          reduce using rule 156 (entrada -> READLINE PAR_I PAR_D .)
    PUNTO           reduce using rule 156 (entrada -> READLINE PAR_I PAR_D .)
    DEF             reduce using rule 156 (entrada -> READLINE PAR_I PAR_D .)
    RETURN          reduce using rule 156 (entrada -> READLINE PAR_I PAR_D .)
    CASE            reduce using rule 156 (entrada -> READLINE PAR_I PAR_D .)


state 91

    (44) asignacion -> VAR VARIABLE IGUAL . VARIABLE
    (46) asignacion -> VAR VARIABLE IGUAL . aritmetica
    (48) asignacion -> VAR VARIABLE IGUAL . returnfun
    (184) asignacion -> VAR VARIABLE IGUAL . tuple
    (59) asignacionLong -> VAR VARIABLE IGUAL . LONG
    (65) asignacionInt -> VAR VARIABLE IGUAL . INT
    (71) asignacionFloat -> VAR VARIABLE IGUAL . FLOAT
    (77) asignacionDouble -> VAR VARIABLE IGUAL . DOUBLE
    (83) asignacionString -> VAR VARIABLE IGUAL . STRING
    (89) asignacionChar -> VAR VARIABLE IGUAL . CHAR
    (95) asignacionBoolean -> VAR VARIABLE IGUAL . booleanos
    (172) array -> VAR VARIABLE IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (162) returnfun -> . returnCastable
    (163) returnfun -> . castingcall
    (183) tuple -> . PAR_I valores PAR_D
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (164) returnCastable -> . entrada
    (165) returnCastable -> . funcall
    (166) castingcall -> . returnCastable PUNTO castingfun
    (167) castingcall -> . VARIABLE PUNTO castingfun
    (156) entrada -> . READLINE PAR_I PAR_D
    (157) funcall -> . VARIABLE varparen

    VARIABLE        shift and go to state 157
    LONG            shift and go to state 161
    INT             shift and go to state 162
    FLOAT           shift and go to state 163
    DOUBLE          shift and go to state 164
    STRING          shift and go to state 165
    CHAR            shift and go to state 166
    ARRAYCLASS      shift and go to state 168
    PAR_I           shift and go to state 169
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    READLINE        shift and go to state 24

    aritmetica                     shift and go to state 158
    returnfun                      shift and go to state 159
    tuple                          shift and go to state 160
    booleanos                      shift and go to state 167
    numeros                        shift and go to state 145
    returnCastable                 shift and go to state 170
    castingcall                    shift and go to state 171
    entrada                        shift and go to state 172
    funcall                        shift and go to state 173

state 92

    (186) asignacion -> VAR VARIABLE dectipoTupla . IGUAL tuple

    IGUAL           shift and go to state 174


state 93

    (60) asignacionLong -> VAR VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL LONG
    (63) asignacionLong -> VAR VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL VARIABLE
    (66) asignacionInt -> VAR VARIABLE DOBLE_PUNTO . INTCLASS IGUAL INT
    (69) asignacionInt -> VAR VARIABLE DOBLE_PUNTO . INTCLASS IGUAL VARIABLE
    (72) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL VARIABLE
    (78) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL VARIABLE
    (84) asignacionString -> VAR VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL STRING
    (87) asignacionString -> VAR VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL VARIABLE
    (90) asignacionChar -> VAR VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL CHAR
    (93) asignacionChar -> VAR VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL VARIABLE
    (96) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL VARIABLE
    (173) array -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (147) dectipoTupla -> DOBLE_PUNTO . PAR_I tipos PAR_D

    LONGCLASS       shift and go to state 175
    INTCLASS        shift and go to state 176
    FLOATCLASS      shift and go to state 177
    DOUBLECLASS     shift and go to state 178
    STRINGCLASS     shift and go to state 179
    CHARCLASS       shift and go to state 180
    BOOLCLASS       shift and go to state 181
    ARRAYCLASS      shift and go to state 182
    PAR_I           shift and go to state 183


state 94

    (45) asignacion -> VAL VARIABLE IGUAL . VARIABLE
    (47) asignacion -> VAL VARIABLE IGUAL . aritmetica
    (49) asignacion -> VAL VARIABLE IGUAL . returnfun
    (185) asignacion -> VAL VARIABLE IGUAL . tuple
    (61) asignacionLong -> VAL VARIABLE IGUAL . LONG
    (67) asignacionInt -> VAL VARIABLE IGUAL . INT
    (73) asignacionFloat -> VAL VARIABLE IGUAL . FLOAT
    (79) asignacionDouble -> VAL VARIABLE IGUAL . DOUBLE
    (85) asignacionString -> VAL VARIABLE IGUAL . STRING
    (91) asignacionChar -> VAL VARIABLE IGUAL . CHAR
    (97) asignacionBoolean -> VAL VARIABLE IGUAL . booleanos
    (175) array -> VAL VARIABLE IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (178) list -> VAL VARIABLE IGUAL . LISTCLASS PAR_I valores PAR_D
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (162) returnfun -> . returnCastable
    (163) returnfun -> . castingcall
    (183) tuple -> . PAR_I valores PAR_D
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (164) returnCastable -> . entrada
    (165) returnCastable -> . funcall
    (166) castingcall -> . returnCastable PUNTO castingfun
    (167) castingcall -> . VARIABLE PUNTO castingfun
    (156) entrada -> . READLINE PAR_I PAR_D
    (157) funcall -> . VARIABLE varparen

    VARIABLE        shift and go to state 184
    LONG            shift and go to state 188
    INT             shift and go to state 189
    FLOAT           shift and go to state 190
    DOUBLE          shift and go to state 191
    STRING          shift and go to state 192
    CHAR            shift and go to state 193
    ARRAYCLASS      shift and go to state 195
    LISTCLASS       shift and go to state 196
    PAR_I           shift and go to state 169
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    READLINE        shift and go to state 24

    aritmetica                     shift and go to state 185
    returnfun                      shift and go to state 186
    tuple                          shift and go to state 187
    booleanos                      shift and go to state 194
    numeros                        shift and go to state 145
    returnCastable                 shift and go to state 170
    castingcall                    shift and go to state 171
    entrada                        shift and go to state 172
    funcall                        shift and go to state 173

state 95

    (187) asignacion -> VAL VARIABLE dectipoTupla . IGUAL tuple

    IGUAL           shift and go to state 197


state 96

    (62) asignacionLong -> VAL VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL LONG
    (64) asignacionLong -> VAL VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL VARIABLE
    (68) asignacionInt -> VAL VARIABLE DOBLE_PUNTO . INTCLASS IGUAL INT
    (70) asignacionInt -> VAL VARIABLE DOBLE_PUNTO . INTCLASS IGUAL VARIABLE
    (74) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL FLOAT
    (76) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL VARIABLE
    (80) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL DOUBLE
    (82) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL VARIABLE
    (86) asignacionString -> VAL VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL STRING
    (88) asignacionString -> VAL VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL VARIABLE
    (92) asignacionChar -> VAL VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL CHAR
    (94) asignacionChar -> VAL VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL VARIABLE
    (98) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL booleanos
    (100) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL VARIABLE
    (176) array -> VAL VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> VAL VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (179) list -> VAL VARIABLE DOBLE_PUNTO . LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> VAL VARIABLE DOBLE_PUNTO . LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (147) dectipoTupla -> DOBLE_PUNTO . PAR_I tipos PAR_D

    LONGCLASS       shift and go to state 198
    INTCLASS        shift and go to state 199
    FLOATCLASS      shift and go to state 200
    DOUBLECLASS     shift and go to state 201
    STRINGCLASS     shift and go to state 202
    CHARCLASS       shift and go to state 203
    BOOLCLASS       shift and go to state 204
    ARRAYCLASS      shift and go to state 205
    LISTCLASS       shift and go to state 206
    PAR_I           shift and go to state 183


state 97

    (188) while -> WHILE PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 207


state 98

    (241) condicional -> valorC . logicos condicional
    (242) condicional -> valorC .
    (249) logicos -> . AND
    (250) logicos -> . OR
    (251) logicos -> . NOT

    PAR_D           reduce using rule 242 (condicional -> valorC .)
    AND             shift and go to state 209
    OR              shift and go to state 210
    NOT             shift and go to state 211

    logicos                        shift and go to state 208

state 99

    (243) valorC -> VARIABLE .
    (259) relacional -> VARIABLE . comparacion numeros
    (261) relacional -> VARIABLE . comparacion booleanos
    (263) relacional -> VARIABLE . comparacion STRING
    (265) relacional -> VARIABLE . comparacion CHAR
    (267) relacional -> VARIABLE . comparacion VARIABLE
    (273) aritmetica -> VARIABLE . aritmeticos numeros
    (275) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (268) comparacion -> . IGUAL_COMPARACION
    (269) comparacion -> . DIFERENTE
    (270) comparacion -> . MAYOR
    (271) comparacion -> . MENOR
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD

    AND             reduce using rule 243 (valorC -> VARIABLE .)
    OR              reduce using rule 243 (valorC -> VARIABLE .)
    NOT             reduce using rule 243 (valorC -> VARIABLE .)
    PAR_D           reduce using rule 243 (valorC -> VARIABLE .)
    IGUAL_COMPARACION shift and go to state 214
    DIFERENTE       shift and go to state 215
    MAYOR           shift and go to state 216
    MENOR           shift and go to state 217
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222

    comparacion                    shift and go to state 212
    aritmeticos                    shift and go to state 213

state 100

    (244) valorC -> booleanos .
    (256) relacional -> booleanos . comparacion booleanos
    (262) relacional -> booleanos . comparacion VARIABLE
    (268) comparacion -> . IGUAL_COMPARACION
    (269) comparacion -> . DIFERENTE
    (270) comparacion -> . MAYOR
    (271) comparacion -> . MENOR

    AND             reduce using rule 244 (valorC -> booleanos .)
    OR              reduce using rule 244 (valorC -> booleanos .)
    NOT             reduce using rule 244 (valorC -> booleanos .)
    PAR_D           reduce using rule 244 (valorC -> booleanos .)
    IGUAL_COMPARACION shift and go to state 214
    DIFERENTE       shift and go to state 215
    MAYOR           shift and go to state 216
    MENOR           shift and go to state 217

    comparacion                    shift and go to state 223

state 101

    (245) valorC -> relacional .

    AND             reduce using rule 245 (valorC -> relacional .)
    OR              reduce using rule 245 (valorC -> relacional .)
    NOT             reduce using rule 245 (valorC -> relacional .)
    PAR_D           reduce using rule 245 (valorC -> relacional .)


state 102

    (246) valorC -> NOT . VARIABLE
    (247) valorC -> NOT . booleanos
    (248) valorC -> NOT . relacional
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE
    (252) relacional -> . numeros comparacion numeros
    (253) relacional -> . aritmetica comparacion aritmetica
    (254) relacional -> . aritmetica comparacion numeros
    (255) relacional -> . numeros comparacion aritmetica
    (256) relacional -> . booleanos comparacion booleanos
    (257) relacional -> . STRING comparacion STRING
    (258) relacional -> . CHAR comparacion CHAR
    (259) relacional -> . VARIABLE comparacion numeros
    (260) relacional -> . numeros comparacion VARIABLE
    (261) relacional -> . VARIABLE comparacion booleanos
    (262) relacional -> . booleanos comparacion VARIABLE
    (263) relacional -> . VARIABLE comparacion STRING
    (264) relacional -> . STRING comparacion VARIABLE
    (265) relacional -> . VARIABLE comparacion CHAR
    (266) relacional -> . CHAR comparacion VARIABLE
    (267) relacional -> . VARIABLE comparacion VARIABLE
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 224
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    STRING          shift and go to state 105
    CHAR            shift and go to state 106
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    booleanos                      shift and go to state 225
    relacional                     shift and go to state 226
    numeros                        shift and go to state 103
    aritmetica                     shift and go to state 104

state 103

    (252) relacional -> numeros . comparacion numeros
    (255) relacional -> numeros . comparacion aritmetica
    (260) relacional -> numeros . comparacion VARIABLE
    (272) aritmetica -> numeros . aritmeticos numeros
    (274) aritmetica -> numeros . aritmeticos VARIABLE
    (268) comparacion -> . IGUAL_COMPARACION
    (269) comparacion -> . DIFERENTE
    (270) comparacion -> . MAYOR
    (271) comparacion -> . MENOR
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD

    IGUAL_COMPARACION shift and go to state 214
    DIFERENTE       shift and go to state 215
    MAYOR           shift and go to state 216
    MENOR           shift and go to state 217
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222

    comparacion                    shift and go to state 227
    aritmeticos                    shift and go to state 228

state 104

    (253) relacional -> aritmetica . comparacion aritmetica
    (254) relacional -> aritmetica . comparacion numeros
    (276) aritmetica -> aritmetica . aritmeticos numeros
    (277) aritmetica -> aritmetica . aritmeticos VARIABLE
    (268) comparacion -> . IGUAL_COMPARACION
    (269) comparacion -> . DIFERENTE
    (270) comparacion -> . MAYOR
    (271) comparacion -> . MENOR
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD

    IGUAL_COMPARACION shift and go to state 214
    DIFERENTE       shift and go to state 215
    MAYOR           shift and go to state 216
    MENOR           shift and go to state 217
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222

    comparacion                    shift and go to state 229
    aritmeticos                    shift and go to state 230

state 105

    (257) relacional -> STRING . comparacion STRING
    (264) relacional -> STRING . comparacion VARIABLE
    (268) comparacion -> . IGUAL_COMPARACION
    (269) comparacion -> . DIFERENTE
    (270) comparacion -> . MAYOR
    (271) comparacion -> . MENOR

    IGUAL_COMPARACION shift and go to state 214
    DIFERENTE       shift and go to state 215
    MAYOR           shift and go to state 216
    MENOR           shift and go to state 217

    comparacion                    shift and go to state 231

state 106

    (258) relacional -> CHAR . comparacion CHAR
    (266) relacional -> CHAR . comparacion VARIABLE
    (268) comparacion -> . IGUAL_COMPARACION
    (269) comparacion -> . DIFERENTE
    (270) comparacion -> . MAYOR
    (271) comparacion -> . MENOR

    IGUAL_COMPARACION shift and go to state 214
    DIFERENTE       shift and go to state 215
    MAYOR           shift and go to state 216
    MENOR           shift and go to state 217

    comparacion                    shift and go to state 232

state 107

    (189) for -> FOR PAR_I VAR . VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> FOR PAR_I VAR . VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> FOR PAR_I VAR . VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 233


state 108

    (190) for -> FOR PAR_I VARIABLE . ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> FOR PAR_I VARIABLE . ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> FOR PAR_I VARIABLE . ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    ITERATOR        shift and go to state 234


state 109

    (234) if -> IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 235


state 110

    (3) io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE . PUNTO READLINE

    PUNTO           shift and go to state 236


state 111

    (160) varparen -> varparen PAR_I valores . PAR_D

    PAR_D           shift and go to state 237


state 112

    (161) varparen -> varparen PAR_I PAR_D .

    PAR_I           reduce using rule 161 (varparen -> varparen PAR_I PAR_D .)
    LLAVE_D         reduce using rule 161 (varparen -> varparen PAR_I PAR_D .)
    VAR             reduce using rule 161 (varparen -> varparen PAR_I PAR_D .)
    VAL             reduce using rule 161 (varparen -> varparen PAR_I PAR_D .)
    VARIABLE        reduce using rule 161 (varparen -> varparen PAR_I PAR_D .)
    PRINTLN         reduce using rule 161 (varparen -> varparen PAR_I PAR_D .)
    PRINT           reduce using rule 161 (varparen -> varparen PAR_I PAR_D .)
    READLINE        reduce using rule 161 (varparen -> varparen PAR_I PAR_D .)
    WHILE           reduce using rule 161 (varparen -> varparen PAR_I PAR_D .)
    FOR             reduce using rule 161 (varparen -> varparen PAR_I PAR_D .)
    IF              reduce using rule 161 (varparen -> varparen PAR_I PAR_D .)
    INT             reduce using rule 161 (varparen -> varparen PAR_I PAR_D .)
    LONG            reduce using rule 161 (varparen -> varparen PAR_I PAR_D .)
    FLOAT           reduce using rule 161 (varparen -> varparen PAR_I PAR_D .)
    DOUBLE          reduce using rule 161 (varparen -> varparen PAR_I PAR_D .)
    RETURN          reduce using rule 161 (varparen -> varparen PAR_I PAR_D .)
    PUNTO           reduce using rule 161 (varparen -> varparen PAR_I PAR_D .)
    DEF             reduce using rule 161 (varparen -> varparen PAR_I PAR_D .)
    CASE            reduce using rule 161 (varparen -> varparen PAR_I PAR_D .)


state 113

    (195) match -> VARIABLE MATCH LLAVE_I cases . LLAVE_D

    LLAVE_D         shift and go to state 238


state 114

    (196) cases -> casesInt .

    LLAVE_D         reduce using rule 196 (cases -> casesInt .)


state 115

    (197) cases -> casesLgn .

    LLAVE_D         reduce using rule 197 (cases -> casesLgn .)


state 116

    (198) cases -> casesFlt .

    LLAVE_D         reduce using rule 198 (cases -> casesFlt .)


state 117

    (199) cases -> casesDob .

    LLAVE_D         reduce using rule 199 (cases -> casesDob .)


state 118

    (200) cases -> casesStr .

    LLAVE_D         reduce using rule 200 (cases -> casesStr .)


state 119

    (201) cases -> casesChar .

    LLAVE_D         reduce using rule 201 (cases -> casesChar .)


state 120

    (202) cases -> casesBool .

    LLAVE_D         reduce using rule 202 (cases -> casesBool .)


state 121

    (204) casesInt -> caseInt .
    (205) casesInt -> caseInt . casesInt
    (206) casesInt -> caseInt . defcase
    (204) casesInt -> . caseInt
    (205) casesInt -> . caseInt casesInt
    (206) casesInt -> . caseInt defcase
    (231) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (203) caseInt -> . CASE INT FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 204 (casesInt -> caseInt .)
    CASE            shift and go to state 241

    caseInt                        shift and go to state 121
    casesInt                       shift and go to state 239
    defcase                        shift and go to state 240

state 122

    (208) casesLgn -> caseLgn .
    (209) casesLgn -> caseLgn . casesLgn
    (210) casesLgn -> caseLgn . defcase
    (208) casesLgn -> . caseLgn
    (209) casesLgn -> . caseLgn casesLgn
    (210) casesLgn -> . caseLgn defcase
    (231) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (207) caseLgn -> . CASE LONG FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 208 (casesLgn -> caseLgn .)
    CASE            shift and go to state 244

    caseLgn                        shift and go to state 122
    casesLgn                       shift and go to state 242
    defcase                        shift and go to state 243

state 123

    (212) casesFlt -> caseFlt .
    (213) casesFlt -> caseFlt . casesFlt
    (214) casesFlt -> caseFlt . defcase
    (212) casesFlt -> . caseFlt
    (213) casesFlt -> . caseFlt casesFlt
    (214) casesFlt -> . caseFlt defcase
    (231) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (211) caseFlt -> . CASE FLOAT FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 212 (casesFlt -> caseFlt .)
    CASE            shift and go to state 247

    caseFlt                        shift and go to state 123
    casesFlt                       shift and go to state 245
    defcase                        shift and go to state 246

state 124

    (216) casesDob -> caseDob .
    (217) casesDob -> caseDob . casesDob
    (218) casesDob -> caseDob . defcase
    (216) casesDob -> . caseDob
    (217) casesDob -> . caseDob casesDob
    (218) casesDob -> . caseDob defcase
    (231) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (215) caseDob -> . CASE DOUBLE FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 216 (casesDob -> caseDob .)
    CASE            shift and go to state 250

    caseDob                        shift and go to state 124
    casesDob                       shift and go to state 248
    defcase                        shift and go to state 249

state 125

    (220) casesStr -> caseStr .
    (221) casesStr -> caseStr . casesStr
    (222) casesStr -> caseStr . defcase
    (220) casesStr -> . caseStr
    (221) casesStr -> . caseStr casesStr
    (222) casesStr -> . caseStr defcase
    (231) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (219) caseStr -> . CASE STRING FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 220 (casesStr -> caseStr .)
    CASE            shift and go to state 253

    caseStr                        shift and go to state 125
    casesStr                       shift and go to state 251
    defcase                        shift and go to state 252

state 126

    (224) casesChar -> caseChar .
    (225) casesChar -> caseChar . casesChar
    (226) casesChar -> caseChar . defcase
    (224) casesChar -> . caseChar
    (225) casesChar -> . caseChar casesChar
    (226) casesChar -> . caseChar defcase
    (231) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (223) caseChar -> . CASE CHAR FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 224 (casesChar -> caseChar .)
    CASE            shift and go to state 256

    caseChar                       shift and go to state 126
    casesChar                      shift and go to state 254
    defcase                        shift and go to state 255

state 127

    (228) casesBool -> caseBool .
    (229) casesBool -> caseBool . casesBool
    (230) casesBool -> caseBool . defcase
    (228) casesBool -> . caseBool
    (229) casesBool -> . caseBool casesBool
    (230) casesBool -> . caseBool defcase
    (231) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (227) caseBool -> . CASE booleanos FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 228 (casesBool -> caseBool .)
    CASE            shift and go to state 259

    caseBool                       shift and go to state 127
    casesBool                      shift and go to state 257
    defcase                        shift and go to state 258

state 128

    (203) caseInt -> CASE . INT FUNCION_FLECHA codeBlock
    (207) caseLgn -> CASE . LONG FUNCION_FLECHA codeBlock
    (211) caseFlt -> CASE . FLOAT FUNCION_FLECHA codeBlock
    (215) caseDob -> CASE . DOUBLE FUNCION_FLECHA codeBlock
    (219) caseStr -> CASE . STRING FUNCION_FLECHA codeBlock
    (223) caseChar -> CASE . CHAR FUNCION_FLECHA codeBlock
    (227) caseBool -> CASE . booleanos FUNCION_FLECHA codeBlock
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    INT             shift and go to state 260
    LONG            shift and go to state 261
    FLOAT           shift and go to state 262
    DOUBLE          shift and go to state 263
    STRING          shift and go to state 264
    CHAR            shift and go to state 265
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    booleanos                      shift and go to state 266

state 129

    (158) varparen -> PAR_I valores PAR_D .

    PAR_I           reduce using rule 158 (varparen -> PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 158 (varparen -> PAR_I valores PAR_D .)
    VAR             reduce using rule 158 (varparen -> PAR_I valores PAR_D .)
    VAL             reduce using rule 158 (varparen -> PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 158 (varparen -> PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 158 (varparen -> PAR_I valores PAR_D .)
    PRINT           reduce using rule 158 (varparen -> PAR_I valores PAR_D .)
    READLINE        reduce using rule 158 (varparen -> PAR_I valores PAR_D .)
    WHILE           reduce using rule 158 (varparen -> PAR_I valores PAR_D .)
    FOR             reduce using rule 158 (varparen -> PAR_I valores PAR_D .)
    IF              reduce using rule 158 (varparen -> PAR_I valores PAR_D .)
    INT             reduce using rule 158 (varparen -> PAR_I valores PAR_D .)
    LONG            reduce using rule 158 (varparen -> PAR_I valores PAR_D .)
    FLOAT           reduce using rule 158 (varparen -> PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 158 (varparen -> PAR_I valores PAR_D .)
    RETURN          reduce using rule 158 (varparen -> PAR_I valores PAR_D .)
    PUNTO           reduce using rule 158 (varparen -> PAR_I valores PAR_D .)
    DEF             reduce using rule 158 (varparen -> PAR_I valores PAR_D .)
    CASE            reduce using rule 158 (varparen -> PAR_I valores PAR_D .)


state 130

    (182) valores -> valor COMA . valores
    (181) valores -> . valor
    (182) valores -> . valor COMA valores
    (114) valor -> . STRING
    (115) valor -> . CHAR
    (116) valor -> . VARIABLE
    (117) valor -> . numeros
    (118) valor -> . booleanos
    (119) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (120) valor -> . VARIABLE PAR_I INT PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valor                          shift and go to state 67
    valores                        shift and go to state 267
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72

state 131

    (119) valor -> VARIABLE PAR_I . VARIABLE PAR_D
    (120) valor -> VARIABLE PAR_I . INT PAR_D

    VARIABLE        shift and go to state 268
    INT             shift and go to state 269


state 132

    (237) elseif -> ELSE IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (238) elseif -> ELSE IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (241) condicional -> . valorC logicos condicional
    (242) condicional -> . valorC
    (243) valorC -> . VARIABLE
    (244) valorC -> . booleanos
    (245) valorC -> . relacional
    (246) valorC -> . NOT VARIABLE
    (247) valorC -> . NOT booleanos
    (248) valorC -> . NOT relacional
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE
    (252) relacional -> . numeros comparacion numeros
    (253) relacional -> . aritmetica comparacion aritmetica
    (254) relacional -> . aritmetica comparacion numeros
    (255) relacional -> . numeros comparacion aritmetica
    (256) relacional -> . booleanos comparacion booleanos
    (257) relacional -> . STRING comparacion STRING
    (258) relacional -> . CHAR comparacion CHAR
    (259) relacional -> . VARIABLE comparacion numeros
    (260) relacional -> . numeros comparacion VARIABLE
    (261) relacional -> . VARIABLE comparacion booleanos
    (262) relacional -> . booleanos comparacion VARIABLE
    (263) relacional -> . VARIABLE comparacion STRING
    (264) relacional -> . STRING comparacion VARIABLE
    (265) relacional -> . VARIABLE comparacion CHAR
    (266) relacional -> . CHAR comparacion VARIABLE
    (267) relacional -> . VARIABLE comparacion VARIABLE
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 99
    NOT             shift and go to state 102
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    STRING          shift and go to state 105
    CHAR            shift and go to state 106
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    condicional                    shift and go to state 270
    valorC                         shift and go to state 98
    booleanos                      shift and go to state 100
    relacional                     shift and go to state 101
    numeros                        shift and go to state 103
    aritmetica                     shift and go to state 104

state 133

    (239) else -> ELSE LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 271


state 134

    (19) contenido -> asignacion .
    (29) contenido -> asignacion . contenido
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 19 (contenido -> asignacion .)
    RETURN          reduce using rule 19 (contenido -> asignacion .)
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    asignacion                     shift and go to state 134
    contenido                      shift and go to state 272
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 135

    (20) contenido -> reasignacion .
    (30) contenido -> reasignacion . contenido
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 20 (contenido -> reasignacion .)
    RETURN          reduce using rule 20 (contenido -> reasignacion .)
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    reasignacion                   shift and go to state 135
    contenido                      shift and go to state 273
    asignacion                     shift and go to state 134
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 136

    (21) contenido -> funcall .
    (31) contenido -> funcall . contenido
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 21 (contenido -> funcall .)
    RETURN          reduce using rule 21 (contenido -> funcall .)
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    funcall                        shift and go to state 136
    contenido                      shift and go to state 274
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 137

    (22) contenido -> impresion .
    (32) contenido -> impresion . contenido
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 22 (contenido -> impresion .)
    RETURN          reduce using rule 22 (contenido -> impresion .)
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    impresion                      shift and go to state 137
    contenido                      shift and go to state 275
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 138

    (23) contenido -> entrada .
    (33) contenido -> entrada . contenido
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 23 (contenido -> entrada .)
    RETURN          reduce using rule 23 (contenido -> entrada .)
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    entrada                        shift and go to state 138
    contenido                      shift and go to state 276
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 139

    (24) contenido -> while .
    (34) contenido -> while . contenido
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 24 (contenido -> while .)
    RETURN          reduce using rule 24 (contenido -> while .)
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    while                          shift and go to state 139
    contenido                      shift and go to state 277
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 140

    (25) contenido -> for .
    (35) contenido -> for . contenido
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 25 (contenido -> for .)
    RETURN          reduce using rule 25 (contenido -> for .)
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    for                            shift and go to state 140
    contenido                      shift and go to state 278
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    match                          shift and go to state 141
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 141

    (26) contenido -> match .
    (37) contenido -> match . contenido
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 26 (contenido -> match .)
    RETURN          reduce using rule 26 (contenido -> match .)
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    match                          shift and go to state 141
    contenido                      shift and go to state 279
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 142

    (27) contenido -> if .
    (36) contenido -> if . contenido
    (235) if -> if . elseif
    (236) if -> if . else
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (237) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (238) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (239) else -> . ELSE LLAVE_I contenido LLAVE_D
    (240) else -> . elseif else
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 27 (contenido -> if .)
    RETURN          reduce using rule 27 (contenido -> if .)
    ELSE            shift and go to state 52
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    if                             shift and go to state 142
    contenido                      shift and go to state 280
    elseif                         shift and go to state 50
    else                           shift and go to state 51
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 143

    (28) contenido -> aritmetica .
    (38) contenido -> aritmetica . contenido
    (276) aritmetica -> aritmetica . aritmeticos numeros
    (277) aritmetica -> aritmetica . aritmeticos VARIABLE
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    LLAVE_D         reduce using rule 28 (contenido -> aritmetica .)
    RETURN          reduce using rule 28 (contenido -> aritmetica .)
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    aritmetica                     shift and go to state 143
    contenido                      shift and go to state 281
    aritmeticos                    shift and go to state 230
    numeros                        shift and go to state 145
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35

state 144

    (101) reasignacion -> VARIABLE . IGUAL valor
    (102) reasignacion -> VARIABLE . IGUAL returnfun
    (103) reasignacion -> VARIABLE . IGUAL aritmetica
    (104) reasignacion -> VARIABLE . PAR_I INT PAR_D IGUAL valor
    (157) funcall -> VARIABLE . varparen
    (195) match -> VARIABLE . MATCH LLAVE_I cases LLAVE_D
    (273) aritmetica -> VARIABLE . aritmeticos numeros
    (275) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (158) varparen -> . PAR_I valores PAR_D
    (159) varparen -> . PAR_I PAR_D
    (160) varparen -> . varparen PAR_I valores PAR_D
    (161) varparen -> . varparen PAR_I PAR_D
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD

    IGUAL           shift and go to state 282
    PAR_I           shift and go to state 283
    MATCH           shift and go to state 41
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222

    varparen                       shift and go to state 40
    aritmeticos                    shift and go to state 213

state 145

    (272) aritmetica -> numeros . aritmeticos numeros
    (274) aritmetica -> numeros . aritmeticos VARIABLE
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD

    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222

    aritmeticos                    shift and go to state 228

state 146

    (127) funcion -> DEF VARIABLE parametro IGUAL . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 284


state 147

    (128) funcion -> DEF VARIABLE parametro LLAVE_I . contenido LLAVE_D
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 285
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 148

    (135) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (136) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (137) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (138) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (139) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I RETURN valor LLAVE_D
    (140) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (141) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (142) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I RETURN aritmetica LLAVE_D

    IGUAL           shift and go to state 286


state 149

    (143) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (144) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (145) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D

    IGUAL           shift and go to state 287


state 150

    (146) dectipo -> DOBLE_PUNTO . tipo
    (147) dectipoTupla -> DOBLE_PUNTO . PAR_I tipos PAR_D
    (105) tipo -> . CHARCLASS
    (106) tipo -> . STRINGCLASS
    (107) tipo -> . BOOLCLASS
    (108) tipo -> . INTCLASS
    (109) tipo -> . LONGCLASS
    (110) tipo -> . DOUBLECLASS
    (111) tipo -> . FLOATCLASS
    (112) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (113) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    PAR_I           shift and go to state 183
    CHARCLASS       shift and go to state 289
    STRINGCLASS     shift and go to state 290
    BOOLCLASS       shift and go to state 291
    INTCLASS        shift and go to state 292
    LONGCLASS       shift and go to state 293
    DOUBLECLASS     shift and go to state 294
    FLOATCLASS      shift and go to state 295
    ARRAYCLASS      shift and go to state 296
    LISTCLASS       shift and go to state 297

    tipo                           shift and go to state 288

state 151

    (132) parametro -> PAR_I PAR_D .

    IGUAL           reduce using rule 132 (parametro -> PAR_I PAR_D .)
    LLAVE_I         reduce using rule 132 (parametro -> PAR_I PAR_D .)
    DOBLE_PUNTO     reduce using rule 132 (parametro -> PAR_I PAR_D .)


state 152

    (133) parametros -> PAR_I declaracion . PAR_D
    (134) parametros -> PAR_I declaracion . PAR_D parametros

    PAR_D           shift and go to state 298


state 153

    (129) declaracion -> VARIABLE . DOBLE_PUNTO tipo
    (130) declaracion -> VARIABLE . DOBLE_PUNTO tipo IGUAL valor

    DOBLE_PUNTO     shift and go to state 299


state 154

    (152) impresion -> PRINTLN PAR_I valorI PAR_D .

    LLAVE_D         reduce using rule 152 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VAR             reduce using rule 152 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VAL             reduce using rule 152 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VARIABLE        reduce using rule 152 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    PRINTLN         reduce using rule 152 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    PRINT           reduce using rule 152 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    READLINE        reduce using rule 152 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    WHILE           reduce using rule 152 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    FOR             reduce using rule 152 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    IF              reduce using rule 152 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    INT             reduce using rule 152 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    LONG            reduce using rule 152 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    FLOAT           reduce using rule 152 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    DOUBLE          reduce using rule 152 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    RETURN          reduce using rule 152 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    CASE            reduce using rule 152 (impresion -> PRINTLN PAR_I valorI PAR_D .)


state 155

    (154) valorI -> valor MAS . valorI
    (154) valorI -> . valor MAS valorI
    (155) valorI -> . valor
    (114) valor -> . STRING
    (115) valor -> . CHAR
    (116) valor -> . VARIABLE
    (117) valor -> . numeros
    (118) valor -> . booleanos
    (119) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (120) valor -> . VARIABLE PAR_I INT PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valor                          shift and go to state 88
    valorI                         shift and go to state 300
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72

state 156

    (153) impresion -> PRINT PAR_I valorI PAR_D .

    LLAVE_D         reduce using rule 153 (impresion -> PRINT PAR_I valorI PAR_D .)
    VAR             reduce using rule 153 (impresion -> PRINT PAR_I valorI PAR_D .)
    VAL             reduce using rule 153 (impresion -> PRINT PAR_I valorI PAR_D .)
    VARIABLE        reduce using rule 153 (impresion -> PRINT PAR_I valorI PAR_D .)
    PRINTLN         reduce using rule 153 (impresion -> PRINT PAR_I valorI PAR_D .)
    PRINT           reduce using rule 153 (impresion -> PRINT PAR_I valorI PAR_D .)
    READLINE        reduce using rule 153 (impresion -> PRINT PAR_I valorI PAR_D .)
    WHILE           reduce using rule 153 (impresion -> PRINT PAR_I valorI PAR_D .)
    FOR             reduce using rule 153 (impresion -> PRINT PAR_I valorI PAR_D .)
    IF              reduce using rule 153 (impresion -> PRINT PAR_I valorI PAR_D .)
    INT             reduce using rule 153 (impresion -> PRINT PAR_I valorI PAR_D .)
    LONG            reduce using rule 153 (impresion -> PRINT PAR_I valorI PAR_D .)
    FLOAT           reduce using rule 153 (impresion -> PRINT PAR_I valorI PAR_D .)
    DOUBLE          reduce using rule 153 (impresion -> PRINT PAR_I valorI PAR_D .)
    RETURN          reduce using rule 153 (impresion -> PRINT PAR_I valorI PAR_D .)
    CASE            reduce using rule 153 (impresion -> PRINT PAR_I valorI PAR_D .)


state 157

    (44) asignacion -> VAR VARIABLE IGUAL VARIABLE .
    (273) aritmetica -> VARIABLE . aritmeticos numeros
    (275) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (167) castingcall -> VARIABLE . PUNTO castingfun
    (157) funcall -> VARIABLE . varparen
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD
    (158) varparen -> . PAR_I valores PAR_D
    (159) varparen -> . PAR_I PAR_D
    (160) varparen -> . varparen PAR_I valores PAR_D
    (161) varparen -> . varparen PAR_I PAR_D

    DEF             reduce using rule 44 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VARIABLE        reduce using rule 44 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PRINTLN         reduce using rule 44 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PRINT           reduce using rule 44 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    READLINE        reduce using rule 44 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VAR             reduce using rule 44 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VAL             reduce using rule 44 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    WHILE           reduce using rule 44 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    FOR             reduce using rule 44 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    IF              reduce using rule 44 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 44 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    INT             reduce using rule 44 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    LONG            reduce using rule 44 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    FLOAT           reduce using rule 44 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    DOUBLE          reduce using rule 44 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    RETURN          reduce using rule 44 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    CASE            reduce using rule 44 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PUNTO           shift and go to state 301
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222
    PAR_I           shift and go to state 42

    aritmeticos                    shift and go to state 213
    varparen                       shift and go to state 40

state 158

    (46) asignacion -> VAR VARIABLE IGUAL aritmetica .
    (276) aritmetica -> aritmetica . aritmeticos numeros
    (277) aritmetica -> aritmetica . aritmeticos VARIABLE
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD

    DEF             reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VAR             reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 46 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222

    aritmeticos                    shift and go to state 230

state 159

    (48) asignacion -> VAR VARIABLE IGUAL returnfun .

    DEF             reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    VARIABLE        reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    PRINTLN         reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    PRINT           reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    READLINE        reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    VAR             reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    VAL             reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    WHILE           reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    FOR             reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    IF              reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    LLAVE_D         reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    INT             reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    LONG            reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    FLOAT           reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    DOUBLE          reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    RETURN          reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    CASE            reduce using rule 48 (asignacion -> VAR VARIABLE IGUAL returnfun .)


state 160

    (184) asignacion -> VAR VARIABLE IGUAL tuple .

    DEF             reduce using rule 184 (asignacion -> VAR VARIABLE IGUAL tuple .)
    VARIABLE        reduce using rule 184 (asignacion -> VAR VARIABLE IGUAL tuple .)
    PRINTLN         reduce using rule 184 (asignacion -> VAR VARIABLE IGUAL tuple .)
    PRINT           reduce using rule 184 (asignacion -> VAR VARIABLE IGUAL tuple .)
    READLINE        reduce using rule 184 (asignacion -> VAR VARIABLE IGUAL tuple .)
    VAR             reduce using rule 184 (asignacion -> VAR VARIABLE IGUAL tuple .)
    VAL             reduce using rule 184 (asignacion -> VAR VARIABLE IGUAL tuple .)
    WHILE           reduce using rule 184 (asignacion -> VAR VARIABLE IGUAL tuple .)
    FOR             reduce using rule 184 (asignacion -> VAR VARIABLE IGUAL tuple .)
    IF              reduce using rule 184 (asignacion -> VAR VARIABLE IGUAL tuple .)
    LLAVE_D         reduce using rule 184 (asignacion -> VAR VARIABLE IGUAL tuple .)
    INT             reduce using rule 184 (asignacion -> VAR VARIABLE IGUAL tuple .)
    LONG            reduce using rule 184 (asignacion -> VAR VARIABLE IGUAL tuple .)
    FLOAT           reduce using rule 184 (asignacion -> VAR VARIABLE IGUAL tuple .)
    DOUBLE          reduce using rule 184 (asignacion -> VAR VARIABLE IGUAL tuple .)
    RETURN          reduce using rule 184 (asignacion -> VAR VARIABLE IGUAL tuple .)
    CASE            reduce using rule 184 (asignacion -> VAR VARIABLE IGUAL tuple .)


state 161

    (59) asignacionLong -> VAR VARIABLE IGUAL LONG .
    (124) numeros -> LONG .

    DEF             reduce using rule 59 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    VARIABLE        reduce using rule 59 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    PRINTLN         reduce using rule 59 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    PRINT           reduce using rule 59 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    READLINE        reduce using rule 59 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    VAR             reduce using rule 59 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    VAL             reduce using rule 59 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    WHILE           reduce using rule 59 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    FOR             reduce using rule 59 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    IF              reduce using rule 59 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    LLAVE_D         reduce using rule 59 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    INT             reduce using rule 59 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    LONG            reduce using rule 59 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    FLOAT           reduce using rule 59 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    DOUBLE          reduce using rule 59 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    RETURN          reduce using rule 59 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    CASE            reduce using rule 59 (asignacionLong -> VAR VARIABLE IGUAL LONG .)
    MENOS           reduce using rule 124 (numeros -> LONG .)
    MAS             reduce using rule 124 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 124 (numeros -> LONG .)
    DIVISION        reduce using rule 124 (numeros -> LONG .)
    MOD             reduce using rule 124 (numeros -> LONG .)


state 162

    (65) asignacionInt -> VAR VARIABLE IGUAL INT .
    (123) numeros -> INT .

    DEF             reduce using rule 65 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    VARIABLE        reduce using rule 65 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    PRINTLN         reduce using rule 65 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    PRINT           reduce using rule 65 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    READLINE        reduce using rule 65 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    VAR             reduce using rule 65 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    VAL             reduce using rule 65 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    WHILE           reduce using rule 65 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    FOR             reduce using rule 65 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    IF              reduce using rule 65 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    LLAVE_D         reduce using rule 65 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    INT             reduce using rule 65 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    LONG            reduce using rule 65 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    FLOAT           reduce using rule 65 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    DOUBLE          reduce using rule 65 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    RETURN          reduce using rule 65 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    CASE            reduce using rule 65 (asignacionInt -> VAR VARIABLE IGUAL INT .)
    MENOS           reduce using rule 123 (numeros -> INT .)
    MAS             reduce using rule 123 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 123 (numeros -> INT .)
    DIVISION        reduce using rule 123 (numeros -> INT .)
    MOD             reduce using rule 123 (numeros -> INT .)


state 163

    (71) asignacionFloat -> VAR VARIABLE IGUAL FLOAT .
    (125) numeros -> FLOAT .

    DEF             reduce using rule 71 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    VARIABLE        reduce using rule 71 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    PRINTLN         reduce using rule 71 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    PRINT           reduce using rule 71 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    READLINE        reduce using rule 71 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    VAR             reduce using rule 71 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    VAL             reduce using rule 71 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    WHILE           reduce using rule 71 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    FOR             reduce using rule 71 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    IF              reduce using rule 71 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    LLAVE_D         reduce using rule 71 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    INT             reduce using rule 71 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    LONG            reduce using rule 71 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    FLOAT           reduce using rule 71 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    DOUBLE          reduce using rule 71 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    RETURN          reduce using rule 71 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    CASE            reduce using rule 71 (asignacionFloat -> VAR VARIABLE IGUAL FLOAT .)
    MENOS           reduce using rule 125 (numeros -> FLOAT .)
    MAS             reduce using rule 125 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 125 (numeros -> FLOAT .)
    DIVISION        reduce using rule 125 (numeros -> FLOAT .)
    MOD             reduce using rule 125 (numeros -> FLOAT .)


state 164

    (77) asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .
    (126) numeros -> DOUBLE .

    DEF             reduce using rule 77 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    VARIABLE        reduce using rule 77 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    PRINTLN         reduce using rule 77 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    PRINT           reduce using rule 77 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    READLINE        reduce using rule 77 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    VAR             reduce using rule 77 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    VAL             reduce using rule 77 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    WHILE           reduce using rule 77 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    FOR             reduce using rule 77 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    IF              reduce using rule 77 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    LLAVE_D         reduce using rule 77 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    INT             reduce using rule 77 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    LONG            reduce using rule 77 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    FLOAT           reduce using rule 77 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    DOUBLE          reduce using rule 77 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    RETURN          reduce using rule 77 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    CASE            reduce using rule 77 (asignacionDouble -> VAR VARIABLE IGUAL DOUBLE .)
    MENOS           reduce using rule 126 (numeros -> DOUBLE .)
    MAS             reduce using rule 126 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 126 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 126 (numeros -> DOUBLE .)
    MOD             reduce using rule 126 (numeros -> DOUBLE .)


state 165

    (83) asignacionString -> VAR VARIABLE IGUAL STRING .

    DEF             reduce using rule 83 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VARIABLE        reduce using rule 83 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PRINTLN         reduce using rule 83 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PRINT           reduce using rule 83 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    READLINE        reduce using rule 83 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VAR             reduce using rule 83 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VAL             reduce using rule 83 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    WHILE           reduce using rule 83 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    FOR             reduce using rule 83 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    IF              reduce using rule 83 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    LLAVE_D         reduce using rule 83 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    INT             reduce using rule 83 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    LONG            reduce using rule 83 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    FLOAT           reduce using rule 83 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    DOUBLE          reduce using rule 83 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    RETURN          reduce using rule 83 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    CASE            reduce using rule 83 (asignacionString -> VAR VARIABLE IGUAL STRING .)


state 166

    (89) asignacionChar -> VAR VARIABLE IGUAL CHAR .

    DEF             reduce using rule 89 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VARIABLE        reduce using rule 89 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    PRINTLN         reduce using rule 89 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    PRINT           reduce using rule 89 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    READLINE        reduce using rule 89 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VAR             reduce using rule 89 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VAL             reduce using rule 89 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    WHILE           reduce using rule 89 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    FOR             reduce using rule 89 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    IF              reduce using rule 89 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    LLAVE_D         reduce using rule 89 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    INT             reduce using rule 89 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    LONG            reduce using rule 89 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    FLOAT           reduce using rule 89 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    DOUBLE          reduce using rule 89 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    RETURN          reduce using rule 89 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    CASE            reduce using rule 89 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)


state 167

    (95) asignacionBoolean -> VAR VARIABLE IGUAL booleanos .

    DEF             reduce using rule 95 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 95 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    PRINTLN         reduce using rule 95 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 95 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    READLINE        reduce using rule 95 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VAR             reduce using rule 95 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VAL             reduce using rule 95 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 95 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    FOR             reduce using rule 95 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    IF              reduce using rule 95 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    LLAVE_D         reduce using rule 95 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    INT             reduce using rule 95 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    LONG            reduce using rule 95 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    FLOAT           reduce using rule 95 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    DOUBLE          reduce using rule 95 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    RETURN          reduce using rule 95 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 95 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)


state 168

    (172) array -> VAR VARIABLE IGUAL ARRAYCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 302


state 169

    (183) tuple -> PAR_I . valores PAR_D
    (181) valores -> . valor
    (182) valores -> . valor COMA valores
    (114) valor -> . STRING
    (115) valor -> . CHAR
    (116) valor -> . VARIABLE
    (117) valor -> . numeros
    (118) valor -> . booleanos
    (119) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (120) valor -> . VARIABLE PAR_I INT PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valores                        shift and go to state 303
    valor                          shift and go to state 67
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72

state 170

    (162) returnfun -> returnCastable .
    (166) castingcall -> returnCastable . PUNTO castingfun

    DEF             reduce using rule 162 (returnfun -> returnCastable .)
    VARIABLE        reduce using rule 162 (returnfun -> returnCastable .)
    PRINTLN         reduce using rule 162 (returnfun -> returnCastable .)
    PRINT           reduce using rule 162 (returnfun -> returnCastable .)
    READLINE        reduce using rule 162 (returnfun -> returnCastable .)
    VAR             reduce using rule 162 (returnfun -> returnCastable .)
    VAL             reduce using rule 162 (returnfun -> returnCastable .)
    WHILE           reduce using rule 162 (returnfun -> returnCastable .)
    FOR             reduce using rule 162 (returnfun -> returnCastable .)
    IF              reduce using rule 162 (returnfun -> returnCastable .)
    LLAVE_D         reduce using rule 162 (returnfun -> returnCastable .)
    INT             reduce using rule 162 (returnfun -> returnCastable .)
    LONG            reduce using rule 162 (returnfun -> returnCastable .)
    FLOAT           reduce using rule 162 (returnfun -> returnCastable .)
    DOUBLE          reduce using rule 162 (returnfun -> returnCastable .)
    RETURN          reduce using rule 162 (returnfun -> returnCastable .)
    CASE            reduce using rule 162 (returnfun -> returnCastable .)
    PUNTO           shift and go to state 304


state 171

    (163) returnfun -> castingcall .

    DEF             reduce using rule 163 (returnfun -> castingcall .)
    VARIABLE        reduce using rule 163 (returnfun -> castingcall .)
    PRINTLN         reduce using rule 163 (returnfun -> castingcall .)
    PRINT           reduce using rule 163 (returnfun -> castingcall .)
    READLINE        reduce using rule 163 (returnfun -> castingcall .)
    VAR             reduce using rule 163 (returnfun -> castingcall .)
    VAL             reduce using rule 163 (returnfun -> castingcall .)
    WHILE           reduce using rule 163 (returnfun -> castingcall .)
    FOR             reduce using rule 163 (returnfun -> castingcall .)
    IF              reduce using rule 163 (returnfun -> castingcall .)
    LLAVE_D         reduce using rule 163 (returnfun -> castingcall .)
    INT             reduce using rule 163 (returnfun -> castingcall .)
    LONG            reduce using rule 163 (returnfun -> castingcall .)
    FLOAT           reduce using rule 163 (returnfun -> castingcall .)
    DOUBLE          reduce using rule 163 (returnfun -> castingcall .)
    RETURN          reduce using rule 163 (returnfun -> castingcall .)
    CASE            reduce using rule 163 (returnfun -> castingcall .)


state 172

    (164) returnCastable -> entrada .

    PUNTO           reduce using rule 164 (returnCastable -> entrada .)
    DEF             reduce using rule 164 (returnCastable -> entrada .)
    VARIABLE        reduce using rule 164 (returnCastable -> entrada .)
    PRINTLN         reduce using rule 164 (returnCastable -> entrada .)
    PRINT           reduce using rule 164 (returnCastable -> entrada .)
    READLINE        reduce using rule 164 (returnCastable -> entrada .)
    VAR             reduce using rule 164 (returnCastable -> entrada .)
    VAL             reduce using rule 164 (returnCastable -> entrada .)
    WHILE           reduce using rule 164 (returnCastable -> entrada .)
    FOR             reduce using rule 164 (returnCastable -> entrada .)
    IF              reduce using rule 164 (returnCastable -> entrada .)
    LLAVE_D         reduce using rule 164 (returnCastable -> entrada .)
    INT             reduce using rule 164 (returnCastable -> entrada .)
    LONG            reduce using rule 164 (returnCastable -> entrada .)
    FLOAT           reduce using rule 164 (returnCastable -> entrada .)
    DOUBLE          reduce using rule 164 (returnCastable -> entrada .)
    RETURN          reduce using rule 164 (returnCastable -> entrada .)
    CASE            reduce using rule 164 (returnCastable -> entrada .)


state 173

    (165) returnCastable -> funcall .

    PUNTO           reduce using rule 165 (returnCastable -> funcall .)
    DEF             reduce using rule 165 (returnCastable -> funcall .)
    VARIABLE        reduce using rule 165 (returnCastable -> funcall .)
    PRINTLN         reduce using rule 165 (returnCastable -> funcall .)
    PRINT           reduce using rule 165 (returnCastable -> funcall .)
    READLINE        reduce using rule 165 (returnCastable -> funcall .)
    VAR             reduce using rule 165 (returnCastable -> funcall .)
    VAL             reduce using rule 165 (returnCastable -> funcall .)
    WHILE           reduce using rule 165 (returnCastable -> funcall .)
    FOR             reduce using rule 165 (returnCastable -> funcall .)
    IF              reduce using rule 165 (returnCastable -> funcall .)
    LLAVE_D         reduce using rule 165 (returnCastable -> funcall .)
    INT             reduce using rule 165 (returnCastable -> funcall .)
    LONG            reduce using rule 165 (returnCastable -> funcall .)
    FLOAT           reduce using rule 165 (returnCastable -> funcall .)
    DOUBLE          reduce using rule 165 (returnCastable -> funcall .)
    RETURN          reduce using rule 165 (returnCastable -> funcall .)
    CASE            reduce using rule 165 (returnCastable -> funcall .)


state 174

    (186) asignacion -> VAR VARIABLE dectipoTupla IGUAL . tuple
    (183) tuple -> . PAR_I valores PAR_D

    PAR_I           shift and go to state 169

    tuple                          shift and go to state 305

state 175

    (60) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL LONG
    (63) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 306


state 176

    (66) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS . IGUAL INT
    (69) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 307


state 177

    (72) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL FLOAT
    (75) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 308


state 178

    (78) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL DOUBLE
    (81) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 309


state 179

    (84) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL STRING
    (87) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 310


state 180

    (90) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL CHAR
    (93) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 311


state 181

    (96) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL booleanos
    (99) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 312


state 182

    (173) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 313


state 183

    (147) dectipoTupla -> DOBLE_PUNTO PAR_I . tipos PAR_D
    (148) tipos -> . tipo
    (149) tipos -> . tipo tiposentry
    (105) tipo -> . CHARCLASS
    (106) tipo -> . STRINGCLASS
    (107) tipo -> . BOOLCLASS
    (108) tipo -> . INTCLASS
    (109) tipo -> . LONGCLASS
    (110) tipo -> . DOUBLECLASS
    (111) tipo -> . FLOATCLASS
    (112) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (113) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 289
    STRINGCLASS     shift and go to state 290
    BOOLCLASS       shift and go to state 291
    INTCLASS        shift and go to state 292
    LONGCLASS       shift and go to state 293
    DOUBLECLASS     shift and go to state 294
    FLOATCLASS      shift and go to state 295
    ARRAYCLASS      shift and go to state 296
    LISTCLASS       shift and go to state 297

    tipos                          shift and go to state 314
    tipo                           shift and go to state 315

state 184

    (45) asignacion -> VAL VARIABLE IGUAL VARIABLE .
    (273) aritmetica -> VARIABLE . aritmeticos numeros
    (275) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (167) castingcall -> VARIABLE . PUNTO castingfun
    (157) funcall -> VARIABLE . varparen
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD
    (158) varparen -> . PAR_I valores PAR_D
    (159) varparen -> . PAR_I PAR_D
    (160) varparen -> . varparen PAR_I valores PAR_D
    (161) varparen -> . varparen PAR_I PAR_D

    DEF             reduce using rule 45 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VARIABLE        reduce using rule 45 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PRINTLN         reduce using rule 45 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PRINT           reduce using rule 45 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    READLINE        reduce using rule 45 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VAR             reduce using rule 45 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VAL             reduce using rule 45 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    WHILE           reduce using rule 45 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    FOR             reduce using rule 45 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    IF              reduce using rule 45 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 45 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    INT             reduce using rule 45 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    LONG            reduce using rule 45 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    FLOAT           reduce using rule 45 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    DOUBLE          reduce using rule 45 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    RETURN          reduce using rule 45 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    CASE            reduce using rule 45 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PUNTO           shift and go to state 301
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222
    PAR_I           shift and go to state 42

    aritmeticos                    shift and go to state 213
    varparen                       shift and go to state 40

state 185

    (47) asignacion -> VAL VARIABLE IGUAL aritmetica .
    (276) aritmetica -> aritmetica . aritmeticos numeros
    (277) aritmetica -> aritmetica . aritmeticos VARIABLE
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD

    DEF             reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VAR             reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 47 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222

    aritmeticos                    shift and go to state 230

state 186

    (49) asignacion -> VAL VARIABLE IGUAL returnfun .

    DEF             reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    VARIABLE        reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    PRINTLN         reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    PRINT           reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    READLINE        reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    VAR             reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    VAL             reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    WHILE           reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    FOR             reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    IF              reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    LLAVE_D         reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    INT             reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    LONG            reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    FLOAT           reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    DOUBLE          reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    RETURN          reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    CASE            reduce using rule 49 (asignacion -> VAL VARIABLE IGUAL returnfun .)


state 187

    (185) asignacion -> VAL VARIABLE IGUAL tuple .

    DEF             reduce using rule 185 (asignacion -> VAL VARIABLE IGUAL tuple .)
    VARIABLE        reduce using rule 185 (asignacion -> VAL VARIABLE IGUAL tuple .)
    PRINTLN         reduce using rule 185 (asignacion -> VAL VARIABLE IGUAL tuple .)
    PRINT           reduce using rule 185 (asignacion -> VAL VARIABLE IGUAL tuple .)
    READLINE        reduce using rule 185 (asignacion -> VAL VARIABLE IGUAL tuple .)
    VAR             reduce using rule 185 (asignacion -> VAL VARIABLE IGUAL tuple .)
    VAL             reduce using rule 185 (asignacion -> VAL VARIABLE IGUAL tuple .)
    WHILE           reduce using rule 185 (asignacion -> VAL VARIABLE IGUAL tuple .)
    FOR             reduce using rule 185 (asignacion -> VAL VARIABLE IGUAL tuple .)
    IF              reduce using rule 185 (asignacion -> VAL VARIABLE IGUAL tuple .)
    LLAVE_D         reduce using rule 185 (asignacion -> VAL VARIABLE IGUAL tuple .)
    INT             reduce using rule 185 (asignacion -> VAL VARIABLE IGUAL tuple .)
    LONG            reduce using rule 185 (asignacion -> VAL VARIABLE IGUAL tuple .)
    FLOAT           reduce using rule 185 (asignacion -> VAL VARIABLE IGUAL tuple .)
    DOUBLE          reduce using rule 185 (asignacion -> VAL VARIABLE IGUAL tuple .)
    RETURN          reduce using rule 185 (asignacion -> VAL VARIABLE IGUAL tuple .)
    CASE            reduce using rule 185 (asignacion -> VAL VARIABLE IGUAL tuple .)


state 188

    (61) asignacionLong -> VAL VARIABLE IGUAL LONG .
    (124) numeros -> LONG .

    DEF             reduce using rule 61 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    VARIABLE        reduce using rule 61 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    PRINTLN         reduce using rule 61 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    PRINT           reduce using rule 61 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    READLINE        reduce using rule 61 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    VAR             reduce using rule 61 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    VAL             reduce using rule 61 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    WHILE           reduce using rule 61 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    FOR             reduce using rule 61 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    IF              reduce using rule 61 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    LLAVE_D         reduce using rule 61 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    INT             reduce using rule 61 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    LONG            reduce using rule 61 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    FLOAT           reduce using rule 61 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    DOUBLE          reduce using rule 61 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    RETURN          reduce using rule 61 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    CASE            reduce using rule 61 (asignacionLong -> VAL VARIABLE IGUAL LONG .)
    MENOS           reduce using rule 124 (numeros -> LONG .)
    MAS             reduce using rule 124 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 124 (numeros -> LONG .)
    DIVISION        reduce using rule 124 (numeros -> LONG .)
    MOD             reduce using rule 124 (numeros -> LONG .)


state 189

    (67) asignacionInt -> VAL VARIABLE IGUAL INT .
    (123) numeros -> INT .

    DEF             reduce using rule 67 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    VARIABLE        reduce using rule 67 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    PRINTLN         reduce using rule 67 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    PRINT           reduce using rule 67 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    READLINE        reduce using rule 67 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    VAR             reduce using rule 67 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    VAL             reduce using rule 67 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    WHILE           reduce using rule 67 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    FOR             reduce using rule 67 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    IF              reduce using rule 67 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    LLAVE_D         reduce using rule 67 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    INT             reduce using rule 67 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    LONG            reduce using rule 67 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    FLOAT           reduce using rule 67 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    DOUBLE          reduce using rule 67 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    RETURN          reduce using rule 67 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    CASE            reduce using rule 67 (asignacionInt -> VAL VARIABLE IGUAL INT .)
    MENOS           reduce using rule 123 (numeros -> INT .)
    MAS             reduce using rule 123 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 123 (numeros -> INT .)
    DIVISION        reduce using rule 123 (numeros -> INT .)
    MOD             reduce using rule 123 (numeros -> INT .)


state 190

    (73) asignacionFloat -> VAL VARIABLE IGUAL FLOAT .
    (125) numeros -> FLOAT .

    DEF             reduce using rule 73 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    VARIABLE        reduce using rule 73 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    PRINTLN         reduce using rule 73 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    PRINT           reduce using rule 73 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    READLINE        reduce using rule 73 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    VAR             reduce using rule 73 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    VAL             reduce using rule 73 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    WHILE           reduce using rule 73 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    FOR             reduce using rule 73 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    IF              reduce using rule 73 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    LLAVE_D         reduce using rule 73 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    INT             reduce using rule 73 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    LONG            reduce using rule 73 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    FLOAT           reduce using rule 73 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    DOUBLE          reduce using rule 73 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    RETURN          reduce using rule 73 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    CASE            reduce using rule 73 (asignacionFloat -> VAL VARIABLE IGUAL FLOAT .)
    MENOS           reduce using rule 125 (numeros -> FLOAT .)
    MAS             reduce using rule 125 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 125 (numeros -> FLOAT .)
    DIVISION        reduce using rule 125 (numeros -> FLOAT .)
    MOD             reduce using rule 125 (numeros -> FLOAT .)


state 191

    (79) asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .
    (126) numeros -> DOUBLE .

    DEF             reduce using rule 79 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    VARIABLE        reduce using rule 79 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    PRINTLN         reduce using rule 79 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    PRINT           reduce using rule 79 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    READLINE        reduce using rule 79 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    VAR             reduce using rule 79 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    VAL             reduce using rule 79 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    WHILE           reduce using rule 79 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    FOR             reduce using rule 79 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    IF              reduce using rule 79 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    LLAVE_D         reduce using rule 79 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    INT             reduce using rule 79 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    LONG            reduce using rule 79 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    FLOAT           reduce using rule 79 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    DOUBLE          reduce using rule 79 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    RETURN          reduce using rule 79 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    CASE            reduce using rule 79 (asignacionDouble -> VAL VARIABLE IGUAL DOUBLE .)
    MENOS           reduce using rule 126 (numeros -> DOUBLE .)
    MAS             reduce using rule 126 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 126 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 126 (numeros -> DOUBLE .)
    MOD             reduce using rule 126 (numeros -> DOUBLE .)


state 192

    (85) asignacionString -> VAL VARIABLE IGUAL STRING .

    DEF             reduce using rule 85 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VARIABLE        reduce using rule 85 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PRINTLN         reduce using rule 85 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PRINT           reduce using rule 85 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    READLINE        reduce using rule 85 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VAR             reduce using rule 85 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VAL             reduce using rule 85 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    WHILE           reduce using rule 85 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    FOR             reduce using rule 85 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    IF              reduce using rule 85 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    LLAVE_D         reduce using rule 85 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    INT             reduce using rule 85 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    LONG            reduce using rule 85 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    FLOAT           reduce using rule 85 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    DOUBLE          reduce using rule 85 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    RETURN          reduce using rule 85 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    CASE            reduce using rule 85 (asignacionString -> VAL VARIABLE IGUAL STRING .)


state 193

    (91) asignacionChar -> VAL VARIABLE IGUAL CHAR .

    DEF             reduce using rule 91 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VARIABLE        reduce using rule 91 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    PRINTLN         reduce using rule 91 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    PRINT           reduce using rule 91 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    READLINE        reduce using rule 91 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VAR             reduce using rule 91 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VAL             reduce using rule 91 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    WHILE           reduce using rule 91 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    FOR             reduce using rule 91 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    IF              reduce using rule 91 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    LLAVE_D         reduce using rule 91 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    INT             reduce using rule 91 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    LONG            reduce using rule 91 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    FLOAT           reduce using rule 91 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    DOUBLE          reduce using rule 91 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    RETURN          reduce using rule 91 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    CASE            reduce using rule 91 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)


state 194

    (97) asignacionBoolean -> VAL VARIABLE IGUAL booleanos .

    DEF             reduce using rule 97 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 97 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    PRINTLN         reduce using rule 97 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 97 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    READLINE        reduce using rule 97 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VAR             reduce using rule 97 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VAL             reduce using rule 97 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 97 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    FOR             reduce using rule 97 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    IF              reduce using rule 97 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    LLAVE_D         reduce using rule 97 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    INT             reduce using rule 97 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    LONG            reduce using rule 97 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    FLOAT           reduce using rule 97 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    DOUBLE          reduce using rule 97 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    RETURN          reduce using rule 97 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 97 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)


state 195

    (175) array -> VAL VARIABLE IGUAL ARRAYCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 316


state 196

    (178) list -> VAL VARIABLE IGUAL LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 317


state 197

    (187) asignacion -> VAL VARIABLE dectipoTupla IGUAL . tuple
    (183) tuple -> . PAR_I valores PAR_D

    PAR_I           shift and go to state 169

    tuple                          shift and go to state 318

state 198

    (62) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL LONG
    (64) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 319


state 199

    (68) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS . IGUAL INT
    (70) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 320


state 200

    (74) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL FLOAT
    (76) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 321


state 201

    (80) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL DOUBLE
    (82) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 322


state 202

    (86) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL STRING
    (88) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 323


state 203

    (92) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL CHAR
    (94) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 324


state 204

    (98) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL booleanos
    (100) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 325


state 205

    (176) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 326


state 206

    (179) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS . CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS . CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    CORCHETE_I      shift and go to state 327


state 207

    (188) while -> WHILE PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 328


state 208

    (241) condicional -> valorC logicos . condicional
    (241) condicional -> . valorC logicos condicional
    (242) condicional -> . valorC
    (243) valorC -> . VARIABLE
    (244) valorC -> . booleanos
    (245) valorC -> . relacional
    (246) valorC -> . NOT VARIABLE
    (247) valorC -> . NOT booleanos
    (248) valorC -> . NOT relacional
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE
    (252) relacional -> . numeros comparacion numeros
    (253) relacional -> . aritmetica comparacion aritmetica
    (254) relacional -> . aritmetica comparacion numeros
    (255) relacional -> . numeros comparacion aritmetica
    (256) relacional -> . booleanos comparacion booleanos
    (257) relacional -> . STRING comparacion STRING
    (258) relacional -> . CHAR comparacion CHAR
    (259) relacional -> . VARIABLE comparacion numeros
    (260) relacional -> . numeros comparacion VARIABLE
    (261) relacional -> . VARIABLE comparacion booleanos
    (262) relacional -> . booleanos comparacion VARIABLE
    (263) relacional -> . VARIABLE comparacion STRING
    (264) relacional -> . STRING comparacion VARIABLE
    (265) relacional -> . VARIABLE comparacion CHAR
    (266) relacional -> . CHAR comparacion VARIABLE
    (267) relacional -> . VARIABLE comparacion VARIABLE
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 99
    NOT             shift and go to state 102
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    STRING          shift and go to state 105
    CHAR            shift and go to state 106
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    valorC                         shift and go to state 98
    condicional                    shift and go to state 329
    booleanos                      shift and go to state 100
    relacional                     shift and go to state 101
    numeros                        shift and go to state 103
    aritmetica                     shift and go to state 104

state 209

    (249) logicos -> AND .

    VARIABLE        reduce using rule 249 (logicos -> AND .)
    NOT             reduce using rule 249 (logicos -> AND .)
    TRUE            reduce using rule 249 (logicos -> AND .)
    FLASE           reduce using rule 249 (logicos -> AND .)
    STRING          reduce using rule 249 (logicos -> AND .)
    CHAR            reduce using rule 249 (logicos -> AND .)
    INT             reduce using rule 249 (logicos -> AND .)
    LONG            reduce using rule 249 (logicos -> AND .)
    FLOAT           reduce using rule 249 (logicos -> AND .)
    DOUBLE          reduce using rule 249 (logicos -> AND .)


state 210

    (250) logicos -> OR .

    VARIABLE        reduce using rule 250 (logicos -> OR .)
    NOT             reduce using rule 250 (logicos -> OR .)
    TRUE            reduce using rule 250 (logicos -> OR .)
    FLASE           reduce using rule 250 (logicos -> OR .)
    STRING          reduce using rule 250 (logicos -> OR .)
    CHAR            reduce using rule 250 (logicos -> OR .)
    INT             reduce using rule 250 (logicos -> OR .)
    LONG            reduce using rule 250 (logicos -> OR .)
    FLOAT           reduce using rule 250 (logicos -> OR .)
    DOUBLE          reduce using rule 250 (logicos -> OR .)


state 211

    (251) logicos -> NOT .

    VARIABLE        reduce using rule 251 (logicos -> NOT .)
    NOT             reduce using rule 251 (logicos -> NOT .)
    TRUE            reduce using rule 251 (logicos -> NOT .)
    FLASE           reduce using rule 251 (logicos -> NOT .)
    STRING          reduce using rule 251 (logicos -> NOT .)
    CHAR            reduce using rule 251 (logicos -> NOT .)
    INT             reduce using rule 251 (logicos -> NOT .)
    LONG            reduce using rule 251 (logicos -> NOT .)
    FLOAT           reduce using rule 251 (logicos -> NOT .)
    DOUBLE          reduce using rule 251 (logicos -> NOT .)


state 212

    (259) relacional -> VARIABLE comparacion . numeros
    (261) relacional -> VARIABLE comparacion . booleanos
    (263) relacional -> VARIABLE comparacion . STRING
    (265) relacional -> VARIABLE comparacion . CHAR
    (267) relacional -> VARIABLE comparacion . VARIABLE
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    STRING          shift and go to state 333
    CHAR            shift and go to state 334
    VARIABLE        shift and go to state 330
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    numeros                        shift and go to state 331
    booleanos                      shift and go to state 332

state 213

    (273) aritmetica -> VARIABLE aritmeticos . numeros
    (275) aritmetica -> VARIABLE aritmeticos . VARIABLE
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    VARIABLE        shift and go to state 335
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    numeros                        shift and go to state 336

state 214

    (268) comparacion -> IGUAL_COMPARACION .

    STRING          reduce using rule 268 (comparacion -> IGUAL_COMPARACION .)
    CHAR            reduce using rule 268 (comparacion -> IGUAL_COMPARACION .)
    VARIABLE        reduce using rule 268 (comparacion -> IGUAL_COMPARACION .)
    INT             reduce using rule 268 (comparacion -> IGUAL_COMPARACION .)
    LONG            reduce using rule 268 (comparacion -> IGUAL_COMPARACION .)
    FLOAT           reduce using rule 268 (comparacion -> IGUAL_COMPARACION .)
    DOUBLE          reduce using rule 268 (comparacion -> IGUAL_COMPARACION .)
    TRUE            reduce using rule 268 (comparacion -> IGUAL_COMPARACION .)
    FLASE           reduce using rule 268 (comparacion -> IGUAL_COMPARACION .)


state 215

    (269) comparacion -> DIFERENTE .

    STRING          reduce using rule 269 (comparacion -> DIFERENTE .)
    CHAR            reduce using rule 269 (comparacion -> DIFERENTE .)
    VARIABLE        reduce using rule 269 (comparacion -> DIFERENTE .)
    INT             reduce using rule 269 (comparacion -> DIFERENTE .)
    LONG            reduce using rule 269 (comparacion -> DIFERENTE .)
    FLOAT           reduce using rule 269 (comparacion -> DIFERENTE .)
    DOUBLE          reduce using rule 269 (comparacion -> DIFERENTE .)
    TRUE            reduce using rule 269 (comparacion -> DIFERENTE .)
    FLASE           reduce using rule 269 (comparacion -> DIFERENTE .)


state 216

    (270) comparacion -> MAYOR .

    STRING          reduce using rule 270 (comparacion -> MAYOR .)
    CHAR            reduce using rule 270 (comparacion -> MAYOR .)
    VARIABLE        reduce using rule 270 (comparacion -> MAYOR .)
    INT             reduce using rule 270 (comparacion -> MAYOR .)
    LONG            reduce using rule 270 (comparacion -> MAYOR .)
    FLOAT           reduce using rule 270 (comparacion -> MAYOR .)
    DOUBLE          reduce using rule 270 (comparacion -> MAYOR .)
    TRUE            reduce using rule 270 (comparacion -> MAYOR .)
    FLASE           reduce using rule 270 (comparacion -> MAYOR .)


state 217

    (271) comparacion -> MENOR .

    STRING          reduce using rule 271 (comparacion -> MENOR .)
    CHAR            reduce using rule 271 (comparacion -> MENOR .)
    VARIABLE        reduce using rule 271 (comparacion -> MENOR .)
    INT             reduce using rule 271 (comparacion -> MENOR .)
    LONG            reduce using rule 271 (comparacion -> MENOR .)
    FLOAT           reduce using rule 271 (comparacion -> MENOR .)
    DOUBLE          reduce using rule 271 (comparacion -> MENOR .)
    TRUE            reduce using rule 271 (comparacion -> MENOR .)
    FLASE           reduce using rule 271 (comparacion -> MENOR .)


state 218

    (278) aritmeticos -> MENOS .

    VARIABLE        reduce using rule 278 (aritmeticos -> MENOS .)
    INT             reduce using rule 278 (aritmeticos -> MENOS .)
    LONG            reduce using rule 278 (aritmeticos -> MENOS .)
    FLOAT           reduce using rule 278 (aritmeticos -> MENOS .)
    DOUBLE          reduce using rule 278 (aritmeticos -> MENOS .)


state 219

    (279) aritmeticos -> MAS .

    VARIABLE        reduce using rule 279 (aritmeticos -> MAS .)
    INT             reduce using rule 279 (aritmeticos -> MAS .)
    LONG            reduce using rule 279 (aritmeticos -> MAS .)
    FLOAT           reduce using rule 279 (aritmeticos -> MAS .)
    DOUBLE          reduce using rule 279 (aritmeticos -> MAS .)


state 220

    (280) aritmeticos -> MULTIPLICACION .

    VARIABLE        reduce using rule 280 (aritmeticos -> MULTIPLICACION .)
    INT             reduce using rule 280 (aritmeticos -> MULTIPLICACION .)
    LONG            reduce using rule 280 (aritmeticos -> MULTIPLICACION .)
    FLOAT           reduce using rule 280 (aritmeticos -> MULTIPLICACION .)
    DOUBLE          reduce using rule 280 (aritmeticos -> MULTIPLICACION .)


state 221

    (281) aritmeticos -> DIVISION .

    VARIABLE        reduce using rule 281 (aritmeticos -> DIVISION .)
    INT             reduce using rule 281 (aritmeticos -> DIVISION .)
    LONG            reduce using rule 281 (aritmeticos -> DIVISION .)
    FLOAT           reduce using rule 281 (aritmeticos -> DIVISION .)
    DOUBLE          reduce using rule 281 (aritmeticos -> DIVISION .)


state 222

    (282) aritmeticos -> MOD .

    VARIABLE        reduce using rule 282 (aritmeticos -> MOD .)
    INT             reduce using rule 282 (aritmeticos -> MOD .)
    LONG            reduce using rule 282 (aritmeticos -> MOD .)
    FLOAT           reduce using rule 282 (aritmeticos -> MOD .)
    DOUBLE          reduce using rule 282 (aritmeticos -> MOD .)


state 223

    (256) relacional -> booleanos comparacion . booleanos
    (262) relacional -> booleanos comparacion . VARIABLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    VARIABLE        shift and go to state 338
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    booleanos                      shift and go to state 337

state 224

    (246) valorC -> NOT VARIABLE .
    (259) relacional -> VARIABLE . comparacion numeros
    (261) relacional -> VARIABLE . comparacion booleanos
    (263) relacional -> VARIABLE . comparacion STRING
    (265) relacional -> VARIABLE . comparacion CHAR
    (267) relacional -> VARIABLE . comparacion VARIABLE
    (273) aritmetica -> VARIABLE . aritmeticos numeros
    (275) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (268) comparacion -> . IGUAL_COMPARACION
    (269) comparacion -> . DIFERENTE
    (270) comparacion -> . MAYOR
    (271) comparacion -> . MENOR
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD

    AND             reduce using rule 246 (valorC -> NOT VARIABLE .)
    OR              reduce using rule 246 (valorC -> NOT VARIABLE .)
    NOT             reduce using rule 246 (valorC -> NOT VARIABLE .)
    PAR_D           reduce using rule 246 (valorC -> NOT VARIABLE .)
    IGUAL_COMPARACION shift and go to state 214
    DIFERENTE       shift and go to state 215
    MAYOR           shift and go to state 216
    MENOR           shift and go to state 217
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222

    comparacion                    shift and go to state 212
    aritmeticos                    shift and go to state 213

state 225

    (247) valorC -> NOT booleanos .
    (256) relacional -> booleanos . comparacion booleanos
    (262) relacional -> booleanos . comparacion VARIABLE
    (268) comparacion -> . IGUAL_COMPARACION
    (269) comparacion -> . DIFERENTE
    (270) comparacion -> . MAYOR
    (271) comparacion -> . MENOR

    AND             reduce using rule 247 (valorC -> NOT booleanos .)
    OR              reduce using rule 247 (valorC -> NOT booleanos .)
    NOT             reduce using rule 247 (valorC -> NOT booleanos .)
    PAR_D           reduce using rule 247 (valorC -> NOT booleanos .)
    IGUAL_COMPARACION shift and go to state 214
    DIFERENTE       shift and go to state 215
    MAYOR           shift and go to state 216
    MENOR           shift and go to state 217

    comparacion                    shift and go to state 223

state 226

    (248) valorC -> NOT relacional .

    AND             reduce using rule 248 (valorC -> NOT relacional .)
    OR              reduce using rule 248 (valorC -> NOT relacional .)
    NOT             reduce using rule 248 (valorC -> NOT relacional .)
    PAR_D           reduce using rule 248 (valorC -> NOT relacional .)


state 227

    (252) relacional -> numeros comparacion . numeros
    (255) relacional -> numeros comparacion . aritmetica
    (260) relacional -> numeros comparacion . VARIABLE
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE

    VARIABLE        shift and go to state 341
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    numeros                        shift and go to state 339
    aritmetica                     shift and go to state 340

state 228

    (272) aritmetica -> numeros aritmeticos . numeros
    (274) aritmetica -> numeros aritmeticos . VARIABLE
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    VARIABLE        shift and go to state 343
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    numeros                        shift and go to state 342

state 229

    (253) relacional -> aritmetica comparacion . aritmetica
    (254) relacional -> aritmetica comparacion . numeros
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    VARIABLE        shift and go to state 346
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    aritmetica                     shift and go to state 344
    numeros                        shift and go to state 345

state 230

    (276) aritmetica -> aritmetica aritmeticos . numeros
    (277) aritmetica -> aritmetica aritmeticos . VARIABLE
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    VARIABLE        shift and go to state 348
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    numeros                        shift and go to state 347

state 231

    (257) relacional -> STRING comparacion . STRING
    (264) relacional -> STRING comparacion . VARIABLE

    STRING          shift and go to state 349
    VARIABLE        shift and go to state 350


state 232

    (258) relacional -> CHAR comparacion . CHAR
    (266) relacional -> CHAR comparacion . VARIABLE

    CHAR            shift and go to state 351
    VARIABLE        shift and go to state 352


state 233

    (189) for -> FOR PAR_I VAR VARIABLE . ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> FOR PAR_I VAR VARIABLE . ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> FOR PAR_I VAR VARIABLE . ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    ITERATOR        shift and go to state 353


state 234

    (190) for -> FOR PAR_I VARIABLE ITERATOR . VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> FOR PAR_I VARIABLE ITERATOR . INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> FOR PAR_I VARIABLE ITERATOR . INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 354
    INT             shift and go to state 355


state 235

    (234) if -> IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 356


state 236

    (3) io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO . READLINE

    READLINE        shift and go to state 357


state 237

    (160) varparen -> varparen PAR_I valores PAR_D .

    PAR_I           reduce using rule 160 (varparen -> varparen PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 160 (varparen -> varparen PAR_I valores PAR_D .)
    VAR             reduce using rule 160 (varparen -> varparen PAR_I valores PAR_D .)
    VAL             reduce using rule 160 (varparen -> varparen PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 160 (varparen -> varparen PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 160 (varparen -> varparen PAR_I valores PAR_D .)
    PRINT           reduce using rule 160 (varparen -> varparen PAR_I valores PAR_D .)
    READLINE        reduce using rule 160 (varparen -> varparen PAR_I valores PAR_D .)
    WHILE           reduce using rule 160 (varparen -> varparen PAR_I valores PAR_D .)
    FOR             reduce using rule 160 (varparen -> varparen PAR_I valores PAR_D .)
    IF              reduce using rule 160 (varparen -> varparen PAR_I valores PAR_D .)
    INT             reduce using rule 160 (varparen -> varparen PAR_I valores PAR_D .)
    LONG            reduce using rule 160 (varparen -> varparen PAR_I valores PAR_D .)
    FLOAT           reduce using rule 160 (varparen -> varparen PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 160 (varparen -> varparen PAR_I valores PAR_D .)
    RETURN          reduce using rule 160 (varparen -> varparen PAR_I valores PAR_D .)
    PUNTO           reduce using rule 160 (varparen -> varparen PAR_I valores PAR_D .)
    DEF             reduce using rule 160 (varparen -> varparen PAR_I valores PAR_D .)
    CASE            reduce using rule 160 (varparen -> varparen PAR_I valores PAR_D .)


state 238

    (195) match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .

    DEF             reduce using rule 195 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VARIABLE        reduce using rule 195 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    PRINTLN         reduce using rule 195 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    PRINT           reduce using rule 195 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    READLINE        reduce using rule 195 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VAR             reduce using rule 195 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VAL             reduce using rule 195 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    WHILE           reduce using rule 195 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    FOR             reduce using rule 195 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    IF              reduce using rule 195 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    LLAVE_D         reduce using rule 195 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    INT             reduce using rule 195 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    LONG            reduce using rule 195 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    FLOAT           reduce using rule 195 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    DOUBLE          reduce using rule 195 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    RETURN          reduce using rule 195 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)


state 239

    (205) casesInt -> caseInt casesInt .

    LLAVE_D         reduce using rule 205 (casesInt -> caseInt casesInt .)


state 240

    (206) casesInt -> caseInt defcase .

    LLAVE_D         reduce using rule 206 (casesInt -> caseInt defcase .)


state 241

    (231) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (203) caseInt -> CASE . INT FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 358
    INT             shift and go to state 260


state 242

    (209) casesLgn -> caseLgn casesLgn .

    LLAVE_D         reduce using rule 209 (casesLgn -> caseLgn casesLgn .)


state 243

    (210) casesLgn -> caseLgn defcase .

    LLAVE_D         reduce using rule 210 (casesLgn -> caseLgn defcase .)


state 244

    (231) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (207) caseLgn -> CASE . LONG FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 358
    LONG            shift and go to state 261


state 245

    (213) casesFlt -> caseFlt casesFlt .

    LLAVE_D         reduce using rule 213 (casesFlt -> caseFlt casesFlt .)


state 246

    (214) casesFlt -> caseFlt defcase .

    LLAVE_D         reduce using rule 214 (casesFlt -> caseFlt defcase .)


state 247

    (231) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (211) caseFlt -> CASE . FLOAT FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 358
    FLOAT           shift and go to state 262


state 248

    (217) casesDob -> caseDob casesDob .

    LLAVE_D         reduce using rule 217 (casesDob -> caseDob casesDob .)


state 249

    (218) casesDob -> caseDob defcase .

    LLAVE_D         reduce using rule 218 (casesDob -> caseDob defcase .)


state 250

    (231) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (215) caseDob -> CASE . DOUBLE FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 358
    DOUBLE          shift and go to state 263


state 251

    (221) casesStr -> caseStr casesStr .

    LLAVE_D         reduce using rule 221 (casesStr -> caseStr casesStr .)


state 252

    (222) casesStr -> caseStr defcase .

    LLAVE_D         reduce using rule 222 (casesStr -> caseStr defcase .)


state 253

    (231) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (219) caseStr -> CASE . STRING FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 358
    STRING          shift and go to state 264


state 254

    (225) casesChar -> caseChar casesChar .

    LLAVE_D         reduce using rule 225 (casesChar -> caseChar casesChar .)


state 255

    (226) casesChar -> caseChar defcase .

    LLAVE_D         reduce using rule 226 (casesChar -> caseChar defcase .)


state 256

    (231) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (223) caseChar -> CASE . CHAR FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 358
    CHAR            shift and go to state 265


state 257

    (229) casesBool -> caseBool casesBool .

    LLAVE_D         reduce using rule 229 (casesBool -> caseBool casesBool .)


state 258

    (230) casesBool -> caseBool defcase .

    LLAVE_D         reduce using rule 230 (casesBool -> caseBool defcase .)


state 259

    (231) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (227) caseBool -> CASE . booleanos FUNCION_FLECHA codeBlock
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    SUBGUION        shift and go to state 358
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    booleanos                      shift and go to state 266

state 260

    (203) caseInt -> CASE INT . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 359


state 261

    (207) caseLgn -> CASE LONG . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 360


state 262

    (211) caseFlt -> CASE FLOAT . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 361


state 263

    (215) caseDob -> CASE DOUBLE . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 362


state 264

    (219) caseStr -> CASE STRING . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 363


state 265

    (223) caseChar -> CASE CHAR . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 364


state 266

    (227) caseBool -> CASE booleanos . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 365


state 267

    (182) valores -> valor COMA valores .

    PAR_D           reduce using rule 182 (valores -> valor COMA valores .)


state 268

    (119) valor -> VARIABLE PAR_I VARIABLE . PAR_D

    PAR_D           shift and go to state 366


state 269

    (120) valor -> VARIABLE PAR_I INT . PAR_D

    PAR_D           shift and go to state 367


state 270

    (237) elseif -> ELSE IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D
    (238) elseif -> ELSE IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D elseif

    PAR_D           shift and go to state 368


state 271

    (239) else -> ELSE LLAVE_I contenido LLAVE_D .

    ELSE            reduce using rule 239 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 239 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 239 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 239 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 239 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 239 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 239 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 239 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 239 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 239 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 239 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 239 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 239 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 239 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 239 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 239 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 239 (else -> ELSE LLAVE_I contenido LLAVE_D .)


state 272

    (29) contenido -> asignacion contenido .

    LLAVE_D         reduce using rule 29 (contenido -> asignacion contenido .)
    RETURN          reduce using rule 29 (contenido -> asignacion contenido .)


state 273

    (30) contenido -> reasignacion contenido .

    LLAVE_D         reduce using rule 30 (contenido -> reasignacion contenido .)
    RETURN          reduce using rule 30 (contenido -> reasignacion contenido .)


state 274

    (31) contenido -> funcall contenido .

    LLAVE_D         reduce using rule 31 (contenido -> funcall contenido .)
    RETURN          reduce using rule 31 (contenido -> funcall contenido .)


state 275

    (32) contenido -> impresion contenido .

    LLAVE_D         reduce using rule 32 (contenido -> impresion contenido .)
    RETURN          reduce using rule 32 (contenido -> impresion contenido .)


state 276

    (33) contenido -> entrada contenido .

    LLAVE_D         reduce using rule 33 (contenido -> entrada contenido .)
    RETURN          reduce using rule 33 (contenido -> entrada contenido .)


state 277

    (34) contenido -> while contenido .

    LLAVE_D         reduce using rule 34 (contenido -> while contenido .)
    RETURN          reduce using rule 34 (contenido -> while contenido .)


state 278

    (35) contenido -> for contenido .

    LLAVE_D         reduce using rule 35 (contenido -> for contenido .)
    RETURN          reduce using rule 35 (contenido -> for contenido .)


state 279

    (37) contenido -> match contenido .

    LLAVE_D         reduce using rule 37 (contenido -> match contenido .)
    RETURN          reduce using rule 37 (contenido -> match contenido .)


state 280

    (36) contenido -> if contenido .

    LLAVE_D         reduce using rule 36 (contenido -> if contenido .)
    RETURN          reduce using rule 36 (contenido -> if contenido .)


state 281

    (38) contenido -> aritmetica contenido .

    LLAVE_D         reduce using rule 38 (contenido -> aritmetica contenido .)
    RETURN          reduce using rule 38 (contenido -> aritmetica contenido .)


state 282

    (101) reasignacion -> VARIABLE IGUAL . valor
    (102) reasignacion -> VARIABLE IGUAL . returnfun
    (103) reasignacion -> VARIABLE IGUAL . aritmetica
    (114) valor -> . STRING
    (115) valor -> . CHAR
    (116) valor -> . VARIABLE
    (117) valor -> . numeros
    (118) valor -> . booleanos
    (119) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (120) valor -> . VARIABLE PAR_I INT PAR_D
    (162) returnfun -> . returnCastable
    (163) returnfun -> . castingcall
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE
    (164) returnCastable -> . entrada
    (165) returnCastable -> . funcall
    (166) castingcall -> . returnCastable PUNTO castingfun
    (167) castingcall -> . VARIABLE PUNTO castingfun
    (156) entrada -> . READLINE PAR_I PAR_D
    (157) funcall -> . VARIABLE varparen

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 369
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    READLINE        shift and go to state 24

    valor                          shift and go to state 370
    returnfun                      shift and go to state 371
    aritmetica                     shift and go to state 372
    numeros                        shift and go to state 373
    booleanos                      shift and go to state 72
    returnCastable                 shift and go to state 170
    castingcall                    shift and go to state 171
    entrada                        shift and go to state 172
    funcall                        shift and go to state 173

state 283

    (104) reasignacion -> VARIABLE PAR_I . INT PAR_D IGUAL valor
    (158) varparen -> PAR_I . valores PAR_D
    (159) varparen -> PAR_I . PAR_D
    (181) valores -> . valor
    (182) valores -> . valor COMA valores
    (114) valor -> . STRING
    (115) valor -> . CHAR
    (116) valor -> . VARIABLE
    (117) valor -> . numeros
    (118) valor -> . booleanos
    (119) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (120) valor -> . VARIABLE PAR_I INT PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    INT             shift and go to state 374
    PAR_D           shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valor                          shift and go to state 67
    valores                        shift and go to state 65
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72

state 284

    (127) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I . contenido LLAVE_D
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 375
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 285

    (128) funcion -> DEF VARIABLE parametro LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 376


state 286

    (135) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN valor LLAVE_D
    (136) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (137) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN returnfun LLAVE_D
    (138) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN aritmetica LLAVE_D
    (139) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I RETURN valor LLAVE_D
    (140) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I RETURN VARIABLE LLAVE_D
    (141) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I RETURN returnfun LLAVE_D
    (142) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I RETURN aritmetica LLAVE_D

    LLAVE_I         shift and go to state 377


state 287

    (143) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN tuple LLAVE_D
    (144) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (145) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN returnfun LLAVE_D

    LLAVE_I         shift and go to state 378


state 288

    (146) dectipo -> DOBLE_PUNTO tipo .

    IGUAL           reduce using rule 146 (dectipo -> DOBLE_PUNTO tipo .)


state 289

    (105) tipo -> CHARCLASS .

    IGUAL           reduce using rule 105 (tipo -> CHARCLASS .)
    COMA            reduce using rule 105 (tipo -> CHARCLASS .)
    PAR_D           reduce using rule 105 (tipo -> CHARCLASS .)
    CORCHETE_D      reduce using rule 105 (tipo -> CHARCLASS .)


state 290

    (106) tipo -> STRINGCLASS .

    IGUAL           reduce using rule 106 (tipo -> STRINGCLASS .)
    COMA            reduce using rule 106 (tipo -> STRINGCLASS .)
    PAR_D           reduce using rule 106 (tipo -> STRINGCLASS .)
    CORCHETE_D      reduce using rule 106 (tipo -> STRINGCLASS .)


state 291

    (107) tipo -> BOOLCLASS .

    IGUAL           reduce using rule 107 (tipo -> BOOLCLASS .)
    COMA            reduce using rule 107 (tipo -> BOOLCLASS .)
    PAR_D           reduce using rule 107 (tipo -> BOOLCLASS .)
    CORCHETE_D      reduce using rule 107 (tipo -> BOOLCLASS .)


state 292

    (108) tipo -> INTCLASS .

    IGUAL           reduce using rule 108 (tipo -> INTCLASS .)
    COMA            reduce using rule 108 (tipo -> INTCLASS .)
    PAR_D           reduce using rule 108 (tipo -> INTCLASS .)
    CORCHETE_D      reduce using rule 108 (tipo -> INTCLASS .)


state 293

    (109) tipo -> LONGCLASS .

    IGUAL           reduce using rule 109 (tipo -> LONGCLASS .)
    COMA            reduce using rule 109 (tipo -> LONGCLASS .)
    PAR_D           reduce using rule 109 (tipo -> LONGCLASS .)
    CORCHETE_D      reduce using rule 109 (tipo -> LONGCLASS .)


state 294

    (110) tipo -> DOUBLECLASS .

    IGUAL           reduce using rule 110 (tipo -> DOUBLECLASS .)
    COMA            reduce using rule 110 (tipo -> DOUBLECLASS .)
    PAR_D           reduce using rule 110 (tipo -> DOUBLECLASS .)
    CORCHETE_D      reduce using rule 110 (tipo -> DOUBLECLASS .)


state 295

    (111) tipo -> FLOATCLASS .

    IGUAL           reduce using rule 111 (tipo -> FLOATCLASS .)
    COMA            reduce using rule 111 (tipo -> FLOATCLASS .)
    PAR_D           reduce using rule 111 (tipo -> FLOATCLASS .)
    CORCHETE_D      reduce using rule 111 (tipo -> FLOATCLASS .)


state 296

    (112) tipo -> ARRAYCLASS . CORCHETE_I tipo CORCHETE_D

    CORCHETE_I      shift and go to state 379


state 297

    (113) tipo -> LISTCLASS . CORCHETE_I tipo CORCHETE_D

    CORCHETE_I      shift and go to state 380


state 298

    (133) parametros -> PAR_I declaracion PAR_D .
    (134) parametros -> PAR_I declaracion PAR_D . parametros
    (133) parametros -> . PAR_I declaracion PAR_D
    (134) parametros -> . PAR_I declaracion PAR_D parametros

    IGUAL           reduce using rule 133 (parametros -> PAR_I declaracion PAR_D .)
    LLAVE_I         reduce using rule 133 (parametros -> PAR_I declaracion PAR_D .)
    DOBLE_PUNTO     reduce using rule 133 (parametros -> PAR_I declaracion PAR_D .)
    PAR_I           shift and go to state 381

    parametros                     shift and go to state 382

state 299

    (129) declaracion -> VARIABLE DOBLE_PUNTO . tipo
    (130) declaracion -> VARIABLE DOBLE_PUNTO . tipo IGUAL valor
    (105) tipo -> . CHARCLASS
    (106) tipo -> . STRINGCLASS
    (107) tipo -> . BOOLCLASS
    (108) tipo -> . INTCLASS
    (109) tipo -> . LONGCLASS
    (110) tipo -> . DOUBLECLASS
    (111) tipo -> . FLOATCLASS
    (112) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (113) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 289
    STRINGCLASS     shift and go to state 290
    BOOLCLASS       shift and go to state 291
    INTCLASS        shift and go to state 292
    LONGCLASS       shift and go to state 293
    DOUBLECLASS     shift and go to state 294
    FLOATCLASS      shift and go to state 295
    ARRAYCLASS      shift and go to state 296
    LISTCLASS       shift and go to state 297

    tipo                           shift and go to state 383

state 300

    (154) valorI -> valor MAS valorI .

    PAR_D           reduce using rule 154 (valorI -> valor MAS valorI .)


state 301

    (167) castingcall -> VARIABLE PUNTO . castingfun
    (168) castingfun -> . TO_INT
    (169) castingfun -> . TO_DOUBLE
    (170) castingfun -> . TO_FLOAT
    (171) castingfun -> . TO_LONG

    TO_INT          shift and go to state 385
    TO_DOUBLE       shift and go to state 386
    TO_FLOAT        shift and go to state 387
    TO_LONG         shift and go to state 388

    castingfun                     shift and go to state 384

state 302

    (172) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (181) valores -> . valor
    (182) valores -> . valor COMA valores
    (114) valor -> . STRING
    (115) valor -> . CHAR
    (116) valor -> . VARIABLE
    (117) valor -> . numeros
    (118) valor -> . booleanos
    (119) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (120) valor -> . VARIABLE PAR_I INT PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valores                        shift and go to state 389
    valor                          shift and go to state 67
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72

state 303

    (183) tuple -> PAR_I valores . PAR_D

    PAR_D           shift and go to state 390


state 304

    (166) castingcall -> returnCastable PUNTO . castingfun
    (168) castingfun -> . TO_INT
    (169) castingfun -> . TO_DOUBLE
    (170) castingfun -> . TO_FLOAT
    (171) castingfun -> . TO_LONG

    TO_INT          shift and go to state 385
    TO_DOUBLE       shift and go to state 386
    TO_FLOAT        shift and go to state 387
    TO_LONG         shift and go to state 388

    castingfun                     shift and go to state 391

state 305

    (186) asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .

    DEF             reduce using rule 186 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    VARIABLE        reduce using rule 186 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    PRINTLN         reduce using rule 186 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    PRINT           reduce using rule 186 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    READLINE        reduce using rule 186 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    VAR             reduce using rule 186 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    VAL             reduce using rule 186 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    WHILE           reduce using rule 186 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    FOR             reduce using rule 186 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    IF              reduce using rule 186 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    LLAVE_D         reduce using rule 186 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    INT             reduce using rule 186 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    LONG            reduce using rule 186 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    FLOAT           reduce using rule 186 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    DOUBLE          reduce using rule 186 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    RETURN          reduce using rule 186 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)
    CASE            reduce using rule 186 (asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple .)


state 306

    (60) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . LONG
    (63) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . VARIABLE

    LONG            shift and go to state 393
    VARIABLE        shift and go to state 392


state 307

    (66) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL . INT
    (69) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL . VARIABLE

    INT             shift and go to state 395
    VARIABLE        shift and go to state 394


state 308

    (72) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . FLOAT
    (75) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . VARIABLE

    FLOAT           shift and go to state 397
    VARIABLE        shift and go to state 396


state 309

    (78) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . DOUBLE
    (81) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . VARIABLE

    DOUBLE          shift and go to state 399
    VARIABLE        shift and go to state 398


state 310

    (84) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . STRING
    (87) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . VARIABLE

    STRING          shift and go to state 401
    VARIABLE        shift and go to state 400


state 311

    (90) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . CHAR
    (93) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . VARIABLE

    CHAR            shift and go to state 403
    VARIABLE        shift and go to state 402


state 312

    (96) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . booleanos
    (99) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . VARIABLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    VARIABLE        shift and go to state 404
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    booleanos                      shift and go to state 405

state 313

    (173) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (105) tipo -> . CHARCLASS
    (106) tipo -> . STRINGCLASS
    (107) tipo -> . BOOLCLASS
    (108) tipo -> . INTCLASS
    (109) tipo -> . LONGCLASS
    (110) tipo -> . DOUBLECLASS
    (111) tipo -> . FLOATCLASS
    (112) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (113) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 289
    STRINGCLASS     shift and go to state 290
    BOOLCLASS       shift and go to state 291
    INTCLASS        shift and go to state 292
    LONGCLASS       shift and go to state 293
    DOUBLECLASS     shift and go to state 294
    FLOATCLASS      shift and go to state 295
    ARRAYCLASS      shift and go to state 296
    LISTCLASS       shift and go to state 297

    tipo                           shift and go to state 406

state 314

    (147) dectipoTupla -> DOBLE_PUNTO PAR_I tipos . PAR_D

    PAR_D           shift and go to state 407


state 315

    (148) tipos -> tipo .
    (149) tipos -> tipo . tiposentry
    (150) tiposentry -> . COMA tipo
    (151) tiposentry -> . COMA tipo tiposentry

    PAR_D           reduce using rule 148 (tipos -> tipo .)
    COMA            shift and go to state 409

    tiposentry                     shift and go to state 408

state 316

    (175) array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (181) valores -> . valor
    (182) valores -> . valor COMA valores
    (114) valor -> . STRING
    (115) valor -> . CHAR
    (116) valor -> . VARIABLE
    (117) valor -> . numeros
    (118) valor -> . booleanos
    (119) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (120) valor -> . VARIABLE PAR_I INT PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valores                        shift and go to state 410
    valor                          shift and go to state 67
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72

state 317

    (178) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I . valores PAR_D
    (181) valores -> . valor
    (182) valores -> . valor COMA valores
    (114) valor -> . STRING
    (115) valor -> . CHAR
    (116) valor -> . VARIABLE
    (117) valor -> . numeros
    (118) valor -> . booleanos
    (119) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (120) valor -> . VARIABLE PAR_I INT PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valores                        shift and go to state 411
    valor                          shift and go to state 67
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72

state 318

    (187) asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .

    DEF             reduce using rule 187 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    VARIABLE        reduce using rule 187 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    PRINTLN         reduce using rule 187 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    PRINT           reduce using rule 187 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    READLINE        reduce using rule 187 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    VAR             reduce using rule 187 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    VAL             reduce using rule 187 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    WHILE           reduce using rule 187 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    FOR             reduce using rule 187 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    IF              reduce using rule 187 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    LLAVE_D         reduce using rule 187 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    INT             reduce using rule 187 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    LONG            reduce using rule 187 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    FLOAT           reduce using rule 187 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    DOUBLE          reduce using rule 187 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    RETURN          reduce using rule 187 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)
    CASE            reduce using rule 187 (asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple .)


state 319

    (62) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . LONG
    (64) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . VARIABLE

    LONG            shift and go to state 413
    VARIABLE        shift and go to state 412


state 320

    (68) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL . INT
    (70) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL . VARIABLE

    INT             shift and go to state 415
    VARIABLE        shift and go to state 414


state 321

    (74) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . FLOAT
    (76) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . VARIABLE

    FLOAT           shift and go to state 417
    VARIABLE        shift and go to state 416


state 322

    (80) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . DOUBLE
    (82) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . VARIABLE

    DOUBLE          shift and go to state 419
    VARIABLE        shift and go to state 418


state 323

    (86) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . STRING
    (88) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . VARIABLE

    STRING          shift and go to state 421
    VARIABLE        shift and go to state 420


state 324

    (92) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . CHAR
    (94) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . VARIABLE

    CHAR            shift and go to state 423
    VARIABLE        shift and go to state 422


state 325

    (98) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . booleanos
    (100) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . VARIABLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    VARIABLE        shift and go to state 424
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    booleanos                      shift and go to state 425

state 326

    (176) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (105) tipo -> . CHARCLASS
    (106) tipo -> . STRINGCLASS
    (107) tipo -> . BOOLCLASS
    (108) tipo -> . INTCLASS
    (109) tipo -> . LONGCLASS
    (110) tipo -> . DOUBLECLASS
    (111) tipo -> . FLOATCLASS
    (112) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (113) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 289
    STRINGCLASS     shift and go to state 290
    BOOLCLASS       shift and go to state 291
    INTCLASS        shift and go to state 292
    LONGCLASS       shift and go to state 293
    DOUBLECLASS     shift and go to state 294
    FLOATCLASS      shift and go to state 295
    ARRAYCLASS      shift and go to state 296
    LISTCLASS       shift and go to state 297

    tipo                           shift and go to state 426

state 327

    (179) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I . tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I . tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (105) tipo -> . CHARCLASS
    (106) tipo -> . STRINGCLASS
    (107) tipo -> . BOOLCLASS
    (108) tipo -> . INTCLASS
    (109) tipo -> . LONGCLASS
    (110) tipo -> . DOUBLECLASS
    (111) tipo -> . FLOATCLASS
    (112) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (113) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 289
    STRINGCLASS     shift and go to state 290
    BOOLCLASS       shift and go to state 291
    INTCLASS        shift and go to state 292
    LONGCLASS       shift and go to state 293
    DOUBLECLASS     shift and go to state 294
    FLOATCLASS      shift and go to state 295
    ARRAYCLASS      shift and go to state 296
    LISTCLASS       shift and go to state 297

    tipo                           shift and go to state 427

state 328

    (188) while -> WHILE PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 428
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 329

    (241) condicional -> valorC logicos condicional .

    PAR_D           reduce using rule 241 (condicional -> valorC logicos condicional .)


state 330

    (267) relacional -> VARIABLE comparacion VARIABLE .

    AND             reduce using rule 267 (relacional -> VARIABLE comparacion VARIABLE .)
    OR              reduce using rule 267 (relacional -> VARIABLE comparacion VARIABLE .)
    NOT             reduce using rule 267 (relacional -> VARIABLE comparacion VARIABLE .)
    PAR_D           reduce using rule 267 (relacional -> VARIABLE comparacion VARIABLE .)


state 331

    (259) relacional -> VARIABLE comparacion numeros .

    AND             reduce using rule 259 (relacional -> VARIABLE comparacion numeros .)
    OR              reduce using rule 259 (relacional -> VARIABLE comparacion numeros .)
    NOT             reduce using rule 259 (relacional -> VARIABLE comparacion numeros .)
    PAR_D           reduce using rule 259 (relacional -> VARIABLE comparacion numeros .)


state 332

    (261) relacional -> VARIABLE comparacion booleanos .

    AND             reduce using rule 261 (relacional -> VARIABLE comparacion booleanos .)
    OR              reduce using rule 261 (relacional -> VARIABLE comparacion booleanos .)
    NOT             reduce using rule 261 (relacional -> VARIABLE comparacion booleanos .)
    PAR_D           reduce using rule 261 (relacional -> VARIABLE comparacion booleanos .)


state 333

    (263) relacional -> VARIABLE comparacion STRING .

    AND             reduce using rule 263 (relacional -> VARIABLE comparacion STRING .)
    OR              reduce using rule 263 (relacional -> VARIABLE comparacion STRING .)
    NOT             reduce using rule 263 (relacional -> VARIABLE comparacion STRING .)
    PAR_D           reduce using rule 263 (relacional -> VARIABLE comparacion STRING .)


state 334

    (265) relacional -> VARIABLE comparacion CHAR .

    AND             reduce using rule 265 (relacional -> VARIABLE comparacion CHAR .)
    OR              reduce using rule 265 (relacional -> VARIABLE comparacion CHAR .)
    NOT             reduce using rule 265 (relacional -> VARIABLE comparacion CHAR .)
    PAR_D           reduce using rule 265 (relacional -> VARIABLE comparacion CHAR .)


state 335

    (275) aritmetica -> VARIABLE aritmeticos VARIABLE .

    IGUAL_COMPARACION reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MAYOR           reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MENOR           reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MENOS           reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MAS             reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DIVISION        reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MOD             reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VAR             reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VAL             reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PRINT           reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    READLINE        reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    WHILE           reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    FOR             reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    IF              reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    INT             reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    LONG            reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    FLOAT           reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DEF             reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    RETURN          reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    CASE            reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    AND             reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    OR              reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    NOT             reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PAR_D           reduce using rule 275 (aritmetica -> VARIABLE aritmeticos VARIABLE .)


state 336

    (273) aritmetica -> VARIABLE aritmeticos numeros .

    IGUAL_COMPARACION reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    DIFERENTE       reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    MAYOR           reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    MENOR           reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    MENOS           reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    MAS             reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    DIVISION        reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    MOD             reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    VAR             reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    VAL             reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    VARIABLE        reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    PRINTLN         reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    PRINT           reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    READLINE        reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    WHILE           reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    FOR             reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    IF              reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    INT             reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    LONG            reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    FLOAT           reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    DOUBLE          reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    LLAVE_D         reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    DEF             reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    RETURN          reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    CASE            reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    AND             reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    OR              reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    NOT             reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)
    PAR_D           reduce using rule 273 (aritmetica -> VARIABLE aritmeticos numeros .)


state 337

    (256) relacional -> booleanos comparacion booleanos .

    AND             reduce using rule 256 (relacional -> booleanos comparacion booleanos .)
    OR              reduce using rule 256 (relacional -> booleanos comparacion booleanos .)
    NOT             reduce using rule 256 (relacional -> booleanos comparacion booleanos .)
    PAR_D           reduce using rule 256 (relacional -> booleanos comparacion booleanos .)


state 338

    (262) relacional -> booleanos comparacion VARIABLE .

    AND             reduce using rule 262 (relacional -> booleanos comparacion VARIABLE .)
    OR              reduce using rule 262 (relacional -> booleanos comparacion VARIABLE .)
    NOT             reduce using rule 262 (relacional -> booleanos comparacion VARIABLE .)
    PAR_D           reduce using rule 262 (relacional -> booleanos comparacion VARIABLE .)


state 339

    (252) relacional -> numeros comparacion numeros .
    (272) aritmetica -> numeros . aritmeticos numeros
    (274) aritmetica -> numeros . aritmeticos VARIABLE
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD

    AND             reduce using rule 252 (relacional -> numeros comparacion numeros .)
    OR              reduce using rule 252 (relacional -> numeros comparacion numeros .)
    NOT             reduce using rule 252 (relacional -> numeros comparacion numeros .)
    PAR_D           reduce using rule 252 (relacional -> numeros comparacion numeros .)
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222

    aritmeticos                    shift and go to state 228

state 340

    (255) relacional -> numeros comparacion aritmetica .
    (276) aritmetica -> aritmetica . aritmeticos numeros
    (277) aritmetica -> aritmetica . aritmeticos VARIABLE
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD

    AND             reduce using rule 255 (relacional -> numeros comparacion aritmetica .)
    OR              reduce using rule 255 (relacional -> numeros comparacion aritmetica .)
    NOT             reduce using rule 255 (relacional -> numeros comparacion aritmetica .)
    PAR_D           reduce using rule 255 (relacional -> numeros comparacion aritmetica .)
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222

    aritmeticos                    shift and go to state 230

state 341

    (260) relacional -> numeros comparacion VARIABLE .
    (273) aritmetica -> VARIABLE . aritmeticos numeros
    (275) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD

    AND             reduce using rule 260 (relacional -> numeros comparacion VARIABLE .)
    OR              reduce using rule 260 (relacional -> numeros comparacion VARIABLE .)
    NOT             reduce using rule 260 (relacional -> numeros comparacion VARIABLE .)
    PAR_D           reduce using rule 260 (relacional -> numeros comparacion VARIABLE .)
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222

    aritmeticos                    shift and go to state 213

state 342

    (272) aritmetica -> numeros aritmeticos numeros .

    IGUAL_COMPARACION reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    DIFERENTE       reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    MAYOR           reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    MENOR           reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    MENOS           reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    MAS             reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    DIVISION        reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    MOD             reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    VAR             reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    VAL             reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    VARIABLE        reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    PRINTLN         reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    PRINT           reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    READLINE        reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    WHILE           reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    FOR             reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    IF              reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    INT             reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    LONG            reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    FLOAT           reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    DOUBLE          reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    LLAVE_D         reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    DEF             reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    RETURN          reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    CASE            reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    AND             reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    OR              reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    NOT             reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)
    PAR_D           reduce using rule 272 (aritmetica -> numeros aritmeticos numeros .)


state 343

    (274) aritmetica -> numeros aritmeticos VARIABLE .

    IGUAL_COMPARACION reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    MAYOR           reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    MENOR           reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    MENOS           reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    MAS             reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    DIVISION        reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    MOD             reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    VAR             reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    VAL             reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    PRINT           reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    READLINE        reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    WHILE           reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    FOR             reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    IF              reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    INT             reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    LONG            reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    FLOAT           reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    DEF             reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    RETURN          reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    CASE            reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    AND             reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    OR              reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    NOT             reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)
    PAR_D           reduce using rule 274 (aritmetica -> numeros aritmeticos VARIABLE .)


state 344

    (253) relacional -> aritmetica comparacion aritmetica .
    (276) aritmetica -> aritmetica . aritmeticos numeros
    (277) aritmetica -> aritmetica . aritmeticos VARIABLE
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD

    AND             reduce using rule 253 (relacional -> aritmetica comparacion aritmetica .)
    OR              reduce using rule 253 (relacional -> aritmetica comparacion aritmetica .)
    NOT             reduce using rule 253 (relacional -> aritmetica comparacion aritmetica .)
    PAR_D           reduce using rule 253 (relacional -> aritmetica comparacion aritmetica .)
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222

    aritmeticos                    shift and go to state 230

state 345

    (254) relacional -> aritmetica comparacion numeros .
    (272) aritmetica -> numeros . aritmeticos numeros
    (274) aritmetica -> numeros . aritmeticos VARIABLE
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD

    AND             reduce using rule 254 (relacional -> aritmetica comparacion numeros .)
    OR              reduce using rule 254 (relacional -> aritmetica comparacion numeros .)
    NOT             reduce using rule 254 (relacional -> aritmetica comparacion numeros .)
    PAR_D           reduce using rule 254 (relacional -> aritmetica comparacion numeros .)
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222

    aritmeticos                    shift and go to state 228

state 346

    (273) aritmetica -> VARIABLE . aritmeticos numeros
    (275) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD

    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222

    aritmeticos                    shift and go to state 213

state 347

    (276) aritmetica -> aritmetica aritmeticos numeros .

    IGUAL_COMPARACION reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    DIFERENTE       reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    MAYOR           reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    MENOR           reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    MENOS           reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    MAS             reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    DIVISION        reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    MOD             reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    VAR             reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    VAL             reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    VARIABLE        reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    PRINTLN         reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    PRINT           reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    READLINE        reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    WHILE           reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    FOR             reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    IF              reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    INT             reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    LONG            reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    FLOAT           reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    DOUBLE          reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    LLAVE_D         reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    DEF             reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    RETURN          reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    CASE            reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    AND             reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    OR              reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    NOT             reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)
    PAR_D           reduce using rule 276 (aritmetica -> aritmetica aritmeticos numeros .)


state 348

    (277) aritmetica -> aritmetica aritmeticos VARIABLE .

    IGUAL_COMPARACION reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MAYOR           reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MENOR           reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MENOS           reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MAS             reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DIVISION        reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MOD             reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VAR             reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VAL             reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PRINT           reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    READLINE        reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    WHILE           reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    FOR             reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    IF              reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    INT             reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    LONG            reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    FLOAT           reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DEF             reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    RETURN          reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    CASE            reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    AND             reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    OR              reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    NOT             reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PAR_D           reduce using rule 277 (aritmetica -> aritmetica aritmeticos VARIABLE .)


state 349

    (257) relacional -> STRING comparacion STRING .

    AND             reduce using rule 257 (relacional -> STRING comparacion STRING .)
    OR              reduce using rule 257 (relacional -> STRING comparacion STRING .)
    NOT             reduce using rule 257 (relacional -> STRING comparacion STRING .)
    PAR_D           reduce using rule 257 (relacional -> STRING comparacion STRING .)


state 350

    (264) relacional -> STRING comparacion VARIABLE .

    AND             reduce using rule 264 (relacional -> STRING comparacion VARIABLE .)
    OR              reduce using rule 264 (relacional -> STRING comparacion VARIABLE .)
    NOT             reduce using rule 264 (relacional -> STRING comparacion VARIABLE .)
    PAR_D           reduce using rule 264 (relacional -> STRING comparacion VARIABLE .)


state 351

    (258) relacional -> CHAR comparacion CHAR .

    AND             reduce using rule 258 (relacional -> CHAR comparacion CHAR .)
    OR              reduce using rule 258 (relacional -> CHAR comparacion CHAR .)
    NOT             reduce using rule 258 (relacional -> CHAR comparacion CHAR .)
    PAR_D           reduce using rule 258 (relacional -> CHAR comparacion CHAR .)


state 352

    (266) relacional -> CHAR comparacion VARIABLE .

    AND             reduce using rule 266 (relacional -> CHAR comparacion VARIABLE .)
    OR              reduce using rule 266 (relacional -> CHAR comparacion VARIABLE .)
    NOT             reduce using rule 266 (relacional -> CHAR comparacion VARIABLE .)
    PAR_D           reduce using rule 266 (relacional -> CHAR comparacion VARIABLE .)


state 353

    (189) for -> FOR PAR_I VAR VARIABLE ITERATOR . VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> FOR PAR_I VAR VARIABLE ITERATOR . INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> FOR PAR_I VAR VARIABLE ITERATOR . INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 429
    INT             shift and go to state 430


state 354

    (190) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 431


state 355

    (191) for -> FOR PAR_I VARIABLE ITERATOR INT . TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> FOR PAR_I VARIABLE ITERATOR INT . UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    TO              shift and go to state 432
    UNTIL           shift and go to state 433


state 356

    (234) if -> IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 434
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 357

    (3) io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .

    OBJECT          reduce using rule 3 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    IMPORT          reduce using rule 3 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)


state 358

    (231) defcase -> CASE SUBGUION . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 435


state 359

    (203) caseInt -> CASE INT FUNCION_FLECHA . codeBlock
    (232) codeBlock -> . contenidoLine
    (233) codeBlock -> . LLAVE_I contenido LLAVE_D
    (39) contenidoLine -> . asignacion
    (40) contenidoLine -> . reasignacion
    (41) contenidoLine -> . funcall
    (42) contenidoLine -> . impresion
    (43) contenidoLine -> . entrada
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 438
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 444
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24

    codeBlock                      shift and go to state 436
    contenidoLine                  shift and go to state 437
    asignacion                     shift and go to state 439
    reasignacion                   shift and go to state 440
    funcall                        shift and go to state 441
    impresion                      shift and go to state 442
    entrada                        shift and go to state 443
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35

state 360

    (207) caseLgn -> CASE LONG FUNCION_FLECHA . codeBlock
    (232) codeBlock -> . contenidoLine
    (233) codeBlock -> . LLAVE_I contenido LLAVE_D
    (39) contenidoLine -> . asignacion
    (40) contenidoLine -> . reasignacion
    (41) contenidoLine -> . funcall
    (42) contenidoLine -> . impresion
    (43) contenidoLine -> . entrada
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 438
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 444
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24

    codeBlock                      shift and go to state 445
    contenidoLine                  shift and go to state 437
    asignacion                     shift and go to state 439
    reasignacion                   shift and go to state 440
    funcall                        shift and go to state 441
    impresion                      shift and go to state 442
    entrada                        shift and go to state 443
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35

state 361

    (211) caseFlt -> CASE FLOAT FUNCION_FLECHA . codeBlock
    (232) codeBlock -> . contenidoLine
    (233) codeBlock -> . LLAVE_I contenido LLAVE_D
    (39) contenidoLine -> . asignacion
    (40) contenidoLine -> . reasignacion
    (41) contenidoLine -> . funcall
    (42) contenidoLine -> . impresion
    (43) contenidoLine -> . entrada
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 438
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 444
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24

    codeBlock                      shift and go to state 446
    contenidoLine                  shift and go to state 437
    asignacion                     shift and go to state 439
    reasignacion                   shift and go to state 440
    funcall                        shift and go to state 441
    impresion                      shift and go to state 442
    entrada                        shift and go to state 443
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35

state 362

    (215) caseDob -> CASE DOUBLE FUNCION_FLECHA . codeBlock
    (232) codeBlock -> . contenidoLine
    (233) codeBlock -> . LLAVE_I contenido LLAVE_D
    (39) contenidoLine -> . asignacion
    (40) contenidoLine -> . reasignacion
    (41) contenidoLine -> . funcall
    (42) contenidoLine -> . impresion
    (43) contenidoLine -> . entrada
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 438
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 444
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24

    codeBlock                      shift and go to state 447
    contenidoLine                  shift and go to state 437
    asignacion                     shift and go to state 439
    reasignacion                   shift and go to state 440
    funcall                        shift and go to state 441
    impresion                      shift and go to state 442
    entrada                        shift and go to state 443
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35

state 363

    (219) caseStr -> CASE STRING FUNCION_FLECHA . codeBlock
    (232) codeBlock -> . contenidoLine
    (233) codeBlock -> . LLAVE_I contenido LLAVE_D
    (39) contenidoLine -> . asignacion
    (40) contenidoLine -> . reasignacion
    (41) contenidoLine -> . funcall
    (42) contenidoLine -> . impresion
    (43) contenidoLine -> . entrada
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 438
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 444
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24

    codeBlock                      shift and go to state 448
    contenidoLine                  shift and go to state 437
    asignacion                     shift and go to state 439
    reasignacion                   shift and go to state 440
    funcall                        shift and go to state 441
    impresion                      shift and go to state 442
    entrada                        shift and go to state 443
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35

state 364

    (223) caseChar -> CASE CHAR FUNCION_FLECHA . codeBlock
    (232) codeBlock -> . contenidoLine
    (233) codeBlock -> . LLAVE_I contenido LLAVE_D
    (39) contenidoLine -> . asignacion
    (40) contenidoLine -> . reasignacion
    (41) contenidoLine -> . funcall
    (42) contenidoLine -> . impresion
    (43) contenidoLine -> . entrada
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 438
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 444
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24

    codeBlock                      shift and go to state 449
    contenidoLine                  shift and go to state 437
    asignacion                     shift and go to state 439
    reasignacion                   shift and go to state 440
    funcall                        shift and go to state 441
    impresion                      shift and go to state 442
    entrada                        shift and go to state 443
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35

state 365

    (227) caseBool -> CASE booleanos FUNCION_FLECHA . codeBlock
    (232) codeBlock -> . contenidoLine
    (233) codeBlock -> . LLAVE_I contenido LLAVE_D
    (39) contenidoLine -> . asignacion
    (40) contenidoLine -> . reasignacion
    (41) contenidoLine -> . funcall
    (42) contenidoLine -> . impresion
    (43) contenidoLine -> . entrada
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 438
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 444
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24

    codeBlock                      shift and go to state 450
    contenidoLine                  shift and go to state 437
    asignacion                     shift and go to state 439
    reasignacion                   shift and go to state 440
    funcall                        shift and go to state 441
    impresion                      shift and go to state 442
    entrada                        shift and go to state 443
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35

state 366

    (119) valor -> VARIABLE PAR_I VARIABLE PAR_D .

    COMA            reduce using rule 119 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    PAR_D           reduce using rule 119 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    MAS             reduce using rule 119 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    VAR             reduce using rule 119 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    VAL             reduce using rule 119 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    VARIABLE        reduce using rule 119 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    PRINTLN         reduce using rule 119 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    PRINT           reduce using rule 119 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    READLINE        reduce using rule 119 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    WHILE           reduce using rule 119 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    FOR             reduce using rule 119 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    IF              reduce using rule 119 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    INT             reduce using rule 119 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    LONG            reduce using rule 119 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    FLOAT           reduce using rule 119 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    DOUBLE          reduce using rule 119 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    LLAVE_D         reduce using rule 119 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    RETURN          reduce using rule 119 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    CASE            reduce using rule 119 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)


state 367

    (120) valor -> VARIABLE PAR_I INT PAR_D .

    COMA            reduce using rule 120 (valor -> VARIABLE PAR_I INT PAR_D .)
    PAR_D           reduce using rule 120 (valor -> VARIABLE PAR_I INT PAR_D .)
    MAS             reduce using rule 120 (valor -> VARIABLE PAR_I INT PAR_D .)
    VAR             reduce using rule 120 (valor -> VARIABLE PAR_I INT PAR_D .)
    VAL             reduce using rule 120 (valor -> VARIABLE PAR_I INT PAR_D .)
    VARIABLE        reduce using rule 120 (valor -> VARIABLE PAR_I INT PAR_D .)
    PRINTLN         reduce using rule 120 (valor -> VARIABLE PAR_I INT PAR_D .)
    PRINT           reduce using rule 120 (valor -> VARIABLE PAR_I INT PAR_D .)
    READLINE        reduce using rule 120 (valor -> VARIABLE PAR_I INT PAR_D .)
    WHILE           reduce using rule 120 (valor -> VARIABLE PAR_I INT PAR_D .)
    FOR             reduce using rule 120 (valor -> VARIABLE PAR_I INT PAR_D .)
    IF              reduce using rule 120 (valor -> VARIABLE PAR_I INT PAR_D .)
    INT             reduce using rule 120 (valor -> VARIABLE PAR_I INT PAR_D .)
    LONG            reduce using rule 120 (valor -> VARIABLE PAR_I INT PAR_D .)
    FLOAT           reduce using rule 120 (valor -> VARIABLE PAR_I INT PAR_D .)
    DOUBLE          reduce using rule 120 (valor -> VARIABLE PAR_I INT PAR_D .)
    LLAVE_D         reduce using rule 120 (valor -> VARIABLE PAR_I INT PAR_D .)
    RETURN          reduce using rule 120 (valor -> VARIABLE PAR_I INT PAR_D .)
    CASE            reduce using rule 120 (valor -> VARIABLE PAR_I INT PAR_D .)


state 368

    (237) elseif -> ELSE IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D
    (238) elseif -> ELSE IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D elseif

    LLAVE_I         shift and go to state 451


state 369

    (116) valor -> VARIABLE .
    (119) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (120) valor -> VARIABLE . PAR_I INT PAR_D
    (273) aritmetica -> VARIABLE . aritmeticos numeros
    (275) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (167) castingcall -> VARIABLE . PUNTO castingfun
    (157) funcall -> VARIABLE . varparen
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD
    (158) varparen -> . PAR_I valores PAR_D
    (159) varparen -> . PAR_I PAR_D
    (160) varparen -> . varparen PAR_I valores PAR_D
    (161) varparen -> . varparen PAR_I PAR_D

    VAR             reduce using rule 116 (valor -> VARIABLE .)
    VAL             reduce using rule 116 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 116 (valor -> VARIABLE .)
    PRINTLN         reduce using rule 116 (valor -> VARIABLE .)
    PRINT           reduce using rule 116 (valor -> VARIABLE .)
    READLINE        reduce using rule 116 (valor -> VARIABLE .)
    WHILE           reduce using rule 116 (valor -> VARIABLE .)
    FOR             reduce using rule 116 (valor -> VARIABLE .)
    IF              reduce using rule 116 (valor -> VARIABLE .)
    INT             reduce using rule 116 (valor -> VARIABLE .)
    LONG            reduce using rule 116 (valor -> VARIABLE .)
    FLOAT           reduce using rule 116 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 116 (valor -> VARIABLE .)
    LLAVE_D         reduce using rule 116 (valor -> VARIABLE .)
    RETURN          reduce using rule 116 (valor -> VARIABLE .)
    CASE            reduce using rule 116 (valor -> VARIABLE .)
    PAR_I           shift and go to state 452
    PUNTO           shift and go to state 301
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222

    aritmeticos                    shift and go to state 213
    varparen                       shift and go to state 40

state 370

    (101) reasignacion -> VARIABLE IGUAL valor .

    VAR             reduce using rule 101 (reasignacion -> VARIABLE IGUAL valor .)
    VAL             reduce using rule 101 (reasignacion -> VARIABLE IGUAL valor .)
    VARIABLE        reduce using rule 101 (reasignacion -> VARIABLE IGUAL valor .)
    PRINTLN         reduce using rule 101 (reasignacion -> VARIABLE IGUAL valor .)
    PRINT           reduce using rule 101 (reasignacion -> VARIABLE IGUAL valor .)
    READLINE        reduce using rule 101 (reasignacion -> VARIABLE IGUAL valor .)
    WHILE           reduce using rule 101 (reasignacion -> VARIABLE IGUAL valor .)
    FOR             reduce using rule 101 (reasignacion -> VARIABLE IGUAL valor .)
    IF              reduce using rule 101 (reasignacion -> VARIABLE IGUAL valor .)
    INT             reduce using rule 101 (reasignacion -> VARIABLE IGUAL valor .)
    LONG            reduce using rule 101 (reasignacion -> VARIABLE IGUAL valor .)
    FLOAT           reduce using rule 101 (reasignacion -> VARIABLE IGUAL valor .)
    DOUBLE          reduce using rule 101 (reasignacion -> VARIABLE IGUAL valor .)
    LLAVE_D         reduce using rule 101 (reasignacion -> VARIABLE IGUAL valor .)
    RETURN          reduce using rule 101 (reasignacion -> VARIABLE IGUAL valor .)
    CASE            reduce using rule 101 (reasignacion -> VARIABLE IGUAL valor .)


state 371

    (102) reasignacion -> VARIABLE IGUAL returnfun .

    VAR             reduce using rule 102 (reasignacion -> VARIABLE IGUAL returnfun .)
    VAL             reduce using rule 102 (reasignacion -> VARIABLE IGUAL returnfun .)
    VARIABLE        reduce using rule 102 (reasignacion -> VARIABLE IGUAL returnfun .)
    PRINTLN         reduce using rule 102 (reasignacion -> VARIABLE IGUAL returnfun .)
    PRINT           reduce using rule 102 (reasignacion -> VARIABLE IGUAL returnfun .)
    READLINE        reduce using rule 102 (reasignacion -> VARIABLE IGUAL returnfun .)
    WHILE           reduce using rule 102 (reasignacion -> VARIABLE IGUAL returnfun .)
    FOR             reduce using rule 102 (reasignacion -> VARIABLE IGUAL returnfun .)
    IF              reduce using rule 102 (reasignacion -> VARIABLE IGUAL returnfun .)
    INT             reduce using rule 102 (reasignacion -> VARIABLE IGUAL returnfun .)
    LONG            reduce using rule 102 (reasignacion -> VARIABLE IGUAL returnfun .)
    FLOAT           reduce using rule 102 (reasignacion -> VARIABLE IGUAL returnfun .)
    DOUBLE          reduce using rule 102 (reasignacion -> VARIABLE IGUAL returnfun .)
    LLAVE_D         reduce using rule 102 (reasignacion -> VARIABLE IGUAL returnfun .)
    RETURN          reduce using rule 102 (reasignacion -> VARIABLE IGUAL returnfun .)
    CASE            reduce using rule 102 (reasignacion -> VARIABLE IGUAL returnfun .)


state 372

    (103) reasignacion -> VARIABLE IGUAL aritmetica .
    (276) aritmetica -> aritmetica . aritmeticos numeros
    (277) aritmetica -> aritmetica . aritmeticos VARIABLE
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD

    VAR             reduce using rule 103 (reasignacion -> VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 103 (reasignacion -> VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 103 (reasignacion -> VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 103 (reasignacion -> VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 103 (reasignacion -> VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 103 (reasignacion -> VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 103 (reasignacion -> VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 103 (reasignacion -> VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 103 (reasignacion -> VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 103 (reasignacion -> VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 103 (reasignacion -> VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 103 (reasignacion -> VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 103 (reasignacion -> VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 103 (reasignacion -> VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 103 (reasignacion -> VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 103 (reasignacion -> VARIABLE IGUAL aritmetica .)
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222

    aritmeticos                    shift and go to state 230

state 373

    (117) valor -> numeros .
    (272) aritmetica -> numeros . aritmeticos numeros
    (274) aritmetica -> numeros . aritmeticos VARIABLE
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD

    VAR             reduce using rule 117 (valor -> numeros .)
    VAL             reduce using rule 117 (valor -> numeros .)
    VARIABLE        reduce using rule 117 (valor -> numeros .)
    PRINTLN         reduce using rule 117 (valor -> numeros .)
    PRINT           reduce using rule 117 (valor -> numeros .)
    READLINE        reduce using rule 117 (valor -> numeros .)
    WHILE           reduce using rule 117 (valor -> numeros .)
    FOR             reduce using rule 117 (valor -> numeros .)
    IF              reduce using rule 117 (valor -> numeros .)
    INT             reduce using rule 117 (valor -> numeros .)
    LONG            reduce using rule 117 (valor -> numeros .)
    FLOAT           reduce using rule 117 (valor -> numeros .)
    DOUBLE          reduce using rule 117 (valor -> numeros .)
    LLAVE_D         reduce using rule 117 (valor -> numeros .)
    RETURN          reduce using rule 117 (valor -> numeros .)
    CASE            reduce using rule 117 (valor -> numeros .)
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222

    aritmeticos                    shift and go to state 228

state 374

    (104) reasignacion -> VARIABLE PAR_I INT . PAR_D IGUAL valor
    (123) numeros -> INT .

  ! shift/reduce conflict for PAR_D resolved as shift
    PAR_D           shift and go to state 453
    COMA            reduce using rule 123 (numeros -> INT .)

  ! PAR_D           [ reduce using rule 123 (numeros -> INT .) ]


state 375

    (127) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 454


state 376

    (128) funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 128 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 128 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 128 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 128 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 128 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 128 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 128 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 128 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 128 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 128 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 128 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)


state 377

    (135) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN valor LLAVE_D
    (136) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN VARIABLE LLAVE_D
    (137) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN returnfun LLAVE_D
    (138) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN aritmetica LLAVE_D
    (139) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . RETURN valor LLAVE_D
    (140) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . RETURN VARIABLE LLAVE_D
    (141) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . RETURN returnfun LLAVE_D
    (142) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . RETURN aritmetica LLAVE_D
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    RETURN          shift and go to state 456
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 455
    aritmetica                     shift and go to state 143
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 378

    (143) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN tuple LLAVE_D
    (144) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN VARIABLE LLAVE_D
    (145) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN returnfun LLAVE_D
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 457
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 379

    (112) tipo -> ARRAYCLASS CORCHETE_I . tipo CORCHETE_D
    (105) tipo -> . CHARCLASS
    (106) tipo -> . STRINGCLASS
    (107) tipo -> . BOOLCLASS
    (108) tipo -> . INTCLASS
    (109) tipo -> . LONGCLASS
    (110) tipo -> . DOUBLECLASS
    (111) tipo -> . FLOATCLASS
    (112) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (113) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 289
    STRINGCLASS     shift and go to state 290
    BOOLCLASS       shift and go to state 291
    INTCLASS        shift and go to state 292
    LONGCLASS       shift and go to state 293
    DOUBLECLASS     shift and go to state 294
    FLOATCLASS      shift and go to state 295
    ARRAYCLASS      shift and go to state 296
    LISTCLASS       shift and go to state 297

    tipo                           shift and go to state 458

state 380

    (113) tipo -> LISTCLASS CORCHETE_I . tipo CORCHETE_D
    (105) tipo -> . CHARCLASS
    (106) tipo -> . STRINGCLASS
    (107) tipo -> . BOOLCLASS
    (108) tipo -> . INTCLASS
    (109) tipo -> . LONGCLASS
    (110) tipo -> . DOUBLECLASS
    (111) tipo -> . FLOATCLASS
    (112) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (113) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 289
    STRINGCLASS     shift and go to state 290
    BOOLCLASS       shift and go to state 291
    INTCLASS        shift and go to state 292
    LONGCLASS       shift and go to state 293
    DOUBLECLASS     shift and go to state 294
    FLOATCLASS      shift and go to state 295
    ARRAYCLASS      shift and go to state 296
    LISTCLASS       shift and go to state 297

    tipo                           shift and go to state 459

state 381

    (133) parametros -> PAR_I . declaracion PAR_D
    (134) parametros -> PAR_I . declaracion PAR_D parametros
    (129) declaracion -> . VARIABLE DOBLE_PUNTO tipo
    (130) declaracion -> . VARIABLE DOBLE_PUNTO tipo IGUAL valor

    VARIABLE        shift and go to state 153

    declaracion                    shift and go to state 152

state 382

    (134) parametros -> PAR_I declaracion PAR_D parametros .

    IGUAL           reduce using rule 134 (parametros -> PAR_I declaracion PAR_D parametros .)
    LLAVE_I         reduce using rule 134 (parametros -> PAR_I declaracion PAR_D parametros .)
    DOBLE_PUNTO     reduce using rule 134 (parametros -> PAR_I declaracion PAR_D parametros .)


state 383

    (129) declaracion -> VARIABLE DOBLE_PUNTO tipo .
    (130) declaracion -> VARIABLE DOBLE_PUNTO tipo . IGUAL valor

    PAR_D           reduce using rule 129 (declaracion -> VARIABLE DOBLE_PUNTO tipo .)
    IGUAL           shift and go to state 460


state 384

    (167) castingcall -> VARIABLE PUNTO castingfun .

    DEF             reduce using rule 167 (castingcall -> VARIABLE PUNTO castingfun .)
    VARIABLE        reduce using rule 167 (castingcall -> VARIABLE PUNTO castingfun .)
    PRINTLN         reduce using rule 167 (castingcall -> VARIABLE PUNTO castingfun .)
    PRINT           reduce using rule 167 (castingcall -> VARIABLE PUNTO castingfun .)
    READLINE        reduce using rule 167 (castingcall -> VARIABLE PUNTO castingfun .)
    VAR             reduce using rule 167 (castingcall -> VARIABLE PUNTO castingfun .)
    VAL             reduce using rule 167 (castingcall -> VARIABLE PUNTO castingfun .)
    WHILE           reduce using rule 167 (castingcall -> VARIABLE PUNTO castingfun .)
    FOR             reduce using rule 167 (castingcall -> VARIABLE PUNTO castingfun .)
    IF              reduce using rule 167 (castingcall -> VARIABLE PUNTO castingfun .)
    LLAVE_D         reduce using rule 167 (castingcall -> VARIABLE PUNTO castingfun .)
    INT             reduce using rule 167 (castingcall -> VARIABLE PUNTO castingfun .)
    LONG            reduce using rule 167 (castingcall -> VARIABLE PUNTO castingfun .)
    FLOAT           reduce using rule 167 (castingcall -> VARIABLE PUNTO castingfun .)
    DOUBLE          reduce using rule 167 (castingcall -> VARIABLE PUNTO castingfun .)
    RETURN          reduce using rule 167 (castingcall -> VARIABLE PUNTO castingfun .)
    CASE            reduce using rule 167 (castingcall -> VARIABLE PUNTO castingfun .)


state 385

    (168) castingfun -> TO_INT .

    DEF             reduce using rule 168 (castingfun -> TO_INT .)
    VARIABLE        reduce using rule 168 (castingfun -> TO_INT .)
    PRINTLN         reduce using rule 168 (castingfun -> TO_INT .)
    PRINT           reduce using rule 168 (castingfun -> TO_INT .)
    READLINE        reduce using rule 168 (castingfun -> TO_INT .)
    VAR             reduce using rule 168 (castingfun -> TO_INT .)
    VAL             reduce using rule 168 (castingfun -> TO_INT .)
    WHILE           reduce using rule 168 (castingfun -> TO_INT .)
    FOR             reduce using rule 168 (castingfun -> TO_INT .)
    IF              reduce using rule 168 (castingfun -> TO_INT .)
    LLAVE_D         reduce using rule 168 (castingfun -> TO_INT .)
    INT             reduce using rule 168 (castingfun -> TO_INT .)
    LONG            reduce using rule 168 (castingfun -> TO_INT .)
    FLOAT           reduce using rule 168 (castingfun -> TO_INT .)
    DOUBLE          reduce using rule 168 (castingfun -> TO_INT .)
    RETURN          reduce using rule 168 (castingfun -> TO_INT .)
    CASE            reduce using rule 168 (castingfun -> TO_INT .)


state 386

    (169) castingfun -> TO_DOUBLE .

    DEF             reduce using rule 169 (castingfun -> TO_DOUBLE .)
    VARIABLE        reduce using rule 169 (castingfun -> TO_DOUBLE .)
    PRINTLN         reduce using rule 169 (castingfun -> TO_DOUBLE .)
    PRINT           reduce using rule 169 (castingfun -> TO_DOUBLE .)
    READLINE        reduce using rule 169 (castingfun -> TO_DOUBLE .)
    VAR             reduce using rule 169 (castingfun -> TO_DOUBLE .)
    VAL             reduce using rule 169 (castingfun -> TO_DOUBLE .)
    WHILE           reduce using rule 169 (castingfun -> TO_DOUBLE .)
    FOR             reduce using rule 169 (castingfun -> TO_DOUBLE .)
    IF              reduce using rule 169 (castingfun -> TO_DOUBLE .)
    LLAVE_D         reduce using rule 169 (castingfun -> TO_DOUBLE .)
    INT             reduce using rule 169 (castingfun -> TO_DOUBLE .)
    LONG            reduce using rule 169 (castingfun -> TO_DOUBLE .)
    FLOAT           reduce using rule 169 (castingfun -> TO_DOUBLE .)
    DOUBLE          reduce using rule 169 (castingfun -> TO_DOUBLE .)
    RETURN          reduce using rule 169 (castingfun -> TO_DOUBLE .)
    CASE            reduce using rule 169 (castingfun -> TO_DOUBLE .)


state 387

    (170) castingfun -> TO_FLOAT .

    DEF             reduce using rule 170 (castingfun -> TO_FLOAT .)
    VARIABLE        reduce using rule 170 (castingfun -> TO_FLOAT .)
    PRINTLN         reduce using rule 170 (castingfun -> TO_FLOAT .)
    PRINT           reduce using rule 170 (castingfun -> TO_FLOAT .)
    READLINE        reduce using rule 170 (castingfun -> TO_FLOAT .)
    VAR             reduce using rule 170 (castingfun -> TO_FLOAT .)
    VAL             reduce using rule 170 (castingfun -> TO_FLOAT .)
    WHILE           reduce using rule 170 (castingfun -> TO_FLOAT .)
    FOR             reduce using rule 170 (castingfun -> TO_FLOAT .)
    IF              reduce using rule 170 (castingfun -> TO_FLOAT .)
    LLAVE_D         reduce using rule 170 (castingfun -> TO_FLOAT .)
    INT             reduce using rule 170 (castingfun -> TO_FLOAT .)
    LONG            reduce using rule 170 (castingfun -> TO_FLOAT .)
    FLOAT           reduce using rule 170 (castingfun -> TO_FLOAT .)
    DOUBLE          reduce using rule 170 (castingfun -> TO_FLOAT .)
    RETURN          reduce using rule 170 (castingfun -> TO_FLOAT .)
    CASE            reduce using rule 170 (castingfun -> TO_FLOAT .)


state 388

    (171) castingfun -> TO_LONG .

    DEF             reduce using rule 171 (castingfun -> TO_LONG .)
    VARIABLE        reduce using rule 171 (castingfun -> TO_LONG .)
    PRINTLN         reduce using rule 171 (castingfun -> TO_LONG .)
    PRINT           reduce using rule 171 (castingfun -> TO_LONG .)
    READLINE        reduce using rule 171 (castingfun -> TO_LONG .)
    VAR             reduce using rule 171 (castingfun -> TO_LONG .)
    VAL             reduce using rule 171 (castingfun -> TO_LONG .)
    WHILE           reduce using rule 171 (castingfun -> TO_LONG .)
    FOR             reduce using rule 171 (castingfun -> TO_LONG .)
    IF              reduce using rule 171 (castingfun -> TO_LONG .)
    LLAVE_D         reduce using rule 171 (castingfun -> TO_LONG .)
    INT             reduce using rule 171 (castingfun -> TO_LONG .)
    LONG            reduce using rule 171 (castingfun -> TO_LONG .)
    FLOAT           reduce using rule 171 (castingfun -> TO_LONG .)
    DOUBLE          reduce using rule 171 (castingfun -> TO_LONG .)
    RETURN          reduce using rule 171 (castingfun -> TO_LONG .)
    CASE            reduce using rule 171 (castingfun -> TO_LONG .)


state 389

    (172) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 461


state 390

    (183) tuple -> PAR_I valores PAR_D .

    DEF             reduce using rule 183 (tuple -> PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 183 (tuple -> PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 183 (tuple -> PAR_I valores PAR_D .)
    PRINT           reduce using rule 183 (tuple -> PAR_I valores PAR_D .)
    READLINE        reduce using rule 183 (tuple -> PAR_I valores PAR_D .)
    VAR             reduce using rule 183 (tuple -> PAR_I valores PAR_D .)
    VAL             reduce using rule 183 (tuple -> PAR_I valores PAR_D .)
    WHILE           reduce using rule 183 (tuple -> PAR_I valores PAR_D .)
    FOR             reduce using rule 183 (tuple -> PAR_I valores PAR_D .)
    IF              reduce using rule 183 (tuple -> PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 183 (tuple -> PAR_I valores PAR_D .)
    INT             reduce using rule 183 (tuple -> PAR_I valores PAR_D .)
    LONG            reduce using rule 183 (tuple -> PAR_I valores PAR_D .)
    FLOAT           reduce using rule 183 (tuple -> PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 183 (tuple -> PAR_I valores PAR_D .)
    RETURN          reduce using rule 183 (tuple -> PAR_I valores PAR_D .)
    CASE            reduce using rule 183 (tuple -> PAR_I valores PAR_D .)


state 391

    (166) castingcall -> returnCastable PUNTO castingfun .

    DEF             reduce using rule 166 (castingcall -> returnCastable PUNTO castingfun .)
    VARIABLE        reduce using rule 166 (castingcall -> returnCastable PUNTO castingfun .)
    PRINTLN         reduce using rule 166 (castingcall -> returnCastable PUNTO castingfun .)
    PRINT           reduce using rule 166 (castingcall -> returnCastable PUNTO castingfun .)
    READLINE        reduce using rule 166 (castingcall -> returnCastable PUNTO castingfun .)
    VAR             reduce using rule 166 (castingcall -> returnCastable PUNTO castingfun .)
    VAL             reduce using rule 166 (castingcall -> returnCastable PUNTO castingfun .)
    WHILE           reduce using rule 166 (castingcall -> returnCastable PUNTO castingfun .)
    FOR             reduce using rule 166 (castingcall -> returnCastable PUNTO castingfun .)
    IF              reduce using rule 166 (castingcall -> returnCastable PUNTO castingfun .)
    LLAVE_D         reduce using rule 166 (castingcall -> returnCastable PUNTO castingfun .)
    INT             reduce using rule 166 (castingcall -> returnCastable PUNTO castingfun .)
    LONG            reduce using rule 166 (castingcall -> returnCastable PUNTO castingfun .)
    FLOAT           reduce using rule 166 (castingcall -> returnCastable PUNTO castingfun .)
    DOUBLE          reduce using rule 166 (castingcall -> returnCastable PUNTO castingfun .)
    RETURN          reduce using rule 166 (castingcall -> returnCastable PUNTO castingfun .)
    CASE            reduce using rule 166 (castingcall -> returnCastable PUNTO castingfun .)


state 392

    (63) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 63 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 63 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 63 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 63 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 63 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 63 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 63 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 63 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 63 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 63 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 63 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 63 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 63 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 63 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 63 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 63 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 63 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)


state 393

    (60) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .

    DEF             reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VARIABLE        reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    PRINTLN         reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    PRINT           reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    READLINE        reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VAR             reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VAL             reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    WHILE           reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    FOR             reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    IF              reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    LLAVE_D         reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    INT             reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    LONG            reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    FLOAT           reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    DOUBLE          reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    RETURN          reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    CASE            reduce using rule 60 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)


state 394

    (69) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .

    DEF             reduce using rule 69 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 69 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 69 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 69 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 69 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 69 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 69 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 69 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 69 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    IF              reduce using rule 69 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 69 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    INT             reduce using rule 69 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 69 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 69 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 69 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 69 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 69 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)


state 395

    (66) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .

    DEF             reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VARIABLE        reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    PRINTLN         reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    PRINT           reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    READLINE        reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VAR             reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VAL             reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    WHILE           reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    FOR             reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    IF              reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    LLAVE_D         reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    INT             reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    LONG            reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    FLOAT           reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    DOUBLE          reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    RETURN          reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    CASE            reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)


state 396

    (75) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .

    DEF             reduce using rule 75 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 75 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 75 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 75 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 75 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 75 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 75 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 75 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 75 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    IF              reduce using rule 75 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 75 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    INT             reduce using rule 75 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 75 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 75 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 75 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 75 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 75 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)


state 397

    (72) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .

    DEF             reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VARIABLE        reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    PRINTLN         reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    PRINT           reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    READLINE        reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VAR             reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VAL             reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    WHILE           reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    FOR             reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    IF              reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    LLAVE_D         reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    INT             reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    LONG            reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    FLOAT           reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    DOUBLE          reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    RETURN          reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    CASE            reduce using rule 72 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)


state 398

    (81) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .

    DEF             reduce using rule 81 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 81 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 81 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 81 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 81 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAR             reduce using rule 81 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAL             reduce using rule 81 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 81 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FOR             reduce using rule 81 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    IF              reduce using rule 81 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 81 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    INT             reduce using rule 81 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LONG            reduce using rule 81 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 81 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 81 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 81 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    CASE            reduce using rule 81 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)


state 399

    (78) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .

    DEF             reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VARIABLE        reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    PRINTLN         reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    PRINT           reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    READLINE        reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VAR             reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VAL             reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    WHILE           reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    FOR             reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    IF              reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    LLAVE_D         reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    INT             reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    LONG            reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    FLOAT           reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    DOUBLE          reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    RETURN          reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    CASE            reduce using rule 78 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)


state 400

    (87) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 87 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 87 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 87 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 87 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 87 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 87 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 87 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 87 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 87 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 87 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 87 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 87 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 87 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 87 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 87 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 87 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 87 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)


state 401

    (84) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .

    DEF             reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VARIABLE        reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINTLN         reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINT           reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    READLINE        reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAR             reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAL             reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    WHILE           reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FOR             reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    IF              reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LLAVE_D         reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    INT             reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LONG            reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FLOAT           reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    DOUBLE          reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    RETURN          reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    CASE            reduce using rule 84 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)


state 402

    (93) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .

    DEF             reduce using rule 93 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 93 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 93 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 93 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 93 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 93 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 93 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 93 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 93 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    IF              reduce using rule 93 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 93 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    INT             reduce using rule 93 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 93 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 93 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 93 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 93 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 93 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)


state 403

    (90) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .

    DEF             reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VARIABLE        reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINTLN         reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINT           reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    READLINE        reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAR             reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAL             reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    WHILE           reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FOR             reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    IF              reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LLAVE_D         reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    INT             reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LONG            reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FLOAT           reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    DOUBLE          reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    RETURN          reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    CASE            reduce using rule 90 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)


state 404

    (99) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .

    DEF             reduce using rule 99 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 99 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 99 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 99 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 99 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 99 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 99 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 99 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 99 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    IF              reduce using rule 99 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 99 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    INT             reduce using rule 99 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 99 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 99 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 99 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 99 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 99 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)


state 405

    (96) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .

    DEF             reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VARIABLE        reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINTLN         reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINT           reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    READLINE        reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAR             reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAL             reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    WHILE           reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FOR             reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    IF              reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LLAVE_D         reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    INT             reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LONG            reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FLOAT           reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    DOUBLE          reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    RETURN          reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    CASE            reduce using rule 96 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)


state 406

    (173) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 462


state 407

    (147) dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D .

    IGUAL           reduce using rule 147 (dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D .)


state 408

    (149) tipos -> tipo tiposentry .

    PAR_D           reduce using rule 149 (tipos -> tipo tiposentry .)


state 409

    (150) tiposentry -> COMA . tipo
    (151) tiposentry -> COMA . tipo tiposentry
    (105) tipo -> . CHARCLASS
    (106) tipo -> . STRINGCLASS
    (107) tipo -> . BOOLCLASS
    (108) tipo -> . INTCLASS
    (109) tipo -> . LONGCLASS
    (110) tipo -> . DOUBLECLASS
    (111) tipo -> . FLOATCLASS
    (112) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (113) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 289
    STRINGCLASS     shift and go to state 290
    BOOLCLASS       shift and go to state 291
    INTCLASS        shift and go to state 292
    LONGCLASS       shift and go to state 293
    DOUBLECLASS     shift and go to state 294
    FLOATCLASS      shift and go to state 295
    ARRAYCLASS      shift and go to state 296
    LISTCLASS       shift and go to state 297

    tipo                           shift and go to state 463

state 410

    (175) array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 464


state 411

    (178) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 465


state 412

    (64) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 64 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 64 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 64 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 64 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 64 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 64 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 64 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 64 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 64 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 64 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 64 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 64 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 64 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 64 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 64 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 64 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 64 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)


state 413

    (62) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .

    DEF             reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VARIABLE        reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    PRINTLN         reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    PRINT           reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    READLINE        reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VAR             reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    VAL             reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    WHILE           reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    FOR             reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    IF              reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    LLAVE_D         reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    INT             reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    LONG            reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    FLOAT           reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    DOUBLE          reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    RETURN          reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)
    CASE            reduce using rule 62 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG .)


state 414

    (70) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .

    DEF             reduce using rule 70 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 70 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 70 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 70 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 70 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 70 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 70 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 70 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 70 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    IF              reduce using rule 70 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 70 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    INT             reduce using rule 70 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 70 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 70 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 70 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 70 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 70 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)


state 415

    (68) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .

    DEF             reduce using rule 68 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VARIABLE        reduce using rule 68 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    PRINTLN         reduce using rule 68 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    PRINT           reduce using rule 68 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    READLINE        reduce using rule 68 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VAR             reduce using rule 68 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    VAL             reduce using rule 68 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    WHILE           reduce using rule 68 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    FOR             reduce using rule 68 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    IF              reduce using rule 68 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    LLAVE_D         reduce using rule 68 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    INT             reduce using rule 68 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    LONG            reduce using rule 68 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    FLOAT           reduce using rule 68 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    DOUBLE          reduce using rule 68 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    RETURN          reduce using rule 68 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)
    CASE            reduce using rule 68 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT .)


state 416

    (76) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .

    DEF             reduce using rule 76 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 76 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 76 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 76 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 76 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 76 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 76 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 76 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 76 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    IF              reduce using rule 76 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 76 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    INT             reduce using rule 76 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 76 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 76 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 76 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 76 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 76 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)


state 417

    (74) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .

    DEF             reduce using rule 74 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VARIABLE        reduce using rule 74 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    PRINTLN         reduce using rule 74 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    PRINT           reduce using rule 74 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    READLINE        reduce using rule 74 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VAR             reduce using rule 74 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    VAL             reduce using rule 74 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    WHILE           reduce using rule 74 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    FOR             reduce using rule 74 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    IF              reduce using rule 74 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    LLAVE_D         reduce using rule 74 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    INT             reduce using rule 74 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    LONG            reduce using rule 74 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    FLOAT           reduce using rule 74 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    DOUBLE          reduce using rule 74 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    RETURN          reduce using rule 74 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)
    CASE            reduce using rule 74 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT .)


state 418

    (82) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .

    DEF             reduce using rule 82 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 82 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 82 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 82 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 82 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAR             reduce using rule 82 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAL             reduce using rule 82 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 82 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FOR             reduce using rule 82 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    IF              reduce using rule 82 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 82 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    INT             reduce using rule 82 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LONG            reduce using rule 82 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 82 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 82 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 82 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    CASE            reduce using rule 82 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)


state 419

    (80) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .

    DEF             reduce using rule 80 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VARIABLE        reduce using rule 80 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    PRINTLN         reduce using rule 80 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    PRINT           reduce using rule 80 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    READLINE        reduce using rule 80 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VAR             reduce using rule 80 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    VAL             reduce using rule 80 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    WHILE           reduce using rule 80 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    FOR             reduce using rule 80 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    IF              reduce using rule 80 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    LLAVE_D         reduce using rule 80 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    INT             reduce using rule 80 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    LONG            reduce using rule 80 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    FLOAT           reduce using rule 80 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    DOUBLE          reduce using rule 80 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    RETURN          reduce using rule 80 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)
    CASE            reduce using rule 80 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE .)


state 420

    (88) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 88 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 88 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 88 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 88 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 88 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 88 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 88 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 88 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 88 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 88 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 88 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 88 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 88 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 88 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 88 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 88 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 88 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)


state 421

    (86) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .

    DEF             reduce using rule 86 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VARIABLE        reduce using rule 86 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINTLN         reduce using rule 86 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINT           reduce using rule 86 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    READLINE        reduce using rule 86 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAR             reduce using rule 86 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAL             reduce using rule 86 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    WHILE           reduce using rule 86 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FOR             reduce using rule 86 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    IF              reduce using rule 86 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LLAVE_D         reduce using rule 86 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    INT             reduce using rule 86 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LONG            reduce using rule 86 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FLOAT           reduce using rule 86 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    DOUBLE          reduce using rule 86 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    RETURN          reduce using rule 86 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    CASE            reduce using rule 86 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)


state 422

    (94) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .

    DEF             reduce using rule 94 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 94 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 94 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 94 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 94 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 94 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 94 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 94 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 94 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    IF              reduce using rule 94 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 94 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    INT             reduce using rule 94 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 94 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 94 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 94 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 94 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 94 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)


state 423

    (92) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .

    DEF             reduce using rule 92 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VARIABLE        reduce using rule 92 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINTLN         reduce using rule 92 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINT           reduce using rule 92 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    READLINE        reduce using rule 92 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAR             reduce using rule 92 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAL             reduce using rule 92 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    WHILE           reduce using rule 92 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FOR             reduce using rule 92 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    IF              reduce using rule 92 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LLAVE_D         reduce using rule 92 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    INT             reduce using rule 92 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LONG            reduce using rule 92 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FLOAT           reduce using rule 92 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    DOUBLE          reduce using rule 92 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    RETURN          reduce using rule 92 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    CASE            reduce using rule 92 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)


state 424

    (100) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .

    DEF             reduce using rule 100 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 100 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 100 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 100 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 100 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 100 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 100 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 100 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 100 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    IF              reduce using rule 100 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 100 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    INT             reduce using rule 100 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 100 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 100 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 100 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 100 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 100 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)


state 425

    (98) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .

    DEF             reduce using rule 98 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VARIABLE        reduce using rule 98 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINTLN         reduce using rule 98 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINT           reduce using rule 98 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    READLINE        reduce using rule 98 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAR             reduce using rule 98 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAL             reduce using rule 98 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    WHILE           reduce using rule 98 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FOR             reduce using rule 98 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    IF              reduce using rule 98 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LLAVE_D         reduce using rule 98 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    INT             reduce using rule 98 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LONG            reduce using rule 98 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FLOAT           reduce using rule 98 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    DOUBLE          reduce using rule 98 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    RETURN          reduce using rule 98 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    CASE            reduce using rule 98 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)


state 426

    (176) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 466


state 427

    (179) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo . CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo . CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    CORCHETE_D      shift and go to state 467


state 428

    (188) while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 468


state 429

    (189) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 469


state 430

    (193) for -> FOR PAR_I VAR VARIABLE ITERATOR INT . TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> FOR PAR_I VAR VARIABLE ITERATOR INT . UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    TO              shift and go to state 470
    UNTIL           shift and go to state 471


state 431

    (190) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 472


state 432

    (191) for -> FOR PAR_I VARIABLE ITERATOR INT TO . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 473


state 433

    (192) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 474


state 434

    (234) if -> IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 475


state 435

    (231) defcase -> CASE SUBGUION FUNCION_FLECHA . codeBlock
    (232) codeBlock -> . contenidoLine
    (233) codeBlock -> . LLAVE_I contenido LLAVE_D
    (39) contenidoLine -> . asignacion
    (40) contenidoLine -> . reasignacion
    (41) contenidoLine -> . funcall
    (42) contenidoLine -> . impresion
    (43) contenidoLine -> . entrada
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D

    LLAVE_I         shift and go to state 438
    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 444
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24

    codeBlock                      shift and go to state 476
    contenidoLine                  shift and go to state 437
    asignacion                     shift and go to state 439
    reasignacion                   shift and go to state 440
    funcall                        shift and go to state 441
    impresion                      shift and go to state 442
    entrada                        shift and go to state 443
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35

state 436

    (203) caseInt -> CASE INT FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 203 (caseInt -> CASE INT FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 203 (caseInt -> CASE INT FUNCION_FLECHA codeBlock .)


state 437

    (232) codeBlock -> contenidoLine .

    CASE            reduce using rule 232 (codeBlock -> contenidoLine .)
    LLAVE_D         reduce using rule 232 (codeBlock -> contenidoLine .)


state 438

    (233) codeBlock -> LLAVE_I . contenido LLAVE_D
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 477
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 439

    (39) contenidoLine -> asignacion .

    CASE            reduce using rule 39 (contenidoLine -> asignacion .)
    LLAVE_D         reduce using rule 39 (contenidoLine -> asignacion .)


state 440

    (40) contenidoLine -> reasignacion .

    CASE            reduce using rule 40 (contenidoLine -> reasignacion .)
    LLAVE_D         reduce using rule 40 (contenidoLine -> reasignacion .)


state 441

    (41) contenidoLine -> funcall .

    CASE            reduce using rule 41 (contenidoLine -> funcall .)
    LLAVE_D         reduce using rule 41 (contenidoLine -> funcall .)


state 442

    (42) contenidoLine -> impresion .

    CASE            reduce using rule 42 (contenidoLine -> impresion .)
    LLAVE_D         reduce using rule 42 (contenidoLine -> impresion .)


state 443

    (43) contenidoLine -> entrada .

    CASE            reduce using rule 43 (contenidoLine -> entrada .)
    LLAVE_D         reduce using rule 43 (contenidoLine -> entrada .)


state 444

    (101) reasignacion -> VARIABLE . IGUAL valor
    (102) reasignacion -> VARIABLE . IGUAL returnfun
    (103) reasignacion -> VARIABLE . IGUAL aritmetica
    (104) reasignacion -> VARIABLE . PAR_I INT PAR_D IGUAL valor
    (157) funcall -> VARIABLE . varparen
    (158) varparen -> . PAR_I valores PAR_D
    (159) varparen -> . PAR_I PAR_D
    (160) varparen -> . varparen PAR_I valores PAR_D
    (161) varparen -> . varparen PAR_I PAR_D

    IGUAL           shift and go to state 282
    PAR_I           shift and go to state 283

    varparen                       shift and go to state 40

state 445

    (207) caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 207 (caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 207 (caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .)


state 446

    (211) caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 211 (caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 211 (caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .)


state 447

    (215) caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 215 (caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 215 (caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .)


state 448

    (219) caseStr -> CASE STRING FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 219 (caseStr -> CASE STRING FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 219 (caseStr -> CASE STRING FUNCION_FLECHA codeBlock .)


state 449

    (223) caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 223 (caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 223 (caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .)


state 450

    (227) caseBool -> CASE booleanos FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 227 (caseBool -> CASE booleanos FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 227 (caseBool -> CASE booleanos FUNCION_FLECHA codeBlock .)


state 451

    (237) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (238) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D elseif
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 478
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 452

    (119) valor -> VARIABLE PAR_I . VARIABLE PAR_D
    (120) valor -> VARIABLE PAR_I . INT PAR_D
    (158) varparen -> PAR_I . valores PAR_D
    (159) varparen -> PAR_I . PAR_D
    (181) valores -> . valor
    (182) valores -> . valor COMA valores
    (114) valor -> . STRING
    (115) valor -> . CHAR
    (116) valor -> . VARIABLE
    (117) valor -> . numeros
    (118) valor -> . booleanos
    (119) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (120) valor -> . VARIABLE PAR_I INT PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    VARIABLE        shift and go to state 479
    INT             shift and go to state 480
    PAR_D           shift and go to state 66
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valores                        shift and go to state 65
    valor                          shift and go to state 67
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72

state 453

    (104) reasignacion -> VARIABLE PAR_I INT PAR_D . IGUAL valor

    IGUAL           shift and go to state 481


state 454

    (127) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 127 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 127 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 127 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 127 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 127 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 127 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 127 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 127 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 127 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 127 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 127 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)


state 455

    (135) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN valor LLAVE_D
    (136) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN VARIABLE LLAVE_D
    (137) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN returnfun LLAVE_D
    (138) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN aritmetica LLAVE_D

    RETURN          shift and go to state 482


state 456

    (139) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN . valor LLAVE_D
    (140) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN . VARIABLE LLAVE_D
    (141) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN . returnfun LLAVE_D
    (142) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN . aritmetica LLAVE_D
    (114) valor -> . STRING
    (115) valor -> . CHAR
    (116) valor -> . VARIABLE
    (117) valor -> . numeros
    (118) valor -> . booleanos
    (119) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (120) valor -> . VARIABLE PAR_I INT PAR_D
    (162) returnfun -> . returnCastable
    (163) returnfun -> . castingcall
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE
    (164) returnCastable -> . entrada
    (165) returnCastable -> . funcall
    (166) castingcall -> . returnCastable PUNTO castingfun
    (167) castingcall -> . VARIABLE PUNTO castingfun
    (156) entrada -> . READLINE PAR_I PAR_D
    (157) funcall -> . VARIABLE varparen

    VARIABLE        shift and go to state 483
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    READLINE        shift and go to state 24

    valor                          shift and go to state 484
    returnfun                      shift and go to state 485
    aritmetica                     shift and go to state 486
    numeros                        shift and go to state 373
    booleanos                      shift and go to state 72
    returnCastable                 shift and go to state 170
    castingcall                    shift and go to state 171
    entrada                        shift and go to state 172
    funcall                        shift and go to state 173

state 457

    (143) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN tuple LLAVE_D
    (144) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN VARIABLE LLAVE_D
    (145) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN returnfun LLAVE_D

    RETURN          shift and go to state 487


state 458

    (112) tipo -> ARRAYCLASS CORCHETE_I tipo . CORCHETE_D

    CORCHETE_D      shift and go to state 488


state 459

    (113) tipo -> LISTCLASS CORCHETE_I tipo . CORCHETE_D

    CORCHETE_D      shift and go to state 489


state 460

    (130) declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL . valor
    (114) valor -> . STRING
    (115) valor -> . CHAR
    (116) valor -> . VARIABLE
    (117) valor -> . numeros
    (118) valor -> . booleanos
    (119) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (120) valor -> . VARIABLE PAR_I INT PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valor                          shift and go to state 490
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72

state 461

    (172) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 172 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 172 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 172 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 172 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 172 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 172 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 172 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 172 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 172 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 172 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 172 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 172 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 172 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 172 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 172 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 172 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 172 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 462

    (173) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    IGUAL           shift and go to state 491


state 463

    (150) tiposentry -> COMA tipo .
    (151) tiposentry -> COMA tipo . tiposentry
    (150) tiposentry -> . COMA tipo
    (151) tiposentry -> . COMA tipo tiposentry

    PAR_D           reduce using rule 150 (tiposentry -> COMA tipo .)
    COMA            shift and go to state 409

    tiposentry                     shift and go to state 492

state 464

    (175) array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 175 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 175 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 175 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 175 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 175 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 175 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 175 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 175 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 175 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 175 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 175 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 175 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 175 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 175 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 175 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 175 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 175 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 465

    (178) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 178 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 178 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 178 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 178 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 178 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 178 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 178 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 178 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 178 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 178 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 178 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 178 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 178 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 178 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 178 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 178 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 178 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)


state 466

    (176) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    IGUAL           shift and go to state 493


state 467

    (179) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D . IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D . IGUAL LISTCLASS PAR_I valores PAR_D

    IGUAL           shift and go to state 494


state 468

    (188) while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 188 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 188 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 188 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 188 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 188 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 188 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 188 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 188 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 188 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 188 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 188 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 188 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 188 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 188 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 188 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 188 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)


state 469

    (189) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 495


state 470

    (193) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 496


state 471

    (194) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 497


state 472

    (190) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I . contenido LLAVE_D
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 498
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 473

    (191) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 499


state 474

    (192) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 500


state 475

    (234) if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .

    ELSE            reduce using rule 234 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 234 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 234 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 234 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 234 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 234 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 234 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 234 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 234 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 234 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 234 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 234 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 234 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 234 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 234 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 234 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 234 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)


state 476

    (231) defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock .

    LLAVE_D         reduce using rule 231 (defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock .)


state 477

    (233) codeBlock -> LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 501


state 478

    (237) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D
    (238) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D elseif

    LLAVE_D         shift and go to state 502


state 479

    (119) valor -> VARIABLE PAR_I VARIABLE . PAR_D
    (116) valor -> VARIABLE .
    (119) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (120) valor -> VARIABLE . PAR_I INT PAR_D

  ! shift/reduce conflict for PAR_D resolved as shift
    PAR_D           shift and go to state 366
    COMA            reduce using rule 116 (valor -> VARIABLE .)
    PAR_I           shift and go to state 131

  ! PAR_D           [ reduce using rule 116 (valor -> VARIABLE .) ]


state 480

    (120) valor -> VARIABLE PAR_I INT . PAR_D
    (123) numeros -> INT .

  ! shift/reduce conflict for PAR_D resolved as shift
    PAR_D           shift and go to state 367
    COMA            reduce using rule 123 (numeros -> INT .)

  ! PAR_D           [ reduce using rule 123 (numeros -> INT .) ]


state 481

    (104) reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL . valor
    (114) valor -> . STRING
    (115) valor -> . CHAR
    (116) valor -> . VARIABLE
    (117) valor -> . numeros
    (118) valor -> . booleanos
    (119) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (120) valor -> . VARIABLE PAR_I INT PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valor                          shift and go to state 503
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72

state 482

    (135) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . valor LLAVE_D
    (136) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . VARIABLE LLAVE_D
    (137) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . returnfun LLAVE_D
    (138) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . aritmetica LLAVE_D
    (114) valor -> . STRING
    (115) valor -> . CHAR
    (116) valor -> . VARIABLE
    (117) valor -> . numeros
    (118) valor -> . booleanos
    (119) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (120) valor -> . VARIABLE PAR_I INT PAR_D
    (162) returnfun -> . returnCastable
    (163) returnfun -> . castingcall
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE
    (164) returnCastable -> . entrada
    (165) returnCastable -> . funcall
    (166) castingcall -> . returnCastable PUNTO castingfun
    (167) castingcall -> . VARIABLE PUNTO castingfun
    (156) entrada -> . READLINE PAR_I PAR_D
    (157) funcall -> . VARIABLE varparen

    VARIABLE        shift and go to state 504
    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78
    READLINE        shift and go to state 24

    valor                          shift and go to state 505
    returnfun                      shift and go to state 506
    aritmetica                     shift and go to state 507
    numeros                        shift and go to state 373
    booleanos                      shift and go to state 72
    returnCastable                 shift and go to state 170
    castingcall                    shift and go to state 171
    entrada                        shift and go to state 172
    funcall                        shift and go to state 173

state 483

    (140) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE . LLAVE_D
    (116) valor -> VARIABLE .
    (119) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (120) valor -> VARIABLE . PAR_I INT PAR_D
    (273) aritmetica -> VARIABLE . aritmeticos numeros
    (275) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (167) castingcall -> VARIABLE . PUNTO castingfun
    (157) funcall -> VARIABLE . varparen
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD
    (158) varparen -> . PAR_I valores PAR_D
    (159) varparen -> . PAR_I PAR_D
    (160) varparen -> . varparen PAR_I valores PAR_D
    (161) varparen -> . varparen PAR_I PAR_D

  ! shift/reduce conflict for LLAVE_D resolved as shift
    LLAVE_D         shift and go to state 508
    PAR_I           shift and go to state 452
    PUNTO           shift and go to state 301
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222

  ! LLAVE_D         [ reduce using rule 116 (valor -> VARIABLE .) ]

    aritmeticos                    shift and go to state 213
    varparen                       shift and go to state 40

state 484

    (139) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor . LLAVE_D

    LLAVE_D         shift and go to state 509


state 485

    (141) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun . LLAVE_D

    LLAVE_D         shift and go to state 510


state 486

    (142) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica . LLAVE_D
    (276) aritmetica -> aritmetica . aritmeticos numeros
    (277) aritmetica -> aritmetica . aritmeticos VARIABLE
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD

    LLAVE_D         shift and go to state 511
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222

    aritmeticos                    shift and go to state 230

state 487

    (143) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . tuple LLAVE_D
    (144) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . VARIABLE LLAVE_D
    (145) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . returnfun LLAVE_D
    (183) tuple -> . PAR_I valores PAR_D
    (162) returnfun -> . returnCastable
    (163) returnfun -> . castingcall
    (164) returnCastable -> . entrada
    (165) returnCastable -> . funcall
    (166) castingcall -> . returnCastable PUNTO castingfun
    (167) castingcall -> . VARIABLE PUNTO castingfun
    (156) entrada -> . READLINE PAR_I PAR_D
    (157) funcall -> . VARIABLE varparen

    VARIABLE        shift and go to state 512
    PAR_I           shift and go to state 169
    READLINE        shift and go to state 24

    tuple                          shift and go to state 513
    returnfun                      shift and go to state 514
    returnCastable                 shift and go to state 170
    castingcall                    shift and go to state 171
    entrada                        shift and go to state 172
    funcall                        shift and go to state 173

state 488

    (112) tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .

    IGUAL           reduce using rule 112 (tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .)
    COMA            reduce using rule 112 (tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .)
    PAR_D           reduce using rule 112 (tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .)
    CORCHETE_D      reduce using rule 112 (tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .)


state 489

    (113) tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .

    IGUAL           reduce using rule 113 (tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .)
    COMA            reduce using rule 113 (tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .)
    PAR_D           reduce using rule 113 (tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .)
    CORCHETE_D      reduce using rule 113 (tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .)


state 490

    (130) declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor .

    PAR_D           reduce using rule 130 (declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor .)


state 491

    (173) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (174) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    ARRAYCLASS      shift and go to state 515
    NEW             shift and go to state 516


state 492

    (151) tiposentry -> COMA tipo tiposentry .

    PAR_D           reduce using rule 151 (tiposentry -> COMA tipo tiposentry .)


state 493

    (176) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (177) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    ARRAYCLASS      shift and go to state 517
    NEW             shift and go to state 518


state 494

    (179) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL . NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL . LISTCLASS PAR_I valores PAR_D

    NEW             shift and go to state 520
    LISTCLASS       shift and go to state 519


state 495

    (189) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I . contenido LLAVE_D
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 521
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 496

    (193) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 522


state 497

    (194) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 523


state 498

    (190) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 524


state 499

    (191) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 525


state 500

    (192) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 526


state 501

    (233) codeBlock -> LLAVE_I contenido LLAVE_D .

    CASE            reduce using rule 233 (codeBlock -> LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 233 (codeBlock -> LLAVE_I contenido LLAVE_D .)


state 502

    (237) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .
    (238) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D . elseif
    (237) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (238) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

  ! shift/reduce conflict for ELSE resolved as shift
    DEF             reduce using rule 237 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 237 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 237 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 237 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 237 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 237 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 237 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 237 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 237 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 237 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 237 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 237 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 237 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 237 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 237 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 237 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    ELSE            shift and go to state 527

  ! ELSE            [ reduce using rule 237 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .) ]

    elseif                         shift and go to state 528

state 503

    (104) reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .

    VAR             reduce using rule 104 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    VAL             reduce using rule 104 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    VARIABLE        reduce using rule 104 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    PRINTLN         reduce using rule 104 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    PRINT           reduce using rule 104 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    READLINE        reduce using rule 104 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    WHILE           reduce using rule 104 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    FOR             reduce using rule 104 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    IF              reduce using rule 104 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    INT             reduce using rule 104 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    LONG            reduce using rule 104 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    FLOAT           reduce using rule 104 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    DOUBLE          reduce using rule 104 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    LLAVE_D         reduce using rule 104 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    RETURN          reduce using rule 104 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    CASE            reduce using rule 104 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)


state 504

    (136) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE . LLAVE_D
    (116) valor -> VARIABLE .
    (119) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (120) valor -> VARIABLE . PAR_I INT PAR_D
    (273) aritmetica -> VARIABLE . aritmeticos numeros
    (275) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (167) castingcall -> VARIABLE . PUNTO castingfun
    (157) funcall -> VARIABLE . varparen
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD
    (158) varparen -> . PAR_I valores PAR_D
    (159) varparen -> . PAR_I PAR_D
    (160) varparen -> . varparen PAR_I valores PAR_D
    (161) varparen -> . varparen PAR_I PAR_D

  ! shift/reduce conflict for LLAVE_D resolved as shift
    LLAVE_D         shift and go to state 529
    PAR_I           shift and go to state 452
    PUNTO           shift and go to state 301
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222

  ! LLAVE_D         [ reduce using rule 116 (valor -> VARIABLE .) ]

    aritmeticos                    shift and go to state 213
    varparen                       shift and go to state 40

state 505

    (135) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor . LLAVE_D

    LLAVE_D         shift and go to state 530


state 506

    (137) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun . LLAVE_D

    LLAVE_D         shift and go to state 531


state 507

    (138) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica . LLAVE_D
    (276) aritmetica -> aritmetica . aritmeticos numeros
    (277) aritmetica -> aritmetica . aritmeticos VARIABLE
    (278) aritmeticos -> . MENOS
    (279) aritmeticos -> . MAS
    (280) aritmeticos -> . MULTIPLICACION
    (281) aritmeticos -> . DIVISION
    (282) aritmeticos -> . MOD

    LLAVE_D         shift and go to state 532
    MENOS           shift and go to state 218
    MAS             shift and go to state 219
    MULTIPLICACION  shift and go to state 220
    DIVISION        shift and go to state 221
    MOD             shift and go to state 222

    aritmeticos                    shift and go to state 230

state 508

    (140) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .

    DEF             reduce using rule 140 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    VARIABLE        reduce using rule 140 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    PRINTLN         reduce using rule 140 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    PRINT           reduce using rule 140 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    READLINE        reduce using rule 140 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    VAR             reduce using rule 140 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    VAL             reduce using rule 140 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    WHILE           reduce using rule 140 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    FOR             reduce using rule 140 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    IF              reduce using rule 140 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    LLAVE_D         reduce using rule 140 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)


state 509

    (139) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .

    DEF             reduce using rule 139 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    VARIABLE        reduce using rule 139 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    PRINTLN         reduce using rule 139 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    PRINT           reduce using rule 139 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    READLINE        reduce using rule 139 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    VAR             reduce using rule 139 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    VAL             reduce using rule 139 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    WHILE           reduce using rule 139 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    FOR             reduce using rule 139 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    IF              reduce using rule 139 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    LLAVE_D         reduce using rule 139 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)


state 510

    (141) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .

    DEF             reduce using rule 141 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    VARIABLE        reduce using rule 141 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    PRINTLN         reduce using rule 141 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    PRINT           reduce using rule 141 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    READLINE        reduce using rule 141 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    VAR             reduce using rule 141 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    VAL             reduce using rule 141 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    WHILE           reduce using rule 141 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    FOR             reduce using rule 141 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    IF              reduce using rule 141 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    LLAVE_D         reduce using rule 141 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)


state 511

    (142) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .

    DEF             reduce using rule 142 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    VARIABLE        reduce using rule 142 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    PRINTLN         reduce using rule 142 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    PRINT           reduce using rule 142 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    READLINE        reduce using rule 142 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    VAR             reduce using rule 142 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    VAL             reduce using rule 142 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    WHILE           reduce using rule 142 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    FOR             reduce using rule 142 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    IF              reduce using rule 142 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    LLAVE_D         reduce using rule 142 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)


state 512

    (144) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE . LLAVE_D
    (167) castingcall -> VARIABLE . PUNTO castingfun
    (157) funcall -> VARIABLE . varparen
    (158) varparen -> . PAR_I valores PAR_D
    (159) varparen -> . PAR_I PAR_D
    (160) varparen -> . varparen PAR_I valores PAR_D
    (161) varparen -> . varparen PAR_I PAR_D

    LLAVE_D         shift and go to state 533
    PUNTO           shift and go to state 301
    PAR_I           shift and go to state 42

    varparen                       shift and go to state 40

state 513

    (143) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple . LLAVE_D

    LLAVE_D         shift and go to state 534


state 514

    (145) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun . LLAVE_D

    LLAVE_D         shift and go to state 535


state 515

    (173) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 536


state 516

    (174) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW . ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    ARRAYCLASS      shift and go to state 537


state 517

    (176) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 538


state 518

    (177) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW . ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    ARRAYCLASS      shift and go to state 539


state 519

    (180) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 540


state 520

    (179) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW . LISTCLASS PAR_I valores PAR_D

    LISTCLASS       shift and go to state 541


state 521

    (189) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 542


state 522

    (193) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 543


state 523

    (194) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 544


state 524

    (190) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 190 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 190 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 190 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 190 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 190 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 190 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 190 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 190 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 190 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 190 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 190 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 190 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 190 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 190 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 190 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 190 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)


state 525

    (191) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I . contenido LLAVE_D
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 545
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 526

    (192) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I . contenido LLAVE_D
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 546
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 527

    (237) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (238) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    IF              shift and go to state 82


state 528

    (238) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .

    ELSE            reduce using rule 238 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    DEF             reduce using rule 238 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    VARIABLE        reduce using rule 238 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    PRINTLN         reduce using rule 238 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    PRINT           reduce using rule 238 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    READLINE        reduce using rule 238 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    VAR             reduce using rule 238 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    VAL             reduce using rule 238 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    WHILE           reduce using rule 238 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    FOR             reduce using rule 238 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    IF              reduce using rule 238 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    LLAVE_D         reduce using rule 238 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    INT             reduce using rule 238 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    LONG            reduce using rule 238 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    FLOAT           reduce using rule 238 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    DOUBLE          reduce using rule 238 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    RETURN          reduce using rule 238 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)


state 529

    (136) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .

    DEF             reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VARIABLE        reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINTLN         reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINT           reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    READLINE        reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAR             reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAL             reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    WHILE           reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    FOR             reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    IF              reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    LLAVE_D         reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)


state 530

    (135) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .

    DEF             reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VARIABLE        reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    PRINTLN         reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    PRINT           reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    READLINE        reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAR             reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAL             reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    WHILE           reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    FOR             reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    IF              reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    LLAVE_D         reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)


state 531

    (137) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .

    DEF             reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VARIABLE        reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINTLN         reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINT           reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    READLINE        reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAR             reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAL             reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    WHILE           reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    FOR             reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    IF              reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    LLAVE_D         reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)


state 532

    (138) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .

    DEF             reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    VARIABLE        reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    PRINTLN         reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    PRINT           reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    READLINE        reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    VAR             reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    VAL             reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    WHILE           reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    FOR             reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    IF              reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    LLAVE_D         reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)


state 533

    (144) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .

    DEF             reduce using rule 144 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VARIABLE        reduce using rule 144 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINTLN         reduce using rule 144 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINT           reduce using rule 144 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    READLINE        reduce using rule 144 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAR             reduce using rule 144 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAL             reduce using rule 144 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    WHILE           reduce using rule 144 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    FOR             reduce using rule 144 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    IF              reduce using rule 144 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    LLAVE_D         reduce using rule 144 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)


state 534

    (143) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .

    DEF             reduce using rule 143 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    VARIABLE        reduce using rule 143 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    PRINTLN         reduce using rule 143 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    PRINT           reduce using rule 143 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    READLINE        reduce using rule 143 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    VAR             reduce using rule 143 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    VAL             reduce using rule 143 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    WHILE           reduce using rule 143 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    FOR             reduce using rule 143 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    IF              reduce using rule 143 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    LLAVE_D         reduce using rule 143 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)


state 535

    (145) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .

    DEF             reduce using rule 145 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VARIABLE        reduce using rule 145 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINTLN         reduce using rule 145 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINT           reduce using rule 145 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    READLINE        reduce using rule 145 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAR             reduce using rule 145 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAL             reduce using rule 145 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    WHILE           reduce using rule 145 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    FOR             reduce using rule 145 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    IF              reduce using rule 145 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    LLAVE_D         reduce using rule 145 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)


state 536

    (173) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (181) valores -> . valor
    (182) valores -> . valor COMA valores
    (114) valor -> . STRING
    (115) valor -> . CHAR
    (116) valor -> . VARIABLE
    (117) valor -> . numeros
    (118) valor -> . booleanos
    (119) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (120) valor -> . VARIABLE PAR_I INT PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valores                        shift and go to state 547
    valor                          shift and go to state 67
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72

state 537

    (174) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS . CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 548


state 538

    (176) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (181) valores -> . valor
    (182) valores -> . valor COMA valores
    (114) valor -> . STRING
    (115) valor -> . CHAR
    (116) valor -> . VARIABLE
    (117) valor -> . numeros
    (118) valor -> . booleanos
    (119) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (120) valor -> . VARIABLE PAR_I INT PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valores                        shift and go to state 549
    valor                          shift and go to state 67
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72

state 539

    (177) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS . CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 550


state 540

    (180) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I . valores PAR_D
    (181) valores -> . valor
    (182) valores -> . valor COMA valores
    (114) valor -> . STRING
    (115) valor -> . CHAR
    (116) valor -> . VARIABLE
    (117) valor -> . numeros
    (118) valor -> . booleanos
    (119) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (120) valor -> . VARIABLE PAR_I INT PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valores                        shift and go to state 551
    valor                          shift and go to state 67
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72

state 541

    (179) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 552


state 542

    (189) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 189 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 189 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 189 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 189 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 189 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 189 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 189 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 189 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 189 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 189 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 189 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 189 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 189 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 189 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 189 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 189 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)


state 543

    (193) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I . contenido LLAVE_D
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 553
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 544

    (194) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I . contenido LLAVE_D
    (19) contenido -> . asignacion
    (20) contenido -> . reasignacion
    (21) contenido -> . funcall
    (22) contenido -> . impresion
    (23) contenido -> . entrada
    (24) contenido -> . while
    (25) contenido -> . for
    (26) contenido -> . match
    (27) contenido -> . if
    (28) contenido -> . aritmetica
    (29) contenido -> . asignacion contenido
    (30) contenido -> . reasignacion contenido
    (31) contenido -> . funcall contenido
    (32) contenido -> . impresion contenido
    (33) contenido -> . entrada contenido
    (34) contenido -> . while contenido
    (35) contenido -> . for contenido
    (36) contenido -> . if contenido
    (37) contenido -> . match contenido
    (38) contenido -> . aritmetica contenido
    (44) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (45) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (46) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (47) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (48) asignacion -> . VAR VARIABLE IGUAL returnfun
    (49) asignacion -> . VAL VARIABLE IGUAL returnfun
    (50) asignacion -> . asignacionLong
    (51) asignacion -> . asignacionInt
    (52) asignacion -> . asignacionFloat
    (53) asignacion -> . asignacionDouble
    (54) asignacion -> . asignacionString
    (55) asignacion -> . asignacionChar
    (56) asignacion -> . asignacionBoolean
    (57) asignacion -> . array
    (58) asignacion -> . list
    (184) asignacion -> . VAR VARIABLE IGUAL tuple
    (185) asignacion -> . VAL VARIABLE IGUAL tuple
    (186) asignacion -> . VAR VARIABLE dectipoTupla IGUAL tuple
    (187) asignacion -> . VAL VARIABLE dectipoTupla IGUAL tuple
    (101) reasignacion -> . VARIABLE IGUAL valor
    (102) reasignacion -> . VARIABLE IGUAL returnfun
    (103) reasignacion -> . VARIABLE IGUAL aritmetica
    (104) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (157) funcall -> . VARIABLE varparen
    (152) impresion -> . PRINTLN PAR_I valorI PAR_D
    (153) impresion -> . PRINT PAR_I valorI PAR_D
    (156) entrada -> . READLINE PAR_I PAR_D
    (188) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (189) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (190) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (191) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (192) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (193) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (194) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (195) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (234) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (235) if -> . if elseif
    (236) if -> . if else
    (272) aritmetica -> . numeros aritmeticos numeros
    (273) aritmetica -> . VARIABLE aritmeticos numeros
    (274) aritmetica -> . numeros aritmeticos VARIABLE
    (275) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (276) aritmetica -> . aritmetica aritmeticos numeros
    (277) aritmetica -> . aritmetica aritmeticos VARIABLE
    (59) asignacionLong -> . VAR VARIABLE IGUAL LONG
    (60) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (61) asignacionLong -> . VAL VARIABLE IGUAL LONG
    (62) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG
    (63) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (64) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionInt -> . VAR VARIABLE IGUAL INT
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (67) asignacionInt -> . VAL VARIABLE IGUAL INT
    (68) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT
    (69) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (70) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (71) asignacionFloat -> . VAR VARIABLE IGUAL FLOAT
    (72) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (73) asignacionFloat -> . VAL VARIABLE IGUAL FLOAT
    (74) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT
    (75) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (76) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (77) asignacionDouble -> . VAR VARIABLE IGUAL DOUBLE
    (78) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (79) asignacionDouble -> . VAL VARIABLE IGUAL DOUBLE
    (80) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE
    (81) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (82) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (83) asignacionString -> . VAR VARIABLE IGUAL STRING
    (84) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (85) asignacionString -> . VAL VARIABLE IGUAL STRING
    (86) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (87) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (88) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (89) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (90) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (91) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (92) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (93) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (94) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (95) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (96) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (97) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (98) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (99) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (100) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (172) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (173) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (174) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (175) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (176) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D
    (177) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (178) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (179) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D
    (180) list -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE

    VAR             shift and go to state 25
    VAL             shift and go to state 26
    VARIABLE        shift and go to state 144
    PRINTLN         shift and go to state 22
    PRINT           shift and go to state 23
    READLINE        shift and go to state 24
    WHILE           shift and go to state 36
    FOR             shift and go to state 37
    IF              shift and go to state 38
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76

    contenido                      shift and go to state 554
    asignacion                     shift and go to state 134
    reasignacion                   shift and go to state 135
    funcall                        shift and go to state 136
    impresion                      shift and go to state 137
    entrada                        shift and go to state 138
    while                          shift and go to state 139
    for                            shift and go to state 140
    match                          shift and go to state 141
    if                             shift and go to state 142
    aritmetica                     shift and go to state 143
    asignacionLong                 shift and go to state 27
    asignacionInt                  shift and go to state 28
    asignacionFloat                shift and go to state 29
    asignacionDouble               shift and go to state 30
    asignacionString               shift and go to state 31
    asignacionChar                 shift and go to state 32
    asignacionBoolean              shift and go to state 33
    array                          shift and go to state 34
    list                           shift and go to state 35
    numeros                        shift and go to state 145

state 545

    (191) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 555


state 546

    (192) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 556


state 547

    (173) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 557


state 548

    (174) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I . tipo CORCHETE_D PAR_I INT PAR_D
    (105) tipo -> . CHARCLASS
    (106) tipo -> . STRINGCLASS
    (107) tipo -> . BOOLCLASS
    (108) tipo -> . INTCLASS
    (109) tipo -> . LONGCLASS
    (110) tipo -> . DOUBLECLASS
    (111) tipo -> . FLOATCLASS
    (112) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (113) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 289
    STRINGCLASS     shift and go to state 290
    BOOLCLASS       shift and go to state 291
    INTCLASS        shift and go to state 292
    LONGCLASS       shift and go to state 293
    DOUBLECLASS     shift and go to state 294
    FLOATCLASS      shift and go to state 295
    ARRAYCLASS      shift and go to state 296
    LISTCLASS       shift and go to state 297

    tipo                           shift and go to state 558

state 549

    (176) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 559


state 550

    (177) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I . tipo CORCHETE_D PAR_I INT PAR_D
    (105) tipo -> . CHARCLASS
    (106) tipo -> . STRINGCLASS
    (107) tipo -> . BOOLCLASS
    (108) tipo -> . INTCLASS
    (109) tipo -> . LONGCLASS
    (110) tipo -> . DOUBLECLASS
    (111) tipo -> . FLOATCLASS
    (112) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (113) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 289
    STRINGCLASS     shift and go to state 290
    BOOLCLASS       shift and go to state 291
    INTCLASS        shift and go to state 292
    LONGCLASS       shift and go to state 293
    DOUBLECLASS     shift and go to state 294
    FLOATCLASS      shift and go to state 295
    ARRAYCLASS      shift and go to state 296
    LISTCLASS       shift and go to state 297

    tipo                           shift and go to state 560

state 551

    (180) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 561


state 552

    (179) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I . valores PAR_D
    (181) valores -> . valor
    (182) valores -> . valor COMA valores
    (114) valor -> . STRING
    (115) valor -> . CHAR
    (116) valor -> . VARIABLE
    (117) valor -> . numeros
    (118) valor -> . booleanos
    (119) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (120) valor -> . VARIABLE PAR_I INT PAR_D
    (123) numeros -> . INT
    (124) numeros -> . LONG
    (125) numeros -> . FLOAT
    (126) numeros -> . DOUBLE
    (121) booleanos -> . TRUE
    (122) booleanos -> . FLASE

    STRING          shift and go to state 68
    CHAR            shift and go to state 69
    VARIABLE        shift and go to state 70
    INT             shift and go to state 73
    LONG            shift and go to state 74
    FLOAT           shift and go to state 75
    DOUBLE          shift and go to state 76
    TRUE            shift and go to state 77
    FLASE           shift and go to state 78

    valores                        shift and go to state 562
    valor                          shift and go to state 67
    numeros                        shift and go to state 71
    booleanos                      shift and go to state 72

state 553

    (193) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 563


state 554

    (194) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 564


state 555

    (191) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 191 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 191 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 191 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 191 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 191 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 191 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 191 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 191 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 191 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 191 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 191 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 191 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 191 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 191 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 191 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 191 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)


state 556

    (192) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 192 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 192 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 192 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 192 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 192 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 192 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 192 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 192 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 192 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 192 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 192 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 192 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 192 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 192 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 192 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 192 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)


state 557

    (173) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 173 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 173 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 173 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 173 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 173 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 173 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 173 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 173 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 173 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 173 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 173 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 173 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 173 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 173 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 173 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 173 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 173 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 558

    (174) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo . CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 565


state 559

    (176) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 176 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 176 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 176 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 176 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 176 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 176 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 176 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 176 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 176 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 176 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 176 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 176 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 176 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 176 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 176 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 176 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 176 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 560

    (177) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo . CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 566


state 561

    (180) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 180 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 180 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 180 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 180 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 180 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 180 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 180 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 180 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 180 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 180 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 180 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 180 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 180 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 180 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 180 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 180 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 180 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D .)


state 562

    (179) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 567


state 563

    (193) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 193 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 193 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 193 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 193 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 193 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 193 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 193 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 193 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 193 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 193 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 193 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 193 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 193 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 193 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 193 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 193 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)


state 564

    (194) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 194 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 194 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 194 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 194 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 194 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 194 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 194 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 194 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 194 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 194 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 194 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 194 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 194 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 194 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 194 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 194 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)


state 565

    (174) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D . PAR_I INT PAR_D

    PAR_I           shift and go to state 568


state 566

    (177) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D . PAR_I INT PAR_D

    PAR_I           shift and go to state 569


state 567

    (179) list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 179 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 179 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 179 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 179 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 179 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 179 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 179 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 179 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 179 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 179 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 179 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 179 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 179 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 179 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 179 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 179 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 179 (list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D .)


state 568

    (174) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I . INT PAR_D

    INT             shift and go to state 570


state 569

    (177) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I . INT PAR_D

    INT             shift and go to state 571


state 570

    (174) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT . PAR_D

    PAR_D           shift and go to state 572


state 571

    (177) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT . PAR_D

    PAR_D           shift and go to state 573


state 572

    (174) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .

    DEF             reduce using rule 174 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VARIABLE        reduce using rule 174 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINTLN         reduce using rule 174 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINT           reduce using rule 174 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    READLINE        reduce using rule 174 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAR             reduce using rule 174 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAL             reduce using rule 174 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    WHILE           reduce using rule 174 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FOR             reduce using rule 174 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    IF              reduce using rule 174 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LLAVE_D         reduce using rule 174 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    INT             reduce using rule 174 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LONG            reduce using rule 174 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FLOAT           reduce using rule 174 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    DOUBLE          reduce using rule 174 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    RETURN          reduce using rule 174 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    CASE            reduce using rule 174 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)


state 573

    (177) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .

    DEF             reduce using rule 177 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VARIABLE        reduce using rule 177 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINTLN         reduce using rule 177 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINT           reduce using rule 177 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    READLINE        reduce using rule 177 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAR             reduce using rule 177 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAL             reduce using rule 177 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    WHILE           reduce using rule 177 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FOR             reduce using rule 177 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    IF              reduce using rule 177 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LLAVE_D         reduce using rule 177 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    INT             reduce using rule 177 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LONG            reduce using rule 177 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FLOAT           reduce using rule 177 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    DOUBLE          reduce using rule 177 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    RETURN          reduce using rule 177 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    CASE            reduce using rule 177 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 50 resolved as shift
WARNING: shift/reduce conflict for PAR_D in state 374 resolved as shift
WARNING: shift/reduce conflict for PAR_D in state 479 resolved as shift
WARNING: shift/reduce conflict for PAR_D in state 480 resolved as shift
WARNING: shift/reduce conflict for LLAVE_D in state 483 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 502 resolved as shift
WARNING: shift/reduce conflict for LLAVE_D in state 504 resolved as shift

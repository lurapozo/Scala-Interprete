Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ARROBA
    BACKTICK
    CATCH
    CLASS
    DO
    EXTENDS
    FINAL
    FINALLY
    FOR_SOME
    HASHTAG
    IMPLICIT
    LAZY
    LIBRERIA_IO
    MACRO
    MAYOR_IGUAL
    MENOR_IGUAL
    NULL
    OVERRIDE
    PACKAGE
    PRIVATE
    PROTECTED
    REVERSE
    SEALED
    SUPER
    THIS
    THROW
    TRAIT
    TRY
    TYPE
    WITH
    YIELD

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D
Rule 2     inicio -> IMPORT io inicio
Rule 3     inicio -> cuerpo
Rule 4     io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE
Rule 5     cuerpo -> funcion
Rule 6     cuerpo -> funcall
Rule 7     cuerpo -> impresion
Rule 8     cuerpo -> entrada
Rule 9     cuerpo -> asignacion
Rule 10    cuerpo -> while
Rule 11    cuerpo -> for
Rule 12    cuerpo -> match
Rule 13    cuerpo -> if
Rule 14    cuerpo -> startsWith
Rule 15    cuerpo -> funcion cuerpo
Rule 16    cuerpo -> asignacion cuerpo
Rule 17    cuerpo -> while cuerpo
Rule 18    cuerpo -> for cuerpo
Rule 19    cuerpo -> if cuerpo
Rule 20    cuerpo -> match cuerpo
Rule 21    cuerpo -> startsWith cuerpo
Rule 22    contenido -> asignacion
Rule 23    contenido -> reasignacion
Rule 24    contenido -> funcall
Rule 25    contenido -> impresion
Rule 26    contenido -> entrada
Rule 27    contenido -> while
Rule 28    contenido -> for
Rule 29    contenido -> match
Rule 30    contenido -> if
Rule 31    contenido -> aritmetica
Rule 32    contenido -> startsWith
Rule 33    contenido -> asignacion contenido
Rule 34    contenido -> reasignacion contenido
Rule 35    contenido -> funcall contenido
Rule 36    contenido -> impresion contenido
Rule 37    contenido -> entrada contenido
Rule 38    contenido -> while contenido
Rule 39    contenido -> for contenido
Rule 40    contenido -> if contenido
Rule 41    contenido -> match contenido
Rule 42    contenido -> aritmetica contenido
Rule 43    contenido -> startsWith contenido
Rule 44    contenidoLine -> asignacion
Rule 45    contenidoLine -> reasignacion
Rule 46    contenidoLine -> funcall
Rule 47    contenidoLine -> impresion
Rule 48    contenidoLine -> entrada
Rule 49    asignacion -> VAR VARIABLE IGUAL VARIABLE
Rule 50    asignacion -> VAL VARIABLE IGUAL VARIABLE
Rule 51    asignacion -> VAR VARIABLE IGUAL aritmetica
Rule 52    asignacion -> VAL VARIABLE IGUAL aritmetica
Rule 53    asignacion -> VAR VARIABLE IGUAL returnfun
Rule 54    asignacion -> VAL VARIABLE IGUAL returnfun
Rule 55    asignacion -> asignacionLong
Rule 56    asignacion -> asignacionInt
Rule 57    asignacion -> asignacionFloat
Rule 58    asignacion -> asignacionDouble
Rule 59    asignacion -> asignacionString
Rule 60    asignacion -> asignacionChar
Rule 61    asignacion -> asignacionBoolean
Rule 62    asignacion -> array
Rule 63    asignacion -> list
Rule 64    asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
Rule 65    asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
Rule 66    asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
Rule 67    asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
Rule 68    asignacionInt -> asignacionSumInt
Rule 69    asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
Rule 70    asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
Rule 71    asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
Rule 72    asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
Rule 73    asignacionDouble -> asignacionSumDouble
Rule 74    asignacionString -> VAR VARIABLE IGUAL STRING
Rule 75    asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
Rule 76    asignacionString -> VAL VARIABLE IGUAL STRING
Rule 77    asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
Rule 78    asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
Rule 79    asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
Rule 80    asignacionString -> asignacionSumString
Rule 81    asignacionChar -> VAR VARIABLE IGUAL CHAR
Rule 82    asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
Rule 83    asignacionChar -> VAL VARIABLE IGUAL CHAR
Rule 84    asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
Rule 85    asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
Rule 86    asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
Rule 87    asignacionBoolean -> VAR VARIABLE IGUAL booleanos
Rule 88    asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
Rule 89    asignacionBoolean -> VAL VARIABLE IGUAL booleanos
Rule 90    asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
Rule 91    asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
Rule 92    asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
Rule 93    reasignacion -> VARIABLE IGUAL valor
Rule 94    reasignacion -> VARIABLE IGUAL returnfun
Rule 95    reasignacion -> VARIABLE IGUAL aritmetica
Rule 96    reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor
Rule 97    tipo -> CHARCLASS
Rule 98    tipo -> STRINGCLASS
Rule 99    tipo -> BOOLCLASS
Rule 100   tipo -> INTCLASS
Rule 101   tipo -> LONGCLASS
Rule 102   tipo -> DOUBLECLASS
Rule 103   tipo -> FLOATCLASS
Rule 104   tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D
Rule 105   tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D
Rule 106   valor -> STRING
Rule 107   valor -> CHAR
Rule 108   valor -> VARIABLE
Rule 109   valor -> numeros
Rule 110   valor -> booleanos
Rule 111   valor -> VARIABLE PAR_I VARIABLE PAR_D
Rule 112   valor -> VARIABLE PAR_I INT PAR_D
Rule 113   booleanos -> TRUE
Rule 114   booleanos -> FLASE
Rule 115   booleanos -> startsWith
Rule 116   numeros -> INT
Rule 117   numeros -> LONG
Rule 118   numeros -> FLOAT
Rule 119   numeros -> DOUBLE
Rule 120   funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
Rule 121   funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
Rule 122   declaracion -> VARIABLE DOBLE_PUNTO tipo
Rule 123   declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor
Rule 124   parametro -> parametros
Rule 125   parametro -> PAR_I PAR_D
Rule 126   parametros -> PAR_I declaracion PAR_D
Rule 127   parametros -> PAR_I declaracion PAR_D parametros
Rule 128   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
Rule 129   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
Rule 130   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
Rule 131   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
Rule 132   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
Rule 133   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
Rule 134   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
Rule 135   funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
Rule 136   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
Rule 137   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
Rule 138   funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
Rule 139   dectipo -> DOBLE_PUNTO tipo
Rule 140   dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D
Rule 141   tipos -> tipo
Rule 142   tipos -> tipo tiposentry
Rule 143   tiposentry -> COMA tipo
Rule 144   tiposentry -> COMA tipo tiposentry
Rule 145   impresion -> PRINTLN PAR_I valorI PAR_D
Rule 146   impresion -> PRINT PAR_I valorI PAR_D
Rule 147   valorI -> valor MAS valorI
Rule 148   valorI -> valor
Rule 149   entrada -> READLINE PAR_I PAR_D
Rule 150   funcall -> VARIABLE varparen
Rule 151   varparen -> PAR_I valores PAR_D
Rule 152   varparen -> PAR_I PAR_D
Rule 153   varparen -> varparen PAR_I valores PAR_D
Rule 154   varparen -> varparen PAR_I PAR_D
Rule 155   returnfun -> returnCastable
Rule 156   returnfun -> castingcall
Rule 157   returnCastable -> entrada
Rule 158   returnCastable -> funcall
Rule 159   castingcall -> returnCastable PUNTO castingfun
Rule 160   castingcall -> VARIABLE PUNTO castingfun
Rule 161   castingfun -> TO_INT
Rule 162   castingfun -> TO_DOUBLE
Rule 163   castingfun -> TO_FLOAT
Rule 164   castingfun -> TO_LONG
Rule 165   array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 166   array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
Rule 167   array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
Rule 168   array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
Rule 169   array -> arrayInt
Rule 170   array -> arrayDouble
Rule 171   list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
Rule 172   list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
Rule 173   list -> listChar
Rule 174   list -> listString
Rule 175   valores -> valor
Rule 176   valores -> valor COMA valores
Rule 177   tuple -> PAR_I valores PAR_D
Rule 178   asignacion -> VAR VARIABLE IGUAL tuple
Rule 179   asignacion -> VAL VARIABLE IGUAL tuple
Rule 180   while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 181   for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
Rule 182   for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
Rule 183   for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
Rule 184   for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
Rule 185   for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
Rule 186   for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
Rule 187   match -> VARIABLE MATCH LLAVE_I cases LLAVE_D
Rule 188   cases -> casesInt
Rule 189   cases -> casesLgn
Rule 190   cases -> casesFlt
Rule 191   cases -> casesDob
Rule 192   cases -> casesStr
Rule 193   cases -> casesChar
Rule 194   cases -> casesBool
Rule 195   caseInt -> CASE INT FUNCION_FLECHA codeBlock
Rule 196   casesInt -> caseInt
Rule 197   casesInt -> caseInt casesInt
Rule 198   casesInt -> caseInt defcase
Rule 199   caseLgn -> CASE LONG FUNCION_FLECHA codeBlock
Rule 200   casesLgn -> caseLgn
Rule 201   casesLgn -> caseLgn casesLgn
Rule 202   casesLgn -> caseLgn defcase
Rule 203   caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock
Rule 204   casesFlt -> caseFlt
Rule 205   casesFlt -> caseFlt casesFlt
Rule 206   casesFlt -> caseFlt defcase
Rule 207   caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock
Rule 208   casesDob -> caseDob
Rule 209   casesDob -> caseDob casesDob
Rule 210   casesDob -> caseDob defcase
Rule 211   caseStr -> CASE STRING FUNCION_FLECHA codeBlock
Rule 212   casesStr -> caseStr
Rule 213   casesStr -> caseStr casesStr
Rule 214   casesStr -> caseStr defcase
Rule 215   caseChar -> CASE CHAR FUNCION_FLECHA codeBlock
Rule 216   casesChar -> caseChar
Rule 217   casesChar -> caseChar casesChar
Rule 218   casesChar -> caseChar defcase
Rule 219   caseBool -> CASE booleanos FUNCION_FLECHA codeBlock
Rule 220   casesBool -> caseBool
Rule 221   casesBool -> caseBool casesBool
Rule 222   casesBool -> caseBool defcase
Rule 223   defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock
Rule 224   codeBlock -> contenidoLine
Rule 225   codeBlock -> LLAVE_I contenido LLAVE_D
Rule 226   if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 227   if -> if elseif
Rule 228   if -> if else
Rule 229   elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
Rule 230   elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
Rule 231   else -> ELSE LLAVE_I contenido LLAVE_D
Rule 232   else -> elseif else
Rule 233   condicional -> valorC logicos condicional
Rule 234   condicional -> valorC
Rule 235   valorC -> VARIABLE
Rule 236   valorC -> booleanos
Rule 237   valorC -> relacional
Rule 238   valorC -> NOT VARIABLE
Rule 239   valorC -> NOT booleanos
Rule 240   valorC -> NOT relacional
Rule 241   logicos -> AND
Rule 242   logicos -> OR
Rule 243   logicos -> NOT
Rule 244   relacional -> numeros comparacion numeros
Rule 245   relacional -> aritmetica comparacion aritmetica
Rule 246   relacional -> aritmetica comparacion numeros
Rule 247   relacional -> numeros comparacion aritmetica
Rule 248   relacional -> booleanos comparacion booleanos
Rule 249   relacional -> STRING comparacion STRING
Rule 250   relacional -> CHAR comparacion CHAR
Rule 251   relacional -> VARIABLE comparacion numeros
Rule 252   relacional -> numeros comparacion VARIABLE
Rule 253   relacional -> VARIABLE comparacion booleanos
Rule 254   relacional -> booleanos comparacion VARIABLE
Rule 255   relacional -> VARIABLE comparacion STRING
Rule 256   relacional -> STRING comparacion VARIABLE
Rule 257   relacional -> VARIABLE comparacion CHAR
Rule 258   relacional -> CHAR comparacion VARIABLE
Rule 259   relacional -> VARIABLE comparacion VARIABLE
Rule 260   comparacion -> IGUAL_COMPARACION
Rule 261   comparacion -> DIFERENTE
Rule 262   comparacion -> MAYOR
Rule 263   comparacion -> MENOR
Rule 264   aritmetica -> numeros aritmeticos numeros
Rule 265   aritmetica -> VARIABLE aritmeticos numeros
Rule 266   aritmetica -> numeros aritmeticos VARIABLE
Rule 267   aritmetica -> VARIABLE aritmeticos VARIABLE
Rule 268   aritmetica -> aritmetica aritmeticos numeros
Rule 269   aritmetica -> aritmetica aritmeticos VARIABLE
Rule 270   aritmetica -> suma
Rule 271   aritmetica -> VARIABLE MAS numeros
Rule 272   aritmetica -> numeros MAS VARIABLE
Rule 273   aritmetica -> VARIABLE MAS VARIABLE
Rule 274   aritmetica -> aritmetica MAS numeros
Rule 275   aritmetica -> aritmetica MAS VARIABLE
Rule 276   aritmetica -> INT MAS INT
Rule 277   aritmetica -> DOUBLE MAS DOUBLE
Rule 278   aritmetica -> LONG MAS LONG
Rule 279   aritmetica -> FLOAT MAS FLOAT
Rule 280   aritmeticos -> MENOS
Rule 281   aritmeticos -> MULTIPLICACION
Rule 282   aritmeticos -> DIVISION
Rule 283   aritmeticos -> MOD
Rule 284   arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
Rule 285   arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
Rule 286   valoresInt -> INT
Rule 287   valoresInt -> valoresInt COMA INT
Rule 288   valoresDouble -> DOUBLE
Rule 289   valoresDouble -> valoresDouble COMA DOUBLE
Rule 290   startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D
Rule 291   startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
Rule 292   listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
Rule 293   listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
Rule 294   listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
Rule 295   listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
Rule 296   valoresString -> STRING
Rule 297   valoresString -> valoresString COMA STRING
Rule 298   valoresChar -> CHAR
Rule 299   valoresChar -> valoresChar COMA CHAR
Rule 300   suma -> sumIntChar
Rule 301   suma -> sumStringChar
Rule 302   suma -> sumIntDouble
Rule 303   suma -> sumDoubleChar
Rule 304   sumIntDouble -> INT MAS DOUBLE
Rule 305   sumIntDouble -> DOUBLE MAS INT
Rule 306   sumDoubleChar -> DOUBLE MAS CHAR
Rule 307   sumDoubleChar -> CHAR MAS DOUBLE
Rule 308   sumIntChar -> INT MAS CHAR
Rule 309   sumIntChar -> CHAR MAS INT
Rule 310   sumStringChar -> STRING MAS CHAR
Rule 311   sumStringChar -> CHAR MAS STRING
Rule 312   asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
Rule 313   asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
Rule 314   asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
Rule 315   asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
Rule 316   asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
Rule 317   asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
Rule 318   asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
Rule 319   asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
Rule 320   asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla
Rule 321   asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla
Rule 322   dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
Rule 323   dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
Rule 324   dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
Rule 325   dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D
Rule 326   dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
Rule 327   dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
Rule 328   dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
Rule 329   dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D
Rule 330   dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
Rule 331   dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
Rule 332   dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
Rule 333   dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D
Rule 334   dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
Rule 335   dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
Rule 336   dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
Rule 337   dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D
Rule 338   dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
Rule 339   dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
Rule 340   dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
Rule 341   dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D
Rule 342   asignacionInt -> VAR VARIABLE IGUAL intvalues
Rule 343   asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
Rule 344   asignacionInt -> VAL VARIABLE IGUAL intvalues
Rule 345   asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
Rule 346   intvalues -> INT
Rule 347   intvalues -> stringCastInt
Rule 348   asignacionLong -> VAR VARIABLE IGUAL longvalues
Rule 349   asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
Rule 350   asignacionLong -> VAL VARIABLE IGUAL longvalues
Rule 351   asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
Rule 352   longvalues -> LONG
Rule 353   longvalues -> intvalues
Rule 354   longvalues -> stringCastLong
Rule 355   asignacionFloat -> VAR VARIABLE IGUAL floatvalues
Rule 356   asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
Rule 357   asignacionFloat -> VAL VARIABLE IGUAL floatvalues
Rule 358   asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
Rule 359   floatvalues -> FLOAT
Rule 360   floatvalues -> longvalues
Rule 361   floatvalues -> stringCastFloat
Rule 362   asignacionDouble -> VAR VARIABLE IGUAL doublevalues
Rule 363   asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
Rule 364   asignacionDouble -> VAL VARIABLE IGUAL doublevalues
Rule 365   asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
Rule 366   doublevalues -> DOUBLE
Rule 367   doublevalues -> floatvalues
Rule 368   doublevalues -> stringCastDouble
Rule 369   stringCastInt -> STRING PUNTO TO_INT
Rule 370   stringCastLong -> STRING PUNTO TO_LONG
Rule 371   stringCastFloat -> STRING PUNTO TO_FLOAT
Rule 372   stringCastDouble -> STRING PUNTO TO_DOUBLE

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 241
ARRAYCLASS           : 104 165 166 166 167 168 168 284 284 285 285
ARROBA               : 
BACKTICK             : 
BOOLCLASS            : 88 90 91 92 99
CASE                 : 195 199 203 207 211 215 219 223
CATCH                : 
CHAR                 : 81 82 83 84 107 215 250 250 257 258 298 299 306 307 308 309 310 311
CHARCLASS            : 82 84 85 86 97 294 295
CLASS                : 
COMA                 : 143 144 176 287 289 291 297 299 322 322 323 323 324 324 325 325 326 326 327 327 328 328 329 329 330 330 331 331 332 332 333 333 334 334 335 335 336 336 337 337 338 338 339 339 340 340 341 341
CORCHETE_D           : 104 105 166 166 168 168 284 285 292 293 294 295
CORCHETE_I           : 104 105 166 166 168 168 284 285 292 293 294 295
DEF                  : 120 121 128 129 130 131 132 133 134 135 136 137 138
DIFERENTE            : 261
DIVISION             : 282
DO                   : 
DOBLE_PUNTO          : 64 65 66 67 69 70 71 72 75 77 78 79 82 84 85 86 88 90 91 92 122 123 139 140 166 168 284 285 292 293 294 295 312 313 314 315 316 317 318 319 320 321 343 345 349 351 356 358 363 365
DOUBLE               : 119 207 277 277 288 289 304 305 306 307 324 328 330 331 332 333 336 340 366
DOUBLECLASS          : 71 72 102 285 312 313 314 315 324 328 330 331 332 333 336 340 363 365
ELSE                 : 229 230 231
EXTENDS              : 
FINAL                : 
FINALLY              : 
FLASE                : 114
FLOAT                : 118 203 279 279 325 326 327 328 329 332 337 341 359
FLOATCLASS           : 69 70 103 325 326 327 328 329 332 337 341 356 358
FOR                  : 181 182 183 184 185 186
FOR_SOME             : 
FUNCION_FLECHA       : 195 199 203 207 211 215 219 223
HASHTAG              : 
IF                   : 226 229 230
IGUAL                : 49 50 51 52 53 54 64 65 66 67 69 70 71 72 74 75 76 77 78 79 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 120 123 128 129 130 131 132 133 134 135 136 137 138 165 166 167 168 171 172 178 179 284 285 292 293 294 295 312 313 314 315 316 317 318 319 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 348 349 350 351 355 356 357 358 362 363 364 365
IGUAL_COMPARACION    : 260
IMPLICIT             : 
IMPORT               : 2
INT                  : 96 112 116 166 168 183 183 184 184 185 185 186 186 195 276 276 286 287 291 304 305 308 309 322 329 333 335 338 339 340 341 346
INTCLASS             : 66 67 100 284 318 319 322 329 333 335 338 339 340 341 343 345
ITERATOR             : 181 182 183 184 185 186
LAZY                 : 
LIBRERIA_IO          : 
LISTCLASS            : 105 171 172 292 292 293 293 294 294 295 295
LLAVE_D              : 1 120 121 128 129 130 131 132 133 134 135 136 137 138 180 181 182 183 184 185 186 187 225 226 229 230 231
LLAVE_I              : 1 120 121 128 129 130 131 132 133 134 135 136 137 138 180 181 182 183 184 185 186 187 225 226 229 230 231
LONG                 : 117 199 278 278 323 327 331 334 335 336 337 339 352
LONGCLASS            : 64 65 101 323 327 331 334 335 336 337 339 349 351
MACRO                : 
MAS                  : 147 271 272 273 274 275 276 277 278 279 304 305 306 307 308 309 310 311
MATCH                : 187
MAYOR                : 262
MAYOR_IGUAL          : 
MENOR                : 263
MENOR_IGUAL          : 
MENOS                : 280
MOD                  : 283
MULTIPLICACION       : 281
NEW                  : 166 168
NOT                  : 238 239 240 243
NULL                 : 
OBJECT               : 1
OR                   : 242
OVERRIDE             : 
PACKAGE              : 
PAR_D                : 96 111 112 125 126 127 140 145 146 149 151 152 153 154 165 166 167 168 171 172 177 180 181 182 183 184 185 186 226 229 230 284 285 290 291 292 293 294 295 322 322 323 323 324 324 325 325 326 326 327 327 328 328 329 329 330 330 331 331 332 332 333 333 334 334 335 335 336 336 337 337 338 338 339 339 340 340 341 341
PAR_I                : 96 111 112 125 126 127 140 145 146 149 151 152 153 154 165 166 167 168 171 172 177 180 181 182 183 184 185 186 226 229 230 284 285 290 291 292 293 294 295 322 322 323 323 324 324 325 325 326 326 327 327 328 328 329 329 330 330 331 331 332 332 333 333 334 334 335 335 336 336 337 337 338 338 339 339 340 340 341 341
PRINT                : 146
PRINTLN              : 145
PRIVATE              : 
PROTECTED            : 
PUNTO                : 4 4 4 159 160 290 291 369 370 371 372
READLINE             : 4 149
RETURN               : 128 129 130 131 132 133 134 135 136 137 138
REVERSE              : 
SEALED               : 
STARTSWITH           : 290 291
STRING               : 74 75 76 77 106 211 249 249 255 256 290 290 291 291 296 297 310 311 322 323 324 325 326 330 334 338 369 370 371 372
STRINGCLASS          : 75 77 78 79 98 292 293 316 317 322 323 324 325 326 330 334 338
SUBGUION             : 223
SUPER                : 
THIS                 : 
THROW                : 
TO                   : 183 185
TO_DOUBLE            : 162 372
TO_FLOAT             : 163 371
TO_INT               : 161 369
TO_LONG              : 164 370
TRAIT                : 
TRUE                 : 113
TRY                  : 
TYPE                 : 
UNTIL                : 184 186
VAL                  : 50 52 54 65 67 70 72 76 77 79 83 84 86 89 90 92 167 168 171 179 292 294 313 315 317 319 321 344 345 350 351 357 358 364 365
VAR                  : 49 51 53 64 66 69 71 74 75 78 81 82 85 87 88 91 165 166 172 178 181 185 186 284 285 293 295 312 314 316 318 320 342 343 348 349 355 356 362 363
VARIABLE             : 1 4 4 4 49 49 50 50 51 52 53 54 64 64 65 65 66 66 67 67 69 69 70 70 71 71 72 72 74 75 76 77 78 78 79 79 81 82 83 84 85 85 86 86 87 88 89 90 91 91 92 92 93 94 95 96 108 111 111 112 120 121 122 123 128 129 129 130 131 132 133 133 134 135 136 137 137 138 150 160 165 166 167 168 171 172 178 179 181 181 182 182 183 184 185 186 187 235 238 251 252 253 254 255 256 257 258 259 259 265 266 267 267 269 271 272 273 273 275 284 285 292 293 294 295 312 313 314 315 316 317 318 319 320 321 342 343 344 345 348 349 350 351 355 356 357 358 362 363 364 365
WHILE                : 180
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

aritmetica           : 31 42 51 52 95 131 135 245 245 246 247 268 269 274 275
aritmeticos          : 264 265 266 267 268 269
array                : 62
arrayDouble          : 170
arrayInt             : 169
asignacion           : 9 16 22 33 44
asignacionBoolean    : 61
asignacionChar       : 60
asignacionDouble     : 58
asignacionFloat      : 57
asignacionInt        : 56
asignacionLong       : 55
asignacionString     : 59
asignacionSumDouble  : 73
asignacionSumInt     : 68
asignacionSumString  : 80
booleanos            : 87 88 89 90 110 219 236 239 248 248 253 254
caseBool             : 220 221 222
caseChar             : 216 217 218
caseDob              : 208 209 210
caseFlt              : 204 205 206
caseInt              : 196 197 198
caseLgn              : 200 201 202
caseStr              : 212 213 214
cases                : 187
casesBool            : 194 221
casesChar            : 193 217
casesDob             : 191 209
casesFlt             : 190 205
casesInt             : 188 197
casesLgn             : 189 201
casesStr             : 192 213
castingcall          : 156
castingfun           : 159 160
codeBlock            : 195 199 203 207 211 215 219 223
comparacion          : 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259
condicional          : 180 226 229 230 233
contenido            : 33 34 35 36 37 38 39 40 41 42 43 120 121 128 129 130 131 136 137 138 180 181 182 183 184 185 186 225 226 229 230 231
contenidoLine        : 224
cuerpo               : 1 3 15 16 17 18 19 20 21
declaracion          : 126 127
dectipo              : 128 129 130 131 132 133 134 135
dectipoTupla         : 136 137 138
dectupla             : 320 321
defcase              : 198 202 206 210 214 218 222
doublevalues         : 362 363 364 365
else                 : 228 232
elseif               : 227 230 232
entrada              : 8 26 37 48 157
floatvalues          : 355 356 357 358 367
for                  : 11 18 28 39
funcall              : 6 24 35 46 158
funcion              : 5 15
if                   : 13 19 30 40 227 228
impresion            : 7 25 36 47
inicio               : 2 0
intvalues            : 342 343 344 345 353
io                   : 2
list                 : 63
listChar             : 173
listString           : 174
logicos              : 233
longvalues           : 348 349 350 351 360
match                : 12 20 29 41
numeros              : 109 244 244 246 247 251 252 264 264 265 266 268 271 272 274
parametro            : 120 121 128 129 130 131 132 133 134 135 136 137 138
parametros           : 124 127
reasignacion         : 23 34 45
relacional           : 237 240
returnCastable       : 155 159
returnfun            : 53 54 94 130 134 138
startsWith           : 14 21 32 43 115
stringCastDouble     : 368
stringCastFloat      : 361
stringCastInt        : 347
stringCastLong       : 354
sumDoubleChar        : 303 314 315
sumIntChar           : 300 318 319
sumIntDouble         : 302 312 313
sumStringChar        : 301 316 317
suma                 : 270
tipo                 : 104 105 122 123 139 141 142 143 144 166 166 168 168
tipos                : 140
tiposentry           : 142 144
tuple                : 136 178 179
valor                : 93 96 123 128 132 147 148 175 176
valorC               : 233 234
valorI               : 145 146 147
valores              : 151 153 165 167 171 172 176 177
valoresChar          : 294 295 299
valoresDouble        : 285 289
valoresInt           : 284 287
valoresString        : 292 293 297
varparen             : 150 153 154
while                : 10 17 27 38

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D
    (2) inicio -> . IMPORT io inicio
    (3) inicio -> . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . startsWith
    (15) cuerpo -> . funcion cuerpo
    (16) cuerpo -> . asignacion cuerpo
    (17) cuerpo -> . while cuerpo
    (18) cuerpo -> . for cuerpo
    (19) cuerpo -> . if cuerpo
    (20) cuerpo -> . match cuerpo
    (21) cuerpo -> . startsWith cuerpo
    (120) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (134) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (135) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (136) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (137) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (138) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    OBJECT          shift and go to state 2
    IMPORT          shift and go to state 5
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    inicio                         shift and go to state 1
    cuerpo                         shift and go to state 4
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    for                            shift and go to state 12
    match                          shift and go to state 13
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> OBJECT . VARIABLE LLAVE_I cuerpo LLAVE_D

    VARIABLE        shift and go to state 42


state 3

    (150) funcall -> VARIABLE . varparen
    (187) match -> VARIABLE . MATCH LLAVE_I cases LLAVE_D
    (151) varparen -> . PAR_I valores PAR_D
    (152) varparen -> . PAR_I PAR_D
    (153) varparen -> . varparen PAR_I valores PAR_D
    (154) varparen -> . varparen PAR_I PAR_D

    MATCH           shift and go to state 44
    PAR_I           shift and go to state 45

    varparen                       shift and go to state 43

state 4

    (3) inicio -> cuerpo .

    $end            reduce using rule 3 (inicio -> cuerpo .)


state 5

    (2) inicio -> IMPORT . io inicio
    (4) io -> . VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE

    VARIABLE        shift and go to state 47

    io                             shift and go to state 46

state 6

    (5) cuerpo -> funcion .
    (15) cuerpo -> funcion . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . startsWith
    (15) cuerpo -> . funcion cuerpo
    (16) cuerpo -> . asignacion cuerpo
    (17) cuerpo -> . while cuerpo
    (18) cuerpo -> . for cuerpo
    (19) cuerpo -> . if cuerpo
    (20) cuerpo -> . match cuerpo
    (21) cuerpo -> . startsWith cuerpo
    (120) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (134) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (135) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (136) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (137) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (138) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    $end            reduce using rule 5 (cuerpo -> funcion .)
    LLAVE_D         reduce using rule 5 (cuerpo -> funcion .)
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    funcion                        shift and go to state 6
    cuerpo                         shift and go to state 48
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    for                            shift and go to state 12
    match                          shift and go to state 13
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41

state 7

    (6) cuerpo -> funcall .

    $end            reduce using rule 6 (cuerpo -> funcall .)
    LLAVE_D         reduce using rule 6 (cuerpo -> funcall .)


state 8

    (7) cuerpo -> impresion .

    $end            reduce using rule 7 (cuerpo -> impresion .)
    LLAVE_D         reduce using rule 7 (cuerpo -> impresion .)


state 9

    (8) cuerpo -> entrada .

    $end            reduce using rule 8 (cuerpo -> entrada .)
    LLAVE_D         reduce using rule 8 (cuerpo -> entrada .)


state 10

    (9) cuerpo -> asignacion .
    (16) cuerpo -> asignacion . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . startsWith
    (15) cuerpo -> . funcion cuerpo
    (16) cuerpo -> . asignacion cuerpo
    (17) cuerpo -> . while cuerpo
    (18) cuerpo -> . for cuerpo
    (19) cuerpo -> . if cuerpo
    (20) cuerpo -> . match cuerpo
    (21) cuerpo -> . startsWith cuerpo
    (120) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (134) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (135) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (136) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (137) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (138) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    $end            reduce using rule 9 (cuerpo -> asignacion .)
    LLAVE_D         reduce using rule 9 (cuerpo -> asignacion .)
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    asignacion                     shift and go to state 10
    cuerpo                         shift and go to state 49
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    while                          shift and go to state 11
    for                            shift and go to state 12
    match                          shift and go to state 13
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41

state 11

    (10) cuerpo -> while .
    (17) cuerpo -> while . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . startsWith
    (15) cuerpo -> . funcion cuerpo
    (16) cuerpo -> . asignacion cuerpo
    (17) cuerpo -> . while cuerpo
    (18) cuerpo -> . for cuerpo
    (19) cuerpo -> . if cuerpo
    (20) cuerpo -> . match cuerpo
    (21) cuerpo -> . startsWith cuerpo
    (120) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (134) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (135) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (136) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (137) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (138) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    $end            reduce using rule 10 (cuerpo -> while .)
    LLAVE_D         reduce using rule 10 (cuerpo -> while .)
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    while                          shift and go to state 11
    cuerpo                         shift and go to state 50
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    for                            shift and go to state 12
    match                          shift and go to state 13
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41

state 12

    (11) cuerpo -> for .
    (18) cuerpo -> for . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . startsWith
    (15) cuerpo -> . funcion cuerpo
    (16) cuerpo -> . asignacion cuerpo
    (17) cuerpo -> . while cuerpo
    (18) cuerpo -> . for cuerpo
    (19) cuerpo -> . if cuerpo
    (20) cuerpo -> . match cuerpo
    (21) cuerpo -> . startsWith cuerpo
    (120) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (134) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (135) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (136) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (137) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (138) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    $end            reduce using rule 11 (cuerpo -> for .)
    LLAVE_D         reduce using rule 11 (cuerpo -> for .)
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    for                            shift and go to state 12
    cuerpo                         shift and go to state 51
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    match                          shift and go to state 13
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41

state 13

    (12) cuerpo -> match .
    (20) cuerpo -> match . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . startsWith
    (15) cuerpo -> . funcion cuerpo
    (16) cuerpo -> . asignacion cuerpo
    (17) cuerpo -> . while cuerpo
    (18) cuerpo -> . for cuerpo
    (19) cuerpo -> . if cuerpo
    (20) cuerpo -> . match cuerpo
    (21) cuerpo -> . startsWith cuerpo
    (120) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (134) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (135) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (136) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (137) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (138) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    $end            reduce using rule 12 (cuerpo -> match .)
    LLAVE_D         reduce using rule 12 (cuerpo -> match .)
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    match                          shift and go to state 13
    cuerpo                         shift and go to state 52
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    for                            shift and go to state 12
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41

state 14

    (13) cuerpo -> if .
    (19) cuerpo -> if . cuerpo
    (227) if -> if . elseif
    (228) if -> if . else
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . startsWith
    (15) cuerpo -> . funcion cuerpo
    (16) cuerpo -> . asignacion cuerpo
    (17) cuerpo -> . while cuerpo
    (18) cuerpo -> . for cuerpo
    (19) cuerpo -> . if cuerpo
    (20) cuerpo -> . match cuerpo
    (21) cuerpo -> . startsWith cuerpo
    (229) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (230) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (231) else -> . ELSE LLAVE_I contenido LLAVE_D
    (232) else -> . elseif else
    (120) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (134) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (135) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (136) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (137) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (138) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    $end            reduce using rule 13 (cuerpo -> if .)
    LLAVE_D         reduce using rule 13 (cuerpo -> if .)
    ELSE            shift and go to state 56
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    if                             shift and go to state 14
    cuerpo                         shift and go to state 53
    elseif                         shift and go to state 54
    else                           shift and go to state 55
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    for                            shift and go to state 12
    match                          shift and go to state 13
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41

state 15

    (14) cuerpo -> startsWith .
    (21) cuerpo -> startsWith . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . startsWith
    (15) cuerpo -> . funcion cuerpo
    (16) cuerpo -> . asignacion cuerpo
    (17) cuerpo -> . while cuerpo
    (18) cuerpo -> . for cuerpo
    (19) cuerpo -> . if cuerpo
    (20) cuerpo -> . match cuerpo
    (21) cuerpo -> . startsWith cuerpo
    (120) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (134) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (135) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (136) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (137) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (138) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    $end            reduce using rule 14 (cuerpo -> startsWith .)
    LLAVE_D         reduce using rule 14 (cuerpo -> startsWith .)
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    startsWith                     shift and go to state 15
    cuerpo                         shift and go to state 57
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    for                            shift and go to state 12
    match                          shift and go to state 13
    if                             shift and go to state 14
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41

state 16

    (120) funcion -> DEF . VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> DEF . VARIABLE parametro LLAVE_I contenido LLAVE_D
    (128) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (132) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (133) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (134) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (135) funcion -> DEF . VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (136) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (137) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (138) funcion -> DEF . VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D

    VARIABLE        shift and go to state 58


state 17

    (145) impresion -> PRINTLN . PAR_I valorI PAR_D

    PAR_I           shift and go to state 59


state 18

    (146) impresion -> PRINT . PAR_I valorI PAR_D

    PAR_I           shift and go to state 60


state 19

    (149) entrada -> READLINE . PAR_I PAR_D

    PAR_I           shift and go to state 61


state 20

    (49) asignacion -> VAR . VARIABLE IGUAL VARIABLE
    (51) asignacion -> VAR . VARIABLE IGUAL aritmetica
    (53) asignacion -> VAR . VARIABLE IGUAL returnfun
    (178) asignacion -> VAR . VARIABLE IGUAL tuple
    (320) asignacion -> VAR . VARIABLE DOBLE_PUNTO dectupla
    (64) asignacionLong -> VAR . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> VAR . VARIABLE IGUAL longvalues
    (349) asignacionLong -> VAR . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> VAR . VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (342) asignacionInt -> VAR . VARIABLE IGUAL intvalues
    (343) asignacionInt -> VAR . VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> VAR . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> VAR . VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> VAR . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (362) asignacionDouble -> VAR . VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> VAR . VARIABLE IGUAL STRING
    (75) asignacionString -> VAR . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> VAR . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (81) asignacionChar -> VAR . VARIABLE IGUAL CHAR
    (82) asignacionChar -> VAR . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> VAR . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> VAR . VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> VAR . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> VAR . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> VAR . VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (172) list -> VAR . VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (318) asignacionSumInt -> VAR . VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> VAR . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> VAR . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> VAR . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (295) listChar -> VAR . VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (293) listString -> VAR . VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    VARIABLE        shift and go to state 62


state 21

    (50) asignacion -> VAL . VARIABLE IGUAL VARIABLE
    (52) asignacion -> VAL . VARIABLE IGUAL aritmetica
    (54) asignacion -> VAL . VARIABLE IGUAL returnfun
    (179) asignacion -> VAL . VARIABLE IGUAL tuple
    (321) asignacion -> VAL . VARIABLE DOBLE_PUNTO dectupla
    (65) asignacionLong -> VAL . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (350) asignacionLong -> VAL . VARIABLE IGUAL longvalues
    (351) asignacionLong -> VAL . VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (67) asignacionInt -> VAL . VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (344) asignacionInt -> VAL . VARIABLE IGUAL intvalues
    (345) asignacionInt -> VAL . VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (70) asignacionFloat -> VAL . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (357) asignacionFloat -> VAL . VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> VAL . VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (72) asignacionDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (364) asignacionDouble -> VAL . VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (76) asignacionString -> VAL . VARIABLE IGUAL STRING
    (77) asignacionString -> VAL . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (79) asignacionString -> VAL . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (83) asignacionChar -> VAL . VARIABLE IGUAL CHAR
    (84) asignacionChar -> VAL . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (86) asignacionChar -> VAL . VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (89) asignacionBoolean -> VAL . VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> VAL . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (92) asignacionBoolean -> VAL . VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (167) array -> VAL . VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> VAL . VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (171) list -> VAL . VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (319) asignacionSumInt -> VAL . VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (313) asignacionSumDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (315) asignacionSumDouble -> VAL . VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (317) asignacionSumString -> VAL . VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (294) listChar -> VAL . VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> VAL . VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    VARIABLE        shift and go to state 63


state 22

    (55) asignacion -> asignacionLong .

    DEF             reduce using rule 55 (asignacion -> asignacionLong .)
    VARIABLE        reduce using rule 55 (asignacion -> asignacionLong .)
    PRINTLN         reduce using rule 55 (asignacion -> asignacionLong .)
    PRINT           reduce using rule 55 (asignacion -> asignacionLong .)
    READLINE        reduce using rule 55 (asignacion -> asignacionLong .)
    VAR             reduce using rule 55 (asignacion -> asignacionLong .)
    VAL             reduce using rule 55 (asignacion -> asignacionLong .)
    WHILE           reduce using rule 55 (asignacion -> asignacionLong .)
    FOR             reduce using rule 55 (asignacion -> asignacionLong .)
    IF              reduce using rule 55 (asignacion -> asignacionLong .)
    STRING          reduce using rule 55 (asignacion -> asignacionLong .)
    $end            reduce using rule 55 (asignacion -> asignacionLong .)
    LLAVE_D         reduce using rule 55 (asignacion -> asignacionLong .)
    INT             reduce using rule 55 (asignacion -> asignacionLong .)
    DOUBLE          reduce using rule 55 (asignacion -> asignacionLong .)
    LONG            reduce using rule 55 (asignacion -> asignacionLong .)
    FLOAT           reduce using rule 55 (asignacion -> asignacionLong .)
    CHAR            reduce using rule 55 (asignacion -> asignacionLong .)
    RETURN          reduce using rule 55 (asignacion -> asignacionLong .)
    CASE            reduce using rule 55 (asignacion -> asignacionLong .)


state 23

    (56) asignacion -> asignacionInt .

    DEF             reduce using rule 56 (asignacion -> asignacionInt .)
    VARIABLE        reduce using rule 56 (asignacion -> asignacionInt .)
    PRINTLN         reduce using rule 56 (asignacion -> asignacionInt .)
    PRINT           reduce using rule 56 (asignacion -> asignacionInt .)
    READLINE        reduce using rule 56 (asignacion -> asignacionInt .)
    VAR             reduce using rule 56 (asignacion -> asignacionInt .)
    VAL             reduce using rule 56 (asignacion -> asignacionInt .)
    WHILE           reduce using rule 56 (asignacion -> asignacionInt .)
    FOR             reduce using rule 56 (asignacion -> asignacionInt .)
    IF              reduce using rule 56 (asignacion -> asignacionInt .)
    STRING          reduce using rule 56 (asignacion -> asignacionInt .)
    $end            reduce using rule 56 (asignacion -> asignacionInt .)
    LLAVE_D         reduce using rule 56 (asignacion -> asignacionInt .)
    INT             reduce using rule 56 (asignacion -> asignacionInt .)
    DOUBLE          reduce using rule 56 (asignacion -> asignacionInt .)
    LONG            reduce using rule 56 (asignacion -> asignacionInt .)
    FLOAT           reduce using rule 56 (asignacion -> asignacionInt .)
    CHAR            reduce using rule 56 (asignacion -> asignacionInt .)
    RETURN          reduce using rule 56 (asignacion -> asignacionInt .)
    CASE            reduce using rule 56 (asignacion -> asignacionInt .)


state 24

    (57) asignacion -> asignacionFloat .

    DEF             reduce using rule 57 (asignacion -> asignacionFloat .)
    VARIABLE        reduce using rule 57 (asignacion -> asignacionFloat .)
    PRINTLN         reduce using rule 57 (asignacion -> asignacionFloat .)
    PRINT           reduce using rule 57 (asignacion -> asignacionFloat .)
    READLINE        reduce using rule 57 (asignacion -> asignacionFloat .)
    VAR             reduce using rule 57 (asignacion -> asignacionFloat .)
    VAL             reduce using rule 57 (asignacion -> asignacionFloat .)
    WHILE           reduce using rule 57 (asignacion -> asignacionFloat .)
    FOR             reduce using rule 57 (asignacion -> asignacionFloat .)
    IF              reduce using rule 57 (asignacion -> asignacionFloat .)
    STRING          reduce using rule 57 (asignacion -> asignacionFloat .)
    $end            reduce using rule 57 (asignacion -> asignacionFloat .)
    LLAVE_D         reduce using rule 57 (asignacion -> asignacionFloat .)
    INT             reduce using rule 57 (asignacion -> asignacionFloat .)
    DOUBLE          reduce using rule 57 (asignacion -> asignacionFloat .)
    LONG            reduce using rule 57 (asignacion -> asignacionFloat .)
    FLOAT           reduce using rule 57 (asignacion -> asignacionFloat .)
    CHAR            reduce using rule 57 (asignacion -> asignacionFloat .)
    RETURN          reduce using rule 57 (asignacion -> asignacionFloat .)
    CASE            reduce using rule 57 (asignacion -> asignacionFloat .)


state 25

    (58) asignacion -> asignacionDouble .

    DEF             reduce using rule 58 (asignacion -> asignacionDouble .)
    VARIABLE        reduce using rule 58 (asignacion -> asignacionDouble .)
    PRINTLN         reduce using rule 58 (asignacion -> asignacionDouble .)
    PRINT           reduce using rule 58 (asignacion -> asignacionDouble .)
    READLINE        reduce using rule 58 (asignacion -> asignacionDouble .)
    VAR             reduce using rule 58 (asignacion -> asignacionDouble .)
    VAL             reduce using rule 58 (asignacion -> asignacionDouble .)
    WHILE           reduce using rule 58 (asignacion -> asignacionDouble .)
    FOR             reduce using rule 58 (asignacion -> asignacionDouble .)
    IF              reduce using rule 58 (asignacion -> asignacionDouble .)
    STRING          reduce using rule 58 (asignacion -> asignacionDouble .)
    $end            reduce using rule 58 (asignacion -> asignacionDouble .)
    LLAVE_D         reduce using rule 58 (asignacion -> asignacionDouble .)
    INT             reduce using rule 58 (asignacion -> asignacionDouble .)
    DOUBLE          reduce using rule 58 (asignacion -> asignacionDouble .)
    LONG            reduce using rule 58 (asignacion -> asignacionDouble .)
    FLOAT           reduce using rule 58 (asignacion -> asignacionDouble .)
    CHAR            reduce using rule 58 (asignacion -> asignacionDouble .)
    RETURN          reduce using rule 58 (asignacion -> asignacionDouble .)
    CASE            reduce using rule 58 (asignacion -> asignacionDouble .)


state 26

    (59) asignacion -> asignacionString .

    DEF             reduce using rule 59 (asignacion -> asignacionString .)
    VARIABLE        reduce using rule 59 (asignacion -> asignacionString .)
    PRINTLN         reduce using rule 59 (asignacion -> asignacionString .)
    PRINT           reduce using rule 59 (asignacion -> asignacionString .)
    READLINE        reduce using rule 59 (asignacion -> asignacionString .)
    VAR             reduce using rule 59 (asignacion -> asignacionString .)
    VAL             reduce using rule 59 (asignacion -> asignacionString .)
    WHILE           reduce using rule 59 (asignacion -> asignacionString .)
    FOR             reduce using rule 59 (asignacion -> asignacionString .)
    IF              reduce using rule 59 (asignacion -> asignacionString .)
    STRING          reduce using rule 59 (asignacion -> asignacionString .)
    $end            reduce using rule 59 (asignacion -> asignacionString .)
    LLAVE_D         reduce using rule 59 (asignacion -> asignacionString .)
    INT             reduce using rule 59 (asignacion -> asignacionString .)
    DOUBLE          reduce using rule 59 (asignacion -> asignacionString .)
    LONG            reduce using rule 59 (asignacion -> asignacionString .)
    FLOAT           reduce using rule 59 (asignacion -> asignacionString .)
    CHAR            reduce using rule 59 (asignacion -> asignacionString .)
    RETURN          reduce using rule 59 (asignacion -> asignacionString .)
    CASE            reduce using rule 59 (asignacion -> asignacionString .)


state 27

    (60) asignacion -> asignacionChar .

    DEF             reduce using rule 60 (asignacion -> asignacionChar .)
    VARIABLE        reduce using rule 60 (asignacion -> asignacionChar .)
    PRINTLN         reduce using rule 60 (asignacion -> asignacionChar .)
    PRINT           reduce using rule 60 (asignacion -> asignacionChar .)
    READLINE        reduce using rule 60 (asignacion -> asignacionChar .)
    VAR             reduce using rule 60 (asignacion -> asignacionChar .)
    VAL             reduce using rule 60 (asignacion -> asignacionChar .)
    WHILE           reduce using rule 60 (asignacion -> asignacionChar .)
    FOR             reduce using rule 60 (asignacion -> asignacionChar .)
    IF              reduce using rule 60 (asignacion -> asignacionChar .)
    STRING          reduce using rule 60 (asignacion -> asignacionChar .)
    $end            reduce using rule 60 (asignacion -> asignacionChar .)
    LLAVE_D         reduce using rule 60 (asignacion -> asignacionChar .)
    INT             reduce using rule 60 (asignacion -> asignacionChar .)
    DOUBLE          reduce using rule 60 (asignacion -> asignacionChar .)
    LONG            reduce using rule 60 (asignacion -> asignacionChar .)
    FLOAT           reduce using rule 60 (asignacion -> asignacionChar .)
    CHAR            reduce using rule 60 (asignacion -> asignacionChar .)
    RETURN          reduce using rule 60 (asignacion -> asignacionChar .)
    CASE            reduce using rule 60 (asignacion -> asignacionChar .)


state 28

    (61) asignacion -> asignacionBoolean .

    DEF             reduce using rule 61 (asignacion -> asignacionBoolean .)
    VARIABLE        reduce using rule 61 (asignacion -> asignacionBoolean .)
    PRINTLN         reduce using rule 61 (asignacion -> asignacionBoolean .)
    PRINT           reduce using rule 61 (asignacion -> asignacionBoolean .)
    READLINE        reduce using rule 61 (asignacion -> asignacionBoolean .)
    VAR             reduce using rule 61 (asignacion -> asignacionBoolean .)
    VAL             reduce using rule 61 (asignacion -> asignacionBoolean .)
    WHILE           reduce using rule 61 (asignacion -> asignacionBoolean .)
    FOR             reduce using rule 61 (asignacion -> asignacionBoolean .)
    IF              reduce using rule 61 (asignacion -> asignacionBoolean .)
    STRING          reduce using rule 61 (asignacion -> asignacionBoolean .)
    $end            reduce using rule 61 (asignacion -> asignacionBoolean .)
    LLAVE_D         reduce using rule 61 (asignacion -> asignacionBoolean .)
    INT             reduce using rule 61 (asignacion -> asignacionBoolean .)
    DOUBLE          reduce using rule 61 (asignacion -> asignacionBoolean .)
    LONG            reduce using rule 61 (asignacion -> asignacionBoolean .)
    FLOAT           reduce using rule 61 (asignacion -> asignacionBoolean .)
    CHAR            reduce using rule 61 (asignacion -> asignacionBoolean .)
    RETURN          reduce using rule 61 (asignacion -> asignacionBoolean .)
    CASE            reduce using rule 61 (asignacion -> asignacionBoolean .)


state 29

    (62) asignacion -> array .

    DEF             reduce using rule 62 (asignacion -> array .)
    VARIABLE        reduce using rule 62 (asignacion -> array .)
    PRINTLN         reduce using rule 62 (asignacion -> array .)
    PRINT           reduce using rule 62 (asignacion -> array .)
    READLINE        reduce using rule 62 (asignacion -> array .)
    VAR             reduce using rule 62 (asignacion -> array .)
    VAL             reduce using rule 62 (asignacion -> array .)
    WHILE           reduce using rule 62 (asignacion -> array .)
    FOR             reduce using rule 62 (asignacion -> array .)
    IF              reduce using rule 62 (asignacion -> array .)
    STRING          reduce using rule 62 (asignacion -> array .)
    $end            reduce using rule 62 (asignacion -> array .)
    LLAVE_D         reduce using rule 62 (asignacion -> array .)
    INT             reduce using rule 62 (asignacion -> array .)
    DOUBLE          reduce using rule 62 (asignacion -> array .)
    LONG            reduce using rule 62 (asignacion -> array .)
    FLOAT           reduce using rule 62 (asignacion -> array .)
    CHAR            reduce using rule 62 (asignacion -> array .)
    RETURN          reduce using rule 62 (asignacion -> array .)
    CASE            reduce using rule 62 (asignacion -> array .)


state 30

    (63) asignacion -> list .

    DEF             reduce using rule 63 (asignacion -> list .)
    VARIABLE        reduce using rule 63 (asignacion -> list .)
    PRINTLN         reduce using rule 63 (asignacion -> list .)
    PRINT           reduce using rule 63 (asignacion -> list .)
    READLINE        reduce using rule 63 (asignacion -> list .)
    VAR             reduce using rule 63 (asignacion -> list .)
    VAL             reduce using rule 63 (asignacion -> list .)
    WHILE           reduce using rule 63 (asignacion -> list .)
    FOR             reduce using rule 63 (asignacion -> list .)
    IF              reduce using rule 63 (asignacion -> list .)
    STRING          reduce using rule 63 (asignacion -> list .)
    $end            reduce using rule 63 (asignacion -> list .)
    LLAVE_D         reduce using rule 63 (asignacion -> list .)
    INT             reduce using rule 63 (asignacion -> list .)
    DOUBLE          reduce using rule 63 (asignacion -> list .)
    LONG            reduce using rule 63 (asignacion -> list .)
    FLOAT           reduce using rule 63 (asignacion -> list .)
    CHAR            reduce using rule 63 (asignacion -> list .)
    RETURN          reduce using rule 63 (asignacion -> list .)
    CASE            reduce using rule 63 (asignacion -> list .)


state 31

    (180) while -> WHILE . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 64


state 32

    (181) for -> FOR . PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> FOR . PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> FOR . PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> FOR . PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> FOR . PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> FOR . PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 65


state 33

    (226) if -> IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D

    PAR_I           shift and go to state 66


state 34

    (290) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    PUNTO           shift and go to state 67


state 35

    (68) asignacionInt -> asignacionSumInt .

    DEF             reduce using rule 68 (asignacionInt -> asignacionSumInt .)
    VARIABLE        reduce using rule 68 (asignacionInt -> asignacionSumInt .)
    PRINTLN         reduce using rule 68 (asignacionInt -> asignacionSumInt .)
    PRINT           reduce using rule 68 (asignacionInt -> asignacionSumInt .)
    READLINE        reduce using rule 68 (asignacionInt -> asignacionSumInt .)
    VAR             reduce using rule 68 (asignacionInt -> asignacionSumInt .)
    VAL             reduce using rule 68 (asignacionInt -> asignacionSumInt .)
    WHILE           reduce using rule 68 (asignacionInt -> asignacionSumInt .)
    FOR             reduce using rule 68 (asignacionInt -> asignacionSumInt .)
    IF              reduce using rule 68 (asignacionInt -> asignacionSumInt .)
    STRING          reduce using rule 68 (asignacionInt -> asignacionSumInt .)
    $end            reduce using rule 68 (asignacionInt -> asignacionSumInt .)
    LLAVE_D         reduce using rule 68 (asignacionInt -> asignacionSumInt .)
    INT             reduce using rule 68 (asignacionInt -> asignacionSumInt .)
    DOUBLE          reduce using rule 68 (asignacionInt -> asignacionSumInt .)
    LONG            reduce using rule 68 (asignacionInt -> asignacionSumInt .)
    FLOAT           reduce using rule 68 (asignacionInt -> asignacionSumInt .)
    CHAR            reduce using rule 68 (asignacionInt -> asignacionSumInt .)
    RETURN          reduce using rule 68 (asignacionInt -> asignacionSumInt .)
    CASE            reduce using rule 68 (asignacionInt -> asignacionSumInt .)


state 36

    (73) asignacionDouble -> asignacionSumDouble .

    DEF             reduce using rule 73 (asignacionDouble -> asignacionSumDouble .)
    VARIABLE        reduce using rule 73 (asignacionDouble -> asignacionSumDouble .)
    PRINTLN         reduce using rule 73 (asignacionDouble -> asignacionSumDouble .)
    PRINT           reduce using rule 73 (asignacionDouble -> asignacionSumDouble .)
    READLINE        reduce using rule 73 (asignacionDouble -> asignacionSumDouble .)
    VAR             reduce using rule 73 (asignacionDouble -> asignacionSumDouble .)
    VAL             reduce using rule 73 (asignacionDouble -> asignacionSumDouble .)
    WHILE           reduce using rule 73 (asignacionDouble -> asignacionSumDouble .)
    FOR             reduce using rule 73 (asignacionDouble -> asignacionSumDouble .)
    IF              reduce using rule 73 (asignacionDouble -> asignacionSumDouble .)
    STRING          reduce using rule 73 (asignacionDouble -> asignacionSumDouble .)
    $end            reduce using rule 73 (asignacionDouble -> asignacionSumDouble .)
    LLAVE_D         reduce using rule 73 (asignacionDouble -> asignacionSumDouble .)
    INT             reduce using rule 73 (asignacionDouble -> asignacionSumDouble .)
    DOUBLE          reduce using rule 73 (asignacionDouble -> asignacionSumDouble .)
    LONG            reduce using rule 73 (asignacionDouble -> asignacionSumDouble .)
    FLOAT           reduce using rule 73 (asignacionDouble -> asignacionSumDouble .)
    CHAR            reduce using rule 73 (asignacionDouble -> asignacionSumDouble .)
    RETURN          reduce using rule 73 (asignacionDouble -> asignacionSumDouble .)
    CASE            reduce using rule 73 (asignacionDouble -> asignacionSumDouble .)


state 37

    (80) asignacionString -> asignacionSumString .

    DEF             reduce using rule 80 (asignacionString -> asignacionSumString .)
    VARIABLE        reduce using rule 80 (asignacionString -> asignacionSumString .)
    PRINTLN         reduce using rule 80 (asignacionString -> asignacionSumString .)
    PRINT           reduce using rule 80 (asignacionString -> asignacionSumString .)
    READLINE        reduce using rule 80 (asignacionString -> asignacionSumString .)
    VAR             reduce using rule 80 (asignacionString -> asignacionSumString .)
    VAL             reduce using rule 80 (asignacionString -> asignacionSumString .)
    WHILE           reduce using rule 80 (asignacionString -> asignacionSumString .)
    FOR             reduce using rule 80 (asignacionString -> asignacionSumString .)
    IF              reduce using rule 80 (asignacionString -> asignacionSumString .)
    STRING          reduce using rule 80 (asignacionString -> asignacionSumString .)
    $end            reduce using rule 80 (asignacionString -> asignacionSumString .)
    LLAVE_D         reduce using rule 80 (asignacionString -> asignacionSumString .)
    INT             reduce using rule 80 (asignacionString -> asignacionSumString .)
    DOUBLE          reduce using rule 80 (asignacionString -> asignacionSumString .)
    LONG            reduce using rule 80 (asignacionString -> asignacionSumString .)
    FLOAT           reduce using rule 80 (asignacionString -> asignacionSumString .)
    CHAR            reduce using rule 80 (asignacionString -> asignacionSumString .)
    RETURN          reduce using rule 80 (asignacionString -> asignacionSumString .)
    CASE            reduce using rule 80 (asignacionString -> asignacionSumString .)


state 38

    (169) array -> arrayInt .

    DEF             reduce using rule 169 (array -> arrayInt .)
    VARIABLE        reduce using rule 169 (array -> arrayInt .)
    PRINTLN         reduce using rule 169 (array -> arrayInt .)
    PRINT           reduce using rule 169 (array -> arrayInt .)
    READLINE        reduce using rule 169 (array -> arrayInt .)
    VAR             reduce using rule 169 (array -> arrayInt .)
    VAL             reduce using rule 169 (array -> arrayInt .)
    WHILE           reduce using rule 169 (array -> arrayInt .)
    FOR             reduce using rule 169 (array -> arrayInt .)
    IF              reduce using rule 169 (array -> arrayInt .)
    STRING          reduce using rule 169 (array -> arrayInt .)
    $end            reduce using rule 169 (array -> arrayInt .)
    LLAVE_D         reduce using rule 169 (array -> arrayInt .)
    INT             reduce using rule 169 (array -> arrayInt .)
    DOUBLE          reduce using rule 169 (array -> arrayInt .)
    LONG            reduce using rule 169 (array -> arrayInt .)
    FLOAT           reduce using rule 169 (array -> arrayInt .)
    CHAR            reduce using rule 169 (array -> arrayInt .)
    RETURN          reduce using rule 169 (array -> arrayInt .)
    CASE            reduce using rule 169 (array -> arrayInt .)


state 39

    (170) array -> arrayDouble .

    DEF             reduce using rule 170 (array -> arrayDouble .)
    VARIABLE        reduce using rule 170 (array -> arrayDouble .)
    PRINTLN         reduce using rule 170 (array -> arrayDouble .)
    PRINT           reduce using rule 170 (array -> arrayDouble .)
    READLINE        reduce using rule 170 (array -> arrayDouble .)
    VAR             reduce using rule 170 (array -> arrayDouble .)
    VAL             reduce using rule 170 (array -> arrayDouble .)
    WHILE           reduce using rule 170 (array -> arrayDouble .)
    FOR             reduce using rule 170 (array -> arrayDouble .)
    IF              reduce using rule 170 (array -> arrayDouble .)
    STRING          reduce using rule 170 (array -> arrayDouble .)
    $end            reduce using rule 170 (array -> arrayDouble .)
    LLAVE_D         reduce using rule 170 (array -> arrayDouble .)
    INT             reduce using rule 170 (array -> arrayDouble .)
    DOUBLE          reduce using rule 170 (array -> arrayDouble .)
    LONG            reduce using rule 170 (array -> arrayDouble .)
    FLOAT           reduce using rule 170 (array -> arrayDouble .)
    CHAR            reduce using rule 170 (array -> arrayDouble .)
    RETURN          reduce using rule 170 (array -> arrayDouble .)
    CASE            reduce using rule 170 (array -> arrayDouble .)


state 40

    (173) list -> listChar .

    DEF             reduce using rule 173 (list -> listChar .)
    VARIABLE        reduce using rule 173 (list -> listChar .)
    PRINTLN         reduce using rule 173 (list -> listChar .)
    PRINT           reduce using rule 173 (list -> listChar .)
    READLINE        reduce using rule 173 (list -> listChar .)
    VAR             reduce using rule 173 (list -> listChar .)
    VAL             reduce using rule 173 (list -> listChar .)
    WHILE           reduce using rule 173 (list -> listChar .)
    FOR             reduce using rule 173 (list -> listChar .)
    IF              reduce using rule 173 (list -> listChar .)
    STRING          reduce using rule 173 (list -> listChar .)
    $end            reduce using rule 173 (list -> listChar .)
    LLAVE_D         reduce using rule 173 (list -> listChar .)
    INT             reduce using rule 173 (list -> listChar .)
    DOUBLE          reduce using rule 173 (list -> listChar .)
    LONG            reduce using rule 173 (list -> listChar .)
    FLOAT           reduce using rule 173 (list -> listChar .)
    CHAR            reduce using rule 173 (list -> listChar .)
    RETURN          reduce using rule 173 (list -> listChar .)
    CASE            reduce using rule 173 (list -> listChar .)


state 41

    (174) list -> listString .

    DEF             reduce using rule 174 (list -> listString .)
    VARIABLE        reduce using rule 174 (list -> listString .)
    PRINTLN         reduce using rule 174 (list -> listString .)
    PRINT           reduce using rule 174 (list -> listString .)
    READLINE        reduce using rule 174 (list -> listString .)
    VAR             reduce using rule 174 (list -> listString .)
    VAL             reduce using rule 174 (list -> listString .)
    WHILE           reduce using rule 174 (list -> listString .)
    FOR             reduce using rule 174 (list -> listString .)
    IF              reduce using rule 174 (list -> listString .)
    STRING          reduce using rule 174 (list -> listString .)
    $end            reduce using rule 174 (list -> listString .)
    LLAVE_D         reduce using rule 174 (list -> listString .)
    INT             reduce using rule 174 (list -> listString .)
    DOUBLE          reduce using rule 174 (list -> listString .)
    LONG            reduce using rule 174 (list -> listString .)
    FLOAT           reduce using rule 174 (list -> listString .)
    CHAR            reduce using rule 174 (list -> listString .)
    RETURN          reduce using rule 174 (list -> listString .)
    CASE            reduce using rule 174 (list -> listString .)


state 42

    (1) inicio -> OBJECT VARIABLE . LLAVE_I cuerpo LLAVE_D

    LLAVE_I         shift and go to state 68


state 43

    (150) funcall -> VARIABLE varparen .
    (153) varparen -> varparen . PAR_I valores PAR_D
    (154) varparen -> varparen . PAR_I PAR_D

    $end            reduce using rule 150 (funcall -> VARIABLE varparen .)
    LLAVE_D         reduce using rule 150 (funcall -> VARIABLE varparen .)
    VAR             reduce using rule 150 (funcall -> VARIABLE varparen .)
    VAL             reduce using rule 150 (funcall -> VARIABLE varparen .)
    VARIABLE        reduce using rule 150 (funcall -> VARIABLE varparen .)
    PRINTLN         reduce using rule 150 (funcall -> VARIABLE varparen .)
    PRINT           reduce using rule 150 (funcall -> VARIABLE varparen .)
    READLINE        reduce using rule 150 (funcall -> VARIABLE varparen .)
    WHILE           reduce using rule 150 (funcall -> VARIABLE varparen .)
    FOR             reduce using rule 150 (funcall -> VARIABLE varparen .)
    IF              reduce using rule 150 (funcall -> VARIABLE varparen .)
    INT             reduce using rule 150 (funcall -> VARIABLE varparen .)
    DOUBLE          reduce using rule 150 (funcall -> VARIABLE varparen .)
    LONG            reduce using rule 150 (funcall -> VARIABLE varparen .)
    FLOAT           reduce using rule 150 (funcall -> VARIABLE varparen .)
    STRING          reduce using rule 150 (funcall -> VARIABLE varparen .)
    CHAR            reduce using rule 150 (funcall -> VARIABLE varparen .)
    PUNTO           reduce using rule 150 (funcall -> VARIABLE varparen .)
    DEF             reduce using rule 150 (funcall -> VARIABLE varparen .)
    RETURN          reduce using rule 150 (funcall -> VARIABLE varparen .)
    CASE            reduce using rule 150 (funcall -> VARIABLE varparen .)
    PAR_I           shift and go to state 69


state 44

    (187) match -> VARIABLE MATCH . LLAVE_I cases LLAVE_D

    LLAVE_I         shift and go to state 70


state 45

    (151) varparen -> PAR_I . valores PAR_D
    (152) varparen -> PAR_I . PAR_D
    (175) valores -> . valor
    (176) valores -> . valor COMA valores
    (106) valor -> . STRING
    (107) valor -> . CHAR
    (108) valor -> . VARIABLE
    (109) valor -> . numeros
    (110) valor -> . booleanos
    (111) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (112) valor -> . VARIABLE PAR_I INT PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    PAR_D           shift and go to state 72
    STRING          shift and go to state 74
    CHAR            shift and go to state 75
    VARIABLE        shift and go to state 76
    INT             shift and go to state 79
    LONG            shift and go to state 80
    FLOAT           shift and go to state 81
    DOUBLE          shift and go to state 82
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84

    valores                        shift and go to state 71
    valor                          shift and go to state 73
    numeros                        shift and go to state 77
    booleanos                      shift and go to state 78
    startsWith                     shift and go to state 85

state 46

    (2) inicio -> IMPORT io . inicio
    (1) inicio -> . OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D
    (2) inicio -> . IMPORT io inicio
    (3) inicio -> . cuerpo
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . startsWith
    (15) cuerpo -> . funcion cuerpo
    (16) cuerpo -> . asignacion cuerpo
    (17) cuerpo -> . while cuerpo
    (18) cuerpo -> . for cuerpo
    (19) cuerpo -> . if cuerpo
    (20) cuerpo -> . match cuerpo
    (21) cuerpo -> . startsWith cuerpo
    (120) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (134) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (135) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (136) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (137) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (138) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    OBJECT          shift and go to state 2
    IMPORT          shift and go to state 5
    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    inicio                         shift and go to state 86
    cuerpo                         shift and go to state 4
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    for                            shift and go to state 12
    match                          shift and go to state 13
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41

state 47

    (4) io -> VARIABLE . PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE

    PUNTO           shift and go to state 87


state 48

    (15) cuerpo -> funcion cuerpo .

    $end            reduce using rule 15 (cuerpo -> funcion cuerpo .)
    LLAVE_D         reduce using rule 15 (cuerpo -> funcion cuerpo .)


state 49

    (16) cuerpo -> asignacion cuerpo .

    $end            reduce using rule 16 (cuerpo -> asignacion cuerpo .)
    LLAVE_D         reduce using rule 16 (cuerpo -> asignacion cuerpo .)


state 50

    (17) cuerpo -> while cuerpo .

    $end            reduce using rule 17 (cuerpo -> while cuerpo .)
    LLAVE_D         reduce using rule 17 (cuerpo -> while cuerpo .)


state 51

    (18) cuerpo -> for cuerpo .

    $end            reduce using rule 18 (cuerpo -> for cuerpo .)
    LLAVE_D         reduce using rule 18 (cuerpo -> for cuerpo .)


state 52

    (20) cuerpo -> match cuerpo .

    $end            reduce using rule 20 (cuerpo -> match cuerpo .)
    LLAVE_D         reduce using rule 20 (cuerpo -> match cuerpo .)


state 53

    (19) cuerpo -> if cuerpo .

    $end            reduce using rule 19 (cuerpo -> if cuerpo .)
    LLAVE_D         reduce using rule 19 (cuerpo -> if cuerpo .)


state 54

    (227) if -> if elseif .
    (232) else -> elseif . else
    (231) else -> . ELSE LLAVE_I contenido LLAVE_D
    (232) else -> . elseif else
    (229) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (230) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

  ! shift/reduce conflict for ELSE resolved as shift
    DEF             reduce using rule 227 (if -> if elseif .)
    VARIABLE        reduce using rule 227 (if -> if elseif .)
    PRINTLN         reduce using rule 227 (if -> if elseif .)
    PRINT           reduce using rule 227 (if -> if elseif .)
    READLINE        reduce using rule 227 (if -> if elseif .)
    VAR             reduce using rule 227 (if -> if elseif .)
    VAL             reduce using rule 227 (if -> if elseif .)
    WHILE           reduce using rule 227 (if -> if elseif .)
    FOR             reduce using rule 227 (if -> if elseif .)
    IF              reduce using rule 227 (if -> if elseif .)
    STRING          reduce using rule 227 (if -> if elseif .)
    $end            reduce using rule 227 (if -> if elseif .)
    LLAVE_D         reduce using rule 227 (if -> if elseif .)
    INT             reduce using rule 227 (if -> if elseif .)
    DOUBLE          reduce using rule 227 (if -> if elseif .)
    LONG            reduce using rule 227 (if -> if elseif .)
    FLOAT           reduce using rule 227 (if -> if elseif .)
    CHAR            reduce using rule 227 (if -> if elseif .)
    RETURN          reduce using rule 227 (if -> if elseif .)
    ELSE            shift and go to state 90

  ! ELSE            [ reduce using rule 227 (if -> if elseif .) ]

    elseif                         shift and go to state 88
    else                           shift and go to state 89

state 55

    (228) if -> if else .

    ELSE            reduce using rule 228 (if -> if else .)
    DEF             reduce using rule 228 (if -> if else .)
    VARIABLE        reduce using rule 228 (if -> if else .)
    PRINTLN         reduce using rule 228 (if -> if else .)
    PRINT           reduce using rule 228 (if -> if else .)
    READLINE        reduce using rule 228 (if -> if else .)
    VAR             reduce using rule 228 (if -> if else .)
    VAL             reduce using rule 228 (if -> if else .)
    WHILE           reduce using rule 228 (if -> if else .)
    FOR             reduce using rule 228 (if -> if else .)
    IF              reduce using rule 228 (if -> if else .)
    STRING          reduce using rule 228 (if -> if else .)
    $end            reduce using rule 228 (if -> if else .)
    LLAVE_D         reduce using rule 228 (if -> if else .)
    INT             reduce using rule 228 (if -> if else .)
    DOUBLE          reduce using rule 228 (if -> if else .)
    LONG            reduce using rule 228 (if -> if else .)
    FLOAT           reduce using rule 228 (if -> if else .)
    CHAR            reduce using rule 228 (if -> if else .)
    RETURN          reduce using rule 228 (if -> if else .)


state 56

    (229) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (230) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (231) else -> ELSE . LLAVE_I contenido LLAVE_D

    IF              shift and go to state 91
    LLAVE_I         shift and go to state 92


state 57

    (21) cuerpo -> startsWith cuerpo .

    $end            reduce using rule 21 (cuerpo -> startsWith cuerpo .)
    LLAVE_D         reduce using rule 21 (cuerpo -> startsWith cuerpo .)


state 58

    (120) funcion -> DEF VARIABLE . parametro IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> DEF VARIABLE . parametro LLAVE_I contenido LLAVE_D
    (128) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (132) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (133) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (134) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (135) funcion -> DEF VARIABLE . parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (136) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (137) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (138) funcion -> DEF VARIABLE . parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (124) parametro -> . parametros
    (125) parametro -> . PAR_I PAR_D
    (126) parametros -> . PAR_I declaracion PAR_D
    (127) parametros -> . PAR_I declaracion PAR_D parametros

    PAR_I           shift and go to state 95

    parametro                      shift and go to state 93
    parametros                     shift and go to state 94

state 59

    (145) impresion -> PRINTLN PAR_I . valorI PAR_D
    (147) valorI -> . valor MAS valorI
    (148) valorI -> . valor
    (106) valor -> . STRING
    (107) valor -> . CHAR
    (108) valor -> . VARIABLE
    (109) valor -> . numeros
    (110) valor -> . booleanos
    (111) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (112) valor -> . VARIABLE PAR_I INT PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 74
    CHAR            shift and go to state 75
    VARIABLE        shift and go to state 76
    INT             shift and go to state 79
    LONG            shift and go to state 80
    FLOAT           shift and go to state 81
    DOUBLE          shift and go to state 82
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84

    valorI                         shift and go to state 96
    valor                          shift and go to state 97
    numeros                        shift and go to state 77
    booleanos                      shift and go to state 78
    startsWith                     shift and go to state 85

state 60

    (146) impresion -> PRINT PAR_I . valorI PAR_D
    (147) valorI -> . valor MAS valorI
    (148) valorI -> . valor
    (106) valor -> . STRING
    (107) valor -> . CHAR
    (108) valor -> . VARIABLE
    (109) valor -> . numeros
    (110) valor -> . booleanos
    (111) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (112) valor -> . VARIABLE PAR_I INT PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 74
    CHAR            shift and go to state 75
    VARIABLE        shift and go to state 76
    INT             shift and go to state 79
    LONG            shift and go to state 80
    FLOAT           shift and go to state 81
    DOUBLE          shift and go to state 82
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84

    valorI                         shift and go to state 98
    valor                          shift and go to state 97
    numeros                        shift and go to state 77
    booleanos                      shift and go to state 78
    startsWith                     shift and go to state 85

state 61

    (149) entrada -> READLINE PAR_I . PAR_D

    PAR_D           shift and go to state 99


state 62

    (49) asignacion -> VAR VARIABLE . IGUAL VARIABLE
    (51) asignacion -> VAR VARIABLE . IGUAL aritmetica
    (53) asignacion -> VAR VARIABLE . IGUAL returnfun
    (178) asignacion -> VAR VARIABLE . IGUAL tuple
    (320) asignacion -> VAR VARIABLE . DOBLE_PUNTO dectupla
    (64) asignacionLong -> VAR VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> VAR VARIABLE . IGUAL longvalues
    (349) asignacionLong -> VAR VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> VAR VARIABLE . DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (342) asignacionInt -> VAR VARIABLE . IGUAL intvalues
    (343) asignacionInt -> VAR VARIABLE . DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> VAR VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> VAR VARIABLE . IGUAL floatvalues
    (356) asignacionFloat -> VAR VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (362) asignacionDouble -> VAR VARIABLE . IGUAL doublevalues
    (363) asignacionDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> VAR VARIABLE . IGUAL STRING
    (75) asignacionString -> VAR VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> VAR VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (81) asignacionChar -> VAR VARIABLE . IGUAL CHAR
    (82) asignacionChar -> VAR VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> VAR VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> VAR VARIABLE . IGUAL booleanos
    (88) asignacionBoolean -> VAR VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> VAR VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> VAR VARIABLE . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (172) list -> VAR VARIABLE . IGUAL LISTCLASS PAR_I valores PAR_D
    (318) asignacionSumInt -> VAR VARIABLE . DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> VAR VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> VAR VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> VAR VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (295) listChar -> VAR VARIABLE . DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (293) listString -> VAR VARIABLE . DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    IGUAL           shift and go to state 100
    DOBLE_PUNTO     shift and go to state 101


state 63

    (50) asignacion -> VAL VARIABLE . IGUAL VARIABLE
    (52) asignacion -> VAL VARIABLE . IGUAL aritmetica
    (54) asignacion -> VAL VARIABLE . IGUAL returnfun
    (179) asignacion -> VAL VARIABLE . IGUAL tuple
    (321) asignacion -> VAL VARIABLE . DOBLE_PUNTO dectupla
    (65) asignacionLong -> VAL VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (350) asignacionLong -> VAL VARIABLE . IGUAL longvalues
    (351) asignacionLong -> VAL VARIABLE . DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (67) asignacionInt -> VAL VARIABLE . DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (344) asignacionInt -> VAL VARIABLE . IGUAL intvalues
    (345) asignacionInt -> VAL VARIABLE . DOBLE_PUNTO INTCLASS IGUAL intvalues
    (70) asignacionFloat -> VAL VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (357) asignacionFloat -> VAL VARIABLE . IGUAL floatvalues
    (358) asignacionFloat -> VAL VARIABLE . DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (72) asignacionDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (364) asignacionDouble -> VAL VARIABLE . IGUAL doublevalues
    (365) asignacionDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (76) asignacionString -> VAL VARIABLE . IGUAL STRING
    (77) asignacionString -> VAL VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (79) asignacionString -> VAL VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (83) asignacionChar -> VAL VARIABLE . IGUAL CHAR
    (84) asignacionChar -> VAL VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (86) asignacionChar -> VAL VARIABLE . DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (89) asignacionBoolean -> VAL VARIABLE . IGUAL booleanos
    (90) asignacionBoolean -> VAL VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (92) asignacionBoolean -> VAL VARIABLE . DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (167) array -> VAL VARIABLE . IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> VAL VARIABLE . DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (171) list -> VAL VARIABLE . IGUAL LISTCLASS PAR_I valores PAR_D
    (319) asignacionSumInt -> VAL VARIABLE . DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (313) asignacionSumDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (315) asignacionSumDouble -> VAL VARIABLE . DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (317) asignacionSumString -> VAL VARIABLE . DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (294) listChar -> VAL VARIABLE . DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> VAL VARIABLE . DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    IGUAL           shift and go to state 102
    DOBLE_PUNTO     shift and go to state 103


state 64

    (180) while -> WHILE PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (233) condicional -> . valorC logicos condicional
    (234) condicional -> . valorC
    (235) valorC -> . VARIABLE
    (236) valorC -> . booleanos
    (237) valorC -> . relacional
    (238) valorC -> . NOT VARIABLE
    (239) valorC -> . NOT booleanos
    (240) valorC -> . NOT relacional
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (244) relacional -> . numeros comparacion numeros
    (245) relacional -> . aritmetica comparacion aritmetica
    (246) relacional -> . aritmetica comparacion numeros
    (247) relacional -> . numeros comparacion aritmetica
    (248) relacional -> . booleanos comparacion booleanos
    (249) relacional -> . STRING comparacion STRING
    (250) relacional -> . CHAR comparacion CHAR
    (251) relacional -> . VARIABLE comparacion numeros
    (252) relacional -> . numeros comparacion VARIABLE
    (253) relacional -> . VARIABLE comparacion booleanos
    (254) relacional -> . booleanos comparacion VARIABLE
    (255) relacional -> . VARIABLE comparacion STRING
    (256) relacional -> . STRING comparacion VARIABLE
    (257) relacional -> . VARIABLE comparacion CHAR
    (258) relacional -> . CHAR comparacion VARIABLE
    (259) relacional -> . VARIABLE comparacion VARIABLE
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VARIABLE        shift and go to state 106
    NOT             shift and go to state 109
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84
    STRING          shift and go to state 112
    CHAR            shift and go to state 113
    INT             shift and go to state 114
    LONG            shift and go to state 115
    FLOAT           shift and go to state 116
    DOUBLE          shift and go to state 117

    condicional                    shift and go to state 104
    valorC                         shift and go to state 105
    booleanos                      shift and go to state 107
    relacional                     shift and go to state 108
    startsWith                     shift and go to state 85
    numeros                        shift and go to state 110
    aritmetica                     shift and go to state 111
    suma                           shift and go to state 118
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 65

    (181) for -> FOR PAR_I . VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> FOR PAR_I . VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> FOR PAR_I . VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> FOR PAR_I . VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> FOR PAR_I . VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> FOR PAR_I . VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VAR             shift and go to state 123
    VARIABLE        shift and go to state 124


state 66

    (226) if -> IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (233) condicional -> . valorC logicos condicional
    (234) condicional -> . valorC
    (235) valorC -> . VARIABLE
    (236) valorC -> . booleanos
    (237) valorC -> . relacional
    (238) valorC -> . NOT VARIABLE
    (239) valorC -> . NOT booleanos
    (240) valorC -> . NOT relacional
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (244) relacional -> . numeros comparacion numeros
    (245) relacional -> . aritmetica comparacion aritmetica
    (246) relacional -> . aritmetica comparacion numeros
    (247) relacional -> . numeros comparacion aritmetica
    (248) relacional -> . booleanos comparacion booleanos
    (249) relacional -> . STRING comparacion STRING
    (250) relacional -> . CHAR comparacion CHAR
    (251) relacional -> . VARIABLE comparacion numeros
    (252) relacional -> . numeros comparacion VARIABLE
    (253) relacional -> . VARIABLE comparacion booleanos
    (254) relacional -> . booleanos comparacion VARIABLE
    (255) relacional -> . VARIABLE comparacion STRING
    (256) relacional -> . STRING comparacion VARIABLE
    (257) relacional -> . VARIABLE comparacion CHAR
    (258) relacional -> . CHAR comparacion VARIABLE
    (259) relacional -> . VARIABLE comparacion VARIABLE
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VARIABLE        shift and go to state 106
    NOT             shift and go to state 109
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84
    STRING          shift and go to state 112
    CHAR            shift and go to state 113
    INT             shift and go to state 114
    LONG            shift and go to state 115
    FLOAT           shift and go to state 116
    DOUBLE          shift and go to state 117

    condicional                    shift and go to state 125
    valorC                         shift and go to state 105
    booleanos                      shift and go to state 107
    relacional                     shift and go to state 108
    startsWith                     shift and go to state 85
    numeros                        shift and go to state 110
    aritmetica                     shift and go to state 111
    suma                           shift and go to state 118
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 67

    (290) startsWith -> STRING PUNTO . STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> STRING PUNTO . STARTSWITH PAR_I STRING COMA INT PAR_D

    STARTSWITH      shift and go to state 126


state 68

    (1) inicio -> OBJECT VARIABLE LLAVE_I . cuerpo LLAVE_D
    (5) cuerpo -> . funcion
    (6) cuerpo -> . funcall
    (7) cuerpo -> . impresion
    (8) cuerpo -> . entrada
    (9) cuerpo -> . asignacion
    (10) cuerpo -> . while
    (11) cuerpo -> . for
    (12) cuerpo -> . match
    (13) cuerpo -> . if
    (14) cuerpo -> . startsWith
    (15) cuerpo -> . funcion cuerpo
    (16) cuerpo -> . asignacion cuerpo
    (17) cuerpo -> . while cuerpo
    (18) cuerpo -> . for cuerpo
    (19) cuerpo -> . if cuerpo
    (20) cuerpo -> . match cuerpo
    (21) cuerpo -> . startsWith cuerpo
    (120) funcion -> . DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> . DEF VARIABLE parametro LLAVE_I contenido LLAVE_D
    (128) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (132) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (133) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (134) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (135) funcion -> . DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (136) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (137) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (138) funcion -> . DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    DEF             shift and go to state 16
    VARIABLE        shift and go to state 3
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    STRING          shift and go to state 34

    cuerpo                         shift and go to state 127
    funcion                        shift and go to state 6
    funcall                        shift and go to state 7
    impresion                      shift and go to state 8
    entrada                        shift and go to state 9
    asignacion                     shift and go to state 10
    while                          shift and go to state 11
    for                            shift and go to state 12
    match                          shift and go to state 13
    if                             shift and go to state 14
    startsWith                     shift and go to state 15
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41

state 69

    (153) varparen -> varparen PAR_I . valores PAR_D
    (154) varparen -> varparen PAR_I . PAR_D
    (175) valores -> . valor
    (176) valores -> . valor COMA valores
    (106) valor -> . STRING
    (107) valor -> . CHAR
    (108) valor -> . VARIABLE
    (109) valor -> . numeros
    (110) valor -> . booleanos
    (111) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (112) valor -> . VARIABLE PAR_I INT PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    PAR_D           shift and go to state 129
    STRING          shift and go to state 74
    CHAR            shift and go to state 75
    VARIABLE        shift and go to state 76
    INT             shift and go to state 79
    LONG            shift and go to state 80
    FLOAT           shift and go to state 81
    DOUBLE          shift and go to state 82
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84

    valores                        shift and go to state 128
    valor                          shift and go to state 73
    numeros                        shift and go to state 77
    booleanos                      shift and go to state 78
    startsWith                     shift and go to state 85

state 70

    (187) match -> VARIABLE MATCH LLAVE_I . cases LLAVE_D
    (188) cases -> . casesInt
    (189) cases -> . casesLgn
    (190) cases -> . casesFlt
    (191) cases -> . casesDob
    (192) cases -> . casesStr
    (193) cases -> . casesChar
    (194) cases -> . casesBool
    (196) casesInt -> . caseInt
    (197) casesInt -> . caseInt casesInt
    (198) casesInt -> . caseInt defcase
    (200) casesLgn -> . caseLgn
    (201) casesLgn -> . caseLgn casesLgn
    (202) casesLgn -> . caseLgn defcase
    (204) casesFlt -> . caseFlt
    (205) casesFlt -> . caseFlt casesFlt
    (206) casesFlt -> . caseFlt defcase
    (208) casesDob -> . caseDob
    (209) casesDob -> . caseDob casesDob
    (210) casesDob -> . caseDob defcase
    (212) casesStr -> . caseStr
    (213) casesStr -> . caseStr casesStr
    (214) casesStr -> . caseStr defcase
    (216) casesChar -> . caseChar
    (217) casesChar -> . caseChar casesChar
    (218) casesChar -> . caseChar defcase
    (220) casesBool -> . caseBool
    (221) casesBool -> . caseBool casesBool
    (222) casesBool -> . caseBool defcase
    (195) caseInt -> . CASE INT FUNCION_FLECHA codeBlock
    (199) caseLgn -> . CASE LONG FUNCION_FLECHA codeBlock
    (203) caseFlt -> . CASE FLOAT FUNCION_FLECHA codeBlock
    (207) caseDob -> . CASE DOUBLE FUNCION_FLECHA codeBlock
    (211) caseStr -> . CASE STRING FUNCION_FLECHA codeBlock
    (215) caseChar -> . CASE CHAR FUNCION_FLECHA codeBlock
    (219) caseBool -> . CASE booleanos FUNCION_FLECHA codeBlock

    CASE            shift and go to state 145

    cases                          shift and go to state 130
    casesInt                       shift and go to state 131
    casesLgn                       shift and go to state 132
    casesFlt                       shift and go to state 133
    casesDob                       shift and go to state 134
    casesStr                       shift and go to state 135
    casesChar                      shift and go to state 136
    casesBool                      shift and go to state 137
    caseInt                        shift and go to state 138
    caseLgn                        shift and go to state 139
    caseFlt                        shift and go to state 140
    caseDob                        shift and go to state 141
    caseStr                        shift and go to state 142
    caseChar                       shift and go to state 143
    caseBool                       shift and go to state 144

state 71

    (151) varparen -> PAR_I valores . PAR_D

    PAR_D           shift and go to state 146


state 72

    (152) varparen -> PAR_I PAR_D .

    PAR_I           reduce using rule 152 (varparen -> PAR_I PAR_D .)
    $end            reduce using rule 152 (varparen -> PAR_I PAR_D .)
    LLAVE_D         reduce using rule 152 (varparen -> PAR_I PAR_D .)
    VAR             reduce using rule 152 (varparen -> PAR_I PAR_D .)
    VAL             reduce using rule 152 (varparen -> PAR_I PAR_D .)
    VARIABLE        reduce using rule 152 (varparen -> PAR_I PAR_D .)
    PRINTLN         reduce using rule 152 (varparen -> PAR_I PAR_D .)
    PRINT           reduce using rule 152 (varparen -> PAR_I PAR_D .)
    READLINE        reduce using rule 152 (varparen -> PAR_I PAR_D .)
    WHILE           reduce using rule 152 (varparen -> PAR_I PAR_D .)
    FOR             reduce using rule 152 (varparen -> PAR_I PAR_D .)
    IF              reduce using rule 152 (varparen -> PAR_I PAR_D .)
    INT             reduce using rule 152 (varparen -> PAR_I PAR_D .)
    DOUBLE          reduce using rule 152 (varparen -> PAR_I PAR_D .)
    LONG            reduce using rule 152 (varparen -> PAR_I PAR_D .)
    FLOAT           reduce using rule 152 (varparen -> PAR_I PAR_D .)
    STRING          reduce using rule 152 (varparen -> PAR_I PAR_D .)
    CHAR            reduce using rule 152 (varparen -> PAR_I PAR_D .)
    RETURN          reduce using rule 152 (varparen -> PAR_I PAR_D .)
    PUNTO           reduce using rule 152 (varparen -> PAR_I PAR_D .)
    DEF             reduce using rule 152 (varparen -> PAR_I PAR_D .)
    CASE            reduce using rule 152 (varparen -> PAR_I PAR_D .)


state 73

    (175) valores -> valor .
    (176) valores -> valor . COMA valores

    PAR_D           reduce using rule 175 (valores -> valor .)
    COMA            shift and go to state 147


state 74

    (106) valor -> STRING .
    (290) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    COMA            reduce using rule 106 (valor -> STRING .)
    PAR_D           reduce using rule 106 (valor -> STRING .)
    MAS             reduce using rule 106 (valor -> STRING .)
    VAR             reduce using rule 106 (valor -> STRING .)
    VAL             reduce using rule 106 (valor -> STRING .)
    VARIABLE        reduce using rule 106 (valor -> STRING .)
    PRINTLN         reduce using rule 106 (valor -> STRING .)
    PRINT           reduce using rule 106 (valor -> STRING .)
    READLINE        reduce using rule 106 (valor -> STRING .)
    WHILE           reduce using rule 106 (valor -> STRING .)
    FOR             reduce using rule 106 (valor -> STRING .)
    IF              reduce using rule 106 (valor -> STRING .)
    INT             reduce using rule 106 (valor -> STRING .)
    DOUBLE          reduce using rule 106 (valor -> STRING .)
    LONG            reduce using rule 106 (valor -> STRING .)
    FLOAT           reduce using rule 106 (valor -> STRING .)
    STRING          reduce using rule 106 (valor -> STRING .)
    CHAR            reduce using rule 106 (valor -> STRING .)
    LLAVE_D         reduce using rule 106 (valor -> STRING .)
    RETURN          reduce using rule 106 (valor -> STRING .)
    CASE            reduce using rule 106 (valor -> STRING .)
    PUNTO           shift and go to state 67


state 75

    (107) valor -> CHAR .

    COMA            reduce using rule 107 (valor -> CHAR .)
    PAR_D           reduce using rule 107 (valor -> CHAR .)
    MAS             reduce using rule 107 (valor -> CHAR .)
    VAR             reduce using rule 107 (valor -> CHAR .)
    VAL             reduce using rule 107 (valor -> CHAR .)
    VARIABLE        reduce using rule 107 (valor -> CHAR .)
    PRINTLN         reduce using rule 107 (valor -> CHAR .)
    PRINT           reduce using rule 107 (valor -> CHAR .)
    READLINE        reduce using rule 107 (valor -> CHAR .)
    WHILE           reduce using rule 107 (valor -> CHAR .)
    FOR             reduce using rule 107 (valor -> CHAR .)
    IF              reduce using rule 107 (valor -> CHAR .)
    INT             reduce using rule 107 (valor -> CHAR .)
    DOUBLE          reduce using rule 107 (valor -> CHAR .)
    LONG            reduce using rule 107 (valor -> CHAR .)
    FLOAT           reduce using rule 107 (valor -> CHAR .)
    STRING          reduce using rule 107 (valor -> CHAR .)
    CHAR            reduce using rule 107 (valor -> CHAR .)
    LLAVE_D         reduce using rule 107 (valor -> CHAR .)
    RETURN          reduce using rule 107 (valor -> CHAR .)
    CASE            reduce using rule 107 (valor -> CHAR .)


state 76

    (108) valor -> VARIABLE .
    (111) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (112) valor -> VARIABLE . PAR_I INT PAR_D

    COMA            reduce using rule 108 (valor -> VARIABLE .)
    PAR_D           reduce using rule 108 (valor -> VARIABLE .)
    MAS             reduce using rule 108 (valor -> VARIABLE .)
    VAR             reduce using rule 108 (valor -> VARIABLE .)
    VAL             reduce using rule 108 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 108 (valor -> VARIABLE .)
    PRINTLN         reduce using rule 108 (valor -> VARIABLE .)
    PRINT           reduce using rule 108 (valor -> VARIABLE .)
    READLINE        reduce using rule 108 (valor -> VARIABLE .)
    WHILE           reduce using rule 108 (valor -> VARIABLE .)
    FOR             reduce using rule 108 (valor -> VARIABLE .)
    IF              reduce using rule 108 (valor -> VARIABLE .)
    INT             reduce using rule 108 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 108 (valor -> VARIABLE .)
    LONG            reduce using rule 108 (valor -> VARIABLE .)
    FLOAT           reduce using rule 108 (valor -> VARIABLE .)
    STRING          reduce using rule 108 (valor -> VARIABLE .)
    CHAR            reduce using rule 108 (valor -> VARIABLE .)
    LLAVE_D         reduce using rule 108 (valor -> VARIABLE .)
    RETURN          reduce using rule 108 (valor -> VARIABLE .)
    CASE            reduce using rule 108 (valor -> VARIABLE .)
    PAR_I           shift and go to state 148


state 77

    (109) valor -> numeros .

    COMA            reduce using rule 109 (valor -> numeros .)
    PAR_D           reduce using rule 109 (valor -> numeros .)
    MAS             reduce using rule 109 (valor -> numeros .)
    VAR             reduce using rule 109 (valor -> numeros .)
    VAL             reduce using rule 109 (valor -> numeros .)
    VARIABLE        reduce using rule 109 (valor -> numeros .)
    PRINTLN         reduce using rule 109 (valor -> numeros .)
    PRINT           reduce using rule 109 (valor -> numeros .)
    READLINE        reduce using rule 109 (valor -> numeros .)
    WHILE           reduce using rule 109 (valor -> numeros .)
    FOR             reduce using rule 109 (valor -> numeros .)
    IF              reduce using rule 109 (valor -> numeros .)
    INT             reduce using rule 109 (valor -> numeros .)
    DOUBLE          reduce using rule 109 (valor -> numeros .)
    LONG            reduce using rule 109 (valor -> numeros .)
    FLOAT           reduce using rule 109 (valor -> numeros .)
    STRING          reduce using rule 109 (valor -> numeros .)
    CHAR            reduce using rule 109 (valor -> numeros .)
    LLAVE_D         reduce using rule 109 (valor -> numeros .)
    RETURN          reduce using rule 109 (valor -> numeros .)
    CASE            reduce using rule 109 (valor -> numeros .)


state 78

    (110) valor -> booleanos .

    COMA            reduce using rule 110 (valor -> booleanos .)
    PAR_D           reduce using rule 110 (valor -> booleanos .)
    MAS             reduce using rule 110 (valor -> booleanos .)
    VAR             reduce using rule 110 (valor -> booleanos .)
    VAL             reduce using rule 110 (valor -> booleanos .)
    VARIABLE        reduce using rule 110 (valor -> booleanos .)
    PRINTLN         reduce using rule 110 (valor -> booleanos .)
    PRINT           reduce using rule 110 (valor -> booleanos .)
    READLINE        reduce using rule 110 (valor -> booleanos .)
    WHILE           reduce using rule 110 (valor -> booleanos .)
    FOR             reduce using rule 110 (valor -> booleanos .)
    IF              reduce using rule 110 (valor -> booleanos .)
    INT             reduce using rule 110 (valor -> booleanos .)
    DOUBLE          reduce using rule 110 (valor -> booleanos .)
    LONG            reduce using rule 110 (valor -> booleanos .)
    FLOAT           reduce using rule 110 (valor -> booleanos .)
    STRING          reduce using rule 110 (valor -> booleanos .)
    CHAR            reduce using rule 110 (valor -> booleanos .)
    LLAVE_D         reduce using rule 110 (valor -> booleanos .)
    RETURN          reduce using rule 110 (valor -> booleanos .)
    CASE            reduce using rule 110 (valor -> booleanos .)


state 79

    (116) numeros -> INT .

    COMA            reduce using rule 116 (numeros -> INT .)
    PAR_D           reduce using rule 116 (numeros -> INT .)
    MAS             reduce using rule 116 (numeros -> INT .)
    AND             reduce using rule 116 (numeros -> INT .)
    OR              reduce using rule 116 (numeros -> INT .)
    NOT             reduce using rule 116 (numeros -> INT .)
    IGUAL_COMPARACION reduce using rule 116 (numeros -> INT .)
    DIFERENTE       reduce using rule 116 (numeros -> INT .)
    MAYOR           reduce using rule 116 (numeros -> INT .)
    MENOR           reduce using rule 116 (numeros -> INT .)
    MENOS           reduce using rule 116 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 116 (numeros -> INT .)
    DIVISION        reduce using rule 116 (numeros -> INT .)
    MOD             reduce using rule 116 (numeros -> INT .)
    VAR             reduce using rule 116 (numeros -> INT .)
    VAL             reduce using rule 116 (numeros -> INT .)
    VARIABLE        reduce using rule 116 (numeros -> INT .)
    PRINTLN         reduce using rule 116 (numeros -> INT .)
    PRINT           reduce using rule 116 (numeros -> INT .)
    READLINE        reduce using rule 116 (numeros -> INT .)
    WHILE           reduce using rule 116 (numeros -> INT .)
    FOR             reduce using rule 116 (numeros -> INT .)
    IF              reduce using rule 116 (numeros -> INT .)
    INT             reduce using rule 116 (numeros -> INT .)
    DOUBLE          reduce using rule 116 (numeros -> INT .)
    LONG            reduce using rule 116 (numeros -> INT .)
    FLOAT           reduce using rule 116 (numeros -> INT .)
    STRING          reduce using rule 116 (numeros -> INT .)
    CHAR            reduce using rule 116 (numeros -> INT .)
    LLAVE_D         reduce using rule 116 (numeros -> INT .)
    DEF             reduce using rule 116 (numeros -> INT .)
    $end            reduce using rule 116 (numeros -> INT .)
    RETURN          reduce using rule 116 (numeros -> INT .)
    CASE            reduce using rule 116 (numeros -> INT .)


state 80

    (117) numeros -> LONG .

    COMA            reduce using rule 117 (numeros -> LONG .)
    PAR_D           reduce using rule 117 (numeros -> LONG .)
    MAS             reduce using rule 117 (numeros -> LONG .)
    AND             reduce using rule 117 (numeros -> LONG .)
    OR              reduce using rule 117 (numeros -> LONG .)
    NOT             reduce using rule 117 (numeros -> LONG .)
    IGUAL_COMPARACION reduce using rule 117 (numeros -> LONG .)
    DIFERENTE       reduce using rule 117 (numeros -> LONG .)
    MAYOR           reduce using rule 117 (numeros -> LONG .)
    MENOR           reduce using rule 117 (numeros -> LONG .)
    MENOS           reduce using rule 117 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 117 (numeros -> LONG .)
    DIVISION        reduce using rule 117 (numeros -> LONG .)
    MOD             reduce using rule 117 (numeros -> LONG .)
    VAR             reduce using rule 117 (numeros -> LONG .)
    VAL             reduce using rule 117 (numeros -> LONG .)
    VARIABLE        reduce using rule 117 (numeros -> LONG .)
    PRINTLN         reduce using rule 117 (numeros -> LONG .)
    PRINT           reduce using rule 117 (numeros -> LONG .)
    READLINE        reduce using rule 117 (numeros -> LONG .)
    WHILE           reduce using rule 117 (numeros -> LONG .)
    FOR             reduce using rule 117 (numeros -> LONG .)
    IF              reduce using rule 117 (numeros -> LONG .)
    INT             reduce using rule 117 (numeros -> LONG .)
    DOUBLE          reduce using rule 117 (numeros -> LONG .)
    LONG            reduce using rule 117 (numeros -> LONG .)
    FLOAT           reduce using rule 117 (numeros -> LONG .)
    STRING          reduce using rule 117 (numeros -> LONG .)
    CHAR            reduce using rule 117 (numeros -> LONG .)
    LLAVE_D         reduce using rule 117 (numeros -> LONG .)
    DEF             reduce using rule 117 (numeros -> LONG .)
    $end            reduce using rule 117 (numeros -> LONG .)
    RETURN          reduce using rule 117 (numeros -> LONG .)
    CASE            reduce using rule 117 (numeros -> LONG .)


state 81

    (118) numeros -> FLOAT .

    COMA            reduce using rule 118 (numeros -> FLOAT .)
    PAR_D           reduce using rule 118 (numeros -> FLOAT .)
    MAS             reduce using rule 118 (numeros -> FLOAT .)
    AND             reduce using rule 118 (numeros -> FLOAT .)
    OR              reduce using rule 118 (numeros -> FLOAT .)
    NOT             reduce using rule 118 (numeros -> FLOAT .)
    IGUAL_COMPARACION reduce using rule 118 (numeros -> FLOAT .)
    DIFERENTE       reduce using rule 118 (numeros -> FLOAT .)
    MAYOR           reduce using rule 118 (numeros -> FLOAT .)
    MENOR           reduce using rule 118 (numeros -> FLOAT .)
    MENOS           reduce using rule 118 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 118 (numeros -> FLOAT .)
    DIVISION        reduce using rule 118 (numeros -> FLOAT .)
    MOD             reduce using rule 118 (numeros -> FLOAT .)
    VAR             reduce using rule 118 (numeros -> FLOAT .)
    VAL             reduce using rule 118 (numeros -> FLOAT .)
    VARIABLE        reduce using rule 118 (numeros -> FLOAT .)
    PRINTLN         reduce using rule 118 (numeros -> FLOAT .)
    PRINT           reduce using rule 118 (numeros -> FLOAT .)
    READLINE        reduce using rule 118 (numeros -> FLOAT .)
    WHILE           reduce using rule 118 (numeros -> FLOAT .)
    FOR             reduce using rule 118 (numeros -> FLOAT .)
    IF              reduce using rule 118 (numeros -> FLOAT .)
    INT             reduce using rule 118 (numeros -> FLOAT .)
    DOUBLE          reduce using rule 118 (numeros -> FLOAT .)
    LONG            reduce using rule 118 (numeros -> FLOAT .)
    FLOAT           reduce using rule 118 (numeros -> FLOAT .)
    STRING          reduce using rule 118 (numeros -> FLOAT .)
    CHAR            reduce using rule 118 (numeros -> FLOAT .)
    LLAVE_D         reduce using rule 118 (numeros -> FLOAT .)
    DEF             reduce using rule 118 (numeros -> FLOAT .)
    $end            reduce using rule 118 (numeros -> FLOAT .)
    RETURN          reduce using rule 118 (numeros -> FLOAT .)
    CASE            reduce using rule 118 (numeros -> FLOAT .)


state 82

    (119) numeros -> DOUBLE .

    COMA            reduce using rule 119 (numeros -> DOUBLE .)
    PAR_D           reduce using rule 119 (numeros -> DOUBLE .)
    MAS             reduce using rule 119 (numeros -> DOUBLE .)
    AND             reduce using rule 119 (numeros -> DOUBLE .)
    OR              reduce using rule 119 (numeros -> DOUBLE .)
    NOT             reduce using rule 119 (numeros -> DOUBLE .)
    IGUAL_COMPARACION reduce using rule 119 (numeros -> DOUBLE .)
    DIFERENTE       reduce using rule 119 (numeros -> DOUBLE .)
    MAYOR           reduce using rule 119 (numeros -> DOUBLE .)
    MENOR           reduce using rule 119 (numeros -> DOUBLE .)
    MENOS           reduce using rule 119 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 119 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 119 (numeros -> DOUBLE .)
    MOD             reduce using rule 119 (numeros -> DOUBLE .)
    VAR             reduce using rule 119 (numeros -> DOUBLE .)
    VAL             reduce using rule 119 (numeros -> DOUBLE .)
    VARIABLE        reduce using rule 119 (numeros -> DOUBLE .)
    PRINTLN         reduce using rule 119 (numeros -> DOUBLE .)
    PRINT           reduce using rule 119 (numeros -> DOUBLE .)
    READLINE        reduce using rule 119 (numeros -> DOUBLE .)
    WHILE           reduce using rule 119 (numeros -> DOUBLE .)
    FOR             reduce using rule 119 (numeros -> DOUBLE .)
    IF              reduce using rule 119 (numeros -> DOUBLE .)
    INT             reduce using rule 119 (numeros -> DOUBLE .)
    DOUBLE          reduce using rule 119 (numeros -> DOUBLE .)
    LONG            reduce using rule 119 (numeros -> DOUBLE .)
    FLOAT           reduce using rule 119 (numeros -> DOUBLE .)
    STRING          reduce using rule 119 (numeros -> DOUBLE .)
    CHAR            reduce using rule 119 (numeros -> DOUBLE .)
    LLAVE_D         reduce using rule 119 (numeros -> DOUBLE .)
    DEF             reduce using rule 119 (numeros -> DOUBLE .)
    $end            reduce using rule 119 (numeros -> DOUBLE .)
    RETURN          reduce using rule 119 (numeros -> DOUBLE .)
    CASE            reduce using rule 119 (numeros -> DOUBLE .)


state 83

    (113) booleanos -> TRUE .

    COMA            reduce using rule 113 (booleanos -> TRUE .)
    PAR_D           reduce using rule 113 (booleanos -> TRUE .)
    MAS             reduce using rule 113 (booleanos -> TRUE .)
    IGUAL_COMPARACION reduce using rule 113 (booleanos -> TRUE .)
    DIFERENTE       reduce using rule 113 (booleanos -> TRUE .)
    MAYOR           reduce using rule 113 (booleanos -> TRUE .)
    MENOR           reduce using rule 113 (booleanos -> TRUE .)
    AND             reduce using rule 113 (booleanos -> TRUE .)
    OR              reduce using rule 113 (booleanos -> TRUE .)
    NOT             reduce using rule 113 (booleanos -> TRUE .)
    DEF             reduce using rule 113 (booleanos -> TRUE .)
    VARIABLE        reduce using rule 113 (booleanos -> TRUE .)
    PRINTLN         reduce using rule 113 (booleanos -> TRUE .)
    PRINT           reduce using rule 113 (booleanos -> TRUE .)
    READLINE        reduce using rule 113 (booleanos -> TRUE .)
    VAR             reduce using rule 113 (booleanos -> TRUE .)
    VAL             reduce using rule 113 (booleanos -> TRUE .)
    WHILE           reduce using rule 113 (booleanos -> TRUE .)
    FOR             reduce using rule 113 (booleanos -> TRUE .)
    IF              reduce using rule 113 (booleanos -> TRUE .)
    STRING          reduce using rule 113 (booleanos -> TRUE .)
    $end            reduce using rule 113 (booleanos -> TRUE .)
    LLAVE_D         reduce using rule 113 (booleanos -> TRUE .)
    INT             reduce using rule 113 (booleanos -> TRUE .)
    DOUBLE          reduce using rule 113 (booleanos -> TRUE .)
    LONG            reduce using rule 113 (booleanos -> TRUE .)
    FLOAT           reduce using rule 113 (booleanos -> TRUE .)
    CHAR            reduce using rule 113 (booleanos -> TRUE .)
    RETURN          reduce using rule 113 (booleanos -> TRUE .)
    CASE            reduce using rule 113 (booleanos -> TRUE .)
    FUNCION_FLECHA  reduce using rule 113 (booleanos -> TRUE .)


state 84

    (114) booleanos -> FLASE .

    COMA            reduce using rule 114 (booleanos -> FLASE .)
    PAR_D           reduce using rule 114 (booleanos -> FLASE .)
    MAS             reduce using rule 114 (booleanos -> FLASE .)
    IGUAL_COMPARACION reduce using rule 114 (booleanos -> FLASE .)
    DIFERENTE       reduce using rule 114 (booleanos -> FLASE .)
    MAYOR           reduce using rule 114 (booleanos -> FLASE .)
    MENOR           reduce using rule 114 (booleanos -> FLASE .)
    AND             reduce using rule 114 (booleanos -> FLASE .)
    OR              reduce using rule 114 (booleanos -> FLASE .)
    NOT             reduce using rule 114 (booleanos -> FLASE .)
    DEF             reduce using rule 114 (booleanos -> FLASE .)
    VARIABLE        reduce using rule 114 (booleanos -> FLASE .)
    PRINTLN         reduce using rule 114 (booleanos -> FLASE .)
    PRINT           reduce using rule 114 (booleanos -> FLASE .)
    READLINE        reduce using rule 114 (booleanos -> FLASE .)
    VAR             reduce using rule 114 (booleanos -> FLASE .)
    VAL             reduce using rule 114 (booleanos -> FLASE .)
    WHILE           reduce using rule 114 (booleanos -> FLASE .)
    FOR             reduce using rule 114 (booleanos -> FLASE .)
    IF              reduce using rule 114 (booleanos -> FLASE .)
    STRING          reduce using rule 114 (booleanos -> FLASE .)
    $end            reduce using rule 114 (booleanos -> FLASE .)
    LLAVE_D         reduce using rule 114 (booleanos -> FLASE .)
    INT             reduce using rule 114 (booleanos -> FLASE .)
    DOUBLE          reduce using rule 114 (booleanos -> FLASE .)
    LONG            reduce using rule 114 (booleanos -> FLASE .)
    FLOAT           reduce using rule 114 (booleanos -> FLASE .)
    CHAR            reduce using rule 114 (booleanos -> FLASE .)
    RETURN          reduce using rule 114 (booleanos -> FLASE .)
    CASE            reduce using rule 114 (booleanos -> FLASE .)
    FUNCION_FLECHA  reduce using rule 114 (booleanos -> FLASE .)


state 85

    (115) booleanos -> startsWith .

    COMA            reduce using rule 115 (booleanos -> startsWith .)
    PAR_D           reduce using rule 115 (booleanos -> startsWith .)
    MAS             reduce using rule 115 (booleanos -> startsWith .)
    IGUAL_COMPARACION reduce using rule 115 (booleanos -> startsWith .)
    DIFERENTE       reduce using rule 115 (booleanos -> startsWith .)
    MAYOR           reduce using rule 115 (booleanos -> startsWith .)
    MENOR           reduce using rule 115 (booleanos -> startsWith .)
    AND             reduce using rule 115 (booleanos -> startsWith .)
    OR              reduce using rule 115 (booleanos -> startsWith .)
    NOT             reduce using rule 115 (booleanos -> startsWith .)
    DEF             reduce using rule 115 (booleanos -> startsWith .)
    VARIABLE        reduce using rule 115 (booleanos -> startsWith .)
    PRINTLN         reduce using rule 115 (booleanos -> startsWith .)
    PRINT           reduce using rule 115 (booleanos -> startsWith .)
    READLINE        reduce using rule 115 (booleanos -> startsWith .)
    VAR             reduce using rule 115 (booleanos -> startsWith .)
    VAL             reduce using rule 115 (booleanos -> startsWith .)
    WHILE           reduce using rule 115 (booleanos -> startsWith .)
    FOR             reduce using rule 115 (booleanos -> startsWith .)
    IF              reduce using rule 115 (booleanos -> startsWith .)
    STRING          reduce using rule 115 (booleanos -> startsWith .)
    $end            reduce using rule 115 (booleanos -> startsWith .)
    LLAVE_D         reduce using rule 115 (booleanos -> startsWith .)
    INT             reduce using rule 115 (booleanos -> startsWith .)
    DOUBLE          reduce using rule 115 (booleanos -> startsWith .)
    LONG            reduce using rule 115 (booleanos -> startsWith .)
    FLOAT           reduce using rule 115 (booleanos -> startsWith .)
    CHAR            reduce using rule 115 (booleanos -> startsWith .)
    RETURN          reduce using rule 115 (booleanos -> startsWith .)
    CASE            reduce using rule 115 (booleanos -> startsWith .)
    FUNCION_FLECHA  reduce using rule 115 (booleanos -> startsWith .)


state 86

    (2) inicio -> IMPORT io inicio .

    $end            reduce using rule 2 (inicio -> IMPORT io inicio .)


state 87

    (4) io -> VARIABLE PUNTO . VARIABLE PUNTO VARIABLE PUNTO READLINE

    VARIABLE        shift and go to state 149


state 88

    (232) else -> elseif . else
    (231) else -> . ELSE LLAVE_I contenido LLAVE_D
    (232) else -> . elseif else
    (229) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (230) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    ELSE            shift and go to state 90

    elseif                         shift and go to state 88
    else                           shift and go to state 89

state 89

    (232) else -> elseif else .

    ELSE            reduce using rule 232 (else -> elseif else .)
    DEF             reduce using rule 232 (else -> elseif else .)
    VARIABLE        reduce using rule 232 (else -> elseif else .)
    PRINTLN         reduce using rule 232 (else -> elseif else .)
    PRINT           reduce using rule 232 (else -> elseif else .)
    READLINE        reduce using rule 232 (else -> elseif else .)
    VAR             reduce using rule 232 (else -> elseif else .)
    VAL             reduce using rule 232 (else -> elseif else .)
    WHILE           reduce using rule 232 (else -> elseif else .)
    FOR             reduce using rule 232 (else -> elseif else .)
    IF              reduce using rule 232 (else -> elseif else .)
    STRING          reduce using rule 232 (else -> elseif else .)
    $end            reduce using rule 232 (else -> elseif else .)
    LLAVE_D         reduce using rule 232 (else -> elseif else .)
    INT             reduce using rule 232 (else -> elseif else .)
    DOUBLE          reduce using rule 232 (else -> elseif else .)
    LONG            reduce using rule 232 (else -> elseif else .)
    FLOAT           reduce using rule 232 (else -> elseif else .)
    CHAR            reduce using rule 232 (else -> elseif else .)
    RETURN          reduce using rule 232 (else -> elseif else .)


state 90

    (231) else -> ELSE . LLAVE_I contenido LLAVE_D
    (229) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (230) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    LLAVE_I         shift and go to state 92
    IF              shift and go to state 91


state 91

    (229) elseif -> ELSE IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (230) elseif -> ELSE IF . PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    PAR_I           shift and go to state 150


state 92

    (231) else -> ELSE LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    contenido                      shift and go to state 151
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 93

    (120) funcion -> DEF VARIABLE parametro . IGUAL LLAVE_I contenido LLAVE_D
    (121) funcion -> DEF VARIABLE parametro . LLAVE_I contenido LLAVE_D
    (128) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (132) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I RETURN valor LLAVE_D
    (133) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (134) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (135) funcion -> DEF VARIABLE parametro . dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D
    (136) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (137) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (138) funcion -> DEF VARIABLE parametro . dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (139) dectipo -> . DOBLE_PUNTO tipo
    (140) dectipoTupla -> . DOBLE_PUNTO PAR_I tipos PAR_D

    IGUAL           shift and go to state 171
    LLAVE_I         shift and go to state 172
    DOBLE_PUNTO     shift and go to state 175

    dectipo                        shift and go to state 173
    dectipoTupla                   shift and go to state 174

state 94

    (124) parametro -> parametros .

    IGUAL           reduce using rule 124 (parametro -> parametros .)
    LLAVE_I         reduce using rule 124 (parametro -> parametros .)
    DOBLE_PUNTO     reduce using rule 124 (parametro -> parametros .)


state 95

    (125) parametro -> PAR_I . PAR_D
    (126) parametros -> PAR_I . declaracion PAR_D
    (127) parametros -> PAR_I . declaracion PAR_D parametros
    (122) declaracion -> . VARIABLE DOBLE_PUNTO tipo
    (123) declaracion -> . VARIABLE DOBLE_PUNTO tipo IGUAL valor

    PAR_D           shift and go to state 176
    VARIABLE        shift and go to state 178

    declaracion                    shift and go to state 177

state 96

    (145) impresion -> PRINTLN PAR_I valorI . PAR_D

    PAR_D           shift and go to state 179


state 97

    (147) valorI -> valor . MAS valorI
    (148) valorI -> valor .

    MAS             shift and go to state 180
    PAR_D           reduce using rule 148 (valorI -> valor .)


state 98

    (146) impresion -> PRINT PAR_I valorI . PAR_D

    PAR_D           shift and go to state 181


state 99

    (149) entrada -> READLINE PAR_I PAR_D .

    $end            reduce using rule 149 (entrada -> READLINE PAR_I PAR_D .)
    LLAVE_D         reduce using rule 149 (entrada -> READLINE PAR_I PAR_D .)
    VAR             reduce using rule 149 (entrada -> READLINE PAR_I PAR_D .)
    VAL             reduce using rule 149 (entrada -> READLINE PAR_I PAR_D .)
    VARIABLE        reduce using rule 149 (entrada -> READLINE PAR_I PAR_D .)
    PRINTLN         reduce using rule 149 (entrada -> READLINE PAR_I PAR_D .)
    PRINT           reduce using rule 149 (entrada -> READLINE PAR_I PAR_D .)
    READLINE        reduce using rule 149 (entrada -> READLINE PAR_I PAR_D .)
    WHILE           reduce using rule 149 (entrada -> READLINE PAR_I PAR_D .)
    FOR             reduce using rule 149 (entrada -> READLINE PAR_I PAR_D .)
    IF              reduce using rule 149 (entrada -> READLINE PAR_I PAR_D .)
    INT             reduce using rule 149 (entrada -> READLINE PAR_I PAR_D .)
    DOUBLE          reduce using rule 149 (entrada -> READLINE PAR_I PAR_D .)
    LONG            reduce using rule 149 (entrada -> READLINE PAR_I PAR_D .)
    FLOAT           reduce using rule 149 (entrada -> READLINE PAR_I PAR_D .)
    STRING          reduce using rule 149 (entrada -> READLINE PAR_I PAR_D .)
    CHAR            reduce using rule 149 (entrada -> READLINE PAR_I PAR_D .)
    PUNTO           reduce using rule 149 (entrada -> READLINE PAR_I PAR_D .)
    DEF             reduce using rule 149 (entrada -> READLINE PAR_I PAR_D .)
    RETURN          reduce using rule 149 (entrada -> READLINE PAR_I PAR_D .)
    CASE            reduce using rule 149 (entrada -> READLINE PAR_I PAR_D .)


state 100

    (49) asignacion -> VAR VARIABLE IGUAL . VARIABLE
    (51) asignacion -> VAR VARIABLE IGUAL . aritmetica
    (53) asignacion -> VAR VARIABLE IGUAL . returnfun
    (178) asignacion -> VAR VARIABLE IGUAL . tuple
    (348) asignacionLong -> VAR VARIABLE IGUAL . longvalues
    (342) asignacionInt -> VAR VARIABLE IGUAL . intvalues
    (355) asignacionFloat -> VAR VARIABLE IGUAL . floatvalues
    (362) asignacionDouble -> VAR VARIABLE IGUAL . doublevalues
    (74) asignacionString -> VAR VARIABLE IGUAL . STRING
    (81) asignacionChar -> VAR VARIABLE IGUAL . CHAR
    (87) asignacionBoolean -> VAR VARIABLE IGUAL . booleanos
    (165) array -> VAR VARIABLE IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (172) list -> VAR VARIABLE IGUAL . LISTCLASS PAR_I valores PAR_D
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (155) returnfun -> . returnCastable
    (156) returnfun -> . castingcall
    (177) tuple -> . PAR_I valores PAR_D
    (352) longvalues -> . LONG
    (353) longvalues -> . intvalues
    (354) longvalues -> . stringCastLong
    (346) intvalues -> . INT
    (347) intvalues -> . stringCastInt
    (359) floatvalues -> . FLOAT
    (360) floatvalues -> . longvalues
    (361) floatvalues -> . stringCastFloat
    (366) doublevalues -> . DOUBLE
    (367) doublevalues -> . floatvalues
    (368) doublevalues -> . stringCastDouble
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (157) returnCastable -> . entrada
    (158) returnCastable -> . funcall
    (159) castingcall -> . returnCastable PUNTO castingfun
    (160) castingcall -> . VARIABLE PUNTO castingfun
    (370) stringCastLong -> . STRING PUNTO TO_LONG
    (369) stringCastInt -> . STRING PUNTO TO_INT
    (371) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (372) stringCastDouble -> . STRING PUNTO TO_DOUBLE
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE
    (149) entrada -> . READLINE PAR_I PAR_D
    (150) funcall -> . VARIABLE varparen

    VARIABLE        shift and go to state 182
    STRING          shift and go to state 190
    CHAR            shift and go to state 191
    ARRAYCLASS      shift and go to state 193
    LISTCLASS       shift and go to state 195
    INT             shift and go to state 196
    DOUBLE          shift and go to state 197
    LONG            shift and go to state 198
    FLOAT           shift and go to state 199
    PAR_I           shift and go to state 194
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84
    READLINE        shift and go to state 19

    aritmetica                     shift and go to state 183
    returnfun                      shift and go to state 184
    tuple                          shift and go to state 185
    longvalues                     shift and go to state 186
    intvalues                      shift and go to state 187
    floatvalues                    shift and go to state 188
    doublevalues                   shift and go to state 189
    booleanos                      shift and go to state 192
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    returnCastable                 shift and go to state 200
    castingcall                    shift and go to state 201
    stringCastLong                 shift and go to state 202
    stringCastInt                  shift and go to state 203
    stringCastFloat                shift and go to state 204
    stringCastDouble               shift and go to state 205
    startsWith                     shift and go to state 85
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122
    entrada                        shift and go to state 206
    funcall                        shift and go to state 207

state 101

    (320) asignacion -> VAR VARIABLE DOBLE_PUNTO . dectupla
    (64) asignacionLong -> VAR VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL VARIABLE
    (349) asignacionLong -> VAR VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL longvalues
    (66) asignacionInt -> VAR VARIABLE DOBLE_PUNTO . INTCLASS IGUAL VARIABLE
    (343) asignacionInt -> VAR VARIABLE DOBLE_PUNTO . INTCLASS IGUAL intvalues
    (69) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL VARIABLE
    (356) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL VARIABLE
    (363) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL doublevalues
    (75) asignacionString -> VAR VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL STRING
    (78) asignacionString -> VAR VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL VARIABLE
    (82) asignacionChar -> VAR VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL CHAR
    (85) asignacionChar -> VAR VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL VARIABLE
    (88) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL VARIABLE
    (166) array -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (318) asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO . INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> VAR VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> VAR VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (295) listChar -> VAR VARIABLE DOBLE_PUNTO . LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (293) listString -> VAR VARIABLE DOBLE_PUNTO . LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (322) dectupla -> . PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
    (323) dectupla -> . PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
    (324) dectupla -> . PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
    (325) dectupla -> . PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D
    (326) dectupla -> . PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
    (327) dectupla -> . PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
    (328) dectupla -> . PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
    (329) dectupla -> . PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D
    (330) dectupla -> . PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
    (331) dectupla -> . PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
    (332) dectupla -> . PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
    (333) dectupla -> . PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D
    (334) dectupla -> . PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
    (335) dectupla -> . PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
    (336) dectupla -> . PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
    (337) dectupla -> . PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D
    (338) dectupla -> . PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
    (339) dectupla -> . PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
    (340) dectupla -> . PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
    (341) dectupla -> . PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    LONGCLASS       shift and go to state 209
    INTCLASS        shift and go to state 210
    FLOATCLASS      shift and go to state 211
    DOUBLECLASS     shift and go to state 212
    STRINGCLASS     shift and go to state 213
    CHARCLASS       shift and go to state 214
    BOOLCLASS       shift and go to state 215
    ARRAYCLASS      shift and go to state 216
    LISTCLASS       shift and go to state 218
    PAR_I           shift and go to state 217

    dectupla                       shift and go to state 208

state 102

    (50) asignacion -> VAL VARIABLE IGUAL . VARIABLE
    (52) asignacion -> VAL VARIABLE IGUAL . aritmetica
    (54) asignacion -> VAL VARIABLE IGUAL . returnfun
    (179) asignacion -> VAL VARIABLE IGUAL . tuple
    (350) asignacionLong -> VAL VARIABLE IGUAL . longvalues
    (344) asignacionInt -> VAL VARIABLE IGUAL . intvalues
    (357) asignacionFloat -> VAL VARIABLE IGUAL . floatvalues
    (364) asignacionDouble -> VAL VARIABLE IGUAL . doublevalues
    (76) asignacionString -> VAL VARIABLE IGUAL . STRING
    (83) asignacionChar -> VAL VARIABLE IGUAL . CHAR
    (89) asignacionBoolean -> VAL VARIABLE IGUAL . booleanos
    (167) array -> VAL VARIABLE IGUAL . ARRAYCLASS PAR_I valores PAR_D
    (171) list -> VAL VARIABLE IGUAL . LISTCLASS PAR_I valores PAR_D
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (155) returnfun -> . returnCastable
    (156) returnfun -> . castingcall
    (177) tuple -> . PAR_I valores PAR_D
    (352) longvalues -> . LONG
    (353) longvalues -> . intvalues
    (354) longvalues -> . stringCastLong
    (346) intvalues -> . INT
    (347) intvalues -> . stringCastInt
    (359) floatvalues -> . FLOAT
    (360) floatvalues -> . longvalues
    (361) floatvalues -> . stringCastFloat
    (366) doublevalues -> . DOUBLE
    (367) doublevalues -> . floatvalues
    (368) doublevalues -> . stringCastDouble
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (157) returnCastable -> . entrada
    (158) returnCastable -> . funcall
    (159) castingcall -> . returnCastable PUNTO castingfun
    (160) castingcall -> . VARIABLE PUNTO castingfun
    (370) stringCastLong -> . STRING PUNTO TO_LONG
    (369) stringCastInt -> . STRING PUNTO TO_INT
    (371) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (372) stringCastDouble -> . STRING PUNTO TO_DOUBLE
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE
    (149) entrada -> . READLINE PAR_I PAR_D
    (150) funcall -> . VARIABLE varparen

    VARIABLE        shift and go to state 219
    STRING          shift and go to state 227
    CHAR            shift and go to state 228
    ARRAYCLASS      shift and go to state 230
    LISTCLASS       shift and go to state 231
    INT             shift and go to state 196
    DOUBLE          shift and go to state 197
    LONG            shift and go to state 198
    FLOAT           shift and go to state 199
    PAR_I           shift and go to state 194
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84
    READLINE        shift and go to state 19

    aritmetica                     shift and go to state 220
    returnfun                      shift and go to state 221
    tuple                          shift and go to state 222
    longvalues                     shift and go to state 223
    intvalues                      shift and go to state 224
    floatvalues                    shift and go to state 225
    doublevalues                   shift and go to state 226
    booleanos                      shift and go to state 229
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    returnCastable                 shift and go to state 200
    castingcall                    shift and go to state 201
    stringCastLong                 shift and go to state 202
    stringCastInt                  shift and go to state 203
    stringCastFloat                shift and go to state 204
    stringCastDouble               shift and go to state 205
    startsWith                     shift and go to state 85
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122
    entrada                        shift and go to state 206
    funcall                        shift and go to state 207

state 103

    (321) asignacion -> VAL VARIABLE DOBLE_PUNTO . dectupla
    (65) asignacionLong -> VAL VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL VARIABLE
    (351) asignacionLong -> VAL VARIABLE DOBLE_PUNTO . LONGCLASS IGUAL longvalues
    (67) asignacionInt -> VAL VARIABLE DOBLE_PUNTO . INTCLASS IGUAL VARIABLE
    (345) asignacionInt -> VAL VARIABLE DOBLE_PUNTO . INTCLASS IGUAL intvalues
    (70) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL VARIABLE
    (358) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO . FLOATCLASS IGUAL floatvalues
    (72) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL VARIABLE
    (365) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL doublevalues
    (77) asignacionString -> VAL VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL STRING
    (79) asignacionString -> VAL VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL VARIABLE
    (84) asignacionChar -> VAL VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL CHAR
    (86) asignacionChar -> VAL VARIABLE DOBLE_PUNTO . CHARCLASS IGUAL VARIABLE
    (90) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL booleanos
    (92) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO . BOOLCLASS IGUAL VARIABLE
    (168) array -> VAL VARIABLE DOBLE_PUNTO . ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (319) asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO . INTCLASS IGUAL sumIntChar
    (313) asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL sumIntDouble
    (315) asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO . DOUBLECLASS IGUAL sumDoubleChar
    (317) asignacionSumString -> VAL VARIABLE DOBLE_PUNTO . STRINGCLASS IGUAL sumStringChar
    (294) listChar -> VAL VARIABLE DOBLE_PUNTO . LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> VAL VARIABLE DOBLE_PUNTO . LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (322) dectupla -> . PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
    (323) dectupla -> . PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
    (324) dectupla -> . PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
    (325) dectupla -> . PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D
    (326) dectupla -> . PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
    (327) dectupla -> . PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
    (328) dectupla -> . PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
    (329) dectupla -> . PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D
    (330) dectupla -> . PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
    (331) dectupla -> . PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
    (332) dectupla -> . PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
    (333) dectupla -> . PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D
    (334) dectupla -> . PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
    (335) dectupla -> . PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
    (336) dectupla -> . PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
    (337) dectupla -> . PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D
    (338) dectupla -> . PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
    (339) dectupla -> . PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
    (340) dectupla -> . PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
    (341) dectupla -> . PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    LONGCLASS       shift and go to state 233
    INTCLASS        shift and go to state 234
    FLOATCLASS      shift and go to state 235
    DOUBLECLASS     shift and go to state 236
    STRINGCLASS     shift and go to state 237
    CHARCLASS       shift and go to state 238
    BOOLCLASS       shift and go to state 239
    ARRAYCLASS      shift and go to state 240
    LISTCLASS       shift and go to state 241
    PAR_I           shift and go to state 217

    dectupla                       shift and go to state 232

state 104

    (180) while -> WHILE PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 242


state 105

    (233) condicional -> valorC . logicos condicional
    (234) condicional -> valorC .
    (241) logicos -> . AND
    (242) logicos -> . OR
    (243) logicos -> . NOT

    PAR_D           reduce using rule 234 (condicional -> valorC .)
    AND             shift and go to state 244
    OR              shift and go to state 245
    NOT             shift and go to state 246

    logicos                        shift and go to state 243

state 106

    (235) valorC -> VARIABLE .
    (251) relacional -> VARIABLE . comparacion numeros
    (253) relacional -> VARIABLE . comparacion booleanos
    (255) relacional -> VARIABLE . comparacion STRING
    (257) relacional -> VARIABLE . comparacion CHAR
    (259) relacional -> VARIABLE . comparacion VARIABLE
    (265) aritmetica -> VARIABLE . aritmeticos numeros
    (267) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (271) aritmetica -> VARIABLE . MAS numeros
    (273) aritmetica -> VARIABLE . MAS VARIABLE
    (260) comparacion -> . IGUAL_COMPARACION
    (261) comparacion -> . DIFERENTE
    (262) comparacion -> . MAYOR
    (263) comparacion -> . MENOR
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD

    AND             reduce using rule 235 (valorC -> VARIABLE .)
    OR              reduce using rule 235 (valorC -> VARIABLE .)
    NOT             reduce using rule 235 (valorC -> VARIABLE .)
    PAR_D           reduce using rule 235 (valorC -> VARIABLE .)
    MAS             shift and go to state 249
    IGUAL_COMPARACION shift and go to state 250
    DIFERENTE       shift and go to state 251
    MAYOR           shift and go to state 252
    MENOR           shift and go to state 253
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257

    comparacion                    shift and go to state 247
    aritmeticos                    shift and go to state 248

state 107

    (236) valorC -> booleanos .
    (248) relacional -> booleanos . comparacion booleanos
    (254) relacional -> booleanos . comparacion VARIABLE
    (260) comparacion -> . IGUAL_COMPARACION
    (261) comparacion -> . DIFERENTE
    (262) comparacion -> . MAYOR
    (263) comparacion -> . MENOR

    AND             reduce using rule 236 (valorC -> booleanos .)
    OR              reduce using rule 236 (valorC -> booleanos .)
    NOT             reduce using rule 236 (valorC -> booleanos .)
    PAR_D           reduce using rule 236 (valorC -> booleanos .)
    IGUAL_COMPARACION shift and go to state 250
    DIFERENTE       shift and go to state 251
    MAYOR           shift and go to state 252
    MENOR           shift and go to state 253

    comparacion                    shift and go to state 258

state 108

    (237) valorC -> relacional .

    AND             reduce using rule 237 (valorC -> relacional .)
    OR              reduce using rule 237 (valorC -> relacional .)
    NOT             reduce using rule 237 (valorC -> relacional .)
    PAR_D           reduce using rule 237 (valorC -> relacional .)


state 109

    (238) valorC -> NOT . VARIABLE
    (239) valorC -> NOT . booleanos
    (240) valorC -> NOT . relacional
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (244) relacional -> . numeros comparacion numeros
    (245) relacional -> . aritmetica comparacion aritmetica
    (246) relacional -> . aritmetica comparacion numeros
    (247) relacional -> . numeros comparacion aritmetica
    (248) relacional -> . booleanos comparacion booleanos
    (249) relacional -> . STRING comparacion STRING
    (250) relacional -> . CHAR comparacion CHAR
    (251) relacional -> . VARIABLE comparacion numeros
    (252) relacional -> . numeros comparacion VARIABLE
    (253) relacional -> . VARIABLE comparacion booleanos
    (254) relacional -> . booleanos comparacion VARIABLE
    (255) relacional -> . VARIABLE comparacion STRING
    (256) relacional -> . STRING comparacion VARIABLE
    (257) relacional -> . VARIABLE comparacion CHAR
    (258) relacional -> . CHAR comparacion VARIABLE
    (259) relacional -> . VARIABLE comparacion VARIABLE
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VARIABLE        shift and go to state 259
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84
    STRING          shift and go to state 112
    CHAR            shift and go to state 113
    INT             shift and go to state 114
    LONG            shift and go to state 115
    FLOAT           shift and go to state 116
    DOUBLE          shift and go to state 117

    booleanos                      shift and go to state 260
    relacional                     shift and go to state 261
    startsWith                     shift and go to state 85
    numeros                        shift and go to state 110
    aritmetica                     shift and go to state 111
    suma                           shift and go to state 118
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 110

    (244) relacional -> numeros . comparacion numeros
    (247) relacional -> numeros . comparacion aritmetica
    (252) relacional -> numeros . comparacion VARIABLE
    (264) aritmetica -> numeros . aritmeticos numeros
    (266) aritmetica -> numeros . aritmeticos VARIABLE
    (272) aritmetica -> numeros . MAS VARIABLE
    (260) comparacion -> . IGUAL_COMPARACION
    (261) comparacion -> . DIFERENTE
    (262) comparacion -> . MAYOR
    (263) comparacion -> . MENOR
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD

    MAS             shift and go to state 264
    IGUAL_COMPARACION shift and go to state 250
    DIFERENTE       shift and go to state 251
    MAYOR           shift and go to state 252
    MENOR           shift and go to state 253
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257

    comparacion                    shift and go to state 262
    aritmeticos                    shift and go to state 263

state 111

    (245) relacional -> aritmetica . comparacion aritmetica
    (246) relacional -> aritmetica . comparacion numeros
    (268) aritmetica -> aritmetica . aritmeticos numeros
    (269) aritmetica -> aritmetica . aritmeticos VARIABLE
    (274) aritmetica -> aritmetica . MAS numeros
    (275) aritmetica -> aritmetica . MAS VARIABLE
    (260) comparacion -> . IGUAL_COMPARACION
    (261) comparacion -> . DIFERENTE
    (262) comparacion -> . MAYOR
    (263) comparacion -> . MENOR
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD

    MAS             shift and go to state 267
    IGUAL_COMPARACION shift and go to state 250
    DIFERENTE       shift and go to state 251
    MAYOR           shift and go to state 252
    MENOR           shift and go to state 253
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257

    comparacion                    shift and go to state 265
    aritmeticos                    shift and go to state 266

state 112

    (249) relacional -> STRING . comparacion STRING
    (256) relacional -> STRING . comparacion VARIABLE
    (290) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (310) sumStringChar -> STRING . MAS CHAR
    (260) comparacion -> . IGUAL_COMPARACION
    (261) comparacion -> . DIFERENTE
    (262) comparacion -> . MAYOR
    (263) comparacion -> . MENOR

    PUNTO           shift and go to state 67
    MAS             shift and go to state 269
    IGUAL_COMPARACION shift and go to state 250
    DIFERENTE       shift and go to state 251
    MAYOR           shift and go to state 252
    MENOR           shift and go to state 253

    comparacion                    shift and go to state 268

state 113

    (250) relacional -> CHAR . comparacion CHAR
    (258) relacional -> CHAR . comparacion VARIABLE
    (309) sumIntChar -> CHAR . MAS INT
    (311) sumStringChar -> CHAR . MAS STRING
    (307) sumDoubleChar -> CHAR . MAS DOUBLE
    (260) comparacion -> . IGUAL_COMPARACION
    (261) comparacion -> . DIFERENTE
    (262) comparacion -> . MAYOR
    (263) comparacion -> . MENOR

    MAS             shift and go to state 271
    IGUAL_COMPARACION shift and go to state 250
    DIFERENTE       shift and go to state 251
    MAYOR           shift and go to state 252
    MENOR           shift and go to state 253

    comparacion                    shift and go to state 270

state 114

    (116) numeros -> INT .
    (276) aritmetica -> INT . MAS INT
    (308) sumIntChar -> INT . MAS CHAR
    (304) sumIntDouble -> INT . MAS DOUBLE

  ! shift/reduce conflict for MAS resolved as shift
    IGUAL_COMPARACION reduce using rule 116 (numeros -> INT .)
    DIFERENTE       reduce using rule 116 (numeros -> INT .)
    MAYOR           reduce using rule 116 (numeros -> INT .)
    MENOR           reduce using rule 116 (numeros -> INT .)
    MENOS           reduce using rule 116 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 116 (numeros -> INT .)
    DIVISION        reduce using rule 116 (numeros -> INT .)
    MOD             reduce using rule 116 (numeros -> INT .)
    AND             reduce using rule 116 (numeros -> INT .)
    OR              reduce using rule 116 (numeros -> INT .)
    NOT             reduce using rule 116 (numeros -> INT .)
    PAR_D           reduce using rule 116 (numeros -> INT .)
    MAS             shift and go to state 272

  ! MAS             [ reduce using rule 116 (numeros -> INT .) ]


state 115

    (117) numeros -> LONG .
    (278) aritmetica -> LONG . MAS LONG

  ! shift/reduce conflict for MAS resolved as shift
    IGUAL_COMPARACION reduce using rule 117 (numeros -> LONG .)
    DIFERENTE       reduce using rule 117 (numeros -> LONG .)
    MAYOR           reduce using rule 117 (numeros -> LONG .)
    MENOR           reduce using rule 117 (numeros -> LONG .)
    MENOS           reduce using rule 117 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 117 (numeros -> LONG .)
    DIVISION        reduce using rule 117 (numeros -> LONG .)
    MOD             reduce using rule 117 (numeros -> LONG .)
    AND             reduce using rule 117 (numeros -> LONG .)
    OR              reduce using rule 117 (numeros -> LONG .)
    NOT             reduce using rule 117 (numeros -> LONG .)
    PAR_D           reduce using rule 117 (numeros -> LONG .)
    MAS             shift and go to state 273

  ! MAS             [ reduce using rule 117 (numeros -> LONG .) ]


state 116

    (118) numeros -> FLOAT .
    (279) aritmetica -> FLOAT . MAS FLOAT

  ! shift/reduce conflict for MAS resolved as shift
    IGUAL_COMPARACION reduce using rule 118 (numeros -> FLOAT .)
    DIFERENTE       reduce using rule 118 (numeros -> FLOAT .)
    MAYOR           reduce using rule 118 (numeros -> FLOAT .)
    MENOR           reduce using rule 118 (numeros -> FLOAT .)
    MENOS           reduce using rule 118 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 118 (numeros -> FLOAT .)
    DIVISION        reduce using rule 118 (numeros -> FLOAT .)
    MOD             reduce using rule 118 (numeros -> FLOAT .)
    AND             reduce using rule 118 (numeros -> FLOAT .)
    OR              reduce using rule 118 (numeros -> FLOAT .)
    NOT             reduce using rule 118 (numeros -> FLOAT .)
    PAR_D           reduce using rule 118 (numeros -> FLOAT .)
    MAS             shift and go to state 274

  ! MAS             [ reduce using rule 118 (numeros -> FLOAT .) ]


state 117

    (119) numeros -> DOUBLE .
    (277) aritmetica -> DOUBLE . MAS DOUBLE
    (305) sumIntDouble -> DOUBLE . MAS INT
    (306) sumDoubleChar -> DOUBLE . MAS CHAR

  ! shift/reduce conflict for MAS resolved as shift
    IGUAL_COMPARACION reduce using rule 119 (numeros -> DOUBLE .)
    DIFERENTE       reduce using rule 119 (numeros -> DOUBLE .)
    MAYOR           reduce using rule 119 (numeros -> DOUBLE .)
    MENOR           reduce using rule 119 (numeros -> DOUBLE .)
    MENOS           reduce using rule 119 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 119 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 119 (numeros -> DOUBLE .)
    MOD             reduce using rule 119 (numeros -> DOUBLE .)
    AND             reduce using rule 119 (numeros -> DOUBLE .)
    OR              reduce using rule 119 (numeros -> DOUBLE .)
    NOT             reduce using rule 119 (numeros -> DOUBLE .)
    PAR_D           reduce using rule 119 (numeros -> DOUBLE .)
    MAS             shift and go to state 275

  ! MAS             [ reduce using rule 119 (numeros -> DOUBLE .) ]


state 118

    (270) aritmetica -> suma .

    MAS             reduce using rule 270 (aritmetica -> suma .)
    IGUAL_COMPARACION reduce using rule 270 (aritmetica -> suma .)
    DIFERENTE       reduce using rule 270 (aritmetica -> suma .)
    MAYOR           reduce using rule 270 (aritmetica -> suma .)
    MENOR           reduce using rule 270 (aritmetica -> suma .)
    MENOS           reduce using rule 270 (aritmetica -> suma .)
    MULTIPLICACION  reduce using rule 270 (aritmetica -> suma .)
    DIVISION        reduce using rule 270 (aritmetica -> suma .)
    MOD             reduce using rule 270 (aritmetica -> suma .)
    VAR             reduce using rule 270 (aritmetica -> suma .)
    VAL             reduce using rule 270 (aritmetica -> suma .)
    VARIABLE        reduce using rule 270 (aritmetica -> suma .)
    PRINTLN         reduce using rule 270 (aritmetica -> suma .)
    PRINT           reduce using rule 270 (aritmetica -> suma .)
    READLINE        reduce using rule 270 (aritmetica -> suma .)
    WHILE           reduce using rule 270 (aritmetica -> suma .)
    FOR             reduce using rule 270 (aritmetica -> suma .)
    IF              reduce using rule 270 (aritmetica -> suma .)
    INT             reduce using rule 270 (aritmetica -> suma .)
    DOUBLE          reduce using rule 270 (aritmetica -> suma .)
    LONG            reduce using rule 270 (aritmetica -> suma .)
    FLOAT           reduce using rule 270 (aritmetica -> suma .)
    STRING          reduce using rule 270 (aritmetica -> suma .)
    CHAR            reduce using rule 270 (aritmetica -> suma .)
    LLAVE_D         reduce using rule 270 (aritmetica -> suma .)
    DEF             reduce using rule 270 (aritmetica -> suma .)
    $end            reduce using rule 270 (aritmetica -> suma .)
    RETURN          reduce using rule 270 (aritmetica -> suma .)
    CASE            reduce using rule 270 (aritmetica -> suma .)
    AND             reduce using rule 270 (aritmetica -> suma .)
    OR              reduce using rule 270 (aritmetica -> suma .)
    NOT             reduce using rule 270 (aritmetica -> suma .)
    PAR_D           reduce using rule 270 (aritmetica -> suma .)


state 119

    (300) suma -> sumIntChar .

    MAS             reduce using rule 300 (suma -> sumIntChar .)
    IGUAL_COMPARACION reduce using rule 300 (suma -> sumIntChar .)
    DIFERENTE       reduce using rule 300 (suma -> sumIntChar .)
    MAYOR           reduce using rule 300 (suma -> sumIntChar .)
    MENOR           reduce using rule 300 (suma -> sumIntChar .)
    MENOS           reduce using rule 300 (suma -> sumIntChar .)
    MULTIPLICACION  reduce using rule 300 (suma -> sumIntChar .)
    DIVISION        reduce using rule 300 (suma -> sumIntChar .)
    MOD             reduce using rule 300 (suma -> sumIntChar .)
    VAR             reduce using rule 300 (suma -> sumIntChar .)
    VAL             reduce using rule 300 (suma -> sumIntChar .)
    VARIABLE        reduce using rule 300 (suma -> sumIntChar .)
    PRINTLN         reduce using rule 300 (suma -> sumIntChar .)
    PRINT           reduce using rule 300 (suma -> sumIntChar .)
    READLINE        reduce using rule 300 (suma -> sumIntChar .)
    WHILE           reduce using rule 300 (suma -> sumIntChar .)
    FOR             reduce using rule 300 (suma -> sumIntChar .)
    IF              reduce using rule 300 (suma -> sumIntChar .)
    INT             reduce using rule 300 (suma -> sumIntChar .)
    DOUBLE          reduce using rule 300 (suma -> sumIntChar .)
    LONG            reduce using rule 300 (suma -> sumIntChar .)
    FLOAT           reduce using rule 300 (suma -> sumIntChar .)
    STRING          reduce using rule 300 (suma -> sumIntChar .)
    CHAR            reduce using rule 300 (suma -> sumIntChar .)
    LLAVE_D         reduce using rule 300 (suma -> sumIntChar .)
    DEF             reduce using rule 300 (suma -> sumIntChar .)
    $end            reduce using rule 300 (suma -> sumIntChar .)
    RETURN          reduce using rule 300 (suma -> sumIntChar .)
    CASE            reduce using rule 300 (suma -> sumIntChar .)
    AND             reduce using rule 300 (suma -> sumIntChar .)
    OR              reduce using rule 300 (suma -> sumIntChar .)
    NOT             reduce using rule 300 (suma -> sumIntChar .)
    PAR_D           reduce using rule 300 (suma -> sumIntChar .)


state 120

    (301) suma -> sumStringChar .

    MAS             reduce using rule 301 (suma -> sumStringChar .)
    IGUAL_COMPARACION reduce using rule 301 (suma -> sumStringChar .)
    DIFERENTE       reduce using rule 301 (suma -> sumStringChar .)
    MAYOR           reduce using rule 301 (suma -> sumStringChar .)
    MENOR           reduce using rule 301 (suma -> sumStringChar .)
    MENOS           reduce using rule 301 (suma -> sumStringChar .)
    MULTIPLICACION  reduce using rule 301 (suma -> sumStringChar .)
    DIVISION        reduce using rule 301 (suma -> sumStringChar .)
    MOD             reduce using rule 301 (suma -> sumStringChar .)
    VAR             reduce using rule 301 (suma -> sumStringChar .)
    VAL             reduce using rule 301 (suma -> sumStringChar .)
    VARIABLE        reduce using rule 301 (suma -> sumStringChar .)
    PRINTLN         reduce using rule 301 (suma -> sumStringChar .)
    PRINT           reduce using rule 301 (suma -> sumStringChar .)
    READLINE        reduce using rule 301 (suma -> sumStringChar .)
    WHILE           reduce using rule 301 (suma -> sumStringChar .)
    FOR             reduce using rule 301 (suma -> sumStringChar .)
    IF              reduce using rule 301 (suma -> sumStringChar .)
    INT             reduce using rule 301 (suma -> sumStringChar .)
    DOUBLE          reduce using rule 301 (suma -> sumStringChar .)
    LONG            reduce using rule 301 (suma -> sumStringChar .)
    FLOAT           reduce using rule 301 (suma -> sumStringChar .)
    STRING          reduce using rule 301 (suma -> sumStringChar .)
    CHAR            reduce using rule 301 (suma -> sumStringChar .)
    LLAVE_D         reduce using rule 301 (suma -> sumStringChar .)
    DEF             reduce using rule 301 (suma -> sumStringChar .)
    $end            reduce using rule 301 (suma -> sumStringChar .)
    RETURN          reduce using rule 301 (suma -> sumStringChar .)
    CASE            reduce using rule 301 (suma -> sumStringChar .)
    AND             reduce using rule 301 (suma -> sumStringChar .)
    OR              reduce using rule 301 (suma -> sumStringChar .)
    NOT             reduce using rule 301 (suma -> sumStringChar .)
    PAR_D           reduce using rule 301 (suma -> sumStringChar .)


state 121

    (302) suma -> sumIntDouble .

    MAS             reduce using rule 302 (suma -> sumIntDouble .)
    IGUAL_COMPARACION reduce using rule 302 (suma -> sumIntDouble .)
    DIFERENTE       reduce using rule 302 (suma -> sumIntDouble .)
    MAYOR           reduce using rule 302 (suma -> sumIntDouble .)
    MENOR           reduce using rule 302 (suma -> sumIntDouble .)
    MENOS           reduce using rule 302 (suma -> sumIntDouble .)
    MULTIPLICACION  reduce using rule 302 (suma -> sumIntDouble .)
    DIVISION        reduce using rule 302 (suma -> sumIntDouble .)
    MOD             reduce using rule 302 (suma -> sumIntDouble .)
    VAR             reduce using rule 302 (suma -> sumIntDouble .)
    VAL             reduce using rule 302 (suma -> sumIntDouble .)
    VARIABLE        reduce using rule 302 (suma -> sumIntDouble .)
    PRINTLN         reduce using rule 302 (suma -> sumIntDouble .)
    PRINT           reduce using rule 302 (suma -> sumIntDouble .)
    READLINE        reduce using rule 302 (suma -> sumIntDouble .)
    WHILE           reduce using rule 302 (suma -> sumIntDouble .)
    FOR             reduce using rule 302 (suma -> sumIntDouble .)
    IF              reduce using rule 302 (suma -> sumIntDouble .)
    INT             reduce using rule 302 (suma -> sumIntDouble .)
    DOUBLE          reduce using rule 302 (suma -> sumIntDouble .)
    LONG            reduce using rule 302 (suma -> sumIntDouble .)
    FLOAT           reduce using rule 302 (suma -> sumIntDouble .)
    STRING          reduce using rule 302 (suma -> sumIntDouble .)
    CHAR            reduce using rule 302 (suma -> sumIntDouble .)
    LLAVE_D         reduce using rule 302 (suma -> sumIntDouble .)
    DEF             reduce using rule 302 (suma -> sumIntDouble .)
    $end            reduce using rule 302 (suma -> sumIntDouble .)
    RETURN          reduce using rule 302 (suma -> sumIntDouble .)
    CASE            reduce using rule 302 (suma -> sumIntDouble .)
    AND             reduce using rule 302 (suma -> sumIntDouble .)
    OR              reduce using rule 302 (suma -> sumIntDouble .)
    NOT             reduce using rule 302 (suma -> sumIntDouble .)
    PAR_D           reduce using rule 302 (suma -> sumIntDouble .)


state 122

    (303) suma -> sumDoubleChar .

    MAS             reduce using rule 303 (suma -> sumDoubleChar .)
    IGUAL_COMPARACION reduce using rule 303 (suma -> sumDoubleChar .)
    DIFERENTE       reduce using rule 303 (suma -> sumDoubleChar .)
    MAYOR           reduce using rule 303 (suma -> sumDoubleChar .)
    MENOR           reduce using rule 303 (suma -> sumDoubleChar .)
    MENOS           reduce using rule 303 (suma -> sumDoubleChar .)
    MULTIPLICACION  reduce using rule 303 (suma -> sumDoubleChar .)
    DIVISION        reduce using rule 303 (suma -> sumDoubleChar .)
    MOD             reduce using rule 303 (suma -> sumDoubleChar .)
    VAR             reduce using rule 303 (suma -> sumDoubleChar .)
    VAL             reduce using rule 303 (suma -> sumDoubleChar .)
    VARIABLE        reduce using rule 303 (suma -> sumDoubleChar .)
    PRINTLN         reduce using rule 303 (suma -> sumDoubleChar .)
    PRINT           reduce using rule 303 (suma -> sumDoubleChar .)
    READLINE        reduce using rule 303 (suma -> sumDoubleChar .)
    WHILE           reduce using rule 303 (suma -> sumDoubleChar .)
    FOR             reduce using rule 303 (suma -> sumDoubleChar .)
    IF              reduce using rule 303 (suma -> sumDoubleChar .)
    INT             reduce using rule 303 (suma -> sumDoubleChar .)
    DOUBLE          reduce using rule 303 (suma -> sumDoubleChar .)
    LONG            reduce using rule 303 (suma -> sumDoubleChar .)
    FLOAT           reduce using rule 303 (suma -> sumDoubleChar .)
    STRING          reduce using rule 303 (suma -> sumDoubleChar .)
    CHAR            reduce using rule 303 (suma -> sumDoubleChar .)
    LLAVE_D         reduce using rule 303 (suma -> sumDoubleChar .)
    DEF             reduce using rule 303 (suma -> sumDoubleChar .)
    $end            reduce using rule 303 (suma -> sumDoubleChar .)
    RETURN          reduce using rule 303 (suma -> sumDoubleChar .)
    CASE            reduce using rule 303 (suma -> sumDoubleChar .)
    AND             reduce using rule 303 (suma -> sumDoubleChar .)
    OR              reduce using rule 303 (suma -> sumDoubleChar .)
    NOT             reduce using rule 303 (suma -> sumDoubleChar .)
    PAR_D           reduce using rule 303 (suma -> sumDoubleChar .)


state 123

    (181) for -> FOR PAR_I VAR . VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> FOR PAR_I VAR . VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> FOR PAR_I VAR . VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 276


state 124

    (182) for -> FOR PAR_I VARIABLE . ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> FOR PAR_I VARIABLE . ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> FOR PAR_I VARIABLE . ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    ITERATOR        shift and go to state 277


state 125

    (226) if -> IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 278


state 126

    (290) startsWith -> STRING PUNTO STARTSWITH . PAR_I STRING PAR_D
    (291) startsWith -> STRING PUNTO STARTSWITH . PAR_I STRING COMA INT PAR_D

    PAR_I           shift and go to state 279


state 127

    (1) inicio -> OBJECT VARIABLE LLAVE_I cuerpo . LLAVE_D

    LLAVE_D         shift and go to state 280


state 128

    (153) varparen -> varparen PAR_I valores . PAR_D

    PAR_D           shift and go to state 281


state 129

    (154) varparen -> varparen PAR_I PAR_D .

    PAR_I           reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)
    $end            reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)
    LLAVE_D         reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)
    VAR             reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)
    VAL             reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)
    VARIABLE        reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)
    PRINTLN         reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)
    PRINT           reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)
    READLINE        reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)
    WHILE           reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)
    FOR             reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)
    IF              reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)
    INT             reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)
    DOUBLE          reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)
    LONG            reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)
    FLOAT           reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)
    STRING          reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)
    CHAR            reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)
    RETURN          reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)
    PUNTO           reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)
    DEF             reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)
    CASE            reduce using rule 154 (varparen -> varparen PAR_I PAR_D .)


state 130

    (187) match -> VARIABLE MATCH LLAVE_I cases . LLAVE_D

    LLAVE_D         shift and go to state 282


state 131

    (188) cases -> casesInt .

    LLAVE_D         reduce using rule 188 (cases -> casesInt .)


state 132

    (189) cases -> casesLgn .

    LLAVE_D         reduce using rule 189 (cases -> casesLgn .)


state 133

    (190) cases -> casesFlt .

    LLAVE_D         reduce using rule 190 (cases -> casesFlt .)


state 134

    (191) cases -> casesDob .

    LLAVE_D         reduce using rule 191 (cases -> casesDob .)


state 135

    (192) cases -> casesStr .

    LLAVE_D         reduce using rule 192 (cases -> casesStr .)


state 136

    (193) cases -> casesChar .

    LLAVE_D         reduce using rule 193 (cases -> casesChar .)


state 137

    (194) cases -> casesBool .

    LLAVE_D         reduce using rule 194 (cases -> casesBool .)


state 138

    (196) casesInt -> caseInt .
    (197) casesInt -> caseInt . casesInt
    (198) casesInt -> caseInt . defcase
    (196) casesInt -> . caseInt
    (197) casesInt -> . caseInt casesInt
    (198) casesInt -> . caseInt defcase
    (223) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (195) caseInt -> . CASE INT FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 196 (casesInt -> caseInt .)
    CASE            shift and go to state 285

    caseInt                        shift and go to state 138
    casesInt                       shift and go to state 283
    defcase                        shift and go to state 284

state 139

    (200) casesLgn -> caseLgn .
    (201) casesLgn -> caseLgn . casesLgn
    (202) casesLgn -> caseLgn . defcase
    (200) casesLgn -> . caseLgn
    (201) casesLgn -> . caseLgn casesLgn
    (202) casesLgn -> . caseLgn defcase
    (223) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (199) caseLgn -> . CASE LONG FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 200 (casesLgn -> caseLgn .)
    CASE            shift and go to state 288

    caseLgn                        shift and go to state 139
    casesLgn                       shift and go to state 286
    defcase                        shift and go to state 287

state 140

    (204) casesFlt -> caseFlt .
    (205) casesFlt -> caseFlt . casesFlt
    (206) casesFlt -> caseFlt . defcase
    (204) casesFlt -> . caseFlt
    (205) casesFlt -> . caseFlt casesFlt
    (206) casesFlt -> . caseFlt defcase
    (223) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (203) caseFlt -> . CASE FLOAT FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 204 (casesFlt -> caseFlt .)
    CASE            shift and go to state 291

    caseFlt                        shift and go to state 140
    casesFlt                       shift and go to state 289
    defcase                        shift and go to state 290

state 141

    (208) casesDob -> caseDob .
    (209) casesDob -> caseDob . casesDob
    (210) casesDob -> caseDob . defcase
    (208) casesDob -> . caseDob
    (209) casesDob -> . caseDob casesDob
    (210) casesDob -> . caseDob defcase
    (223) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (207) caseDob -> . CASE DOUBLE FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 208 (casesDob -> caseDob .)
    CASE            shift and go to state 294

    caseDob                        shift and go to state 141
    casesDob                       shift and go to state 292
    defcase                        shift and go to state 293

state 142

    (212) casesStr -> caseStr .
    (213) casesStr -> caseStr . casesStr
    (214) casesStr -> caseStr . defcase
    (212) casesStr -> . caseStr
    (213) casesStr -> . caseStr casesStr
    (214) casesStr -> . caseStr defcase
    (223) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (211) caseStr -> . CASE STRING FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 212 (casesStr -> caseStr .)
    CASE            shift and go to state 297

    caseStr                        shift and go to state 142
    casesStr                       shift and go to state 295
    defcase                        shift and go to state 296

state 143

    (216) casesChar -> caseChar .
    (217) casesChar -> caseChar . casesChar
    (218) casesChar -> caseChar . defcase
    (216) casesChar -> . caseChar
    (217) casesChar -> . caseChar casesChar
    (218) casesChar -> . caseChar defcase
    (223) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (215) caseChar -> . CASE CHAR FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 216 (casesChar -> caseChar .)
    CASE            shift and go to state 300

    caseChar                       shift and go to state 143
    casesChar                      shift and go to state 298
    defcase                        shift and go to state 299

state 144

    (220) casesBool -> caseBool .
    (221) casesBool -> caseBool . casesBool
    (222) casesBool -> caseBool . defcase
    (220) casesBool -> . caseBool
    (221) casesBool -> . caseBool casesBool
    (222) casesBool -> . caseBool defcase
    (223) defcase -> . CASE SUBGUION FUNCION_FLECHA codeBlock
    (219) caseBool -> . CASE booleanos FUNCION_FLECHA codeBlock

    LLAVE_D         reduce using rule 220 (casesBool -> caseBool .)
    CASE            shift and go to state 303

    caseBool                       shift and go to state 144
    casesBool                      shift and go to state 301
    defcase                        shift and go to state 302

state 145

    (195) caseInt -> CASE . INT FUNCION_FLECHA codeBlock
    (199) caseLgn -> CASE . LONG FUNCION_FLECHA codeBlock
    (203) caseFlt -> CASE . FLOAT FUNCION_FLECHA codeBlock
    (207) caseDob -> CASE . DOUBLE FUNCION_FLECHA codeBlock
    (211) caseStr -> CASE . STRING FUNCION_FLECHA codeBlock
    (215) caseChar -> CASE . CHAR FUNCION_FLECHA codeBlock
    (219) caseBool -> CASE . booleanos FUNCION_FLECHA codeBlock
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    INT             shift and go to state 304
    LONG            shift and go to state 305
    FLOAT           shift and go to state 306
    DOUBLE          shift and go to state 307
    STRING          shift and go to state 308
    CHAR            shift and go to state 309
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84

    booleanos                      shift and go to state 310
    startsWith                     shift and go to state 85

state 146

    (151) varparen -> PAR_I valores PAR_D .

    PAR_I           reduce using rule 151 (varparen -> PAR_I valores PAR_D .)
    $end            reduce using rule 151 (varparen -> PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 151 (varparen -> PAR_I valores PAR_D .)
    VAR             reduce using rule 151 (varparen -> PAR_I valores PAR_D .)
    VAL             reduce using rule 151 (varparen -> PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 151 (varparen -> PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 151 (varparen -> PAR_I valores PAR_D .)
    PRINT           reduce using rule 151 (varparen -> PAR_I valores PAR_D .)
    READLINE        reduce using rule 151 (varparen -> PAR_I valores PAR_D .)
    WHILE           reduce using rule 151 (varparen -> PAR_I valores PAR_D .)
    FOR             reduce using rule 151 (varparen -> PAR_I valores PAR_D .)
    IF              reduce using rule 151 (varparen -> PAR_I valores PAR_D .)
    INT             reduce using rule 151 (varparen -> PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 151 (varparen -> PAR_I valores PAR_D .)
    LONG            reduce using rule 151 (varparen -> PAR_I valores PAR_D .)
    FLOAT           reduce using rule 151 (varparen -> PAR_I valores PAR_D .)
    STRING          reduce using rule 151 (varparen -> PAR_I valores PAR_D .)
    CHAR            reduce using rule 151 (varparen -> PAR_I valores PAR_D .)
    RETURN          reduce using rule 151 (varparen -> PAR_I valores PAR_D .)
    PUNTO           reduce using rule 151 (varparen -> PAR_I valores PAR_D .)
    DEF             reduce using rule 151 (varparen -> PAR_I valores PAR_D .)
    CASE            reduce using rule 151 (varparen -> PAR_I valores PAR_D .)


state 147

    (176) valores -> valor COMA . valores
    (175) valores -> . valor
    (176) valores -> . valor COMA valores
    (106) valor -> . STRING
    (107) valor -> . CHAR
    (108) valor -> . VARIABLE
    (109) valor -> . numeros
    (110) valor -> . booleanos
    (111) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (112) valor -> . VARIABLE PAR_I INT PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 74
    CHAR            shift and go to state 75
    VARIABLE        shift and go to state 76
    INT             shift and go to state 79
    LONG            shift and go to state 80
    FLOAT           shift and go to state 81
    DOUBLE          shift and go to state 82
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84

    valor                          shift and go to state 73
    valores                        shift and go to state 311
    numeros                        shift and go to state 77
    booleanos                      shift and go to state 78
    startsWith                     shift and go to state 85

state 148

    (111) valor -> VARIABLE PAR_I . VARIABLE PAR_D
    (112) valor -> VARIABLE PAR_I . INT PAR_D

    VARIABLE        shift and go to state 312
    INT             shift and go to state 313


state 149

    (4) io -> VARIABLE PUNTO VARIABLE . PUNTO VARIABLE PUNTO READLINE

    PUNTO           shift and go to state 314


state 150

    (229) elseif -> ELSE IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D
    (230) elseif -> ELSE IF PAR_I . condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (233) condicional -> . valorC logicos condicional
    (234) condicional -> . valorC
    (235) valorC -> . VARIABLE
    (236) valorC -> . booleanos
    (237) valorC -> . relacional
    (238) valorC -> . NOT VARIABLE
    (239) valorC -> . NOT booleanos
    (240) valorC -> . NOT relacional
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (244) relacional -> . numeros comparacion numeros
    (245) relacional -> . aritmetica comparacion aritmetica
    (246) relacional -> . aritmetica comparacion numeros
    (247) relacional -> . numeros comparacion aritmetica
    (248) relacional -> . booleanos comparacion booleanos
    (249) relacional -> . STRING comparacion STRING
    (250) relacional -> . CHAR comparacion CHAR
    (251) relacional -> . VARIABLE comparacion numeros
    (252) relacional -> . numeros comparacion VARIABLE
    (253) relacional -> . VARIABLE comparacion booleanos
    (254) relacional -> . booleanos comparacion VARIABLE
    (255) relacional -> . VARIABLE comparacion STRING
    (256) relacional -> . STRING comparacion VARIABLE
    (257) relacional -> . VARIABLE comparacion CHAR
    (258) relacional -> . CHAR comparacion VARIABLE
    (259) relacional -> . VARIABLE comparacion VARIABLE
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VARIABLE        shift and go to state 106
    NOT             shift and go to state 109
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84
    STRING          shift and go to state 112
    CHAR            shift and go to state 113
    INT             shift and go to state 114
    LONG            shift and go to state 115
    FLOAT           shift and go to state 116
    DOUBLE          shift and go to state 117

    condicional                    shift and go to state 315
    valorC                         shift and go to state 105
    booleanos                      shift and go to state 107
    relacional                     shift and go to state 108
    startsWith                     shift and go to state 85
    numeros                        shift and go to state 110
    aritmetica                     shift and go to state 111
    suma                           shift and go to state 118
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 151

    (231) else -> ELSE LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 316


state 152

    (22) contenido -> asignacion .
    (33) contenido -> asignacion . contenido
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    LLAVE_D         reduce using rule 22 (contenido -> asignacion .)
    RETURN          reduce using rule 22 (contenido -> asignacion .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    asignacion                     shift and go to state 152
    contenido                      shift and go to state 317
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 153

    (23) contenido -> reasignacion .
    (34) contenido -> reasignacion . contenido
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    LLAVE_D         reduce using rule 23 (contenido -> reasignacion .)
    RETURN          reduce using rule 23 (contenido -> reasignacion .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    reasignacion                   shift and go to state 153
    contenido                      shift and go to state 318
    asignacion                     shift and go to state 152
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 154

    (24) contenido -> funcall .
    (35) contenido -> funcall . contenido
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    LLAVE_D         reduce using rule 24 (contenido -> funcall .)
    RETURN          reduce using rule 24 (contenido -> funcall .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    funcall                        shift and go to state 154
    contenido                      shift and go to state 319
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 155

    (25) contenido -> impresion .
    (36) contenido -> impresion . contenido
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    LLAVE_D         reduce using rule 25 (contenido -> impresion .)
    RETURN          reduce using rule 25 (contenido -> impresion .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    impresion                      shift and go to state 155
    contenido                      shift and go to state 320
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 156

    (26) contenido -> entrada .
    (37) contenido -> entrada . contenido
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    LLAVE_D         reduce using rule 26 (contenido -> entrada .)
    RETURN          reduce using rule 26 (contenido -> entrada .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    entrada                        shift and go to state 156
    contenido                      shift and go to state 321
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 157

    (27) contenido -> while .
    (38) contenido -> while . contenido
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    LLAVE_D         reduce using rule 27 (contenido -> while .)
    RETURN          reduce using rule 27 (contenido -> while .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    while                          shift and go to state 157
    contenido                      shift and go to state 322
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 158

    (28) contenido -> for .
    (39) contenido -> for . contenido
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    LLAVE_D         reduce using rule 28 (contenido -> for .)
    RETURN          reduce using rule 28 (contenido -> for .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    for                            shift and go to state 158
    contenido                      shift and go to state 323
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 159

    (29) contenido -> match .
    (41) contenido -> match . contenido
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    LLAVE_D         reduce using rule 29 (contenido -> match .)
    RETURN          reduce using rule 29 (contenido -> match .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    match                          shift and go to state 159
    contenido                      shift and go to state 324
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 160

    (30) contenido -> if .
    (40) contenido -> if . contenido
    (227) if -> if . elseif
    (228) if -> if . else
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (229) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (230) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif
    (231) else -> . ELSE LLAVE_I contenido LLAVE_D
    (232) else -> . elseif else
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    LLAVE_D         reduce using rule 30 (contenido -> if .)
    RETURN          reduce using rule 30 (contenido -> if .)
    ELSE            shift and go to state 56
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    if                             shift and go to state 160
    contenido                      shift and go to state 325
    elseif                         shift and go to state 54
    else                           shift and go to state 55
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 161

    (31) contenido -> aritmetica .
    (42) contenido -> aritmetica . contenido
    (268) aritmetica -> aritmetica . aritmeticos numeros
    (269) aritmetica -> aritmetica . aritmeticos VARIABLE
    (274) aritmetica -> aritmetica . MAS numeros
    (275) aritmetica -> aritmetica . MAS VARIABLE
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    LLAVE_D         reduce using rule 31 (contenido -> aritmetica .)
    RETURN          reduce using rule 31 (contenido -> aritmetica .)
    MAS             shift and go to state 267
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    aritmetica                     shift and go to state 161
    contenido                      shift and go to state 326
    aritmeticos                    shift and go to state 266
    numeros                        shift and go to state 165
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 162

    (32) contenido -> startsWith .
    (43) contenido -> startsWith . contenido
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    LLAVE_D         reduce using rule 32 (contenido -> startsWith .)
    RETURN          reduce using rule 32 (contenido -> startsWith .)
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    startsWith                     shift and go to state 162
    contenido                      shift and go to state 327
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 163

    (93) reasignacion -> VARIABLE . IGUAL valor
    (94) reasignacion -> VARIABLE . IGUAL returnfun
    (95) reasignacion -> VARIABLE . IGUAL aritmetica
    (96) reasignacion -> VARIABLE . PAR_I INT PAR_D IGUAL valor
    (150) funcall -> VARIABLE . varparen
    (187) match -> VARIABLE . MATCH LLAVE_I cases LLAVE_D
    (265) aritmetica -> VARIABLE . aritmeticos numeros
    (267) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (271) aritmetica -> VARIABLE . MAS numeros
    (273) aritmetica -> VARIABLE . MAS VARIABLE
    (151) varparen -> . PAR_I valores PAR_D
    (152) varparen -> . PAR_I PAR_D
    (153) varparen -> . varparen PAR_I valores PAR_D
    (154) varparen -> . varparen PAR_I PAR_D
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD

    IGUAL           shift and go to state 328
    PAR_I           shift and go to state 329
    MATCH           shift and go to state 44
    MAS             shift and go to state 249
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257

    varparen                       shift and go to state 43
    aritmeticos                    shift and go to state 248

state 164

    (276) aritmetica -> INT . MAS INT
    (116) numeros -> INT .
    (308) sumIntChar -> INT . MAS CHAR
    (304) sumIntDouble -> INT . MAS DOUBLE

  ! shift/reduce conflict for MAS resolved as shift
    MAS             shift and go to state 272
    MENOS           reduce using rule 116 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 116 (numeros -> INT .)
    DIVISION        reduce using rule 116 (numeros -> INT .)
    MOD             reduce using rule 116 (numeros -> INT .)
    AND             reduce using rule 116 (numeros -> INT .)
    OR              reduce using rule 116 (numeros -> INT .)
    NOT             reduce using rule 116 (numeros -> INT .)
    PAR_D           reduce using rule 116 (numeros -> INT .)
    VAR             reduce using rule 116 (numeros -> INT .)
    VAL             reduce using rule 116 (numeros -> INT .)
    VARIABLE        reduce using rule 116 (numeros -> INT .)
    PRINTLN         reduce using rule 116 (numeros -> INT .)
    PRINT           reduce using rule 116 (numeros -> INT .)
    READLINE        reduce using rule 116 (numeros -> INT .)
    WHILE           reduce using rule 116 (numeros -> INT .)
    FOR             reduce using rule 116 (numeros -> INT .)
    IF              reduce using rule 116 (numeros -> INT .)
    INT             reduce using rule 116 (numeros -> INT .)
    DOUBLE          reduce using rule 116 (numeros -> INT .)
    LONG            reduce using rule 116 (numeros -> INT .)
    FLOAT           reduce using rule 116 (numeros -> INT .)
    STRING          reduce using rule 116 (numeros -> INT .)
    CHAR            reduce using rule 116 (numeros -> INT .)
    LLAVE_D         reduce using rule 116 (numeros -> INT .)
    RETURN          reduce using rule 116 (numeros -> INT .)
    CASE            reduce using rule 116 (numeros -> INT .)

  ! MAS             [ reduce using rule 116 (numeros -> INT .) ]


state 165

    (264) aritmetica -> numeros . aritmeticos numeros
    (266) aritmetica -> numeros . aritmeticos VARIABLE
    (272) aritmetica -> numeros . MAS VARIABLE
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD

    MAS             shift and go to state 264
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257

    aritmeticos                    shift and go to state 263

state 166

    (277) aritmetica -> DOUBLE . MAS DOUBLE
    (119) numeros -> DOUBLE .
    (305) sumIntDouble -> DOUBLE . MAS INT
    (306) sumDoubleChar -> DOUBLE . MAS CHAR

  ! shift/reduce conflict for MAS resolved as shift
    MAS             shift and go to state 275
    MENOS           reduce using rule 119 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 119 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 119 (numeros -> DOUBLE .)
    MOD             reduce using rule 119 (numeros -> DOUBLE .)
    AND             reduce using rule 119 (numeros -> DOUBLE .)
    OR              reduce using rule 119 (numeros -> DOUBLE .)
    NOT             reduce using rule 119 (numeros -> DOUBLE .)
    PAR_D           reduce using rule 119 (numeros -> DOUBLE .)
    VAR             reduce using rule 119 (numeros -> DOUBLE .)
    VAL             reduce using rule 119 (numeros -> DOUBLE .)
    VARIABLE        reduce using rule 119 (numeros -> DOUBLE .)
    PRINTLN         reduce using rule 119 (numeros -> DOUBLE .)
    PRINT           reduce using rule 119 (numeros -> DOUBLE .)
    READLINE        reduce using rule 119 (numeros -> DOUBLE .)
    WHILE           reduce using rule 119 (numeros -> DOUBLE .)
    FOR             reduce using rule 119 (numeros -> DOUBLE .)
    IF              reduce using rule 119 (numeros -> DOUBLE .)
    INT             reduce using rule 119 (numeros -> DOUBLE .)
    DOUBLE          reduce using rule 119 (numeros -> DOUBLE .)
    LONG            reduce using rule 119 (numeros -> DOUBLE .)
    FLOAT           reduce using rule 119 (numeros -> DOUBLE .)
    STRING          reduce using rule 119 (numeros -> DOUBLE .)
    CHAR            reduce using rule 119 (numeros -> DOUBLE .)
    LLAVE_D         reduce using rule 119 (numeros -> DOUBLE .)
    RETURN          reduce using rule 119 (numeros -> DOUBLE .)
    CASE            reduce using rule 119 (numeros -> DOUBLE .)

  ! MAS             [ reduce using rule 119 (numeros -> DOUBLE .) ]


state 167

    (278) aritmetica -> LONG . MAS LONG
    (117) numeros -> LONG .

  ! shift/reduce conflict for MAS resolved as shift
    MAS             shift and go to state 273
    MENOS           reduce using rule 117 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 117 (numeros -> LONG .)
    DIVISION        reduce using rule 117 (numeros -> LONG .)
    MOD             reduce using rule 117 (numeros -> LONG .)
    AND             reduce using rule 117 (numeros -> LONG .)
    OR              reduce using rule 117 (numeros -> LONG .)
    NOT             reduce using rule 117 (numeros -> LONG .)
    PAR_D           reduce using rule 117 (numeros -> LONG .)
    VAR             reduce using rule 117 (numeros -> LONG .)
    VAL             reduce using rule 117 (numeros -> LONG .)
    VARIABLE        reduce using rule 117 (numeros -> LONG .)
    PRINTLN         reduce using rule 117 (numeros -> LONG .)
    PRINT           reduce using rule 117 (numeros -> LONG .)
    READLINE        reduce using rule 117 (numeros -> LONG .)
    WHILE           reduce using rule 117 (numeros -> LONG .)
    FOR             reduce using rule 117 (numeros -> LONG .)
    IF              reduce using rule 117 (numeros -> LONG .)
    INT             reduce using rule 117 (numeros -> LONG .)
    DOUBLE          reduce using rule 117 (numeros -> LONG .)
    LONG            reduce using rule 117 (numeros -> LONG .)
    FLOAT           reduce using rule 117 (numeros -> LONG .)
    STRING          reduce using rule 117 (numeros -> LONG .)
    CHAR            reduce using rule 117 (numeros -> LONG .)
    LLAVE_D         reduce using rule 117 (numeros -> LONG .)
    RETURN          reduce using rule 117 (numeros -> LONG .)
    CASE            reduce using rule 117 (numeros -> LONG .)

  ! MAS             [ reduce using rule 117 (numeros -> LONG .) ]


state 168

    (279) aritmetica -> FLOAT . MAS FLOAT
    (118) numeros -> FLOAT .

  ! shift/reduce conflict for MAS resolved as shift
    MAS             shift and go to state 274
    MENOS           reduce using rule 118 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 118 (numeros -> FLOAT .)
    DIVISION        reduce using rule 118 (numeros -> FLOAT .)
    MOD             reduce using rule 118 (numeros -> FLOAT .)
    AND             reduce using rule 118 (numeros -> FLOAT .)
    OR              reduce using rule 118 (numeros -> FLOAT .)
    NOT             reduce using rule 118 (numeros -> FLOAT .)
    PAR_D           reduce using rule 118 (numeros -> FLOAT .)
    VAR             reduce using rule 118 (numeros -> FLOAT .)
    VAL             reduce using rule 118 (numeros -> FLOAT .)
    VARIABLE        reduce using rule 118 (numeros -> FLOAT .)
    PRINTLN         reduce using rule 118 (numeros -> FLOAT .)
    PRINT           reduce using rule 118 (numeros -> FLOAT .)
    READLINE        reduce using rule 118 (numeros -> FLOAT .)
    WHILE           reduce using rule 118 (numeros -> FLOAT .)
    FOR             reduce using rule 118 (numeros -> FLOAT .)
    IF              reduce using rule 118 (numeros -> FLOAT .)
    INT             reduce using rule 118 (numeros -> FLOAT .)
    DOUBLE          reduce using rule 118 (numeros -> FLOAT .)
    LONG            reduce using rule 118 (numeros -> FLOAT .)
    FLOAT           reduce using rule 118 (numeros -> FLOAT .)
    STRING          reduce using rule 118 (numeros -> FLOAT .)
    CHAR            reduce using rule 118 (numeros -> FLOAT .)
    LLAVE_D         reduce using rule 118 (numeros -> FLOAT .)
    RETURN          reduce using rule 118 (numeros -> FLOAT .)
    CASE            reduce using rule 118 (numeros -> FLOAT .)

  ! MAS             [ reduce using rule 118 (numeros -> FLOAT .) ]


state 169

    (290) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (310) sumStringChar -> STRING . MAS CHAR

    PUNTO           shift and go to state 67
    MAS             shift and go to state 269


state 170

    (309) sumIntChar -> CHAR . MAS INT
    (311) sumStringChar -> CHAR . MAS STRING
    (307) sumDoubleChar -> CHAR . MAS DOUBLE

    MAS             shift and go to state 271


state 171

    (120) funcion -> DEF VARIABLE parametro IGUAL . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 330


state 172

    (121) funcion -> DEF VARIABLE parametro LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    contenido                      shift and go to state 331
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 173

    (128) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D
    (132) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I RETURN valor LLAVE_D
    (133) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I RETURN VARIABLE LLAVE_D
    (134) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I RETURN returnfun LLAVE_D
    (135) funcion -> DEF VARIABLE parametro dectipo . IGUAL LLAVE_I RETURN aritmetica LLAVE_D

    IGUAL           shift and go to state 332


state 174

    (136) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN tuple LLAVE_D
    (137) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (138) funcion -> DEF VARIABLE parametro dectipoTupla . IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D

    IGUAL           shift and go to state 333


state 175

    (139) dectipo -> DOBLE_PUNTO . tipo
    (140) dectipoTupla -> DOBLE_PUNTO . PAR_I tipos PAR_D
    (97) tipo -> . CHARCLASS
    (98) tipo -> . STRINGCLASS
    (99) tipo -> . BOOLCLASS
    (100) tipo -> . INTCLASS
    (101) tipo -> . LONGCLASS
    (102) tipo -> . DOUBLECLASS
    (103) tipo -> . FLOATCLASS
    (104) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (105) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    PAR_I           shift and go to state 335
    CHARCLASS       shift and go to state 336
    STRINGCLASS     shift and go to state 337
    BOOLCLASS       shift and go to state 338
    INTCLASS        shift and go to state 339
    LONGCLASS       shift and go to state 340
    DOUBLECLASS     shift and go to state 341
    FLOATCLASS      shift and go to state 342
    ARRAYCLASS      shift and go to state 343
    LISTCLASS       shift and go to state 344

    tipo                           shift and go to state 334

state 176

    (125) parametro -> PAR_I PAR_D .

    IGUAL           reduce using rule 125 (parametro -> PAR_I PAR_D .)
    LLAVE_I         reduce using rule 125 (parametro -> PAR_I PAR_D .)
    DOBLE_PUNTO     reduce using rule 125 (parametro -> PAR_I PAR_D .)


state 177

    (126) parametros -> PAR_I declaracion . PAR_D
    (127) parametros -> PAR_I declaracion . PAR_D parametros

    PAR_D           shift and go to state 345


state 178

    (122) declaracion -> VARIABLE . DOBLE_PUNTO tipo
    (123) declaracion -> VARIABLE . DOBLE_PUNTO tipo IGUAL valor

    DOBLE_PUNTO     shift and go to state 346


state 179

    (145) impresion -> PRINTLN PAR_I valorI PAR_D .

    $end            reduce using rule 145 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    LLAVE_D         reduce using rule 145 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VAR             reduce using rule 145 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VAL             reduce using rule 145 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    VARIABLE        reduce using rule 145 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    PRINTLN         reduce using rule 145 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    PRINT           reduce using rule 145 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    READLINE        reduce using rule 145 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    WHILE           reduce using rule 145 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    FOR             reduce using rule 145 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    IF              reduce using rule 145 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    INT             reduce using rule 145 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    DOUBLE          reduce using rule 145 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    LONG            reduce using rule 145 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    FLOAT           reduce using rule 145 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    STRING          reduce using rule 145 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    CHAR            reduce using rule 145 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    RETURN          reduce using rule 145 (impresion -> PRINTLN PAR_I valorI PAR_D .)
    CASE            reduce using rule 145 (impresion -> PRINTLN PAR_I valorI PAR_D .)


state 180

    (147) valorI -> valor MAS . valorI
    (147) valorI -> . valor MAS valorI
    (148) valorI -> . valor
    (106) valor -> . STRING
    (107) valor -> . CHAR
    (108) valor -> . VARIABLE
    (109) valor -> . numeros
    (110) valor -> . booleanos
    (111) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (112) valor -> . VARIABLE PAR_I INT PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 74
    CHAR            shift and go to state 75
    VARIABLE        shift and go to state 76
    INT             shift and go to state 79
    LONG            shift and go to state 80
    FLOAT           shift and go to state 81
    DOUBLE          shift and go to state 82
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84

    valor                          shift and go to state 97
    valorI                         shift and go to state 347
    numeros                        shift and go to state 77
    booleanos                      shift and go to state 78
    startsWith                     shift and go to state 85

state 181

    (146) impresion -> PRINT PAR_I valorI PAR_D .

    $end            reduce using rule 146 (impresion -> PRINT PAR_I valorI PAR_D .)
    LLAVE_D         reduce using rule 146 (impresion -> PRINT PAR_I valorI PAR_D .)
    VAR             reduce using rule 146 (impresion -> PRINT PAR_I valorI PAR_D .)
    VAL             reduce using rule 146 (impresion -> PRINT PAR_I valorI PAR_D .)
    VARIABLE        reduce using rule 146 (impresion -> PRINT PAR_I valorI PAR_D .)
    PRINTLN         reduce using rule 146 (impresion -> PRINT PAR_I valorI PAR_D .)
    PRINT           reduce using rule 146 (impresion -> PRINT PAR_I valorI PAR_D .)
    READLINE        reduce using rule 146 (impresion -> PRINT PAR_I valorI PAR_D .)
    WHILE           reduce using rule 146 (impresion -> PRINT PAR_I valorI PAR_D .)
    FOR             reduce using rule 146 (impresion -> PRINT PAR_I valorI PAR_D .)
    IF              reduce using rule 146 (impresion -> PRINT PAR_I valorI PAR_D .)
    INT             reduce using rule 146 (impresion -> PRINT PAR_I valorI PAR_D .)
    DOUBLE          reduce using rule 146 (impresion -> PRINT PAR_I valorI PAR_D .)
    LONG            reduce using rule 146 (impresion -> PRINT PAR_I valorI PAR_D .)
    FLOAT           reduce using rule 146 (impresion -> PRINT PAR_I valorI PAR_D .)
    STRING          reduce using rule 146 (impresion -> PRINT PAR_I valorI PAR_D .)
    CHAR            reduce using rule 146 (impresion -> PRINT PAR_I valorI PAR_D .)
    RETURN          reduce using rule 146 (impresion -> PRINT PAR_I valorI PAR_D .)
    CASE            reduce using rule 146 (impresion -> PRINT PAR_I valorI PAR_D .)


state 182

    (49) asignacion -> VAR VARIABLE IGUAL VARIABLE .
    (265) aritmetica -> VARIABLE . aritmeticos numeros
    (267) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (271) aritmetica -> VARIABLE . MAS numeros
    (273) aritmetica -> VARIABLE . MAS VARIABLE
    (160) castingcall -> VARIABLE . PUNTO castingfun
    (150) funcall -> VARIABLE . varparen
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD
    (151) varparen -> . PAR_I valores PAR_D
    (152) varparen -> . PAR_I PAR_D
    (153) varparen -> . varparen PAR_I valores PAR_D
    (154) varparen -> . varparen PAR_I PAR_D

    DEF             reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VARIABLE        reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PRINTLN         reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    PRINT           reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    READLINE        reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VAR             reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    VAL             reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    WHILE           reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    FOR             reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    IF              reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    STRING          reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    $end            reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    INT             reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    DOUBLE          reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    LONG            reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    FLOAT           reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    CHAR            reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    RETURN          reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    CASE            reduce using rule 49 (asignacion -> VAR VARIABLE IGUAL VARIABLE .)
    MAS             shift and go to state 249
    PUNTO           shift and go to state 348
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257
    PAR_I           shift and go to state 45

    aritmeticos                    shift and go to state 248
    varparen                       shift and go to state 43

state 183

    (51) asignacion -> VAR VARIABLE IGUAL aritmetica .
    (268) aritmetica -> aritmetica . aritmeticos numeros
    (269) aritmetica -> aritmetica . aritmeticos VARIABLE
    (274) aritmetica -> aritmetica . MAS numeros
    (275) aritmetica -> aritmetica . MAS VARIABLE
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD

    DEF             reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VAR             reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    STRING          reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    $end            reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    CHAR            reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 51 (asignacion -> VAR VARIABLE IGUAL aritmetica .)
    MAS             shift and go to state 267
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257

    aritmeticos                    shift and go to state 266

state 184

    (53) asignacion -> VAR VARIABLE IGUAL returnfun .

    DEF             reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    VARIABLE        reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    PRINTLN         reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    PRINT           reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    READLINE        reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    VAR             reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    VAL             reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    WHILE           reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    FOR             reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    IF              reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    STRING          reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    $end            reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    LLAVE_D         reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    INT             reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    DOUBLE          reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    LONG            reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    FLOAT           reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    CHAR            reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    RETURN          reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)
    CASE            reduce using rule 53 (asignacion -> VAR VARIABLE IGUAL returnfun .)


state 185

    (178) asignacion -> VAR VARIABLE IGUAL tuple .

    DEF             reduce using rule 178 (asignacion -> VAR VARIABLE IGUAL tuple .)
    VARIABLE        reduce using rule 178 (asignacion -> VAR VARIABLE IGUAL tuple .)
    PRINTLN         reduce using rule 178 (asignacion -> VAR VARIABLE IGUAL tuple .)
    PRINT           reduce using rule 178 (asignacion -> VAR VARIABLE IGUAL tuple .)
    READLINE        reduce using rule 178 (asignacion -> VAR VARIABLE IGUAL tuple .)
    VAR             reduce using rule 178 (asignacion -> VAR VARIABLE IGUAL tuple .)
    VAL             reduce using rule 178 (asignacion -> VAR VARIABLE IGUAL tuple .)
    WHILE           reduce using rule 178 (asignacion -> VAR VARIABLE IGUAL tuple .)
    FOR             reduce using rule 178 (asignacion -> VAR VARIABLE IGUAL tuple .)
    IF              reduce using rule 178 (asignacion -> VAR VARIABLE IGUAL tuple .)
    STRING          reduce using rule 178 (asignacion -> VAR VARIABLE IGUAL tuple .)
    $end            reduce using rule 178 (asignacion -> VAR VARIABLE IGUAL tuple .)
    LLAVE_D         reduce using rule 178 (asignacion -> VAR VARIABLE IGUAL tuple .)
    INT             reduce using rule 178 (asignacion -> VAR VARIABLE IGUAL tuple .)
    DOUBLE          reduce using rule 178 (asignacion -> VAR VARIABLE IGUAL tuple .)
    LONG            reduce using rule 178 (asignacion -> VAR VARIABLE IGUAL tuple .)
    FLOAT           reduce using rule 178 (asignacion -> VAR VARIABLE IGUAL tuple .)
    CHAR            reduce using rule 178 (asignacion -> VAR VARIABLE IGUAL tuple .)
    RETURN          reduce using rule 178 (asignacion -> VAR VARIABLE IGUAL tuple .)
    CASE            reduce using rule 178 (asignacion -> VAR VARIABLE IGUAL tuple .)


state 186

    (348) asignacionLong -> VAR VARIABLE IGUAL longvalues .
    (360) floatvalues -> longvalues .

  ! reduce/reduce conflict for DEF resolved using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VAR resolved using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for IF resolved using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for $end resolved using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for INT resolved using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for CHAR resolved using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    DEF             reduce using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    VARIABLE        reduce using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    PRINTLN         reduce using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    PRINT           reduce using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    READLINE        reduce using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    VAR             reduce using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    VAL             reduce using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    WHILE           reduce using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    FOR             reduce using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    IF              reduce using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    STRING          reduce using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    $end            reduce using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    LLAVE_D         reduce using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    INT             reduce using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    DOUBLE          reduce using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    LONG            reduce using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    FLOAT           reduce using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    CHAR            reduce using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    RETURN          reduce using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)
    CASE            reduce using rule 348 (asignacionLong -> VAR VARIABLE IGUAL longvalues .)

  ! DEF             [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! VARIABLE        [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! PRINTLN         [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! PRINT           [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! READLINE        [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! VAR             [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! VAL             [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! WHILE           [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! FOR             [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! IF              [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! STRING          [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! $end            [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! LLAVE_D         [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! INT             [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! DOUBLE          [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! LONG            [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! FLOAT           [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! CHAR            [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! RETURN          [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! CASE            [ reduce using rule 360 (floatvalues -> longvalues .) ]


state 187

    (342) asignacionInt -> VAR VARIABLE IGUAL intvalues .
    (353) longvalues -> intvalues .

  ! reduce/reduce conflict for DEF resolved using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VAR resolved using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for IF resolved using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for $end resolved using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for INT resolved using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for CHAR resolved using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    DEF             reduce using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    VARIABLE        reduce using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    PRINTLN         reduce using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    PRINT           reduce using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    READLINE        reduce using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    VAR             reduce using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    VAL             reduce using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    WHILE           reduce using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    FOR             reduce using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    IF              reduce using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    STRING          reduce using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    $end            reduce using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    LLAVE_D         reduce using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    INT             reduce using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    DOUBLE          reduce using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    LONG            reduce using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    FLOAT           reduce using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    CHAR            reduce using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    RETURN          reduce using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)
    CASE            reduce using rule 342 (asignacionInt -> VAR VARIABLE IGUAL intvalues .)

  ! DEF             [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! VARIABLE        [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! PRINTLN         [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! PRINT           [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! READLINE        [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! VAR             [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! VAL             [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! WHILE           [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! FOR             [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! IF              [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! STRING          [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! $end            [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! LLAVE_D         [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! INT             [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! DOUBLE          [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! LONG            [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! FLOAT           [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! CHAR            [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! RETURN          [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! CASE            [ reduce using rule 353 (longvalues -> intvalues .) ]


state 188

    (355) asignacionFloat -> VAR VARIABLE IGUAL floatvalues .
    (367) doublevalues -> floatvalues .

  ! reduce/reduce conflict for DEF resolved using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VAR resolved using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for IF resolved using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for $end resolved using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for INT resolved using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for CHAR resolved using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    DEF             reduce using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    VARIABLE        reduce using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    PRINTLN         reduce using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    PRINT           reduce using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    READLINE        reduce using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    VAR             reduce using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    VAL             reduce using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    WHILE           reduce using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    FOR             reduce using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    IF              reduce using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    STRING          reduce using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    $end            reduce using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    LLAVE_D         reduce using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    INT             reduce using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    DOUBLE          reduce using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    LONG            reduce using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    FLOAT           reduce using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    CHAR            reduce using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    RETURN          reduce using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)
    CASE            reduce using rule 355 (asignacionFloat -> VAR VARIABLE IGUAL floatvalues .)

  ! DEF             [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! VARIABLE        [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! PRINTLN         [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! PRINT           [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! READLINE        [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! VAR             [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! VAL             [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! WHILE           [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! FOR             [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! IF              [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! STRING          [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! $end            [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! LLAVE_D         [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! INT             [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! DOUBLE          [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! LONG            [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! FLOAT           [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! CHAR            [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! RETURN          [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! CASE            [ reduce using rule 367 (doublevalues -> floatvalues .) ]


state 189

    (362) asignacionDouble -> VAR VARIABLE IGUAL doublevalues .

    DEF             reduce using rule 362 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    VARIABLE        reduce using rule 362 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    PRINTLN         reduce using rule 362 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    PRINT           reduce using rule 362 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    READLINE        reduce using rule 362 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    VAR             reduce using rule 362 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    VAL             reduce using rule 362 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    WHILE           reduce using rule 362 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    FOR             reduce using rule 362 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    IF              reduce using rule 362 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    STRING          reduce using rule 362 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    $end            reduce using rule 362 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    LLAVE_D         reduce using rule 362 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    INT             reduce using rule 362 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    DOUBLE          reduce using rule 362 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    LONG            reduce using rule 362 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    FLOAT           reduce using rule 362 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    CHAR            reduce using rule 362 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    RETURN          reduce using rule 362 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)
    CASE            reduce using rule 362 (asignacionDouble -> VAR VARIABLE IGUAL doublevalues .)


state 190

    (74) asignacionString -> VAR VARIABLE IGUAL STRING .
    (370) stringCastLong -> STRING . PUNTO TO_LONG
    (369) stringCastInt -> STRING . PUNTO TO_INT
    (371) stringCastFloat -> STRING . PUNTO TO_FLOAT
    (372) stringCastDouble -> STRING . PUNTO TO_DOUBLE
    (290) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (310) sumStringChar -> STRING . MAS CHAR

    DEF             reduce using rule 74 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VARIABLE        reduce using rule 74 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PRINTLN         reduce using rule 74 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PRINT           reduce using rule 74 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    READLINE        reduce using rule 74 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VAR             reduce using rule 74 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    VAL             reduce using rule 74 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    WHILE           reduce using rule 74 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    FOR             reduce using rule 74 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    IF              reduce using rule 74 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    STRING          reduce using rule 74 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    $end            reduce using rule 74 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    LLAVE_D         reduce using rule 74 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    INT             reduce using rule 74 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    DOUBLE          reduce using rule 74 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    LONG            reduce using rule 74 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    FLOAT           reduce using rule 74 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    CHAR            reduce using rule 74 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    RETURN          reduce using rule 74 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    CASE            reduce using rule 74 (asignacionString -> VAR VARIABLE IGUAL STRING .)
    PUNTO           shift and go to state 349
    MAS             shift and go to state 269


state 191

    (81) asignacionChar -> VAR VARIABLE IGUAL CHAR .
    (309) sumIntChar -> CHAR . MAS INT
    (311) sumStringChar -> CHAR . MAS STRING
    (307) sumDoubleChar -> CHAR . MAS DOUBLE

    DEF             reduce using rule 81 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VARIABLE        reduce using rule 81 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    PRINTLN         reduce using rule 81 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    PRINT           reduce using rule 81 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    READLINE        reduce using rule 81 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VAR             reduce using rule 81 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    VAL             reduce using rule 81 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    WHILE           reduce using rule 81 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    FOR             reduce using rule 81 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    IF              reduce using rule 81 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    STRING          reduce using rule 81 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    $end            reduce using rule 81 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    LLAVE_D         reduce using rule 81 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    INT             reduce using rule 81 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    DOUBLE          reduce using rule 81 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    LONG            reduce using rule 81 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    FLOAT           reduce using rule 81 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    CHAR            reduce using rule 81 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    RETURN          reduce using rule 81 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    CASE            reduce using rule 81 (asignacionChar -> VAR VARIABLE IGUAL CHAR .)
    MAS             shift and go to state 271


state 192

    (87) asignacionBoolean -> VAR VARIABLE IGUAL booleanos .

    DEF             reduce using rule 87 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 87 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    PRINTLN         reduce using rule 87 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 87 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    READLINE        reduce using rule 87 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VAR             reduce using rule 87 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    VAL             reduce using rule 87 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 87 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    FOR             reduce using rule 87 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    IF              reduce using rule 87 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    STRING          reduce using rule 87 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    $end            reduce using rule 87 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    LLAVE_D         reduce using rule 87 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    INT             reduce using rule 87 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    DOUBLE          reduce using rule 87 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    LONG            reduce using rule 87 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    FLOAT           reduce using rule 87 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    CHAR            reduce using rule 87 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    RETURN          reduce using rule 87 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 87 (asignacionBoolean -> VAR VARIABLE IGUAL booleanos .)


state 193

    (165) array -> VAR VARIABLE IGUAL ARRAYCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 350


state 194

    (177) tuple -> PAR_I . valores PAR_D
    (175) valores -> . valor
    (176) valores -> . valor COMA valores
    (106) valor -> . STRING
    (107) valor -> . CHAR
    (108) valor -> . VARIABLE
    (109) valor -> . numeros
    (110) valor -> . booleanos
    (111) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (112) valor -> . VARIABLE PAR_I INT PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 74
    CHAR            shift and go to state 75
    VARIABLE        shift and go to state 76
    INT             shift and go to state 79
    LONG            shift and go to state 80
    FLOAT           shift and go to state 81
    DOUBLE          shift and go to state 82
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84

    valores                        shift and go to state 351
    valor                          shift and go to state 73
    numeros                        shift and go to state 77
    booleanos                      shift and go to state 78
    startsWith                     shift and go to state 85

state 195

    (172) list -> VAR VARIABLE IGUAL LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 352


state 196

    (276) aritmetica -> INT . MAS INT
    (346) intvalues -> INT .
    (116) numeros -> INT .
    (308) sumIntChar -> INT . MAS CHAR
    (304) sumIntDouble -> INT . MAS DOUBLE

  ! shift/reduce conflict for MAS resolved as shift
    MAS             shift and go to state 272
    DEF             reduce using rule 346 (intvalues -> INT .)
    VARIABLE        reduce using rule 346 (intvalues -> INT .)
    PRINTLN         reduce using rule 346 (intvalues -> INT .)
    PRINT           reduce using rule 346 (intvalues -> INT .)
    READLINE        reduce using rule 346 (intvalues -> INT .)
    VAR             reduce using rule 346 (intvalues -> INT .)
    VAL             reduce using rule 346 (intvalues -> INT .)
    WHILE           reduce using rule 346 (intvalues -> INT .)
    FOR             reduce using rule 346 (intvalues -> INT .)
    IF              reduce using rule 346 (intvalues -> INT .)
    STRING          reduce using rule 346 (intvalues -> INT .)
    $end            reduce using rule 346 (intvalues -> INT .)
    LLAVE_D         reduce using rule 346 (intvalues -> INT .)
    INT             reduce using rule 346 (intvalues -> INT .)
    DOUBLE          reduce using rule 346 (intvalues -> INT .)
    LONG            reduce using rule 346 (intvalues -> INT .)
    FLOAT           reduce using rule 346 (intvalues -> INT .)
    CHAR            reduce using rule 346 (intvalues -> INT .)
    RETURN          reduce using rule 346 (intvalues -> INT .)
    CASE            reduce using rule 346 (intvalues -> INT .)
    MENOS           reduce using rule 116 (numeros -> INT .)
    MULTIPLICACION  reduce using rule 116 (numeros -> INT .)
    DIVISION        reduce using rule 116 (numeros -> INT .)
    MOD             reduce using rule 116 (numeros -> INT .)

  ! MAS             [ reduce using rule 116 (numeros -> INT .) ]


state 197

    (277) aritmetica -> DOUBLE . MAS DOUBLE
    (366) doublevalues -> DOUBLE .
    (119) numeros -> DOUBLE .
    (305) sumIntDouble -> DOUBLE . MAS INT
    (306) sumDoubleChar -> DOUBLE . MAS CHAR

  ! shift/reduce conflict for MAS resolved as shift
    MAS             shift and go to state 275
    DEF             reduce using rule 366 (doublevalues -> DOUBLE .)
    VARIABLE        reduce using rule 366 (doublevalues -> DOUBLE .)
    PRINTLN         reduce using rule 366 (doublevalues -> DOUBLE .)
    PRINT           reduce using rule 366 (doublevalues -> DOUBLE .)
    READLINE        reduce using rule 366 (doublevalues -> DOUBLE .)
    VAR             reduce using rule 366 (doublevalues -> DOUBLE .)
    VAL             reduce using rule 366 (doublevalues -> DOUBLE .)
    WHILE           reduce using rule 366 (doublevalues -> DOUBLE .)
    FOR             reduce using rule 366 (doublevalues -> DOUBLE .)
    IF              reduce using rule 366 (doublevalues -> DOUBLE .)
    STRING          reduce using rule 366 (doublevalues -> DOUBLE .)
    $end            reduce using rule 366 (doublevalues -> DOUBLE .)
    LLAVE_D         reduce using rule 366 (doublevalues -> DOUBLE .)
    INT             reduce using rule 366 (doublevalues -> DOUBLE .)
    DOUBLE          reduce using rule 366 (doublevalues -> DOUBLE .)
    LONG            reduce using rule 366 (doublevalues -> DOUBLE .)
    FLOAT           reduce using rule 366 (doublevalues -> DOUBLE .)
    CHAR            reduce using rule 366 (doublevalues -> DOUBLE .)
    RETURN          reduce using rule 366 (doublevalues -> DOUBLE .)
    CASE            reduce using rule 366 (doublevalues -> DOUBLE .)
    MENOS           reduce using rule 119 (numeros -> DOUBLE .)
    MULTIPLICACION  reduce using rule 119 (numeros -> DOUBLE .)
    DIVISION        reduce using rule 119 (numeros -> DOUBLE .)
    MOD             reduce using rule 119 (numeros -> DOUBLE .)

  ! MAS             [ reduce using rule 119 (numeros -> DOUBLE .) ]


state 198

    (278) aritmetica -> LONG . MAS LONG
    (352) longvalues -> LONG .
    (117) numeros -> LONG .

  ! shift/reduce conflict for MAS resolved as shift
    MAS             shift and go to state 273
    DEF             reduce using rule 352 (longvalues -> LONG .)
    VARIABLE        reduce using rule 352 (longvalues -> LONG .)
    PRINTLN         reduce using rule 352 (longvalues -> LONG .)
    PRINT           reduce using rule 352 (longvalues -> LONG .)
    READLINE        reduce using rule 352 (longvalues -> LONG .)
    VAR             reduce using rule 352 (longvalues -> LONG .)
    VAL             reduce using rule 352 (longvalues -> LONG .)
    WHILE           reduce using rule 352 (longvalues -> LONG .)
    FOR             reduce using rule 352 (longvalues -> LONG .)
    IF              reduce using rule 352 (longvalues -> LONG .)
    STRING          reduce using rule 352 (longvalues -> LONG .)
    $end            reduce using rule 352 (longvalues -> LONG .)
    LLAVE_D         reduce using rule 352 (longvalues -> LONG .)
    INT             reduce using rule 352 (longvalues -> LONG .)
    DOUBLE          reduce using rule 352 (longvalues -> LONG .)
    LONG            reduce using rule 352 (longvalues -> LONG .)
    FLOAT           reduce using rule 352 (longvalues -> LONG .)
    CHAR            reduce using rule 352 (longvalues -> LONG .)
    RETURN          reduce using rule 352 (longvalues -> LONG .)
    CASE            reduce using rule 352 (longvalues -> LONG .)
    MENOS           reduce using rule 117 (numeros -> LONG .)
    MULTIPLICACION  reduce using rule 117 (numeros -> LONG .)
    DIVISION        reduce using rule 117 (numeros -> LONG .)
    MOD             reduce using rule 117 (numeros -> LONG .)

  ! MAS             [ reduce using rule 117 (numeros -> LONG .) ]


state 199

    (279) aritmetica -> FLOAT . MAS FLOAT
    (359) floatvalues -> FLOAT .
    (118) numeros -> FLOAT .

  ! shift/reduce conflict for MAS resolved as shift
    MAS             shift and go to state 274
    DEF             reduce using rule 359 (floatvalues -> FLOAT .)
    VARIABLE        reduce using rule 359 (floatvalues -> FLOAT .)
    PRINTLN         reduce using rule 359 (floatvalues -> FLOAT .)
    PRINT           reduce using rule 359 (floatvalues -> FLOAT .)
    READLINE        reduce using rule 359 (floatvalues -> FLOAT .)
    VAR             reduce using rule 359 (floatvalues -> FLOAT .)
    VAL             reduce using rule 359 (floatvalues -> FLOAT .)
    WHILE           reduce using rule 359 (floatvalues -> FLOAT .)
    FOR             reduce using rule 359 (floatvalues -> FLOAT .)
    IF              reduce using rule 359 (floatvalues -> FLOAT .)
    STRING          reduce using rule 359 (floatvalues -> FLOAT .)
    $end            reduce using rule 359 (floatvalues -> FLOAT .)
    LLAVE_D         reduce using rule 359 (floatvalues -> FLOAT .)
    INT             reduce using rule 359 (floatvalues -> FLOAT .)
    DOUBLE          reduce using rule 359 (floatvalues -> FLOAT .)
    LONG            reduce using rule 359 (floatvalues -> FLOAT .)
    FLOAT           reduce using rule 359 (floatvalues -> FLOAT .)
    CHAR            reduce using rule 359 (floatvalues -> FLOAT .)
    RETURN          reduce using rule 359 (floatvalues -> FLOAT .)
    CASE            reduce using rule 359 (floatvalues -> FLOAT .)
    MENOS           reduce using rule 118 (numeros -> FLOAT .)
    MULTIPLICACION  reduce using rule 118 (numeros -> FLOAT .)
    DIVISION        reduce using rule 118 (numeros -> FLOAT .)
    MOD             reduce using rule 118 (numeros -> FLOAT .)

  ! MAS             [ reduce using rule 118 (numeros -> FLOAT .) ]


state 200

    (155) returnfun -> returnCastable .
    (159) castingcall -> returnCastable . PUNTO castingfun

    DEF             reduce using rule 155 (returnfun -> returnCastable .)
    VARIABLE        reduce using rule 155 (returnfun -> returnCastable .)
    PRINTLN         reduce using rule 155 (returnfun -> returnCastable .)
    PRINT           reduce using rule 155 (returnfun -> returnCastable .)
    READLINE        reduce using rule 155 (returnfun -> returnCastable .)
    VAR             reduce using rule 155 (returnfun -> returnCastable .)
    VAL             reduce using rule 155 (returnfun -> returnCastable .)
    WHILE           reduce using rule 155 (returnfun -> returnCastable .)
    FOR             reduce using rule 155 (returnfun -> returnCastable .)
    IF              reduce using rule 155 (returnfun -> returnCastable .)
    STRING          reduce using rule 155 (returnfun -> returnCastable .)
    $end            reduce using rule 155 (returnfun -> returnCastable .)
    LLAVE_D         reduce using rule 155 (returnfun -> returnCastable .)
    INT             reduce using rule 155 (returnfun -> returnCastable .)
    DOUBLE          reduce using rule 155 (returnfun -> returnCastable .)
    LONG            reduce using rule 155 (returnfun -> returnCastable .)
    FLOAT           reduce using rule 155 (returnfun -> returnCastable .)
    CHAR            reduce using rule 155 (returnfun -> returnCastable .)
    RETURN          reduce using rule 155 (returnfun -> returnCastable .)
    CASE            reduce using rule 155 (returnfun -> returnCastable .)
    PUNTO           shift and go to state 353


state 201

    (156) returnfun -> castingcall .

    DEF             reduce using rule 156 (returnfun -> castingcall .)
    VARIABLE        reduce using rule 156 (returnfun -> castingcall .)
    PRINTLN         reduce using rule 156 (returnfun -> castingcall .)
    PRINT           reduce using rule 156 (returnfun -> castingcall .)
    READLINE        reduce using rule 156 (returnfun -> castingcall .)
    VAR             reduce using rule 156 (returnfun -> castingcall .)
    VAL             reduce using rule 156 (returnfun -> castingcall .)
    WHILE           reduce using rule 156 (returnfun -> castingcall .)
    FOR             reduce using rule 156 (returnfun -> castingcall .)
    IF              reduce using rule 156 (returnfun -> castingcall .)
    STRING          reduce using rule 156 (returnfun -> castingcall .)
    $end            reduce using rule 156 (returnfun -> castingcall .)
    LLAVE_D         reduce using rule 156 (returnfun -> castingcall .)
    INT             reduce using rule 156 (returnfun -> castingcall .)
    DOUBLE          reduce using rule 156 (returnfun -> castingcall .)
    LONG            reduce using rule 156 (returnfun -> castingcall .)
    FLOAT           reduce using rule 156 (returnfun -> castingcall .)
    CHAR            reduce using rule 156 (returnfun -> castingcall .)
    RETURN          reduce using rule 156 (returnfun -> castingcall .)
    CASE            reduce using rule 156 (returnfun -> castingcall .)


state 202

    (354) longvalues -> stringCastLong .

    DEF             reduce using rule 354 (longvalues -> stringCastLong .)
    VARIABLE        reduce using rule 354 (longvalues -> stringCastLong .)
    PRINTLN         reduce using rule 354 (longvalues -> stringCastLong .)
    PRINT           reduce using rule 354 (longvalues -> stringCastLong .)
    READLINE        reduce using rule 354 (longvalues -> stringCastLong .)
    VAR             reduce using rule 354 (longvalues -> stringCastLong .)
    VAL             reduce using rule 354 (longvalues -> stringCastLong .)
    WHILE           reduce using rule 354 (longvalues -> stringCastLong .)
    FOR             reduce using rule 354 (longvalues -> stringCastLong .)
    IF              reduce using rule 354 (longvalues -> stringCastLong .)
    STRING          reduce using rule 354 (longvalues -> stringCastLong .)
    $end            reduce using rule 354 (longvalues -> stringCastLong .)
    LLAVE_D         reduce using rule 354 (longvalues -> stringCastLong .)
    INT             reduce using rule 354 (longvalues -> stringCastLong .)
    DOUBLE          reduce using rule 354 (longvalues -> stringCastLong .)
    LONG            reduce using rule 354 (longvalues -> stringCastLong .)
    FLOAT           reduce using rule 354 (longvalues -> stringCastLong .)
    CHAR            reduce using rule 354 (longvalues -> stringCastLong .)
    RETURN          reduce using rule 354 (longvalues -> stringCastLong .)
    CASE            reduce using rule 354 (longvalues -> stringCastLong .)


state 203

    (347) intvalues -> stringCastInt .

    DEF             reduce using rule 347 (intvalues -> stringCastInt .)
    VARIABLE        reduce using rule 347 (intvalues -> stringCastInt .)
    PRINTLN         reduce using rule 347 (intvalues -> stringCastInt .)
    PRINT           reduce using rule 347 (intvalues -> stringCastInt .)
    READLINE        reduce using rule 347 (intvalues -> stringCastInt .)
    VAR             reduce using rule 347 (intvalues -> stringCastInt .)
    VAL             reduce using rule 347 (intvalues -> stringCastInt .)
    WHILE           reduce using rule 347 (intvalues -> stringCastInt .)
    FOR             reduce using rule 347 (intvalues -> stringCastInt .)
    IF              reduce using rule 347 (intvalues -> stringCastInt .)
    STRING          reduce using rule 347 (intvalues -> stringCastInt .)
    $end            reduce using rule 347 (intvalues -> stringCastInt .)
    LLAVE_D         reduce using rule 347 (intvalues -> stringCastInt .)
    INT             reduce using rule 347 (intvalues -> stringCastInt .)
    DOUBLE          reduce using rule 347 (intvalues -> stringCastInt .)
    LONG            reduce using rule 347 (intvalues -> stringCastInt .)
    FLOAT           reduce using rule 347 (intvalues -> stringCastInt .)
    CHAR            reduce using rule 347 (intvalues -> stringCastInt .)
    RETURN          reduce using rule 347 (intvalues -> stringCastInt .)
    CASE            reduce using rule 347 (intvalues -> stringCastInt .)


state 204

    (361) floatvalues -> stringCastFloat .

    DEF             reduce using rule 361 (floatvalues -> stringCastFloat .)
    VARIABLE        reduce using rule 361 (floatvalues -> stringCastFloat .)
    PRINTLN         reduce using rule 361 (floatvalues -> stringCastFloat .)
    PRINT           reduce using rule 361 (floatvalues -> stringCastFloat .)
    READLINE        reduce using rule 361 (floatvalues -> stringCastFloat .)
    VAR             reduce using rule 361 (floatvalues -> stringCastFloat .)
    VAL             reduce using rule 361 (floatvalues -> stringCastFloat .)
    WHILE           reduce using rule 361 (floatvalues -> stringCastFloat .)
    FOR             reduce using rule 361 (floatvalues -> stringCastFloat .)
    IF              reduce using rule 361 (floatvalues -> stringCastFloat .)
    STRING          reduce using rule 361 (floatvalues -> stringCastFloat .)
    $end            reduce using rule 361 (floatvalues -> stringCastFloat .)
    LLAVE_D         reduce using rule 361 (floatvalues -> stringCastFloat .)
    INT             reduce using rule 361 (floatvalues -> stringCastFloat .)
    DOUBLE          reduce using rule 361 (floatvalues -> stringCastFloat .)
    LONG            reduce using rule 361 (floatvalues -> stringCastFloat .)
    FLOAT           reduce using rule 361 (floatvalues -> stringCastFloat .)
    CHAR            reduce using rule 361 (floatvalues -> stringCastFloat .)
    RETURN          reduce using rule 361 (floatvalues -> stringCastFloat .)
    CASE            reduce using rule 361 (floatvalues -> stringCastFloat .)


state 205

    (368) doublevalues -> stringCastDouble .

    DEF             reduce using rule 368 (doublevalues -> stringCastDouble .)
    VARIABLE        reduce using rule 368 (doublevalues -> stringCastDouble .)
    PRINTLN         reduce using rule 368 (doublevalues -> stringCastDouble .)
    PRINT           reduce using rule 368 (doublevalues -> stringCastDouble .)
    READLINE        reduce using rule 368 (doublevalues -> stringCastDouble .)
    VAR             reduce using rule 368 (doublevalues -> stringCastDouble .)
    VAL             reduce using rule 368 (doublevalues -> stringCastDouble .)
    WHILE           reduce using rule 368 (doublevalues -> stringCastDouble .)
    FOR             reduce using rule 368 (doublevalues -> stringCastDouble .)
    IF              reduce using rule 368 (doublevalues -> stringCastDouble .)
    STRING          reduce using rule 368 (doublevalues -> stringCastDouble .)
    $end            reduce using rule 368 (doublevalues -> stringCastDouble .)
    LLAVE_D         reduce using rule 368 (doublevalues -> stringCastDouble .)
    INT             reduce using rule 368 (doublevalues -> stringCastDouble .)
    DOUBLE          reduce using rule 368 (doublevalues -> stringCastDouble .)
    LONG            reduce using rule 368 (doublevalues -> stringCastDouble .)
    FLOAT           reduce using rule 368 (doublevalues -> stringCastDouble .)
    CHAR            reduce using rule 368 (doublevalues -> stringCastDouble .)
    RETURN          reduce using rule 368 (doublevalues -> stringCastDouble .)
    CASE            reduce using rule 368 (doublevalues -> stringCastDouble .)


state 206

    (157) returnCastable -> entrada .

    PUNTO           reduce using rule 157 (returnCastable -> entrada .)
    DEF             reduce using rule 157 (returnCastable -> entrada .)
    VARIABLE        reduce using rule 157 (returnCastable -> entrada .)
    PRINTLN         reduce using rule 157 (returnCastable -> entrada .)
    PRINT           reduce using rule 157 (returnCastable -> entrada .)
    READLINE        reduce using rule 157 (returnCastable -> entrada .)
    VAR             reduce using rule 157 (returnCastable -> entrada .)
    VAL             reduce using rule 157 (returnCastable -> entrada .)
    WHILE           reduce using rule 157 (returnCastable -> entrada .)
    FOR             reduce using rule 157 (returnCastable -> entrada .)
    IF              reduce using rule 157 (returnCastable -> entrada .)
    STRING          reduce using rule 157 (returnCastable -> entrada .)
    $end            reduce using rule 157 (returnCastable -> entrada .)
    LLAVE_D         reduce using rule 157 (returnCastable -> entrada .)
    INT             reduce using rule 157 (returnCastable -> entrada .)
    DOUBLE          reduce using rule 157 (returnCastable -> entrada .)
    LONG            reduce using rule 157 (returnCastable -> entrada .)
    FLOAT           reduce using rule 157 (returnCastable -> entrada .)
    CHAR            reduce using rule 157 (returnCastable -> entrada .)
    RETURN          reduce using rule 157 (returnCastable -> entrada .)
    CASE            reduce using rule 157 (returnCastable -> entrada .)


state 207

    (158) returnCastable -> funcall .

    PUNTO           reduce using rule 158 (returnCastable -> funcall .)
    DEF             reduce using rule 158 (returnCastable -> funcall .)
    VARIABLE        reduce using rule 158 (returnCastable -> funcall .)
    PRINTLN         reduce using rule 158 (returnCastable -> funcall .)
    PRINT           reduce using rule 158 (returnCastable -> funcall .)
    READLINE        reduce using rule 158 (returnCastable -> funcall .)
    VAR             reduce using rule 158 (returnCastable -> funcall .)
    VAL             reduce using rule 158 (returnCastable -> funcall .)
    WHILE           reduce using rule 158 (returnCastable -> funcall .)
    FOR             reduce using rule 158 (returnCastable -> funcall .)
    IF              reduce using rule 158 (returnCastable -> funcall .)
    STRING          reduce using rule 158 (returnCastable -> funcall .)
    $end            reduce using rule 158 (returnCastable -> funcall .)
    LLAVE_D         reduce using rule 158 (returnCastable -> funcall .)
    INT             reduce using rule 158 (returnCastable -> funcall .)
    DOUBLE          reduce using rule 158 (returnCastable -> funcall .)
    LONG            reduce using rule 158 (returnCastable -> funcall .)
    FLOAT           reduce using rule 158 (returnCastable -> funcall .)
    CHAR            reduce using rule 158 (returnCastable -> funcall .)
    RETURN          reduce using rule 158 (returnCastable -> funcall .)
    CASE            reduce using rule 158 (returnCastable -> funcall .)


state 208

    (320) asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .

    DEF             reduce using rule 320 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    VARIABLE        reduce using rule 320 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    PRINTLN         reduce using rule 320 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    PRINT           reduce using rule 320 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    READLINE        reduce using rule 320 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    VAR             reduce using rule 320 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    VAL             reduce using rule 320 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    WHILE           reduce using rule 320 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    FOR             reduce using rule 320 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    IF              reduce using rule 320 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    STRING          reduce using rule 320 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    $end            reduce using rule 320 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    LLAVE_D         reduce using rule 320 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    INT             reduce using rule 320 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    DOUBLE          reduce using rule 320 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    LONG            reduce using rule 320 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    FLOAT           reduce using rule 320 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    CHAR            reduce using rule 320 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    RETURN          reduce using rule 320 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)
    CASE            reduce using rule 320 (asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla .)


state 209

    (64) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL VARIABLE
    (349) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL longvalues

    IGUAL           shift and go to state 354


state 210

    (66) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS . IGUAL VARIABLE
    (343) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS . IGUAL intvalues
    (318) asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS . IGUAL sumIntChar

    IGUAL           shift and go to state 355


state 211

    (69) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL VARIABLE
    (356) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL floatvalues

    IGUAL           shift and go to state 356


state 212

    (71) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL VARIABLE
    (363) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL doublevalues
    (312) asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL sumIntDouble
    (314) asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL sumDoubleChar

    IGUAL           shift and go to state 357


state 213

    (75) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL STRING
    (78) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL VARIABLE
    (316) asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL sumStringChar

    IGUAL           shift and go to state 358


state 214

    (82) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL CHAR
    (85) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 359


state 215

    (88) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL booleanos
    (91) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 360


state 216

    (166) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (284) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    CORCHETE_I      shift and go to state 361


state 217

    (322) dectupla -> PAR_I . STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
    (323) dectupla -> PAR_I . STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
    (324) dectupla -> PAR_I . STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
    (325) dectupla -> PAR_I . STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D
    (326) dectupla -> PAR_I . FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
    (327) dectupla -> PAR_I . FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
    (328) dectupla -> PAR_I . FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
    (329) dectupla -> PAR_I . FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D
    (330) dectupla -> PAR_I . DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
    (331) dectupla -> PAR_I . DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
    (332) dectupla -> PAR_I . DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
    (333) dectupla -> PAR_I . DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D
    (334) dectupla -> PAR_I . LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
    (335) dectupla -> PAR_I . LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
    (336) dectupla -> PAR_I . LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
    (337) dectupla -> PAR_I . LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D
    (338) dectupla -> PAR_I . INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
    (339) dectupla -> PAR_I . INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
    (340) dectupla -> PAR_I . INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
    (341) dectupla -> PAR_I . INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    STRINGCLASS     shift and go to state 362
    FLOATCLASS      shift and go to state 366
    DOUBLECLASS     shift and go to state 365
    LONGCLASS       shift and go to state 364
    INTCLASS        shift and go to state 363


state 218

    (295) listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS . CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (293) listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS . CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    CORCHETE_I      shift and go to state 367


state 219

    (50) asignacion -> VAL VARIABLE IGUAL VARIABLE .
    (265) aritmetica -> VARIABLE . aritmeticos numeros
    (267) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (271) aritmetica -> VARIABLE . MAS numeros
    (273) aritmetica -> VARIABLE . MAS VARIABLE
    (160) castingcall -> VARIABLE . PUNTO castingfun
    (150) funcall -> VARIABLE . varparen
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD
    (151) varparen -> . PAR_I valores PAR_D
    (152) varparen -> . PAR_I PAR_D
    (153) varparen -> . varparen PAR_I valores PAR_D
    (154) varparen -> . varparen PAR_I PAR_D

    DEF             reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VARIABLE        reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PRINTLN         reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    PRINT           reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    READLINE        reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VAR             reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    VAL             reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    WHILE           reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    FOR             reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    IF              reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    STRING          reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    $end            reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    INT             reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    DOUBLE          reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    LONG            reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    FLOAT           reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    CHAR            reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    RETURN          reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    CASE            reduce using rule 50 (asignacion -> VAL VARIABLE IGUAL VARIABLE .)
    MAS             shift and go to state 249
    PUNTO           shift and go to state 348
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257
    PAR_I           shift and go to state 45

    aritmeticos                    shift and go to state 248
    varparen                       shift and go to state 43

state 220

    (52) asignacion -> VAL VARIABLE IGUAL aritmetica .
    (268) aritmetica -> aritmetica . aritmeticos numeros
    (269) aritmetica -> aritmetica . aritmeticos VARIABLE
    (274) aritmetica -> aritmetica . MAS numeros
    (275) aritmetica -> aritmetica . MAS VARIABLE
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD

    DEF             reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VAR             reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    STRING          reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    $end            reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    CHAR            reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 52 (asignacion -> VAL VARIABLE IGUAL aritmetica .)
    MAS             shift and go to state 267
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257

    aritmeticos                    shift and go to state 266

state 221

    (54) asignacion -> VAL VARIABLE IGUAL returnfun .

    DEF             reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    VARIABLE        reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    PRINTLN         reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    PRINT           reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    READLINE        reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    VAR             reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    VAL             reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    WHILE           reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    FOR             reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    IF              reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    STRING          reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    $end            reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    LLAVE_D         reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    INT             reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    DOUBLE          reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    LONG            reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    FLOAT           reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    CHAR            reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    RETURN          reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)
    CASE            reduce using rule 54 (asignacion -> VAL VARIABLE IGUAL returnfun .)


state 222

    (179) asignacion -> VAL VARIABLE IGUAL tuple .

    DEF             reduce using rule 179 (asignacion -> VAL VARIABLE IGUAL tuple .)
    VARIABLE        reduce using rule 179 (asignacion -> VAL VARIABLE IGUAL tuple .)
    PRINTLN         reduce using rule 179 (asignacion -> VAL VARIABLE IGUAL tuple .)
    PRINT           reduce using rule 179 (asignacion -> VAL VARIABLE IGUAL tuple .)
    READLINE        reduce using rule 179 (asignacion -> VAL VARIABLE IGUAL tuple .)
    VAR             reduce using rule 179 (asignacion -> VAL VARIABLE IGUAL tuple .)
    VAL             reduce using rule 179 (asignacion -> VAL VARIABLE IGUAL tuple .)
    WHILE           reduce using rule 179 (asignacion -> VAL VARIABLE IGUAL tuple .)
    FOR             reduce using rule 179 (asignacion -> VAL VARIABLE IGUAL tuple .)
    IF              reduce using rule 179 (asignacion -> VAL VARIABLE IGUAL tuple .)
    STRING          reduce using rule 179 (asignacion -> VAL VARIABLE IGUAL tuple .)
    $end            reduce using rule 179 (asignacion -> VAL VARIABLE IGUAL tuple .)
    LLAVE_D         reduce using rule 179 (asignacion -> VAL VARIABLE IGUAL tuple .)
    INT             reduce using rule 179 (asignacion -> VAL VARIABLE IGUAL tuple .)
    DOUBLE          reduce using rule 179 (asignacion -> VAL VARIABLE IGUAL tuple .)
    LONG            reduce using rule 179 (asignacion -> VAL VARIABLE IGUAL tuple .)
    FLOAT           reduce using rule 179 (asignacion -> VAL VARIABLE IGUAL tuple .)
    CHAR            reduce using rule 179 (asignacion -> VAL VARIABLE IGUAL tuple .)
    RETURN          reduce using rule 179 (asignacion -> VAL VARIABLE IGUAL tuple .)
    CASE            reduce using rule 179 (asignacion -> VAL VARIABLE IGUAL tuple .)


state 223

    (350) asignacionLong -> VAL VARIABLE IGUAL longvalues .
    (360) floatvalues -> longvalues .

  ! reduce/reduce conflict for DEF resolved using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VAR resolved using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for IF resolved using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for $end resolved using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for INT resolved using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for CHAR resolved using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    DEF             reduce using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    VARIABLE        reduce using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    PRINTLN         reduce using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    PRINT           reduce using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    READLINE        reduce using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    VAR             reduce using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    VAL             reduce using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    WHILE           reduce using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    FOR             reduce using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    IF              reduce using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    STRING          reduce using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    $end            reduce using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    LLAVE_D         reduce using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    INT             reduce using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    DOUBLE          reduce using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    LONG            reduce using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    FLOAT           reduce using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    CHAR            reduce using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    RETURN          reduce using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)
    CASE            reduce using rule 350 (asignacionLong -> VAL VARIABLE IGUAL longvalues .)

  ! DEF             [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! VARIABLE        [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! PRINTLN         [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! PRINT           [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! READLINE        [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! VAR             [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! VAL             [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! WHILE           [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! FOR             [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! IF              [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! STRING          [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! $end            [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! LLAVE_D         [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! INT             [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! DOUBLE          [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! LONG            [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! FLOAT           [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! CHAR            [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! RETURN          [ reduce using rule 360 (floatvalues -> longvalues .) ]
  ! CASE            [ reduce using rule 360 (floatvalues -> longvalues .) ]


state 224

    (344) asignacionInt -> VAL VARIABLE IGUAL intvalues .
    (353) longvalues -> intvalues .

  ! reduce/reduce conflict for DEF resolved using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VAR resolved using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for IF resolved using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for $end resolved using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for INT resolved using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for CHAR resolved using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    DEF             reduce using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    VARIABLE        reduce using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    PRINTLN         reduce using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    PRINT           reduce using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    READLINE        reduce using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    VAR             reduce using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    VAL             reduce using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    WHILE           reduce using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    FOR             reduce using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    IF              reduce using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    STRING          reduce using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    $end            reduce using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    LLAVE_D         reduce using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    INT             reduce using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    DOUBLE          reduce using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    LONG            reduce using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    FLOAT           reduce using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    CHAR            reduce using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    RETURN          reduce using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)
    CASE            reduce using rule 344 (asignacionInt -> VAL VARIABLE IGUAL intvalues .)

  ! DEF             [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! VARIABLE        [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! PRINTLN         [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! PRINT           [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! READLINE        [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! VAR             [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! VAL             [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! WHILE           [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! FOR             [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! IF              [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! STRING          [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! $end            [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! LLAVE_D         [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! INT             [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! DOUBLE          [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! LONG            [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! FLOAT           [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! CHAR            [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! RETURN          [ reduce using rule 353 (longvalues -> intvalues .) ]
  ! CASE            [ reduce using rule 353 (longvalues -> intvalues .) ]


state 225

    (357) asignacionFloat -> VAL VARIABLE IGUAL floatvalues .
    (367) doublevalues -> floatvalues .

  ! reduce/reduce conflict for DEF resolved using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for PRINT resolved using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for READLINE resolved using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VAR resolved using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for VAL resolved using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for WHILE resolved using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for FOR resolved using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for IF resolved using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for STRING resolved using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for $end resolved using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for LLAVE_D resolved using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for INT resolved using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for LONG resolved using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for FLOAT resolved using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for CHAR resolved using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for RETURN resolved using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
  ! reduce/reduce conflict for CASE resolved using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    DEF             reduce using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    VARIABLE        reduce using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    PRINTLN         reduce using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    PRINT           reduce using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    READLINE        reduce using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    VAR             reduce using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    VAL             reduce using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    WHILE           reduce using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    FOR             reduce using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    IF              reduce using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    STRING          reduce using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    $end            reduce using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    LLAVE_D         reduce using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    INT             reduce using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    DOUBLE          reduce using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    LONG            reduce using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    FLOAT           reduce using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    CHAR            reduce using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    RETURN          reduce using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)
    CASE            reduce using rule 357 (asignacionFloat -> VAL VARIABLE IGUAL floatvalues .)

  ! DEF             [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! VARIABLE        [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! PRINTLN         [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! PRINT           [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! READLINE        [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! VAR             [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! VAL             [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! WHILE           [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! FOR             [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! IF              [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! STRING          [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! $end            [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! LLAVE_D         [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! INT             [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! DOUBLE          [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! LONG            [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! FLOAT           [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! CHAR            [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! RETURN          [ reduce using rule 367 (doublevalues -> floatvalues .) ]
  ! CASE            [ reduce using rule 367 (doublevalues -> floatvalues .) ]


state 226

    (364) asignacionDouble -> VAL VARIABLE IGUAL doublevalues .

    DEF             reduce using rule 364 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    VARIABLE        reduce using rule 364 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    PRINTLN         reduce using rule 364 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    PRINT           reduce using rule 364 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    READLINE        reduce using rule 364 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    VAR             reduce using rule 364 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    VAL             reduce using rule 364 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    WHILE           reduce using rule 364 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    FOR             reduce using rule 364 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    IF              reduce using rule 364 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    STRING          reduce using rule 364 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    $end            reduce using rule 364 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    LLAVE_D         reduce using rule 364 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    INT             reduce using rule 364 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    DOUBLE          reduce using rule 364 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    LONG            reduce using rule 364 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    FLOAT           reduce using rule 364 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    CHAR            reduce using rule 364 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    RETURN          reduce using rule 364 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)
    CASE            reduce using rule 364 (asignacionDouble -> VAL VARIABLE IGUAL doublevalues .)


state 227

    (76) asignacionString -> VAL VARIABLE IGUAL STRING .
    (370) stringCastLong -> STRING . PUNTO TO_LONG
    (369) stringCastInt -> STRING . PUNTO TO_INT
    (371) stringCastFloat -> STRING . PUNTO TO_FLOAT
    (372) stringCastDouble -> STRING . PUNTO TO_DOUBLE
    (290) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (310) sumStringChar -> STRING . MAS CHAR

    DEF             reduce using rule 76 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VARIABLE        reduce using rule 76 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PRINTLN         reduce using rule 76 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PRINT           reduce using rule 76 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    READLINE        reduce using rule 76 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VAR             reduce using rule 76 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    VAL             reduce using rule 76 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    WHILE           reduce using rule 76 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    FOR             reduce using rule 76 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    IF              reduce using rule 76 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    STRING          reduce using rule 76 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    $end            reduce using rule 76 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    LLAVE_D         reduce using rule 76 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    INT             reduce using rule 76 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    DOUBLE          reduce using rule 76 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    LONG            reduce using rule 76 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    FLOAT           reduce using rule 76 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    CHAR            reduce using rule 76 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    RETURN          reduce using rule 76 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    CASE            reduce using rule 76 (asignacionString -> VAL VARIABLE IGUAL STRING .)
    PUNTO           shift and go to state 349
    MAS             shift and go to state 269


state 228

    (83) asignacionChar -> VAL VARIABLE IGUAL CHAR .
    (309) sumIntChar -> CHAR . MAS INT
    (311) sumStringChar -> CHAR . MAS STRING
    (307) sumDoubleChar -> CHAR . MAS DOUBLE

    DEF             reduce using rule 83 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VARIABLE        reduce using rule 83 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    PRINTLN         reduce using rule 83 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    PRINT           reduce using rule 83 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    READLINE        reduce using rule 83 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VAR             reduce using rule 83 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    VAL             reduce using rule 83 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    WHILE           reduce using rule 83 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    FOR             reduce using rule 83 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    IF              reduce using rule 83 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    STRING          reduce using rule 83 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    $end            reduce using rule 83 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    LLAVE_D         reduce using rule 83 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    INT             reduce using rule 83 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    DOUBLE          reduce using rule 83 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    LONG            reduce using rule 83 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    FLOAT           reduce using rule 83 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    CHAR            reduce using rule 83 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    RETURN          reduce using rule 83 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    CASE            reduce using rule 83 (asignacionChar -> VAL VARIABLE IGUAL CHAR .)
    MAS             shift and go to state 271


state 229

    (89) asignacionBoolean -> VAL VARIABLE IGUAL booleanos .

    DEF             reduce using rule 89 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 89 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    PRINTLN         reduce using rule 89 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 89 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    READLINE        reduce using rule 89 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VAR             reduce using rule 89 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    VAL             reduce using rule 89 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 89 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    FOR             reduce using rule 89 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    IF              reduce using rule 89 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    STRING          reduce using rule 89 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    $end            reduce using rule 89 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    LLAVE_D         reduce using rule 89 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    INT             reduce using rule 89 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    DOUBLE          reduce using rule 89 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    LONG            reduce using rule 89 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    FLOAT           reduce using rule 89 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    CHAR            reduce using rule 89 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    RETURN          reduce using rule 89 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 89 (asignacionBoolean -> VAL VARIABLE IGUAL booleanos .)


state 230

    (167) array -> VAL VARIABLE IGUAL ARRAYCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 368


state 231

    (171) list -> VAL VARIABLE IGUAL LISTCLASS . PAR_I valores PAR_D

    PAR_I           shift and go to state 369


state 232

    (321) asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .

    DEF             reduce using rule 321 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    VARIABLE        reduce using rule 321 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    PRINTLN         reduce using rule 321 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    PRINT           reduce using rule 321 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    READLINE        reduce using rule 321 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    VAR             reduce using rule 321 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    VAL             reduce using rule 321 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    WHILE           reduce using rule 321 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    FOR             reduce using rule 321 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    IF              reduce using rule 321 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    STRING          reduce using rule 321 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    $end            reduce using rule 321 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    LLAVE_D         reduce using rule 321 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    INT             reduce using rule 321 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    DOUBLE          reduce using rule 321 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    LONG            reduce using rule 321 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    FLOAT           reduce using rule 321 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    CHAR            reduce using rule 321 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    RETURN          reduce using rule 321 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)
    CASE            reduce using rule 321 (asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla .)


state 233

    (65) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL VARIABLE
    (351) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS . IGUAL longvalues

    IGUAL           shift and go to state 370


state 234

    (67) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS . IGUAL VARIABLE
    (345) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS . IGUAL intvalues
    (319) asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS . IGUAL sumIntChar

    IGUAL           shift and go to state 371


state 235

    (70) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL VARIABLE
    (358) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS . IGUAL floatvalues

    IGUAL           shift and go to state 372


state 236

    (72) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL VARIABLE
    (365) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL doublevalues
    (313) asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL sumIntDouble
    (315) asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS . IGUAL sumDoubleChar

    IGUAL           shift and go to state 373


state 237

    (77) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL STRING
    (79) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL VARIABLE
    (317) asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS . IGUAL sumStringChar

    IGUAL           shift and go to state 374


state 238

    (84) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL CHAR
    (86) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 375


state 239

    (90) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL booleanos
    (92) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS . IGUAL VARIABLE

    IGUAL           shift and go to state 376


state 240

    (168) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS . CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 377


state 241

    (294) listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS . CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS . CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    CORCHETE_I      shift and go to state 378


state 242

    (180) while -> WHILE PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 379


state 243

    (233) condicional -> valorC logicos . condicional
    (233) condicional -> . valorC logicos condicional
    (234) condicional -> . valorC
    (235) valorC -> . VARIABLE
    (236) valorC -> . booleanos
    (237) valorC -> . relacional
    (238) valorC -> . NOT VARIABLE
    (239) valorC -> . NOT booleanos
    (240) valorC -> . NOT relacional
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (244) relacional -> . numeros comparacion numeros
    (245) relacional -> . aritmetica comparacion aritmetica
    (246) relacional -> . aritmetica comparacion numeros
    (247) relacional -> . numeros comparacion aritmetica
    (248) relacional -> . booleanos comparacion booleanos
    (249) relacional -> . STRING comparacion STRING
    (250) relacional -> . CHAR comparacion CHAR
    (251) relacional -> . VARIABLE comparacion numeros
    (252) relacional -> . numeros comparacion VARIABLE
    (253) relacional -> . VARIABLE comparacion booleanos
    (254) relacional -> . booleanos comparacion VARIABLE
    (255) relacional -> . VARIABLE comparacion STRING
    (256) relacional -> . STRING comparacion VARIABLE
    (257) relacional -> . VARIABLE comparacion CHAR
    (258) relacional -> . CHAR comparacion VARIABLE
    (259) relacional -> . VARIABLE comparacion VARIABLE
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VARIABLE        shift and go to state 106
    NOT             shift and go to state 109
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84
    STRING          shift and go to state 112
    CHAR            shift and go to state 113
    INT             shift and go to state 114
    LONG            shift and go to state 115
    FLOAT           shift and go to state 116
    DOUBLE          shift and go to state 117

    valorC                         shift and go to state 105
    condicional                    shift and go to state 380
    booleanos                      shift and go to state 107
    relacional                     shift and go to state 108
    startsWith                     shift and go to state 85
    numeros                        shift and go to state 110
    aritmetica                     shift and go to state 111
    suma                           shift and go to state 118
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 244

    (241) logicos -> AND .

    VARIABLE        reduce using rule 241 (logicos -> AND .)
    NOT             reduce using rule 241 (logicos -> AND .)
    TRUE            reduce using rule 241 (logicos -> AND .)
    FLASE           reduce using rule 241 (logicos -> AND .)
    STRING          reduce using rule 241 (logicos -> AND .)
    CHAR            reduce using rule 241 (logicos -> AND .)
    INT             reduce using rule 241 (logicos -> AND .)
    LONG            reduce using rule 241 (logicos -> AND .)
    FLOAT           reduce using rule 241 (logicos -> AND .)
    DOUBLE          reduce using rule 241 (logicos -> AND .)


state 245

    (242) logicos -> OR .

    VARIABLE        reduce using rule 242 (logicos -> OR .)
    NOT             reduce using rule 242 (logicos -> OR .)
    TRUE            reduce using rule 242 (logicos -> OR .)
    FLASE           reduce using rule 242 (logicos -> OR .)
    STRING          reduce using rule 242 (logicos -> OR .)
    CHAR            reduce using rule 242 (logicos -> OR .)
    INT             reduce using rule 242 (logicos -> OR .)
    LONG            reduce using rule 242 (logicos -> OR .)
    FLOAT           reduce using rule 242 (logicos -> OR .)
    DOUBLE          reduce using rule 242 (logicos -> OR .)


state 246

    (243) logicos -> NOT .

    VARIABLE        reduce using rule 243 (logicos -> NOT .)
    NOT             reduce using rule 243 (logicos -> NOT .)
    TRUE            reduce using rule 243 (logicos -> NOT .)
    FLASE           reduce using rule 243 (logicos -> NOT .)
    STRING          reduce using rule 243 (logicos -> NOT .)
    CHAR            reduce using rule 243 (logicos -> NOT .)
    INT             reduce using rule 243 (logicos -> NOT .)
    LONG            reduce using rule 243 (logicos -> NOT .)
    FLOAT           reduce using rule 243 (logicos -> NOT .)
    DOUBLE          reduce using rule 243 (logicos -> NOT .)


state 247

    (251) relacional -> VARIABLE comparacion . numeros
    (253) relacional -> VARIABLE comparacion . booleanos
    (255) relacional -> VARIABLE comparacion . STRING
    (257) relacional -> VARIABLE comparacion . CHAR
    (259) relacional -> VARIABLE comparacion . VARIABLE
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 384
    CHAR            shift and go to state 385
    VARIABLE        shift and go to state 381
    INT             shift and go to state 79
    LONG            shift and go to state 80
    FLOAT           shift and go to state 81
    DOUBLE          shift and go to state 82
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84

    numeros                        shift and go to state 382
    booleanos                      shift and go to state 383
    startsWith                     shift and go to state 85

state 248

    (265) aritmetica -> VARIABLE aritmeticos . numeros
    (267) aritmetica -> VARIABLE aritmeticos . VARIABLE
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VARIABLE        shift and go to state 386
    INT             shift and go to state 79
    LONG            shift and go to state 80
    FLOAT           shift and go to state 81
    DOUBLE          shift and go to state 82

    numeros                        shift and go to state 387

state 249

    (271) aritmetica -> VARIABLE MAS . numeros
    (273) aritmetica -> VARIABLE MAS . VARIABLE
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VARIABLE        shift and go to state 388
    INT             shift and go to state 79
    LONG            shift and go to state 80
    FLOAT           shift and go to state 81
    DOUBLE          shift and go to state 82

    numeros                        shift and go to state 389

state 250

    (260) comparacion -> IGUAL_COMPARACION .

    STRING          reduce using rule 260 (comparacion -> IGUAL_COMPARACION .)
    CHAR            reduce using rule 260 (comparacion -> IGUAL_COMPARACION .)
    VARIABLE        reduce using rule 260 (comparacion -> IGUAL_COMPARACION .)
    INT             reduce using rule 260 (comparacion -> IGUAL_COMPARACION .)
    LONG            reduce using rule 260 (comparacion -> IGUAL_COMPARACION .)
    FLOAT           reduce using rule 260 (comparacion -> IGUAL_COMPARACION .)
    DOUBLE          reduce using rule 260 (comparacion -> IGUAL_COMPARACION .)
    TRUE            reduce using rule 260 (comparacion -> IGUAL_COMPARACION .)
    FLASE           reduce using rule 260 (comparacion -> IGUAL_COMPARACION .)


state 251

    (261) comparacion -> DIFERENTE .

    STRING          reduce using rule 261 (comparacion -> DIFERENTE .)
    CHAR            reduce using rule 261 (comparacion -> DIFERENTE .)
    VARIABLE        reduce using rule 261 (comparacion -> DIFERENTE .)
    INT             reduce using rule 261 (comparacion -> DIFERENTE .)
    LONG            reduce using rule 261 (comparacion -> DIFERENTE .)
    FLOAT           reduce using rule 261 (comparacion -> DIFERENTE .)
    DOUBLE          reduce using rule 261 (comparacion -> DIFERENTE .)
    TRUE            reduce using rule 261 (comparacion -> DIFERENTE .)
    FLASE           reduce using rule 261 (comparacion -> DIFERENTE .)


state 252

    (262) comparacion -> MAYOR .

    STRING          reduce using rule 262 (comparacion -> MAYOR .)
    CHAR            reduce using rule 262 (comparacion -> MAYOR .)
    VARIABLE        reduce using rule 262 (comparacion -> MAYOR .)
    INT             reduce using rule 262 (comparacion -> MAYOR .)
    LONG            reduce using rule 262 (comparacion -> MAYOR .)
    FLOAT           reduce using rule 262 (comparacion -> MAYOR .)
    DOUBLE          reduce using rule 262 (comparacion -> MAYOR .)
    TRUE            reduce using rule 262 (comparacion -> MAYOR .)
    FLASE           reduce using rule 262 (comparacion -> MAYOR .)


state 253

    (263) comparacion -> MENOR .

    STRING          reduce using rule 263 (comparacion -> MENOR .)
    CHAR            reduce using rule 263 (comparacion -> MENOR .)
    VARIABLE        reduce using rule 263 (comparacion -> MENOR .)
    INT             reduce using rule 263 (comparacion -> MENOR .)
    LONG            reduce using rule 263 (comparacion -> MENOR .)
    FLOAT           reduce using rule 263 (comparacion -> MENOR .)
    DOUBLE          reduce using rule 263 (comparacion -> MENOR .)
    TRUE            reduce using rule 263 (comparacion -> MENOR .)
    FLASE           reduce using rule 263 (comparacion -> MENOR .)


state 254

    (280) aritmeticos -> MENOS .

    VARIABLE        reduce using rule 280 (aritmeticos -> MENOS .)
    INT             reduce using rule 280 (aritmeticos -> MENOS .)
    LONG            reduce using rule 280 (aritmeticos -> MENOS .)
    FLOAT           reduce using rule 280 (aritmeticos -> MENOS .)
    DOUBLE          reduce using rule 280 (aritmeticos -> MENOS .)


state 255

    (281) aritmeticos -> MULTIPLICACION .

    VARIABLE        reduce using rule 281 (aritmeticos -> MULTIPLICACION .)
    INT             reduce using rule 281 (aritmeticos -> MULTIPLICACION .)
    LONG            reduce using rule 281 (aritmeticos -> MULTIPLICACION .)
    FLOAT           reduce using rule 281 (aritmeticos -> MULTIPLICACION .)
    DOUBLE          reduce using rule 281 (aritmeticos -> MULTIPLICACION .)


state 256

    (282) aritmeticos -> DIVISION .

    VARIABLE        reduce using rule 282 (aritmeticos -> DIVISION .)
    INT             reduce using rule 282 (aritmeticos -> DIVISION .)
    LONG            reduce using rule 282 (aritmeticos -> DIVISION .)
    FLOAT           reduce using rule 282 (aritmeticos -> DIVISION .)
    DOUBLE          reduce using rule 282 (aritmeticos -> DIVISION .)


state 257

    (283) aritmeticos -> MOD .

    VARIABLE        reduce using rule 283 (aritmeticos -> MOD .)
    INT             reduce using rule 283 (aritmeticos -> MOD .)
    LONG            reduce using rule 283 (aritmeticos -> MOD .)
    FLOAT           reduce using rule 283 (aritmeticos -> MOD .)
    DOUBLE          reduce using rule 283 (aritmeticos -> MOD .)


state 258

    (248) relacional -> booleanos comparacion . booleanos
    (254) relacional -> booleanos comparacion . VARIABLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    VARIABLE        shift and go to state 391
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84
    STRING          shift and go to state 34

    booleanos                      shift and go to state 390
    startsWith                     shift and go to state 85

state 259

    (238) valorC -> NOT VARIABLE .
    (251) relacional -> VARIABLE . comparacion numeros
    (253) relacional -> VARIABLE . comparacion booleanos
    (255) relacional -> VARIABLE . comparacion STRING
    (257) relacional -> VARIABLE . comparacion CHAR
    (259) relacional -> VARIABLE . comparacion VARIABLE
    (265) aritmetica -> VARIABLE . aritmeticos numeros
    (267) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (271) aritmetica -> VARIABLE . MAS numeros
    (273) aritmetica -> VARIABLE . MAS VARIABLE
    (260) comparacion -> . IGUAL_COMPARACION
    (261) comparacion -> . DIFERENTE
    (262) comparacion -> . MAYOR
    (263) comparacion -> . MENOR
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD

    AND             reduce using rule 238 (valorC -> NOT VARIABLE .)
    OR              reduce using rule 238 (valorC -> NOT VARIABLE .)
    NOT             reduce using rule 238 (valorC -> NOT VARIABLE .)
    PAR_D           reduce using rule 238 (valorC -> NOT VARIABLE .)
    MAS             shift and go to state 249
    IGUAL_COMPARACION shift and go to state 250
    DIFERENTE       shift and go to state 251
    MAYOR           shift and go to state 252
    MENOR           shift and go to state 253
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257

    comparacion                    shift and go to state 247
    aritmeticos                    shift and go to state 248

state 260

    (239) valorC -> NOT booleanos .
    (248) relacional -> booleanos . comparacion booleanos
    (254) relacional -> booleanos . comparacion VARIABLE
    (260) comparacion -> . IGUAL_COMPARACION
    (261) comparacion -> . DIFERENTE
    (262) comparacion -> . MAYOR
    (263) comparacion -> . MENOR

    AND             reduce using rule 239 (valorC -> NOT booleanos .)
    OR              reduce using rule 239 (valorC -> NOT booleanos .)
    NOT             reduce using rule 239 (valorC -> NOT booleanos .)
    PAR_D           reduce using rule 239 (valorC -> NOT booleanos .)
    IGUAL_COMPARACION shift and go to state 250
    DIFERENTE       shift and go to state 251
    MAYOR           shift and go to state 252
    MENOR           shift and go to state 253

    comparacion                    shift and go to state 258

state 261

    (240) valorC -> NOT relacional .

    AND             reduce using rule 240 (valorC -> NOT relacional .)
    OR              reduce using rule 240 (valorC -> NOT relacional .)
    NOT             reduce using rule 240 (valorC -> NOT relacional .)
    PAR_D           reduce using rule 240 (valorC -> NOT relacional .)


state 262

    (244) relacional -> numeros comparacion . numeros
    (247) relacional -> numeros comparacion . aritmetica
    (252) relacional -> numeros comparacion . VARIABLE
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VARIABLE        shift and go to state 394
    INT             shift and go to state 114
    LONG            shift and go to state 115
    FLOAT           shift and go to state 116
    DOUBLE          shift and go to state 117
    CHAR            shift and go to state 170
    STRING          shift and go to state 395

    numeros                        shift and go to state 392
    aritmetica                     shift and go to state 393
    suma                           shift and go to state 118
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 263

    (264) aritmetica -> numeros aritmeticos . numeros
    (266) aritmetica -> numeros aritmeticos . VARIABLE
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VARIABLE        shift and go to state 397
    INT             shift and go to state 79
    LONG            shift and go to state 80
    FLOAT           shift and go to state 81
    DOUBLE          shift and go to state 82

    numeros                        shift and go to state 396

state 264

    (272) aritmetica -> numeros MAS . VARIABLE

    VARIABLE        shift and go to state 398


state 265

    (245) relacional -> aritmetica comparacion . aritmetica
    (246) relacional -> aritmetica comparacion . numeros
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VARIABLE        shift and go to state 401
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    CHAR            shift and go to state 170
    STRING          shift and go to state 395

    aritmetica                     shift and go to state 399
    numeros                        shift and go to state 400
    suma                           shift and go to state 118
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 266

    (268) aritmetica -> aritmetica aritmeticos . numeros
    (269) aritmetica -> aritmetica aritmeticos . VARIABLE
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VARIABLE        shift and go to state 403
    INT             shift and go to state 79
    LONG            shift and go to state 80
    FLOAT           shift and go to state 81
    DOUBLE          shift and go to state 82

    numeros                        shift and go to state 402

state 267

    (274) aritmetica -> aritmetica MAS . numeros
    (275) aritmetica -> aritmetica MAS . VARIABLE
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE

    VARIABLE        shift and go to state 405
    INT             shift and go to state 79
    LONG            shift and go to state 80
    FLOAT           shift and go to state 81
    DOUBLE          shift and go to state 82

    numeros                        shift and go to state 404

state 268

    (249) relacional -> STRING comparacion . STRING
    (256) relacional -> STRING comparacion . VARIABLE

    STRING          shift and go to state 406
    VARIABLE        shift and go to state 407


state 269

    (310) sumStringChar -> STRING MAS . CHAR

    CHAR            shift and go to state 408


state 270

    (250) relacional -> CHAR comparacion . CHAR
    (258) relacional -> CHAR comparacion . VARIABLE

    CHAR            shift and go to state 409
    VARIABLE        shift and go to state 410


state 271

    (309) sumIntChar -> CHAR MAS . INT
    (311) sumStringChar -> CHAR MAS . STRING
    (307) sumDoubleChar -> CHAR MAS . DOUBLE

    INT             shift and go to state 411
    STRING          shift and go to state 412
    DOUBLE          shift and go to state 413


state 272

    (276) aritmetica -> INT MAS . INT
    (308) sumIntChar -> INT MAS . CHAR
    (304) sumIntDouble -> INT MAS . DOUBLE

    INT             shift and go to state 414
    CHAR            shift and go to state 415
    DOUBLE          shift and go to state 416


state 273

    (278) aritmetica -> LONG MAS . LONG

    LONG            shift and go to state 417


state 274

    (279) aritmetica -> FLOAT MAS . FLOAT

    FLOAT           shift and go to state 418


state 275

    (277) aritmetica -> DOUBLE MAS . DOUBLE
    (305) sumIntDouble -> DOUBLE MAS . INT
    (306) sumDoubleChar -> DOUBLE MAS . CHAR

    DOUBLE          shift and go to state 419
    INT             shift and go to state 420
    CHAR            shift and go to state 421


state 276

    (181) for -> FOR PAR_I VAR VARIABLE . ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> FOR PAR_I VAR VARIABLE . ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> FOR PAR_I VAR VARIABLE . ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    ITERATOR        shift and go to state 422


state 277

    (182) for -> FOR PAR_I VARIABLE ITERATOR . VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> FOR PAR_I VARIABLE ITERATOR . INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> FOR PAR_I VARIABLE ITERATOR . INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 423
    INT             shift and go to state 424


state 278

    (226) if -> IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 425


state 279

    (290) startsWith -> STRING PUNTO STARTSWITH PAR_I . STRING PAR_D
    (291) startsWith -> STRING PUNTO STARTSWITH PAR_I . STRING COMA INT PAR_D

    STRING          shift and go to state 426


state 280

    (1) inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D .

    $end            reduce using rule 1 (inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D .)


state 281

    (153) varparen -> varparen PAR_I valores PAR_D .

    PAR_I           reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)
    $end            reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)
    VAR             reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)
    VAL             reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)
    PRINT           reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)
    READLINE        reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)
    WHILE           reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)
    FOR             reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)
    IF              reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)
    INT             reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)
    LONG            reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)
    FLOAT           reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)
    STRING          reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)
    CHAR            reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)
    RETURN          reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)
    PUNTO           reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)
    DEF             reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)
    CASE            reduce using rule 153 (varparen -> varparen PAR_I valores PAR_D .)


state 282

    (187) match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .

    DEF             reduce using rule 187 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VARIABLE        reduce using rule 187 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    PRINTLN         reduce using rule 187 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    PRINT           reduce using rule 187 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    READLINE        reduce using rule 187 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VAR             reduce using rule 187 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    VAL             reduce using rule 187 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    WHILE           reduce using rule 187 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    FOR             reduce using rule 187 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    IF              reduce using rule 187 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    STRING          reduce using rule 187 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    $end            reduce using rule 187 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    LLAVE_D         reduce using rule 187 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    INT             reduce using rule 187 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    DOUBLE          reduce using rule 187 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    LONG            reduce using rule 187 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    FLOAT           reduce using rule 187 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    CHAR            reduce using rule 187 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)
    RETURN          reduce using rule 187 (match -> VARIABLE MATCH LLAVE_I cases LLAVE_D .)


state 283

    (197) casesInt -> caseInt casesInt .

    LLAVE_D         reduce using rule 197 (casesInt -> caseInt casesInt .)


state 284

    (198) casesInt -> caseInt defcase .

    LLAVE_D         reduce using rule 198 (casesInt -> caseInt defcase .)


state 285

    (223) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (195) caseInt -> CASE . INT FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 427
    INT             shift and go to state 304


state 286

    (201) casesLgn -> caseLgn casesLgn .

    LLAVE_D         reduce using rule 201 (casesLgn -> caseLgn casesLgn .)


state 287

    (202) casesLgn -> caseLgn defcase .

    LLAVE_D         reduce using rule 202 (casesLgn -> caseLgn defcase .)


state 288

    (223) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (199) caseLgn -> CASE . LONG FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 427
    LONG            shift and go to state 305


state 289

    (205) casesFlt -> caseFlt casesFlt .

    LLAVE_D         reduce using rule 205 (casesFlt -> caseFlt casesFlt .)


state 290

    (206) casesFlt -> caseFlt defcase .

    LLAVE_D         reduce using rule 206 (casesFlt -> caseFlt defcase .)


state 291

    (223) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (203) caseFlt -> CASE . FLOAT FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 427
    FLOAT           shift and go to state 306


state 292

    (209) casesDob -> caseDob casesDob .

    LLAVE_D         reduce using rule 209 (casesDob -> caseDob casesDob .)


state 293

    (210) casesDob -> caseDob defcase .

    LLAVE_D         reduce using rule 210 (casesDob -> caseDob defcase .)


state 294

    (223) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (207) caseDob -> CASE . DOUBLE FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 427
    DOUBLE          shift and go to state 307


state 295

    (213) casesStr -> caseStr casesStr .

    LLAVE_D         reduce using rule 213 (casesStr -> caseStr casesStr .)


state 296

    (214) casesStr -> caseStr defcase .

    LLAVE_D         reduce using rule 214 (casesStr -> caseStr defcase .)


state 297

    (223) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (211) caseStr -> CASE . STRING FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 427
    STRING          shift and go to state 428


state 298

    (217) casesChar -> caseChar casesChar .

    LLAVE_D         reduce using rule 217 (casesChar -> caseChar casesChar .)


state 299

    (218) casesChar -> caseChar defcase .

    LLAVE_D         reduce using rule 218 (casesChar -> caseChar defcase .)


state 300

    (223) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (215) caseChar -> CASE . CHAR FUNCION_FLECHA codeBlock

    SUBGUION        shift and go to state 427
    CHAR            shift and go to state 309


state 301

    (221) casesBool -> caseBool casesBool .

    LLAVE_D         reduce using rule 221 (casesBool -> caseBool casesBool .)


state 302

    (222) casesBool -> caseBool defcase .

    LLAVE_D         reduce using rule 222 (casesBool -> caseBool defcase .)


state 303

    (223) defcase -> CASE . SUBGUION FUNCION_FLECHA codeBlock
    (219) caseBool -> CASE . booleanos FUNCION_FLECHA codeBlock
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    SUBGUION        shift and go to state 427
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84
    STRING          shift and go to state 34

    booleanos                      shift and go to state 310
    startsWith                     shift and go to state 85

state 304

    (195) caseInt -> CASE INT . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 429


state 305

    (199) caseLgn -> CASE LONG . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 430


state 306

    (203) caseFlt -> CASE FLOAT . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 431


state 307

    (207) caseDob -> CASE DOUBLE . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 432


state 308

    (211) caseStr -> CASE STRING . FUNCION_FLECHA codeBlock
    (290) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    FUNCION_FLECHA  shift and go to state 433
    PUNTO           shift and go to state 67


state 309

    (215) caseChar -> CASE CHAR . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 434


state 310

    (219) caseBool -> CASE booleanos . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 435


state 311

    (176) valores -> valor COMA valores .

    PAR_D           reduce using rule 176 (valores -> valor COMA valores .)


state 312

    (111) valor -> VARIABLE PAR_I VARIABLE . PAR_D

    PAR_D           shift and go to state 436


state 313

    (112) valor -> VARIABLE PAR_I INT . PAR_D

    PAR_D           shift and go to state 437


state 314

    (4) io -> VARIABLE PUNTO VARIABLE PUNTO . VARIABLE PUNTO READLINE

    VARIABLE        shift and go to state 438


state 315

    (229) elseif -> ELSE IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D
    (230) elseif -> ELSE IF PAR_I condicional . PAR_D LLAVE_I contenido LLAVE_D elseif

    PAR_D           shift and go to state 439


state 316

    (231) else -> ELSE LLAVE_I contenido LLAVE_D .

    ELSE            reduce using rule 231 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 231 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 231 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 231 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 231 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 231 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 231 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 231 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 231 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 231 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 231 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 231 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 231 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 231 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 231 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 231 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 231 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 231 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 231 (else -> ELSE LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 231 (else -> ELSE LLAVE_I contenido LLAVE_D .)


state 317

    (33) contenido -> asignacion contenido .

    LLAVE_D         reduce using rule 33 (contenido -> asignacion contenido .)
    RETURN          reduce using rule 33 (contenido -> asignacion contenido .)


state 318

    (34) contenido -> reasignacion contenido .

    LLAVE_D         reduce using rule 34 (contenido -> reasignacion contenido .)
    RETURN          reduce using rule 34 (contenido -> reasignacion contenido .)


state 319

    (35) contenido -> funcall contenido .

    LLAVE_D         reduce using rule 35 (contenido -> funcall contenido .)
    RETURN          reduce using rule 35 (contenido -> funcall contenido .)


state 320

    (36) contenido -> impresion contenido .

    LLAVE_D         reduce using rule 36 (contenido -> impresion contenido .)
    RETURN          reduce using rule 36 (contenido -> impresion contenido .)


state 321

    (37) contenido -> entrada contenido .

    LLAVE_D         reduce using rule 37 (contenido -> entrada contenido .)
    RETURN          reduce using rule 37 (contenido -> entrada contenido .)


state 322

    (38) contenido -> while contenido .

    LLAVE_D         reduce using rule 38 (contenido -> while contenido .)
    RETURN          reduce using rule 38 (contenido -> while contenido .)


state 323

    (39) contenido -> for contenido .

    LLAVE_D         reduce using rule 39 (contenido -> for contenido .)
    RETURN          reduce using rule 39 (contenido -> for contenido .)


state 324

    (41) contenido -> match contenido .

    LLAVE_D         reduce using rule 41 (contenido -> match contenido .)
    RETURN          reduce using rule 41 (contenido -> match contenido .)


state 325

    (40) contenido -> if contenido .

    LLAVE_D         reduce using rule 40 (contenido -> if contenido .)
    RETURN          reduce using rule 40 (contenido -> if contenido .)


state 326

    (42) contenido -> aritmetica contenido .

    LLAVE_D         reduce using rule 42 (contenido -> aritmetica contenido .)
    RETURN          reduce using rule 42 (contenido -> aritmetica contenido .)


state 327

    (43) contenido -> startsWith contenido .

    LLAVE_D         reduce using rule 43 (contenido -> startsWith contenido .)
    RETURN          reduce using rule 43 (contenido -> startsWith contenido .)


state 328

    (93) reasignacion -> VARIABLE IGUAL . valor
    (94) reasignacion -> VARIABLE IGUAL . returnfun
    (95) reasignacion -> VARIABLE IGUAL . aritmetica
    (106) valor -> . STRING
    (107) valor -> . CHAR
    (108) valor -> . VARIABLE
    (109) valor -> . numeros
    (110) valor -> . booleanos
    (111) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (112) valor -> . VARIABLE PAR_I INT PAR_D
    (155) returnfun -> . returnCastable
    (156) returnfun -> . castingcall
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (157) returnCastable -> . entrada
    (158) returnCastable -> . funcall
    (159) castingcall -> . returnCastable PUNTO castingfun
    (160) castingcall -> . VARIABLE PUNTO castingfun
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (150) funcall -> . VARIABLE varparen
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    STRING          shift and go to state 444
    CHAR            shift and go to state 445
    VARIABLE        shift and go to state 440
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84
    READLINE        shift and go to state 19

    valor                          shift and go to state 441
    returnfun                      shift and go to state 442
    aritmetica                     shift and go to state 443
    numeros                        shift and go to state 446
    booleanos                      shift and go to state 78
    returnCastable                 shift and go to state 200
    castingcall                    shift and go to state 201
    suma                           shift and go to state 118
    startsWith                     shift and go to state 85
    entrada                        shift and go to state 206
    funcall                        shift and go to state 207
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 329

    (96) reasignacion -> VARIABLE PAR_I . INT PAR_D IGUAL valor
    (151) varparen -> PAR_I . valores PAR_D
    (152) varparen -> PAR_I . PAR_D
    (175) valores -> . valor
    (176) valores -> . valor COMA valores
    (106) valor -> . STRING
    (107) valor -> . CHAR
    (108) valor -> . VARIABLE
    (109) valor -> . numeros
    (110) valor -> . booleanos
    (111) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (112) valor -> . VARIABLE PAR_I INT PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    INT             shift and go to state 447
    PAR_D           shift and go to state 72
    STRING          shift and go to state 74
    CHAR            shift and go to state 75
    VARIABLE        shift and go to state 76
    LONG            shift and go to state 80
    FLOAT           shift and go to state 81
    DOUBLE          shift and go to state 82
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84

    valor                          shift and go to state 73
    valores                        shift and go to state 71
    numeros                        shift and go to state 77
    booleanos                      shift and go to state 78
    startsWith                     shift and go to state 85

state 330

    (120) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    contenido                      shift and go to state 448
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 331

    (121) funcion -> DEF VARIABLE parametro LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 449


state 332

    (128) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN valor LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN returnfun LLAVE_D
    (131) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I contenido RETURN aritmetica LLAVE_D
    (132) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I RETURN valor LLAVE_D
    (133) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I RETURN VARIABLE LLAVE_D
    (134) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I RETURN returnfun LLAVE_D
    (135) funcion -> DEF VARIABLE parametro dectipo IGUAL . LLAVE_I RETURN aritmetica LLAVE_D

    LLAVE_I         shift and go to state 450


state 333

    (136) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN tuple LLAVE_D
    (137) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN VARIABLE LLAVE_D
    (138) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL . LLAVE_I contenido RETURN returnfun LLAVE_D

    LLAVE_I         shift and go to state 451


state 334

    (139) dectipo -> DOBLE_PUNTO tipo .

    IGUAL           reduce using rule 139 (dectipo -> DOBLE_PUNTO tipo .)


state 335

    (140) dectipoTupla -> DOBLE_PUNTO PAR_I . tipos PAR_D
    (141) tipos -> . tipo
    (142) tipos -> . tipo tiposentry
    (97) tipo -> . CHARCLASS
    (98) tipo -> . STRINGCLASS
    (99) tipo -> . BOOLCLASS
    (100) tipo -> . INTCLASS
    (101) tipo -> . LONGCLASS
    (102) tipo -> . DOUBLECLASS
    (103) tipo -> . FLOATCLASS
    (104) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (105) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 336
    STRINGCLASS     shift and go to state 337
    BOOLCLASS       shift and go to state 338
    INTCLASS        shift and go to state 339
    LONGCLASS       shift and go to state 340
    DOUBLECLASS     shift and go to state 341
    FLOATCLASS      shift and go to state 342
    ARRAYCLASS      shift and go to state 343
    LISTCLASS       shift and go to state 344

    tipos                          shift and go to state 452
    tipo                           shift and go to state 453

state 336

    (97) tipo -> CHARCLASS .

    IGUAL           reduce using rule 97 (tipo -> CHARCLASS .)
    COMA            reduce using rule 97 (tipo -> CHARCLASS .)
    PAR_D           reduce using rule 97 (tipo -> CHARCLASS .)
    CORCHETE_D      reduce using rule 97 (tipo -> CHARCLASS .)


state 337

    (98) tipo -> STRINGCLASS .

    IGUAL           reduce using rule 98 (tipo -> STRINGCLASS .)
    COMA            reduce using rule 98 (tipo -> STRINGCLASS .)
    PAR_D           reduce using rule 98 (tipo -> STRINGCLASS .)
    CORCHETE_D      reduce using rule 98 (tipo -> STRINGCLASS .)


state 338

    (99) tipo -> BOOLCLASS .

    IGUAL           reduce using rule 99 (tipo -> BOOLCLASS .)
    COMA            reduce using rule 99 (tipo -> BOOLCLASS .)
    PAR_D           reduce using rule 99 (tipo -> BOOLCLASS .)
    CORCHETE_D      reduce using rule 99 (tipo -> BOOLCLASS .)


state 339

    (100) tipo -> INTCLASS .

    IGUAL           reduce using rule 100 (tipo -> INTCLASS .)
    COMA            reduce using rule 100 (tipo -> INTCLASS .)
    PAR_D           reduce using rule 100 (tipo -> INTCLASS .)
    CORCHETE_D      reduce using rule 100 (tipo -> INTCLASS .)


state 340

    (101) tipo -> LONGCLASS .

    IGUAL           reduce using rule 101 (tipo -> LONGCLASS .)
    COMA            reduce using rule 101 (tipo -> LONGCLASS .)
    PAR_D           reduce using rule 101 (tipo -> LONGCLASS .)
    CORCHETE_D      reduce using rule 101 (tipo -> LONGCLASS .)


state 341

    (102) tipo -> DOUBLECLASS .

    IGUAL           reduce using rule 102 (tipo -> DOUBLECLASS .)
    COMA            reduce using rule 102 (tipo -> DOUBLECLASS .)
    PAR_D           reduce using rule 102 (tipo -> DOUBLECLASS .)
    CORCHETE_D      reduce using rule 102 (tipo -> DOUBLECLASS .)


state 342

    (103) tipo -> FLOATCLASS .

    IGUAL           reduce using rule 103 (tipo -> FLOATCLASS .)
    COMA            reduce using rule 103 (tipo -> FLOATCLASS .)
    PAR_D           reduce using rule 103 (tipo -> FLOATCLASS .)
    CORCHETE_D      reduce using rule 103 (tipo -> FLOATCLASS .)


state 343

    (104) tipo -> ARRAYCLASS . CORCHETE_I tipo CORCHETE_D

    CORCHETE_I      shift and go to state 454


state 344

    (105) tipo -> LISTCLASS . CORCHETE_I tipo CORCHETE_D

    CORCHETE_I      shift and go to state 455


state 345

    (126) parametros -> PAR_I declaracion PAR_D .
    (127) parametros -> PAR_I declaracion PAR_D . parametros
    (126) parametros -> . PAR_I declaracion PAR_D
    (127) parametros -> . PAR_I declaracion PAR_D parametros

    IGUAL           reduce using rule 126 (parametros -> PAR_I declaracion PAR_D .)
    LLAVE_I         reduce using rule 126 (parametros -> PAR_I declaracion PAR_D .)
    DOBLE_PUNTO     reduce using rule 126 (parametros -> PAR_I declaracion PAR_D .)
    PAR_I           shift and go to state 456

    parametros                     shift and go to state 457

state 346

    (122) declaracion -> VARIABLE DOBLE_PUNTO . tipo
    (123) declaracion -> VARIABLE DOBLE_PUNTO . tipo IGUAL valor
    (97) tipo -> . CHARCLASS
    (98) tipo -> . STRINGCLASS
    (99) tipo -> . BOOLCLASS
    (100) tipo -> . INTCLASS
    (101) tipo -> . LONGCLASS
    (102) tipo -> . DOUBLECLASS
    (103) tipo -> . FLOATCLASS
    (104) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (105) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 336
    STRINGCLASS     shift and go to state 337
    BOOLCLASS       shift and go to state 338
    INTCLASS        shift and go to state 339
    LONGCLASS       shift and go to state 340
    DOUBLECLASS     shift and go to state 341
    FLOATCLASS      shift and go to state 342
    ARRAYCLASS      shift and go to state 343
    LISTCLASS       shift and go to state 344

    tipo                           shift and go to state 458

state 347

    (147) valorI -> valor MAS valorI .

    PAR_D           reduce using rule 147 (valorI -> valor MAS valorI .)


state 348

    (160) castingcall -> VARIABLE PUNTO . castingfun
    (161) castingfun -> . TO_INT
    (162) castingfun -> . TO_DOUBLE
    (163) castingfun -> . TO_FLOAT
    (164) castingfun -> . TO_LONG

    TO_INT          shift and go to state 460
    TO_DOUBLE       shift and go to state 461
    TO_FLOAT        shift and go to state 462
    TO_LONG         shift and go to state 463

    castingfun                     shift and go to state 459

state 349

    (370) stringCastLong -> STRING PUNTO . TO_LONG
    (369) stringCastInt -> STRING PUNTO . TO_INT
    (371) stringCastFloat -> STRING PUNTO . TO_FLOAT
    (372) stringCastDouble -> STRING PUNTO . TO_DOUBLE
    (290) startsWith -> STRING PUNTO . STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> STRING PUNTO . STARTSWITH PAR_I STRING COMA INT PAR_D

    TO_LONG         shift and go to state 464
    TO_INT          shift and go to state 465
    TO_FLOAT        shift and go to state 466
    TO_DOUBLE       shift and go to state 467
    STARTSWITH      shift and go to state 126


state 350

    (165) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (175) valores -> . valor
    (176) valores -> . valor COMA valores
    (106) valor -> . STRING
    (107) valor -> . CHAR
    (108) valor -> . VARIABLE
    (109) valor -> . numeros
    (110) valor -> . booleanos
    (111) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (112) valor -> . VARIABLE PAR_I INT PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 74
    CHAR            shift and go to state 75
    VARIABLE        shift and go to state 76
    INT             shift and go to state 79
    LONG            shift and go to state 80
    FLOAT           shift and go to state 81
    DOUBLE          shift and go to state 82
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84

    valores                        shift and go to state 468
    valor                          shift and go to state 73
    numeros                        shift and go to state 77
    booleanos                      shift and go to state 78
    startsWith                     shift and go to state 85

state 351

    (177) tuple -> PAR_I valores . PAR_D

    PAR_D           shift and go to state 469


state 352

    (172) list -> VAR VARIABLE IGUAL LISTCLASS PAR_I . valores PAR_D
    (175) valores -> . valor
    (176) valores -> . valor COMA valores
    (106) valor -> . STRING
    (107) valor -> . CHAR
    (108) valor -> . VARIABLE
    (109) valor -> . numeros
    (110) valor -> . booleanos
    (111) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (112) valor -> . VARIABLE PAR_I INT PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 74
    CHAR            shift and go to state 75
    VARIABLE        shift and go to state 76
    INT             shift and go to state 79
    LONG            shift and go to state 80
    FLOAT           shift and go to state 81
    DOUBLE          shift and go to state 82
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84

    valores                        shift and go to state 470
    valor                          shift and go to state 73
    numeros                        shift and go to state 77
    booleanos                      shift and go to state 78
    startsWith                     shift and go to state 85

state 353

    (159) castingcall -> returnCastable PUNTO . castingfun
    (161) castingfun -> . TO_INT
    (162) castingfun -> . TO_DOUBLE
    (163) castingfun -> . TO_FLOAT
    (164) castingfun -> . TO_LONG

    TO_INT          shift and go to state 460
    TO_DOUBLE       shift and go to state 461
    TO_FLOAT        shift and go to state 462
    TO_LONG         shift and go to state 463

    castingfun                     shift and go to state 471

state 354

    (64) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . VARIABLE
    (349) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . longvalues
    (352) longvalues -> . LONG
    (353) longvalues -> . intvalues
    (354) longvalues -> . stringCastLong
    (346) intvalues -> . INT
    (347) intvalues -> . stringCastInt
    (370) stringCastLong -> . STRING PUNTO TO_LONG
    (369) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 472
    LONG            shift and go to state 474
    INT             shift and go to state 476
    STRING          shift and go to state 477

    longvalues                     shift and go to state 473
    intvalues                      shift and go to state 475
    stringCastLong                 shift and go to state 202
    stringCastInt                  shift and go to state 203

state 355

    (66) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL . VARIABLE
    (343) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL . intvalues
    (318) asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL . sumIntChar
    (346) intvalues -> . INT
    (347) intvalues -> . stringCastInt
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (369) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 478
    INT             shift and go to state 481
    CHAR            shift and go to state 482
    STRING          shift and go to state 483

    intvalues                      shift and go to state 479
    sumIntChar                     shift and go to state 480
    stringCastInt                  shift and go to state 203

state 356

    (69) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . VARIABLE
    (356) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . floatvalues
    (359) floatvalues -> . FLOAT
    (360) floatvalues -> . longvalues
    (361) floatvalues -> . stringCastFloat
    (352) longvalues -> . LONG
    (353) longvalues -> . intvalues
    (354) longvalues -> . stringCastLong
    (371) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (346) intvalues -> . INT
    (347) intvalues -> . stringCastInt
    (370) stringCastLong -> . STRING PUNTO TO_LONG
    (369) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 484
    FLOAT           shift and go to state 486
    LONG            shift and go to state 474
    STRING          shift and go to state 488
    INT             shift and go to state 476

    floatvalues                    shift and go to state 485
    longvalues                     shift and go to state 487
    stringCastFloat                shift and go to state 204
    intvalues                      shift and go to state 475
    stringCastLong                 shift and go to state 202
    stringCastInt                  shift and go to state 203

state 357

    (71) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . VARIABLE
    (363) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . doublevalues
    (312) asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . sumIntDouble
    (314) asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . sumDoubleChar
    (366) doublevalues -> . DOUBLE
    (367) doublevalues -> . floatvalues
    (368) doublevalues -> . stringCastDouble
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE
    (359) floatvalues -> . FLOAT
    (360) floatvalues -> . longvalues
    (361) floatvalues -> . stringCastFloat
    (372) stringCastDouble -> . STRING PUNTO TO_DOUBLE
    (352) longvalues -> . LONG
    (353) longvalues -> . intvalues
    (354) longvalues -> . stringCastLong
    (371) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (346) intvalues -> . INT
    (347) intvalues -> . stringCastInt
    (370) stringCastLong -> . STRING PUNTO TO_LONG
    (369) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 489
    DOUBLE          shift and go to state 493
    INT             shift and go to state 495
    CHAR            shift and go to state 496
    FLOAT           shift and go to state 486
    STRING          shift and go to state 497
    LONG            shift and go to state 474

    doublevalues                   shift and go to state 490
    sumIntDouble                   shift and go to state 491
    sumDoubleChar                  shift and go to state 492
    floatvalues                    shift and go to state 494
    stringCastDouble               shift and go to state 205
    longvalues                     shift and go to state 487
    stringCastFloat                shift and go to state 204
    intvalues                      shift and go to state 475
    stringCastLong                 shift and go to state 202
    stringCastInt                  shift and go to state 203

state 358

    (75) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . STRING
    (78) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . VARIABLE
    (316) asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . sumStringChar
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING

    STRING          shift and go to state 499
    VARIABLE        shift and go to state 498
    CHAR            shift and go to state 501

    sumStringChar                  shift and go to state 500

state 359

    (82) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . CHAR
    (85) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . VARIABLE

    CHAR            shift and go to state 503
    VARIABLE        shift and go to state 502


state 360

    (88) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . booleanos
    (91) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . VARIABLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    VARIABLE        shift and go to state 504
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84
    STRING          shift and go to state 34

    booleanos                      shift and go to state 505
    startsWith                     shift and go to state 85

state 361

    (166) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (284) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (97) tipo -> . CHARCLASS
    (98) tipo -> . STRINGCLASS
    (99) tipo -> . BOOLCLASS
    (100) tipo -> . INTCLASS
    (101) tipo -> . LONGCLASS
    (102) tipo -> . DOUBLECLASS
    (103) tipo -> . FLOATCLASS
    (104) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (105) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    INTCLASS        shift and go to state 507
    DOUBLECLASS     shift and go to state 508
    CHARCLASS       shift and go to state 336
    STRINGCLASS     shift and go to state 337
    BOOLCLASS       shift and go to state 338
    LONGCLASS       shift and go to state 340
    FLOATCLASS      shift and go to state 342
    ARRAYCLASS      shift and go to state 343
    LISTCLASS       shift and go to state 344

    tipo                           shift and go to state 506

state 362

    (322) dectupla -> PAR_I STRINGCLASS . COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
    (323) dectupla -> PAR_I STRINGCLASS . COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
    (324) dectupla -> PAR_I STRINGCLASS . COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
    (325) dectupla -> PAR_I STRINGCLASS . COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D

    COMA            shift and go to state 509


state 363

    (338) dectupla -> PAR_I INTCLASS . COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
    (339) dectupla -> PAR_I INTCLASS . COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
    (340) dectupla -> PAR_I INTCLASS . COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
    (341) dectupla -> PAR_I INTCLASS . COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    COMA            shift and go to state 510


state 364

    (334) dectupla -> PAR_I LONGCLASS . COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
    (335) dectupla -> PAR_I LONGCLASS . COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
    (336) dectupla -> PAR_I LONGCLASS . COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
    (337) dectupla -> PAR_I LONGCLASS . COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D

    COMA            shift and go to state 511


state 365

    (330) dectupla -> PAR_I DOUBLECLASS . COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
    (331) dectupla -> PAR_I DOUBLECLASS . COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
    (332) dectupla -> PAR_I DOUBLECLASS . COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
    (333) dectupla -> PAR_I DOUBLECLASS . COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D

    COMA            shift and go to state 512


state 366

    (326) dectupla -> PAR_I FLOATCLASS . COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
    (327) dectupla -> PAR_I FLOATCLASS . COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
    (328) dectupla -> PAR_I FLOATCLASS . COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
    (329) dectupla -> PAR_I FLOATCLASS . COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D

    COMA            shift and go to state 513


state 367

    (295) listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I . CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (293) listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I . STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    CHARCLASS       shift and go to state 514
    STRINGCLASS     shift and go to state 515


state 368

    (167) array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I . valores PAR_D
    (175) valores -> . valor
    (176) valores -> . valor COMA valores
    (106) valor -> . STRING
    (107) valor -> . CHAR
    (108) valor -> . VARIABLE
    (109) valor -> . numeros
    (110) valor -> . booleanos
    (111) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (112) valor -> . VARIABLE PAR_I INT PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 74
    CHAR            shift and go to state 75
    VARIABLE        shift and go to state 76
    INT             shift and go to state 79
    LONG            shift and go to state 80
    FLOAT           shift and go to state 81
    DOUBLE          shift and go to state 82
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84

    valores                        shift and go to state 516
    valor                          shift and go to state 73
    numeros                        shift and go to state 77
    booleanos                      shift and go to state 78
    startsWith                     shift and go to state 85

state 369

    (171) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I . valores PAR_D
    (175) valores -> . valor
    (176) valores -> . valor COMA valores
    (106) valor -> . STRING
    (107) valor -> . CHAR
    (108) valor -> . VARIABLE
    (109) valor -> . numeros
    (110) valor -> . booleanos
    (111) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (112) valor -> . VARIABLE PAR_I INT PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 74
    CHAR            shift and go to state 75
    VARIABLE        shift and go to state 76
    INT             shift and go to state 79
    LONG            shift and go to state 80
    FLOAT           shift and go to state 81
    DOUBLE          shift and go to state 82
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84

    valores                        shift and go to state 517
    valor                          shift and go to state 73
    numeros                        shift and go to state 77
    booleanos                      shift and go to state 78
    startsWith                     shift and go to state 85

state 370

    (65) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . VARIABLE
    (351) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL . longvalues
    (352) longvalues -> . LONG
    (353) longvalues -> . intvalues
    (354) longvalues -> . stringCastLong
    (346) intvalues -> . INT
    (347) intvalues -> . stringCastInt
    (370) stringCastLong -> . STRING PUNTO TO_LONG
    (369) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 518
    LONG            shift and go to state 474
    INT             shift and go to state 476
    STRING          shift and go to state 477

    longvalues                     shift and go to state 519
    intvalues                      shift and go to state 475
    stringCastLong                 shift and go to state 202
    stringCastInt                  shift and go to state 203

state 371

    (67) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL . VARIABLE
    (345) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL . intvalues
    (319) asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL . sumIntChar
    (346) intvalues -> . INT
    (347) intvalues -> . stringCastInt
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (369) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 520
    INT             shift and go to state 481
    CHAR            shift and go to state 482
    STRING          shift and go to state 483

    intvalues                      shift and go to state 521
    sumIntChar                     shift and go to state 522
    stringCastInt                  shift and go to state 203

state 372

    (70) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . VARIABLE
    (358) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL . floatvalues
    (359) floatvalues -> . FLOAT
    (360) floatvalues -> . longvalues
    (361) floatvalues -> . stringCastFloat
    (352) longvalues -> . LONG
    (353) longvalues -> . intvalues
    (354) longvalues -> . stringCastLong
    (371) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (346) intvalues -> . INT
    (347) intvalues -> . stringCastInt
    (370) stringCastLong -> . STRING PUNTO TO_LONG
    (369) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 523
    FLOAT           shift and go to state 486
    LONG            shift and go to state 474
    STRING          shift and go to state 488
    INT             shift and go to state 476

    floatvalues                    shift and go to state 524
    longvalues                     shift and go to state 487
    stringCastFloat                shift and go to state 204
    intvalues                      shift and go to state 475
    stringCastLong                 shift and go to state 202
    stringCastInt                  shift and go to state 203

state 373

    (72) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . VARIABLE
    (365) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . doublevalues
    (313) asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . sumIntDouble
    (315) asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL . sumDoubleChar
    (366) doublevalues -> . DOUBLE
    (367) doublevalues -> . floatvalues
    (368) doublevalues -> . stringCastDouble
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE
    (359) floatvalues -> . FLOAT
    (360) floatvalues -> . longvalues
    (361) floatvalues -> . stringCastFloat
    (372) stringCastDouble -> . STRING PUNTO TO_DOUBLE
    (352) longvalues -> . LONG
    (353) longvalues -> . intvalues
    (354) longvalues -> . stringCastLong
    (371) stringCastFloat -> . STRING PUNTO TO_FLOAT
    (346) intvalues -> . INT
    (347) intvalues -> . stringCastInt
    (370) stringCastLong -> . STRING PUNTO TO_LONG
    (369) stringCastInt -> . STRING PUNTO TO_INT

    VARIABLE        shift and go to state 525
    DOUBLE          shift and go to state 493
    INT             shift and go to state 495
    CHAR            shift and go to state 496
    FLOAT           shift and go to state 486
    STRING          shift and go to state 497
    LONG            shift and go to state 474

    doublevalues                   shift and go to state 526
    sumIntDouble                   shift and go to state 527
    sumDoubleChar                  shift and go to state 528
    floatvalues                    shift and go to state 494
    stringCastDouble               shift and go to state 205
    longvalues                     shift and go to state 487
    stringCastFloat                shift and go to state 204
    intvalues                      shift and go to state 475
    stringCastLong                 shift and go to state 202
    stringCastInt                  shift and go to state 203

state 374

    (77) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . STRING
    (79) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . VARIABLE
    (317) asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL . sumStringChar
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING

    STRING          shift and go to state 530
    VARIABLE        shift and go to state 529
    CHAR            shift and go to state 501

    sumStringChar                  shift and go to state 531

state 375

    (84) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . CHAR
    (86) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL . VARIABLE

    CHAR            shift and go to state 533
    VARIABLE        shift and go to state 532


state 376

    (90) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . booleanos
    (92) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL . VARIABLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    VARIABLE        shift and go to state 534
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84
    STRING          shift and go to state 34

    booleanos                      shift and go to state 535
    startsWith                     shift and go to state 85

state 377

    (168) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I . tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (97) tipo -> . CHARCLASS
    (98) tipo -> . STRINGCLASS
    (99) tipo -> . BOOLCLASS
    (100) tipo -> . INTCLASS
    (101) tipo -> . LONGCLASS
    (102) tipo -> . DOUBLECLASS
    (103) tipo -> . FLOATCLASS
    (104) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (105) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 336
    STRINGCLASS     shift and go to state 337
    BOOLCLASS       shift and go to state 338
    INTCLASS        shift and go to state 339
    LONGCLASS       shift and go to state 340
    DOUBLECLASS     shift and go to state 341
    FLOATCLASS      shift and go to state 342
    ARRAYCLASS      shift and go to state 343
    LISTCLASS       shift and go to state 344

    tipo                           shift and go to state 536

state 378

    (294) listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I . CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I . STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    CHARCLASS       shift and go to state 537
    STRINGCLASS     shift and go to state 538


state 379

    (180) while -> WHILE PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    contenido                      shift and go to state 539
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 380

    (233) condicional -> valorC logicos condicional .

    PAR_D           reduce using rule 233 (condicional -> valorC logicos condicional .)


state 381

    (259) relacional -> VARIABLE comparacion VARIABLE .

    AND             reduce using rule 259 (relacional -> VARIABLE comparacion VARIABLE .)
    OR              reduce using rule 259 (relacional -> VARIABLE comparacion VARIABLE .)
    NOT             reduce using rule 259 (relacional -> VARIABLE comparacion VARIABLE .)
    PAR_D           reduce using rule 259 (relacional -> VARIABLE comparacion VARIABLE .)


state 382

    (251) relacional -> VARIABLE comparacion numeros .

    AND             reduce using rule 251 (relacional -> VARIABLE comparacion numeros .)
    OR              reduce using rule 251 (relacional -> VARIABLE comparacion numeros .)
    NOT             reduce using rule 251 (relacional -> VARIABLE comparacion numeros .)
    PAR_D           reduce using rule 251 (relacional -> VARIABLE comparacion numeros .)


state 383

    (253) relacional -> VARIABLE comparacion booleanos .

    AND             reduce using rule 253 (relacional -> VARIABLE comparacion booleanos .)
    OR              reduce using rule 253 (relacional -> VARIABLE comparacion booleanos .)
    NOT             reduce using rule 253 (relacional -> VARIABLE comparacion booleanos .)
    PAR_D           reduce using rule 253 (relacional -> VARIABLE comparacion booleanos .)


state 384

    (255) relacional -> VARIABLE comparacion STRING .
    (290) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    AND             reduce using rule 255 (relacional -> VARIABLE comparacion STRING .)
    OR              reduce using rule 255 (relacional -> VARIABLE comparacion STRING .)
    NOT             reduce using rule 255 (relacional -> VARIABLE comparacion STRING .)
    PAR_D           reduce using rule 255 (relacional -> VARIABLE comparacion STRING .)
    PUNTO           shift and go to state 67


state 385

    (257) relacional -> VARIABLE comparacion CHAR .

    AND             reduce using rule 257 (relacional -> VARIABLE comparacion CHAR .)
    OR              reduce using rule 257 (relacional -> VARIABLE comparacion CHAR .)
    NOT             reduce using rule 257 (relacional -> VARIABLE comparacion CHAR .)
    PAR_D           reduce using rule 257 (relacional -> VARIABLE comparacion CHAR .)


state 386

    (267) aritmetica -> VARIABLE aritmeticos VARIABLE .

    MAS             reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    IGUAL_COMPARACION reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MAYOR           reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MENOR           reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MENOS           reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DIVISION        reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    MOD             reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VAR             reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VAL             reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PRINT           reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    READLINE        reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    WHILE           reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    FOR             reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    IF              reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    INT             reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    LONG            reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    FLOAT           reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    STRING          reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    CHAR            reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    DEF             reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    $end            reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    RETURN          reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    CASE            reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    AND             reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    OR              reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    NOT             reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)
    PAR_D           reduce using rule 267 (aritmetica -> VARIABLE aritmeticos VARIABLE .)


state 387

    (265) aritmetica -> VARIABLE aritmeticos numeros .

    MAS             reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    IGUAL_COMPARACION reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    DIFERENTE       reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    MAYOR           reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    MENOR           reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    MENOS           reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    DIVISION        reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    MOD             reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    VAR             reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    VAL             reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    VARIABLE        reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    PRINTLN         reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    PRINT           reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    READLINE        reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    WHILE           reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    FOR             reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    IF              reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    INT             reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    DOUBLE          reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    LONG            reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    FLOAT           reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    STRING          reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    CHAR            reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    LLAVE_D         reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    DEF             reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    $end            reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    RETURN          reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    CASE            reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    AND             reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    OR              reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    NOT             reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)
    PAR_D           reduce using rule 265 (aritmetica -> VARIABLE aritmeticos numeros .)


state 388

    (273) aritmetica -> VARIABLE MAS VARIABLE .

    MAS             reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    IGUAL_COMPARACION reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    DIFERENTE       reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    MAYOR           reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    MENOR           reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    MENOS           reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    MULTIPLICACION  reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    DIVISION        reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    MOD             reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    VAR             reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    VAL             reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    VARIABLE        reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    PRINTLN         reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    PRINT           reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    READLINE        reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    WHILE           reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    FOR             reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    IF              reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    INT             reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    DOUBLE          reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    LONG            reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    FLOAT           reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    STRING          reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    CHAR            reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    LLAVE_D         reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    DEF             reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    $end            reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    RETURN          reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    CASE            reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    AND             reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    OR              reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    NOT             reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)
    PAR_D           reduce using rule 273 (aritmetica -> VARIABLE MAS VARIABLE .)


state 389

    (271) aritmetica -> VARIABLE MAS numeros .

    MAS             reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    IGUAL_COMPARACION reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    DIFERENTE       reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    MAYOR           reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    MENOR           reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    MENOS           reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    MULTIPLICACION  reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    DIVISION        reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    MOD             reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    VAR             reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    VAL             reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    VARIABLE        reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    PRINTLN         reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    PRINT           reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    READLINE        reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    WHILE           reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    FOR             reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    IF              reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    INT             reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    DOUBLE          reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    LONG            reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    FLOAT           reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    STRING          reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    CHAR            reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    LLAVE_D         reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    DEF             reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    $end            reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    RETURN          reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    CASE            reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    AND             reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    OR              reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    NOT             reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)
    PAR_D           reduce using rule 271 (aritmetica -> VARIABLE MAS numeros .)


state 390

    (248) relacional -> booleanos comparacion booleanos .

    AND             reduce using rule 248 (relacional -> booleanos comparacion booleanos .)
    OR              reduce using rule 248 (relacional -> booleanos comparacion booleanos .)
    NOT             reduce using rule 248 (relacional -> booleanos comparacion booleanos .)
    PAR_D           reduce using rule 248 (relacional -> booleanos comparacion booleanos .)


state 391

    (254) relacional -> booleanos comparacion VARIABLE .

    AND             reduce using rule 254 (relacional -> booleanos comparacion VARIABLE .)
    OR              reduce using rule 254 (relacional -> booleanos comparacion VARIABLE .)
    NOT             reduce using rule 254 (relacional -> booleanos comparacion VARIABLE .)
    PAR_D           reduce using rule 254 (relacional -> booleanos comparacion VARIABLE .)


state 392

    (244) relacional -> numeros comparacion numeros .
    (264) aritmetica -> numeros . aritmeticos numeros
    (266) aritmetica -> numeros . aritmeticos VARIABLE
    (272) aritmetica -> numeros . MAS VARIABLE
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD

    AND             reduce using rule 244 (relacional -> numeros comparacion numeros .)
    OR              reduce using rule 244 (relacional -> numeros comparacion numeros .)
    NOT             reduce using rule 244 (relacional -> numeros comparacion numeros .)
    PAR_D           reduce using rule 244 (relacional -> numeros comparacion numeros .)
    MAS             shift and go to state 264
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257

    aritmeticos                    shift and go to state 263

state 393

    (247) relacional -> numeros comparacion aritmetica .
    (268) aritmetica -> aritmetica . aritmeticos numeros
    (269) aritmetica -> aritmetica . aritmeticos VARIABLE
    (274) aritmetica -> aritmetica . MAS numeros
    (275) aritmetica -> aritmetica . MAS VARIABLE
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD

    AND             reduce using rule 247 (relacional -> numeros comparacion aritmetica .)
    OR              reduce using rule 247 (relacional -> numeros comparacion aritmetica .)
    NOT             reduce using rule 247 (relacional -> numeros comparacion aritmetica .)
    PAR_D           reduce using rule 247 (relacional -> numeros comparacion aritmetica .)
    MAS             shift and go to state 267
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257

    aritmeticos                    shift and go to state 266

state 394

    (252) relacional -> numeros comparacion VARIABLE .
    (265) aritmetica -> VARIABLE . aritmeticos numeros
    (267) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (271) aritmetica -> VARIABLE . MAS numeros
    (273) aritmetica -> VARIABLE . MAS VARIABLE
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD

    AND             reduce using rule 252 (relacional -> numeros comparacion VARIABLE .)
    OR              reduce using rule 252 (relacional -> numeros comparacion VARIABLE .)
    NOT             reduce using rule 252 (relacional -> numeros comparacion VARIABLE .)
    PAR_D           reduce using rule 252 (relacional -> numeros comparacion VARIABLE .)
    MAS             shift and go to state 249
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257

    aritmeticos                    shift and go to state 248

state 395

    (310) sumStringChar -> STRING . MAS CHAR

    MAS             shift and go to state 269


state 396

    (264) aritmetica -> numeros aritmeticos numeros .

    MAS             reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    IGUAL_COMPARACION reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    DIFERENTE       reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    MAYOR           reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    MENOR           reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    MENOS           reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    DIVISION        reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    MOD             reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    VAR             reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    VAL             reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    VARIABLE        reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    PRINTLN         reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    PRINT           reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    READLINE        reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    WHILE           reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    FOR             reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    IF              reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    INT             reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    DOUBLE          reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    LONG            reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    FLOAT           reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    STRING          reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    CHAR            reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    LLAVE_D         reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    DEF             reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    $end            reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    RETURN          reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    CASE            reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    AND             reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    OR              reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    NOT             reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)
    PAR_D           reduce using rule 264 (aritmetica -> numeros aritmeticos numeros .)


state 397

    (266) aritmetica -> numeros aritmeticos VARIABLE .

    MAS             reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    IGUAL_COMPARACION reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    MAYOR           reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    MENOR           reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    MENOS           reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    DIVISION        reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    MOD             reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    VAR             reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    VAL             reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    PRINT           reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    READLINE        reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    WHILE           reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    FOR             reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    IF              reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    INT             reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    LONG            reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    FLOAT           reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    STRING          reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    CHAR            reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    DEF             reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    $end            reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    RETURN          reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    CASE            reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    AND             reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    OR              reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    NOT             reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)
    PAR_D           reduce using rule 266 (aritmetica -> numeros aritmeticos VARIABLE .)


state 398

    (272) aritmetica -> numeros MAS VARIABLE .

    MAS             reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    IGUAL_COMPARACION reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    DIFERENTE       reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    MAYOR           reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    MENOR           reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    MENOS           reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    MULTIPLICACION  reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    DIVISION        reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    MOD             reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    VAR             reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    VAL             reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    VARIABLE        reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    PRINTLN         reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    PRINT           reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    READLINE        reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    WHILE           reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    FOR             reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    IF              reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    INT             reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    DOUBLE          reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    LONG            reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    FLOAT           reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    STRING          reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    CHAR            reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    LLAVE_D         reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    DEF             reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    $end            reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    RETURN          reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    CASE            reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    AND             reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    OR              reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    NOT             reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)
    PAR_D           reduce using rule 272 (aritmetica -> numeros MAS VARIABLE .)


state 399

    (245) relacional -> aritmetica comparacion aritmetica .
    (268) aritmetica -> aritmetica . aritmeticos numeros
    (269) aritmetica -> aritmetica . aritmeticos VARIABLE
    (274) aritmetica -> aritmetica . MAS numeros
    (275) aritmetica -> aritmetica . MAS VARIABLE
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD

    AND             reduce using rule 245 (relacional -> aritmetica comparacion aritmetica .)
    OR              reduce using rule 245 (relacional -> aritmetica comparacion aritmetica .)
    NOT             reduce using rule 245 (relacional -> aritmetica comparacion aritmetica .)
    PAR_D           reduce using rule 245 (relacional -> aritmetica comparacion aritmetica .)
    MAS             shift and go to state 267
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257

    aritmeticos                    shift and go to state 266

state 400

    (246) relacional -> aritmetica comparacion numeros .
    (264) aritmetica -> numeros . aritmeticos numeros
    (266) aritmetica -> numeros . aritmeticos VARIABLE
    (272) aritmetica -> numeros . MAS VARIABLE
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD

    AND             reduce using rule 246 (relacional -> aritmetica comparacion numeros .)
    OR              reduce using rule 246 (relacional -> aritmetica comparacion numeros .)
    NOT             reduce using rule 246 (relacional -> aritmetica comparacion numeros .)
    PAR_D           reduce using rule 246 (relacional -> aritmetica comparacion numeros .)
    MAS             shift and go to state 264
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257

    aritmeticos                    shift and go to state 263

state 401

    (265) aritmetica -> VARIABLE . aritmeticos numeros
    (267) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (271) aritmetica -> VARIABLE . MAS numeros
    (273) aritmetica -> VARIABLE . MAS VARIABLE
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD

    MAS             shift and go to state 249
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257

    aritmeticos                    shift and go to state 248

state 402

    (268) aritmetica -> aritmetica aritmeticos numeros .

    MAS             reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    IGUAL_COMPARACION reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    DIFERENTE       reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    MAYOR           reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    MENOR           reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    MENOS           reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    MULTIPLICACION  reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    DIVISION        reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    MOD             reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    VAR             reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    VAL             reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    VARIABLE        reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    PRINTLN         reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    PRINT           reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    READLINE        reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    WHILE           reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    FOR             reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    IF              reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    INT             reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    DOUBLE          reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    LONG            reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    FLOAT           reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    STRING          reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    CHAR            reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    LLAVE_D         reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    DEF             reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    $end            reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    RETURN          reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    CASE            reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    AND             reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    OR              reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    NOT             reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)
    PAR_D           reduce using rule 268 (aritmetica -> aritmetica aritmeticos numeros .)


state 403

    (269) aritmetica -> aritmetica aritmeticos VARIABLE .

    MAS             reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    IGUAL_COMPARACION reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DIFERENTE       reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MAYOR           reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MENOR           reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MENOS           reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MULTIPLICACION  reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DIVISION        reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    MOD             reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VAR             reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VAL             reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    VARIABLE        reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PRINTLN         reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PRINT           reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    READLINE        reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    WHILE           reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    FOR             reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    IF              reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    INT             reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DOUBLE          reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    LONG            reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    FLOAT           reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    STRING          reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    CHAR            reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    LLAVE_D         reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    DEF             reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    $end            reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    RETURN          reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    CASE            reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    AND             reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    OR              reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    NOT             reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)
    PAR_D           reduce using rule 269 (aritmetica -> aritmetica aritmeticos VARIABLE .)


state 404

    (274) aritmetica -> aritmetica MAS numeros .

    MAS             reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    IGUAL_COMPARACION reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    DIFERENTE       reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    MAYOR           reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    MENOR           reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    MENOS           reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    MULTIPLICACION  reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    DIVISION        reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    MOD             reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    VAR             reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    VAL             reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    VARIABLE        reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    PRINTLN         reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    PRINT           reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    READLINE        reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    WHILE           reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    FOR             reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    IF              reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    INT             reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    DOUBLE          reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    LONG            reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    FLOAT           reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    STRING          reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    CHAR            reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    LLAVE_D         reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    DEF             reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    $end            reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    RETURN          reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    CASE            reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    AND             reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    OR              reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    NOT             reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)
    PAR_D           reduce using rule 274 (aritmetica -> aritmetica MAS numeros .)


state 405

    (275) aritmetica -> aritmetica MAS VARIABLE .

    MAS             reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    IGUAL_COMPARACION reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    DIFERENTE       reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    MAYOR           reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    MENOR           reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    MENOS           reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    MULTIPLICACION  reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    DIVISION        reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    MOD             reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    VAR             reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    VAL             reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    VARIABLE        reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    PRINTLN         reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    PRINT           reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    READLINE        reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    WHILE           reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    FOR             reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    IF              reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    INT             reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    DOUBLE          reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    LONG            reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    FLOAT           reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    STRING          reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    CHAR            reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    LLAVE_D         reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    DEF             reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    $end            reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    RETURN          reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    CASE            reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    AND             reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    OR              reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    NOT             reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)
    PAR_D           reduce using rule 275 (aritmetica -> aritmetica MAS VARIABLE .)


state 406

    (249) relacional -> STRING comparacion STRING .

    AND             reduce using rule 249 (relacional -> STRING comparacion STRING .)
    OR              reduce using rule 249 (relacional -> STRING comparacion STRING .)
    NOT             reduce using rule 249 (relacional -> STRING comparacion STRING .)
    PAR_D           reduce using rule 249 (relacional -> STRING comparacion STRING .)


state 407

    (256) relacional -> STRING comparacion VARIABLE .

    AND             reduce using rule 256 (relacional -> STRING comparacion VARIABLE .)
    OR              reduce using rule 256 (relacional -> STRING comparacion VARIABLE .)
    NOT             reduce using rule 256 (relacional -> STRING comparacion VARIABLE .)
    PAR_D           reduce using rule 256 (relacional -> STRING comparacion VARIABLE .)


state 408

    (310) sumStringChar -> STRING MAS CHAR .

    MAS             reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    IGUAL_COMPARACION reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    DIFERENTE       reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    MAYOR           reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    MENOR           reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    MENOS           reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    MULTIPLICACION  reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    DIVISION        reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    MOD             reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    VAR             reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    VAL             reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    VARIABLE        reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    PRINTLN         reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    PRINT           reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    READLINE        reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    WHILE           reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    FOR             reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    IF              reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    INT             reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    DOUBLE          reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    LONG            reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    FLOAT           reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    STRING          reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    CHAR            reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    LLAVE_D         reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    DEF             reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    $end            reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    RETURN          reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    CASE            reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    AND             reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    OR              reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    NOT             reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)
    PAR_D           reduce using rule 310 (sumStringChar -> STRING MAS CHAR .)


state 409

    (250) relacional -> CHAR comparacion CHAR .

    AND             reduce using rule 250 (relacional -> CHAR comparacion CHAR .)
    OR              reduce using rule 250 (relacional -> CHAR comparacion CHAR .)
    NOT             reduce using rule 250 (relacional -> CHAR comparacion CHAR .)
    PAR_D           reduce using rule 250 (relacional -> CHAR comparacion CHAR .)


state 410

    (258) relacional -> CHAR comparacion VARIABLE .

    AND             reduce using rule 258 (relacional -> CHAR comparacion VARIABLE .)
    OR              reduce using rule 258 (relacional -> CHAR comparacion VARIABLE .)
    NOT             reduce using rule 258 (relacional -> CHAR comparacion VARIABLE .)
    PAR_D           reduce using rule 258 (relacional -> CHAR comparacion VARIABLE .)


state 411

    (309) sumIntChar -> CHAR MAS INT .

    MAS             reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    IGUAL_COMPARACION reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    DIFERENTE       reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    MAYOR           reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    MENOR           reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    MENOS           reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    MULTIPLICACION  reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    DIVISION        reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    MOD             reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    VAR             reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    VAL             reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    VARIABLE        reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    PRINTLN         reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    PRINT           reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    READLINE        reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    WHILE           reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    FOR             reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    IF              reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    INT             reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    DOUBLE          reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    LONG            reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    FLOAT           reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    STRING          reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    CHAR            reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    LLAVE_D         reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    DEF             reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    $end            reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    RETURN          reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    CASE            reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    AND             reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    OR              reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    NOT             reduce using rule 309 (sumIntChar -> CHAR MAS INT .)
    PAR_D           reduce using rule 309 (sumIntChar -> CHAR MAS INT .)


state 412

    (311) sumStringChar -> CHAR MAS STRING .

    MAS             reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    IGUAL_COMPARACION reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    DIFERENTE       reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    MAYOR           reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    MENOR           reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    MENOS           reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    MULTIPLICACION  reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    DIVISION        reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    MOD             reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    VAR             reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    VAL             reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    VARIABLE        reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    PRINTLN         reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    PRINT           reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    READLINE        reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    WHILE           reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    FOR             reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    IF              reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    INT             reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    DOUBLE          reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    LONG            reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    FLOAT           reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    STRING          reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    CHAR            reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    LLAVE_D         reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    DEF             reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    $end            reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    RETURN          reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    CASE            reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    AND             reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    OR              reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    NOT             reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)
    PAR_D           reduce using rule 311 (sumStringChar -> CHAR MAS STRING .)


state 413

    (307) sumDoubleChar -> CHAR MAS DOUBLE .

    MAS             reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    IGUAL_COMPARACION reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    DIFERENTE       reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    MAYOR           reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    MENOR           reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    MENOS           reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    MULTIPLICACION  reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    DIVISION        reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    MOD             reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    VAR             reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    VAL             reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    VARIABLE        reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    PRINTLN         reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    PRINT           reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    READLINE        reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    WHILE           reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    FOR             reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    IF              reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    INT             reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    DOUBLE          reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    LONG            reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    FLOAT           reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    STRING          reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    CHAR            reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    LLAVE_D         reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    DEF             reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    $end            reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    RETURN          reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    CASE            reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    AND             reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    OR              reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    NOT             reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)
    PAR_D           reduce using rule 307 (sumDoubleChar -> CHAR MAS DOUBLE .)


state 414

    (276) aritmetica -> INT MAS INT .

    MAS             reduce using rule 276 (aritmetica -> INT MAS INT .)
    IGUAL_COMPARACION reduce using rule 276 (aritmetica -> INT MAS INT .)
    DIFERENTE       reduce using rule 276 (aritmetica -> INT MAS INT .)
    MAYOR           reduce using rule 276 (aritmetica -> INT MAS INT .)
    MENOR           reduce using rule 276 (aritmetica -> INT MAS INT .)
    MENOS           reduce using rule 276 (aritmetica -> INT MAS INT .)
    MULTIPLICACION  reduce using rule 276 (aritmetica -> INT MAS INT .)
    DIVISION        reduce using rule 276 (aritmetica -> INT MAS INT .)
    MOD             reduce using rule 276 (aritmetica -> INT MAS INT .)
    VAR             reduce using rule 276 (aritmetica -> INT MAS INT .)
    VAL             reduce using rule 276 (aritmetica -> INT MAS INT .)
    VARIABLE        reduce using rule 276 (aritmetica -> INT MAS INT .)
    PRINTLN         reduce using rule 276 (aritmetica -> INT MAS INT .)
    PRINT           reduce using rule 276 (aritmetica -> INT MAS INT .)
    READLINE        reduce using rule 276 (aritmetica -> INT MAS INT .)
    WHILE           reduce using rule 276 (aritmetica -> INT MAS INT .)
    FOR             reduce using rule 276 (aritmetica -> INT MAS INT .)
    IF              reduce using rule 276 (aritmetica -> INT MAS INT .)
    INT             reduce using rule 276 (aritmetica -> INT MAS INT .)
    DOUBLE          reduce using rule 276 (aritmetica -> INT MAS INT .)
    LONG            reduce using rule 276 (aritmetica -> INT MAS INT .)
    FLOAT           reduce using rule 276 (aritmetica -> INT MAS INT .)
    STRING          reduce using rule 276 (aritmetica -> INT MAS INT .)
    CHAR            reduce using rule 276 (aritmetica -> INT MAS INT .)
    LLAVE_D         reduce using rule 276 (aritmetica -> INT MAS INT .)
    DEF             reduce using rule 276 (aritmetica -> INT MAS INT .)
    $end            reduce using rule 276 (aritmetica -> INT MAS INT .)
    RETURN          reduce using rule 276 (aritmetica -> INT MAS INT .)
    CASE            reduce using rule 276 (aritmetica -> INT MAS INT .)
    AND             reduce using rule 276 (aritmetica -> INT MAS INT .)
    OR              reduce using rule 276 (aritmetica -> INT MAS INT .)
    NOT             reduce using rule 276 (aritmetica -> INT MAS INT .)
    PAR_D           reduce using rule 276 (aritmetica -> INT MAS INT .)


state 415

    (308) sumIntChar -> INT MAS CHAR .

    MAS             reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    IGUAL_COMPARACION reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    DIFERENTE       reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    MAYOR           reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    MENOR           reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    MENOS           reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    MULTIPLICACION  reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    DIVISION        reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    MOD             reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    VAR             reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    VAL             reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    VARIABLE        reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    PRINTLN         reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    PRINT           reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    READLINE        reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    WHILE           reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    FOR             reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    IF              reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    INT             reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    DOUBLE          reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    LONG            reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    FLOAT           reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    STRING          reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    CHAR            reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    LLAVE_D         reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    DEF             reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    $end            reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    RETURN          reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    CASE            reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    AND             reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    OR              reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    NOT             reduce using rule 308 (sumIntChar -> INT MAS CHAR .)
    PAR_D           reduce using rule 308 (sumIntChar -> INT MAS CHAR .)


state 416

    (304) sumIntDouble -> INT MAS DOUBLE .

    MAS             reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    IGUAL_COMPARACION reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    DIFERENTE       reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    MAYOR           reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    MENOR           reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    MENOS           reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    MULTIPLICACION  reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    DIVISION        reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    MOD             reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    VAR             reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    VAL             reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    VARIABLE        reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    PRINTLN         reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    PRINT           reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    READLINE        reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    WHILE           reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    FOR             reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    IF              reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    INT             reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    DOUBLE          reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    LONG            reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    FLOAT           reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    STRING          reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    CHAR            reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    LLAVE_D         reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    DEF             reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    $end            reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    RETURN          reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    CASE            reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    AND             reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    OR              reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    NOT             reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)
    PAR_D           reduce using rule 304 (sumIntDouble -> INT MAS DOUBLE .)


state 417

    (278) aritmetica -> LONG MAS LONG .

    MAS             reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    IGUAL_COMPARACION reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    DIFERENTE       reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    MAYOR           reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    MENOR           reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    MENOS           reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    MULTIPLICACION  reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    DIVISION        reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    MOD             reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    VAR             reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    VAL             reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    VARIABLE        reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    PRINTLN         reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    PRINT           reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    READLINE        reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    WHILE           reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    FOR             reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    IF              reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    INT             reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    DOUBLE          reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    LONG            reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    FLOAT           reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    STRING          reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    CHAR            reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    LLAVE_D         reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    DEF             reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    $end            reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    RETURN          reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    CASE            reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    AND             reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    OR              reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    NOT             reduce using rule 278 (aritmetica -> LONG MAS LONG .)
    PAR_D           reduce using rule 278 (aritmetica -> LONG MAS LONG .)


state 418

    (279) aritmetica -> FLOAT MAS FLOAT .

    MAS             reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    IGUAL_COMPARACION reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    DIFERENTE       reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    MAYOR           reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    MENOR           reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    MENOS           reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    MULTIPLICACION  reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    DIVISION        reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    MOD             reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    VAR             reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    VAL             reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    VARIABLE        reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    PRINTLN         reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    PRINT           reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    READLINE        reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    WHILE           reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    FOR             reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    IF              reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    INT             reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    DOUBLE          reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    LONG            reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    FLOAT           reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    STRING          reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    CHAR            reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    LLAVE_D         reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    DEF             reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    $end            reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    RETURN          reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    CASE            reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    AND             reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    OR              reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    NOT             reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)
    PAR_D           reduce using rule 279 (aritmetica -> FLOAT MAS FLOAT .)


state 419

    (277) aritmetica -> DOUBLE MAS DOUBLE .

    MAS             reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    IGUAL_COMPARACION reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    DIFERENTE       reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    MAYOR           reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    MENOR           reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    MENOS           reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    MULTIPLICACION  reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    DIVISION        reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    MOD             reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    VAR             reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    VAL             reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    VARIABLE        reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    PRINTLN         reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    PRINT           reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    READLINE        reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    WHILE           reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    FOR             reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    IF              reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    INT             reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    DOUBLE          reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    LONG            reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    FLOAT           reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    STRING          reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    CHAR            reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    LLAVE_D         reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    DEF             reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    $end            reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    RETURN          reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    CASE            reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    AND             reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    OR              reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    NOT             reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)
    PAR_D           reduce using rule 277 (aritmetica -> DOUBLE MAS DOUBLE .)


state 420

    (305) sumIntDouble -> DOUBLE MAS INT .

    MAS             reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    IGUAL_COMPARACION reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    DIFERENTE       reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    MAYOR           reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    MENOR           reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    MENOS           reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    MULTIPLICACION  reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    DIVISION        reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    MOD             reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    VAR             reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    VAL             reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    VARIABLE        reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    PRINTLN         reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    PRINT           reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    READLINE        reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    WHILE           reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    FOR             reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    IF              reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    INT             reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    DOUBLE          reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    LONG            reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    FLOAT           reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    STRING          reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    CHAR            reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    LLAVE_D         reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    DEF             reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    $end            reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    RETURN          reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    CASE            reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    AND             reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    OR              reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    NOT             reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)
    PAR_D           reduce using rule 305 (sumIntDouble -> DOUBLE MAS INT .)


state 421

    (306) sumDoubleChar -> DOUBLE MAS CHAR .

    MAS             reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    IGUAL_COMPARACION reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    DIFERENTE       reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    MAYOR           reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    MENOR           reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    MENOS           reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    MULTIPLICACION  reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    DIVISION        reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    MOD             reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    VAR             reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    VAL             reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    VARIABLE        reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    PRINTLN         reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    PRINT           reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    READLINE        reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    WHILE           reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    FOR             reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    IF              reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    INT             reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    DOUBLE          reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    LONG            reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    FLOAT           reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    STRING          reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    CHAR            reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    LLAVE_D         reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    DEF             reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    $end            reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    RETURN          reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    CASE            reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    AND             reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    OR              reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    NOT             reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)
    PAR_D           reduce using rule 306 (sumDoubleChar -> DOUBLE MAS CHAR .)


state 422

    (181) for -> FOR PAR_I VAR VARIABLE ITERATOR . VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> FOR PAR_I VAR VARIABLE ITERATOR . INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> FOR PAR_I VAR VARIABLE ITERATOR . INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    VARIABLE        shift and go to state 540
    INT             shift and go to state 541


state 423

    (182) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 542


state 424

    (183) for -> FOR PAR_I VARIABLE ITERATOR INT . TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> FOR PAR_I VARIABLE ITERATOR INT . UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    TO              shift and go to state 543
    UNTIL           shift and go to state 544


state 425

    (226) if -> IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    contenido                      shift and go to state 545
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 426

    (290) startsWith -> STRING PUNTO STARTSWITH PAR_I STRING . PAR_D
    (291) startsWith -> STRING PUNTO STARTSWITH PAR_I STRING . COMA INT PAR_D

    PAR_D           shift and go to state 546
    COMA            shift and go to state 547


state 427

    (223) defcase -> CASE SUBGUION . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 548


state 428

    (211) caseStr -> CASE STRING . FUNCION_FLECHA codeBlock

    FUNCION_FLECHA  shift and go to state 433


state 429

    (195) caseInt -> CASE INT FUNCION_FLECHA . codeBlock
    (224) codeBlock -> . contenidoLine
    (225) codeBlock -> . LLAVE_I contenido LLAVE_D
    (44) contenidoLine -> . asignacion
    (45) contenidoLine -> . reasignacion
    (46) contenidoLine -> . funcall
    (47) contenidoLine -> . impresion
    (48) contenidoLine -> . entrada
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    LLAVE_I         shift and go to state 551
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 557
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 549
    contenidoLine                  shift and go to state 550
    asignacion                     shift and go to state 552
    reasignacion                   shift and go to state 553
    funcall                        shift and go to state 554
    impresion                      shift and go to state 555
    entrada                        shift and go to state 556
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41

state 430

    (199) caseLgn -> CASE LONG FUNCION_FLECHA . codeBlock
    (224) codeBlock -> . contenidoLine
    (225) codeBlock -> . LLAVE_I contenido LLAVE_D
    (44) contenidoLine -> . asignacion
    (45) contenidoLine -> . reasignacion
    (46) contenidoLine -> . funcall
    (47) contenidoLine -> . impresion
    (48) contenidoLine -> . entrada
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    LLAVE_I         shift and go to state 551
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 557
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 558
    contenidoLine                  shift and go to state 550
    asignacion                     shift and go to state 552
    reasignacion                   shift and go to state 553
    funcall                        shift and go to state 554
    impresion                      shift and go to state 555
    entrada                        shift and go to state 556
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41

state 431

    (203) caseFlt -> CASE FLOAT FUNCION_FLECHA . codeBlock
    (224) codeBlock -> . contenidoLine
    (225) codeBlock -> . LLAVE_I contenido LLAVE_D
    (44) contenidoLine -> . asignacion
    (45) contenidoLine -> . reasignacion
    (46) contenidoLine -> . funcall
    (47) contenidoLine -> . impresion
    (48) contenidoLine -> . entrada
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    LLAVE_I         shift and go to state 551
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 557
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 559
    contenidoLine                  shift and go to state 550
    asignacion                     shift and go to state 552
    reasignacion                   shift and go to state 553
    funcall                        shift and go to state 554
    impresion                      shift and go to state 555
    entrada                        shift and go to state 556
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41

state 432

    (207) caseDob -> CASE DOUBLE FUNCION_FLECHA . codeBlock
    (224) codeBlock -> . contenidoLine
    (225) codeBlock -> . LLAVE_I contenido LLAVE_D
    (44) contenidoLine -> . asignacion
    (45) contenidoLine -> . reasignacion
    (46) contenidoLine -> . funcall
    (47) contenidoLine -> . impresion
    (48) contenidoLine -> . entrada
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    LLAVE_I         shift and go to state 551
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 557
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 560
    contenidoLine                  shift and go to state 550
    asignacion                     shift and go to state 552
    reasignacion                   shift and go to state 553
    funcall                        shift and go to state 554
    impresion                      shift and go to state 555
    entrada                        shift and go to state 556
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41

state 433

    (211) caseStr -> CASE STRING FUNCION_FLECHA . codeBlock
    (224) codeBlock -> . contenidoLine
    (225) codeBlock -> . LLAVE_I contenido LLAVE_D
    (44) contenidoLine -> . asignacion
    (45) contenidoLine -> . reasignacion
    (46) contenidoLine -> . funcall
    (47) contenidoLine -> . impresion
    (48) contenidoLine -> . entrada
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    LLAVE_I         shift and go to state 551
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 557
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 561
    contenidoLine                  shift and go to state 550
    asignacion                     shift and go to state 552
    reasignacion                   shift and go to state 553
    funcall                        shift and go to state 554
    impresion                      shift and go to state 555
    entrada                        shift and go to state 556
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41

state 434

    (215) caseChar -> CASE CHAR FUNCION_FLECHA . codeBlock
    (224) codeBlock -> . contenidoLine
    (225) codeBlock -> . LLAVE_I contenido LLAVE_D
    (44) contenidoLine -> . asignacion
    (45) contenidoLine -> . reasignacion
    (46) contenidoLine -> . funcall
    (47) contenidoLine -> . impresion
    (48) contenidoLine -> . entrada
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    LLAVE_I         shift and go to state 551
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 557
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 562
    contenidoLine                  shift and go to state 550
    asignacion                     shift and go to state 552
    reasignacion                   shift and go to state 553
    funcall                        shift and go to state 554
    impresion                      shift and go to state 555
    entrada                        shift and go to state 556
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41

state 435

    (219) caseBool -> CASE booleanos FUNCION_FLECHA . codeBlock
    (224) codeBlock -> . contenidoLine
    (225) codeBlock -> . LLAVE_I contenido LLAVE_D
    (44) contenidoLine -> . asignacion
    (45) contenidoLine -> . reasignacion
    (46) contenidoLine -> . funcall
    (47) contenidoLine -> . impresion
    (48) contenidoLine -> . entrada
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    LLAVE_I         shift and go to state 551
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 557
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 563
    contenidoLine                  shift and go to state 550
    asignacion                     shift and go to state 552
    reasignacion                   shift and go to state 553
    funcall                        shift and go to state 554
    impresion                      shift and go to state 555
    entrada                        shift and go to state 556
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41

state 436

    (111) valor -> VARIABLE PAR_I VARIABLE PAR_D .

    COMA            reduce using rule 111 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    PAR_D           reduce using rule 111 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    MAS             reduce using rule 111 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    VAR             reduce using rule 111 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    VAL             reduce using rule 111 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    VARIABLE        reduce using rule 111 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    PRINTLN         reduce using rule 111 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    PRINT           reduce using rule 111 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    READLINE        reduce using rule 111 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    WHILE           reduce using rule 111 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    FOR             reduce using rule 111 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    IF              reduce using rule 111 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    INT             reduce using rule 111 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    DOUBLE          reduce using rule 111 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    LONG            reduce using rule 111 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    FLOAT           reduce using rule 111 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    STRING          reduce using rule 111 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    CHAR            reduce using rule 111 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    LLAVE_D         reduce using rule 111 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    RETURN          reduce using rule 111 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)
    CASE            reduce using rule 111 (valor -> VARIABLE PAR_I VARIABLE PAR_D .)


state 437

    (112) valor -> VARIABLE PAR_I INT PAR_D .

    COMA            reduce using rule 112 (valor -> VARIABLE PAR_I INT PAR_D .)
    PAR_D           reduce using rule 112 (valor -> VARIABLE PAR_I INT PAR_D .)
    MAS             reduce using rule 112 (valor -> VARIABLE PAR_I INT PAR_D .)
    VAR             reduce using rule 112 (valor -> VARIABLE PAR_I INT PAR_D .)
    VAL             reduce using rule 112 (valor -> VARIABLE PAR_I INT PAR_D .)
    VARIABLE        reduce using rule 112 (valor -> VARIABLE PAR_I INT PAR_D .)
    PRINTLN         reduce using rule 112 (valor -> VARIABLE PAR_I INT PAR_D .)
    PRINT           reduce using rule 112 (valor -> VARIABLE PAR_I INT PAR_D .)
    READLINE        reduce using rule 112 (valor -> VARIABLE PAR_I INT PAR_D .)
    WHILE           reduce using rule 112 (valor -> VARIABLE PAR_I INT PAR_D .)
    FOR             reduce using rule 112 (valor -> VARIABLE PAR_I INT PAR_D .)
    IF              reduce using rule 112 (valor -> VARIABLE PAR_I INT PAR_D .)
    INT             reduce using rule 112 (valor -> VARIABLE PAR_I INT PAR_D .)
    DOUBLE          reduce using rule 112 (valor -> VARIABLE PAR_I INT PAR_D .)
    LONG            reduce using rule 112 (valor -> VARIABLE PAR_I INT PAR_D .)
    FLOAT           reduce using rule 112 (valor -> VARIABLE PAR_I INT PAR_D .)
    STRING          reduce using rule 112 (valor -> VARIABLE PAR_I INT PAR_D .)
    CHAR            reduce using rule 112 (valor -> VARIABLE PAR_I INT PAR_D .)
    LLAVE_D         reduce using rule 112 (valor -> VARIABLE PAR_I INT PAR_D .)
    RETURN          reduce using rule 112 (valor -> VARIABLE PAR_I INT PAR_D .)
    CASE            reduce using rule 112 (valor -> VARIABLE PAR_I INT PAR_D .)


state 438

    (4) io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE . PUNTO READLINE

    PUNTO           shift and go to state 564


state 439

    (229) elseif -> ELSE IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D
    (230) elseif -> ELSE IF PAR_I condicional PAR_D . LLAVE_I contenido LLAVE_D elseif

    LLAVE_I         shift and go to state 565


state 440

    (108) valor -> VARIABLE .
    (111) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (112) valor -> VARIABLE . PAR_I INT PAR_D
    (265) aritmetica -> VARIABLE . aritmeticos numeros
    (267) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (271) aritmetica -> VARIABLE . MAS numeros
    (273) aritmetica -> VARIABLE . MAS VARIABLE
    (160) castingcall -> VARIABLE . PUNTO castingfun
    (150) funcall -> VARIABLE . varparen
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD
    (151) varparen -> . PAR_I valores PAR_D
    (152) varparen -> . PAR_I PAR_D
    (153) varparen -> . varparen PAR_I valores PAR_D
    (154) varparen -> . varparen PAR_I PAR_D

    VAR             reduce using rule 108 (valor -> VARIABLE .)
    VAL             reduce using rule 108 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 108 (valor -> VARIABLE .)
    PRINTLN         reduce using rule 108 (valor -> VARIABLE .)
    PRINT           reduce using rule 108 (valor -> VARIABLE .)
    READLINE        reduce using rule 108 (valor -> VARIABLE .)
    WHILE           reduce using rule 108 (valor -> VARIABLE .)
    FOR             reduce using rule 108 (valor -> VARIABLE .)
    IF              reduce using rule 108 (valor -> VARIABLE .)
    INT             reduce using rule 108 (valor -> VARIABLE .)
    DOUBLE          reduce using rule 108 (valor -> VARIABLE .)
    LONG            reduce using rule 108 (valor -> VARIABLE .)
    FLOAT           reduce using rule 108 (valor -> VARIABLE .)
    STRING          reduce using rule 108 (valor -> VARIABLE .)
    CHAR            reduce using rule 108 (valor -> VARIABLE .)
    LLAVE_D         reduce using rule 108 (valor -> VARIABLE .)
    RETURN          reduce using rule 108 (valor -> VARIABLE .)
    CASE            reduce using rule 108 (valor -> VARIABLE .)
    PAR_I           shift and go to state 566
    MAS             shift and go to state 249
    PUNTO           shift and go to state 348
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257

    aritmeticos                    shift and go to state 248
    varparen                       shift and go to state 43

state 441

    (93) reasignacion -> VARIABLE IGUAL valor .

    VAR             reduce using rule 93 (reasignacion -> VARIABLE IGUAL valor .)
    VAL             reduce using rule 93 (reasignacion -> VARIABLE IGUAL valor .)
    VARIABLE        reduce using rule 93 (reasignacion -> VARIABLE IGUAL valor .)
    PRINTLN         reduce using rule 93 (reasignacion -> VARIABLE IGUAL valor .)
    PRINT           reduce using rule 93 (reasignacion -> VARIABLE IGUAL valor .)
    READLINE        reduce using rule 93 (reasignacion -> VARIABLE IGUAL valor .)
    WHILE           reduce using rule 93 (reasignacion -> VARIABLE IGUAL valor .)
    FOR             reduce using rule 93 (reasignacion -> VARIABLE IGUAL valor .)
    IF              reduce using rule 93 (reasignacion -> VARIABLE IGUAL valor .)
    INT             reduce using rule 93 (reasignacion -> VARIABLE IGUAL valor .)
    DOUBLE          reduce using rule 93 (reasignacion -> VARIABLE IGUAL valor .)
    LONG            reduce using rule 93 (reasignacion -> VARIABLE IGUAL valor .)
    FLOAT           reduce using rule 93 (reasignacion -> VARIABLE IGUAL valor .)
    STRING          reduce using rule 93 (reasignacion -> VARIABLE IGUAL valor .)
    CHAR            reduce using rule 93 (reasignacion -> VARIABLE IGUAL valor .)
    LLAVE_D         reduce using rule 93 (reasignacion -> VARIABLE IGUAL valor .)
    RETURN          reduce using rule 93 (reasignacion -> VARIABLE IGUAL valor .)
    CASE            reduce using rule 93 (reasignacion -> VARIABLE IGUAL valor .)


state 442

    (94) reasignacion -> VARIABLE IGUAL returnfun .

    VAR             reduce using rule 94 (reasignacion -> VARIABLE IGUAL returnfun .)
    VAL             reduce using rule 94 (reasignacion -> VARIABLE IGUAL returnfun .)
    VARIABLE        reduce using rule 94 (reasignacion -> VARIABLE IGUAL returnfun .)
    PRINTLN         reduce using rule 94 (reasignacion -> VARIABLE IGUAL returnfun .)
    PRINT           reduce using rule 94 (reasignacion -> VARIABLE IGUAL returnfun .)
    READLINE        reduce using rule 94 (reasignacion -> VARIABLE IGUAL returnfun .)
    WHILE           reduce using rule 94 (reasignacion -> VARIABLE IGUAL returnfun .)
    FOR             reduce using rule 94 (reasignacion -> VARIABLE IGUAL returnfun .)
    IF              reduce using rule 94 (reasignacion -> VARIABLE IGUAL returnfun .)
    INT             reduce using rule 94 (reasignacion -> VARIABLE IGUAL returnfun .)
    DOUBLE          reduce using rule 94 (reasignacion -> VARIABLE IGUAL returnfun .)
    LONG            reduce using rule 94 (reasignacion -> VARIABLE IGUAL returnfun .)
    FLOAT           reduce using rule 94 (reasignacion -> VARIABLE IGUAL returnfun .)
    STRING          reduce using rule 94 (reasignacion -> VARIABLE IGUAL returnfun .)
    CHAR            reduce using rule 94 (reasignacion -> VARIABLE IGUAL returnfun .)
    LLAVE_D         reduce using rule 94 (reasignacion -> VARIABLE IGUAL returnfun .)
    RETURN          reduce using rule 94 (reasignacion -> VARIABLE IGUAL returnfun .)
    CASE            reduce using rule 94 (reasignacion -> VARIABLE IGUAL returnfun .)


state 443

    (95) reasignacion -> VARIABLE IGUAL aritmetica .
    (268) aritmetica -> aritmetica . aritmeticos numeros
    (269) aritmetica -> aritmetica . aritmeticos VARIABLE
    (274) aritmetica -> aritmetica . MAS numeros
    (275) aritmetica -> aritmetica . MAS VARIABLE
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD

    VAR             reduce using rule 95 (reasignacion -> VARIABLE IGUAL aritmetica .)
    VAL             reduce using rule 95 (reasignacion -> VARIABLE IGUAL aritmetica .)
    VARIABLE        reduce using rule 95 (reasignacion -> VARIABLE IGUAL aritmetica .)
    PRINTLN         reduce using rule 95 (reasignacion -> VARIABLE IGUAL aritmetica .)
    PRINT           reduce using rule 95 (reasignacion -> VARIABLE IGUAL aritmetica .)
    READLINE        reduce using rule 95 (reasignacion -> VARIABLE IGUAL aritmetica .)
    WHILE           reduce using rule 95 (reasignacion -> VARIABLE IGUAL aritmetica .)
    FOR             reduce using rule 95 (reasignacion -> VARIABLE IGUAL aritmetica .)
    IF              reduce using rule 95 (reasignacion -> VARIABLE IGUAL aritmetica .)
    INT             reduce using rule 95 (reasignacion -> VARIABLE IGUAL aritmetica .)
    DOUBLE          reduce using rule 95 (reasignacion -> VARIABLE IGUAL aritmetica .)
    LONG            reduce using rule 95 (reasignacion -> VARIABLE IGUAL aritmetica .)
    FLOAT           reduce using rule 95 (reasignacion -> VARIABLE IGUAL aritmetica .)
    STRING          reduce using rule 95 (reasignacion -> VARIABLE IGUAL aritmetica .)
    CHAR            reduce using rule 95 (reasignacion -> VARIABLE IGUAL aritmetica .)
    LLAVE_D         reduce using rule 95 (reasignacion -> VARIABLE IGUAL aritmetica .)
    RETURN          reduce using rule 95 (reasignacion -> VARIABLE IGUAL aritmetica .)
    CASE            reduce using rule 95 (reasignacion -> VARIABLE IGUAL aritmetica .)
    MAS             shift and go to state 267
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257

    aritmeticos                    shift and go to state 266

state 444

    (106) valor -> STRING .
    (290) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> STRING . PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (310) sumStringChar -> STRING . MAS CHAR

    VAR             reduce using rule 106 (valor -> STRING .)
    VAL             reduce using rule 106 (valor -> STRING .)
    VARIABLE        reduce using rule 106 (valor -> STRING .)
    PRINTLN         reduce using rule 106 (valor -> STRING .)
    PRINT           reduce using rule 106 (valor -> STRING .)
    READLINE        reduce using rule 106 (valor -> STRING .)
    WHILE           reduce using rule 106 (valor -> STRING .)
    FOR             reduce using rule 106 (valor -> STRING .)
    IF              reduce using rule 106 (valor -> STRING .)
    INT             reduce using rule 106 (valor -> STRING .)
    DOUBLE          reduce using rule 106 (valor -> STRING .)
    LONG            reduce using rule 106 (valor -> STRING .)
    FLOAT           reduce using rule 106 (valor -> STRING .)
    STRING          reduce using rule 106 (valor -> STRING .)
    CHAR            reduce using rule 106 (valor -> STRING .)
    LLAVE_D         reduce using rule 106 (valor -> STRING .)
    RETURN          reduce using rule 106 (valor -> STRING .)
    CASE            reduce using rule 106 (valor -> STRING .)
    PUNTO           shift and go to state 67
    MAS             shift and go to state 269


state 445

    (107) valor -> CHAR .
    (309) sumIntChar -> CHAR . MAS INT
    (311) sumStringChar -> CHAR . MAS STRING
    (307) sumDoubleChar -> CHAR . MAS DOUBLE

    VAR             reduce using rule 107 (valor -> CHAR .)
    VAL             reduce using rule 107 (valor -> CHAR .)
    VARIABLE        reduce using rule 107 (valor -> CHAR .)
    PRINTLN         reduce using rule 107 (valor -> CHAR .)
    PRINT           reduce using rule 107 (valor -> CHAR .)
    READLINE        reduce using rule 107 (valor -> CHAR .)
    WHILE           reduce using rule 107 (valor -> CHAR .)
    FOR             reduce using rule 107 (valor -> CHAR .)
    IF              reduce using rule 107 (valor -> CHAR .)
    INT             reduce using rule 107 (valor -> CHAR .)
    DOUBLE          reduce using rule 107 (valor -> CHAR .)
    LONG            reduce using rule 107 (valor -> CHAR .)
    FLOAT           reduce using rule 107 (valor -> CHAR .)
    STRING          reduce using rule 107 (valor -> CHAR .)
    CHAR            reduce using rule 107 (valor -> CHAR .)
    LLAVE_D         reduce using rule 107 (valor -> CHAR .)
    RETURN          reduce using rule 107 (valor -> CHAR .)
    CASE            reduce using rule 107 (valor -> CHAR .)
    MAS             shift and go to state 271


state 446

    (109) valor -> numeros .
    (264) aritmetica -> numeros . aritmeticos numeros
    (266) aritmetica -> numeros . aritmeticos VARIABLE
    (272) aritmetica -> numeros . MAS VARIABLE
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD

    VAR             reduce using rule 109 (valor -> numeros .)
    VAL             reduce using rule 109 (valor -> numeros .)
    VARIABLE        reduce using rule 109 (valor -> numeros .)
    PRINTLN         reduce using rule 109 (valor -> numeros .)
    PRINT           reduce using rule 109 (valor -> numeros .)
    READLINE        reduce using rule 109 (valor -> numeros .)
    WHILE           reduce using rule 109 (valor -> numeros .)
    FOR             reduce using rule 109 (valor -> numeros .)
    IF              reduce using rule 109 (valor -> numeros .)
    INT             reduce using rule 109 (valor -> numeros .)
    DOUBLE          reduce using rule 109 (valor -> numeros .)
    LONG            reduce using rule 109 (valor -> numeros .)
    FLOAT           reduce using rule 109 (valor -> numeros .)
    STRING          reduce using rule 109 (valor -> numeros .)
    CHAR            reduce using rule 109 (valor -> numeros .)
    LLAVE_D         reduce using rule 109 (valor -> numeros .)
    RETURN          reduce using rule 109 (valor -> numeros .)
    CASE            reduce using rule 109 (valor -> numeros .)
    MAS             shift and go to state 264
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257

    aritmeticos                    shift and go to state 263

state 447

    (96) reasignacion -> VARIABLE PAR_I INT . PAR_D IGUAL valor
    (116) numeros -> INT .

  ! shift/reduce conflict for PAR_D resolved as shift
    PAR_D           shift and go to state 567
    COMA            reduce using rule 116 (numeros -> INT .)

  ! PAR_D           [ reduce using rule 116 (numeros -> INT .) ]


state 448

    (120) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 568


state 449

    (121) funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 121 (funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D .)


state 450

    (128) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN valor LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN returnfun LLAVE_D
    (131) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . contenido RETURN aritmetica LLAVE_D
    (132) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . RETURN valor LLAVE_D
    (133) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . RETURN VARIABLE LLAVE_D
    (134) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . RETURN returnfun LLAVE_D
    (135) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I . RETURN aritmetica LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    RETURN          shift and go to state 570
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    contenido                      shift and go to state 569
    aritmetica                     shift and go to state 161
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 451

    (136) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN tuple LLAVE_D
    (137) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN VARIABLE LLAVE_D
    (138) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I . contenido RETURN returnfun LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    contenido                      shift and go to state 571
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 452

    (140) dectipoTupla -> DOBLE_PUNTO PAR_I tipos . PAR_D

    PAR_D           shift and go to state 572


state 453

    (141) tipos -> tipo .
    (142) tipos -> tipo . tiposentry
    (143) tiposentry -> . COMA tipo
    (144) tiposentry -> . COMA tipo tiposentry

    PAR_D           reduce using rule 141 (tipos -> tipo .)
    COMA            shift and go to state 574

    tiposentry                     shift and go to state 573

state 454

    (104) tipo -> ARRAYCLASS CORCHETE_I . tipo CORCHETE_D
    (97) tipo -> . CHARCLASS
    (98) tipo -> . STRINGCLASS
    (99) tipo -> . BOOLCLASS
    (100) tipo -> . INTCLASS
    (101) tipo -> . LONGCLASS
    (102) tipo -> . DOUBLECLASS
    (103) tipo -> . FLOATCLASS
    (104) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (105) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 336
    STRINGCLASS     shift and go to state 337
    BOOLCLASS       shift and go to state 338
    INTCLASS        shift and go to state 339
    LONGCLASS       shift and go to state 340
    DOUBLECLASS     shift and go to state 341
    FLOATCLASS      shift and go to state 342
    ARRAYCLASS      shift and go to state 343
    LISTCLASS       shift and go to state 344

    tipo                           shift and go to state 575

state 455

    (105) tipo -> LISTCLASS CORCHETE_I . tipo CORCHETE_D
    (97) tipo -> . CHARCLASS
    (98) tipo -> . STRINGCLASS
    (99) tipo -> . BOOLCLASS
    (100) tipo -> . INTCLASS
    (101) tipo -> . LONGCLASS
    (102) tipo -> . DOUBLECLASS
    (103) tipo -> . FLOATCLASS
    (104) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (105) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 336
    STRINGCLASS     shift and go to state 337
    BOOLCLASS       shift and go to state 338
    INTCLASS        shift and go to state 339
    LONGCLASS       shift and go to state 340
    DOUBLECLASS     shift and go to state 341
    FLOATCLASS      shift and go to state 342
    ARRAYCLASS      shift and go to state 343
    LISTCLASS       shift and go to state 344

    tipo                           shift and go to state 576

state 456

    (126) parametros -> PAR_I . declaracion PAR_D
    (127) parametros -> PAR_I . declaracion PAR_D parametros
    (122) declaracion -> . VARIABLE DOBLE_PUNTO tipo
    (123) declaracion -> . VARIABLE DOBLE_PUNTO tipo IGUAL valor

    VARIABLE        shift and go to state 178

    declaracion                    shift and go to state 177

state 457

    (127) parametros -> PAR_I declaracion PAR_D parametros .

    IGUAL           reduce using rule 127 (parametros -> PAR_I declaracion PAR_D parametros .)
    LLAVE_I         reduce using rule 127 (parametros -> PAR_I declaracion PAR_D parametros .)
    DOBLE_PUNTO     reduce using rule 127 (parametros -> PAR_I declaracion PAR_D parametros .)


state 458

    (122) declaracion -> VARIABLE DOBLE_PUNTO tipo .
    (123) declaracion -> VARIABLE DOBLE_PUNTO tipo . IGUAL valor

    PAR_D           reduce using rule 122 (declaracion -> VARIABLE DOBLE_PUNTO tipo .)
    IGUAL           shift and go to state 577


state 459

    (160) castingcall -> VARIABLE PUNTO castingfun .

    DEF             reduce using rule 160 (castingcall -> VARIABLE PUNTO castingfun .)
    VARIABLE        reduce using rule 160 (castingcall -> VARIABLE PUNTO castingfun .)
    PRINTLN         reduce using rule 160 (castingcall -> VARIABLE PUNTO castingfun .)
    PRINT           reduce using rule 160 (castingcall -> VARIABLE PUNTO castingfun .)
    READLINE        reduce using rule 160 (castingcall -> VARIABLE PUNTO castingfun .)
    VAR             reduce using rule 160 (castingcall -> VARIABLE PUNTO castingfun .)
    VAL             reduce using rule 160 (castingcall -> VARIABLE PUNTO castingfun .)
    WHILE           reduce using rule 160 (castingcall -> VARIABLE PUNTO castingfun .)
    FOR             reduce using rule 160 (castingcall -> VARIABLE PUNTO castingfun .)
    IF              reduce using rule 160 (castingcall -> VARIABLE PUNTO castingfun .)
    STRING          reduce using rule 160 (castingcall -> VARIABLE PUNTO castingfun .)
    $end            reduce using rule 160 (castingcall -> VARIABLE PUNTO castingfun .)
    LLAVE_D         reduce using rule 160 (castingcall -> VARIABLE PUNTO castingfun .)
    INT             reduce using rule 160 (castingcall -> VARIABLE PUNTO castingfun .)
    DOUBLE          reduce using rule 160 (castingcall -> VARIABLE PUNTO castingfun .)
    LONG            reduce using rule 160 (castingcall -> VARIABLE PUNTO castingfun .)
    FLOAT           reduce using rule 160 (castingcall -> VARIABLE PUNTO castingfun .)
    CHAR            reduce using rule 160 (castingcall -> VARIABLE PUNTO castingfun .)
    RETURN          reduce using rule 160 (castingcall -> VARIABLE PUNTO castingfun .)
    CASE            reduce using rule 160 (castingcall -> VARIABLE PUNTO castingfun .)


state 460

    (161) castingfun -> TO_INT .

    DEF             reduce using rule 161 (castingfun -> TO_INT .)
    VARIABLE        reduce using rule 161 (castingfun -> TO_INT .)
    PRINTLN         reduce using rule 161 (castingfun -> TO_INT .)
    PRINT           reduce using rule 161 (castingfun -> TO_INT .)
    READLINE        reduce using rule 161 (castingfun -> TO_INT .)
    VAR             reduce using rule 161 (castingfun -> TO_INT .)
    VAL             reduce using rule 161 (castingfun -> TO_INT .)
    WHILE           reduce using rule 161 (castingfun -> TO_INT .)
    FOR             reduce using rule 161 (castingfun -> TO_INT .)
    IF              reduce using rule 161 (castingfun -> TO_INT .)
    STRING          reduce using rule 161 (castingfun -> TO_INT .)
    $end            reduce using rule 161 (castingfun -> TO_INT .)
    LLAVE_D         reduce using rule 161 (castingfun -> TO_INT .)
    INT             reduce using rule 161 (castingfun -> TO_INT .)
    DOUBLE          reduce using rule 161 (castingfun -> TO_INT .)
    LONG            reduce using rule 161 (castingfun -> TO_INT .)
    FLOAT           reduce using rule 161 (castingfun -> TO_INT .)
    CHAR            reduce using rule 161 (castingfun -> TO_INT .)
    RETURN          reduce using rule 161 (castingfun -> TO_INT .)
    CASE            reduce using rule 161 (castingfun -> TO_INT .)


state 461

    (162) castingfun -> TO_DOUBLE .

    DEF             reduce using rule 162 (castingfun -> TO_DOUBLE .)
    VARIABLE        reduce using rule 162 (castingfun -> TO_DOUBLE .)
    PRINTLN         reduce using rule 162 (castingfun -> TO_DOUBLE .)
    PRINT           reduce using rule 162 (castingfun -> TO_DOUBLE .)
    READLINE        reduce using rule 162 (castingfun -> TO_DOUBLE .)
    VAR             reduce using rule 162 (castingfun -> TO_DOUBLE .)
    VAL             reduce using rule 162 (castingfun -> TO_DOUBLE .)
    WHILE           reduce using rule 162 (castingfun -> TO_DOUBLE .)
    FOR             reduce using rule 162 (castingfun -> TO_DOUBLE .)
    IF              reduce using rule 162 (castingfun -> TO_DOUBLE .)
    STRING          reduce using rule 162 (castingfun -> TO_DOUBLE .)
    $end            reduce using rule 162 (castingfun -> TO_DOUBLE .)
    LLAVE_D         reduce using rule 162 (castingfun -> TO_DOUBLE .)
    INT             reduce using rule 162 (castingfun -> TO_DOUBLE .)
    DOUBLE          reduce using rule 162 (castingfun -> TO_DOUBLE .)
    LONG            reduce using rule 162 (castingfun -> TO_DOUBLE .)
    FLOAT           reduce using rule 162 (castingfun -> TO_DOUBLE .)
    CHAR            reduce using rule 162 (castingfun -> TO_DOUBLE .)
    RETURN          reduce using rule 162 (castingfun -> TO_DOUBLE .)
    CASE            reduce using rule 162 (castingfun -> TO_DOUBLE .)


state 462

    (163) castingfun -> TO_FLOAT .

    DEF             reduce using rule 163 (castingfun -> TO_FLOAT .)
    VARIABLE        reduce using rule 163 (castingfun -> TO_FLOAT .)
    PRINTLN         reduce using rule 163 (castingfun -> TO_FLOAT .)
    PRINT           reduce using rule 163 (castingfun -> TO_FLOAT .)
    READLINE        reduce using rule 163 (castingfun -> TO_FLOAT .)
    VAR             reduce using rule 163 (castingfun -> TO_FLOAT .)
    VAL             reduce using rule 163 (castingfun -> TO_FLOAT .)
    WHILE           reduce using rule 163 (castingfun -> TO_FLOAT .)
    FOR             reduce using rule 163 (castingfun -> TO_FLOAT .)
    IF              reduce using rule 163 (castingfun -> TO_FLOAT .)
    STRING          reduce using rule 163 (castingfun -> TO_FLOAT .)
    $end            reduce using rule 163 (castingfun -> TO_FLOAT .)
    LLAVE_D         reduce using rule 163 (castingfun -> TO_FLOAT .)
    INT             reduce using rule 163 (castingfun -> TO_FLOAT .)
    DOUBLE          reduce using rule 163 (castingfun -> TO_FLOAT .)
    LONG            reduce using rule 163 (castingfun -> TO_FLOAT .)
    FLOAT           reduce using rule 163 (castingfun -> TO_FLOAT .)
    CHAR            reduce using rule 163 (castingfun -> TO_FLOAT .)
    RETURN          reduce using rule 163 (castingfun -> TO_FLOAT .)
    CASE            reduce using rule 163 (castingfun -> TO_FLOAT .)


state 463

    (164) castingfun -> TO_LONG .

    DEF             reduce using rule 164 (castingfun -> TO_LONG .)
    VARIABLE        reduce using rule 164 (castingfun -> TO_LONG .)
    PRINTLN         reduce using rule 164 (castingfun -> TO_LONG .)
    PRINT           reduce using rule 164 (castingfun -> TO_LONG .)
    READLINE        reduce using rule 164 (castingfun -> TO_LONG .)
    VAR             reduce using rule 164 (castingfun -> TO_LONG .)
    VAL             reduce using rule 164 (castingfun -> TO_LONG .)
    WHILE           reduce using rule 164 (castingfun -> TO_LONG .)
    FOR             reduce using rule 164 (castingfun -> TO_LONG .)
    IF              reduce using rule 164 (castingfun -> TO_LONG .)
    STRING          reduce using rule 164 (castingfun -> TO_LONG .)
    $end            reduce using rule 164 (castingfun -> TO_LONG .)
    LLAVE_D         reduce using rule 164 (castingfun -> TO_LONG .)
    INT             reduce using rule 164 (castingfun -> TO_LONG .)
    DOUBLE          reduce using rule 164 (castingfun -> TO_LONG .)
    LONG            reduce using rule 164 (castingfun -> TO_LONG .)
    FLOAT           reduce using rule 164 (castingfun -> TO_LONG .)
    CHAR            reduce using rule 164 (castingfun -> TO_LONG .)
    RETURN          reduce using rule 164 (castingfun -> TO_LONG .)
    CASE            reduce using rule 164 (castingfun -> TO_LONG .)


state 464

    (370) stringCastLong -> STRING PUNTO TO_LONG .

    DEF             reduce using rule 370 (stringCastLong -> STRING PUNTO TO_LONG .)
    VARIABLE        reduce using rule 370 (stringCastLong -> STRING PUNTO TO_LONG .)
    PRINTLN         reduce using rule 370 (stringCastLong -> STRING PUNTO TO_LONG .)
    PRINT           reduce using rule 370 (stringCastLong -> STRING PUNTO TO_LONG .)
    READLINE        reduce using rule 370 (stringCastLong -> STRING PUNTO TO_LONG .)
    VAR             reduce using rule 370 (stringCastLong -> STRING PUNTO TO_LONG .)
    VAL             reduce using rule 370 (stringCastLong -> STRING PUNTO TO_LONG .)
    WHILE           reduce using rule 370 (stringCastLong -> STRING PUNTO TO_LONG .)
    FOR             reduce using rule 370 (stringCastLong -> STRING PUNTO TO_LONG .)
    IF              reduce using rule 370 (stringCastLong -> STRING PUNTO TO_LONG .)
    STRING          reduce using rule 370 (stringCastLong -> STRING PUNTO TO_LONG .)
    $end            reduce using rule 370 (stringCastLong -> STRING PUNTO TO_LONG .)
    LLAVE_D         reduce using rule 370 (stringCastLong -> STRING PUNTO TO_LONG .)
    INT             reduce using rule 370 (stringCastLong -> STRING PUNTO TO_LONG .)
    DOUBLE          reduce using rule 370 (stringCastLong -> STRING PUNTO TO_LONG .)
    LONG            reduce using rule 370 (stringCastLong -> STRING PUNTO TO_LONG .)
    FLOAT           reduce using rule 370 (stringCastLong -> STRING PUNTO TO_LONG .)
    CHAR            reduce using rule 370 (stringCastLong -> STRING PUNTO TO_LONG .)
    RETURN          reduce using rule 370 (stringCastLong -> STRING PUNTO TO_LONG .)
    CASE            reduce using rule 370 (stringCastLong -> STRING PUNTO TO_LONG .)


state 465

    (369) stringCastInt -> STRING PUNTO TO_INT .

    DEF             reduce using rule 369 (stringCastInt -> STRING PUNTO TO_INT .)
    VARIABLE        reduce using rule 369 (stringCastInt -> STRING PUNTO TO_INT .)
    PRINTLN         reduce using rule 369 (stringCastInt -> STRING PUNTO TO_INT .)
    PRINT           reduce using rule 369 (stringCastInt -> STRING PUNTO TO_INT .)
    READLINE        reduce using rule 369 (stringCastInt -> STRING PUNTO TO_INT .)
    VAR             reduce using rule 369 (stringCastInt -> STRING PUNTO TO_INT .)
    VAL             reduce using rule 369 (stringCastInt -> STRING PUNTO TO_INT .)
    WHILE           reduce using rule 369 (stringCastInt -> STRING PUNTO TO_INT .)
    FOR             reduce using rule 369 (stringCastInt -> STRING PUNTO TO_INT .)
    IF              reduce using rule 369 (stringCastInt -> STRING PUNTO TO_INT .)
    STRING          reduce using rule 369 (stringCastInt -> STRING PUNTO TO_INT .)
    $end            reduce using rule 369 (stringCastInt -> STRING PUNTO TO_INT .)
    LLAVE_D         reduce using rule 369 (stringCastInt -> STRING PUNTO TO_INT .)
    INT             reduce using rule 369 (stringCastInt -> STRING PUNTO TO_INT .)
    DOUBLE          reduce using rule 369 (stringCastInt -> STRING PUNTO TO_INT .)
    LONG            reduce using rule 369 (stringCastInt -> STRING PUNTO TO_INT .)
    FLOAT           reduce using rule 369 (stringCastInt -> STRING PUNTO TO_INT .)
    CHAR            reduce using rule 369 (stringCastInt -> STRING PUNTO TO_INT .)
    RETURN          reduce using rule 369 (stringCastInt -> STRING PUNTO TO_INT .)
    CASE            reduce using rule 369 (stringCastInt -> STRING PUNTO TO_INT .)


state 466

    (371) stringCastFloat -> STRING PUNTO TO_FLOAT .

    DEF             reduce using rule 371 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    VARIABLE        reduce using rule 371 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    PRINTLN         reduce using rule 371 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    PRINT           reduce using rule 371 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    READLINE        reduce using rule 371 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    VAR             reduce using rule 371 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    VAL             reduce using rule 371 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    WHILE           reduce using rule 371 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    FOR             reduce using rule 371 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    IF              reduce using rule 371 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    STRING          reduce using rule 371 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    $end            reduce using rule 371 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    LLAVE_D         reduce using rule 371 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    INT             reduce using rule 371 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    DOUBLE          reduce using rule 371 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    LONG            reduce using rule 371 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    FLOAT           reduce using rule 371 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    CHAR            reduce using rule 371 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    RETURN          reduce using rule 371 (stringCastFloat -> STRING PUNTO TO_FLOAT .)
    CASE            reduce using rule 371 (stringCastFloat -> STRING PUNTO TO_FLOAT .)


state 467

    (372) stringCastDouble -> STRING PUNTO TO_DOUBLE .

    DEF             reduce using rule 372 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    VARIABLE        reduce using rule 372 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    PRINTLN         reduce using rule 372 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    PRINT           reduce using rule 372 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    READLINE        reduce using rule 372 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    VAR             reduce using rule 372 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    VAL             reduce using rule 372 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    WHILE           reduce using rule 372 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    FOR             reduce using rule 372 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    IF              reduce using rule 372 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    STRING          reduce using rule 372 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    $end            reduce using rule 372 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    LLAVE_D         reduce using rule 372 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    INT             reduce using rule 372 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    DOUBLE          reduce using rule 372 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    LONG            reduce using rule 372 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    FLOAT           reduce using rule 372 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    CHAR            reduce using rule 372 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    RETURN          reduce using rule 372 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)
    CASE            reduce using rule 372 (stringCastDouble -> STRING PUNTO TO_DOUBLE .)


state 468

    (165) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 578


state 469

    (177) tuple -> PAR_I valores PAR_D .

    DEF             reduce using rule 177 (tuple -> PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 177 (tuple -> PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 177 (tuple -> PAR_I valores PAR_D .)
    PRINT           reduce using rule 177 (tuple -> PAR_I valores PAR_D .)
    READLINE        reduce using rule 177 (tuple -> PAR_I valores PAR_D .)
    VAR             reduce using rule 177 (tuple -> PAR_I valores PAR_D .)
    VAL             reduce using rule 177 (tuple -> PAR_I valores PAR_D .)
    WHILE           reduce using rule 177 (tuple -> PAR_I valores PAR_D .)
    FOR             reduce using rule 177 (tuple -> PAR_I valores PAR_D .)
    IF              reduce using rule 177 (tuple -> PAR_I valores PAR_D .)
    STRING          reduce using rule 177 (tuple -> PAR_I valores PAR_D .)
    $end            reduce using rule 177 (tuple -> PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 177 (tuple -> PAR_I valores PAR_D .)
    INT             reduce using rule 177 (tuple -> PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 177 (tuple -> PAR_I valores PAR_D .)
    LONG            reduce using rule 177 (tuple -> PAR_I valores PAR_D .)
    FLOAT           reduce using rule 177 (tuple -> PAR_I valores PAR_D .)
    CHAR            reduce using rule 177 (tuple -> PAR_I valores PAR_D .)
    RETURN          reduce using rule 177 (tuple -> PAR_I valores PAR_D .)
    CASE            reduce using rule 177 (tuple -> PAR_I valores PAR_D .)


state 470

    (172) list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 579


state 471

    (159) castingcall -> returnCastable PUNTO castingfun .

    DEF             reduce using rule 159 (castingcall -> returnCastable PUNTO castingfun .)
    VARIABLE        reduce using rule 159 (castingcall -> returnCastable PUNTO castingfun .)
    PRINTLN         reduce using rule 159 (castingcall -> returnCastable PUNTO castingfun .)
    PRINT           reduce using rule 159 (castingcall -> returnCastable PUNTO castingfun .)
    READLINE        reduce using rule 159 (castingcall -> returnCastable PUNTO castingfun .)
    VAR             reduce using rule 159 (castingcall -> returnCastable PUNTO castingfun .)
    VAL             reduce using rule 159 (castingcall -> returnCastable PUNTO castingfun .)
    WHILE           reduce using rule 159 (castingcall -> returnCastable PUNTO castingfun .)
    FOR             reduce using rule 159 (castingcall -> returnCastable PUNTO castingfun .)
    IF              reduce using rule 159 (castingcall -> returnCastable PUNTO castingfun .)
    STRING          reduce using rule 159 (castingcall -> returnCastable PUNTO castingfun .)
    $end            reduce using rule 159 (castingcall -> returnCastable PUNTO castingfun .)
    LLAVE_D         reduce using rule 159 (castingcall -> returnCastable PUNTO castingfun .)
    INT             reduce using rule 159 (castingcall -> returnCastable PUNTO castingfun .)
    DOUBLE          reduce using rule 159 (castingcall -> returnCastable PUNTO castingfun .)
    LONG            reduce using rule 159 (castingcall -> returnCastable PUNTO castingfun .)
    FLOAT           reduce using rule 159 (castingcall -> returnCastable PUNTO castingfun .)
    CHAR            reduce using rule 159 (castingcall -> returnCastable PUNTO castingfun .)
    RETURN          reduce using rule 159 (castingcall -> returnCastable PUNTO castingfun .)
    CASE            reduce using rule 159 (castingcall -> returnCastable PUNTO castingfun .)


state 472

    (64) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 64 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)


state 473

    (349) asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .

    DEF             reduce using rule 349 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VARIABLE        reduce using rule 349 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    PRINTLN         reduce using rule 349 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    PRINT           reduce using rule 349 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    READLINE        reduce using rule 349 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VAR             reduce using rule 349 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VAL             reduce using rule 349 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    WHILE           reduce using rule 349 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    FOR             reduce using rule 349 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    IF              reduce using rule 349 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    STRING          reduce using rule 349 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    $end            reduce using rule 349 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    LLAVE_D         reduce using rule 349 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    INT             reduce using rule 349 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    DOUBLE          reduce using rule 349 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    LONG            reduce using rule 349 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    FLOAT           reduce using rule 349 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    CHAR            reduce using rule 349 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    RETURN          reduce using rule 349 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    CASE            reduce using rule 349 (asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)


state 474

    (352) longvalues -> LONG .

    DEF             reduce using rule 352 (longvalues -> LONG .)
    VARIABLE        reduce using rule 352 (longvalues -> LONG .)
    PRINTLN         reduce using rule 352 (longvalues -> LONG .)
    PRINT           reduce using rule 352 (longvalues -> LONG .)
    READLINE        reduce using rule 352 (longvalues -> LONG .)
    VAR             reduce using rule 352 (longvalues -> LONG .)
    VAL             reduce using rule 352 (longvalues -> LONG .)
    WHILE           reduce using rule 352 (longvalues -> LONG .)
    FOR             reduce using rule 352 (longvalues -> LONG .)
    IF              reduce using rule 352 (longvalues -> LONG .)
    STRING          reduce using rule 352 (longvalues -> LONG .)
    $end            reduce using rule 352 (longvalues -> LONG .)
    LLAVE_D         reduce using rule 352 (longvalues -> LONG .)
    INT             reduce using rule 352 (longvalues -> LONG .)
    DOUBLE          reduce using rule 352 (longvalues -> LONG .)
    LONG            reduce using rule 352 (longvalues -> LONG .)
    FLOAT           reduce using rule 352 (longvalues -> LONG .)
    CHAR            reduce using rule 352 (longvalues -> LONG .)
    RETURN          reduce using rule 352 (longvalues -> LONG .)
    CASE            reduce using rule 352 (longvalues -> LONG .)


state 475

    (353) longvalues -> intvalues .

    DEF             reduce using rule 353 (longvalues -> intvalues .)
    VARIABLE        reduce using rule 353 (longvalues -> intvalues .)
    PRINTLN         reduce using rule 353 (longvalues -> intvalues .)
    PRINT           reduce using rule 353 (longvalues -> intvalues .)
    READLINE        reduce using rule 353 (longvalues -> intvalues .)
    VAR             reduce using rule 353 (longvalues -> intvalues .)
    VAL             reduce using rule 353 (longvalues -> intvalues .)
    WHILE           reduce using rule 353 (longvalues -> intvalues .)
    FOR             reduce using rule 353 (longvalues -> intvalues .)
    IF              reduce using rule 353 (longvalues -> intvalues .)
    STRING          reduce using rule 353 (longvalues -> intvalues .)
    $end            reduce using rule 353 (longvalues -> intvalues .)
    LLAVE_D         reduce using rule 353 (longvalues -> intvalues .)
    INT             reduce using rule 353 (longvalues -> intvalues .)
    DOUBLE          reduce using rule 353 (longvalues -> intvalues .)
    LONG            reduce using rule 353 (longvalues -> intvalues .)
    FLOAT           reduce using rule 353 (longvalues -> intvalues .)
    CHAR            reduce using rule 353 (longvalues -> intvalues .)
    RETURN          reduce using rule 353 (longvalues -> intvalues .)
    CASE            reduce using rule 353 (longvalues -> intvalues .)


state 476

    (346) intvalues -> INT .

    DEF             reduce using rule 346 (intvalues -> INT .)
    VARIABLE        reduce using rule 346 (intvalues -> INT .)
    PRINTLN         reduce using rule 346 (intvalues -> INT .)
    PRINT           reduce using rule 346 (intvalues -> INT .)
    READLINE        reduce using rule 346 (intvalues -> INT .)
    VAR             reduce using rule 346 (intvalues -> INT .)
    VAL             reduce using rule 346 (intvalues -> INT .)
    WHILE           reduce using rule 346 (intvalues -> INT .)
    FOR             reduce using rule 346 (intvalues -> INT .)
    IF              reduce using rule 346 (intvalues -> INT .)
    STRING          reduce using rule 346 (intvalues -> INT .)
    $end            reduce using rule 346 (intvalues -> INT .)
    LLAVE_D         reduce using rule 346 (intvalues -> INT .)
    INT             reduce using rule 346 (intvalues -> INT .)
    DOUBLE          reduce using rule 346 (intvalues -> INT .)
    LONG            reduce using rule 346 (intvalues -> INT .)
    FLOAT           reduce using rule 346 (intvalues -> INT .)
    CHAR            reduce using rule 346 (intvalues -> INT .)
    RETURN          reduce using rule 346 (intvalues -> INT .)
    CASE            reduce using rule 346 (intvalues -> INT .)


state 477

    (370) stringCastLong -> STRING . PUNTO TO_LONG
    (369) stringCastInt -> STRING . PUNTO TO_INT

    PUNTO           shift and go to state 580


state 478

    (66) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .

    DEF             reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    IF              reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    $end            reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    INT             reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 66 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)


state 479

    (343) asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .

    DEF             reduce using rule 343 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VARIABLE        reduce using rule 343 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    PRINTLN         reduce using rule 343 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    PRINT           reduce using rule 343 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    READLINE        reduce using rule 343 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VAR             reduce using rule 343 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VAL             reduce using rule 343 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    WHILE           reduce using rule 343 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    FOR             reduce using rule 343 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    IF              reduce using rule 343 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    STRING          reduce using rule 343 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    $end            reduce using rule 343 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    LLAVE_D         reduce using rule 343 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    INT             reduce using rule 343 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    DOUBLE          reduce using rule 343 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    LONG            reduce using rule 343 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    FLOAT           reduce using rule 343 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    CHAR            reduce using rule 343 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    RETURN          reduce using rule 343 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    CASE            reduce using rule 343 (asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)


state 480

    (318) asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .

    DEF             reduce using rule 318 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    VARIABLE        reduce using rule 318 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    PRINTLN         reduce using rule 318 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    PRINT           reduce using rule 318 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    READLINE        reduce using rule 318 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    VAR             reduce using rule 318 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    VAL             reduce using rule 318 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    WHILE           reduce using rule 318 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    FOR             reduce using rule 318 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    IF              reduce using rule 318 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    STRING          reduce using rule 318 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    $end            reduce using rule 318 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    LLAVE_D         reduce using rule 318 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    INT             reduce using rule 318 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    DOUBLE          reduce using rule 318 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    LONG            reduce using rule 318 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    FLOAT           reduce using rule 318 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    CHAR            reduce using rule 318 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    RETURN          reduce using rule 318 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    CASE            reduce using rule 318 (asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)


state 481

    (346) intvalues -> INT .
    (308) sumIntChar -> INT . MAS CHAR

    DEF             reduce using rule 346 (intvalues -> INT .)
    VARIABLE        reduce using rule 346 (intvalues -> INT .)
    PRINTLN         reduce using rule 346 (intvalues -> INT .)
    PRINT           reduce using rule 346 (intvalues -> INT .)
    READLINE        reduce using rule 346 (intvalues -> INT .)
    VAR             reduce using rule 346 (intvalues -> INT .)
    VAL             reduce using rule 346 (intvalues -> INT .)
    WHILE           reduce using rule 346 (intvalues -> INT .)
    FOR             reduce using rule 346 (intvalues -> INT .)
    IF              reduce using rule 346 (intvalues -> INT .)
    STRING          reduce using rule 346 (intvalues -> INT .)
    $end            reduce using rule 346 (intvalues -> INT .)
    LLAVE_D         reduce using rule 346 (intvalues -> INT .)
    INT             reduce using rule 346 (intvalues -> INT .)
    DOUBLE          reduce using rule 346 (intvalues -> INT .)
    LONG            reduce using rule 346 (intvalues -> INT .)
    FLOAT           reduce using rule 346 (intvalues -> INT .)
    CHAR            reduce using rule 346 (intvalues -> INT .)
    RETURN          reduce using rule 346 (intvalues -> INT .)
    CASE            reduce using rule 346 (intvalues -> INT .)
    MAS             shift and go to state 581


state 482

    (309) sumIntChar -> CHAR . MAS INT

    MAS             shift and go to state 582


state 483

    (369) stringCastInt -> STRING . PUNTO TO_INT

    PUNTO           shift and go to state 583


state 484

    (69) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .

    DEF             reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    IF              reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    $end            reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    INT             reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 69 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)


state 485

    (356) asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .

    DEF             reduce using rule 356 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VARIABLE        reduce using rule 356 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    PRINTLN         reduce using rule 356 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    PRINT           reduce using rule 356 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    READLINE        reduce using rule 356 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VAR             reduce using rule 356 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VAL             reduce using rule 356 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    WHILE           reduce using rule 356 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    FOR             reduce using rule 356 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    IF              reduce using rule 356 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    STRING          reduce using rule 356 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    $end            reduce using rule 356 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    LLAVE_D         reduce using rule 356 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    INT             reduce using rule 356 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    DOUBLE          reduce using rule 356 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    LONG            reduce using rule 356 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    FLOAT           reduce using rule 356 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    CHAR            reduce using rule 356 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    RETURN          reduce using rule 356 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    CASE            reduce using rule 356 (asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)


state 486

    (359) floatvalues -> FLOAT .

    DEF             reduce using rule 359 (floatvalues -> FLOAT .)
    VARIABLE        reduce using rule 359 (floatvalues -> FLOAT .)
    PRINTLN         reduce using rule 359 (floatvalues -> FLOAT .)
    PRINT           reduce using rule 359 (floatvalues -> FLOAT .)
    READLINE        reduce using rule 359 (floatvalues -> FLOAT .)
    VAR             reduce using rule 359 (floatvalues -> FLOAT .)
    VAL             reduce using rule 359 (floatvalues -> FLOAT .)
    WHILE           reduce using rule 359 (floatvalues -> FLOAT .)
    FOR             reduce using rule 359 (floatvalues -> FLOAT .)
    IF              reduce using rule 359 (floatvalues -> FLOAT .)
    STRING          reduce using rule 359 (floatvalues -> FLOAT .)
    $end            reduce using rule 359 (floatvalues -> FLOAT .)
    LLAVE_D         reduce using rule 359 (floatvalues -> FLOAT .)
    INT             reduce using rule 359 (floatvalues -> FLOAT .)
    DOUBLE          reduce using rule 359 (floatvalues -> FLOAT .)
    LONG            reduce using rule 359 (floatvalues -> FLOAT .)
    FLOAT           reduce using rule 359 (floatvalues -> FLOAT .)
    CHAR            reduce using rule 359 (floatvalues -> FLOAT .)
    RETURN          reduce using rule 359 (floatvalues -> FLOAT .)
    CASE            reduce using rule 359 (floatvalues -> FLOAT .)


state 487

    (360) floatvalues -> longvalues .

    DEF             reduce using rule 360 (floatvalues -> longvalues .)
    VARIABLE        reduce using rule 360 (floatvalues -> longvalues .)
    PRINTLN         reduce using rule 360 (floatvalues -> longvalues .)
    PRINT           reduce using rule 360 (floatvalues -> longvalues .)
    READLINE        reduce using rule 360 (floatvalues -> longvalues .)
    VAR             reduce using rule 360 (floatvalues -> longvalues .)
    VAL             reduce using rule 360 (floatvalues -> longvalues .)
    WHILE           reduce using rule 360 (floatvalues -> longvalues .)
    FOR             reduce using rule 360 (floatvalues -> longvalues .)
    IF              reduce using rule 360 (floatvalues -> longvalues .)
    STRING          reduce using rule 360 (floatvalues -> longvalues .)
    $end            reduce using rule 360 (floatvalues -> longvalues .)
    LLAVE_D         reduce using rule 360 (floatvalues -> longvalues .)
    INT             reduce using rule 360 (floatvalues -> longvalues .)
    DOUBLE          reduce using rule 360 (floatvalues -> longvalues .)
    LONG            reduce using rule 360 (floatvalues -> longvalues .)
    FLOAT           reduce using rule 360 (floatvalues -> longvalues .)
    CHAR            reduce using rule 360 (floatvalues -> longvalues .)
    RETURN          reduce using rule 360 (floatvalues -> longvalues .)
    CASE            reduce using rule 360 (floatvalues -> longvalues .)


state 488

    (371) stringCastFloat -> STRING . PUNTO TO_FLOAT
    (370) stringCastLong -> STRING . PUNTO TO_LONG
    (369) stringCastInt -> STRING . PUNTO TO_INT

    PUNTO           shift and go to state 584


state 489

    (71) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .

    DEF             reduce using rule 71 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 71 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 71 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 71 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 71 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAR             reduce using rule 71 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAL             reduce using rule 71 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 71 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FOR             reduce using rule 71 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    IF              reduce using rule 71 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    STRING          reduce using rule 71 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    $end            reduce using rule 71 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 71 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    INT             reduce using rule 71 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 71 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LONG            reduce using rule 71 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 71 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 71 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 71 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    CASE            reduce using rule 71 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)


state 490

    (363) asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .

    DEF             reduce using rule 363 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VARIABLE        reduce using rule 363 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    PRINTLN         reduce using rule 363 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    PRINT           reduce using rule 363 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    READLINE        reduce using rule 363 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VAR             reduce using rule 363 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VAL             reduce using rule 363 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    WHILE           reduce using rule 363 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    FOR             reduce using rule 363 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    IF              reduce using rule 363 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    STRING          reduce using rule 363 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    $end            reduce using rule 363 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    LLAVE_D         reduce using rule 363 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    INT             reduce using rule 363 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    DOUBLE          reduce using rule 363 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    LONG            reduce using rule 363 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    FLOAT           reduce using rule 363 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    CHAR            reduce using rule 363 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    RETURN          reduce using rule 363 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    CASE            reduce using rule 363 (asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)


state 491

    (312) asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .

    DEF             reduce using rule 312 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    VARIABLE        reduce using rule 312 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    PRINTLN         reduce using rule 312 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    PRINT           reduce using rule 312 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    READLINE        reduce using rule 312 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    VAR             reduce using rule 312 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    VAL             reduce using rule 312 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    WHILE           reduce using rule 312 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    FOR             reduce using rule 312 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    IF              reduce using rule 312 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    STRING          reduce using rule 312 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    $end            reduce using rule 312 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    LLAVE_D         reduce using rule 312 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    INT             reduce using rule 312 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    DOUBLE          reduce using rule 312 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    LONG            reduce using rule 312 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    FLOAT           reduce using rule 312 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    CHAR            reduce using rule 312 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    RETURN          reduce using rule 312 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    CASE            reduce using rule 312 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)


state 492

    (314) asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .

    DEF             reduce using rule 314 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    VARIABLE        reduce using rule 314 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    PRINTLN         reduce using rule 314 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    PRINT           reduce using rule 314 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    READLINE        reduce using rule 314 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    VAR             reduce using rule 314 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    VAL             reduce using rule 314 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    WHILE           reduce using rule 314 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    FOR             reduce using rule 314 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    IF              reduce using rule 314 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    STRING          reduce using rule 314 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    $end            reduce using rule 314 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    LLAVE_D         reduce using rule 314 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    INT             reduce using rule 314 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    DOUBLE          reduce using rule 314 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    LONG            reduce using rule 314 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    FLOAT           reduce using rule 314 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    CHAR            reduce using rule 314 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    RETURN          reduce using rule 314 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    CASE            reduce using rule 314 (asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)


state 493

    (366) doublevalues -> DOUBLE .
    (305) sumIntDouble -> DOUBLE . MAS INT
    (306) sumDoubleChar -> DOUBLE . MAS CHAR

    DEF             reduce using rule 366 (doublevalues -> DOUBLE .)
    VARIABLE        reduce using rule 366 (doublevalues -> DOUBLE .)
    PRINTLN         reduce using rule 366 (doublevalues -> DOUBLE .)
    PRINT           reduce using rule 366 (doublevalues -> DOUBLE .)
    READLINE        reduce using rule 366 (doublevalues -> DOUBLE .)
    VAR             reduce using rule 366 (doublevalues -> DOUBLE .)
    VAL             reduce using rule 366 (doublevalues -> DOUBLE .)
    WHILE           reduce using rule 366 (doublevalues -> DOUBLE .)
    FOR             reduce using rule 366 (doublevalues -> DOUBLE .)
    IF              reduce using rule 366 (doublevalues -> DOUBLE .)
    STRING          reduce using rule 366 (doublevalues -> DOUBLE .)
    $end            reduce using rule 366 (doublevalues -> DOUBLE .)
    LLAVE_D         reduce using rule 366 (doublevalues -> DOUBLE .)
    INT             reduce using rule 366 (doublevalues -> DOUBLE .)
    DOUBLE          reduce using rule 366 (doublevalues -> DOUBLE .)
    LONG            reduce using rule 366 (doublevalues -> DOUBLE .)
    FLOAT           reduce using rule 366 (doublevalues -> DOUBLE .)
    CHAR            reduce using rule 366 (doublevalues -> DOUBLE .)
    RETURN          reduce using rule 366 (doublevalues -> DOUBLE .)
    CASE            reduce using rule 366 (doublevalues -> DOUBLE .)
    MAS             shift and go to state 585


state 494

    (367) doublevalues -> floatvalues .

    DEF             reduce using rule 367 (doublevalues -> floatvalues .)
    VARIABLE        reduce using rule 367 (doublevalues -> floatvalues .)
    PRINTLN         reduce using rule 367 (doublevalues -> floatvalues .)
    PRINT           reduce using rule 367 (doublevalues -> floatvalues .)
    READLINE        reduce using rule 367 (doublevalues -> floatvalues .)
    VAR             reduce using rule 367 (doublevalues -> floatvalues .)
    VAL             reduce using rule 367 (doublevalues -> floatvalues .)
    WHILE           reduce using rule 367 (doublevalues -> floatvalues .)
    FOR             reduce using rule 367 (doublevalues -> floatvalues .)
    IF              reduce using rule 367 (doublevalues -> floatvalues .)
    STRING          reduce using rule 367 (doublevalues -> floatvalues .)
    $end            reduce using rule 367 (doublevalues -> floatvalues .)
    LLAVE_D         reduce using rule 367 (doublevalues -> floatvalues .)
    INT             reduce using rule 367 (doublevalues -> floatvalues .)
    DOUBLE          reduce using rule 367 (doublevalues -> floatvalues .)
    LONG            reduce using rule 367 (doublevalues -> floatvalues .)
    FLOAT           reduce using rule 367 (doublevalues -> floatvalues .)
    CHAR            reduce using rule 367 (doublevalues -> floatvalues .)
    RETURN          reduce using rule 367 (doublevalues -> floatvalues .)
    CASE            reduce using rule 367 (doublevalues -> floatvalues .)


state 495

    (304) sumIntDouble -> INT . MAS DOUBLE
    (346) intvalues -> INT .

    MAS             shift and go to state 586
    DEF             reduce using rule 346 (intvalues -> INT .)
    VARIABLE        reduce using rule 346 (intvalues -> INT .)
    PRINTLN         reduce using rule 346 (intvalues -> INT .)
    PRINT           reduce using rule 346 (intvalues -> INT .)
    READLINE        reduce using rule 346 (intvalues -> INT .)
    VAR             reduce using rule 346 (intvalues -> INT .)
    VAL             reduce using rule 346 (intvalues -> INT .)
    WHILE           reduce using rule 346 (intvalues -> INT .)
    FOR             reduce using rule 346 (intvalues -> INT .)
    IF              reduce using rule 346 (intvalues -> INT .)
    STRING          reduce using rule 346 (intvalues -> INT .)
    $end            reduce using rule 346 (intvalues -> INT .)
    LLAVE_D         reduce using rule 346 (intvalues -> INT .)
    INT             reduce using rule 346 (intvalues -> INT .)
    DOUBLE          reduce using rule 346 (intvalues -> INT .)
    LONG            reduce using rule 346 (intvalues -> INT .)
    FLOAT           reduce using rule 346 (intvalues -> INT .)
    CHAR            reduce using rule 346 (intvalues -> INT .)
    RETURN          reduce using rule 346 (intvalues -> INT .)
    CASE            reduce using rule 346 (intvalues -> INT .)


state 496

    (307) sumDoubleChar -> CHAR . MAS DOUBLE

    MAS             shift and go to state 587


state 497

    (372) stringCastDouble -> STRING . PUNTO TO_DOUBLE
    (371) stringCastFloat -> STRING . PUNTO TO_FLOAT
    (370) stringCastLong -> STRING . PUNTO TO_LONG
    (369) stringCastInt -> STRING . PUNTO TO_INT

    PUNTO           shift and go to state 588


state 498

    (78) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 78 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 78 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 78 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 78 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 78 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 78 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 78 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 78 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 78 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 78 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 78 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 78 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 78 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 78 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 78 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 78 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 78 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 78 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 78 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 78 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)


state 499

    (75) asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .
    (310) sumStringChar -> STRING . MAS CHAR

    DEF             reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VARIABLE        reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINTLN         reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINT           reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    READLINE        reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAR             reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAL             reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    WHILE           reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FOR             reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    IF              reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    STRING          reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    $end            reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LLAVE_D         reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    INT             reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    DOUBLE          reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LONG            reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FLOAT           reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    CHAR            reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    RETURN          reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    CASE            reduce using rule 75 (asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    MAS             shift and go to state 269


state 500

    (316) asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .

    DEF             reduce using rule 316 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    VARIABLE        reduce using rule 316 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    PRINTLN         reduce using rule 316 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    PRINT           reduce using rule 316 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    READLINE        reduce using rule 316 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    VAR             reduce using rule 316 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    VAL             reduce using rule 316 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    WHILE           reduce using rule 316 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    FOR             reduce using rule 316 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    IF              reduce using rule 316 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    STRING          reduce using rule 316 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    $end            reduce using rule 316 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    LLAVE_D         reduce using rule 316 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    INT             reduce using rule 316 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    DOUBLE          reduce using rule 316 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    LONG            reduce using rule 316 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    FLOAT           reduce using rule 316 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    CHAR            reduce using rule 316 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    RETURN          reduce using rule 316 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    CASE            reduce using rule 316 (asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)


state 501

    (311) sumStringChar -> CHAR . MAS STRING

    MAS             shift and go to state 589


state 502

    (85) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .

    DEF             reduce using rule 85 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 85 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 85 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 85 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 85 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 85 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 85 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 85 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 85 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    IF              reduce using rule 85 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 85 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    $end            reduce using rule 85 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 85 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    INT             reduce using rule 85 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 85 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 85 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 85 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 85 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 85 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 85 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)


state 503

    (82) asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .

    DEF             reduce using rule 82 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VARIABLE        reduce using rule 82 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINTLN         reduce using rule 82 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINT           reduce using rule 82 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    READLINE        reduce using rule 82 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAR             reduce using rule 82 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAL             reduce using rule 82 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    WHILE           reduce using rule 82 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FOR             reduce using rule 82 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    IF              reduce using rule 82 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    STRING          reduce using rule 82 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    $end            reduce using rule 82 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LLAVE_D         reduce using rule 82 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    INT             reduce using rule 82 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    DOUBLE          reduce using rule 82 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LONG            reduce using rule 82 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FLOAT           reduce using rule 82 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    CHAR            reduce using rule 82 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    RETURN          reduce using rule 82 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    CASE            reduce using rule 82 (asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)


state 504

    (91) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .

    DEF             reduce using rule 91 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 91 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 91 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 91 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 91 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 91 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 91 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 91 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 91 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    IF              reduce using rule 91 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 91 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    $end            reduce using rule 91 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 91 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    INT             reduce using rule 91 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 91 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 91 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 91 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 91 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 91 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 91 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)


state 505

    (88) asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .

    DEF             reduce using rule 88 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VARIABLE        reduce using rule 88 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINTLN         reduce using rule 88 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINT           reduce using rule 88 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    READLINE        reduce using rule 88 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAR             reduce using rule 88 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAL             reduce using rule 88 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    WHILE           reduce using rule 88 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FOR             reduce using rule 88 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    IF              reduce using rule 88 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    STRING          reduce using rule 88 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    $end            reduce using rule 88 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LLAVE_D         reduce using rule 88 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    INT             reduce using rule 88 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    DOUBLE          reduce using rule 88 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LONG            reduce using rule 88 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FLOAT           reduce using rule 88 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    CHAR            reduce using rule 88 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    RETURN          reduce using rule 88 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    CASE            reduce using rule 88 (asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)


state 506

    (166) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 590


state 507

    (284) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS . CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (100) tipo -> INTCLASS .

  ! shift/reduce conflict for CORCHETE_D resolved as shift
    CORCHETE_D      shift and go to state 591

  ! CORCHETE_D      [ reduce using rule 100 (tipo -> INTCLASS .) ]


state 508

    (285) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS . CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (102) tipo -> DOUBLECLASS .

  ! shift/reduce conflict for CORCHETE_D resolved as shift
    CORCHETE_D      shift and go to state 592

  ! CORCHETE_D      [ reduce using rule 102 (tipo -> DOUBLECLASS .) ]


state 509

    (322) dectupla -> PAR_I STRINGCLASS COMA . INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D
    (323) dectupla -> PAR_I STRINGCLASS COMA . LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D
    (324) dectupla -> PAR_I STRINGCLASS COMA . DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D
    (325) dectupla -> PAR_I STRINGCLASS COMA . FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D

    INTCLASS        shift and go to state 593
    LONGCLASS       shift and go to state 594
    DOUBLECLASS     shift and go to state 595
    FLOATCLASS      shift and go to state 596


state 510

    (338) dectupla -> PAR_I INTCLASS COMA . STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D
    (339) dectupla -> PAR_I INTCLASS COMA . LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D
    (340) dectupla -> PAR_I INTCLASS COMA . DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D
    (341) dectupla -> PAR_I INTCLASS COMA . FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    STRINGCLASS     shift and go to state 597
    LONGCLASS       shift and go to state 598
    DOUBLECLASS     shift and go to state 599
    FLOATCLASS      shift and go to state 600


state 511

    (334) dectupla -> PAR_I LONGCLASS COMA . STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D
    (335) dectupla -> PAR_I LONGCLASS COMA . INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D
    (336) dectupla -> PAR_I LONGCLASS COMA . DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D
    (337) dectupla -> PAR_I LONGCLASS COMA . FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D

    STRINGCLASS     shift and go to state 601
    INTCLASS        shift and go to state 602
    DOUBLECLASS     shift and go to state 603
    FLOATCLASS      shift and go to state 604


state 512

    (330) dectupla -> PAR_I DOUBLECLASS COMA . STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D
    (331) dectupla -> PAR_I DOUBLECLASS COMA . LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D
    (332) dectupla -> PAR_I DOUBLECLASS COMA . FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D
    (333) dectupla -> PAR_I DOUBLECLASS COMA . INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D

    STRINGCLASS     shift and go to state 605
    LONGCLASS       shift and go to state 606
    FLOATCLASS      shift and go to state 607
    INTCLASS        shift and go to state 608


state 513

    (326) dectupla -> PAR_I FLOATCLASS COMA . STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D
    (327) dectupla -> PAR_I FLOATCLASS COMA . LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D
    (328) dectupla -> PAR_I FLOATCLASS COMA . DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D
    (329) dectupla -> PAR_I FLOATCLASS COMA . INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D

    STRINGCLASS     shift and go to state 609
    LONGCLASS       shift and go to state 610
    DOUBLECLASS     shift and go to state 611
    INTCLASS        shift and go to state 612


state 514

    (295) listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS . CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D

    CORCHETE_D      shift and go to state 613


state 515

    (293) listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS . CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    CORCHETE_D      shift and go to state 614


state 516

    (167) array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 615


state 517

    (171) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores . PAR_D

    PAR_D           shift and go to state 616


state 518

    (65) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 65 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE .)


state 519

    (351) asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .

    DEF             reduce using rule 351 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VARIABLE        reduce using rule 351 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    PRINTLN         reduce using rule 351 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    PRINT           reduce using rule 351 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    READLINE        reduce using rule 351 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VAR             reduce using rule 351 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    VAL             reduce using rule 351 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    WHILE           reduce using rule 351 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    FOR             reduce using rule 351 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    IF              reduce using rule 351 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    STRING          reduce using rule 351 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    $end            reduce using rule 351 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    LLAVE_D         reduce using rule 351 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    INT             reduce using rule 351 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    DOUBLE          reduce using rule 351 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    LONG            reduce using rule 351 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    FLOAT           reduce using rule 351 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    CHAR            reduce using rule 351 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    RETURN          reduce using rule 351 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)
    CASE            reduce using rule 351 (asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues .)


state 520

    (67) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .

    DEF             reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    IF              reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    $end            reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    INT             reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 67 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE .)


state 521

    (345) asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .

    DEF             reduce using rule 345 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VARIABLE        reduce using rule 345 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    PRINTLN         reduce using rule 345 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    PRINT           reduce using rule 345 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    READLINE        reduce using rule 345 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VAR             reduce using rule 345 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    VAL             reduce using rule 345 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    WHILE           reduce using rule 345 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    FOR             reduce using rule 345 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    IF              reduce using rule 345 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    STRING          reduce using rule 345 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    $end            reduce using rule 345 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    LLAVE_D         reduce using rule 345 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    INT             reduce using rule 345 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    DOUBLE          reduce using rule 345 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    LONG            reduce using rule 345 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    FLOAT           reduce using rule 345 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    CHAR            reduce using rule 345 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    RETURN          reduce using rule 345 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)
    CASE            reduce using rule 345 (asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues .)


state 522

    (319) asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .

    DEF             reduce using rule 319 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    VARIABLE        reduce using rule 319 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    PRINTLN         reduce using rule 319 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    PRINT           reduce using rule 319 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    READLINE        reduce using rule 319 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    VAR             reduce using rule 319 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    VAL             reduce using rule 319 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    WHILE           reduce using rule 319 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    FOR             reduce using rule 319 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    IF              reduce using rule 319 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    STRING          reduce using rule 319 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    $end            reduce using rule 319 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    LLAVE_D         reduce using rule 319 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    INT             reduce using rule 319 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    DOUBLE          reduce using rule 319 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    LONG            reduce using rule 319 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    FLOAT           reduce using rule 319 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    CHAR            reduce using rule 319 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    RETURN          reduce using rule 319 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)
    CASE            reduce using rule 319 (asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar .)


state 523

    (70) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .

    DEF             reduce using rule 70 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 70 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 70 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 70 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 70 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 70 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 70 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 70 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 70 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    IF              reduce using rule 70 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 70 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    $end            reduce using rule 70 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 70 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    INT             reduce using rule 70 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 70 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 70 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 70 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 70 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 70 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 70 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE .)


state 524

    (358) asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .

    DEF             reduce using rule 358 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VARIABLE        reduce using rule 358 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    PRINTLN         reduce using rule 358 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    PRINT           reduce using rule 358 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    READLINE        reduce using rule 358 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VAR             reduce using rule 358 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    VAL             reduce using rule 358 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    WHILE           reduce using rule 358 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    FOR             reduce using rule 358 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    IF              reduce using rule 358 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    STRING          reduce using rule 358 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    $end            reduce using rule 358 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    LLAVE_D         reduce using rule 358 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    INT             reduce using rule 358 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    DOUBLE          reduce using rule 358 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    LONG            reduce using rule 358 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    FLOAT           reduce using rule 358 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    CHAR            reduce using rule 358 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    RETURN          reduce using rule 358 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)
    CASE            reduce using rule 358 (asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues .)


state 525

    (72) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .

    DEF             reduce using rule 72 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 72 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 72 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 72 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 72 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAR             reduce using rule 72 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    VAL             reduce using rule 72 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 72 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FOR             reduce using rule 72 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    IF              reduce using rule 72 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    STRING          reduce using rule 72 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    $end            reduce using rule 72 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 72 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    INT             reduce using rule 72 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 72 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    LONG            reduce using rule 72 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 72 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 72 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 72 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)
    CASE            reduce using rule 72 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE .)


state 526

    (365) asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .

    DEF             reduce using rule 365 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VARIABLE        reduce using rule 365 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    PRINTLN         reduce using rule 365 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    PRINT           reduce using rule 365 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    READLINE        reduce using rule 365 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VAR             reduce using rule 365 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    VAL             reduce using rule 365 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    WHILE           reduce using rule 365 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    FOR             reduce using rule 365 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    IF              reduce using rule 365 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    STRING          reduce using rule 365 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    $end            reduce using rule 365 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    LLAVE_D         reduce using rule 365 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    INT             reduce using rule 365 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    DOUBLE          reduce using rule 365 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    LONG            reduce using rule 365 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    FLOAT           reduce using rule 365 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    CHAR            reduce using rule 365 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    RETURN          reduce using rule 365 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)
    CASE            reduce using rule 365 (asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues .)


state 527

    (313) asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .

    DEF             reduce using rule 313 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    VARIABLE        reduce using rule 313 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    PRINTLN         reduce using rule 313 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    PRINT           reduce using rule 313 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    READLINE        reduce using rule 313 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    VAR             reduce using rule 313 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    VAL             reduce using rule 313 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    WHILE           reduce using rule 313 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    FOR             reduce using rule 313 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    IF              reduce using rule 313 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    STRING          reduce using rule 313 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    $end            reduce using rule 313 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    LLAVE_D         reduce using rule 313 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    INT             reduce using rule 313 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    DOUBLE          reduce using rule 313 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    LONG            reduce using rule 313 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    FLOAT           reduce using rule 313 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    CHAR            reduce using rule 313 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    RETURN          reduce using rule 313 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)
    CASE            reduce using rule 313 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble .)


state 528

    (315) asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .

    DEF             reduce using rule 315 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    VARIABLE        reduce using rule 315 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    PRINTLN         reduce using rule 315 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    PRINT           reduce using rule 315 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    READLINE        reduce using rule 315 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    VAR             reduce using rule 315 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    VAL             reduce using rule 315 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    WHILE           reduce using rule 315 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    FOR             reduce using rule 315 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    IF              reduce using rule 315 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    STRING          reduce using rule 315 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    $end            reduce using rule 315 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    LLAVE_D         reduce using rule 315 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    INT             reduce using rule 315 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    DOUBLE          reduce using rule 315 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    LONG            reduce using rule 315 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    FLOAT           reduce using rule 315 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    CHAR            reduce using rule 315 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    RETURN          reduce using rule 315 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)
    CASE            reduce using rule 315 (asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar .)


state 529

    (79) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .

    DEF             reduce using rule 79 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 79 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 79 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 79 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 79 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 79 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 79 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 79 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 79 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    IF              reduce using rule 79 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 79 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    $end            reduce using rule 79 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 79 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    INT             reduce using rule 79 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 79 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 79 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 79 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 79 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 79 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 79 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE .)


state 530

    (77) asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .
    (310) sumStringChar -> STRING . MAS CHAR

    DEF             reduce using rule 77 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VARIABLE        reduce using rule 77 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINTLN         reduce using rule 77 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    PRINT           reduce using rule 77 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    READLINE        reduce using rule 77 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAR             reduce using rule 77 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    VAL             reduce using rule 77 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    WHILE           reduce using rule 77 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FOR             reduce using rule 77 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    IF              reduce using rule 77 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    STRING          reduce using rule 77 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    $end            reduce using rule 77 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LLAVE_D         reduce using rule 77 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    INT             reduce using rule 77 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    DOUBLE          reduce using rule 77 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    LONG            reduce using rule 77 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    FLOAT           reduce using rule 77 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    CHAR            reduce using rule 77 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    RETURN          reduce using rule 77 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    CASE            reduce using rule 77 (asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING .)
    MAS             shift and go to state 269


state 531

    (317) asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .

    DEF             reduce using rule 317 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    VARIABLE        reduce using rule 317 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    PRINTLN         reduce using rule 317 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    PRINT           reduce using rule 317 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    READLINE        reduce using rule 317 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    VAR             reduce using rule 317 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    VAL             reduce using rule 317 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    WHILE           reduce using rule 317 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    FOR             reduce using rule 317 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    IF              reduce using rule 317 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    STRING          reduce using rule 317 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    $end            reduce using rule 317 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    LLAVE_D         reduce using rule 317 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    INT             reduce using rule 317 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    DOUBLE          reduce using rule 317 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    LONG            reduce using rule 317 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    FLOAT           reduce using rule 317 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    CHAR            reduce using rule 317 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    RETURN          reduce using rule 317 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)
    CASE            reduce using rule 317 (asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar .)


state 532

    (86) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .

    DEF             reduce using rule 86 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 86 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 86 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 86 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 86 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 86 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 86 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 86 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 86 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    IF              reduce using rule 86 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 86 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    $end            reduce using rule 86 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 86 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    INT             reduce using rule 86 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 86 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 86 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 86 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 86 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 86 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 86 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE .)


state 533

    (84) asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .

    DEF             reduce using rule 84 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VARIABLE        reduce using rule 84 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINTLN         reduce using rule 84 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    PRINT           reduce using rule 84 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    READLINE        reduce using rule 84 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAR             reduce using rule 84 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    VAL             reduce using rule 84 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    WHILE           reduce using rule 84 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FOR             reduce using rule 84 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    IF              reduce using rule 84 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    STRING          reduce using rule 84 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    $end            reduce using rule 84 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LLAVE_D         reduce using rule 84 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    INT             reduce using rule 84 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    DOUBLE          reduce using rule 84 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    LONG            reduce using rule 84 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    FLOAT           reduce using rule 84 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    CHAR            reduce using rule 84 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    RETURN          reduce using rule 84 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)
    CASE            reduce using rule 84 (asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR .)


state 534

    (92) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .

    DEF             reduce using rule 92 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VARIABLE        reduce using rule 92 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINTLN         reduce using rule 92 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    PRINT           reduce using rule 92 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    READLINE        reduce using rule 92 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAR             reduce using rule 92 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    VAL             reduce using rule 92 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    WHILE           reduce using rule 92 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FOR             reduce using rule 92 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    IF              reduce using rule 92 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    STRING          reduce using rule 92 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    $end            reduce using rule 92 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LLAVE_D         reduce using rule 92 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    INT             reduce using rule 92 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    DOUBLE          reduce using rule 92 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    LONG            reduce using rule 92 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    FLOAT           reduce using rule 92 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    CHAR            reduce using rule 92 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    RETURN          reduce using rule 92 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)
    CASE            reduce using rule 92 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE .)


state 535

    (90) asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .

    DEF             reduce using rule 90 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VARIABLE        reduce using rule 90 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINTLN         reduce using rule 90 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    PRINT           reduce using rule 90 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    READLINE        reduce using rule 90 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAR             reduce using rule 90 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    VAL             reduce using rule 90 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    WHILE           reduce using rule 90 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FOR             reduce using rule 90 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    IF              reduce using rule 90 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    STRING          reduce using rule 90 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    $end            reduce using rule 90 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LLAVE_D         reduce using rule 90 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    INT             reduce using rule 90 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    DOUBLE          reduce using rule 90 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    LONG            reduce using rule 90 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    FLOAT           reduce using rule 90 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    CHAR            reduce using rule 90 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    RETURN          reduce using rule 90 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)
    CASE            reduce using rule 90 (asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos .)


state 536

    (168) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo . CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 617


state 537

    (294) listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS . CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D

    CORCHETE_D      shift and go to state 618


state 538

    (292) listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS . CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    CORCHETE_D      shift and go to state 619


state 539

    (180) while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 620


state 540

    (181) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 621


state 541

    (185) for -> FOR PAR_I VAR VARIABLE ITERATOR INT . TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> FOR PAR_I VAR VARIABLE ITERATOR INT . UNTIL INT PAR_D LLAVE_I contenido LLAVE_D

    TO              shift and go to state 622
    UNTIL           shift and go to state 623


state 542

    (182) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 624


state 543

    (183) for -> FOR PAR_I VARIABLE ITERATOR INT TO . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 625


state 544

    (184) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 626


state 545

    (226) if -> IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 627


state 546

    (290) startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .

    DEF             reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    VARIABLE        reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    PRINTLN         reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    PRINT           reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    READLINE        reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    VAR             reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    VAL             reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    WHILE           reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    FOR             reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    IF              reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    STRING          reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    $end            reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    LLAVE_D         reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    COMA            reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    PAR_D           reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    MAS             reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    IGUAL_COMPARACION reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    DIFERENTE       reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    MAYOR           reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    MENOR           reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    AND             reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    OR              reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    NOT             reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    INT             reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    DOUBLE          reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    LONG            reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    FLOAT           reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    CHAR            reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    RETURN          reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    CASE            reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)
    FUNCION_FLECHA  reduce using rule 290 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D .)


state 547

    (291) startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA . INT PAR_D

    INT             shift and go to state 628


state 548

    (223) defcase -> CASE SUBGUION FUNCION_FLECHA . codeBlock
    (224) codeBlock -> . contenidoLine
    (225) codeBlock -> . LLAVE_I contenido LLAVE_D
    (44) contenidoLine -> . asignacion
    (45) contenidoLine -> . reasignacion
    (46) contenidoLine -> . funcall
    (47) contenidoLine -> . impresion
    (48) contenidoLine -> . entrada
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D

    LLAVE_I         shift and go to state 551
    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 557
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19

    codeBlock                      shift and go to state 629
    contenidoLine                  shift and go to state 550
    asignacion                     shift and go to state 552
    reasignacion                   shift and go to state 553
    funcall                        shift and go to state 554
    impresion                      shift and go to state 555
    entrada                        shift and go to state 556
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41

state 549

    (195) caseInt -> CASE INT FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 195 (caseInt -> CASE INT FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 195 (caseInt -> CASE INT FUNCION_FLECHA codeBlock .)


state 550

    (224) codeBlock -> contenidoLine .

    CASE            reduce using rule 224 (codeBlock -> contenidoLine .)
    LLAVE_D         reduce using rule 224 (codeBlock -> contenidoLine .)


state 551

    (225) codeBlock -> LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    contenido                      shift and go to state 630
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 552

    (44) contenidoLine -> asignacion .

    CASE            reduce using rule 44 (contenidoLine -> asignacion .)
    LLAVE_D         reduce using rule 44 (contenidoLine -> asignacion .)


state 553

    (45) contenidoLine -> reasignacion .

    CASE            reduce using rule 45 (contenidoLine -> reasignacion .)
    LLAVE_D         reduce using rule 45 (contenidoLine -> reasignacion .)


state 554

    (46) contenidoLine -> funcall .

    CASE            reduce using rule 46 (contenidoLine -> funcall .)
    LLAVE_D         reduce using rule 46 (contenidoLine -> funcall .)


state 555

    (47) contenidoLine -> impresion .

    CASE            reduce using rule 47 (contenidoLine -> impresion .)
    LLAVE_D         reduce using rule 47 (contenidoLine -> impresion .)


state 556

    (48) contenidoLine -> entrada .

    CASE            reduce using rule 48 (contenidoLine -> entrada .)
    LLAVE_D         reduce using rule 48 (contenidoLine -> entrada .)


state 557

    (93) reasignacion -> VARIABLE . IGUAL valor
    (94) reasignacion -> VARIABLE . IGUAL returnfun
    (95) reasignacion -> VARIABLE . IGUAL aritmetica
    (96) reasignacion -> VARIABLE . PAR_I INT PAR_D IGUAL valor
    (150) funcall -> VARIABLE . varparen
    (151) varparen -> . PAR_I valores PAR_D
    (152) varparen -> . PAR_I PAR_D
    (153) varparen -> . varparen PAR_I valores PAR_D
    (154) varparen -> . varparen PAR_I PAR_D

    IGUAL           shift and go to state 328
    PAR_I           shift and go to state 329

    varparen                       shift and go to state 43

state 558

    (199) caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 199 (caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 199 (caseLgn -> CASE LONG FUNCION_FLECHA codeBlock .)


state 559

    (203) caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 203 (caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 203 (caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock .)


state 560

    (207) caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 207 (caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 207 (caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock .)


state 561

    (211) caseStr -> CASE STRING FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 211 (caseStr -> CASE STRING FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 211 (caseStr -> CASE STRING FUNCION_FLECHA codeBlock .)


state 562

    (215) caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 215 (caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 215 (caseChar -> CASE CHAR FUNCION_FLECHA codeBlock .)


state 563

    (219) caseBool -> CASE booleanos FUNCION_FLECHA codeBlock .

    CASE            reduce using rule 219 (caseBool -> CASE booleanos FUNCION_FLECHA codeBlock .)
    LLAVE_D         reduce using rule 219 (caseBool -> CASE booleanos FUNCION_FLECHA codeBlock .)


state 564

    (4) io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO . READLINE

    READLINE        shift and go to state 631


state 565

    (229) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D
    (230) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I . contenido LLAVE_D elseif
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    contenido                      shift and go to state 632
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 566

    (111) valor -> VARIABLE PAR_I . VARIABLE PAR_D
    (112) valor -> VARIABLE PAR_I . INT PAR_D
    (151) varparen -> PAR_I . valores PAR_D
    (152) varparen -> PAR_I . PAR_D
    (175) valores -> . valor
    (176) valores -> . valor COMA valores
    (106) valor -> . STRING
    (107) valor -> . CHAR
    (108) valor -> . VARIABLE
    (109) valor -> . numeros
    (110) valor -> . booleanos
    (111) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (112) valor -> . VARIABLE PAR_I INT PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    VARIABLE        shift and go to state 633
    INT             shift and go to state 634
    PAR_D           shift and go to state 72
    STRING          shift and go to state 74
    CHAR            shift and go to state 75
    LONG            shift and go to state 80
    FLOAT           shift and go to state 81
    DOUBLE          shift and go to state 82
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84

    valores                        shift and go to state 71
    valor                          shift and go to state 73
    numeros                        shift and go to state 77
    booleanos                      shift and go to state 78
    startsWith                     shift and go to state 85

state 567

    (96) reasignacion -> VARIABLE PAR_I INT PAR_D . IGUAL valor

    IGUAL           shift and go to state 635


state 568

    (120) funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 120 (funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D .)


state 569

    (128) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN valor LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN returnfun LLAVE_D
    (131) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido . RETURN aritmetica LLAVE_D

    RETURN          shift and go to state 636


state 570

    (132) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN . valor LLAVE_D
    (133) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN . VARIABLE LLAVE_D
    (134) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN . returnfun LLAVE_D
    (135) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN . aritmetica LLAVE_D
    (106) valor -> . STRING
    (107) valor -> . CHAR
    (108) valor -> . VARIABLE
    (109) valor -> . numeros
    (110) valor -> . booleanos
    (111) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (112) valor -> . VARIABLE PAR_I INT PAR_D
    (155) returnfun -> . returnCastable
    (156) returnfun -> . castingcall
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (157) returnCastable -> . entrada
    (158) returnCastable -> . funcall
    (159) castingcall -> . returnCastable PUNTO castingfun
    (160) castingcall -> . VARIABLE PUNTO castingfun
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (150) funcall -> . VARIABLE varparen
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VARIABLE        shift and go to state 637
    STRING          shift and go to state 444
    CHAR            shift and go to state 445
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84
    READLINE        shift and go to state 19

    valor                          shift and go to state 638
    returnfun                      shift and go to state 639
    aritmetica                     shift and go to state 640
    numeros                        shift and go to state 446
    booleanos                      shift and go to state 78
    returnCastable                 shift and go to state 200
    castingcall                    shift and go to state 201
    suma                           shift and go to state 118
    startsWith                     shift and go to state 85
    entrada                        shift and go to state 206
    funcall                        shift and go to state 207
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 571

    (136) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN tuple LLAVE_D
    (137) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN VARIABLE LLAVE_D
    (138) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido . RETURN returnfun LLAVE_D

    RETURN          shift and go to state 641


state 572

    (140) dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D .

    IGUAL           reduce using rule 140 (dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D .)


state 573

    (142) tipos -> tipo tiposentry .

    PAR_D           reduce using rule 142 (tipos -> tipo tiposentry .)


state 574

    (143) tiposentry -> COMA . tipo
    (144) tiposentry -> COMA . tipo tiposentry
    (97) tipo -> . CHARCLASS
    (98) tipo -> . STRINGCLASS
    (99) tipo -> . BOOLCLASS
    (100) tipo -> . INTCLASS
    (101) tipo -> . LONGCLASS
    (102) tipo -> . DOUBLECLASS
    (103) tipo -> . FLOATCLASS
    (104) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (105) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 336
    STRINGCLASS     shift and go to state 337
    BOOLCLASS       shift and go to state 338
    INTCLASS        shift and go to state 339
    LONGCLASS       shift and go to state 340
    DOUBLECLASS     shift and go to state 341
    FLOATCLASS      shift and go to state 342
    ARRAYCLASS      shift and go to state 343
    LISTCLASS       shift and go to state 344

    tipo                           shift and go to state 642

state 575

    (104) tipo -> ARRAYCLASS CORCHETE_I tipo . CORCHETE_D

    CORCHETE_D      shift and go to state 643


state 576

    (105) tipo -> LISTCLASS CORCHETE_I tipo . CORCHETE_D

    CORCHETE_D      shift and go to state 644


state 577

    (123) declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL . valor
    (106) valor -> . STRING
    (107) valor -> . CHAR
    (108) valor -> . VARIABLE
    (109) valor -> . numeros
    (110) valor -> . booleanos
    (111) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (112) valor -> . VARIABLE PAR_I INT PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 74
    CHAR            shift and go to state 75
    VARIABLE        shift and go to state 76
    INT             shift and go to state 79
    LONG            shift and go to state 80
    FLOAT           shift and go to state 81
    DOUBLE          shift and go to state 82
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84

    valor                          shift and go to state 645
    numeros                        shift and go to state 77
    booleanos                      shift and go to state 78
    startsWith                     shift and go to state 85

state 578

    (165) array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 165 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 165 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 165 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 165 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 165 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 165 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 165 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 165 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 165 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 165 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    STRING          reduce using rule 165 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 165 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 165 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 165 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 165 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 165 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 165 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CHAR            reduce using rule 165 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 165 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 165 (array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 579

    (172) list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 172 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 172 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 172 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 172 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 172 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 172 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 172 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 172 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 172 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 172 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    STRING          reduce using rule 172 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 172 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 172 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 172 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 172 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 172 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 172 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    CHAR            reduce using rule 172 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 172 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 172 (list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)


state 580

    (370) stringCastLong -> STRING PUNTO . TO_LONG
    (369) stringCastInt -> STRING PUNTO . TO_INT

    TO_LONG         shift and go to state 464
    TO_INT          shift and go to state 465


state 581

    (308) sumIntChar -> INT MAS . CHAR

    CHAR            shift and go to state 415


state 582

    (309) sumIntChar -> CHAR MAS . INT

    INT             shift and go to state 411


state 583

    (369) stringCastInt -> STRING PUNTO . TO_INT

    TO_INT          shift and go to state 465


state 584

    (371) stringCastFloat -> STRING PUNTO . TO_FLOAT
    (370) stringCastLong -> STRING PUNTO . TO_LONG
    (369) stringCastInt -> STRING PUNTO . TO_INT

    TO_FLOAT        shift and go to state 466
    TO_LONG         shift and go to state 464
    TO_INT          shift and go to state 465


state 585

    (305) sumIntDouble -> DOUBLE MAS . INT
    (306) sumDoubleChar -> DOUBLE MAS . CHAR

    INT             shift and go to state 420
    CHAR            shift and go to state 421


state 586

    (304) sumIntDouble -> INT MAS . DOUBLE

    DOUBLE          shift and go to state 416


state 587

    (307) sumDoubleChar -> CHAR MAS . DOUBLE

    DOUBLE          shift and go to state 413


state 588

    (372) stringCastDouble -> STRING PUNTO . TO_DOUBLE
    (371) stringCastFloat -> STRING PUNTO . TO_FLOAT
    (370) stringCastLong -> STRING PUNTO . TO_LONG
    (369) stringCastInt -> STRING PUNTO . TO_INT

    TO_DOUBLE       shift and go to state 467
    TO_FLOAT        shift and go to state 466
    TO_LONG         shift and go to state 464
    TO_INT          shift and go to state 465


state 589

    (311) sumStringChar -> CHAR MAS . STRING

    STRING          shift and go to state 412


state 590

    (166) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    IGUAL           shift and go to state 646


state 591

    (284) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D . IGUAL ARRAYCLASS PAR_I valoresInt PAR_D

    IGUAL           shift and go to state 647


state 592

    (285) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D . IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D

    IGUAL           shift and go to state 648


state 593

    (322) dectupla -> PAR_I STRINGCLASS COMA INTCLASS . PAR_D IGUAL PAR_I STRING COMA INT PAR_D

    PAR_D           shift and go to state 649


state 594

    (323) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS . PAR_D IGUAL PAR_I STRING COMA LONG PAR_D

    PAR_D           shift and go to state 650


state 595

    (324) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS . PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D

    PAR_D           shift and go to state 651


state 596

    (325) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS . PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D

    PAR_D           shift and go to state 652


state 597

    (338) dectupla -> PAR_I INTCLASS COMA STRINGCLASS . PAR_D IGUAL PAR_I INT COMA STRING PAR_D

    PAR_D           shift and go to state 653


state 598

    (339) dectupla -> PAR_I INTCLASS COMA LONGCLASS . PAR_D IGUAL PAR_I INT COMA LONG PAR_D

    PAR_D           shift and go to state 654


state 599

    (340) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS . PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D

    PAR_D           shift and go to state 655


state 600

    (341) dectupla -> PAR_I INTCLASS COMA FLOATCLASS . PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D

    PAR_D           shift and go to state 656


state 601

    (334) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS . PAR_D IGUAL PAR_I LONG COMA STRING PAR_D

    PAR_D           shift and go to state 657


state 602

    (335) dectupla -> PAR_I LONGCLASS COMA INTCLASS . PAR_D IGUAL PAR_I LONG COMA INT PAR_D

    PAR_D           shift and go to state 658


state 603

    (336) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS . PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D

    PAR_D           shift and go to state 659


state 604

    (337) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS . PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D

    PAR_D           shift and go to state 660


state 605

    (330) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS . PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D

    PAR_D           shift and go to state 661


state 606

    (331) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS . PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D

    PAR_D           shift and go to state 662


state 607

    (332) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS . PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D

    PAR_D           shift and go to state 663


state 608

    (333) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS . PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D

    PAR_D           shift and go to state 664


state 609

    (326) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS . PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D

    PAR_D           shift and go to state 665


state 610

    (327) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS . PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D

    PAR_D           shift and go to state 666


state 611

    (328) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS . PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D

    PAR_D           shift and go to state 667


state 612

    (329) dectupla -> PAR_I FLOATCLASS COMA INTCLASS . PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D

    PAR_D           shift and go to state 668


state 613

    (295) listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D . IGUAL LISTCLASS PAR_I valoresChar PAR_D

    IGUAL           shift and go to state 669


state 614

    (293) listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D . IGUAL LISTCLASS PAR_I valoresString PAR_D

    IGUAL           shift and go to state 670


state 615

    (167) array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 167 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 167 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 167 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 167 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 167 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 167 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 167 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 167 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 167 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 167 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    STRING          reduce using rule 167 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 167 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 167 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 167 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 167 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 167 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 167 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CHAR            reduce using rule 167 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 167 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 167 (array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D .)


state 616

    (171) list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .

    DEF             reduce using rule 171 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VARIABLE        reduce using rule 171 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINTLN         reduce using rule 171 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    PRINT           reduce using rule 171 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    READLINE        reduce using rule 171 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAR             reduce using rule 171 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    VAL             reduce using rule 171 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    WHILE           reduce using rule 171 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FOR             reduce using rule 171 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    IF              reduce using rule 171 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    STRING          reduce using rule 171 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    $end            reduce using rule 171 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LLAVE_D         reduce using rule 171 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    INT             reduce using rule 171 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    DOUBLE          reduce using rule 171 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    LONG            reduce using rule 171 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    FLOAT           reduce using rule 171 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    CHAR            reduce using rule 171 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    RETURN          reduce using rule 171 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)
    CASE            reduce using rule 171 (list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D .)


state 617

    (168) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D . IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    IGUAL           shift and go to state 671


state 618

    (294) listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D . IGUAL LISTCLASS PAR_I valoresChar PAR_D

    IGUAL           shift and go to state 672


state 619

    (292) listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D . IGUAL LISTCLASS PAR_I valoresString PAR_D

    IGUAL           shift and go to state 673


state 620

    (180) while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 180 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 180 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 180 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 180 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 180 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 180 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 180 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 180 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 180 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 180 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 180 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 180 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 180 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 180 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 180 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 180 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 180 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 180 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 180 (while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)


state 621

    (181) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 674


state 622

    (185) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 675


state 623

    (186) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL . INT PAR_D LLAVE_I contenido LLAVE_D

    INT             shift and go to state 676


state 624

    (182) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    contenido                      shift and go to state 677
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 625

    (183) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 678


state 626

    (184) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 679


state 627

    (226) if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .

    ELSE            reduce using rule 226 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DEF             reduce using rule 226 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 226 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 226 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 226 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 226 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 226 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 226 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 226 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 226 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 226 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 226 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 226 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 226 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 226 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 226 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 226 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 226 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 226 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 226 (if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)


state 628

    (291) startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT . PAR_D

    PAR_D           shift and go to state 680


state 629

    (223) defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock .

    LLAVE_D         reduce using rule 223 (defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock .)


state 630

    (225) codeBlock -> LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 681


state 631

    (4) io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .

    OBJECT          reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    IMPORT          reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    DEF             reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    VARIABLE        reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    PRINTLN         reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    PRINT           reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    READLINE        reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    VAR             reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    VAL             reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    WHILE           reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    FOR             reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    IF              reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)
    STRING          reduce using rule 4 (io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE .)


state 632

    (229) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D
    (230) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido . LLAVE_D elseif

    LLAVE_D         shift and go to state 682


state 633

    (111) valor -> VARIABLE PAR_I VARIABLE . PAR_D
    (108) valor -> VARIABLE .
    (111) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (112) valor -> VARIABLE . PAR_I INT PAR_D

  ! shift/reduce conflict for PAR_D resolved as shift
    PAR_D           shift and go to state 436
    COMA            reduce using rule 108 (valor -> VARIABLE .)
    PAR_I           shift and go to state 148

  ! PAR_D           [ reduce using rule 108 (valor -> VARIABLE .) ]


state 634

    (112) valor -> VARIABLE PAR_I INT . PAR_D
    (116) numeros -> INT .

  ! shift/reduce conflict for PAR_D resolved as shift
    PAR_D           shift and go to state 437
    COMA            reduce using rule 116 (numeros -> INT .)

  ! PAR_D           [ reduce using rule 116 (numeros -> INT .) ]


state 635

    (96) reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL . valor
    (106) valor -> . STRING
    (107) valor -> . CHAR
    (108) valor -> . VARIABLE
    (109) valor -> . numeros
    (110) valor -> . booleanos
    (111) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (112) valor -> . VARIABLE PAR_I INT PAR_D
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D

    STRING          shift and go to state 74
    CHAR            shift and go to state 75
    VARIABLE        shift and go to state 76
    INT             shift and go to state 79
    LONG            shift and go to state 80
    FLOAT           shift and go to state 81
    DOUBLE          shift and go to state 82
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84

    valor                          shift and go to state 683
    numeros                        shift and go to state 77
    booleanos                      shift and go to state 78
    startsWith                     shift and go to state 85

state 636

    (128) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . valor LLAVE_D
    (129) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . VARIABLE LLAVE_D
    (130) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . returnfun LLAVE_D
    (131) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN . aritmetica LLAVE_D
    (106) valor -> . STRING
    (107) valor -> . CHAR
    (108) valor -> . VARIABLE
    (109) valor -> . numeros
    (110) valor -> . booleanos
    (111) valor -> . VARIABLE PAR_I VARIABLE PAR_D
    (112) valor -> . VARIABLE PAR_I INT PAR_D
    (155) returnfun -> . returnCastable
    (156) returnfun -> . castingcall
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (113) booleanos -> . TRUE
    (114) booleanos -> . FLASE
    (115) booleanos -> . startsWith
    (157) returnCastable -> . entrada
    (158) returnCastable -> . funcall
    (159) castingcall -> . returnCastable PUNTO castingfun
    (160) castingcall -> . VARIABLE PUNTO castingfun
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (150) funcall -> . VARIABLE varparen
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VARIABLE        shift and go to state 684
    STRING          shift and go to state 444
    CHAR            shift and go to state 445
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    TRUE            shift and go to state 83
    FLASE           shift and go to state 84
    READLINE        shift and go to state 19

    valor                          shift and go to state 685
    returnfun                      shift and go to state 686
    aritmetica                     shift and go to state 687
    numeros                        shift and go to state 446
    booleanos                      shift and go to state 78
    returnCastable                 shift and go to state 200
    castingcall                    shift and go to state 201
    suma                           shift and go to state 118
    startsWith                     shift and go to state 85
    entrada                        shift and go to state 206
    funcall                        shift and go to state 207
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 637

    (133) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE . LLAVE_D
    (108) valor -> VARIABLE .
    (111) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (112) valor -> VARIABLE . PAR_I INT PAR_D
    (265) aritmetica -> VARIABLE . aritmeticos numeros
    (267) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (271) aritmetica -> VARIABLE . MAS numeros
    (273) aritmetica -> VARIABLE . MAS VARIABLE
    (160) castingcall -> VARIABLE . PUNTO castingfun
    (150) funcall -> VARIABLE . varparen
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD
    (151) varparen -> . PAR_I valores PAR_D
    (152) varparen -> . PAR_I PAR_D
    (153) varparen -> . varparen PAR_I valores PAR_D
    (154) varparen -> . varparen PAR_I PAR_D

  ! shift/reduce conflict for LLAVE_D resolved as shift
    LLAVE_D         shift and go to state 688
    PAR_I           shift and go to state 566
    MAS             shift and go to state 249
    PUNTO           shift and go to state 348
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257

  ! LLAVE_D         [ reduce using rule 108 (valor -> VARIABLE .) ]

    aritmeticos                    shift and go to state 248
    varparen                       shift and go to state 43

state 638

    (132) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor . LLAVE_D

    LLAVE_D         shift and go to state 689


state 639

    (134) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun . LLAVE_D

    LLAVE_D         shift and go to state 690


state 640

    (135) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica . LLAVE_D
    (268) aritmetica -> aritmetica . aritmeticos numeros
    (269) aritmetica -> aritmetica . aritmeticos VARIABLE
    (274) aritmetica -> aritmetica . MAS numeros
    (275) aritmetica -> aritmetica . MAS VARIABLE
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD

    LLAVE_D         shift and go to state 691
    MAS             shift and go to state 267
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257

    aritmeticos                    shift and go to state 266

state 641

    (136) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . tuple LLAVE_D
    (137) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . VARIABLE LLAVE_D
    (138) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN . returnfun LLAVE_D
    (177) tuple -> . PAR_I valores PAR_D
    (155) returnfun -> . returnCastable
    (156) returnfun -> . castingcall
    (157) returnCastable -> . entrada
    (158) returnCastable -> . funcall
    (159) castingcall -> . returnCastable PUNTO castingfun
    (160) castingcall -> . VARIABLE PUNTO castingfun
    (149) entrada -> . READLINE PAR_I PAR_D
    (150) funcall -> . VARIABLE varparen

    VARIABLE        shift and go to state 692
    PAR_I           shift and go to state 194
    READLINE        shift and go to state 19

    tuple                          shift and go to state 693
    returnfun                      shift and go to state 694
    returnCastable                 shift and go to state 200
    castingcall                    shift and go to state 201
    entrada                        shift and go to state 206
    funcall                        shift and go to state 207

state 642

    (143) tiposentry -> COMA tipo .
    (144) tiposentry -> COMA tipo . tiposentry
    (143) tiposentry -> . COMA tipo
    (144) tiposentry -> . COMA tipo tiposentry

    PAR_D           reduce using rule 143 (tiposentry -> COMA tipo .)
    COMA            shift and go to state 574

    tiposentry                     shift and go to state 695

state 643

    (104) tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .

    IGUAL           reduce using rule 104 (tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .)
    COMA            reduce using rule 104 (tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .)
    PAR_D           reduce using rule 104 (tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .)
    CORCHETE_D      reduce using rule 104 (tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D .)


state 644

    (105) tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .

    IGUAL           reduce using rule 105 (tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .)
    COMA            reduce using rule 105 (tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .)
    PAR_D           reduce using rule 105 (tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .)
    CORCHETE_D      reduce using rule 105 (tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D .)


state 645

    (123) declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor .

    PAR_D           reduce using rule 123 (declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor .)


state 646

    (166) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    NEW             shift and go to state 696


state 647

    (284) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL . ARRAYCLASS PAR_I valoresInt PAR_D

    ARRAYCLASS      shift and go to state 697


state 648

    (285) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL . ARRAYCLASS PAR_I valoresDouble PAR_D

    ARRAYCLASS      shift and go to state 698


state 649

    (322) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D . IGUAL PAR_I STRING COMA INT PAR_D

    IGUAL           shift and go to state 699


state 650

    (323) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D . IGUAL PAR_I STRING COMA LONG PAR_D

    IGUAL           shift and go to state 700


state 651

    (324) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D . IGUAL PAR_I STRING COMA DOUBLE PAR_D

    IGUAL           shift and go to state 701


state 652

    (325) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D . IGUAL PAR_I STRING COMA FLOAT PAR_D

    IGUAL           shift and go to state 702


state 653

    (338) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D . IGUAL PAR_I INT COMA STRING PAR_D

    IGUAL           shift and go to state 703


state 654

    (339) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D . IGUAL PAR_I INT COMA LONG PAR_D

    IGUAL           shift and go to state 704


state 655

    (340) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D . IGUAL PAR_I INT COMA DOUBLE PAR_D

    IGUAL           shift and go to state 705


state 656

    (341) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D . IGUAL PAR_I INT COMA FLOAT PAR_D

    IGUAL           shift and go to state 706


state 657

    (334) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D . IGUAL PAR_I LONG COMA STRING PAR_D

    IGUAL           shift and go to state 707


state 658

    (335) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D . IGUAL PAR_I LONG COMA INT PAR_D

    IGUAL           shift and go to state 708


state 659

    (336) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D . IGUAL PAR_I LONG COMA DOUBLE PAR_D

    IGUAL           shift and go to state 709


state 660

    (337) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D . IGUAL PAR_I LONG COMA FLOAT PAR_D

    IGUAL           shift and go to state 710


state 661

    (330) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D . IGUAL PAR_I DOUBLE COMA STRING PAR_D

    IGUAL           shift and go to state 711


state 662

    (331) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D . IGUAL PAR_I DOUBLE COMA LONG PAR_D

    IGUAL           shift and go to state 712


state 663

    (332) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D . IGUAL PAR_I DOUBLE COMA FLOAT PAR_D

    IGUAL           shift and go to state 713


state 664

    (333) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D . IGUAL PAR_I DOUBLE COMA INT PAR_D

    IGUAL           shift and go to state 714


state 665

    (326) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D . IGUAL PAR_I FLOAT COMA STRING PAR_D

    IGUAL           shift and go to state 715


state 666

    (327) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D . IGUAL PAR_I FLOAT COMA LONG PAR_D

    IGUAL           shift and go to state 716


state 667

    (328) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D . IGUAL PAR_I FLOAT COMA DOUBLE PAR_D

    IGUAL           shift and go to state 717


state 668

    (329) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D . IGUAL PAR_I FLOAT COMA INT PAR_D

    IGUAL           shift and go to state 718


state 669

    (295) listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL . LISTCLASS PAR_I valoresChar PAR_D

    LISTCLASS       shift and go to state 719


state 670

    (293) listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL . LISTCLASS PAR_I valoresString PAR_D

    LISTCLASS       shift and go to state 720


state 671

    (168) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL . NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    NEW             shift and go to state 721


state 672

    (294) listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL . LISTCLASS PAR_I valoresChar PAR_D

    LISTCLASS       shift and go to state 722


state 673

    (292) listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL . LISTCLASS PAR_I valoresString PAR_D

    LISTCLASS       shift and go to state 723


state 674

    (181) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    contenido                      shift and go to state 724
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 675

    (185) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 725


state 676

    (186) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT . PAR_D LLAVE_I contenido LLAVE_D

    PAR_D           shift and go to state 726


state 677

    (182) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 727


state 678

    (183) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 728


state 679

    (184) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 729


state 680

    (291) startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .

    DEF             reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    VARIABLE        reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    PRINTLN         reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    PRINT           reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    READLINE        reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    VAR             reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    VAL             reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    WHILE           reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    FOR             reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    IF              reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    STRING          reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    $end            reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    LLAVE_D         reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    COMA            reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    PAR_D           reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    MAS             reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    IGUAL_COMPARACION reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    DIFERENTE       reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    MAYOR           reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    MENOR           reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    AND             reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    OR              reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    NOT             reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    INT             reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    DOUBLE          reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    LONG            reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    FLOAT           reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    CHAR            reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    RETURN          reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    CASE            reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)
    FUNCION_FLECHA  reduce using rule 291 (startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D .)


state 681

    (225) codeBlock -> LLAVE_I contenido LLAVE_D .

    CASE            reduce using rule 225 (codeBlock -> LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 225 (codeBlock -> LLAVE_I contenido LLAVE_D .)


state 682

    (229) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .
    (230) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D . elseif
    (229) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (230) elseif -> . ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

  ! shift/reduce conflict for ELSE resolved as shift
    DEF             reduce using rule 229 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 229 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 229 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 229 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 229 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 229 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 229 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 229 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 229 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 229 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 229 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 229 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 229 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 229 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 229 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 229 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 229 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 229 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 229 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .)
    ELSE            shift and go to state 730

  ! ELSE            [ reduce using rule 229 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D .) ]

    elseif                         shift and go to state 731

state 683

    (96) reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .

    VAR             reduce using rule 96 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    VAL             reduce using rule 96 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    VARIABLE        reduce using rule 96 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    PRINTLN         reduce using rule 96 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    PRINT           reduce using rule 96 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    READLINE        reduce using rule 96 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    WHILE           reduce using rule 96 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    FOR             reduce using rule 96 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    IF              reduce using rule 96 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    INT             reduce using rule 96 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    DOUBLE          reduce using rule 96 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    LONG            reduce using rule 96 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    FLOAT           reduce using rule 96 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    STRING          reduce using rule 96 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    CHAR            reduce using rule 96 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    LLAVE_D         reduce using rule 96 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    RETURN          reduce using rule 96 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)
    CASE            reduce using rule 96 (reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor .)


state 684

    (129) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE . LLAVE_D
    (108) valor -> VARIABLE .
    (111) valor -> VARIABLE . PAR_I VARIABLE PAR_D
    (112) valor -> VARIABLE . PAR_I INT PAR_D
    (265) aritmetica -> VARIABLE . aritmeticos numeros
    (267) aritmetica -> VARIABLE . aritmeticos VARIABLE
    (271) aritmetica -> VARIABLE . MAS numeros
    (273) aritmetica -> VARIABLE . MAS VARIABLE
    (160) castingcall -> VARIABLE . PUNTO castingfun
    (150) funcall -> VARIABLE . varparen
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD
    (151) varparen -> . PAR_I valores PAR_D
    (152) varparen -> . PAR_I PAR_D
    (153) varparen -> . varparen PAR_I valores PAR_D
    (154) varparen -> . varparen PAR_I PAR_D

  ! shift/reduce conflict for LLAVE_D resolved as shift
    LLAVE_D         shift and go to state 732
    PAR_I           shift and go to state 566
    MAS             shift and go to state 249
    PUNTO           shift and go to state 348
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257

  ! LLAVE_D         [ reduce using rule 108 (valor -> VARIABLE .) ]

    aritmeticos                    shift and go to state 248
    varparen                       shift and go to state 43

state 685

    (128) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor . LLAVE_D

    LLAVE_D         shift and go to state 733


state 686

    (130) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun . LLAVE_D

    LLAVE_D         shift and go to state 734


state 687

    (131) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica . LLAVE_D
    (268) aritmetica -> aritmetica . aritmeticos numeros
    (269) aritmetica -> aritmetica . aritmeticos VARIABLE
    (274) aritmetica -> aritmetica . MAS numeros
    (275) aritmetica -> aritmetica . MAS VARIABLE
    (280) aritmeticos -> . MENOS
    (281) aritmeticos -> . MULTIPLICACION
    (282) aritmeticos -> . DIVISION
    (283) aritmeticos -> . MOD

    LLAVE_D         shift and go to state 735
    MAS             shift and go to state 267
    MENOS           shift and go to state 254
    MULTIPLICACION  shift and go to state 255
    DIVISION        shift and go to state 256
    MOD             shift and go to state 257

    aritmeticos                    shift and go to state 266

state 688

    (133) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .

    DEF             reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    VARIABLE        reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    PRINTLN         reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    PRINT           reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    READLINE        reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    VAR             reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    VAL             reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    WHILE           reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    FOR             reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    IF              reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    STRING          reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    $end            reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)
    LLAVE_D         reduce using rule 133 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D .)


state 689

    (132) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .

    DEF             reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    VARIABLE        reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    PRINTLN         reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    PRINT           reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    READLINE        reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    VAR             reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    VAL             reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    WHILE           reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    FOR             reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    IF              reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    STRING          reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    $end            reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)
    LLAVE_D         reduce using rule 132 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D .)


state 690

    (134) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .

    DEF             reduce using rule 134 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    VARIABLE        reduce using rule 134 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    PRINTLN         reduce using rule 134 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    PRINT           reduce using rule 134 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    READLINE        reduce using rule 134 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    VAR             reduce using rule 134 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    VAL             reduce using rule 134 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    WHILE           reduce using rule 134 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    FOR             reduce using rule 134 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    IF              reduce using rule 134 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    STRING          reduce using rule 134 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    $end            reduce using rule 134 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)
    LLAVE_D         reduce using rule 134 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D .)


state 691

    (135) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .

    DEF             reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    VARIABLE        reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    PRINTLN         reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    PRINT           reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    READLINE        reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    VAR             reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    VAL             reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    WHILE           reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    FOR             reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    IF              reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    STRING          reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    $end            reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)
    LLAVE_D         reduce using rule 135 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D .)


state 692

    (137) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE . LLAVE_D
    (160) castingcall -> VARIABLE . PUNTO castingfun
    (150) funcall -> VARIABLE . varparen
    (151) varparen -> . PAR_I valores PAR_D
    (152) varparen -> . PAR_I PAR_D
    (153) varparen -> . varparen PAR_I valores PAR_D
    (154) varparen -> . varparen PAR_I PAR_D

    LLAVE_D         shift and go to state 736
    PUNTO           shift and go to state 348
    PAR_I           shift and go to state 45

    varparen                       shift and go to state 43

state 693

    (136) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple . LLAVE_D

    LLAVE_D         shift and go to state 737


state 694

    (138) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun . LLAVE_D

    LLAVE_D         shift and go to state 738


state 695

    (144) tiposentry -> COMA tipo tiposentry .

    PAR_D           reduce using rule 144 (tiposentry -> COMA tipo tiposentry .)


state 696

    (166) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW . ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    ARRAYCLASS      shift and go to state 739


state 697

    (284) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS . PAR_I valoresInt PAR_D

    PAR_I           shift and go to state 740


state 698

    (285) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS . PAR_I valoresDouble PAR_D

    PAR_I           shift and go to state 741


state 699

    (322) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL . PAR_I STRING COMA INT PAR_D

    PAR_I           shift and go to state 742


state 700

    (323) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL . PAR_I STRING COMA LONG PAR_D

    PAR_I           shift and go to state 743


state 701

    (324) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL . PAR_I STRING COMA DOUBLE PAR_D

    PAR_I           shift and go to state 744


state 702

    (325) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL . PAR_I STRING COMA FLOAT PAR_D

    PAR_I           shift and go to state 745


state 703

    (338) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL . PAR_I INT COMA STRING PAR_D

    PAR_I           shift and go to state 746


state 704

    (339) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL . PAR_I INT COMA LONG PAR_D

    PAR_I           shift and go to state 747


state 705

    (340) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL . PAR_I INT COMA DOUBLE PAR_D

    PAR_I           shift and go to state 748


state 706

    (341) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL . PAR_I INT COMA FLOAT PAR_D

    PAR_I           shift and go to state 749


state 707

    (334) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL . PAR_I LONG COMA STRING PAR_D

    PAR_I           shift and go to state 750


state 708

    (335) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL . PAR_I LONG COMA INT PAR_D

    PAR_I           shift and go to state 751


state 709

    (336) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL . PAR_I LONG COMA DOUBLE PAR_D

    PAR_I           shift and go to state 752


state 710

    (337) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL . PAR_I LONG COMA FLOAT PAR_D

    PAR_I           shift and go to state 753


state 711

    (330) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL . PAR_I DOUBLE COMA STRING PAR_D

    PAR_I           shift and go to state 754


state 712

    (331) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL . PAR_I DOUBLE COMA LONG PAR_D

    PAR_I           shift and go to state 755


state 713

    (332) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL . PAR_I DOUBLE COMA FLOAT PAR_D

    PAR_I           shift and go to state 756


state 714

    (333) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL . PAR_I DOUBLE COMA INT PAR_D

    PAR_I           shift and go to state 757


state 715

    (326) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL . PAR_I FLOAT COMA STRING PAR_D

    PAR_I           shift and go to state 758


state 716

    (327) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL . PAR_I FLOAT COMA LONG PAR_D

    PAR_I           shift and go to state 759


state 717

    (328) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL . PAR_I FLOAT COMA DOUBLE PAR_D

    PAR_I           shift and go to state 760


state 718

    (329) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL . PAR_I FLOAT COMA INT PAR_D

    PAR_I           shift and go to state 761


state 719

    (295) listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS . PAR_I valoresChar PAR_D

    PAR_I           shift and go to state 762


state 720

    (293) listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS . PAR_I valoresString PAR_D

    PAR_I           shift and go to state 763


state 721

    (168) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW . ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    ARRAYCLASS      shift and go to state 764


state 722

    (294) listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS . PAR_I valoresChar PAR_D

    PAR_I           shift and go to state 765


state 723

    (292) listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS . PAR_I valoresString PAR_D

    PAR_I           shift and go to state 766


state 724

    (181) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 767


state 725

    (185) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 768


state 726

    (186) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D . LLAVE_I contenido LLAVE_D

    LLAVE_I         shift and go to state 769


state 727

    (182) for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 182 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 182 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 182 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 182 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 182 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 182 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 182 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 182 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 182 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 182 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 182 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 182 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 182 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 182 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 182 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 182 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 182 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 182 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 182 (for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)


state 728

    (183) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    contenido                      shift and go to state 770
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 729

    (184) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    contenido                      shift and go to state 771
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 730

    (229) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (230) elseif -> ELSE . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif

    IF              shift and go to state 91


state 731

    (230) elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .

    ELSE            reduce using rule 230 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    DEF             reduce using rule 230 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    VARIABLE        reduce using rule 230 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    PRINTLN         reduce using rule 230 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    PRINT           reduce using rule 230 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    READLINE        reduce using rule 230 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    VAR             reduce using rule 230 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    VAL             reduce using rule 230 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    WHILE           reduce using rule 230 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    FOR             reduce using rule 230 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    IF              reduce using rule 230 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    STRING          reduce using rule 230 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    $end            reduce using rule 230 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    LLAVE_D         reduce using rule 230 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    INT             reduce using rule 230 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    DOUBLE          reduce using rule 230 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    LONG            reduce using rule 230 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    FLOAT           reduce using rule 230 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    CHAR            reduce using rule 230 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)
    RETURN          reduce using rule 230 (elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif .)


state 732

    (129) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .

    DEF             reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VARIABLE        reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINTLN         reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINT           reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    READLINE        reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAR             reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAL             reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    WHILE           reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    FOR             reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    IF              reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    STRING          reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    $end            reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    LLAVE_D         reduce using rule 129 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)


state 733

    (128) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .

    DEF             reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VARIABLE        reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    PRINTLN         reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    PRINT           reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    READLINE        reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAR             reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    VAL             reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    WHILE           reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    FOR             reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    IF              reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    STRING          reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    $end            reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)
    LLAVE_D         reduce using rule 128 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D .)


state 734

    (130) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .

    DEF             reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VARIABLE        reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINTLN         reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINT           reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    READLINE        reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAR             reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAL             reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    WHILE           reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    FOR             reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    IF              reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    STRING          reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    $end            reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    LLAVE_D         reduce using rule 130 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)


state 735

    (131) funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .

    DEF             reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    VARIABLE        reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    PRINTLN         reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    PRINT           reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    READLINE        reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    VAR             reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    VAL             reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    WHILE           reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    FOR             reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    IF              reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    STRING          reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    $end            reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)
    LLAVE_D         reduce using rule 131 (funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D .)


state 736

    (137) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .

    DEF             reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VARIABLE        reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINTLN         reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    PRINT           reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    READLINE        reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAR             reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    VAL             reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    WHILE           reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    FOR             reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    IF              reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    STRING          reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    $end            reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)
    LLAVE_D         reduce using rule 137 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D .)


state 737

    (136) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .

    DEF             reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    VARIABLE        reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    PRINTLN         reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    PRINT           reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    READLINE        reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    VAR             reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    VAL             reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    WHILE           reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    FOR             reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    IF              reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    STRING          reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    $end            reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)
    LLAVE_D         reduce using rule 136 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D .)


state 738

    (138) funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .

    DEF             reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VARIABLE        reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINTLN         reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    PRINT           reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    READLINE        reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAR             reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    VAL             reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    WHILE           reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    FOR             reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    IF              reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    STRING          reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    $end            reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)
    LLAVE_D         reduce using rule 138 (funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D .)


state 739

    (166) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS . CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 772


state 740

    (284) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I . valoresInt PAR_D
    (286) valoresInt -> . INT
    (287) valoresInt -> . valoresInt COMA INT

    INT             shift and go to state 774

    valoresInt                     shift and go to state 773

state 741

    (285) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I . valoresDouble PAR_D
    (288) valoresDouble -> . DOUBLE
    (289) valoresDouble -> . valoresDouble COMA DOUBLE

    DOUBLE          shift and go to state 776

    valoresDouble                  shift and go to state 775

state 742

    (322) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I . STRING COMA INT PAR_D

    STRING          shift and go to state 777


state 743

    (323) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I . STRING COMA LONG PAR_D

    STRING          shift and go to state 778


state 744

    (324) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I . STRING COMA DOUBLE PAR_D

    STRING          shift and go to state 779


state 745

    (325) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I . STRING COMA FLOAT PAR_D

    STRING          shift and go to state 780


state 746

    (338) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I . INT COMA STRING PAR_D

    INT             shift and go to state 781


state 747

    (339) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I . INT COMA LONG PAR_D

    INT             shift and go to state 782


state 748

    (340) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I . INT COMA DOUBLE PAR_D

    INT             shift and go to state 783


state 749

    (341) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I . INT COMA FLOAT PAR_D

    INT             shift and go to state 784


state 750

    (334) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I . LONG COMA STRING PAR_D

    LONG            shift and go to state 785


state 751

    (335) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I . LONG COMA INT PAR_D

    LONG            shift and go to state 786


state 752

    (336) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I . LONG COMA DOUBLE PAR_D

    LONG            shift and go to state 787


state 753

    (337) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I . LONG COMA FLOAT PAR_D

    LONG            shift and go to state 788


state 754

    (330) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I . DOUBLE COMA STRING PAR_D

    DOUBLE          shift and go to state 789


state 755

    (331) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I . DOUBLE COMA LONG PAR_D

    DOUBLE          shift and go to state 790


state 756

    (332) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I . DOUBLE COMA FLOAT PAR_D

    DOUBLE          shift and go to state 791


state 757

    (333) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I . DOUBLE COMA INT PAR_D

    DOUBLE          shift and go to state 792


state 758

    (326) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I . FLOAT COMA STRING PAR_D

    FLOAT           shift and go to state 793


state 759

    (327) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I . FLOAT COMA LONG PAR_D

    FLOAT           shift and go to state 794


state 760

    (328) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I . FLOAT COMA DOUBLE PAR_D

    FLOAT           shift and go to state 795


state 761

    (329) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I . FLOAT COMA INT PAR_D

    FLOAT           shift and go to state 796


state 762

    (295) listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I . valoresChar PAR_D
    (298) valoresChar -> . CHAR
    (299) valoresChar -> . valoresChar COMA CHAR

    CHAR            shift and go to state 798

    valoresChar                    shift and go to state 797

state 763

    (293) listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I . valoresString PAR_D
    (296) valoresString -> . STRING
    (297) valoresString -> . valoresString COMA STRING

    STRING          shift and go to state 800

    valoresString                  shift and go to state 799

state 764

    (168) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS . CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D

    CORCHETE_I      shift and go to state 801


state 765

    (294) listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I . valoresChar PAR_D
    (298) valoresChar -> . CHAR
    (299) valoresChar -> . valoresChar COMA CHAR

    CHAR            shift and go to state 798

    valoresChar                    shift and go to state 802

state 766

    (292) listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I . valoresString PAR_D
    (296) valoresString -> . STRING
    (297) valoresString -> . valoresString COMA STRING

    STRING          shift and go to state 800

    valoresString                  shift and go to state 803

state 767

    (181) for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 181 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 181 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 181 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 181 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 181 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 181 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 181 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 181 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 181 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 181 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 181 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 181 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 181 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 181 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 181 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 181 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 181 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 181 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 181 (for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D .)


state 768

    (185) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    contenido                      shift and go to state 804
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 769

    (186) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I . contenido LLAVE_D
    (22) contenido -> . asignacion
    (23) contenido -> . reasignacion
    (24) contenido -> . funcall
    (25) contenido -> . impresion
    (26) contenido -> . entrada
    (27) contenido -> . while
    (28) contenido -> . for
    (29) contenido -> . match
    (30) contenido -> . if
    (31) contenido -> . aritmetica
    (32) contenido -> . startsWith
    (33) contenido -> . asignacion contenido
    (34) contenido -> . reasignacion contenido
    (35) contenido -> . funcall contenido
    (36) contenido -> . impresion contenido
    (37) contenido -> . entrada contenido
    (38) contenido -> . while contenido
    (39) contenido -> . for contenido
    (40) contenido -> . if contenido
    (41) contenido -> . match contenido
    (42) contenido -> . aritmetica contenido
    (43) contenido -> . startsWith contenido
    (49) asignacion -> . VAR VARIABLE IGUAL VARIABLE
    (50) asignacion -> . VAL VARIABLE IGUAL VARIABLE
    (51) asignacion -> . VAR VARIABLE IGUAL aritmetica
    (52) asignacion -> . VAL VARIABLE IGUAL aritmetica
    (53) asignacion -> . VAR VARIABLE IGUAL returnfun
    (54) asignacion -> . VAL VARIABLE IGUAL returnfun
    (55) asignacion -> . asignacionLong
    (56) asignacion -> . asignacionInt
    (57) asignacion -> . asignacionFloat
    (58) asignacion -> . asignacionDouble
    (59) asignacion -> . asignacionString
    (60) asignacion -> . asignacionChar
    (61) asignacion -> . asignacionBoolean
    (62) asignacion -> . array
    (63) asignacion -> . list
    (178) asignacion -> . VAR VARIABLE IGUAL tuple
    (179) asignacion -> . VAL VARIABLE IGUAL tuple
    (320) asignacion -> . VAR VARIABLE DOBLE_PUNTO dectupla
    (321) asignacion -> . VAL VARIABLE DOBLE_PUNTO dectupla
    (93) reasignacion -> . VARIABLE IGUAL valor
    (94) reasignacion -> . VARIABLE IGUAL returnfun
    (95) reasignacion -> . VARIABLE IGUAL aritmetica
    (96) reasignacion -> . VARIABLE PAR_I INT PAR_D IGUAL valor
    (150) funcall -> . VARIABLE varparen
    (145) impresion -> . PRINTLN PAR_I valorI PAR_D
    (146) impresion -> . PRINT PAR_I valorI PAR_D
    (149) entrada -> . READLINE PAR_I PAR_D
    (180) while -> . WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (181) for -> . FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (182) for -> . FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D
    (183) for -> . FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (184) for -> . FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (185) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D
    (186) for -> . FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D
    (187) match -> . VARIABLE MATCH LLAVE_I cases LLAVE_D
    (226) if -> . IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D
    (227) if -> . if elseif
    (228) if -> . if else
    (264) aritmetica -> . numeros aritmeticos numeros
    (265) aritmetica -> . VARIABLE aritmeticos numeros
    (266) aritmetica -> . numeros aritmeticos VARIABLE
    (267) aritmetica -> . VARIABLE aritmeticos VARIABLE
    (268) aritmetica -> . aritmetica aritmeticos numeros
    (269) aritmetica -> . aritmetica aritmeticos VARIABLE
    (270) aritmetica -> . suma
    (271) aritmetica -> . VARIABLE MAS numeros
    (272) aritmetica -> . numeros MAS VARIABLE
    (273) aritmetica -> . VARIABLE MAS VARIABLE
    (274) aritmetica -> . aritmetica MAS numeros
    (275) aritmetica -> . aritmetica MAS VARIABLE
    (276) aritmetica -> . INT MAS INT
    (277) aritmetica -> . DOUBLE MAS DOUBLE
    (278) aritmetica -> . LONG MAS LONG
    (279) aritmetica -> . FLOAT MAS FLOAT
    (290) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING PAR_D
    (291) startsWith -> . STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D
    (64) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (65) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE
    (348) asignacionLong -> . VAR VARIABLE IGUAL longvalues
    (349) asignacionLong -> . VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (350) asignacionLong -> . VAL VARIABLE IGUAL longvalues
    (351) asignacionLong -> . VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues
    (66) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (67) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE
    (68) asignacionInt -> . asignacionSumInt
    (342) asignacionInt -> . VAR VARIABLE IGUAL intvalues
    (343) asignacionInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (344) asignacionInt -> . VAL VARIABLE IGUAL intvalues
    (345) asignacionInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues
    (69) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (70) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE
    (355) asignacionFloat -> . VAR VARIABLE IGUAL floatvalues
    (356) asignacionFloat -> . VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (357) asignacionFloat -> . VAL VARIABLE IGUAL floatvalues
    (358) asignacionFloat -> . VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues
    (71) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (72) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE
    (73) asignacionDouble -> . asignacionSumDouble
    (362) asignacionDouble -> . VAR VARIABLE IGUAL doublevalues
    (363) asignacionDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (364) asignacionDouble -> . VAL VARIABLE IGUAL doublevalues
    (365) asignacionDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues
    (74) asignacionString -> . VAR VARIABLE IGUAL STRING
    (75) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (76) asignacionString -> . VAL VARIABLE IGUAL STRING
    (77) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING
    (78) asignacionString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (79) asignacionString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE
    (80) asignacionString -> . asignacionSumString
    (81) asignacionChar -> . VAR VARIABLE IGUAL CHAR
    (82) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (83) asignacionChar -> . VAL VARIABLE IGUAL CHAR
    (84) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR
    (85) asignacionChar -> . VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (86) asignacionChar -> . VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE
    (87) asignacionBoolean -> . VAR VARIABLE IGUAL booleanos
    (88) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (89) asignacionBoolean -> . VAL VARIABLE IGUAL booleanos
    (90) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos
    (91) asignacionBoolean -> . VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (92) asignacionBoolean -> . VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE
    (165) array -> . VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (166) array -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (167) array -> . VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D
    (168) array -> . VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D
    (169) array -> . arrayInt
    (170) array -> . arrayDouble
    (171) list -> . VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (172) list -> . VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D
    (173) list -> . listChar
    (174) list -> . listString
    (116) numeros -> . INT
    (117) numeros -> . LONG
    (118) numeros -> . FLOAT
    (119) numeros -> . DOUBLE
    (300) suma -> . sumIntChar
    (301) suma -> . sumStringChar
    (302) suma -> . sumIntDouble
    (303) suma -> . sumDoubleChar
    (318) asignacionSumInt -> . VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (319) asignacionSumInt -> . VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar
    (312) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (313) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble
    (314) asignacionSumDouble -> . VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (315) asignacionSumDouble -> . VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar
    (316) asignacionSumString -> . VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (317) asignacionSumString -> . VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar
    (284) arrayInt -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D
    (285) arrayDouble -> . VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D
    (294) listChar -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (295) listChar -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D
    (292) listString -> . VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (293) listString -> . VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D
    (308) sumIntChar -> . INT MAS CHAR
    (309) sumIntChar -> . CHAR MAS INT
    (310) sumStringChar -> . STRING MAS CHAR
    (311) sumStringChar -> . CHAR MAS STRING
    (304) sumIntDouble -> . INT MAS DOUBLE
    (305) sumIntDouble -> . DOUBLE MAS INT
    (306) sumDoubleChar -> . DOUBLE MAS CHAR
    (307) sumDoubleChar -> . CHAR MAS DOUBLE

    VAR             shift and go to state 20
    VAL             shift and go to state 21
    VARIABLE        shift and go to state 163
    PRINTLN         shift and go to state 17
    PRINT           shift and go to state 18
    READLINE        shift and go to state 19
    WHILE           shift and go to state 31
    FOR             shift and go to state 32
    IF              shift and go to state 33
    INT             shift and go to state 164
    DOUBLE          shift and go to state 166
    LONG            shift and go to state 167
    FLOAT           shift and go to state 168
    STRING          shift and go to state 169
    CHAR            shift and go to state 170

    contenido                      shift and go to state 805
    asignacion                     shift and go to state 152
    reasignacion                   shift and go to state 153
    funcall                        shift and go to state 154
    impresion                      shift and go to state 155
    entrada                        shift and go to state 156
    while                          shift and go to state 157
    for                            shift and go to state 158
    match                          shift and go to state 159
    if                             shift and go to state 160
    aritmetica                     shift and go to state 161
    startsWith                     shift and go to state 162
    asignacionLong                 shift and go to state 22
    asignacionInt                  shift and go to state 23
    asignacionFloat                shift and go to state 24
    asignacionDouble               shift and go to state 25
    asignacionString               shift and go to state 26
    asignacionChar                 shift and go to state 27
    asignacionBoolean              shift and go to state 28
    array                          shift and go to state 29
    list                           shift and go to state 30
    numeros                        shift and go to state 165
    suma                           shift and go to state 118
    asignacionSumInt               shift and go to state 35
    asignacionSumDouble            shift and go to state 36
    asignacionSumString            shift and go to state 37
    arrayInt                       shift and go to state 38
    arrayDouble                    shift and go to state 39
    listChar                       shift and go to state 40
    listString                     shift and go to state 41
    sumIntChar                     shift and go to state 119
    sumStringChar                  shift and go to state 120
    sumIntDouble                   shift and go to state 121
    sumDoubleChar                  shift and go to state 122

state 770

    (183) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 806


state 771

    (184) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 807


state 772

    (166) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I . tipo CORCHETE_D PAR_I INT PAR_D
    (97) tipo -> . CHARCLASS
    (98) tipo -> . STRINGCLASS
    (99) tipo -> . BOOLCLASS
    (100) tipo -> . INTCLASS
    (101) tipo -> . LONGCLASS
    (102) tipo -> . DOUBLECLASS
    (103) tipo -> . FLOATCLASS
    (104) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (105) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 336
    STRINGCLASS     shift and go to state 337
    BOOLCLASS       shift and go to state 338
    INTCLASS        shift and go to state 339
    LONGCLASS       shift and go to state 340
    DOUBLECLASS     shift and go to state 341
    FLOATCLASS      shift and go to state 342
    ARRAYCLASS      shift and go to state 343
    LISTCLASS       shift and go to state 344

    tipo                           shift and go to state 808

state 773

    (284) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt . PAR_D
    (287) valoresInt -> valoresInt . COMA INT

    PAR_D           shift and go to state 809
    COMA            shift and go to state 810


state 774

    (286) valoresInt -> INT .

    PAR_D           reduce using rule 286 (valoresInt -> INT .)
    COMA            reduce using rule 286 (valoresInt -> INT .)


state 775

    (285) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble . PAR_D
    (289) valoresDouble -> valoresDouble . COMA DOUBLE

    PAR_D           shift and go to state 811
    COMA            shift and go to state 812


state 776

    (288) valoresDouble -> DOUBLE .

    PAR_D           reduce using rule 288 (valoresDouble -> DOUBLE .)
    COMA            reduce using rule 288 (valoresDouble -> DOUBLE .)


state 777

    (322) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING . COMA INT PAR_D

    COMA            shift and go to state 813


state 778

    (323) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING . COMA LONG PAR_D

    COMA            shift and go to state 814


state 779

    (324) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING . COMA DOUBLE PAR_D

    COMA            shift and go to state 815


state 780

    (325) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING . COMA FLOAT PAR_D

    COMA            shift and go to state 816


state 781

    (338) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT . COMA STRING PAR_D

    COMA            shift and go to state 817


state 782

    (339) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT . COMA LONG PAR_D

    COMA            shift and go to state 818


state 783

    (340) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT . COMA DOUBLE PAR_D

    COMA            shift and go to state 819


state 784

    (341) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT . COMA FLOAT PAR_D

    COMA            shift and go to state 820


state 785

    (334) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG . COMA STRING PAR_D

    COMA            shift and go to state 821


state 786

    (335) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG . COMA INT PAR_D

    COMA            shift and go to state 822


state 787

    (336) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG . COMA DOUBLE PAR_D

    COMA            shift and go to state 823


state 788

    (337) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG . COMA FLOAT PAR_D

    COMA            shift and go to state 824


state 789

    (330) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE . COMA STRING PAR_D

    COMA            shift and go to state 825


state 790

    (331) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE . COMA LONG PAR_D

    COMA            shift and go to state 826


state 791

    (332) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE . COMA FLOAT PAR_D

    COMA            shift and go to state 827


state 792

    (333) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE . COMA INT PAR_D

    COMA            shift and go to state 828


state 793

    (326) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT . COMA STRING PAR_D

    COMA            shift and go to state 829


state 794

    (327) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT . COMA LONG PAR_D

    COMA            shift and go to state 830


state 795

    (328) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT . COMA DOUBLE PAR_D

    COMA            shift and go to state 831


state 796

    (329) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT . COMA INT PAR_D

    COMA            shift and go to state 832


state 797

    (295) listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar . PAR_D
    (299) valoresChar -> valoresChar . COMA CHAR

    PAR_D           shift and go to state 833
    COMA            shift and go to state 834


state 798

    (298) valoresChar -> CHAR .

    PAR_D           reduce using rule 298 (valoresChar -> CHAR .)
    COMA            reduce using rule 298 (valoresChar -> CHAR .)


state 799

    (293) listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString . PAR_D
    (297) valoresString -> valoresString . COMA STRING

    PAR_D           shift and go to state 835
    COMA            shift and go to state 836


state 800

    (296) valoresString -> STRING .

    PAR_D           reduce using rule 296 (valoresString -> STRING .)
    COMA            reduce using rule 296 (valoresString -> STRING .)


state 801

    (168) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I . tipo CORCHETE_D PAR_I INT PAR_D
    (97) tipo -> . CHARCLASS
    (98) tipo -> . STRINGCLASS
    (99) tipo -> . BOOLCLASS
    (100) tipo -> . INTCLASS
    (101) tipo -> . LONGCLASS
    (102) tipo -> . DOUBLECLASS
    (103) tipo -> . FLOATCLASS
    (104) tipo -> . ARRAYCLASS CORCHETE_I tipo CORCHETE_D
    (105) tipo -> . LISTCLASS CORCHETE_I tipo CORCHETE_D

    CHARCLASS       shift and go to state 336
    STRINGCLASS     shift and go to state 337
    BOOLCLASS       shift and go to state 338
    INTCLASS        shift and go to state 339
    LONGCLASS       shift and go to state 340
    DOUBLECLASS     shift and go to state 341
    FLOATCLASS      shift and go to state 342
    ARRAYCLASS      shift and go to state 343
    LISTCLASS       shift and go to state 344

    tipo                           shift and go to state 837

state 802

    (294) listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar . PAR_D
    (299) valoresChar -> valoresChar . COMA CHAR

    PAR_D           shift and go to state 838
    COMA            shift and go to state 834


state 803

    (292) listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString . PAR_D
    (297) valoresString -> valoresString . COMA STRING

    PAR_D           shift and go to state 839
    COMA            shift and go to state 836


state 804

    (185) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 840


state 805

    (186) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido . LLAVE_D

    LLAVE_D         shift and go to state 841


state 806

    (183) for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 183 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 183 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 183 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 183 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 183 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 183 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 183 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 183 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 183 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 183 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 183 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 183 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 183 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 183 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 183 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 183 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 183 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 183 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 183 (for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)


state 807

    (184) for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 184 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 184 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 184 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 184 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 184 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 184 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 184 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 184 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 184 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 184 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 184 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 184 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 184 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 184 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 184 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 184 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 184 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 184 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 184 (for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)


state 808

    (166) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo . CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 842


state 809

    (284) arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .

    DEF             reduce using rule 284 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    VARIABLE        reduce using rule 284 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    PRINTLN         reduce using rule 284 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    PRINT           reduce using rule 284 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    READLINE        reduce using rule 284 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    VAR             reduce using rule 284 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    VAL             reduce using rule 284 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    WHILE           reduce using rule 284 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    FOR             reduce using rule 284 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    IF              reduce using rule 284 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    STRING          reduce using rule 284 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    $end            reduce using rule 284 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    LLAVE_D         reduce using rule 284 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    INT             reduce using rule 284 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    DOUBLE          reduce using rule 284 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    LONG            reduce using rule 284 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    FLOAT           reduce using rule 284 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    CHAR            reduce using rule 284 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    RETURN          reduce using rule 284 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)
    CASE            reduce using rule 284 (arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D .)


state 810

    (287) valoresInt -> valoresInt COMA . INT

    INT             shift and go to state 843


state 811

    (285) arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .

    DEF             reduce using rule 285 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    VARIABLE        reduce using rule 285 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    PRINTLN         reduce using rule 285 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    PRINT           reduce using rule 285 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    READLINE        reduce using rule 285 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    VAR             reduce using rule 285 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    VAL             reduce using rule 285 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    WHILE           reduce using rule 285 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    FOR             reduce using rule 285 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    IF              reduce using rule 285 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    STRING          reduce using rule 285 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    $end            reduce using rule 285 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    LLAVE_D         reduce using rule 285 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    INT             reduce using rule 285 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    DOUBLE          reduce using rule 285 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    LONG            reduce using rule 285 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    FLOAT           reduce using rule 285 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    CHAR            reduce using rule 285 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    RETURN          reduce using rule 285 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)
    CASE            reduce using rule 285 (arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D .)


state 812

    (289) valoresDouble -> valoresDouble COMA . DOUBLE

    DOUBLE          shift and go to state 844


state 813

    (322) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA . INT PAR_D

    INT             shift and go to state 845


state 814

    (323) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA . LONG PAR_D

    LONG            shift and go to state 846


state 815

    (324) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA . DOUBLE PAR_D

    DOUBLE          shift and go to state 847


state 816

    (325) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA . FLOAT PAR_D

    FLOAT           shift and go to state 848


state 817

    (338) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA . STRING PAR_D

    STRING          shift and go to state 849


state 818

    (339) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA . LONG PAR_D

    LONG            shift and go to state 850


state 819

    (340) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA . DOUBLE PAR_D

    DOUBLE          shift and go to state 851


state 820

    (341) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA . FLOAT PAR_D

    FLOAT           shift and go to state 852


state 821

    (334) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA . STRING PAR_D

    STRING          shift and go to state 853


state 822

    (335) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA . INT PAR_D

    INT             shift and go to state 854


state 823

    (336) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA . DOUBLE PAR_D

    DOUBLE          shift and go to state 855


state 824

    (337) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA . FLOAT PAR_D

    FLOAT           shift and go to state 856


state 825

    (330) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA . STRING PAR_D

    STRING          shift and go to state 857


state 826

    (331) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA . LONG PAR_D

    LONG            shift and go to state 858


state 827

    (332) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA . FLOAT PAR_D

    FLOAT           shift and go to state 859


state 828

    (333) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA . INT PAR_D

    INT             shift and go to state 860


state 829

    (326) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA . STRING PAR_D

    STRING          shift and go to state 861


state 830

    (327) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA . LONG PAR_D

    LONG            shift and go to state 862


state 831

    (328) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA . DOUBLE PAR_D

    DOUBLE          shift and go to state 863


state 832

    (329) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA . INT PAR_D

    INT             shift and go to state 864


state 833

    (295) listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .

    DEF             reduce using rule 295 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    VARIABLE        reduce using rule 295 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    PRINTLN         reduce using rule 295 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    PRINT           reduce using rule 295 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    READLINE        reduce using rule 295 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    VAR             reduce using rule 295 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    VAL             reduce using rule 295 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    WHILE           reduce using rule 295 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    FOR             reduce using rule 295 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    IF              reduce using rule 295 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    STRING          reduce using rule 295 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    $end            reduce using rule 295 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    LLAVE_D         reduce using rule 295 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    INT             reduce using rule 295 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    DOUBLE          reduce using rule 295 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    LONG            reduce using rule 295 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    FLOAT           reduce using rule 295 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    CHAR            reduce using rule 295 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    RETURN          reduce using rule 295 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    CASE            reduce using rule 295 (listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)


state 834

    (299) valoresChar -> valoresChar COMA . CHAR

    CHAR            shift and go to state 865


state 835

    (293) listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .

    DEF             reduce using rule 293 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    VARIABLE        reduce using rule 293 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    PRINTLN         reduce using rule 293 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    PRINT           reduce using rule 293 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    READLINE        reduce using rule 293 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    VAR             reduce using rule 293 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    VAL             reduce using rule 293 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    WHILE           reduce using rule 293 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    FOR             reduce using rule 293 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    IF              reduce using rule 293 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    STRING          reduce using rule 293 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    $end            reduce using rule 293 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    LLAVE_D         reduce using rule 293 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    INT             reduce using rule 293 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    DOUBLE          reduce using rule 293 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    LONG            reduce using rule 293 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    FLOAT           reduce using rule 293 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    CHAR            reduce using rule 293 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    RETURN          reduce using rule 293 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    CASE            reduce using rule 293 (listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)


state 836

    (297) valoresString -> valoresString COMA . STRING

    STRING          shift and go to state 866


state 837

    (168) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo . CORCHETE_D PAR_I INT PAR_D

    CORCHETE_D      shift and go to state 867


state 838

    (294) listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .

    DEF             reduce using rule 294 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    VARIABLE        reduce using rule 294 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    PRINTLN         reduce using rule 294 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    PRINT           reduce using rule 294 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    READLINE        reduce using rule 294 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    VAR             reduce using rule 294 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    VAL             reduce using rule 294 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    WHILE           reduce using rule 294 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    FOR             reduce using rule 294 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    IF              reduce using rule 294 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    STRING          reduce using rule 294 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    $end            reduce using rule 294 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    LLAVE_D         reduce using rule 294 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    INT             reduce using rule 294 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    DOUBLE          reduce using rule 294 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    LONG            reduce using rule 294 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    FLOAT           reduce using rule 294 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    CHAR            reduce using rule 294 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    RETURN          reduce using rule 294 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)
    CASE            reduce using rule 294 (listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D .)


state 839

    (292) listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .

    DEF             reduce using rule 292 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    VARIABLE        reduce using rule 292 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    PRINTLN         reduce using rule 292 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    PRINT           reduce using rule 292 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    READLINE        reduce using rule 292 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    VAR             reduce using rule 292 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    VAL             reduce using rule 292 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    WHILE           reduce using rule 292 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    FOR             reduce using rule 292 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    IF              reduce using rule 292 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    STRING          reduce using rule 292 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    $end            reduce using rule 292 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    LLAVE_D         reduce using rule 292 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    INT             reduce using rule 292 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    DOUBLE          reduce using rule 292 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    LONG            reduce using rule 292 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    FLOAT           reduce using rule 292 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    CHAR            reduce using rule 292 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    RETURN          reduce using rule 292 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)
    CASE            reduce using rule 292 (listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D .)


state 840

    (185) for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 185 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 185 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 185 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 185 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 185 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 185 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 185 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 185 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 185 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 185 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 185 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 185 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 185 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 185 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 185 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 185 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 185 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 185 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 185 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D .)


state 841

    (186) for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .

    DEF             reduce using rule 186 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VARIABLE        reduce using rule 186 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINTLN         reduce using rule 186 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    PRINT           reduce using rule 186 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    READLINE        reduce using rule 186 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAR             reduce using rule 186 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    VAL             reduce using rule 186 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    WHILE           reduce using rule 186 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FOR             reduce using rule 186 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    IF              reduce using rule 186 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    STRING          reduce using rule 186 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    $end            reduce using rule 186 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LLAVE_D         reduce using rule 186 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    INT             reduce using rule 186 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    DOUBLE          reduce using rule 186 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    LONG            reduce using rule 186 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    FLOAT           reduce using rule 186 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    CHAR            reduce using rule 186 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)
    RETURN          reduce using rule 186 (for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D .)


state 842

    (166) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D . PAR_I INT PAR_D

    PAR_I           shift and go to state 868


state 843

    (287) valoresInt -> valoresInt COMA INT .

    PAR_D           reduce using rule 287 (valoresInt -> valoresInt COMA INT .)
    COMA            reduce using rule 287 (valoresInt -> valoresInt COMA INT .)


state 844

    (289) valoresDouble -> valoresDouble COMA DOUBLE .

    PAR_D           reduce using rule 289 (valoresDouble -> valoresDouble COMA DOUBLE .)
    COMA            reduce using rule 289 (valoresDouble -> valoresDouble COMA DOUBLE .)


state 845

    (322) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT . PAR_D

    PAR_D           shift and go to state 869


state 846

    (323) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG . PAR_D

    PAR_D           shift and go to state 870


state 847

    (324) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE . PAR_D

    PAR_D           shift and go to state 871


state 848

    (325) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT . PAR_D

    PAR_D           shift and go to state 872


state 849

    (338) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING . PAR_D

    PAR_D           shift and go to state 873


state 850

    (339) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG . PAR_D

    PAR_D           shift and go to state 874


state 851

    (340) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE . PAR_D

    PAR_D           shift and go to state 875


state 852

    (341) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT . PAR_D

    PAR_D           shift and go to state 876


state 853

    (334) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING . PAR_D

    PAR_D           shift and go to state 877


state 854

    (335) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT . PAR_D

    PAR_D           shift and go to state 878


state 855

    (336) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE . PAR_D

    PAR_D           shift and go to state 879


state 856

    (337) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT . PAR_D

    PAR_D           shift and go to state 880


state 857

    (330) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING . PAR_D

    PAR_D           shift and go to state 881


state 858

    (331) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG . PAR_D

    PAR_D           shift and go to state 882


state 859

    (332) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT . PAR_D

    PAR_D           shift and go to state 883


state 860

    (333) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT . PAR_D

    PAR_D           shift and go to state 884


state 861

    (326) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING . PAR_D

    PAR_D           shift and go to state 885


state 862

    (327) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG . PAR_D

    PAR_D           shift and go to state 886


state 863

    (328) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE . PAR_D

    PAR_D           shift and go to state 887


state 864

    (329) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT . PAR_D

    PAR_D           shift and go to state 888


state 865

    (299) valoresChar -> valoresChar COMA CHAR .

    PAR_D           reduce using rule 299 (valoresChar -> valoresChar COMA CHAR .)
    COMA            reduce using rule 299 (valoresChar -> valoresChar COMA CHAR .)


state 866

    (297) valoresString -> valoresString COMA STRING .

    PAR_D           reduce using rule 297 (valoresString -> valoresString COMA STRING .)
    COMA            reduce using rule 297 (valoresString -> valoresString COMA STRING .)


state 867

    (168) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D . PAR_I INT PAR_D

    PAR_I           shift and go to state 889


state 868

    (166) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I . INT PAR_D

    INT             shift and go to state 890


state 869

    (322) dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .

    DEF             reduce using rule 322 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    VARIABLE        reduce using rule 322 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    PRINTLN         reduce using rule 322 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    PRINT           reduce using rule 322 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    READLINE        reduce using rule 322 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    VAR             reduce using rule 322 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    VAL             reduce using rule 322 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    WHILE           reduce using rule 322 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    FOR             reduce using rule 322 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    IF              reduce using rule 322 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    STRING          reduce using rule 322 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    $end            reduce using rule 322 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    LLAVE_D         reduce using rule 322 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    INT             reduce using rule 322 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    DOUBLE          reduce using rule 322 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    LONG            reduce using rule 322 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    FLOAT           reduce using rule 322 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    CHAR            reduce using rule 322 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    RETURN          reduce using rule 322 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)
    CASE            reduce using rule 322 (dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D .)


state 870

    (323) dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .

    DEF             reduce using rule 323 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    VARIABLE        reduce using rule 323 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    PRINTLN         reduce using rule 323 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    PRINT           reduce using rule 323 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    READLINE        reduce using rule 323 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    VAR             reduce using rule 323 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    VAL             reduce using rule 323 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    WHILE           reduce using rule 323 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    FOR             reduce using rule 323 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    IF              reduce using rule 323 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    STRING          reduce using rule 323 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    $end            reduce using rule 323 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    LLAVE_D         reduce using rule 323 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    INT             reduce using rule 323 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    DOUBLE          reduce using rule 323 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    LONG            reduce using rule 323 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    FLOAT           reduce using rule 323 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    CHAR            reduce using rule 323 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    RETURN          reduce using rule 323 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)
    CASE            reduce using rule 323 (dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D .)


state 871

    (324) dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .

    DEF             reduce using rule 324 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    VARIABLE        reduce using rule 324 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    PRINTLN         reduce using rule 324 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    PRINT           reduce using rule 324 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    READLINE        reduce using rule 324 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    VAR             reduce using rule 324 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    VAL             reduce using rule 324 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    WHILE           reduce using rule 324 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    FOR             reduce using rule 324 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    IF              reduce using rule 324 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    STRING          reduce using rule 324 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    $end            reduce using rule 324 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    LLAVE_D         reduce using rule 324 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    INT             reduce using rule 324 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    DOUBLE          reduce using rule 324 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    LONG            reduce using rule 324 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    FLOAT           reduce using rule 324 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    CHAR            reduce using rule 324 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    RETURN          reduce using rule 324 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)
    CASE            reduce using rule 324 (dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D .)


state 872

    (325) dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .

    DEF             reduce using rule 325 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    VARIABLE        reduce using rule 325 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    PRINTLN         reduce using rule 325 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    PRINT           reduce using rule 325 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    READLINE        reduce using rule 325 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    VAR             reduce using rule 325 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    VAL             reduce using rule 325 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    WHILE           reduce using rule 325 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    FOR             reduce using rule 325 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    IF              reduce using rule 325 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    STRING          reduce using rule 325 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    $end            reduce using rule 325 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    LLAVE_D         reduce using rule 325 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    INT             reduce using rule 325 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    DOUBLE          reduce using rule 325 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    LONG            reduce using rule 325 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    FLOAT           reduce using rule 325 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    CHAR            reduce using rule 325 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    RETURN          reduce using rule 325 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)
    CASE            reduce using rule 325 (dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D .)


state 873

    (338) dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .

    DEF             reduce using rule 338 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    VARIABLE        reduce using rule 338 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    PRINTLN         reduce using rule 338 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    PRINT           reduce using rule 338 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    READLINE        reduce using rule 338 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    VAR             reduce using rule 338 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    VAL             reduce using rule 338 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    WHILE           reduce using rule 338 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    FOR             reduce using rule 338 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    IF              reduce using rule 338 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    STRING          reduce using rule 338 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    $end            reduce using rule 338 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    LLAVE_D         reduce using rule 338 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    INT             reduce using rule 338 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    DOUBLE          reduce using rule 338 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    LONG            reduce using rule 338 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    FLOAT           reduce using rule 338 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    CHAR            reduce using rule 338 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    RETURN          reduce using rule 338 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)
    CASE            reduce using rule 338 (dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D .)


state 874

    (339) dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .

    DEF             reduce using rule 339 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    VARIABLE        reduce using rule 339 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    PRINTLN         reduce using rule 339 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    PRINT           reduce using rule 339 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    READLINE        reduce using rule 339 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    VAR             reduce using rule 339 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    VAL             reduce using rule 339 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    WHILE           reduce using rule 339 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    FOR             reduce using rule 339 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    IF              reduce using rule 339 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    STRING          reduce using rule 339 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    $end            reduce using rule 339 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    LLAVE_D         reduce using rule 339 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    INT             reduce using rule 339 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    DOUBLE          reduce using rule 339 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    LONG            reduce using rule 339 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    FLOAT           reduce using rule 339 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    CHAR            reduce using rule 339 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    RETURN          reduce using rule 339 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)
    CASE            reduce using rule 339 (dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D .)


state 875

    (340) dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .

    DEF             reduce using rule 340 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    VARIABLE        reduce using rule 340 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    PRINTLN         reduce using rule 340 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    PRINT           reduce using rule 340 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    READLINE        reduce using rule 340 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    VAR             reduce using rule 340 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    VAL             reduce using rule 340 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    WHILE           reduce using rule 340 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    FOR             reduce using rule 340 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    IF              reduce using rule 340 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    STRING          reduce using rule 340 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    $end            reduce using rule 340 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    LLAVE_D         reduce using rule 340 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    INT             reduce using rule 340 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    DOUBLE          reduce using rule 340 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    LONG            reduce using rule 340 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    FLOAT           reduce using rule 340 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    CHAR            reduce using rule 340 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    RETURN          reduce using rule 340 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)
    CASE            reduce using rule 340 (dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D .)


state 876

    (341) dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .

    DEF             reduce using rule 341 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    VARIABLE        reduce using rule 341 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    PRINTLN         reduce using rule 341 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    PRINT           reduce using rule 341 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    READLINE        reduce using rule 341 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    VAR             reduce using rule 341 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    VAL             reduce using rule 341 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    WHILE           reduce using rule 341 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    FOR             reduce using rule 341 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    IF              reduce using rule 341 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    STRING          reduce using rule 341 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    $end            reduce using rule 341 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    LLAVE_D         reduce using rule 341 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    INT             reduce using rule 341 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    DOUBLE          reduce using rule 341 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    LONG            reduce using rule 341 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    FLOAT           reduce using rule 341 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    CHAR            reduce using rule 341 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    RETURN          reduce using rule 341 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)
    CASE            reduce using rule 341 (dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D .)


state 877

    (334) dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .

    DEF             reduce using rule 334 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    VARIABLE        reduce using rule 334 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    PRINTLN         reduce using rule 334 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    PRINT           reduce using rule 334 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    READLINE        reduce using rule 334 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    VAR             reduce using rule 334 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    VAL             reduce using rule 334 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    WHILE           reduce using rule 334 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    FOR             reduce using rule 334 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    IF              reduce using rule 334 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    STRING          reduce using rule 334 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    $end            reduce using rule 334 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    LLAVE_D         reduce using rule 334 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    INT             reduce using rule 334 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    DOUBLE          reduce using rule 334 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    LONG            reduce using rule 334 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    FLOAT           reduce using rule 334 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    CHAR            reduce using rule 334 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    RETURN          reduce using rule 334 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)
    CASE            reduce using rule 334 (dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D .)


state 878

    (335) dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .

    DEF             reduce using rule 335 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    VARIABLE        reduce using rule 335 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    PRINTLN         reduce using rule 335 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    PRINT           reduce using rule 335 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    READLINE        reduce using rule 335 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    VAR             reduce using rule 335 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    VAL             reduce using rule 335 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    WHILE           reduce using rule 335 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    FOR             reduce using rule 335 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    IF              reduce using rule 335 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    STRING          reduce using rule 335 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    $end            reduce using rule 335 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    LLAVE_D         reduce using rule 335 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    INT             reduce using rule 335 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    DOUBLE          reduce using rule 335 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    LONG            reduce using rule 335 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    FLOAT           reduce using rule 335 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    CHAR            reduce using rule 335 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    RETURN          reduce using rule 335 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)
    CASE            reduce using rule 335 (dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D .)


state 879

    (336) dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .

    DEF             reduce using rule 336 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    VARIABLE        reduce using rule 336 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    PRINTLN         reduce using rule 336 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    PRINT           reduce using rule 336 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    READLINE        reduce using rule 336 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    VAR             reduce using rule 336 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    VAL             reduce using rule 336 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    WHILE           reduce using rule 336 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    FOR             reduce using rule 336 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    IF              reduce using rule 336 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    STRING          reduce using rule 336 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    $end            reduce using rule 336 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    LLAVE_D         reduce using rule 336 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    INT             reduce using rule 336 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    DOUBLE          reduce using rule 336 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    LONG            reduce using rule 336 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    FLOAT           reduce using rule 336 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    CHAR            reduce using rule 336 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    RETURN          reduce using rule 336 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)
    CASE            reduce using rule 336 (dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D .)


state 880

    (337) dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .

    DEF             reduce using rule 337 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    VARIABLE        reduce using rule 337 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    PRINTLN         reduce using rule 337 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    PRINT           reduce using rule 337 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    READLINE        reduce using rule 337 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    VAR             reduce using rule 337 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    VAL             reduce using rule 337 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    WHILE           reduce using rule 337 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    FOR             reduce using rule 337 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    IF              reduce using rule 337 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    STRING          reduce using rule 337 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    $end            reduce using rule 337 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    LLAVE_D         reduce using rule 337 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    INT             reduce using rule 337 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    DOUBLE          reduce using rule 337 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    LONG            reduce using rule 337 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    FLOAT           reduce using rule 337 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    CHAR            reduce using rule 337 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    RETURN          reduce using rule 337 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)
    CASE            reduce using rule 337 (dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D .)


state 881

    (330) dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .

    DEF             reduce using rule 330 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    VARIABLE        reduce using rule 330 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    PRINTLN         reduce using rule 330 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    PRINT           reduce using rule 330 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    READLINE        reduce using rule 330 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    VAR             reduce using rule 330 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    VAL             reduce using rule 330 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    WHILE           reduce using rule 330 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    FOR             reduce using rule 330 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    IF              reduce using rule 330 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    STRING          reduce using rule 330 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    $end            reduce using rule 330 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    LLAVE_D         reduce using rule 330 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    INT             reduce using rule 330 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    DOUBLE          reduce using rule 330 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    LONG            reduce using rule 330 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    FLOAT           reduce using rule 330 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    CHAR            reduce using rule 330 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    RETURN          reduce using rule 330 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)
    CASE            reduce using rule 330 (dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D .)


state 882

    (331) dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .

    DEF             reduce using rule 331 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    VARIABLE        reduce using rule 331 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    PRINTLN         reduce using rule 331 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    PRINT           reduce using rule 331 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    READLINE        reduce using rule 331 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    VAR             reduce using rule 331 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    VAL             reduce using rule 331 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    WHILE           reduce using rule 331 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    FOR             reduce using rule 331 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    IF              reduce using rule 331 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    STRING          reduce using rule 331 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    $end            reduce using rule 331 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    LLAVE_D         reduce using rule 331 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    INT             reduce using rule 331 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    DOUBLE          reduce using rule 331 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    LONG            reduce using rule 331 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    FLOAT           reduce using rule 331 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    CHAR            reduce using rule 331 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    RETURN          reduce using rule 331 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)
    CASE            reduce using rule 331 (dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D .)


state 883

    (332) dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .

    DEF             reduce using rule 332 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    VARIABLE        reduce using rule 332 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    PRINTLN         reduce using rule 332 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    PRINT           reduce using rule 332 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    READLINE        reduce using rule 332 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    VAR             reduce using rule 332 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    VAL             reduce using rule 332 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    WHILE           reduce using rule 332 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    FOR             reduce using rule 332 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    IF              reduce using rule 332 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    STRING          reduce using rule 332 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    $end            reduce using rule 332 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    LLAVE_D         reduce using rule 332 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    INT             reduce using rule 332 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    DOUBLE          reduce using rule 332 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    LONG            reduce using rule 332 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    FLOAT           reduce using rule 332 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    CHAR            reduce using rule 332 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    RETURN          reduce using rule 332 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)
    CASE            reduce using rule 332 (dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D .)


state 884

    (333) dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .

    DEF             reduce using rule 333 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    VARIABLE        reduce using rule 333 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    PRINTLN         reduce using rule 333 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    PRINT           reduce using rule 333 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    READLINE        reduce using rule 333 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    VAR             reduce using rule 333 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    VAL             reduce using rule 333 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    WHILE           reduce using rule 333 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    FOR             reduce using rule 333 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    IF              reduce using rule 333 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    STRING          reduce using rule 333 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    $end            reduce using rule 333 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    LLAVE_D         reduce using rule 333 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    INT             reduce using rule 333 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    DOUBLE          reduce using rule 333 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    LONG            reduce using rule 333 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    FLOAT           reduce using rule 333 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    CHAR            reduce using rule 333 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    RETURN          reduce using rule 333 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)
    CASE            reduce using rule 333 (dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D .)


state 885

    (326) dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .

    DEF             reduce using rule 326 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    VARIABLE        reduce using rule 326 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    PRINTLN         reduce using rule 326 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    PRINT           reduce using rule 326 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    READLINE        reduce using rule 326 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    VAR             reduce using rule 326 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    VAL             reduce using rule 326 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    WHILE           reduce using rule 326 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    FOR             reduce using rule 326 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    IF              reduce using rule 326 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    STRING          reduce using rule 326 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    $end            reduce using rule 326 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    LLAVE_D         reduce using rule 326 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    INT             reduce using rule 326 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    DOUBLE          reduce using rule 326 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    LONG            reduce using rule 326 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    FLOAT           reduce using rule 326 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    CHAR            reduce using rule 326 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    RETURN          reduce using rule 326 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)
    CASE            reduce using rule 326 (dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D .)


state 886

    (327) dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .

    DEF             reduce using rule 327 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    VARIABLE        reduce using rule 327 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    PRINTLN         reduce using rule 327 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    PRINT           reduce using rule 327 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    READLINE        reduce using rule 327 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    VAR             reduce using rule 327 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    VAL             reduce using rule 327 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    WHILE           reduce using rule 327 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    FOR             reduce using rule 327 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    IF              reduce using rule 327 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    STRING          reduce using rule 327 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    $end            reduce using rule 327 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    LLAVE_D         reduce using rule 327 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    INT             reduce using rule 327 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    DOUBLE          reduce using rule 327 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    LONG            reduce using rule 327 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    FLOAT           reduce using rule 327 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    CHAR            reduce using rule 327 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    RETURN          reduce using rule 327 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)
    CASE            reduce using rule 327 (dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D .)


state 887

    (328) dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .

    DEF             reduce using rule 328 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    VARIABLE        reduce using rule 328 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    PRINTLN         reduce using rule 328 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    PRINT           reduce using rule 328 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    READLINE        reduce using rule 328 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    VAR             reduce using rule 328 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    VAL             reduce using rule 328 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    WHILE           reduce using rule 328 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    FOR             reduce using rule 328 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    IF              reduce using rule 328 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    STRING          reduce using rule 328 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    $end            reduce using rule 328 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    LLAVE_D         reduce using rule 328 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    INT             reduce using rule 328 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    DOUBLE          reduce using rule 328 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    LONG            reduce using rule 328 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    FLOAT           reduce using rule 328 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    CHAR            reduce using rule 328 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    RETURN          reduce using rule 328 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)
    CASE            reduce using rule 328 (dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D .)


state 888

    (329) dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .

    DEF             reduce using rule 329 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    VARIABLE        reduce using rule 329 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    PRINTLN         reduce using rule 329 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    PRINT           reduce using rule 329 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    READLINE        reduce using rule 329 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    VAR             reduce using rule 329 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    VAL             reduce using rule 329 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    WHILE           reduce using rule 329 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    FOR             reduce using rule 329 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    IF              reduce using rule 329 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    STRING          reduce using rule 329 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    $end            reduce using rule 329 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    LLAVE_D         reduce using rule 329 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    INT             reduce using rule 329 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    DOUBLE          reduce using rule 329 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    LONG            reduce using rule 329 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    FLOAT           reduce using rule 329 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    CHAR            reduce using rule 329 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    RETURN          reduce using rule 329 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)
    CASE            reduce using rule 329 (dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D .)


state 889

    (168) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I . INT PAR_D

    INT             shift and go to state 891


state 890

    (166) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT . PAR_D

    PAR_D           shift and go to state 892


state 891

    (168) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT . PAR_D

    PAR_D           shift and go to state 893


state 892

    (166) array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .

    DEF             reduce using rule 166 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VARIABLE        reduce using rule 166 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINTLN         reduce using rule 166 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINT           reduce using rule 166 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    READLINE        reduce using rule 166 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAR             reduce using rule 166 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAL             reduce using rule 166 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    WHILE           reduce using rule 166 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FOR             reduce using rule 166 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    IF              reduce using rule 166 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    STRING          reduce using rule 166 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    $end            reduce using rule 166 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LLAVE_D         reduce using rule 166 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    INT             reduce using rule 166 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    DOUBLE          reduce using rule 166 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LONG            reduce using rule 166 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FLOAT           reduce using rule 166 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    CHAR            reduce using rule 166 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    RETURN          reduce using rule 166 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    CASE            reduce using rule 166 (array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)


state 893

    (168) array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .

    DEF             reduce using rule 168 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VARIABLE        reduce using rule 168 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINTLN         reduce using rule 168 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    PRINT           reduce using rule 168 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    READLINE        reduce using rule 168 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAR             reduce using rule 168 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    VAL             reduce using rule 168 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    WHILE           reduce using rule 168 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FOR             reduce using rule 168 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    IF              reduce using rule 168 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    STRING          reduce using rule 168 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    $end            reduce using rule 168 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LLAVE_D         reduce using rule 168 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    INT             reduce using rule 168 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    DOUBLE          reduce using rule 168 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    LONG            reduce using rule 168 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    FLOAT           reduce using rule 168 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    CHAR            reduce using rule 168 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    RETURN          reduce using rule 168 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)
    CASE            reduce using rule 168 (array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 54 resolved as shift
WARNING: shift/reduce conflict for MAS in state 114 resolved as shift
WARNING: shift/reduce conflict for MAS in state 115 resolved as shift
WARNING: shift/reduce conflict for MAS in state 116 resolved as shift
WARNING: shift/reduce conflict for MAS in state 117 resolved as shift
WARNING: shift/reduce conflict for MAS in state 164 resolved as shift
WARNING: shift/reduce conflict for MAS in state 166 resolved as shift
WARNING: shift/reduce conflict for MAS in state 167 resolved as shift
WARNING: shift/reduce conflict for MAS in state 168 resolved as shift
WARNING: shift/reduce conflict for MAS in state 196 resolved as shift
WARNING: shift/reduce conflict for MAS in state 197 resolved as shift
WARNING: shift/reduce conflict for MAS in state 198 resolved as shift
WARNING: shift/reduce conflict for MAS in state 199 resolved as shift
WARNING: shift/reduce conflict for PAR_D in state 447 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_D in state 507 resolved as shift
WARNING: shift/reduce conflict for CORCHETE_D in state 508 resolved as shift
WARNING: shift/reduce conflict for PAR_D in state 633 resolved as shift
WARNING: shift/reduce conflict for PAR_D in state 634 resolved as shift
WARNING: shift/reduce conflict for LLAVE_D in state 637 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 682 resolved as shift
WARNING: shift/reduce conflict for LLAVE_D in state 684 resolved as shift
WARNING: reduce/reduce conflict in state 186 resolved using rule (asignacionLong -> VAR VARIABLE IGUAL longvalues)
WARNING: rejected rule (floatvalues -> longvalues) in state 186
WARNING: reduce/reduce conflict in state 187 resolved using rule (asignacionInt -> VAR VARIABLE IGUAL intvalues)
WARNING: rejected rule (longvalues -> intvalues) in state 187
WARNING: reduce/reduce conflict in state 188 resolved using rule (asignacionFloat -> VAR VARIABLE IGUAL floatvalues)
WARNING: rejected rule (doublevalues -> floatvalues) in state 188
WARNING: reduce/reduce conflict in state 223 resolved using rule (asignacionLong -> VAL VARIABLE IGUAL longvalues)
WARNING: rejected rule (floatvalues -> longvalues) in state 223
WARNING: reduce/reduce conflict in state 224 resolved using rule (asignacionInt -> VAL VARIABLE IGUAL intvalues)
WARNING: rejected rule (longvalues -> intvalues) in state 224
WARNING: reduce/reduce conflict in state 225 resolved using rule (asignacionFloat -> VAL VARIABLE IGUAL floatvalues)
WARNING: rejected rule (doublevalues -> floatvalues) in state 225

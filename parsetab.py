
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARRAYCLASS ARROBA BACKTICK BOOLCLASS CASE CATCH CHAR CHARCLASS CLASS COMA CORCHETE_D CORCHETE_I DEF DIFERENTE DIVISION DO DOBLE_PUNTO DOUBLE DOUBLECLASS ELSE EXTENDS FINAL FINALLY FLASE FLOAT FLOATCLASS FOR FOR_SOME FUNCION_FLECHA HASHTAG IF IGUAL IGUAL_COMPARACION IMPLICIT IMPORT INT INTCLASS ITERATOR LAZY LIBRERIA_IO LISTCLASS LLAVE_D LLAVE_I LONG LONGCLASS MACRO MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MOD MULTIPLICACION NEW NOT NULL OBJECT OR OVERRIDE PACKAGE PAR_D PAR_I PRINT PRINTLN PRIVATE PROTECTED PUNTO READLINE RETURN REVERSE SEALED STARTSWITH STRING STRINGCLASS SUBGUION SUPER THIS THROW TO TO_DOUBLE TO_FLOAT TO_INT TO_LONG TRAIT TRUE TRY TYPE UNTIL VAL VAR VARIABLE WHILE WITH YIELD inicio : OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D\n  | IMPORT io inicio\n  | cuerpo\n   io : VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINEcuerpo : funcion\n  | funcall\n  | impresion\n  | entrada\n  | asignacion\n  | while\n  | for\n  | match\n  | if\n  | startsWith\n  | funcion cuerpo\n  | asignacion cuerpo\n  | while cuerpo\n  | for cuerpo\n  | if cuerpo\n  | match cuerpo\n  | startsWith cuerpocontenido : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entrada\n  | while\n  | for\n  | match\n  | if\n  | aritmetica\n  | startsWith\n  | asignacion contenido\n  | reasignacion contenido\n  | funcall contenido\n  | impresion contenido\n  | entrada contenido\n  | while contenido\n  | for contenido\n  | if contenido\n  | match contenido\n  | aritmetica contenido\n  | startsWith contenidocontenidoLine : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entradaasignacion : VAR VARIABLE IGUAL VARIABLE\n  | VAL VARIABLE IGUAL VARIABLE\n  | VAR VARIABLE IGUAL aritmetica\n  | VAL VARIABLE IGUAL aritmetica\n  | VAR VARIABLE IGUAL returnfun\n  | VAL VARIABLE IGUAL returnfun\n  | asignacionLong\n  | asignacionInt\n  | asignacionFloat\n  | asignacionDouble\n  | asignacionString\n  | asignacionChar\n  | asignacionBoolean\n  | array\n  | listasignacionLong :  VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLEasignacionFloat : VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLEasignacionDouble : VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLEasignacionString : VAR VARIABLE IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAL VARIABLE IGUAL STRING\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLEasignacionChar : VAR VARIABLE IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAL VARIABLE IGUAL CHAR\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLEasignacionBoolean : VAR VARIABLE IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAL VARIABLE IGUAL booleanos\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLEreasignacion :  VARIABLE IGUAL valor\n      | VARIABLE IGUAL returnfun\n      | VARIABLE IGUAL aritmetica\n      | VARIABLE PAR_I INT PAR_D IGUAL valortipo : CHARCLASS\n  | STRINGCLASS\n  | BOOLCLASS\n  | INTCLASS\n  | LONGCLASS\n  | DOUBLECLASS\n  | FLOATCLASS\n  | ARRAYCLASS CORCHETE_I tipo CORCHETE_D\n  | LISTCLASS CORCHETE_I tipo CORCHETE_Dvalor : STRING\n  | CHAR\n  | VARIABLE\n  | numeros\n  | booleanos\n  | VARIABLE PAR_I VARIABLE PAR_D\n  | VARIABLE PAR_I INT PAR_Dbooleanos : TRUE\n  | FLASE\n  | startsWithnumeros : INT\n  | LONG\n  | FLOAT\n  | DOUBLEfuncion : DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D\n  | DEF VARIABLE parametro LLAVE_I contenido LLAVE_Ddeclaracion : VARIABLE DOBLE_PUNTO tipodeclaracion :  VARIABLE DOBLE_PUNTO tipo IGUAL valor parametro : parametros\n  | PAR_I PAR_D parametros : PAR_I declaracion PAR_D \n    | PAR_I declaracion PAR_D parametrosfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D\n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D \n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_Ddectipo : DOBLE_PUNTO tipo dectipoTupla : DOBLE_PUNTO PAR_I tipos PAR_Dtipos : tipo\n    | tipo tiposentrytiposentry : COMA tipo \n  | COMA tipo tiposentryimpresion : PRINTLN PAR_I valorI PAR_D\n  | PRINT PAR_I valorI PAR_DvalorI : valor MAS valorI\n  | valorentrada : READLINE PAR_I PAR_Dfuncall : VARIABLE varparen varparen : PAR_I valores PAR_D\n  | PAR_I PAR_D\n  | varparen PAR_I valores PAR_D\n  | varparen PAR_I PAR_D returnfun : returnCastable\n      | castingcallreturnCastable : entrada\n      | funcallcastingcall : returnCastable PUNTO castingfun\n      | VARIABLE PUNTO castingfuncastingfun : TO_INT\n    | TO_DOUBLE\n    | TO_FLOAT\n    | TO_LONGarray : VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | arrayInt\n  | arrayDoublelist : VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_Dvalores : valor\n  | valor COMA valorestuple : PAR_I valores PAR_Dasignacion : VAR VARIABLE IGUAL tuple \n      | VAL VARIABLE IGUAL tuplewhile : WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_Dfor : FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_Dmatch : VARIABLE MATCH  LLAVE_I cases LLAVE_Dcases : casesInt\n    | casesLgn\n    | casesFlt\n    | casesDob\n    | casesStr\n    | casesChar\n    | casesBoolcaseInt : CASE INT FUNCION_FLECHA codeBlock casesInt : caseInt \n      | caseInt casesInt\n      | caseInt defcasecaseLgn : CASE LONG FUNCION_FLECHA codeBlock casesLgn : caseLgn \n      | caseLgn casesLgn\n      | caseLgn defcasecaseFlt : CASE FLOAT FUNCION_FLECHA codeBlock casesFlt : caseFlt \n      | caseFlt casesFlt\n      | caseFlt defcasecaseDob : CASE DOUBLE FUNCION_FLECHA codeBlock casesDob : caseDob \n      | caseDob casesDob\n      | caseDob defcasecaseStr : CASE STRING FUNCION_FLECHA codeBlock casesStr : caseStr\n      | caseStr casesStr\n      | caseStr defcasecaseChar : CASE CHAR FUNCION_FLECHA codeBlock casesChar : caseChar\n      | caseChar casesChar\n      | caseChar defcasecaseBool : CASE booleanos FUNCION_FLECHA codeBlock casesBool : caseBool\n      | caseBool casesBool\n      | caseBool defcasedefcase : CASE SUBGUION FUNCION_FLECHA codeBlock codeBlock : contenidoLine\n      | LLAVE_I contenido LLAVE_Dif : IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | if elseif\n  | if else\n  elseif : ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseifelse : ELSE LLAVE_I contenido LLAVE_D\n  | elseif elsecondicional : valorC logicos condicional\n  | valorCvalorC : VARIABLE\n  | booleanos\n  | relacional\n  | NOT VARIABLE\n  | NOT booleanos\n  | NOT relacional\n  logicos : AND\n  | OR\n  | NOTrelacional : numeros comparacion numeros\n  | aritmetica comparacion aritmetica\n  | aritmetica comparacion numeros\n  | numeros comparacion aritmetica\n  | booleanos comparacion booleanos\n  | STRING comparacion STRING\n  | CHAR comparacion CHAR\n  | VARIABLE comparacion numeros\n  | numeros comparacion VARIABLE\n  | VARIABLE comparacion booleanos\n  | booleanos comparacion VARIABLE\n  | VARIABLE comparacion STRING\n  | STRING comparacion VARIABLE\n  | VARIABLE comparacion CHAR\n  | CHAR comparacion VARIABLE\n  | VARIABLE comparacion VARIABLEcomparacion : IGUAL_COMPARACION\n  | DIFERENTE\n  | MAYOR\n  | MENORaritmetica : numeros aritmeticos numeros\n  | VARIABLE aritmeticos numeros\n  | numeros aritmeticos VARIABLE\n  | VARIABLE aritmeticos VARIABLE\n  | aritmetica aritmeticos numeros\n  | aritmetica aritmeticos VARIABLEaritmeticos : MENOS\n  | MAS\n  | MULTIPLICACION\n  | DIVISION\n  | MODarrayInt : VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D\n  arrayDouble : VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_DvaloresInt : INT\n  | valoresInt COMA INTvaloresDouble : DOUBLE\n  | valoresDouble COMA DOUBLEstartsWith : STRING PUNTO STARTSWITH PAR_I STRING PAR_D\n  | STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_Dasignacion : VAR VARIABLE DOBLE_PUNTO  dectupla\n      | VAL VARIABLE DOBLE_PUNTO dectupla dectupla : PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D\n  | PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D\n  | PAR_I STRINGCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D\n  | PAR_I STRINGCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D dectupla : PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D\n  | PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D\n  | PAR_I FLOATCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D\n  | PAR_I FLOATCLASS COMA  INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D dectupla : PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D\n  | PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D\n  | PAR_I DOUBLECLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D\n  | PAR_I DOUBLECLASS COMA  INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D dectupla : PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D\n  | PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D\n  | PAR_I LONGCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D\n  | PAR_I LONGCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT  PAR_D dectupla : PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D\n  | PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D\n  | PAR_I INTCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D\n  | PAR_I INTCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D asignacionInt : VAR VARIABLE IGUAL intvalues\n    | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues\n    | VAL VARIABLE IGUAL intvalues\n    | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvaluesintvalues : INT\n  | stringCastIntasignacionLong : VAR VARIABLE IGUAL longvalues\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues\n  | VAL VARIABLE IGUAL longvalues\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalueslongvalues : INT\n  | intvalues\n  | stringCastLongasignacionFloat : VAR VARIABLE IGUAL floatvalues\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues\n  | VAL VARIABLE IGUAL floatvalues\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvaluesfloatvalues : FLOAT\n  | longvalues\n  | stringCastFloatasignacionDouble : VAR VARIABLE IGUAL doublevalues\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues\n  | VAL VARIABLE IGUAL doublevalues\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevaluesdoublevalues : DOUBLE\n  | floatvalues\n  | stringCastDoublestringCastInt : STRING PUNTO TO_INTstringCastLong : STRING PUNTO TO_LONGstringCastFloat : STRING PUNTO TO_FLOATstringCastDouble : STRING PUNTO TO_DOUBLE'
    
_lr_action_items = {end':([1,4,6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,28,29,30,35,36,38,43,44,45,46,47,48,49,50,52,67,74,75,76,77,78,79,80,81,84,94,115,132,159,161,162,163,164,165,166,167,168,169,170,171,172,175,176,177,178,179,180,181,182,183,184,185,186,196,197,198,199,200,201,202,203,204,205,206,209,249,250,251,285,353,354,360,361,365,366,396,406,407,408,409,410,411,412,413,414,416,417,418,419,420,421,423,424,426,427,428,429,431,432,433,434,436,437,438,439,440,441,452,453,454,455,456,457,458,459,460,461,462,463,464,474,496,506,534,535,538,545,595,597,603,604,605,606,640,644,645,646,647,648,649,650,651,678,713,714,716,718,741,743,744,769,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,794,795,],[0,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-55,-56,-57,-58,-59,-60,-61,-62,-63,-164,-165,-145,-15,-16,-17,-18,-20,-19,-221,-222,-21,-147,-111,-112,-113,-114,-108,-109,-110,-2,-226,-144,-149,-146,-140,-141,-49,-51,-53,-172,-305,-299,-312,-319,-70,-76,-82,-150,-151,-303,-311,-304,-316,-318,-323,-325,-152,-153,-277,-50,-52,-54,-173,-307,-301,-314,-321,-72,-78,-84,-278,-1,-148,-181,-225,-261,-259,-258,-260,-262,-263,-116,-155,-156,-157,-158,-159,-327,-326,-328,-329,-171,-154,-64,-306,-303,-310,-300,-303,-66,-313,-316,-317,-68,-320,-323,-324,-74,-71,-80,-77,-86,-83,-65,-308,-302,-67,-315,-69,-322,-75,-73,-81,-79,-87,-85,-275,-115,-160,-162,-166,-174,-220,-276,-223,-128,-127,-129,-130,-176,-224,-124,-123,-125,-126,-132,-131,-133,-175,-177,-178,-269,-270,-168,-179,-180,-167,-279,-280,-281,-282,-295,-296,-297,-298,-291,-292,-293,-294,-287,-288,-289,-290,-283,-284,-285,-286,-161,-163,]),'MATCH':([3,149,],[39,39,]),'PAR_I':([3,17,18,19,31,32,33,38,53,67,71,86,95,96,97,98,112,115,132,149,155,162,173,196,207,208,250,314,389,485,551,555,559,599,607,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,635,677,745,768,],[40,54,55,56,59,60,61,64,90,-147,134,136,174,195,174,195,248,-149,-146,298,304,40,319,40,335,336,-148,403,494,298,134,494,174,494,40,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,676,710,770,791,]),'LLAVE_D':([6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,28,29,30,35,36,38,43,44,45,46,47,48,49,50,52,67,69,70,71,72,73,74,75,76,77,78,79,80,84,94,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,137,138,139,140,141,142,143,144,145,146,147,148,159,161,162,163,164,165,166,167,168,169,170,171,172,175,176,177,178,179,180,181,182,183,184,185,186,196,197,198,199,200,201,202,203,204,205,206,209,250,251,252,253,255,256,258,259,261,262,264,265,267,268,270,271,285,286,287,288,289,290,291,292,293,294,295,296,300,353,354,360,361,365,366,385,386,389,390,391,392,393,395,396,406,407,408,409,410,411,412,413,414,416,417,418,419,420,421,423,424,426,427,428,429,431,432,433,434,436,437,438,439,440,441,452,453,454,455,456,457,458,459,460,461,462,463,464,467,473,474,477,478,480,481,482,483,484,486,487,488,489,490,491,496,506,534,535,538,545,547,548,550,555,556,557,558,592,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,637,640,644,645,646,647,648,649,650,651,678,681,682,711,712,713,714,716,718,741,743,744,769,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,794,795,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-55,-56,-57,-58,-59,-60,-61,-62,-63,-164,-165,-145,-15,-16,-17,-18,-20,-19,-221,-222,-21,-147,-101,-102,-103,-104,-105,-111,-112,-113,-114,-108,-109,-110,-226,-144,249,-149,251,-182,-183,-184,-185,-186,-187,-188,-190,-194,-198,-202,-206,-210,-214,-146,285,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-140,-141,-49,-51,-53,-172,-305,-299,-312,-319,-70,-76,-82,-150,-151,-303,-311,-304,-316,-318,-323,-325,-152,-153,-277,-50,-52,-54,-173,-307,-301,-314,-321,-72,-78,-84,-278,-148,-181,-191,-192,-195,-196,-199,-200,-203,-204,-207,-208,-211,-212,-215,-216,-225,-33,-34,-35,-36,-37,-38,-39,-41,-40,-42,-43,396,-261,-259,-258,-260,-262,-263,-106,-107,-103,-88,-89,-90,-104,496,-116,-155,-156,-157,-158,-159,-327,-326,-328,-329,-171,-154,-64,-306,-303,-310,-300,-303,-66,-313,-316,-317,-68,-320,-323,-324,-74,-71,-80,-77,-86,-83,-65,-308,-302,-67,-315,-69,-322,-75,-73,-81,-79,-87,-85,538,545,-275,-189,-218,-44,-45,-46,-47,-48,-193,-197,-201,-205,-209,-213,-115,-160,-162,-166,-174,-220,-217,596,597,603,604,605,606,640,-276,-219,-223,-91,645,646,647,648,-128,-127,-129,-130,649,650,651,678,-176,-224,-124,-123,-125,-126,-132,-131,-133,-175,713,714,743,744,-177,-178,-269,-270,-168,-179,-180,-167,-279,-280,-281,-282,-295,-296,-297,-298,-291,-292,-293,-294,-287,-288,-289,-290,-283,-284,-285,-286,-161,-163,]),'ELSE':([14,49,50,83,84,146,285,545,597,644,],[51,85,-222,85,-226,51,-225,-220,643,-224,]),'INT':([22,23,24,25,26,27,28,29,30,35,36,38,40,49,50,54,55,59,61,64,67,69,70,71,72,73,74,75,76,77,78,79,80,84,87,94,95,97,104,115,131,132,133,134,136,138,139,140,141,142,143,144,145,146,147,148,152,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,196,197,198,199,200,201,202,203,204,205,206,209,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,239,240,241,242,246,250,251,254,285,297,298,299,319,322,323,324,325,335,336,337,338,339,340,346,353,354,360,361,365,366,371,374,385,386,389,390,391,392,393,397,398,406,407,408,409,410,411,412,413,414,416,417,418,419,420,421,423,424,426,427,428,429,431,432,433,434,436,437,438,439,440,441,452,453,454,455,456,457,458,459,460,461,462,463,464,471,472,474,475,479,493,494,498,505,506,534,535,538,540,541,542,545,553,554,589,595,597,598,640,641,642,644,653,659,660,661,662,676,678,679,680,710,713,714,716,717,718,720,729,735,739,741,743,744,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,794,795,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-164,-165,-145,74,-221,-222,74,74,74,74,74,-147,-101,-102,-103,-104,-105,-111,-112,-113,-114,-108,-109,-110,-226,74,-144,177,177,74,-149,273,-146,74,282,74,74,74,74,74,74,74,74,74,74,74,74,74,-140,74,-141,-49,-51,-53,-172,-305,-299,-312,-319,-70,-76,-82,74,-150,-151,-303,-311,-304,-316,-318,-323,-325,-152,-153,-277,-50,-52,-54,-173,-307,-301,-314,-321,-72,-78,-84,-278,74,-235,-236,-237,74,74,-254,-255,-256,-257,-264,-265,-266,-267,-268,74,74,74,74,373,-148,-181,273,-225,74,394,74,74,420,424,420,420,74,74,420,424,420,420,74,-261,-259,-258,-260,-262,-263,469,74,-106,-107,-103,-88,-89,-90,-104,74,74,-155,-156,-157,-158,-159,-327,-326,-328,-329,-171,-154,-64,-306,-303,-310,-300,-303,-66,-313,-316,-317,-68,-320,-323,-324,-74,-71,-80,-77,-86,-83,-65,-308,-302,-67,-315,-69,-322,-75,-73,-81,-79,-87,-85,543,544,-275,546,74,74,552,74,74,-160,-162,-166,-174,590,591,74,-220,74,74,74,-276,-223,-91,-176,74,74,-224,685,692,693,694,695,74,-175,74,74,74,-177,-178,-269,746,-270,748,757,763,767,-168,-179,-180,-167,792,-279,-280,-281,-282,-295,-296,-297,-298,-291,-292,-293,-294,-287,-288,-289,-290,-283,-284,-285,-286,793,-161,-163,]),'LONG':([22,23,24,25,26,27,28,29,30,35,36,38,40,49,50,54,55,59,61,64,67,69,70,71,72,73,74,75,76,77,78,79,80,84,87,94,95,97,104,115,131,132,133,136,138,139,140,141,142,143,144,145,146,147,148,152,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,196,197,198,199,200,201,202,203,204,205,206,209,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,239,240,241,242,250,251,257,285,297,298,299,319,335,336,346,353,354,360,361,365,366,374,385,386,389,390,391,392,393,397,398,406,407,408,409,410,411,412,413,414,416,417,418,419,420,421,423,424,426,427,428,429,431,432,433,434,436,437,438,439,440,441,452,453,454,455,456,457,458,459,460,461,462,463,464,474,479,493,494,498,505,506,534,535,538,542,545,553,554,589,595,597,598,640,641,642,644,663,664,665,666,676,678,679,680,710,713,714,716,718,721,725,733,737,741,743,744,769,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,794,795,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-164,-165,-145,75,-221,-222,75,75,75,75,75,-147,-101,-102,-103,-104,-105,-111,-112,-113,-114,-108,-109,-110,-226,75,-144,75,75,75,-149,274,-146,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-140,75,-141,-49,-51,-53,-172,-305,-299,-312,-319,-70,-76,-82,75,-150,-151,-303,-311,-304,-316,-318,-323,-325,-152,-153,-277,-50,-52,-54,-173,-307,-301,-314,-321,-72,-78,-84,-278,75,-235,-236,-237,75,75,-254,-255,-256,-257,-264,-265,-266,-267,-268,75,75,75,75,-148,-181,274,-225,75,75,75,75,75,75,75,-261,-259,-258,-260,-262,-263,75,-106,-107,-103,-88,-89,-90,-104,75,75,-155,-156,-157,-158,-159,-327,-326,-328,-329,-171,-154,-64,-306,-303,-310,-300,-303,-66,-313,-316,-317,-68,-320,-323,-324,-74,-71,-80,-77,-86,-83,-65,-308,-302,-67,-315,-69,-322,-75,-73,-81,-79,-87,-85,-275,75,75,75,75,75,-160,-162,-166,-174,75,-220,75,75,75,-276,-223,-91,-176,75,75,-224,696,697,698,699,75,-175,75,75,75,-177,-178,-269,-270,749,753,761,765,-168,-179,-180,-167,-279,-280,-281,-282,-295,-296,-297,-298,-291,-292,-293,-294,-287,-288,-289,-290,-283,-284,-285,-286,-161,-163,]),'FLOAT':([22,23,24,25,26,27,28,29,30,35,36,38,40,49,50,54,55,59,61,64,67,69,70,71,72,73,74,75,76,77,78,79,80,84,87,94,95,97,104,115,131,132,133,136,138,139,140,141,142,143,144,145,146,147,148,152,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,196,197,198,199,200,201,202,203,204,205,206,209,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,239,240,241,242,250,251,260,285,297,298,299,319,324,325,335,336,339,340,346,353,354,360,361,365,366,374,385,386,389,390,391,392,393,397,398,406,407,408,409,410,411,412,413,414,416,417,418,419,420,421,423,424,426,427,428,429,431,432,433,434,436,437,438,439,440,441,452,453,454,455,456,457,458,459,460,461,462,463,464,474,479,493,494,498,505,506,534,535,538,542,545,553,554,589,595,597,598,640,641,642,644,671,672,673,674,676,678,679,680,710,713,714,716,718,723,727,731,734,741,743,744,769,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,794,795,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-164,-165,-145,76,-221,-222,76,76,76,76,76,-147,-101,-102,-103,-104,-105,-111,-112,-113,-114,-108,-109,-110,-226,76,-144,180,180,76,-149,275,-146,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-140,76,-141,-49,-51,-53,-172,-305,-299,-312,-319,-70,-76,-82,76,-150,-151,-303,-311,-304,-316,-318,-323,-325,-152,-153,-277,-50,-52,-54,-173,-307,-301,-314,-321,-72,-78,-84,-278,76,-235,-236,-237,76,76,-254,-255,-256,-257,-264,-265,-266,-267,-268,76,76,76,76,-148,-181,275,-225,76,76,76,76,428,428,76,76,428,428,76,-261,-259,-258,-260,-262,-263,76,-106,-107,-103,-88,-89,-90,-104,76,76,-155,-156,-157,-158,-159,-327,-326,-328,-329,-171,-154,-64,-306,-303,-310,-300,-303,-66,-313,-316,-317,-68,-320,-323,-324,-74,-71,-80,-77,-86,-83,-65,-308,-302,-67,-315,-69,-322,-75,-73,-81,-79,-87,-85,-275,76,76,76,76,76,-160,-162,-166,-174,76,-220,76,76,76,-276,-223,-91,-176,76,76,-224,704,705,706,707,76,-175,76,76,76,-177,-178,-269,-270,751,755,759,762,-168,-179,-180,-167,-279,-280,-281,-282,-295,-296,-297,-298,-291,-292,-293,-294,-287,-288,-289,-290,-283,-284,-285,-286,-161,-163,]),'DOUBLE':([22,23,24,25,26,27,28,29,30,35,36,38,40,49,50,54,55,59,61,64,67,69,70,71,72,73,74,75,76,77,78,79,80,84,87,94,95,97,104,115,131,132,133,136,138,139,140,141,142,143,144,145,146,147,148,152,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,196,197,198,199,200,201,202,203,204,205,206,209,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,239,240,241,242,250,251,263,285,297,298,299,319,325,335,336,340,346,353,354,360,361,365,366,374,385,386,389,390,391,392,393,397,398,406,407,408,409,410,411,412,413,414,416,417,418,419,420,421,423,424,426,427,428,429,431,432,433,434,436,437,438,439,440,441,452,453,454,455,456,457,458,459,460,461,462,463,464,474,479,493,494,498,505,506,534,535,538,542,545,553,554,589,595,597,598,640,641,642,644,654,667,668,669,670,676,678,679,680,710,713,714,716,718,719,722,726,730,738,741,743,744,769,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,794,795,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-164,-165,-145,77,-221,-222,77,77,77,77,77,-147,-101,-102,-103,-104,-105,-111,-112,-113,-114,-108,-109,-110,-226,77,-144,182,182,77,-149,276,-146,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-140,77,-141,-49,-51,-53,-172,-305,-299,-312,-319,-70,-76,-82,77,-150,-151,-303,-311,-304,-316,-318,-323,-325,-152,-153,-277,-50,-52,-54,-173,-307,-301,-314,-321,-72,-78,-84,-278,77,-235,-236,-237,77,77,-254,-255,-256,-257,-264,-265,-266,-267,-268,77,77,77,77,-148,-181,276,-225,77,77,77,77,433,77,77,433,77,-261,-259,-258,-260,-262,-263,77,-106,-107,-103,-88,-89,-90,-104,77,77,-155,-156,-157,-158,-159,-327,-326,-328,-329,-171,-154,-64,-306,-303,-310,-300,-303,-66,-313,-316,-317,-68,-320,-323,-324,-74,-71,-80,-77,-86,-83,-65,-308,-302,-67,-315,-69,-322,-75,-73,-81,-79,-87,-85,-275,77,77,77,77,77,-160,-162,-166,-174,77,-220,77,77,77,-276,-223,-91,-176,77,77,-224,687,700,701,702,703,77,-175,77,77,77,-177,-178,-269,-270,747,750,754,758,766,-168,-179,-180,-167,-279,-280,-281,-282,-295,-296,-297,-298,-291,-292,-293,-294,-287,-288,-289,-290,-283,-284,-285,-286,-161,-163,]),'RETURN':([22,23,24,25,26,27,28,29,30,35,36,38,49,50,67,69,70,71,72,73,74,75,76,77,78,79,80,84,94,115,132,138,139,140,141,142,143,144,145,146,147,148,159,161,162,163,164,165,166,167,168,169,170,171,172,175,176,177,178,179,180,181,182,183,184,185,186,196,197,198,199,200,201,202,203,204,205,206,209,250,251,285,286,287,288,289,290,291,292,293,294,295,296,353,354,360,361,365,366,385,386,389,390,391,392,393,397,406,407,408,409,410,411,412,413,414,416,417,418,419,420,421,423,424,426,427,428,429,431,432,433,434,436,437,438,439,440,441,452,453,454,455,456,457,458,459,460,461,462,463,464,474,497,499,506,534,535,538,545,595,597,598,640,644,678,713,714,716,718,741,743,744,769,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,794,795,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-164,-165,-145,-221,-222,-147,-101,-102,-103,-104,-105,-111,-112,-113,-114,-108,-109,-110,-226,-144,-149,-146,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-140,-141,-49,-51,-53,-172,-305,-299,-312,-319,-70,-76,-82,-150,-151,-303,-311,-304,-316,-318,-323,-325,-152,-153,-277,-50,-52,-54,-173,-307,-301,-314,-321,-72,-78,-84,-278,-148,-181,-225,-33,-34,-35,-36,-37,-38,-39,-41,-40,-42,-43,-261,-259,-258,-260,-262,-263,-106,-107,-103,-88,-89,-90,-104,498,-155,-156,-157,-158,-159,-327,-326,-328,-329,-171,-154,-64,-306,-303,-310,-300,-303,-66,-313,-316,-317,-68,-320,-323,-324,-74,-71,-80,-77,-86,-83,-65,-308,-302,-67,-315,-69,-322,-75,-73,-81,-79,-87,-85,-275,554,559,-160,-162,-166,-174,-220,-276,-223,-91,-176,-224,-175,-177,-178,-269,-270,-168,-179,-180,-167,-279,-280,-281,-282,-295,-296,-297,-298,-291,-292,-293,-294,-287,-288,-289,-290,-283,-284,-285,-286,-161,-163,]),'CASE':([22,23,24,25,26,27,28,29,30,35,36,38,65,67,69,70,71,72,73,74,75,76,77,78,79,80,94,115,124,125,126,127,128,129,130,132,159,161,162,163,164,165,166,167,168,169,170,171,172,175,176,177,178,179,180,181,182,183,184,185,186,196,197,198,199,200,201,202,203,204,205,206,209,250,353,354,360,361,365,366,385,386,389,390,391,392,393,406,407,408,409,410,411,412,413,414,416,417,418,419,420,421,423,424,426,427,428,429,431,432,433,434,436,437,438,439,440,441,452,453,454,455,456,457,458,459,460,461,462,463,464,474,477,478,480,481,482,483,484,486,487,488,489,490,491,506,534,535,595,596,598,716,718,741,769,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,794,795,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-164,-165,-145,131,-147,-101,-102,-103,-104,-105,-111,-112,-113,-114,-108,-109,-110,-144,-149,254,257,260,263,266,269,272,-146,-140,-141,-49,-51,-53,-172,-305,-299,-312,-319,-70,-76,-82,-150,-151,-303,-311,-304,-316,-318,-323,-325,-152,-153,-277,-50,-52,-54,-173,-307,-301,-314,-321,-72,-78,-84,-278,-148,-261,-259,-258,-260,-262,-263,-106,-107,-103,-88,-89,-90,-104,-155,-156,-157,-158,-159,-327,-326,-328,-329,-171,-154,-64,-306,-303,-310,-300,-303,-66,-313,-316,-317,-68,-320,-323,-324,-74,-71,-80,-77,-86,-83,-65,-308,-302,-67,-315,-69,-322,-75,-73,-81,-79,-87,-85,-275,-189,-218,-44,-45,-46,-47,-48,-193,-197,-201,-205,-209,-213,-160,-162,-166,-276,-219,-91,-269,-270,-168,-167,-279,-280,-281,-282,-295,-296,-297,-298,-291,-292,-293,-294,-287,-288,-289,-290,-283,-284,-285,-286,-161,-163,]),'PUNTO':([34,38,42,67,69,94,107,115,132,135,162,170,175,184,185,196,204,250,277,351,387,389,422,425,430,435,555,599,607,],[62,-145,82,-147,62,-144,62,-149,-146,283,317,318,321,-152,-153,317,318,-148,62,62,492,317,507,508,509,510,317,317,317,]),'LLAVE_I':([37,39,51,85,88,89,151,156,219,247,301,302,314,378,379,380,381,382,383,384,388,404,470,476,539,593,594,638,639,],[63,65,87,87,152,-119,299,-120,346,374,397,398,-121,479,479,479,479,479,479,479,493,-122,542,479,589,641,642,679,680,]),'PAR_D':([40,56,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,90,91,92,93,99,100,101,102,103,111,114,157,236,237,238,280,281,282,284,298,305,306,307,308,309,310,311,316,320,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,372,375,385,386,394,399,400,405,415,450,451,468,474,494,501,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,543,544,546,551,552,560,561,562,563,590,591,595,610,684,685,686,687,709,742,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,792,793,],[67,94,115,132,-169,-101,-102,-103,-104,-105,-111,-112,-113,-114,-108,-109,-110,156,159,-143,161,219,-228,-229,-230,-231,247,250,314,-232,-233,-234,-170,385,386,388,67,-92,-93,-94,-95,-96,-97,-98,-142,416,-227,-253,-245,-247,-249,-251,-261,-259,-242,-248,-238,-241,-246,-258,-260,-239,-240,-262,-263,-243,-250,-244,-252,470,474,-106,-107,495,500,-136,-117,506,534,535,539,-275,67,-137,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,593,594,595,385,386,-138,-99,-100,-118,638,639,-276,-139,716,-271,718,-273,741,769,-272,-274,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,794,795,]),'CHAR':([40,54,55,59,61,64,95,97,104,131,133,136,160,174,220,221,222,223,224,226,227,228,229,244,269,297,298,319,327,335,336,342,494,498,505,553,554,676,710,],[70,70,70,108,108,70,171,205,108,278,70,108,70,70,108,-235,-236,-237,352,-254,-255,-256,-257,369,278,70,70,70,439,70,70,462,70,70,70,70,70,70,70,]),'TRUE':([40,54,55,59,61,64,95,97,104,131,133,136,160,174,220,221,222,223,224,226,227,228,229,235,272,297,298,319,328,335,336,343,494,498,505,553,554,676,710,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-235,-236,-237,78,-254,-255,-256,-257,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'FLASE':([40,54,55,59,61,64,95,97,104,131,133,136,160,174,220,221,222,223,224,226,227,228,229,235,272,297,298,319,328,335,336,343,494,498,505,553,554,676,710,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-235,-236,-237,79,-254,-255,-256,-257,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'IGUAL':([57,58,88,89,149,153,154,156,187,188,189,190,191,192,193,210,211,212,213,214,215,216,303,305,306,307,308,309,310,311,314,404,405,485,495,500,511,512,513,536,537,561,562,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,],[95,97,151,-119,297,301,302,-120,322,323,324,325,326,327,328,337,338,339,340,341,342,343,-134,-92,-93,-94,-95,-96,-97,-98,-121,-122,505,297,553,-135,564,565,566,587,588,-99,-100,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,]),'DOBLE_PUNTO':([57,58,88,89,156,158,314,404,],[96,98,155,-119,-120,315,-121,-122,]),'NOT':([59,61,74,75,76,77,78,79,80,100,101,102,103,136,220,221,222,223,236,237,238,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,474,595,],[104,104,-111,-112,-113,-114,-108,-109,-110,223,-229,-230,-231,104,104,-235,-236,-237,-232,-233,-234,-253,-245,-247,-249,-251,-261,-259,-242,-248,-238,-241,-246,-258,-260,-239,-240,-262,-263,-243,-250,-244,-252,-275,-276,]),'STARTSWITH':([62,318,],[112,112,]),'COMA':([68,69,70,71,72,73,74,75,76,77,78,79,80,305,306,307,308,309,310,311,330,331,332,333,334,375,385,386,394,400,474,551,552,560,561,562,595,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,746,747,],[133,-101,-102,-103,-104,-105,-111,-112,-113,-114,-108,-109,-110,-92,-93,-94,-95,-96,-97,-98,445,446,447,448,449,475,-106,-107,-111,502,-275,-103,-111,502,-99,-100,-276,717,-271,719,-273,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,-272,-274,]),'MAS':([69,70,71,72,73,74,75,76,77,78,79,80,92,101,105,106,147,149,150,162,163,177,180,182,196,197,236,353,354,357,358,359,360,361,362,363,364,365,366,385,386,389,392,393,474,555,558,595,599,602,],[-101,-102,-103,-104,-105,-111,-112,-113,-114,-108,-109,-110,160,231,231,231,231,231,231,231,231,-111,-113,-114,231,231,231,-261,-259,231,231,231,-258,-260,231,231,231,-262,-263,-106,-107,231,231,231,-275,231,231,-276,231,231,]),'IGUAL_COMPARACION':([74,75,76,77,78,79,80,101,102,105,106,107,108,236,237,353,354,360,361,365,366,474,595,],[-111,-112,-113,-114,-108,-109,-110,226,226,226,226,226,226,226,226,-261,-259,-258,-260,-262,-263,-275,-276,]),'DIFERENTE':([74,75,76,77,78,79,80,101,102,105,106,107,108,236,237,353,354,360,361,365,366,474,595,],[-111,-112,-113,-114,-108,-109,-110,227,227,227,227,227,227,227,227,-261,-259,-258,-260,-262,-263,-275,-276,]),'MAYOR':([74,75,76,77,78,79,80,101,102,105,106,107,108,236,237,353,354,360,361,365,366,474,595,],[-111,-112,-113,-114,-108,-109,-110,228,228,228,228,228,228,228,228,-261,-259,-258,-260,-262,-263,-275,-276,]),'MENOR':([74,75,76,77,78,79,80,101,102,105,106,107,108,236,237,353,354,360,361,365,366,474,595,],[-111,-112,-113,-114,-108,-109,-110,229,229,229,229,229,229,229,229,-261,-259,-258,-260,-262,-263,-275,-276,]),'MENOS':([74,75,76,77,101,105,106,147,149,150,162,163,177,180,182,196,197,236,353,354,357,358,359,360,361,362,363,364,365,366,389,392,393,555,558,599,602,],[-111,-112,-113,-114,230,230,230,230,230,230,230,230,-111,-113,-114,230,230,230,-261,-259,230,230,230,-258,-260,230,230,230,-262,-263,230,230,230,230,230,230,230,]),'MULTIPLICACION':([74,75,76,77,101,105,106,147,149,150,162,163,177,180,182,196,197,236,353,354,357,358,359,360,361,362,363,364,365,366,389,392,393,555,558,599,602,],[-111,-112,-113,-114,232,232,232,232,232,232,232,232,-111,-113,-114,232,232,232,-261,-259,232,232,232,-258,-260,232,232,232,-262,-263,232,232,232,232,232,232,232,]),'DIVISION':([74,75,76,77,101,105,106,147,149,150,162,163,177,180,182,196,197,236,353,354,357,358,359,360,361,362,363,364,365,366,389,392,393,555,558,599,602,],[-111,-112,-113,-114,233,233,233,233,233,233,233,233,-111,-113,-114,233,233,233,-261,-259,233,233,233,-258,-260,233,233,233,-262,-263,233,233,233,233,233,233,233,]),'MOD':([74,75,76,77,101,105,106,147,149,150,162,163,177,180,182,196,197,236,353,354,357,358,359,360,361,362,363,364,365,366,389,392,393,555,558,599,602,],[-111,-112,-113,-114,234,234,234,234,234,234,234,234,-111,-113,-114,234,234,234,-261,-259,234,234,234,-258,-260,234,234,234,-262,-263,234,234,234,234,234,234,234,]),'AND':([74,75,76,77,78,79,80,100,101,102,103,236,237,238,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,474,595,],[-111,-112,-113,-114,-108,-109,-110,221,-229,-230,-231,-232,-233,-234,-253,-245,-247,-249,-251,-261,-259,-242,-248,-238,-241,-246,-258,-260,-239,-240,-262,-263,-243,-250,-244,-252,-275,-276,]),'OR':([74,75,76,77,78,79,80,100,101,102,103,236,237,238,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,474,595,],[-111,-112,-113,-114,-108,-109,-110,222,-229,-230,-231,-232,-233,-234,-253,-245,-247,-249,-251,-261,-259,-242,-248,-238,-241,-246,-258,-260,-239,-240,-262,-263,-243,-250,-244,-252,-275,-276,]),'FUNCION_FLECHA':([78,79,80,273,274,275,276,277,278,279,376,377,474,595,],[-108,-109,-110,378,379,380,381,382,383,384,476,382,-275,-276,]),'ARRAYCLASS':([95,96,97,98,155,304,315,329,344,345,401,402,502,565,566,611,634,683,708,],[173,194,207,217,312,312,312,312,312,312,312,312,312,612,613,652,675,312,312,]),'LONGCLASS':([96,98,155,195,304,315,329,344,345,401,402,445,446,448,449,502,683,708,],[187,210,309,332,309,309,309,309,309,309,309,515,519,527,531,309,309,309,]),'INTCLASS':([96,98,155,195,304,315,329,344,345,401,402,445,447,448,449,502,683,708,],[188,211,308,331,308,308,443,308,308,308,308,514,523,529,533,308,308,308,]),'FLOATCLASS':([96,98,155,195,304,315,329,344,345,401,402,445,446,447,448,502,683,708,],[189,212,311,334,311,311,311,311,311,311,311,517,521,525,528,311,311,311,]),'DOUBLECLASS':([96,98,155,195,304,315,329,344,345,401,402,445,446,447,449,502,683,708,],[190,213,310,333,310,310,444,310,310,310,310,516,520,524,532,310,310,310,]),'STRINGCLASS':([96,98,155,195,304,315,329,344,345,401,402,446,447,448,449,502,683,708,],[191,214,306,330,306,306,306,306,306,306,306,518,522,526,530,306,306,306,]),'CHARCLASS':([96,98,155,304,315,329,344,345,401,402,502,683,708,],[192,215,305,305,305,305,305,305,305,305,305,305,305,]),'BOOLCLASS':([96,98,155,304,315,329,344,345,401,402,502,683,708,],[193,216,307,307,307,307,307,307,307,307,307,307,307,]),'LISTCLASS':([97,98,155,304,315,329,344,345,401,402,502,588,636,683,708,],[208,218,313,313,313,313,313,313,313,313,313,635,677,313,313,]),'ITERATOR':([110,245,],[246,371,]),'CORCHETE_I':([194,217,218,312,313,652,675,],[329,344,345,401,402,683,708,]),'SUBGUION':([254,257,260,263,266,269,272,],[376,376,376,376,376,376,376,]),'CORCHETE_D':([305,306,307,308,309,310,311,442,443,444,465,466,503,504,561,562,715,740,],[-92,-93,-94,-95,-96,-97,-98,511,512,513,536,537,561,562,-99,-100,745,768,]),'TO_INT':([317,318,321,507,508,509,510,],[407,412,407,412,412,412,412,]),'TO_DOUBLE':([317,318,321,510,],[408,414,408,414,]),'TO_FLOAT':([317,318,321,509,510,],[409,413,409,413,413,]),'TO_LONG':([317,318,321,507,509,510,],[410,411,410,411,411,411,]),'TO':([373,469,],[471,540,]),'UNTIL':([373,469,],[472,541,]),'NEW':([564,587,588,],[611,634,636,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,41,],[1,81,]),'cuerpo':([0,6,10,11,12,13,14,15,41,63,],[4,43,44,45,46,47,48,52,4,113,]),'funcion':([0,6,10,11,12,13,14,15,41,63,],[6,6,6,6,6,6,6,6,6,6,]),'funcall':([0,6,10,11,12,13,14,15,41,63,87,95,97,138,139,140,141,142,143,144,145,146,147,148,152,297,299,346,374,378,379,380,381,382,383,384,397,398,476,479,493,498,542,554,559,589,641,642,679,680,],[7,7,7,7,7,7,7,7,7,7,140,185,185,140,140,140,140,140,140,140,140,140,140,140,140,185,140,140,140,482,482,482,482,482,482,482,140,140,482,140,140,185,140,185,185,140,140,140,140,140,]),'impresion':([0,6,10,11,12,13,14,15,41,63,87,138,139,140,141,142,143,144,145,146,147,148,152,299,346,374,378,379,380,381,382,383,384,397,398,476,479,493,542,589,641,642,679,680,],[8,8,8,8,8,8,8,8,8,8,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,483,483,483,483,483,483,483,141,141,483,141,141,141,141,141,141,141,141,]),'entrada':([0,6,10,11,12,13,14,15,41,63,87,95,97,138,139,140,141,142,143,144,145,146,147,148,152,297,299,346,374,378,379,380,381,382,383,384,397,398,476,479,493,498,542,554,559,589,641,642,679,680,],[9,9,9,9,9,9,9,9,9,9,142,184,184,142,142,142,142,142,142,142,142,142,142,142,142,184,142,142,142,484,484,484,484,484,484,484,142,142,484,142,142,184,142,184,184,142,142,142,142,142,]),'asignacion':([0,6,10,11,12,13,14,15,41,63,87,138,139,140,141,142,143,144,145,146,147,148,152,299,346,374,378,379,380,381,382,383,384,397,398,476,479,493,542,589,641,642,679,680,],[10,10,10,10,10,10,10,10,10,10,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,480,480,480,480,480,480,480,138,138,480,138,138,138,138,138,138,138,138,]),'while':([0,6,10,11,12,13,14,15,41,63,87,138,139,140,141,142,143,144,145,146,147,148,152,299,346,374,397,398,479,493,542,589,641,642,679,680,],[11,11,11,11,11,11,11,11,11,11,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'for':([0,6,10,11,12,13,14,15,41,63,87,138,139,140,141,142,143,144,145,146,147,148,152,299,346,374,397,398,479,493,542,589,641,642,679,680,],[12,12,12,12,12,12,12,12,12,12,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'match':([0,6,10,11,12,13,14,15,41,63,87,138,139,140,141,142,143,144,145,146,147,148,152,299,346,374,397,398,479,493,542,589,641,642,679,680,],[13,13,13,13,13,13,13,13,13,13,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'if':([0,6,10,11,12,13,14,15,41,63,87,138,139,140,141,142,143,144,145,146,147,148,152,299,346,374,397,398,479,493,542,589,641,642,679,680,],[14,14,14,14,14,14,14,14,14,14,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'startsWith':([0,6,10,11,12,13,14,15,40,41,54,55,59,61,63,64,87,95,97,104,131,133,136,138,139,140,141,142,143,144,145,146,147,148,152,160,174,220,224,235,272,297,298,299,319,328,335,336,343,346,374,397,398,479,493,494,498,505,542,553,554,589,641,642,676,679,680,710,],[15,15,15,15,15,15,15,15,80,15,80,80,80,80,15,80,148,80,80,80,80,80,80,148,148,148,148,148,148,148,148,148,148,148,148,80,80,80,80,80,80,80,80,148,80,80,80,80,80,148,148,148,148,148,148,80,80,80,148,80,80,148,148,148,80,148,148,80,]),'asignacionLong':([0,6,10,11,12,13,14,15,41,63,87,138,139,140,141,142,143,144,145,146,147,148,152,299,346,374,378,379,380,381,382,383,384,397,398,476,479,493,542,589,641,642,679,680,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'asignacionInt':([0,6,10,11,12,13,14,15,41,63,87,138,139,140,141,142,143,144,145,146,147,148,152,299,346,374,378,379,380,381,382,383,384,397,398,476,479,493,542,589,641,642,679,680,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'asignacionFloat':([0,6,10,11,12,13,14,15,41,63,87,138,139,140,141,142,143,144,145,146,147,148,152,299,346,374,378,379,380,381,382,383,384,397,398,476,479,493,542,589,641,642,679,680,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'asignacionDouble':([0,6,10,11,12,13,14,15,41,63,87,138,139,140,141,142,143,144,145,146,147,148,152,299,346,374,378,379,380,381,382,383,384,397,398,476,479,493,542,589,641,642,679,680,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'asignacionString':([0,6,10,11,12,13,14,15,41,63,87,138,139,140,141,142,143,144,145,146,147,148,152,299,346,374,378,379,380,381,382,383,384,397,398,476,479,493,542,589,641,642,679,680,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'asignacionChar':([0,6,10,11,12,13,14,15,41,63,87,138,139,140,141,142,143,144,145,146,147,148,152,299,346,374,378,379,380,381,382,383,384,397,398,476,479,493,542,589,641,642,679,680,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'asignacionBoolean':([0,6,10,11,12,13,14,15,41,63,87,138,139,140,141,142,143,144,145,146,147,148,152,299,346,374,378,379,380,381,382,383,384,397,398,476,479,493,542,589,641,642,679,680,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'array':([0,6,10,11,12,13,14,15,41,63,87,138,139,140,141,142,143,144,145,146,147,148,152,299,346,374,378,379,380,381,382,383,384,397,398,476,479,493,542,589,641,642,679,680,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'list':([0,6,10,11,12,13,14,15,41,63,87,138,139,140,141,142,143,144,145,146,147,148,152,299,346,374,378,379,380,381,382,383,384,397,398,476,479,493,542,589,641,642,679,680,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'arrayInt':([0,6,10,11,12,13,14,15,41,63,87,138,139,140,141,142,143,144,145,146,147,148,152,299,346,374,378,379,380,381,382,383,384,397,398,476,479,493,542,589,641,642,679,680,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'arrayDouble':([0,6,10,11,12,13,14,15,41,63,87,138,139,140,141,142,143,144,145,146,147,148,152,299,346,374,378,379,380,381,382,383,384,397,398,476,479,493,542,589,641,642,679,680,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'varparen':([3,149,162,196,389,485,555,599,607,],[38,38,38,38,38,38,38,38,38,]),'io':([5,],[41,]),'elseif':([14,49,83,146,597,],[49,83,83,49,644,]),'else':([14,49,83,146,],[50,84,84,50,]),'valores':([40,64,133,174,298,319,335,336,494,676,710,],[66,114,280,320,66,415,450,451,66,709,742,]),'valor':([40,54,55,64,133,160,174,297,298,319,335,336,494,498,505,553,554,676,710,],[68,92,92,68,68,92,68,390,68,68,68,68,68,556,563,598,600,68,68,]),'numeros':([40,54,55,59,61,64,87,95,97,104,133,136,138,139,140,141,142,143,144,145,146,147,148,152,160,174,220,224,225,239,240,241,242,297,298,299,319,335,336,346,374,397,398,479,493,494,498,505,542,553,554,589,641,642,676,679,680,710,],[72,72,72,105,105,72,150,150,150,105,72,105,150,150,150,150,150,150,150,150,150,150,150,150,72,72,105,349,354,357,360,363,365,393,72,150,72,72,72,150,150,150,150,150,150,72,393,72,150,72,393,150,150,150,72,150,150,72,]),'booleanos':([40,54,55,59,61,64,95,97,104,131,133,136,160,174,220,224,235,272,297,298,319,328,335,336,343,494,498,505,553,554,676,710,],[73,73,73,102,102,73,172,206,237,279,73,102,73,73,102,350,355,279,73,73,73,441,73,73,464,73,73,73,73,73,73,73,]),'parametro':([53,],[88,]),'parametros':([53,314,],[89,404,]),'valorI':([54,55,160,],[91,93,316,]),'condicional':([59,61,136,220,],[99,111,284,347,]),'valorC':([59,61,136,220,],[100,100,100,100,]),'relacional':([59,61,104,136,220,],[103,103,238,103,103,]),'aritmetica':([59,61,87,95,97,104,136,138,139,140,141,142,143,144,145,146,147,148,152,220,239,241,297,299,346,374,397,398,479,493,498,542,554,589,641,642,679,680,],[106,106,147,163,197,106,106,147,147,147,147,147,147,147,147,147,147,147,147,106,358,362,392,147,147,147,147,147,147,147,558,147,602,147,147,147,147,147,]),'cases':([65,],[116,]),'casesInt':([65,124,],[117,252,]),'casesLgn':([65,125,],[118,255,]),'casesFlt':([65,126,],[119,258,]),'casesDob':([65,127,],[120,261,]),'casesStr':([65,128,],[121,264,]),'casesChar':([65,129,],[122,267,]),'casesBool':([65,130,],[123,270,]),'caseInt':([65,124,],[124,124,]),'caseLgn':([65,125,],[125,125,]),'caseFlt':([65,126,],[126,126,]),'caseDob':([65,127,],[127,127,]),'caseStr':([65,128,],[128,128,]),'caseChar':([65,129,],[129,129,]),'caseBool':([65,130,],[130,130,]),'contenido':([87,138,139,140,141,142,143,144,145,146,147,148,152,299,346,374,397,398,479,493,542,589,641,642,679,680,],[137,286,287,288,289,290,291,292,293,294,295,296,300,395,467,473,497,499,548,550,592,637,681,682,711,712,]),'reasignacion':([87,138,139,140,141,142,143,144,145,146,147,148,152,299,346,374,378,379,380,381,382,383,384,397,398,476,479,493,542,589,641,642,679,680,],[139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,481,481,481,481,481,481,481,139,139,481,139,139,139,139,139,139,139,139,]),'dectipo':([88,],[153,]),'dectipoTupla':([88,],[154,]),'declaracion':([90,403,],[157,157,]),'returnfun':([95,97,297,498,554,559,],[164,198,391,557,601,609,]),'tuple':([95,97,559,],[165,199,608,]),'longvalues':([95,97,322,324,325,337,339,340,],[166,200,419,429,429,453,429,429,]),'intvalues':([95,97,322,323,324,325,337,338,339,340,],[167,201,421,423,421,421,421,454,421,421,]),'floatvalues':([95,97,324,325,339,340,],[168,202,427,434,456,434,]),'doublevalues':([95,97,325,340,],[169,203,432,458,]),'returnCastable':([95,97,297,498,554,559,],[175,175,175,175,175,175,]),'castingcall':([95,97,297,498,554,559,],[176,176,176,176,176,176,]),'stringCastLong':([95,97,322,324,325,337,339,340,],[178,178,178,178,178,178,178,178,]),'stringCastInt':([95,97,322,323,324,325,337,338,339,340,],[179,179,179,179,179,179,179,179,179,179,]),'stringCastFloat':([95,97,324,325,339,340,],[181,181,181,181,181,181,]),'stringCastDouble':([95,97,325,340,],[183,183,183,183,]),'dectupla':([96,98,],[186,209,]),'logicos':([100,],[220,]),'comparacion':([101,102,105,106,107,108,236,237,],[224,235,239,241,243,244,224,235,]),'aritmeticos':([101,105,106,147,149,150,162,163,196,197,236,357,358,359,362,363,364,389,392,393,555,558,599,602,],[225,240,242,242,225,240,225,242,225,242,225,240,242,225,242,240,225,225,242,240,225,242,225,242,]),'defcase':([124,125,126,127,128,129,130,],[253,256,259,262,265,268,271,]),'tipo':([155,304,315,329,344,345,401,402,502,683,708,],[303,400,405,442,465,466,503,504,560,715,740,]),'tipos':([304,],[399,]),'castingfun':([317,321,],[406,417,]),'codeBlock':([378,379,380,381,382,383,384,476,],[477,486,487,488,489,490,491,547,]),'contenidoLine':([378,379,380,381,382,383,384,476,],[478,478,478,478,478,478,478,478,]),'tiposentry':([400,560,],[501,610,]),'valoresInt':([653,],[684,]),'valoresDouble':([654,],[686,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D','inicio',5,'p_inicio','sintax.py',13),
  ('inicio -> IMPORT io inicio','inicio',3,'p_inicio','sintax.py',14),
  ('inicio -> cuerpo','inicio',1,'p_inicio','sintax.py',15),
  ('io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE','io',7,'p_io','sintax.py',20),
  ('cuerpo -> funcion','cuerpo',1,'p_cuerpo','sintax.py',23),
  ('cuerpo -> funcall','cuerpo',1,'p_cuerpo','sintax.py',24),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintax.py',25),
  ('cuerpo -> entrada','cuerpo',1,'p_cuerpo','sintax.py',26),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintax.py',27),
  ('cuerpo -> while','cuerpo',1,'p_cuerpo','sintax.py',28),
  ('cuerpo -> for','cuerpo',1,'p_cuerpo','sintax.py',29),
  ('cuerpo -> match','cuerpo',1,'p_cuerpo','sintax.py',30),
  ('cuerpo -> if','cuerpo',1,'p_cuerpo','sintax.py',31),
  ('cuerpo -> startsWith','cuerpo',1,'p_cuerpo','sintax.py',32),
  ('cuerpo -> funcion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',33),
  ('cuerpo -> asignacion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',34),
  ('cuerpo -> while cuerpo','cuerpo',2,'p_cuerpo','sintax.py',35),
  ('cuerpo -> for cuerpo','cuerpo',2,'p_cuerpo','sintax.py',36),
  ('cuerpo -> if cuerpo','cuerpo',2,'p_cuerpo','sintax.py',37),
  ('cuerpo -> match cuerpo','cuerpo',2,'p_cuerpo','sintax.py',38),
  ('cuerpo -> startsWith cuerpo','cuerpo',2,'p_cuerpo','sintax.py',39),
  ('contenido -> asignacion','contenido',1,'p_contenido','sintax.py',43),
  ('contenido -> reasignacion','contenido',1,'p_contenido','sintax.py',44),
  ('contenido -> funcall','contenido',1,'p_contenido','sintax.py',45),
  ('contenido -> impresion','contenido',1,'p_contenido','sintax.py',46),
  ('contenido -> entrada','contenido',1,'p_contenido','sintax.py',47),
  ('contenido -> while','contenido',1,'p_contenido','sintax.py',48),
  ('contenido -> for','contenido',1,'p_contenido','sintax.py',49),
  ('contenido -> match','contenido',1,'p_contenido','sintax.py',50),
  ('contenido -> if','contenido',1,'p_contenido','sintax.py',51),
  ('contenido -> aritmetica','contenido',1,'p_contenido','sintax.py',52),
  ('contenido -> startsWith','contenido',1,'p_contenido','sintax.py',53),
  ('contenido -> asignacion contenido','contenido',2,'p_contenido','sintax.py',54),
  ('contenido -> reasignacion contenido','contenido',2,'p_contenido','sintax.py',55),
  ('contenido -> funcall contenido','contenido',2,'p_contenido','sintax.py',56),
  ('contenido -> impresion contenido','contenido',2,'p_contenido','sintax.py',57),
  ('contenido -> entrada contenido','contenido',2,'p_contenido','sintax.py',58),
  ('contenido -> while contenido','contenido',2,'p_contenido','sintax.py',59),
  ('contenido -> for contenido','contenido',2,'p_contenido','sintax.py',60),
  ('contenido -> if contenido','contenido',2,'p_contenido','sintax.py',61),
  ('contenido -> match contenido','contenido',2,'p_contenido','sintax.py',62),
  ('contenido -> aritmetica contenido','contenido',2,'p_contenido','sintax.py',63),
  ('contenido -> startsWith contenido','contenido',2,'p_contenido','sintax.py',64),
  ('contenidoLine -> asignacion','contenidoLine',1,'p_contenidoLine','sintax.py',68),
  ('contenidoLine -> reasignacion','contenidoLine',1,'p_contenidoLine','sintax.py',69),
  ('contenidoLine -> funcall','contenidoLine',1,'p_contenidoLine','sintax.py',70),
  ('contenidoLine -> impresion','contenidoLine',1,'p_contenidoLine','sintax.py',71),
  ('contenidoLine -> entrada','contenidoLine',1,'p_contenidoLine','sintax.py',72),
  ('asignacion -> VAR VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',76),
  ('asignacion -> VAL VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',77),
  ('asignacion -> VAR VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',78),
  ('asignacion -> VAL VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',79),
  ('asignacion -> VAR VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',80),
  ('asignacion -> VAL VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',81),
  ('asignacion -> asignacionLong','asignacion',1,'p_asignacion','sintax.py',82),
  ('asignacion -> asignacionInt','asignacion',1,'p_asignacion','sintax.py',83),
  ('asignacion -> asignacionFloat','asignacion',1,'p_asignacion','sintax.py',84),
  ('asignacion -> asignacionDouble','asignacion',1,'p_asignacion','sintax.py',85),
  ('asignacion -> asignacionString','asignacion',1,'p_asignacion','sintax.py',86),
  ('asignacion -> asignacionChar','asignacion',1,'p_asignacion','sintax.py',87),
  ('asignacion -> asignacionBoolean','asignacion',1,'p_asignacion','sintax.py',88),
  ('asignacion -> array','asignacion',1,'p_asignacion','sintax.py',89),
  ('asignacion -> list','asignacion',1,'p_asignacion','sintax.py',90),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',93),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',94),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',101),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',102),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',105),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',106),
  ('asignacionString -> VAR VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',109),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',110),
  ('asignacionString -> VAL VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',111),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',112),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',113),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',114),
  ('asignacionChar -> VAR VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',117),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',118),
  ('asignacionChar -> VAL VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',119),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',120),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',121),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',122),
  ('asignacionBoolean -> VAR VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',125),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',126),
  ('asignacionBoolean -> VAL VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',127),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',128),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',129),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',130),
  ('reasignacion -> VARIABLE IGUAL valor','reasignacion',3,'p_reasignacion','sintax.py',134),
  ('reasignacion -> VARIABLE IGUAL returnfun','reasignacion',3,'p_reasignacion','sintax.py',135),
  ('reasignacion -> VARIABLE IGUAL aritmetica','reasignacion',3,'p_reasignacion','sintax.py',136),
  ('reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor','reasignacion',6,'p_reasignacion','sintax.py',137),
  ('tipo -> CHARCLASS','tipo',1,'p_tipo','sintax.py',140),
  ('tipo -> STRINGCLASS','tipo',1,'p_tipo','sintax.py',141),
  ('tipo -> BOOLCLASS','tipo',1,'p_tipo','sintax.py',142),
  ('tipo -> INTCLASS','tipo',1,'p_tipo','sintax.py',143),
  ('tipo -> LONGCLASS','tipo',1,'p_tipo','sintax.py',144),
  ('tipo -> DOUBLECLASS','tipo',1,'p_tipo','sintax.py',145),
  ('tipo -> FLOATCLASS','tipo',1,'p_tipo','sintax.py',146),
  ('tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',147),
  ('tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',148),
  ('valor -> STRING','valor',1,'p_valor','sintax.py',151),
  ('valor -> CHAR','valor',1,'p_valor','sintax.py',152),
  ('valor -> VARIABLE','valor',1,'p_valor','sintax.py',153),
  ('valor -> numeros','valor',1,'p_valor','sintax.py',154),
  ('valor -> booleanos','valor',1,'p_valor','sintax.py',155),
  ('valor -> VARIABLE PAR_I VARIABLE PAR_D','valor',4,'p_valor','sintax.py',156),
  ('valor -> VARIABLE PAR_I INT PAR_D','valor',4,'p_valor','sintax.py',157),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintax.py',160),
  ('booleanos -> FLASE','booleanos',1,'p_booleanos','sintax.py',161),
  ('booleanos -> startsWith','booleanos',1,'p_booleanos','sintax.py',162),
  ('numeros -> INT','numeros',1,'p_numeros','sintax.py',165),
  ('numeros -> LONG','numeros',1,'p_numeros','sintax.py',166),
  ('numeros -> FLOAT','numeros',1,'p_numeros','sintax.py',167),
  ('numeros -> DOUBLE','numeros',1,'p_numeros','sintax.py',168),
  ('funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D','funcion',7,'p_funcion','sintax.py',173),
  ('funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D','funcion',6,'p_funcion','sintax.py',174),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo','declaracion',3,'p_declaracion','sintax.py',179),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor','declaracion',5,'p_declaracion_defecto','sintax.py',182),
  ('parametro -> parametros','parametro',1,'p_parametro','sintax.py',185),
  ('parametro -> PAR_I PAR_D','parametro',2,'p_parametro','sintax.py',186),
  ('parametros -> PAR_I declaracion PAR_D','parametros',3,'p_parametros','sintax.py',189),
  ('parametros -> PAR_I declaracion PAR_D parametros','parametros',4,'p_parametros','sintax.py',190),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D','funcion',10,'p_funcion_return','sintax.py',195),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_return','sintax.py',196),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_return','sintax.py',197),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D','funcion',10,'p_funcion_return','sintax.py',198),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',201),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',202),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',203),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',204),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',207),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',208),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',209),
  ('dectipo -> DOBLE_PUNTO tipo','dectipo',2,'p_dectipo','sintax.py',212),
  ('dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D','dectipoTupla',4,'p_dectipoTupla','sintax.py',215),
  ('tipos -> tipo','tipos',1,'p_tipos','sintax.py',218),
  ('tipos -> tipo tiposentry','tipos',2,'p_tipos','sintax.py',219),
  ('tiposentry -> COMA tipo','tiposentry',2,'p_tipoentry','sintax.py',222),
  ('tiposentry -> COMA tipo tiposentry','tiposentry',3,'p_tipoentry','sintax.py',223),
  ('impresion -> PRINTLN PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',228),
  ('impresion -> PRINT PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',229),
  ('valorI -> valor MAS valorI','valorI',3,'p_valorI','sintax.py',232),
  ('valorI -> valor','valorI',1,'p_valorI','sintax.py',233),
  ('entrada -> READLINE PAR_I PAR_D','entrada',3,'p_entrada','sintax.py',238),
  ('funcall -> VARIABLE varparen','funcall',2,'p_funcall','sintax.py',242),
  ('varparen -> PAR_I valores PAR_D','varparen',3,'p_varparen','sintax.py',245),
  ('varparen -> PAR_I PAR_D','varparen',2,'p_varparen','sintax.py',246),
  ('varparen -> varparen PAR_I valores PAR_D','varparen',4,'p_varparen','sintax.py',247),
  ('varparen -> varparen PAR_I PAR_D','varparen',3,'p_varparen','sintax.py',248),
  ('returnfun -> returnCastable','returnfun',1,'p_returnfun','sintax.py',251),
  ('returnfun -> castingcall','returnfun',1,'p_returnfun','sintax.py',252),
  ('returnCastable -> entrada','returnCastable',1,'p_returnCastable','sintax.py',255),
  ('returnCastable -> funcall','returnCastable',1,'p_returnCastable','sintax.py',256),
  ('castingcall -> returnCastable PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',261),
  ('castingcall -> VARIABLE PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',262),
  ('castingfun -> TO_INT','castingfun',1,'p_castingfun','sintax.py',266),
  ('castingfun -> TO_DOUBLE','castingfun',1,'p_castingfun','sintax.py',267),
  ('castingfun -> TO_FLOAT','castingfun',1,'p_castingfun','sintax.py',268),
  ('castingfun -> TO_LONG','castingfun',1,'p_castingfun','sintax.py',269),
  ('array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',274),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',275),
  ('array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',276),
  ('array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',277),
  ('array -> arrayInt','array',1,'p_array','sintax.py',278),
  ('array -> arrayDouble','array',1,'p_array','sintax.py',279),
  ('list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D','list',7,'p_list','sintax.py',283),
  ('list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D','list',13,'p_list','sintax.py',284),
  ('list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D','list',12,'p_list','sintax.py',285),
  ('valores -> valor','valores',1,'p_valores','sintax.py',289),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintax.py',290),
  ('tuple -> PAR_I valores PAR_D','tuple',3,'p_tuple','sintax.py',294),
  ('asignacion -> VAR VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',297),
  ('asignacion -> VAL VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',298),
  ('while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','while',7,'p_while','sintax.py',306),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',10,'p_for','sintax.py',310),
  ('for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',9,'p_for','sintax.py',311),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',312),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',313),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',314),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',315),
  ('match -> VARIABLE MATCH LLAVE_I cases LLAVE_D','match',5,'p_match','sintax.py',319),
  ('cases -> casesInt','cases',1,'p_cases','sintax.py',322),
  ('cases -> casesLgn','cases',1,'p_cases','sintax.py',323),
  ('cases -> casesFlt','cases',1,'p_cases','sintax.py',324),
  ('cases -> casesDob','cases',1,'p_cases','sintax.py',325),
  ('cases -> casesStr','cases',1,'p_cases','sintax.py',326),
  ('cases -> casesChar','cases',1,'p_cases','sintax.py',327),
  ('cases -> casesBool','cases',1,'p_cases','sintax.py',328),
  ('caseInt -> CASE INT FUNCION_FLECHA codeBlock','caseInt',4,'p_caseInt','sintax.py',331),
  ('casesInt -> caseInt','casesInt',1,'p_casesInt','sintax.py',334),
  ('casesInt -> caseInt casesInt','casesInt',2,'p_casesInt','sintax.py',335),
  ('casesInt -> caseInt defcase','casesInt',2,'p_casesInt','sintax.py',336),
  ('caseLgn -> CASE LONG FUNCION_FLECHA codeBlock','caseLgn',4,'p_caseLgn','sintax.py',339),
  ('casesLgn -> caseLgn','casesLgn',1,'p_casesLgn','sintax.py',342),
  ('casesLgn -> caseLgn casesLgn','casesLgn',2,'p_casesLgn','sintax.py',343),
  ('casesLgn -> caseLgn defcase','casesLgn',2,'p_casesLgn','sintax.py',344),
  ('caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock','caseFlt',4,'p_caseFlt','sintax.py',347),
  ('casesFlt -> caseFlt','casesFlt',1,'p_casesFlt','sintax.py',350),
  ('casesFlt -> caseFlt casesFlt','casesFlt',2,'p_casesFlt','sintax.py',351),
  ('casesFlt -> caseFlt defcase','casesFlt',2,'p_casesFlt','sintax.py',352),
  ('caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock','caseDob',4,'p_caseDob','sintax.py',355),
  ('casesDob -> caseDob','casesDob',1,'p_casesDob','sintax.py',358),
  ('casesDob -> caseDob casesDob','casesDob',2,'p_casesDob','sintax.py',359),
  ('casesDob -> caseDob defcase','casesDob',2,'p_casesDob','sintax.py',360),
  ('caseStr -> CASE STRING FUNCION_FLECHA codeBlock','caseStr',4,'p_caseStr','sintax.py',363),
  ('casesStr -> caseStr','casesStr',1,'p_casesStr','sintax.py',366),
  ('casesStr -> caseStr casesStr','casesStr',2,'p_casesStr','sintax.py',367),
  ('casesStr -> caseStr defcase','casesStr',2,'p_casesStr','sintax.py',368),
  ('caseChar -> CASE CHAR FUNCION_FLECHA codeBlock','caseChar',4,'p_caseChar','sintax.py',371),
  ('casesChar -> caseChar','casesChar',1,'p_casesChar','sintax.py',374),
  ('casesChar -> caseChar casesChar','casesChar',2,'p_casesChar','sintax.py',375),
  ('casesChar -> caseChar defcase','casesChar',2,'p_casesChar','sintax.py',376),
  ('caseBool -> CASE booleanos FUNCION_FLECHA codeBlock','caseBool',4,'p_caseBool','sintax.py',379),
  ('casesBool -> caseBool','casesBool',1,'p_casesBool','sintax.py',382),
  ('casesBool -> caseBool casesBool','casesBool',2,'p_casesBool','sintax.py',383),
  ('casesBool -> caseBool defcase','casesBool',2,'p_casesBool','sintax.py',384),
  ('defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock','defcase',4,'p_defcase','sintax.py',388),
  ('codeBlock -> contenidoLine','codeBlock',1,'p_codeBlock','sintax.py',391),
  ('codeBlock -> LLAVE_I contenido LLAVE_D','codeBlock',3,'p_codeBlock','sintax.py',392),
  ('if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','if',7,'p_if','sintax.py',396),
  ('if -> if elseif','if',2,'p_if','sintax.py',397),
  ('if -> if else','if',2,'p_if','sintax.py',398),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','elseif',8,'p_elseif','sintax.py',402),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif','elseif',9,'p_elseif','sintax.py',403),
  ('else -> ELSE LLAVE_I contenido LLAVE_D','else',4,'p_else','sintax.py',406),
  ('else -> elseif else','else',2,'p_else','sintax.py',407),
  ('condicional -> valorC logicos condicional','condicional',3,'p_condicional','sintax.py',411),
  ('condicional -> valorC','condicional',1,'p_condicional','sintax.py',412),
  ('valorC -> VARIABLE','valorC',1,'p_valorC','sintax.py',415),
  ('valorC -> booleanos','valorC',1,'p_valorC','sintax.py',416),
  ('valorC -> relacional','valorC',1,'p_valorC','sintax.py',417),
  ('valorC -> NOT VARIABLE','valorC',2,'p_valorC','sintax.py',418),
  ('valorC -> NOT booleanos','valorC',2,'p_valorC','sintax.py',419),
  ('valorC -> NOT relacional','valorC',2,'p_valorC','sintax.py',420),
  ('logicos -> AND','logicos',1,'p_logicos','sintax.py',423),
  ('logicos -> OR','logicos',1,'p_logicos','sintax.py',424),
  ('logicos -> NOT','logicos',1,'p_logicos','sintax.py',425),
  ('relacional -> numeros comparacion numeros','relacional',3,'p_relacional','sintax.py',430),
  ('relacional -> aritmetica comparacion aritmetica','relacional',3,'p_relacional','sintax.py',431),
  ('relacional -> aritmetica comparacion numeros','relacional',3,'p_relacional','sintax.py',432),
  ('relacional -> numeros comparacion aritmetica','relacional',3,'p_relacional','sintax.py',433),
  ('relacional -> booleanos comparacion booleanos','relacional',3,'p_relacional','sintax.py',434),
  ('relacional -> STRING comparacion STRING','relacional',3,'p_relacional','sintax.py',435),
  ('relacional -> CHAR comparacion CHAR','relacional',3,'p_relacional','sintax.py',436),
  ('relacional -> VARIABLE comparacion numeros','relacional',3,'p_relacional','sintax.py',437),
  ('relacional -> numeros comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',438),
  ('relacional -> VARIABLE comparacion booleanos','relacional',3,'p_relacional','sintax.py',439),
  ('relacional -> booleanos comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',440),
  ('relacional -> VARIABLE comparacion STRING','relacional',3,'p_relacional','sintax.py',441),
  ('relacional -> STRING comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',442),
  ('relacional -> VARIABLE comparacion CHAR','relacional',3,'p_relacional','sintax.py',443),
  ('relacional -> CHAR comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',444),
  ('relacional -> VARIABLE comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',445),
  ('comparacion -> IGUAL_COMPARACION','comparacion',1,'p_comparacion','sintax.py',448),
  ('comparacion -> DIFERENTE','comparacion',1,'p_comparacion','sintax.py',449),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion','sintax.py',450),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion','sintax.py',451),
  ('aritmetica -> numeros aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',455),
  ('aritmetica -> VARIABLE aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',456),
  ('aritmetica -> numeros aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',457),
  ('aritmetica -> VARIABLE aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',458),
  ('aritmetica -> aritmetica aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',459),
  ('aritmetica -> aritmetica aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',460),
  ('aritmeticos -> MENOS','aritmeticos',1,'p_aritmeticos','sintax.py',463),
  ('aritmeticos -> MAS','aritmeticos',1,'p_aritmeticos','sintax.py',464),
  ('aritmeticos -> MULTIPLICACION','aritmeticos',1,'p_aritmeticos','sintax.py',465),
  ('aritmeticos -> DIVISION','aritmeticos',1,'p_aritmeticos','sintax.py',466),
  ('aritmeticos -> MOD','aritmeticos',1,'p_aritmeticos','sintax.py',467),
  ('arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D','arrayInt',12,'p_arrayInt','sintax.py',472),
  ('arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D','arrayDouble',12,'p_arrayDouble','sintax.py',476),
  ('valoresInt -> INT','valoresInt',1,'p_valoresInt','sintax.py',479),
  ('valoresInt -> valoresInt COMA INT','valoresInt',3,'p_valoresInt','sintax.py',480),
  ('valoresDouble -> DOUBLE','valoresDouble',1,'p_valoresDouble','sintax.py',483),
  ('valoresDouble -> valoresDouble COMA DOUBLE','valoresDouble',3,'p_valoresDouble','sintax.py',484),
  ('startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D','startsWith',6,'p_startsWith','sintax.py',488),
  ('startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D','startsWith',8,'p_startsWith','sintax.py',489),
  ('asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla','asignacion',4,'p_asignacion_tupla','sintax.py',502),
  ('asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla','asignacion',4,'p_asignacion_tupla','sintax.py',503),
  ('dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',506),
  ('dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',507),
  ('dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',508),
  ('dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',509),
  ('dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',512),
  ('dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',513),
  ('dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',514),
  ('dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',515),
  ('dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',518),
  ('dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',519),
  ('dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',520),
  ('dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',521),
  ('dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',524),
  ('dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',525),
  ('dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',526),
  ('dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',527),
  ('dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',530),
  ('dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',531),
  ('dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',532),
  ('dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',533),
  ('asignacionInt -> VAR VARIABLE IGUAL intvalues','asignacionInt',4,'p_asignacionInt','sintax.py',538),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues','asignacionInt',6,'p_asignacionInt','sintax.py',539),
  ('asignacionInt -> VAL VARIABLE IGUAL intvalues','asignacionInt',4,'p_asignacionInt','sintax.py',540),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues','asignacionInt',6,'p_asignacionInt','sintax.py',541),
  ('intvalues -> INT','intvalues',1,'p_intvalues','sintax.py',544),
  ('intvalues -> stringCastInt','intvalues',1,'p_intvalues','sintax.py',545),
  ('asignacionLong -> VAR VARIABLE IGUAL longvalues','asignacionLong',4,'p_asignacionLong_cast','sintax.py',548),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues','asignacionLong',6,'p_asignacionLong_cast','sintax.py',549),
  ('asignacionLong -> VAL VARIABLE IGUAL longvalues','asignacionLong',4,'p_asignacionLong_cast','sintax.py',550),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues','asignacionLong',6,'p_asignacionLong_cast','sintax.py',551),
  ('longvalues -> INT','longvalues',1,'p_longvalues','sintax.py',554),
  ('longvalues -> intvalues','longvalues',1,'p_longvalues','sintax.py',555),
  ('longvalues -> stringCastLong','longvalues',1,'p_longvalues','sintax.py',556),
  ('asignacionFloat -> VAR VARIABLE IGUAL floatvalues','asignacionFloat',4,'p_asignacionFloat_cast','sintax.py',559),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues','asignacionFloat',6,'p_asignacionFloat_cast','sintax.py',560),
  ('asignacionFloat -> VAL VARIABLE IGUAL floatvalues','asignacionFloat',4,'p_asignacionFloat_cast','sintax.py',561),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues','asignacionFloat',6,'p_asignacionFloat_cast','sintax.py',562),
  ('floatvalues -> FLOAT','floatvalues',1,'p_floatvalues','sintax.py',565),
  ('floatvalues -> longvalues','floatvalues',1,'p_floatvalues','sintax.py',566),
  ('floatvalues -> stringCastFloat','floatvalues',1,'p_floatvalues','sintax.py',567),
  ('asignacionDouble -> VAR VARIABLE IGUAL doublevalues','asignacionDouble',4,'p_asignacionDouble_cast','sintax.py',570),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues','asignacionDouble',6,'p_asignacionDouble_cast','sintax.py',571),
  ('asignacionDouble -> VAL VARIABLE IGUAL doublevalues','asignacionDouble',4,'p_asignacionDouble_cast','sintax.py',572),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues','asignacionDouble',6,'p_asignacionDouble_cast','sintax.py',573),
  ('doublevalues -> DOUBLE','doublevalues',1,'p_doublevalues','sintax.py',576),
  ('doublevalues -> floatvalues','doublevalues',1,'p_doublevalues','sintax.py',577),
  ('doublevalues -> stringCastDouble','doublevalues',1,'p_doublevalues','sintax.py',578),
  ('stringCastInt -> STRING PUNTO TO_INT','stringCastInt',3,'p_stringCastInt','sintax.py',587),
  ('stringCastLong -> STRING PUNTO TO_LONG','stringCastLong',3,'p_stringCastLong','sintax.py',603),
  ('stringCastFloat -> STRING PUNTO TO_FLOAT','stringCastFloat',3,'p_stringCastFloat','sintax.py',619),
  ('stringCastDouble -> STRING PUNTO TO_DOUBLE','stringCastDouble',3,'p_stringCastDouble','sintax.py',636),
]

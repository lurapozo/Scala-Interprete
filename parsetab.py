
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARRAYCLASS ARROBA BACKTICK BOOLCLASS CASE CATCH CHAR CHARCLASS CLASS COMA CORCHETE_D CORCHETE_I DEF DIFERENTE DIVISION DO DOBLE_PUNTO DOUBLE DOUBLECLASS ELSE EXTENDS FINAL FINALLY FLASE FLOAT FLOATCLASS FOR FOR_SOME FUNCION_FLECHA HASHTAG IF IGUAL IGUAL_COMPARACION IMPLICIT IMPORT INT INTCLASS ITERATOR LAZY LIBRERIA_IO LISTCLASS LLAVE_D LLAVE_I LONG LONGCLASS MACRO MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MOD MULTIPLICACION NEW NOT NULL OBJECT OR OVERRIDE PACKAGE PAR_D PAR_I PRINT PRINTLN PRIVATE PROTECTED PUNTO READLINE RETURN REVERSE SEALED STRING STRINGCLASS SUBGUION SUPER THIS THROW TO TO_DOUBLE TO_FLOAT TO_INT TO_LONG TRAIT TRUE TRY TYPE UNTIL VAL VAR VARIABLE WHILE WITH YIELDcuerpo : funcion\n  | asignacion\n  | while\n  | for\n  | if\n  | funcion cuerpo\n  | asignacion cuerpo\n  | while cuerpo\n  | for cuerpo\n  | if cuerpocontenido : asignacion\n  | impresion\n  | entrada\n  | while\n  | for\n  | if\n  | aritmetica\n  | asignacion contenido\n  | impresion contenido\n  | entrada contenido\n  | while contenido\n  | for contenido\n  | if contenido\n  | aritmetica contenidoasignacion : VAR VARIABLE IGUAL VARIABLE\n  | VAL VARIABLE IGUAL VARIABLE\n  | VAR VARIABLE IGUAL aritmetica\n  | VAL VARIABLE IGUAL aritmetica\n  | asignacionLong\n  | asignacionInt\n  | asignacionFloat\n  | asignacionDouble\n  | asignacionString\n  | asignacionChar\n  | asignacionBoolean\n  | array\n  | listasignacionLong : VAR VARIABLE IGUAL LONG\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG\n  | VAL VARIABLE IGUAL LONG\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLEasignacionInt : VAR VARIABLE IGUAL INT\n  | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT\n  | VAL VARIABLE IGUAL INT\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT\n  | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLEasignacionFloat : VAR VARIABLE IGUAL FLOAT\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT\n  | VAL VARIABLE IGUAL FLOAT\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLEasignacionDouble : VAR VARIABLE IGUAL DOUBLE\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE\n  | VAL VARIABLE IGUAL DOUBLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLEasignacionString : VAR VARIABLE IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAL VARIABLE IGUAL STRING\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLEasignacionChar : VAR VARIABLE IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAL VARIABLE IGUAL CHAR\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLEasignacionBoolean : VAR VARIABLE IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAL VARIABLE IGUAL booleanos\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLEtipo : CHARCLASS\n  | STRINGCLASS\n  | BOOLCLASS\n  | INTCLASS\n  | LONGCLASS\n  | DOUBLECLASS\n  | FLOATCLASSvalor : STRING\n  | CHAR\n  | VARIABLE\n  | numeros\n  | booleanosbooleanos : TRUE\n  | FLASEnumeros : INT\n  | LONG\n  | FLOAT\n  | DOUBLEfuncion : DEF VARIABLE  parametro  IGUAL LLAVE_I contenido LLAVE_Ddeclaracion : VARIABLE DOBLE_PUNTO tipodeclaracion :  VARIABLE DOBLE_PUNTO tipo IGUAL valor parametro : parametros\n  | PAR_I PAR_D parametros : PAR_I declaracion PAR_D \n    | PAR_I declaracion PAR_D parametrosfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D funcion : DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D dectipo : DOBLE_PUNTO tipo dectipoTupla : DOBLE_PUNTO PAR_I tipos PAR_Dtipos : tipo\n    | tipo tiposentrytiposentry : COMA tipo \n  | COMA tipo tiposentryimpresion : PRINTLN PAR_I valorI PAR_D\n  | PRINT PAR_I valorI PAR_DvalorI : valor MAS valorI\n  | valorentrada : READLINE PAR_I PAR_Darray : VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_Dlist : VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_Dvalores : valor\n  | valor COMA valoreswhile : WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_Dfor : FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_Dif : IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | if elseif\n  | if else\n  elseif : ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_Delse : ELSE LLAVE_I contenido LLAVE_D\n  | elseif elsecondicional : valorC logicos condicional\n  | valorCvalorC : VARIABLE\n  | booleanos\n  | relacional\n  | NOT VARIABLE\n  | NOT booleanos\n  | NOT relacional\n  logicos : AND\n  | OR\n  | NOTrelacional : numeros comparacion numeros\n  | aritmetica comparacion aritmetica\n  | aritmetica comparacion numeros\n  | numeros comparacion aritmetica\n  | booleanos comparacion booleanos\n  | STRING comparacion STRING\n  | CHAR comparacion CHAR\n  | VARIABLE comparacion numeros\n  | numeros comparacion VARIABLE\n  | VARIABLE comparacion booleanos\n  | booleanos comparacion VARIABLE\n  | VARIABLE comparacion STRING\n  | STRING comparacion VARIABLE\n  | VARIABLE comparacion CHAR\n  | CHAR comparacion VARIABLE\n  | VARIABLE comparacion VARIABLEcomparacion : IGUAL_COMPARACION\n  | DIFERENTE\n  | MAYOR\n  | MENORaritmetica : numeros aritmeticos numeros\n  | VARIABLE aritmeticos numeros\n  | numeros aritmeticos VARIABLE\n  | VARIABLE aritmeticos VARIABLE\n  | aritmetica aritmeticos numeros\n  | aritmetica aritmeticos VARIABLEaritmeticos : MENOS\n  | MAS\n  | MULTIPLICACION\n  | DIVISION\n  | MOD'
    
_lr_action_items = {'DEF':([0,2,3,4,5,6,10,11,12,13,14,15,16,17,18,27,28,37,54,55,60,61,62,63,88,89,90,91,92,93,94,95,96,106,107,108,109,110,111,112,113,114,154,204,205,211,212,215,216,245,246,247,248,249,250,251,252,253,254,255,256,257,258,261,262,263,264,265,266,267,268,269,270,271,272,273,274,287,294,297,299,306,322,331,334,335,339,349,350,352,353,354,355,358,],[7,7,7,7,7,7,-29,-30,-31,-32,-33,-34,-35,-36,-37,-133,-134,-137,-92,-93,-94,-95,-96,-97,-25,-27,-38,-44,-50,-56,-62,-68,-74,-26,-28,-40,-46,-52,-58,-64,-70,-76,-136,-172,-170,-169,-171,-173,-174,-42,-39,-48,-45,-54,-51,-60,-57,-66,-63,-72,-69,-78,-75,-43,-41,-49,-47,-55,-53,-61,-59,-67,-65,-73,-71,-79,-77,-98,-118,-121,-125,-132,-135,-127,-105,-106,-126,-128,-129,-119,-122,-130,-131,-120,]),'VAR':([0,2,3,4,5,6,10,11,12,13,14,15,16,17,18,27,28,34,37,40,54,55,60,61,62,63,69,70,71,72,73,74,75,88,89,90,91,92,93,94,95,96,106,107,108,109,110,111,112,113,114,154,165,197,204,205,211,212,215,216,224,234,236,237,245,246,247,248,249,250,251,252,253,254,255,256,257,258,261,262,263,264,265,266,267,268,269,270,271,272,273,274,283,284,286,287,294,297,299,303,306,316,322,331,332,333,334,335,339,340,341,349,350,352,353,354,355,358,],[8,8,8,8,8,8,-29,-30,-31,-32,-33,-34,-35,-36,-37,-133,-134,64,-137,8,-92,-93,-94,-95,-96,-97,8,8,8,8,8,8,8,-25,-27,-38,-44,-50,-56,-62,-68,-74,-26,-28,-40,-46,-52,-58,-64,-70,-76,-136,8,8,-172,-170,-169,-171,-173,-174,8,-117,8,8,-42,-39,-48,-45,-54,-51,-60,-57,-66,-63,-72,-69,-78,-75,-43,-41,-49,-47,-55,-53,-61,-59,-67,-65,-73,-71,-79,-77,8,-113,-114,-98,-118,-121,-125,8,-132,8,-135,-127,8,8,-105,-106,-126,8,8,-128,-129,-119,-122,-130,-131,-120,]),'VAL':([0,2,3,4,5,6,10,11,12,13,14,15,16,17,18,27,28,37,40,54,55,60,61,62,63,69,70,71,72,73,74,75,88,89,90,91,92,93,94,95,96,106,107,108,109,110,111,112,113,114,154,165,197,204,205,211,212,215,216,224,234,236,237,245,246,247,248,249,250,251,252,253,254,255,256,257,258,261,262,263,264,265,266,267,268,269,270,271,272,273,274,283,284,286,287,294,297,299,303,306,316,322,331,332,333,334,335,339,340,341,349,350,352,353,354,355,358,],[9,9,9,9,9,9,-29,-30,-31,-32,-33,-34,-35,-36,-37,-133,-134,-137,9,-92,-93,-94,-95,-96,-97,9,9,9,9,9,9,9,-25,-27,-38,-44,-50,-56,-62,-68,-74,-26,-28,-40,-46,-52,-58,-64,-70,-76,-136,9,9,-172,-170,-169,-171,-173,-174,9,-117,9,9,-42,-39,-48,-45,-54,-51,-60,-57,-66,-63,-72,-69,-78,-75,-43,-41,-49,-47,-55,-53,-61,-59,-67,-65,-73,-71,-79,-77,9,-113,-114,-98,-118,-121,-125,9,-132,9,-135,-127,9,9,-105,-106,-126,9,9,-128,-129,-119,-122,-130,-131,-120,]),'WHILE':([0,2,3,4,5,6,10,11,12,13,14,15,16,17,18,27,28,37,40,54,55,60,61,62,63,69,70,71,72,73,74,75,88,89,90,91,92,93,94,95,96,106,107,108,109,110,111,112,113,114,154,165,197,204,205,211,212,215,216,224,234,236,237,245,246,247,248,249,250,251,252,253,254,255,256,257,258,261,262,263,264,265,266,267,268,269,270,271,272,273,274,283,284,286,287,294,297,299,303,306,316,322,331,332,333,334,335,339,340,341,349,350,352,353,354,355,358,],[19,19,19,19,19,19,-29,-30,-31,-32,-33,-34,-35,-36,-37,-133,-134,-137,19,-92,-93,-94,-95,-96,-97,19,19,19,19,19,19,19,-25,-27,-38,-44,-50,-56,-62,-68,-74,-26,-28,-40,-46,-52,-58,-64,-70,-76,-136,19,19,-172,-170,-169,-171,-173,-174,19,-117,19,19,-42,-39,-48,-45,-54,-51,-60,-57,-66,-63,-72,-69,-78,-75,-43,-41,-49,-47,-55,-53,-61,-59,-67,-65,-73,-71,-79,-77,19,-113,-114,-98,-118,-121,-125,19,-132,19,-135,-127,19,19,-105,-106,-126,19,19,-128,-129,-119,-122,-130,-131,-120,]),'FOR':([0,2,3,4,5,6,10,11,12,13,14,15,16,17,18,27,28,37,40,54,55,60,61,62,63,69,70,71,72,73,74,75,88,89,90,91,92,93,94,95,96,106,107,108,109,110,111,112,113,114,154,165,197,204,205,211,212,215,216,224,234,236,237,245,246,247,248,249,250,251,252,253,254,255,256,257,258,261,262,263,264,265,266,267,268,269,270,271,272,273,274,283,284,286,287,294,297,299,303,306,316,322,331,332,333,334,335,339,340,341,349,350,352,353,354,355,358,],[20,20,20,20,20,20,-29,-30,-31,-32,-33,-34,-35,-36,-37,-133,-134,-137,20,-92,-93,-94,-95,-96,-97,20,20,20,20,20,20,20,-25,-27,-38,-44,-50,-56,-62,-68,-74,-26,-28,-40,-46,-52,-58,-64,-70,-76,-136,20,20,-172,-170,-169,-171,-173,-174,20,-117,20,20,-42,-39,-48,-45,-54,-51,-60,-57,-66,-63,-72,-69,-78,-75,-43,-41,-49,-47,-55,-53,-61,-59,-67,-65,-73,-71,-79,-77,20,-113,-114,-98,-118,-121,-125,20,-132,20,-135,-127,20,20,-105,-106,-126,20,20,-128,-129,-119,-122,-130,-131,-120,]),'IF':([0,2,3,4,5,6,10,11,12,13,14,15,16,17,18,27,28,29,37,38,40,54,55,60,61,62,63,69,70,71,72,73,74,75,88,89,90,91,92,93,94,95,96,106,107,108,109,110,111,112,113,114,154,165,197,204,205,211,212,215,216,224,234,236,237,245,246,247,248,249,250,251,252,253,254,255,256,257,258,261,262,263,264,265,266,267,268,269,270,271,272,273,274,283,284,286,287,294,297,299,303,306,316,322,331,332,333,334,335,339,340,341,349,350,352,353,354,355,358,],[21,21,21,21,21,21,-29,-30,-31,-32,-33,-34,-35,-36,-37,-133,-134,39,-137,39,21,-92,-93,-94,-95,-96,-97,21,21,21,21,21,21,21,-25,-27,-38,-44,-50,-56,-62,-68,-74,-26,-28,-40,-46,-52,-58,-64,-70,-76,-136,21,21,-172,-170,-169,-171,-173,-174,21,-117,21,21,-42,-39,-48,-45,-54,-51,-60,-57,-66,-63,-72,-69,-78,-75,-43,-41,-49,-47,-55,-53,-61,-59,-67,-65,-73,-71,-79,-77,21,-113,-114,-98,-118,-121,-125,21,-132,21,-135,-127,21,21,-105,-106,-126,21,21,-128,-129,-119,-122,-130,-131,-120,]),'$end':([1,2,3,4,5,6,10,11,12,13,14,15,16,17,18,22,23,24,25,26,27,28,37,54,55,60,61,62,63,88,89,90,91,92,93,94,95,96,106,107,108,109,110,111,112,113,114,154,204,205,211,212,215,216,245,246,247,248,249,250,251,252,253,254,255,256,257,258,261,262,263,264,265,266,267,268,269,270,271,272,273,274,287,294,297,299,306,322,331,334,335,339,349,350,352,353,354,355,358,],[0,-1,-2,-3,-4,-5,-29,-30,-31,-32,-33,-34,-35,-36,-37,-6,-7,-8,-9,-10,-133,-134,-137,-92,-93,-94,-95,-96,-97,-25,-27,-38,-44,-50,-56,-62,-68,-74,-26,-28,-40,-46,-52,-58,-64,-70,-76,-136,-172,-170,-169,-171,-173,-174,-42,-39,-48,-45,-54,-51,-60,-57,-66,-63,-72,-69,-78,-75,-43,-41,-49,-47,-55,-53,-61,-59,-67,-65,-73,-71,-79,-77,-98,-118,-121,-125,-132,-135,-127,-105,-106,-126,-128,-129,-119,-122,-130,-131,-120,]),'ELSE':([6,27,28,36,37,74,154,306,322,],[29,38,-134,38,-137,29,-136,-132,-135,]),'VARIABLE':([7,8,9,10,11,12,13,14,15,16,17,18,27,28,33,34,35,37,40,43,44,46,53,54,55,60,61,62,63,64,67,69,70,71,72,73,74,75,88,89,90,91,92,93,94,95,96,106,107,108,109,110,111,112,113,114,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,144,145,146,147,148,149,151,154,162,163,165,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,197,204,205,211,212,215,216,221,224,234,236,237,240,245,246,247,248,249,250,251,252,253,254,255,256,257,258,261,262,263,264,265,266,267,268,269,270,271,272,273,274,283,284,285,286,293,294,295,297,299,303,306,309,310,316,322,331,332,333,337,338,339,340,341,349,350,352,353,354,355,358,],[30,31,32,-29,-30,-31,-32,-33,-34,-35,-36,-37,-133,-134,50,65,50,-137,76,87,88,106,141,-92,-93,-94,-95,-96,-97,150,50,76,76,76,76,76,76,76,-25,-27,-38,-44,-50,-56,-62,-68,-74,-26,-28,-40,-46,-52,-58,-64,-70,-76,50,-146,-147,-148,199,204,-165,-166,-167,-168,-175,-176,-177,-178,-179,207,210,212,76,216,218,220,222,-136,230,230,76,230,245,247,249,251,253,255,257,230,261,263,265,267,269,271,273,76,-172,-170,-169,-171,-173,-174,277,76,-117,76,76,87,-42,-39,-48,-45,-54,-51,-60,-57,-66,-63,-72,-69,-78,-75,-43,-41,-49,-47,-55,-53,-61,-59,-67,-65,-73,-71,-79,-77,76,-113,230,-114,230,-118,230,-121,-125,76,-132,230,230,76,-135,-127,76,76,230,230,-126,76,76,-128,-129,-119,-122,-130,-131,-120,]),'PRINTLN':([10,11,12,13,14,15,16,17,18,27,28,37,40,54,55,60,61,62,63,69,70,71,72,73,74,75,88,89,90,91,92,93,94,95,96,106,107,108,109,110,111,112,113,114,154,165,197,204,205,211,212,215,216,224,234,236,237,245,246,247,248,249,250,251,252,253,254,255,256,257,258,261,262,263,264,265,266,267,268,269,270,271,272,273,274,283,284,286,294,297,299,303,306,316,322,331,332,333,339,340,341,349,350,352,353,354,355,358,],[-29,-30,-31,-32,-33,-34,-35,-36,-37,-133,-134,-137,77,-92,-93,-94,-95,-96,-97,77,77,77,77,77,77,77,-25,-27,-38,-44,-50,-56,-62,-68,-74,-26,-28,-40,-46,-52,-58,-64,-70,-76,-136,77,77,-172,-170,-169,-171,-173,-174,77,-117,77,77,-42,-39,-48,-45,-54,-51,-60,-57,-66,-63,-72,-69,-78,-75,-43,-41,-49,-47,-55,-53,-61,-59,-67,-65,-73,-71,-79,-77,77,-113,-114,-118,-121,-125,77,-132,77,-135,-127,77,77,-126,77,77,-128,-129,-119,-122,-130,-131,-120,]),'PRINT':([10,11,12,13,14,15,16,17,18,27,28,37,40,54,55,60,61,62,63,69,70,71,72,73,74,75,88,89,90,91,92,93,94,95,96,106,107,108,109,110,111,112,113,114,154,165,197,204,205,211,212,215,216,224,234,236,237,245,246,247,248,249,250,251,252,253,254,255,256,257,258,261,262,263,264,265,266,267,268,269,270,271,272,273,274,283,284,286,294,297,299,303,306,316,322,331,332,333,339,340,341,349,350,352,353,354,355,358,],[-29,-30,-31,-32,-33,-34,-35,-36,-37,-133,-134,-137,78,-92,-93,-94,-95,-96,-97,78,78,78,78,78,78,78,-25,-27,-38,-44,-50,-56,-62,-68,-74,-26,-28,-40,-46,-52,-58,-64,-70,-76,-136,78,78,-172,-170,-169,-171,-173,-174,78,-117,78,78,-42,-39,-48,-45,-54,-51,-60,-57,-66,-63,-72,-69,-78,-75,-43,-41,-49,-47,-55,-53,-61,-59,-67,-65,-73,-71,-79,-77,78,-113,-114,-118,-121,-125,78,-132,78,-135,-127,78,78,-126,78,78,-128,-129,-119,-122,-130,-131,-120,]),'READLINE':([10,11,12,13,14,15,16,17,18,27,28,37,40,54,55,60,61,62,63,69,70,71,72,73,74,75,88,89,90,91,92,93,94,95,96,106,107,108,109,110,111,112,113,114,154,165,197,204,205,211,212,215,216,224,234,236,237,245,246,247,248,249,250,251,252,253,254,255,256,257,258,261,262,263,264,265,266,267,268,269,270,271,272,273,274,283,284,286,294,297,299,303,306,316,322,331,332,333,339,340,341,349,350,352,353,354,355,358,],[-29,-30,-31,-32,-33,-34,-35,-36,-37,-133,-134,-137,79,-92,-93,-94,-95,-96,-97,79,79,79,79,79,79,79,-25,-27,-38,-44,-50,-56,-62,-68,-74,-26,-28,-40,-46,-52,-58,-64,-70,-76,-136,79,79,-172,-170,-169,-171,-173,-174,79,-117,79,79,-42,-39,-48,-45,-54,-51,-60,-57,-66,-63,-72,-69,-78,-75,-43,-41,-49,-47,-55,-53,-61,-59,-67,-65,-73,-71,-79,-77,79,-113,-114,-118,-121,-125,79,-132,79,-135,-127,79,79,-126,79,79,-128,-129,-119,-122,-130,-131,-120,]),'INT':([10,11,12,13,14,15,16,17,18,27,28,33,35,37,40,44,46,53,54,55,60,61,62,63,67,69,70,71,72,73,74,75,88,89,90,91,92,93,94,95,96,106,107,108,109,110,111,112,113,114,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,151,154,162,163,165,179,181,188,190,197,204,205,211,212,215,216,221,224,234,236,237,245,246,247,248,249,250,251,252,253,254,255,256,257,258,261,262,263,264,265,266,267,268,269,270,271,272,273,274,280,281,283,284,285,286,293,294,295,297,299,301,302,303,306,309,310,316,322,331,332,333,337,338,339,340,341,349,350,352,353,354,355,356,358,],[-29,-30,-31,-32,-33,-34,-35,-36,-37,-133,-134,60,60,-137,60,91,109,60,-92,-93,-94,-95,-96,-97,60,60,60,60,60,60,60,60,-25,-27,-38,-44,-50,-56,-62,-68,-74,-26,-28,-40,-46,-52,-58,-64,-70,-76,60,-146,-147,-148,60,60,-165,-166,-167,-168,-175,-176,-177,-178,-179,60,60,60,60,223,-136,60,60,60,60,248,60,264,60,-172,-170,-169,-171,-173,-174,278,60,-117,60,60,-42,-39,-48,-45,-54,-51,-60,-57,-66,-63,-72,-69,-78,-75,-43,-41,-49,-47,-55,-53,-61,-59,-67,-65,-73,-71,-79,-77,304,305,60,-113,60,-114,60,-118,60,-121,-125,317,318,60,-132,60,60,60,-135,-127,60,60,60,60,-126,60,60,-128,-129,-119,-122,-130,-131,357,-120,]),'LONG':([10,11,12,13,14,15,16,17,18,27,28,33,35,37,40,44,46,53,54,55,60,61,62,63,67,69,70,71,72,73,74,75,88,89,90,91,92,93,94,95,96,106,107,108,109,110,111,112,113,114,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,154,162,163,165,179,180,188,189,197,204,205,211,212,215,216,224,234,236,237,245,246,247,248,249,250,251,252,253,254,255,256,257,258,261,262,263,264,265,266,267,268,269,270,271,272,273,274,283,284,285,286,293,294,295,297,299,303,306,309,310,316,322,331,332,333,337,338,339,340,341,349,350,352,353,354,355,358,],[-29,-30,-31,-32,-33,-34,-35,-36,-37,-133,-134,61,61,-137,61,90,108,61,-92,-93,-94,-95,-96,-97,61,61,61,61,61,61,61,61,-25,-27,-38,-44,-50,-56,-62,-68,-74,-26,-28,-40,-46,-52,-58,-64,-70,-76,61,-146,-147,-148,61,61,-165,-166,-167,-168,-175,-176,-177,-178,-179,61,61,61,61,-136,61,61,61,61,246,61,262,61,-172,-170,-169,-171,-173,-174,61,-117,61,61,-42,-39,-48,-45,-54,-51,-60,-57,-66,-63,-72,-69,-78,-75,-43,-41,-49,-47,-55,-53,-61,-59,-67,-65,-73,-71,-79,-77,61,-113,61,-114,61,-118,61,-121,-125,61,-132,61,61,61,-135,-127,61,61,61,61,-126,61,61,-128,-129,-119,-122,-130,-131,-120,]),'FLOAT':([10,11,12,13,14,15,16,17,18,27,28,33,35,37,40,44,46,53,54,55,60,61,62,63,67,69,70,71,72,73,74,75,88,89,90,91,92,93,94,95,96,106,107,108,109,110,111,112,113,114,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,154,162,163,165,179,182,188,191,197,204,205,211,212,215,216,224,234,236,237,245,246,247,248,249,250,251,252,253,254,255,256,257,258,261,262,263,264,265,266,267,268,269,270,271,272,273,274,283,284,285,286,293,294,295,297,299,303,306,309,310,316,322,331,332,333,337,338,339,340,341,349,350,352,353,354,355,358,],[-29,-30,-31,-32,-33,-34,-35,-36,-37,-133,-134,62,62,-137,62,92,110,62,-92,-93,-94,-95,-96,-97,62,62,62,62,62,62,62,62,-25,-27,-38,-44,-50,-56,-62,-68,-74,-26,-28,-40,-46,-52,-58,-64,-70,-76,62,-146,-147,-148,62,62,-165,-166,-167,-168,-175,-176,-177,-178,-179,62,62,62,62,-136,62,62,62,62,250,62,266,62,-172,-170,-169,-171,-173,-174,62,-117,62,62,-42,-39,-48,-45,-54,-51,-60,-57,-66,-63,-72,-69,-78,-75,-43,-41,-49,-47,-55,-53,-61,-59,-67,-65,-73,-71,-79,-77,62,-113,62,-114,62,-118,62,-121,-125,62,-132,62,62,62,-135,-127,62,62,62,62,-126,62,62,-128,-129,-119,-122,-130,-131,-120,]),'DOUBLE':([10,11,12,13,14,15,16,17,18,27,28,33,35,37,40,44,46,53,54,55,60,61,62,63,67,69,70,71,72,73,74,75,88,89,90,91,92,93,94,95,96,106,107,108,109,110,111,112,113,114,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,154,162,163,165,179,183,188,192,197,204,205,211,212,215,216,224,234,236,237,245,246,247,248,249,250,251,252,253,254,255,256,257,258,261,262,263,264,265,266,267,268,269,270,271,272,273,274,283,284,285,286,293,294,295,297,299,303,306,309,310,316,322,331,332,333,337,338,339,340,341,349,350,352,353,354,355,358,],[-29,-30,-31,-32,-33,-34,-35,-36,-37,-133,-134,63,63,-137,63,93,111,63,-92,-93,-94,-95,-96,-97,63,63,63,63,63,63,63,63,-25,-27,-38,-44,-50,-56,-62,-68,-74,-26,-28,-40,-46,-52,-58,-64,-70,-76,63,-146,-147,-148,63,63,-165,-166,-167,-168,-175,-176,-177,-178,-179,63,63,63,63,-136,63,63,63,63,252,63,268,63,-172,-170,-169,-171,-173,-174,63,-117,63,63,-42,-39,-48,-45,-54,-51,-60,-57,-66,-63,-72,-69,-78,-75,-43,-41,-49,-47,-55,-53,-61,-59,-67,-65,-73,-71,-79,-77,63,-113,63,-114,63,-118,63,-121,-125,63,-132,63,63,63,-135,-127,63,63,63,63,-126,63,63,-128,-129,-119,-122,-130,-131,-120,]),'LLAVE_D':([10,11,12,13,14,15,16,17,18,27,28,37,54,55,60,61,62,63,68,69,70,71,72,73,74,75,88,89,90,91,92,93,94,95,96,106,107,108,109,110,111,112,113,114,154,155,156,157,158,159,160,161,204,205,211,212,215,216,228,229,230,231,232,234,235,245,246,247,248,249,250,251,252,253,254,255,256,257,258,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,282,284,286,294,297,299,306,307,319,322,323,324,328,331,339,342,343,347,348,349,350,352,353,354,355,358,],[-29,-30,-31,-32,-33,-34,-35,-36,-37,-133,-134,-137,-92,-93,-94,-95,-96,-97,154,-11,-12,-13,-14,-15,-16,-17,-25,-27,-38,-44,-50,-56,-62,-68,-74,-26,-28,-40,-46,-52,-58,-64,-70,-76,-136,-18,-19,-20,-21,-22,-23,-24,-172,-170,-169,-171,-173,-174,-87,-88,-89,-90,-91,-117,287,-42,-39,-48,-45,-54,-51,-60,-57,-66,-63,-72,-69,-78,-75,-43,-41,-49,-47,-55,-53,-61,-59,-67,-65,-73,-71,-79,-77,299,306,-113,-114,-118,-121,-125,-132,322,331,-135,334,335,339,-127,-126,349,350,354,355,-128,-129,-119,-122,-130,-131,-120,]),'RETURN':([10,11,12,13,14,15,16,17,18,27,28,37,54,55,60,61,62,63,69,70,71,72,73,74,75,88,89,90,91,92,93,94,95,96,106,107,108,109,110,111,112,113,114,154,155,156,157,158,159,160,161,204,205,211,212,215,216,234,245,246,247,248,249,250,251,252,253,254,255,256,257,258,261,262,263,264,265,266,267,268,269,270,271,272,273,274,284,286,288,289,294,297,299,306,322,331,339,349,350,352,353,354,355,358,],[-29,-30,-31,-32,-33,-34,-35,-36,-37,-133,-134,-137,-92,-93,-94,-95,-96,-97,-11,-12,-13,-14,-15,-16,-17,-25,-27,-38,-44,-50,-56,-62,-68,-74,-26,-28,-40,-46,-52,-58,-64,-70,-76,-136,-18,-19,-20,-21,-22,-23,-24,-172,-170,-169,-171,-173,-174,-117,-42,-39,-48,-45,-54,-51,-60,-57,-66,-63,-72,-69,-78,-75,-43,-41,-49,-47,-55,-53,-61,-59,-67,-65,-73,-71,-79,-77,-113,-114,309,310,-118,-121,-125,-132,-135,-127,-126,-128,-129,-119,-122,-130,-131,-120,]),'PAR_I':([19,20,21,30,39,77,78,79,84,97,115,177,326,327,351,],[33,34,35,43,67,162,163,164,169,179,188,240,337,338,356,]),'LLAVE_I':([29,38,81,124,152,166,167,225,279,300,320,321,329,330,],[40,40,165,197,224,236,237,283,303,316,332,333,340,341,]),'IGUAL':([31,32,41,42,82,83,85,98,99,100,101,102,103,104,116,117,118,119,120,121,122,168,170,171,172,173,174,175,176,177,241,242,290,296,298,],[44,46,81,-101,166,167,-102,180,181,182,183,184,185,186,189,190,191,192,193,194,195,-107,-80,-81,-82,-83,-84,-85,-86,-103,-104,293,-108,314,315,]),'DOBLE_PUNTO':([31,32,41,42,85,87,177,241,],[45,47,84,-101,-102,178,-103,-104,]),'NOT':([33,35,49,50,51,52,54,55,60,61,62,63,67,125,126,127,128,141,142,143,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,],[53,53,128,-140,-141,-142,-92,-93,-94,-95,-96,-97,53,53,-146,-147,-148,-143,-144,-145,-164,-156,-158,-160,-162,-172,-170,-153,-159,-149,-152,-157,-169,-171,-150,-151,-173,-174,-154,-161,-155,-163,]),'TRUE':([33,35,44,46,53,67,125,126,127,128,129,131,132,133,134,140,162,163,179,186,188,195,285,293,295,309,310,337,338,],[54,54,54,54,54,54,54,-146,-147,-148,54,-165,-166,-167,-168,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'FLASE':([33,35,44,46,53,67,125,126,127,128,129,131,132,133,134,140,162,163,179,186,188,195,285,293,295,309,310,337,338,],[55,55,55,55,55,55,55,-146,-147,-148,55,-165,-166,-167,-168,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'STRING':([33,35,44,46,53,67,125,126,127,128,129,131,132,133,134,148,162,163,179,184,188,193,285,293,295,309,310,337,338,],[58,58,94,112,58,58,58,-146,-147,-148,202,-165,-166,-167,-168,217,228,228,228,254,228,270,228,228,228,228,228,228,228,]),'CHAR':([33,35,44,46,53,67,125,126,127,128,129,131,132,133,134,149,162,163,179,185,188,194,285,293,295,309,310,337,338,],[59,59,95,113,59,59,59,-146,-147,-148,203,-165,-166,-167,-168,219,229,229,229,256,229,272,229,229,229,229,229,229,229,]),'PAR_D':([43,48,49,50,51,52,54,55,60,61,62,63,66,86,141,142,143,153,164,170,171,172,173,174,175,176,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,222,226,227,228,229,230,231,232,233,238,239,242,243,244,260,277,291,304,305,308,311,312,313,317,318,325,345,346,357,],[85,124,-139,-140,-141,-142,-92,-93,-94,-95,-96,-97,152,177,-143,-144,-145,225,234,-80,-81,-82,-83,-84,-85,-86,-138,-164,-156,-158,-160,-162,-172,-170,-153,-159,-149,-152,-157,-169,-171,-150,-151,-173,-174,-154,-161,-155,-163,279,284,-116,-87,-88,-89,-90,-91,286,290,-109,-99,294,-123,297,300,-110,320,321,-115,-111,-100,-124,329,330,-112,352,353,358,]),'ARRAYCLASS':([44,45,314,],[97,105,326,]),'LONGCLASS':([45,47,84,169,178,187,196,292,336,],[98,116,174,174,174,174,174,174,174,]),'INTCLASS':([45,47,84,169,178,187,196,292,336,],[99,117,173,173,173,173,173,173,173,]),'FLOATCLASS':([45,47,84,169,178,187,196,292,336,],[100,118,176,176,176,176,176,176,176,]),'DOUBLECLASS':([45,47,84,169,178,187,196,292,336,],[101,119,175,175,175,175,175,175,175,]),'STRINGCLASS':([45,47,84,169,178,187,196,292,336,],[102,120,171,171,171,171,171,171,171,]),'CHARCLASS':([45,47,84,169,178,187,196,292,336,],[103,121,170,170,170,170,170,170,170,]),'BOOLCLASS':([45,47,84,169,178,187,196,292,336,],[104,122,172,172,172,172,172,172,172,]),'LISTCLASS':([46,47,315,],[115,123,327,]),'AND':([49,50,51,52,54,55,60,61,62,63,141,142,143,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,],[126,-140,-141,-142,-92,-93,-94,-95,-96,-97,-143,-144,-145,-164,-156,-158,-160,-162,-172,-170,-153,-159,-149,-152,-157,-169,-171,-150,-151,-173,-174,-154,-161,-155,-163,]),'OR':([49,50,51,52,54,55,60,61,62,63,141,142,143,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,],[127,-140,-141,-142,-92,-93,-94,-95,-96,-97,-143,-144,-145,-164,-156,-158,-160,-162,-172,-170,-153,-159,-149,-152,-157,-169,-171,-150,-151,-173,-174,-154,-161,-155,-163,]),'IGUAL_COMPARACION':([50,51,54,55,56,57,58,59,60,61,62,63,141,142,204,205,211,212,215,216,],[131,131,-92,-93,131,131,131,131,-94,-95,-96,-97,131,131,-172,-170,-169,-171,-173,-174,]),'DIFERENTE':([50,51,54,55,56,57,58,59,60,61,62,63,141,142,204,205,211,212,215,216,],[132,132,-92,-93,132,132,132,132,-94,-95,-96,-97,132,132,-172,-170,-169,-171,-173,-174,]),'MAYOR':([50,51,54,55,56,57,58,59,60,61,62,63,141,142,204,205,211,212,215,216,],[133,133,-92,-93,133,133,133,133,-94,-95,-96,-97,133,133,-172,-170,-169,-171,-173,-174,]),'MENOR':([50,51,54,55,56,57,58,59,60,61,62,63,141,142,204,205,211,212,215,216,],[134,134,-92,-93,134,134,134,134,-94,-95,-96,-97,134,134,-172,-170,-169,-171,-173,-174,]),'MENOS':([50,56,57,60,61,62,63,75,76,80,88,89,90,91,92,93,106,107,108,109,110,111,141,204,205,208,209,210,211,212,213,214,215,216,],[135,135,135,-94,-95,-96,-97,135,135,135,135,135,-95,-94,-96,-97,135,135,-95,-94,-96,-97,135,-172,-170,135,135,135,-169,-171,135,135,-173,-174,]),'MAS':([50,54,55,56,57,60,61,62,63,75,76,80,88,89,90,91,92,93,106,107,108,109,110,111,141,204,205,208,209,210,211,212,213,214,215,216,227,228,229,230,231,232,],[136,-92,-93,136,136,-94,-95,-96,-97,136,136,136,136,136,-95,-94,-96,-97,136,136,-95,-94,-96,-97,136,-172,-170,136,136,136,-169,-171,136,136,-173,-174,285,-87,-88,-89,-90,-91,]),'MULTIPLICACION':([50,56,57,60,61,62,63,75,76,80,88,89,90,91,92,93,106,107,108,109,110,111,141,204,205,208,209,210,211,212,213,214,215,216,],[137,137,137,-94,-95,-96,-97,137,137,137,137,137,-95,-94,-96,-97,137,137,-95,-94,-96,-97,137,-172,-170,137,137,137,-169,-171,137,137,-173,-174,]),'DIVISION':([50,56,57,60,61,62,63,75,76,80,88,89,90,91,92,93,106,107,108,109,110,111,141,204,205,208,209,210,211,212,213,214,215,216,],[138,138,138,-94,-95,-96,-97,138,138,138,138,138,-95,-94,-96,-97,138,138,-95,-94,-96,-97,138,-172,-170,138,138,138,-169,-171,138,138,-173,-174,]),'MOD':([50,56,57,60,61,62,63,75,76,80,88,89,90,91,92,93,106,107,108,109,110,111,141,204,205,208,209,210,211,212,213,214,215,216,],[139,139,139,-94,-95,-96,-97,139,139,139,139,139,-95,-94,-96,-97,139,139,-95,-94,-96,-97,139,-172,-170,139,139,139,-169,-171,139,139,-173,-174,]),'COMA':([54,55,60,61,62,63,170,171,172,173,174,175,176,228,229,230,231,232,239,244,311,],[-92,-93,-94,-95,-96,-97,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,292,295,292,]),'ITERATOR':([65,150,],[151,221,]),'CORCHETE_I':([105,123,326,],[187,196,336,]),'CORCHETE_D':([170,171,172,173,174,175,176,259,275,344,],[-80,-81,-82,-83,-84,-85,-86,296,298,351,]),'TO':([223,278,],[280,301,]),'UNTIL':([223,278,],[281,302,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,2,3,4,5,6,],[1,22,23,24,25,26,]),'funcion':([0,2,3,4,5,6,],[2,2,2,2,2,2,]),'asignacion':([0,2,3,4,5,6,40,69,70,71,72,73,74,75,165,197,224,236,237,283,303,316,332,333,340,341,],[3,3,3,3,3,3,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'while':([0,2,3,4,5,6,40,69,70,71,72,73,74,75,165,197,224,236,237,283,303,316,332,333,340,341,],[4,4,4,4,4,4,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'for':([0,2,3,4,5,6,40,69,70,71,72,73,74,75,165,197,224,236,237,283,303,316,332,333,340,341,],[5,5,5,5,5,5,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'if':([0,2,3,4,5,6,40,69,70,71,72,73,74,75,165,197,224,236,237,283,303,316,332,333,340,341,],[6,6,6,6,6,6,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'asignacionLong':([0,2,3,4,5,6,40,69,70,71,72,73,74,75,165,197,224,236,237,283,303,316,332,333,340,341,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'asignacionInt':([0,2,3,4,5,6,40,69,70,71,72,73,74,75,165,197,224,236,237,283,303,316,332,333,340,341,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'asignacionFloat':([0,2,3,4,5,6,40,69,70,71,72,73,74,75,165,197,224,236,237,283,303,316,332,333,340,341,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'asignacionDouble':([0,2,3,4,5,6,40,69,70,71,72,73,74,75,165,197,224,236,237,283,303,316,332,333,340,341,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'asignacionString':([0,2,3,4,5,6,40,69,70,71,72,73,74,75,165,197,224,236,237,283,303,316,332,333,340,341,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'asignacionChar':([0,2,3,4,5,6,40,69,70,71,72,73,74,75,165,197,224,236,237,283,303,316,332,333,340,341,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'asignacionBoolean':([0,2,3,4,5,6,40,69,70,71,72,73,74,75,165,197,224,236,237,283,303,316,332,333,340,341,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'array':([0,2,3,4,5,6,40,69,70,71,72,73,74,75,165,197,224,236,237,283,303,316,332,333,340,341,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'list':([0,2,3,4,5,6,40,69,70,71,72,73,74,75,165,197,224,236,237,283,303,316,332,333,340,341,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'elseif':([6,27,36,74,],[27,36,36,27,]),'else':([6,27,36,74,],[28,37,37,28,]),'parametro':([30,],[41,]),'parametros':([30,177,],[42,241,]),'condicional':([33,35,67,125,],[48,66,153,198,]),'valorC':([33,35,67,125,],[49,49,49,49,]),'booleanos':([33,35,44,46,53,67,125,129,140,162,163,179,186,188,195,285,293,295,309,310,337,338,],[51,51,96,114,142,51,51,201,206,232,232,232,258,232,274,232,232,232,232,232,232,232,]),'relacional':([33,35,53,67,125,],[52,52,143,52,52,]),'numeros':([33,35,40,44,46,53,67,69,70,71,72,73,74,75,125,129,130,144,145,146,147,162,163,165,179,188,197,224,236,237,283,285,293,295,303,309,310,316,332,333,337,338,340,341,],[56,56,80,80,80,56,56,80,80,80,80,80,80,80,56,200,205,208,211,214,215,231,231,80,231,231,80,80,80,80,80,231,231,231,80,231,231,80,80,80,231,231,80,80,]),'aritmetica':([33,35,40,44,46,53,67,69,70,71,72,73,74,75,125,144,146,165,197,224,236,237,283,303,316,332,333,340,341,],[57,57,75,89,107,57,57,75,75,75,75,75,75,75,57,209,213,75,75,75,75,75,75,75,75,75,75,75,75,]),'contenido':([40,69,70,71,72,73,74,75,165,197,224,236,237,283,303,316,332,333,340,341,],[68,155,156,157,158,159,160,161,235,276,282,288,289,307,319,328,342,343,347,348,]),'impresion':([40,69,70,71,72,73,74,75,165,197,224,236,237,283,303,316,332,333,340,341,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'entrada':([40,69,70,71,72,73,74,75,165,197,224,236,237,283,303,316,332,333,340,341,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'dectipo':([41,],[82,]),'dectipoTupla':([41,],[83,]),'declaracion':([43,240,],[86,86,]),'logicos':([49,],[125,]),'comparacion':([50,51,56,57,58,59,141,142,],[129,140,144,146,148,149,129,140,]),'aritmeticos':([50,56,57,75,76,80,88,89,106,107,141,208,209,210,213,214,],[130,145,147,147,130,145,130,147,130,147,130,145,147,130,147,145,]),'tipo':([84,169,178,187,196,292,336,],[168,239,242,259,275,311,344,]),'valorI':([162,163,285,],[226,233,308,]),'valor':([162,163,179,188,285,293,295,309,310,337,338,],[227,227,244,244,227,312,244,323,324,244,244,]),'tipos':([169,],[238,]),'valores':([179,188,295,337,338,],[243,260,313,345,346,]),'tiposentry':([239,311,],[291,325,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> funcion','cuerpo',1,'p_cuerpo','sintax.py',10),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintax.py',11),
  ('cuerpo -> while','cuerpo',1,'p_cuerpo','sintax.py',12),
  ('cuerpo -> for','cuerpo',1,'p_cuerpo','sintax.py',13),
  ('cuerpo -> if','cuerpo',1,'p_cuerpo','sintax.py',14),
  ('cuerpo -> funcion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',15),
  ('cuerpo -> asignacion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',16),
  ('cuerpo -> while cuerpo','cuerpo',2,'p_cuerpo','sintax.py',17),
  ('cuerpo -> for cuerpo','cuerpo',2,'p_cuerpo','sintax.py',18),
  ('cuerpo -> if cuerpo','cuerpo',2,'p_cuerpo','sintax.py',19),
  ('contenido -> asignacion','contenido',1,'p_contenido','sintax.py',23),
  ('contenido -> impresion','contenido',1,'p_contenido','sintax.py',24),
  ('contenido -> entrada','contenido',1,'p_contenido','sintax.py',25),
  ('contenido -> while','contenido',1,'p_contenido','sintax.py',26),
  ('contenido -> for','contenido',1,'p_contenido','sintax.py',27),
  ('contenido -> if','contenido',1,'p_contenido','sintax.py',28),
  ('contenido -> aritmetica','contenido',1,'p_contenido','sintax.py',29),
  ('contenido -> asignacion contenido','contenido',2,'p_contenido','sintax.py',30),
  ('contenido -> impresion contenido','contenido',2,'p_contenido','sintax.py',31),
  ('contenido -> entrada contenido','contenido',2,'p_contenido','sintax.py',32),
  ('contenido -> while contenido','contenido',2,'p_contenido','sintax.py',33),
  ('contenido -> for contenido','contenido',2,'p_contenido','sintax.py',34),
  ('contenido -> if contenido','contenido',2,'p_contenido','sintax.py',35),
  ('contenido -> aritmetica contenido','contenido',2,'p_contenido','sintax.py',36),
  ('asignacion -> VAR VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',40),
  ('asignacion -> VAL VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',41),
  ('asignacion -> VAR VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',42),
  ('asignacion -> VAL VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',43),
  ('asignacion -> asignacionLong','asignacion',1,'p_asignacion','sintax.py',44),
  ('asignacion -> asignacionInt','asignacion',1,'p_asignacion','sintax.py',45),
  ('asignacion -> asignacionFloat','asignacion',1,'p_asignacion','sintax.py',46),
  ('asignacion -> asignacionDouble','asignacion',1,'p_asignacion','sintax.py',47),
  ('asignacion -> asignacionString','asignacion',1,'p_asignacion','sintax.py',48),
  ('asignacion -> asignacionChar','asignacion',1,'p_asignacion','sintax.py',49),
  ('asignacion -> asignacionBoolean','asignacion',1,'p_asignacion','sintax.py',50),
  ('asignacion -> array','asignacion',1,'p_asignacion','sintax.py',51),
  ('asignacion -> list','asignacion',1,'p_asignacion','sintax.py',52),
  ('asignacionLong -> VAR VARIABLE IGUAL LONG','asignacionLong',4,'p_asignacionLong','sintax.py',55),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG','asignacionLong',6,'p_asignacionLong','sintax.py',56),
  ('asignacionLong -> VAL VARIABLE IGUAL LONG','asignacionLong',4,'p_asignacionLong','sintax.py',57),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG','asignacionLong',6,'p_asignacionLong','sintax.py',58),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',59),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',60),
  ('asignacionInt -> VAR VARIABLE IGUAL INT','asignacionInt',4,'p_asignacionInt','sintax.py',63),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT','asignacionInt',6,'p_asignacionInt','sintax.py',64),
  ('asignacionInt -> VAL VARIABLE IGUAL INT','asignacionInt',4,'p_asignacionInt','sintax.py',65),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT','asignacionInt',6,'p_asignacionInt','sintax.py',66),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',67),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',68),
  ('asignacionFloat -> VAR VARIABLE IGUAL FLOAT','asignacionFloat',4,'p_asignacionFloat','sintax.py',71),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT','asignacionFloat',6,'p_asignacionFloat','sintax.py',72),
  ('asignacionFloat -> VAL VARIABLE IGUAL FLOAT','asignacionFloat',4,'p_asignacionFloat','sintax.py',73),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT','asignacionFloat',6,'p_asignacionFloat','sintax.py',74),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',75),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',76),
  ('asignacionDouble -> VAR VARIABLE IGUAL DOUBLE','asignacionDouble',4,'p_asignacionDouble','sintax.py',79),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',80),
  ('asignacionDouble -> VAL VARIABLE IGUAL DOUBLE','asignacionDouble',4,'p_asignacionDouble','sintax.py',81),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',82),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',83),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',84),
  ('asignacionString -> VAR VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',87),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',88),
  ('asignacionString -> VAL VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',89),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',90),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',91),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',92),
  ('asignacionChar -> VAR VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',95),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',96),
  ('asignacionChar -> VAL VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',97),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',98),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',99),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',100),
  ('asignacionBoolean -> VAR VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',103),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',104),
  ('asignacionBoolean -> VAL VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',105),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',106),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',107),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',108),
  ('tipo -> CHARCLASS','tipo',1,'p_tipo','sintax.py',112),
  ('tipo -> STRINGCLASS','tipo',1,'p_tipo','sintax.py',113),
  ('tipo -> BOOLCLASS','tipo',1,'p_tipo','sintax.py',114),
  ('tipo -> INTCLASS','tipo',1,'p_tipo','sintax.py',115),
  ('tipo -> LONGCLASS','tipo',1,'p_tipo','sintax.py',116),
  ('tipo -> DOUBLECLASS','tipo',1,'p_tipo','sintax.py',117),
  ('tipo -> FLOATCLASS','tipo',1,'p_tipo','sintax.py',118),
  ('valor -> STRING','valor',1,'p_valor','sintax.py',121),
  ('valor -> CHAR','valor',1,'p_valor','sintax.py',122),
  ('valor -> VARIABLE','valor',1,'p_valor','sintax.py',123),
  ('valor -> numeros','valor',1,'p_valor','sintax.py',124),
  ('valor -> booleanos','valor',1,'p_valor','sintax.py',125),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintax.py',128),
  ('booleanos -> FLASE','booleanos',1,'p_booleanos','sintax.py',129),
  ('numeros -> INT','numeros',1,'p_numeros','sintax.py',132),
  ('numeros -> LONG','numeros',1,'p_numeros','sintax.py',133),
  ('numeros -> FLOAT','numeros',1,'p_numeros','sintax.py',134),
  ('numeros -> DOUBLE','numeros',1,'p_numeros','sintax.py',135),
  ('funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D','funcion',7,'p_funcion','sintax.py',140),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo','declaracion',3,'p_declaracion','sintax.py',145),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor','declaracion',5,'p_declaracion_defecto','sintax.py',148),
  ('parametro -> parametros','parametro',1,'p_parametro','sintax.py',151),
  ('parametro -> PAR_I PAR_D','parametro',2,'p_parametro','sintax.py',152),
  ('parametros -> PAR_I declaracion PAR_D','parametros',3,'p_parametros','sintax.py',155),
  ('parametros -> PAR_I declaracion PAR_D parametros','parametros',4,'p_parametros','sintax.py',156),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D','funcion',10,'p_funcion_return','sintax.py',161),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',164),
  ('dectipo -> DOBLE_PUNTO tipo','dectipo',2,'p_dectipo','sintax.py',167),
  ('dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D','dectipoTupla',4,'p_dectipoTupla','sintax.py',170),
  ('tipos -> tipo','tipos',1,'p_tipos','sintax.py',173),
  ('tipos -> tipo tiposentry','tipos',2,'p_tipos','sintax.py',174),
  ('tiposentry -> COMA tipo','tiposentry',2,'p_tipoentry','sintax.py',177),
  ('tiposentry -> COMA tipo tiposentry','tiposentry',3,'p_tipoentry','sintax.py',178),
  ('impresion -> PRINTLN PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',182),
  ('impresion -> PRINT PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',183),
  ('valorI -> valor MAS valorI','valorI',3,'p_valorI','sintax.py',186),
  ('valorI -> valor','valorI',1,'p_valorI','sintax.py',187),
  ('entrada -> READLINE PAR_I PAR_D','entrada',3,'p_entrada','sintax.py',192),
  ('array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',198),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D','array',12,'p_array','sintax.py',199),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',15,'p_array','sintax.py',200),
  ('list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D','list',7,'p_list','sintax.py',204),
  ('list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D','list',12,'p_list','sintax.py',205),
  ('valores -> valor','valores',1,'p_valores','sintax.py',210),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintax.py',211),
  ('while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','while',7,'p_while','sintax.py',217),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',10,'p_for','sintax.py',221),
  ('for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',9,'p_for','sintax.py',222),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',223),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',224),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',225),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',226),
  ('if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','if',7,'p_if','sintax.py',229),
  ('if -> if elseif','if',2,'p_if','sintax.py',230),
  ('if -> if else','if',2,'p_if','sintax.py',231),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','elseif',8,'p_elseif','sintax.py',235),
  ('else -> ELSE LLAVE_I contenido LLAVE_D','else',4,'p_else','sintax.py',238),
  ('else -> elseif else','else',2,'p_else','sintax.py',239),
  ('condicional -> valorC logicos condicional','condicional',3,'p_condicional','sintax.py',243),
  ('condicional -> valorC','condicional',1,'p_condicional','sintax.py',244),
  ('valorC -> VARIABLE','valorC',1,'p_valorC','sintax.py',247),
  ('valorC -> booleanos','valorC',1,'p_valorC','sintax.py',248),
  ('valorC -> relacional','valorC',1,'p_valorC','sintax.py',249),
  ('valorC -> NOT VARIABLE','valorC',2,'p_valorC','sintax.py',250),
  ('valorC -> NOT booleanos','valorC',2,'p_valorC','sintax.py',251),
  ('valorC -> NOT relacional','valorC',2,'p_valorC','sintax.py',252),
  ('logicos -> AND','logicos',1,'p_logicos','sintax.py',255),
  ('logicos -> OR','logicos',1,'p_logicos','sintax.py',256),
  ('logicos -> NOT','logicos',1,'p_logicos','sintax.py',257),
  ('relacional -> numeros comparacion numeros','relacional',3,'p_relacional','sintax.py',262),
  ('relacional -> aritmetica comparacion aritmetica','relacional',3,'p_relacional','sintax.py',263),
  ('relacional -> aritmetica comparacion numeros','relacional',3,'p_relacional','sintax.py',264),
  ('relacional -> numeros comparacion aritmetica','relacional',3,'p_relacional','sintax.py',265),
  ('relacional -> booleanos comparacion booleanos','relacional',3,'p_relacional','sintax.py',266),
  ('relacional -> STRING comparacion STRING','relacional',3,'p_relacional','sintax.py',267),
  ('relacional -> CHAR comparacion CHAR','relacional',3,'p_relacional','sintax.py',268),
  ('relacional -> VARIABLE comparacion numeros','relacional',3,'p_relacional','sintax.py',269),
  ('relacional -> numeros comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',270),
  ('relacional -> VARIABLE comparacion booleanos','relacional',3,'p_relacional','sintax.py',271),
  ('relacional -> booleanos comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',272),
  ('relacional -> VARIABLE comparacion STRING','relacional',3,'p_relacional','sintax.py',273),
  ('relacional -> STRING comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',274),
  ('relacional -> VARIABLE comparacion CHAR','relacional',3,'p_relacional','sintax.py',275),
  ('relacional -> CHAR comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',276),
  ('relacional -> VARIABLE comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',277),
  ('comparacion -> IGUAL_COMPARACION','comparacion',1,'p_comparacion','sintax.py',280),
  ('comparacion -> DIFERENTE','comparacion',1,'p_comparacion','sintax.py',281),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion','sintax.py',282),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion','sintax.py',283),
  ('aritmetica -> numeros aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',287),
  ('aritmetica -> VARIABLE aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',288),
  ('aritmetica -> numeros aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',289),
  ('aritmetica -> VARIABLE aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',290),
  ('aritmetica -> aritmetica aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',291),
  ('aritmetica -> aritmetica aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',292),
  ('aritmeticos -> MENOS','aritmeticos',1,'p_aritmeticos','sintax.py',295),
  ('aritmeticos -> MAS','aritmeticos',1,'p_aritmeticos','sintax.py',296),
  ('aritmeticos -> MULTIPLICACION','aritmeticos',1,'p_aritmeticos','sintax.py',297),
  ('aritmeticos -> DIVISION','aritmeticos',1,'p_aritmeticos','sintax.py',298),
  ('aritmeticos -> MOD','aritmeticos',1,'p_aritmeticos','sintax.py',299),
]

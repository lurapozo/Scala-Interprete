
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARRAYCLASS ARROBA BACKTICK BOOLCLASS CASE CATCH CHAR CHARCLASS CLASS COMA CORCHETE_D CORCHETE_I DEF DIFERENTE DIVISION DO DOBLE_PUNTO DOUBLE DOUBLECLASS ELSE EXTENDS FINAL FINALLY FLASE FLOAT FLOATCLASS FOR FOR_SOME FUNCION_FLECHA HASHTAG IF IGUAL IGUAL_COMPARACION IMPLICIT IMPORT INT INTCLASS ITERATOR LAZY LIBRERIA_IO LISTCLASS LLAVE_D LLAVE_I LONG LONGCLASS MACRO MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MOD MULTIPLICACION NEW NOT NULL OBJECT OR OVERRIDE PACKAGE PAR_D PAR_I PRINT PRINTLN PRIVATE PROTECTED PUNTO READLINE RETURN REVERSE SEALED STRING STRINGCLASS SUBGUION SUPER THIS THROW TO TO_DOUBLE TO_FLOAT TO_INT TO_LONG TRAIT TRUE TRY TYPE UNTIL VAL VAR VARIABLE WHILE WITH YIELD inicio : OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D\n  | IMPORT io inicio io : VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINEcuerpo : funcion\n  | funcall\n  | impresion\n  | entrada\n  | asignacion\n  | while\n  | for\n  | match\n  | if\n  | funcion cuerpo\n  | asignacion cuerpo\n  | while cuerpo\n  | for cuerpo\n  | if cuerpo\n  | match cuerpocontenido : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entrada\n  | while\n  | for\n  | match\n  | if\n  | aritmetica\n  | asignacion contenido\n  | reasignacion contenido\n  | funcall contenido\n  | impresion contenido\n  | entrada contenido\n  | while contenido\n  | for contenido\n  | if contenido\n  | match contenido\n  | aritmetica contenidocontenidoLine : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entradaasignacion : VAR VARIABLE IGUAL VARIABLE\n  | VAL VARIABLE IGUAL VARIABLE\n  | VAR VARIABLE IGUAL aritmetica\n  | VAL VARIABLE IGUAL aritmetica\n  | VAR VARIABLE IGUAL returnfun\n  | VAL VARIABLE IGUAL returnfun\n  | asignacionLong\n  | asignacionInt\n  | asignacionFloat\n  | asignacionDouble\n  | asignacionString\n  | asignacionChar\n  | asignacionBoolean\n  | array\n  | listasignacionLong : VAR VARIABLE IGUAL LONG\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG\n  | VAL VARIABLE IGUAL LONG\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLEasignacionInt : VAR VARIABLE IGUAL INT\n  | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT\n  | VAL VARIABLE IGUAL INT\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT\n  | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLEasignacionFloat : VAR VARIABLE IGUAL FLOAT\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT\n  | VAL VARIABLE IGUAL FLOAT\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLEasignacionDouble : VAR VARIABLE IGUAL DOUBLE\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE\n  | VAL VARIABLE IGUAL DOUBLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLEasignacionString : VAR VARIABLE IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAL VARIABLE IGUAL STRING\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLEasignacionChar : VAR VARIABLE IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAL VARIABLE IGUAL CHAR\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLEasignacionBoolean : VAR VARIABLE IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAL VARIABLE IGUAL booleanos\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLEreasignacion :  VARIABLE IGUAL valor\n      | VARIABLE IGUAL returnfun\n      | VARIABLE IGUAL aritmetica\n      | VARIABLE PAR_I INT PAR_D IGUAL valortipo : CHARCLASS\n  | STRINGCLASS\n  | BOOLCLASS\n  | INTCLASS\n  | LONGCLASS\n  | DOUBLECLASS\n  | FLOATCLASS\n  | ARRAYCLASS CORCHETE_I tipo CORCHETE_D\n  | LISTCLASS CORCHETE_I tipo CORCHETE_Dvalor : STRING\n  | CHAR\n  | VARIABLE\n  | numeros\n  | booleanos\n  | VARIABLE PAR_I VARIABLE PAR_D\n  | VARIABLE PAR_I INT PAR_Dbooleanos : TRUE\n  | FLASEnumeros : INT\n  | LONG\n  | FLOAT\n  | DOUBLEfuncion : DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D\n  | DEF VARIABLE parametro LLAVE_I contenido LLAVE_Ddeclaracion : VARIABLE DOBLE_PUNTO tipodeclaracion :  VARIABLE DOBLE_PUNTO tipo IGUAL valor parametro : parametros\n  | PAR_I PAR_D parametros : PAR_I declaracion PAR_D \n    | PAR_I declaracion PAR_D parametrosfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D\n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D \n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_Ddectipo : DOBLE_PUNTO tipo dectipoTupla : DOBLE_PUNTO PAR_I tipos PAR_Dtipos : tipo\n    | tipo tiposentrytiposentry : COMA tipo \n  | COMA tipo tiposentryimpresion : PRINTLN PAR_I valorI PAR_D\n  | PRINT PAR_I valorI PAR_DvalorI : valor MAS valorI\n  | valorentrada : READLINE PAR_I PAR_Dfuncall : VARIABLE varparen varparen : PAR_I valores PAR_D\n  | PAR_I PAR_D\n  | varparen PAR_I valores PAR_D\n  | varparen PAR_I PAR_D returnfun : returnCastable\n      | castingcallreturnCastable : entrada\n      | funcallcastingcall : returnCastable PUNTO castingfun\n      | VARIABLE PUNTO castingfuncastingfun : TO_INT\n    | TO_DOUBLE\n    | TO_FLOAT\n    | TO_LONGarray : VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | arrayInt\n  | arrayDoublelist : VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_Dvalores : valor\n  | valor COMA valorestuple : PAR_I valores PAR_Dasignacion : VAR VARIABLE IGUAL tuple \n      | VAL VARIABLE IGUAL tupleasignacion : VAR VARIABLE dectipoTupla IGUAL tuple \n      | VAL VARIABLE dectipoTupla IGUAL tuplewhile : WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_Dfor : FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_Dmatch : VARIABLE MATCH  LLAVE_I cases LLAVE_Dcases : casesInt\n    | casesLgn\n    | casesFlt\n    | casesDob\n    | casesStr\n    | casesChar\n    | casesBoolcaseInt : CASE INT FUNCION_FLECHA codeBlock casesInt : caseInt \n      | caseInt casesInt\n      | caseInt defcasecaseLgn : CASE LONG FUNCION_FLECHA codeBlock casesLgn : caseLgn \n      | caseLgn casesLgn\n      | caseLgn defcasecaseFlt : CASE FLOAT FUNCION_FLECHA codeBlock casesFlt : caseFlt \n      | caseFlt casesFlt\n      | caseFlt defcasecaseDob : CASE DOUBLE FUNCION_FLECHA codeBlock casesDob : caseDob \n      | caseDob casesDob\n      | caseDob defcasecaseStr : CASE STRING FUNCION_FLECHA codeBlock casesStr : caseStr\n      | caseStr casesStr\n      | caseStr defcasecaseChar : CASE CHAR FUNCION_FLECHA codeBlock casesChar : caseChar\n      | caseChar casesChar\n      | caseChar defcasecaseBool : CASE booleanos FUNCION_FLECHA codeBlock casesBool : caseBool\n      | caseBool casesBool\n      | caseBool defcasedefcase : CASE SUBGUION FUNCION_FLECHA codeBlock codeBlock : contenidoLine\n      | LLAVE_I contenido LLAVE_Dif : IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | if elseif\n  | if else\n  elseif : ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseifelse : ELSE LLAVE_I contenido LLAVE_D\n  | elseif elsecondicional : valorC logicos condicional\n  | valorCvalorC : VARIABLE\n  | booleanos\n  | relacional\n  | NOT VARIABLE\n  | NOT booleanos\n  | NOT relacional\n  logicos : AND\n  | OR\n  | NOTrelacional : numeros comparacion numeros\n  | aritmetica comparacion aritmetica\n  | aritmetica comparacion numeros\n  | numeros comparacion aritmetica\n  | booleanos comparacion booleanos\n  | STRING comparacion STRING\n  | CHAR comparacion CHAR\n  | VARIABLE comparacion numeros\n  | numeros comparacion VARIABLE\n  | VARIABLE comparacion booleanos\n  | booleanos comparacion VARIABLE\n  | VARIABLE comparacion STRING\n  | STRING comparacion VARIABLE\n  | VARIABLE comparacion CHAR\n  | CHAR comparacion VARIABLE\n  | VARIABLE comparacion VARIABLEcomparacion : IGUAL_COMPARACION\n  | DIFERENTE\n  | MAYOR\n  | MENORaritmetica : numeros aritmeticos numeros\n  | VARIABLE aritmeticos numeros\n  | numeros aritmeticos VARIABLE\n  | VARIABLE aritmeticos VARIABLE\n  | aritmetica aritmeticos numeros\n  | aritmetica aritmeticos VARIABLEaritmeticos : MENOS\n  | MAS\n  | MULTIPLICACION\n  | DIVISION\n  | MODarrayInt : VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D\n  arrayDouble : VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_DvaloresInt : INT\n  | valoresInt COMA INTvaloresDouble : DOUBLE\n  | valoresDouble COMA DOUBLE'
    
_lr_action_items = {'OBJECT':([0,5,359,],[2,2,-3,]),'IMPORT':([0,5,359,],[3,3,-3,]),'$end':([1,8,45,],[0,-2,-1,]),'VARIABLE':([2,3,7,9,12,16,17,18,19,20,21,25,26,27,28,29,30,31,32,33,34,35,39,40,42,44,52,53,56,57,61,62,63,64,65,68,70,71,72,73,74,75,76,77,78,79,80,82,85,88,92,93,96,104,109,114,131,132,133,134,136,137,138,139,140,141,142,143,144,145,149,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,186,187,188,189,190,191,192,193,194,195,196,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,229,230,231,232,233,234,236,239,240,273,284,285,286,304,307,308,309,310,311,312,313,314,318,319,320,321,322,323,324,325,326,327,330,337,338,344,345,349,350,355,358,361,362,363,364,365,366,367,368,369,371,372,373,374,375,378,379,380,383,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,416,417,418,419,420,421,422,423,424,425,426,427,428,429,439,442,455,456,458,460,464,465,470,471,474,478,481,487,488,493,503,510,511,516,517,518,519,532,533,534,536,537,538,539,540,541,542,543,548,550,551,552,562,565,566,568,570,573,575,576,581,586,587,],[4,6,10,41,10,10,10,10,10,10,55,59,60,-50,-51,-52,-53,-54,-55,-56,-57,-58,-176,-177,-157,72,-235,-236,72,72,101,110,101,112,72,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,146,155,-156,159,186,226,235,-161,-158,72,270,101,146,146,146,146,146,146,146,146,146,146,146,-152,72,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,72,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,101,-249,-250,-251,332,337,-268,-269,-270,-271,-278,-279,-280,-281,-282,340,343,345,348,350,352,354,356,-160,-195,-239,371,72,146,72,-186,394,396,398,400,402,404,406,72,72,-187,416,418,420,422,424,426,428,146,-275,-273,-272,-274,-276,-277,433,146,448,448,448,448,448,448,448,-119,-120,-116,-101,-102,-103,-117,-128,146,146,155,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,448,146,146,485,-127,489,72,-172,-174,-178,-188,146,-234,72,512,520,146,-237,-104,-140,-139,-141,-142,-190,146,146,-238,-136,-135,-137,-138,-144,-143,-145,72,-189,146,146,72,-191,-192,-283,-284,-180,-193,-194,-179,-173,-175,]),'LLAVE_I':([4,43,54,83,86,87,148,153,209,237,288,289,300,361,362,363,364,365,366,367,370,384,435,439,475,507,508,530,531,],[7,66,85,85,149,-131,286,-132,330,358,379,380,-133,442,442,442,442,442,442,442,455,-134,478,442,503,533,534,551,552,]),'PUNTO':([6,41,42,68,92,112,114,131,159,172,174,175,186,239,371,489,512,520,],[9,64,-157,-159,-156,238,-161,-158,303,306,-164,-165,303,-160,303,303,303,303,]),'DEF':([7,12,16,17,18,19,20,27,28,29,30,31,32,33,34,35,39,40,42,52,53,68,75,76,77,78,79,80,82,92,114,131,159,160,161,162,163,164,165,166,167,168,169,172,173,174,175,186,187,188,189,190,191,192,193,194,195,196,239,240,273,307,320,337,338,344,345,349,350,378,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,416,417,418,419,420,421,422,423,424,425,426,427,428,429,458,465,470,471,474,481,510,516,517,518,519,532,536,537,538,539,540,541,542,543,550,565,566,568,570,573,575,576,581,586,587,],[21,21,21,21,21,21,21,-50,-51,-52,-53,-54,-55,-56,-57,-58,-176,-177,-157,-235,-236,-159,-123,-124,-125,-126,-121,-122,-240,-156,-161,-158,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-195,-239,-186,-187,-275,-273,-272,-274,-276,-277,-128,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,-127,-172,-174,-178,-188,-234,-237,-140,-139,-141,-142,-190,-238,-136,-135,-137,-138,-144,-143,-145,-189,-191,-192,-283,-284,-180,-193,-194,-179,-173,-175,]),'PRINTLN':([7,12,16,17,18,19,20,27,28,29,30,31,32,33,34,35,39,40,42,52,53,68,70,71,72,73,74,75,76,77,78,79,80,82,85,92,114,131,136,137,138,139,140,141,142,143,144,145,149,156,158,159,160,161,162,163,164,165,166,167,168,169,172,173,174,175,186,187,188,189,190,191,192,193,194,195,196,239,240,273,286,307,320,330,337,338,344,345,349,350,358,361,362,363,364,365,366,367,368,369,371,372,373,374,375,378,379,380,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,416,417,418,419,420,421,422,423,424,425,426,427,428,429,439,442,455,458,465,470,471,474,478,481,503,510,511,516,517,518,519,532,533,534,536,537,538,539,540,541,542,543,550,551,552,565,566,568,570,573,575,576,581,586,587,],[22,22,22,22,22,22,22,-50,-51,-52,-53,-54,-55,-56,-57,-58,-176,-177,-157,-235,-236,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,22,-156,-161,-158,22,22,22,22,22,22,22,22,22,22,22,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-195,-239,22,-186,-187,22,-275,-273,-272,-274,-276,-277,22,22,22,22,22,22,22,22,-119,-120,-116,-101,-102,-103,-117,-128,22,22,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,22,22,22,-127,-172,-174,-178,-188,22,-234,22,-237,-104,-140,-139,-141,-142,-190,22,22,-238,-136,-135,-137,-138,-144,-143,-145,-189,22,22,-191,-192,-283,-284,-180,-193,-194,-179,-173,-175,]),'PRINT':([7,12,16,17,18,19,20,27,28,29,30,31,32,33,34,35,39,40,42,52,53,68,70,71,72,73,74,75,76,77,78,79,80,82,85,92,114,131,136,137,138,139,140,141,142,143,144,145,149,156,158,159,160,161,162,163,164,165,166,167,168,169,172,173,174,175,186,187,188,189,190,191,192,193,194,195,196,239,240,273,286,307,320,330,337,338,344,345,349,350,358,361,362,363,364,365,366,367,368,369,371,372,373,374,375,378,379,380,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,416,417,418,419,420,421,422,423,424,425,426,427,428,429,439,442,455,458,465,470,471,474,478,481,503,510,511,516,517,518,519,532,533,534,536,537,538,539,540,541,542,543,550,551,552,565,566,568,570,573,575,576,581,586,587,],[23,23,23,23,23,23,23,-50,-51,-52,-53,-54,-55,-56,-57,-58,-176,-177,-157,-235,-236,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,23,-156,-161,-158,23,23,23,23,23,23,23,23,23,23,23,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-195,-239,23,-186,-187,23,-275,-273,-272,-274,-276,-277,23,23,23,23,23,23,23,23,-119,-120,-116,-101,-102,-103,-117,-128,23,23,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,23,23,23,-127,-172,-174,-178,-188,23,-234,23,-237,-104,-140,-139,-141,-142,-190,23,23,-238,-136,-135,-137,-138,-144,-143,-145,-189,23,23,-191,-192,-283,-284,-180,-193,-194,-179,-173,-175,]),'READLINE':([7,12,16,17,18,19,20,27,28,29,30,31,32,33,34,35,39,40,42,52,53,68,70,71,72,73,74,75,76,77,78,79,80,82,85,92,93,96,114,131,136,137,138,139,140,141,142,143,144,145,149,156,158,159,160,161,162,163,164,165,166,167,168,169,172,173,174,175,186,187,188,189,190,191,192,193,194,195,196,238,239,240,273,284,286,307,320,330,337,338,344,345,349,350,358,361,362,363,364,365,366,367,368,369,371,372,373,374,375,378,379,380,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,416,417,418,419,420,421,422,423,424,425,426,427,428,429,439,442,455,458,460,465,470,471,474,478,481,488,493,503,510,511,516,517,518,519,532,533,534,536,537,538,539,540,541,542,543,550,551,552,565,566,568,570,573,575,576,581,586,587,],[24,24,24,24,24,24,24,-50,-51,-52,-53,-54,-55,-56,-57,-58,-176,-177,-157,-235,-236,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,24,-156,24,24,-161,-158,24,24,24,24,24,24,24,24,24,24,24,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,359,-160,-195,-239,24,24,-186,-187,24,-275,-273,-272,-274,-276,-277,24,24,24,24,24,24,24,24,-119,-120,-116,-101,-102,-103,-117,-128,24,24,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,24,24,24,-127,24,-172,-174,-178,-188,24,-234,24,24,24,-237,-104,-140,-139,-141,-142,-190,24,24,-238,-136,-135,-137,-138,-144,-143,-145,-189,24,24,-191,-192,-283,-284,-180,-193,-194,-179,-173,-175,]),'VAR':([7,12,16,17,18,19,20,27,28,29,30,31,32,33,34,35,39,40,42,52,53,62,68,70,71,72,73,74,75,76,77,78,79,80,82,85,92,114,131,136,137,138,139,140,141,142,143,144,145,149,156,158,159,160,161,162,163,164,165,166,167,168,169,172,173,174,175,186,187,188,189,190,191,192,193,194,195,196,239,240,273,286,307,320,330,337,338,344,345,349,350,358,361,362,363,364,365,366,367,368,369,371,372,373,374,375,378,379,380,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,416,417,418,419,420,421,422,423,424,425,426,427,428,429,439,442,455,458,465,470,471,474,478,481,503,510,511,516,517,518,519,532,533,534,536,537,538,539,540,541,542,543,550,551,552,565,566,568,570,573,575,576,581,586,587,],[25,25,25,25,25,25,25,-50,-51,-52,-53,-54,-55,-56,-57,-58,-176,-177,-157,-235,-236,109,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,25,-156,-161,-158,25,25,25,25,25,25,25,25,25,25,25,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-195,-239,25,-186,-187,25,-275,-273,-272,-274,-276,-277,25,25,25,25,25,25,25,25,-119,-120,-116,-101,-102,-103,-117,-128,25,25,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,25,25,25,-127,-172,-174,-178,-188,25,-234,25,-237,-104,-140,-139,-141,-142,-190,25,25,-238,-136,-135,-137,-138,-144,-143,-145,-189,25,25,-191,-192,-283,-284,-180,-193,-194,-179,-173,-175,]),'VAL':([7,12,16,17,18,19,20,27,28,29,30,31,32,33,34,35,39,40,42,52,53,68,70,71,72,73,74,75,76,77,78,79,80,82,85,92,114,131,136,137,138,139,140,141,142,143,144,145,149,156,158,159,160,161,162,163,164,165,166,167,168,169,172,173,174,175,186,187,188,189,190,191,192,193,194,195,196,239,240,273,286,307,320,330,337,338,344,345,349,350,358,361,362,363,364,365,366,367,368,369,371,372,373,374,375,378,379,380,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,416,417,418,419,420,421,422,423,424,425,426,427,428,429,439,442,455,458,465,470,471,474,478,481,503,510,511,516,517,518,519,532,533,534,536,537,538,539,540,541,542,543,550,551,552,565,566,568,570,573,575,576,581,586,587,],[26,26,26,26,26,26,26,-50,-51,-52,-53,-54,-55,-56,-57,-58,-176,-177,-157,-235,-236,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,26,-156,-161,-158,26,26,26,26,26,26,26,26,26,26,26,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-195,-239,26,-186,-187,26,-275,-273,-272,-274,-276,-277,26,26,26,26,26,26,26,26,-119,-120,-116,-101,-102,-103,-117,-128,26,26,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,26,26,26,-127,-172,-174,-178,-188,26,-234,26,-237,-104,-140,-139,-141,-142,-190,26,26,-238,-136,-135,-137,-138,-144,-143,-145,-189,26,26,-191,-192,-283,-284,-180,-193,-194,-179,-173,-175,]),'WHILE':([7,12,16,17,18,19,20,27,28,29,30,31,32,33,34,35,39,40,42,52,53,68,70,71,72,73,74,75,76,77,78,79,80,82,85,92,114,131,136,137,138,139,140,141,142,143,144,145,149,156,158,159,160,161,162,163,164,165,166,167,168,169,172,173,174,175,186,187,188,189,190,191,192,193,194,195,196,239,240,273,286,307,320,330,337,338,344,345,349,350,358,368,369,371,372,373,374,375,378,379,380,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,416,417,418,419,420,421,422,423,424,425,426,427,428,429,442,455,458,465,470,471,474,478,481,503,510,511,516,517,518,519,532,533,534,536,537,538,539,540,541,542,543,550,551,552,565,566,568,570,573,575,576,581,586,587,],[36,36,36,36,36,36,36,-50,-51,-52,-53,-54,-55,-56,-57,-58,-176,-177,-157,-235,-236,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,36,-156,-161,-158,36,36,36,36,36,36,36,36,36,36,36,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-195,-239,36,-186,-187,36,-275,-273,-272,-274,-276,-277,36,-119,-120,-116,-101,-102,-103,-117,-128,36,36,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,36,36,-127,-172,-174,-178,-188,36,-234,36,-237,-104,-140,-139,-141,-142,-190,36,36,-238,-136,-135,-137,-138,-144,-143,-145,-189,36,36,-191,-192,-283,-284,-180,-193,-194,-179,-173,-175,]),'FOR':([7,12,16,17,18,19,20,27,28,29,30,31,32,33,34,35,39,40,42,52,53,68,70,71,72,73,74,75,76,77,78,79,80,82,85,92,114,131,136,137,138,139,140,141,142,143,144,145,149,156,158,159,160,161,162,163,164,165,166,167,168,169,172,173,174,175,186,187,188,189,190,191,192,193,194,195,196,239,240,273,286,307,320,330,337,338,344,345,349,350,358,368,369,371,372,373,374,375,378,379,380,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,416,417,418,419,420,421,422,423,424,425,426,427,428,429,442,455,458,465,470,471,474,478,481,503,510,511,516,517,518,519,532,533,534,536,537,538,539,540,541,542,543,550,551,552,565,566,568,570,573,575,576,581,586,587,],[37,37,37,37,37,37,37,-50,-51,-52,-53,-54,-55,-56,-57,-58,-176,-177,-157,-235,-236,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,37,-156,-161,-158,37,37,37,37,37,37,37,37,37,37,37,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-195,-239,37,-186,-187,37,-275,-273,-272,-274,-276,-277,37,-119,-120,-116,-101,-102,-103,-117,-128,37,37,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,37,37,-127,-172,-174,-178,-188,37,-234,37,-237,-104,-140,-139,-141,-142,-190,37,37,-238,-136,-135,-137,-138,-144,-143,-145,-189,37,37,-191,-192,-283,-284,-180,-193,-194,-179,-173,-175,]),'IF':([7,12,16,17,18,19,20,27,28,29,30,31,32,33,34,35,39,40,42,52,53,54,68,70,71,72,73,74,75,76,77,78,79,80,82,83,85,92,114,131,136,137,138,139,140,141,142,143,144,145,149,156,158,159,160,161,162,163,164,165,166,167,168,169,172,173,174,175,186,187,188,189,190,191,192,193,194,195,196,239,240,273,286,307,320,330,337,338,344,345,349,350,358,368,369,371,372,373,374,375,378,379,380,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,416,417,418,419,420,421,422,423,424,425,426,427,428,429,442,455,458,465,470,471,474,478,481,503,510,511,516,517,518,519,532,533,534,535,536,537,538,539,540,541,542,543,550,551,552,565,566,568,570,573,575,576,581,586,587,],[38,38,38,38,38,38,38,-50,-51,-52,-53,-54,-55,-56,-57,-58,-176,-177,-157,-235,-236,84,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,84,38,-156,-161,-158,38,38,38,38,38,38,38,38,38,38,38,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-195,-239,38,-186,-187,38,-275,-273,-272,-274,-276,-277,38,-119,-120,-116,-101,-102,-103,-117,-128,38,38,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,38,38,-127,-172,-174,-178,-188,38,-234,38,-237,-104,-140,-139,-141,-142,-190,38,38,84,-238,-136,-135,-137,-138,-144,-143,-145,-189,38,38,-191,-192,-283,-284,-180,-193,-194,-179,-173,-175,]),'MATCH':([10,146,],[43,43,]),'PAR_I':([10,22,23,24,36,37,38,42,55,68,72,84,93,95,96,98,114,131,146,152,159,170,176,186,197,198,199,239,300,371,448,485,489,493,512,520,524,525,527,549,577,580,],[44,56,57,58,61,62,63,65,88,-159,133,134,171,185,171,185,-161,-158,285,185,44,304,171,44,318,319,171,-160,383,456,285,133,456,171,456,44,545,546,548,562,582,583,]),'LLAVE_D':([11,12,13,14,15,16,17,18,19,20,27,28,29,30,31,32,33,34,35,39,40,42,46,47,48,49,50,51,52,53,68,70,71,72,73,74,75,76,77,78,79,80,82,92,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,135,136,137,138,139,140,141,142,143,144,145,156,158,159,160,161,162,163,164,165,166,167,168,169,172,173,174,175,186,187,188,189,190,191,192,193,194,195,196,239,240,241,242,244,245,247,248,250,251,253,254,256,257,259,260,273,274,275,276,277,278,279,280,281,282,283,287,307,320,337,338,344,345,349,350,368,369,371,372,373,374,375,377,378,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,416,417,418,419,420,421,422,423,424,425,426,427,428,429,432,438,440,441,443,444,445,446,447,449,450,451,452,453,454,458,465,470,471,474,481,482,483,484,489,490,491,492,506,509,510,511,512,513,514,515,516,517,518,519,520,521,522,529,532,536,537,538,539,540,541,542,543,550,553,554,563,564,565,566,568,570,573,575,576,581,586,587,],[45,-4,-5,-6,-7,-8,-9,-10,-11,-12,-50,-51,-52,-53,-54,-55,-56,-57,-58,-176,-177,-157,-13,-14,-15,-16,-18,-17,-235,-236,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,-156,-161,240,-196,-197,-198,-199,-200,-201,-202,-204,-208,-212,-216,-220,-224,-228,-158,273,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-195,-205,-206,-209,-210,-213,-214,-217,-218,-221,-222,-225,-226,-229,-230,-239,-29,-30,-31,-32,-33,-34,-35,-37,-36,-38,378,-186,-187,-275,-273,-272,-274,-276,-277,-119,-120,-116,-101,-102,-103,-117,458,-128,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,474,481,-203,-232,-39,-40,-41,-42,-43,-207,-211,-215,-219,-223,-227,-127,-172,-174,-178,-188,-234,-231,509,510,516,517,518,519,532,-233,-237,-104,537,538,539,540,-140,-139,-141,-142,541,542,543,550,-190,-238,-136,-135,-137,-138,-144,-143,-145,-189,565,566,575,576,-191,-192,-283,-284,-180,-193,-194,-179,-173,-175,]),'ELSE':([20,52,53,81,82,144,273,481,510,536,],[54,83,-236,83,-240,54,-239,-234,535,-238,]),'INT':([27,28,29,30,31,32,33,34,35,39,40,42,44,52,53,56,57,61,63,65,68,70,71,72,73,74,75,76,77,78,79,80,82,85,92,93,96,104,114,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,149,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,186,187,188,189,190,191,192,193,194,195,196,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,229,230,231,232,236,239,240,243,273,284,285,286,304,307,309,318,319,320,322,330,337,338,344,345,349,350,355,358,368,369,371,372,373,374,375,379,380,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,416,417,418,419,420,421,422,423,424,425,426,427,428,429,436,437,442,455,456,460,464,465,470,471,474,476,477,478,481,487,488,503,510,511,532,533,534,536,545,548,550,551,552,562,565,566,568,569,570,573,575,576,581,582,583,586,587,],[-50,-51,-52,-53,-54,-55,-56,-57,-58,-176,-177,-157,75,-235,-236,75,75,75,75,75,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,75,-156,164,191,75,-161,262,-158,75,271,75,75,75,75,75,75,75,75,75,75,75,75,-152,75,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,75,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,75,-249,-250,-251,75,75,-268,-269,-270,-271,-278,-279,-280,-281,-282,75,75,75,75,357,-160,-195,262,-239,75,376,75,75,-186,397,75,75,-187,419,75,-275,-273,-272,-274,-276,-277,434,75,-119,-120,-116,-101,-102,-103,-117,75,75,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,479,480,75,75,486,75,75,-172,-174,-178,-188,504,505,75,-234,75,75,75,-237,-104,-190,75,75,-238,557,75,-189,75,75,75,-191,-192,-283,578,-284,-180,-193,-194,-179,584,585,-173,-175,]),'LONG':([27,28,29,30,31,32,33,34,35,39,40,42,44,52,53,56,57,61,63,65,68,70,71,72,73,74,75,76,77,78,79,80,82,85,92,93,96,104,114,130,131,132,134,136,137,138,139,140,141,142,143,144,145,149,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,186,187,188,189,190,191,192,193,194,195,196,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,229,230,231,232,239,240,246,273,284,285,286,304,307,308,318,319,320,321,330,337,338,344,345,349,350,358,368,369,371,372,373,374,375,379,380,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,416,417,418,419,420,421,422,423,424,425,426,427,428,429,442,455,456,460,464,465,470,471,474,478,481,487,488,503,510,511,532,533,534,536,548,550,551,552,562,565,566,568,570,573,575,576,581,586,587,],[-50,-51,-52,-53,-54,-55,-56,-57,-58,-176,-177,-157,76,-235,-236,76,76,76,76,76,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,76,-156,163,190,76,-161,263,-158,76,76,76,76,76,76,76,76,76,76,76,76,76,-152,76,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,76,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,76,-249,-250,-251,76,76,-268,-269,-270,-271,-278,-279,-280,-281,-282,76,76,76,76,-160,-195,263,-239,76,76,76,76,-186,395,76,76,-187,417,76,-275,-273,-272,-274,-276,-277,76,-119,-120,-116,-101,-102,-103,-117,76,76,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,76,76,76,76,76,-172,-174,-178,-188,76,-234,76,76,76,-237,-104,-190,76,76,-238,76,-189,76,76,76,-191,-192,-283,-284,-180,-193,-194,-179,-173,-175,]),'FLOAT':([27,28,29,30,31,32,33,34,35,39,40,42,44,52,53,56,57,61,63,65,68,70,71,72,73,74,75,76,77,78,79,80,82,85,92,93,96,104,114,130,131,132,134,136,137,138,139,140,141,142,143,144,145,149,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,186,187,188,189,190,191,192,193,194,195,196,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,229,230,231,232,239,240,249,273,284,285,286,304,307,310,318,319,320,323,330,337,338,344,345,349,350,358,368,369,371,372,373,374,375,379,380,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,416,417,418,419,420,421,422,423,424,425,426,427,428,429,442,455,456,460,464,465,470,471,474,478,481,487,488,503,510,511,532,533,534,536,548,550,551,552,562,565,566,568,570,573,575,576,581,586,587,],[-50,-51,-52,-53,-54,-55,-56,-57,-58,-176,-177,-157,77,-235,-236,77,77,77,77,77,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,77,-156,165,192,77,-161,264,-158,77,77,77,77,77,77,77,77,77,77,77,77,77,-152,77,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,77,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,77,-249,-250,-251,77,77,-268,-269,-270,-271,-278,-279,-280,-281,-282,77,77,77,77,-160,-195,264,-239,77,77,77,77,-186,399,77,77,-187,421,77,-275,-273,-272,-274,-276,-277,77,-119,-120,-116,-101,-102,-103,-117,77,77,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,77,77,77,77,77,-172,-174,-178,-188,77,-234,77,77,77,-237,-104,-190,77,77,-238,77,-189,77,77,77,-191,-192,-283,-284,-180,-193,-194,-179,-173,-175,]),'DOUBLE':([27,28,29,30,31,32,33,34,35,39,40,42,44,52,53,56,57,61,63,65,68,70,71,72,73,74,75,76,77,78,79,80,82,85,92,93,96,104,114,130,131,132,134,136,137,138,139,140,141,142,143,144,145,149,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,186,187,188,189,190,191,192,193,194,195,196,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,229,230,231,232,239,240,252,273,284,285,286,304,307,311,318,319,320,324,330,337,338,344,345,349,350,358,368,369,371,372,373,374,375,379,380,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,416,417,418,419,420,421,422,423,424,425,426,427,428,429,442,455,456,460,464,465,470,471,474,478,481,487,488,503,510,511,532,533,534,536,546,548,550,551,552,562,565,566,568,570,571,573,575,576,581,586,587,],[-50,-51,-52,-53,-54,-55,-56,-57,-58,-176,-177,-157,78,-235,-236,78,78,78,78,78,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,78,-156,166,193,78,-161,265,-158,78,78,78,78,78,78,78,78,78,78,78,78,78,-152,78,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,78,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,78,-249,-250,-251,78,78,-268,-269,-270,-271,-278,-279,-280,-281,-282,78,78,78,78,-160,-195,265,-239,78,78,78,78,-186,401,78,78,-187,423,78,-275,-273,-272,-274,-276,-277,78,-119,-120,-116,-101,-102,-103,-117,78,78,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,78,78,78,78,78,-172,-174,-178,-188,78,-234,78,78,78,-237,-104,-190,78,78,-238,559,78,-189,78,78,78,-191,-192,-283,-284,579,-180,-193,-194,-179,-173,-175,]),'RETURN':([27,28,29,30,31,32,33,34,35,39,40,42,52,53,68,70,71,72,73,74,75,76,77,78,79,80,82,92,114,131,136,137,138,139,140,141,142,143,144,145,156,158,159,160,161,162,163,164,165,166,167,168,169,172,173,174,175,186,187,188,189,190,191,192,193,194,195,196,239,240,273,274,275,276,277,278,279,280,281,282,283,307,320,337,338,344,345,349,350,368,369,371,372,373,374,375,379,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,416,417,418,419,420,421,422,423,424,425,426,427,428,429,459,461,465,470,471,474,481,510,511,532,536,550,565,566,568,570,573,575,576,581,586,587,],[-50,-51,-52,-53,-54,-55,-56,-57,-58,-176,-177,-157,-235,-236,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,-156,-161,-158,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-195,-239,-29,-30,-31,-32,-33,-34,-35,-37,-36,-38,-186,-187,-275,-273,-272,-274,-276,-277,-119,-120,-116,-101,-102,-103,-117,460,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,488,493,-172,-174,-178,-188,-234,-237,-104,-190,-238,-189,-191,-192,-283,-284,-180,-193,-194,-179,-173,-175,]),'CASE':([27,28,29,30,31,32,33,34,35,39,40,42,66,68,70,71,72,73,74,75,76,77,78,79,80,92,114,123,124,125,126,127,128,129,131,156,158,159,160,161,162,163,164,165,166,167,168,169,172,173,174,175,186,187,188,189,190,191,192,193,194,195,196,239,307,320,337,338,344,345,349,350,368,369,371,372,373,374,375,386,387,388,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,416,417,418,419,420,421,422,423,424,425,426,427,428,429,440,441,443,444,445,446,447,449,450,451,452,453,454,465,470,471,509,511,568,570,573,581,586,587,],[-50,-51,-52,-53,-54,-55,-56,-57,-58,-176,-177,-157,130,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-156,-161,243,246,249,252,255,258,261,-158,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-186,-187,-275,-273,-272,-274,-276,-277,-119,-120,-116,-101,-102,-103,-117,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,-203,-232,-39,-40,-41,-42,-43,-207,-211,-215,-219,-223,-227,-172,-174,-178,-233,-104,-283,-284,-180,-179,-173,-175,]),'PAR_D':([44,58,65,67,69,70,71,72,73,74,75,76,77,78,79,80,88,89,90,91,99,100,101,102,103,111,113,154,226,227,228,269,270,271,272,285,291,292,293,294,295,296,297,302,305,316,317,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,356,368,369,376,385,391,412,414,415,433,456,469,479,480,485,486,494,495,496,500,504,505,556,557,558,559,561,574,578,579,584,585,],[68,92,114,131,-181,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,153,156,-155,158,209,-242,-243,-244,-245,237,239,300,-246,-247,-248,-182,368,369,370,68,-105,-106,-107,-108,-109,-110,-111,-154,392,411,-148,-241,-267,-259,-261,-263,-265,-275,-273,-256,-262,-252,-255,-260,-272,-274,-253,-254,-276,-277,-257,-264,-258,-266,435,-119,-120,457,-129,465,-149,470,471,475,68,-150,507,508,368,369,-112,-113,-130,-151,530,531,568,-285,570,-287,573,581,-286,-288,586,587,]),'STRING':([44,56,57,61,63,65,93,96,104,130,132,134,157,171,210,211,212,213,214,216,217,218,219,233,255,284,285,304,312,318,319,325,456,460,464,487,488,548,562,],[70,70,70,107,107,70,167,194,107,266,70,107,70,70,107,-249,-250,-251,335,-268,-269,-270,-271,351,266,70,70,70,403,70,70,425,70,70,70,70,70,70,70,]),'CHAR':([44,56,57,61,63,65,93,96,104,130,132,134,157,171,210,211,212,213,214,216,217,218,219,234,258,284,285,304,313,318,319,326,456,460,464,487,488,548,562,],[71,71,71,108,108,71,168,195,108,267,71,108,71,71,108,-249,-250,-251,336,-268,-269,-270,-271,353,267,71,71,71,405,71,71,427,71,71,71,71,71,71,71,]),'TRUE':([44,56,57,61,63,65,93,96,104,130,132,134,157,171,210,211,212,213,214,216,217,218,219,225,261,284,285,304,314,318,319,327,456,460,464,487,488,548,562,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-249,-250,-251,79,-268,-269,-270,-271,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'FLASE':([44,56,57,61,63,65,93,96,104,130,132,134,157,171,210,211,212,213,214,216,217,218,219,225,261,284,285,304,314,318,319,327,456,460,464,487,488,548,562,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-249,-250,-251,80,-268,-269,-270,-271,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'IGUAL':([59,60,86,87,94,97,146,150,151,153,177,178,179,180,181,182,183,200,201,202,203,204,205,206,290,291,292,293,294,295,296,297,300,384,385,411,448,457,466,467,468,472,473,494,495,],[93,96,148,-131,176,199,284,288,289,-132,308,309,310,311,312,313,314,321,322,323,324,325,326,327,-146,-105,-106,-107,-108,-109,-110,-111,-133,-134,464,-147,284,487,497,498,499,501,502,-112,-113,]),'DOBLE_PUNTO':([59,60,86,87,153,155,300,384,],[95,98,152,-131,-132,301,-133,-134,]),'NOT':([61,63,75,76,77,78,79,80,100,101,102,103,134,210,211,212,213,226,227,228,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,],[104,104,-123,-124,-125,-126,-121,-122,213,-243,-244,-245,104,104,-249,-250,-251,-246,-247,-248,-267,-259,-261,-263,-265,-275,-273,-256,-262,-252,-255,-260,-272,-274,-253,-254,-276,-277,-257,-264,-258,-266,]),'COMA':([69,70,71,72,73,74,75,76,77,78,79,80,291,292,293,294,295,296,297,317,368,369,376,469,485,486,494,495,556,557,558,559,578,579,],[132,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-105,-106,-107,-108,-109,-110,-111,413,-119,-120,-123,413,-116,-123,-112,-113,569,-285,571,-287,-286,-288,]),'MAS':([70,71,72,73,74,75,76,77,78,79,80,90,101,105,106,145,146,147,159,160,163,164,165,166,186,187,190,191,192,193,226,337,338,341,342,343,344,345,346,347,348,349,350,368,369,371,374,375,489,492,512,515,],[-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,157,221,221,221,221,221,221,221,221,-124,-123,-125,-126,221,221,-124,-123,-125,-126,221,-275,-273,221,221,221,-272,-274,221,221,221,-276,-277,-119,-120,221,221,221,221,221,221,221,]),'IGUAL_COMPARACION':([75,76,77,78,79,80,101,102,105,106,107,108,226,227,337,338,344,345,349,350,],[-123,-124,-125,-126,-121,-122,216,216,216,216,216,216,216,216,-275,-273,-272,-274,-276,-277,]),'DIFERENTE':([75,76,77,78,79,80,101,102,105,106,107,108,226,227,337,338,344,345,349,350,],[-123,-124,-125,-126,-121,-122,217,217,217,217,217,217,217,217,-275,-273,-272,-274,-276,-277,]),'MAYOR':([75,76,77,78,79,80,101,102,105,106,107,108,226,227,337,338,344,345,349,350,],[-123,-124,-125,-126,-121,-122,218,218,218,218,218,218,218,218,-275,-273,-272,-274,-276,-277,]),'MENOR':([75,76,77,78,79,80,101,102,105,106,107,108,226,227,337,338,344,345,349,350,],[-123,-124,-125,-126,-121,-122,219,219,219,219,219,219,219,219,-275,-273,-272,-274,-276,-277,]),'MENOS':([75,76,77,78,101,105,106,145,146,147,159,160,163,164,165,166,186,187,190,191,192,193,226,337,338,341,342,343,344,345,346,347,348,349,350,371,374,375,489,492,512,515,],[-123,-124,-125,-126,220,220,220,220,220,220,220,220,-124,-123,-125,-126,220,220,-124,-123,-125,-126,220,-275,-273,220,220,220,-272,-274,220,220,220,-276,-277,220,220,220,220,220,220,220,]),'MULTIPLICACION':([75,76,77,78,101,105,106,145,146,147,159,160,163,164,165,166,186,187,190,191,192,193,226,337,338,341,342,343,344,345,346,347,348,349,350,371,374,375,489,492,512,515,],[-123,-124,-125,-126,222,222,222,222,222,222,222,222,-124,-123,-125,-126,222,222,-124,-123,-125,-126,222,-275,-273,222,222,222,-272,-274,222,222,222,-276,-277,222,222,222,222,222,222,222,]),'DIVISION':([75,76,77,78,101,105,106,145,146,147,159,160,163,164,165,166,186,187,190,191,192,193,226,337,338,341,342,343,344,345,346,347,348,349,350,371,374,375,489,492,512,515,],[-123,-124,-125,-126,223,223,223,223,223,223,223,223,-124,-123,-125,-126,223,223,-124,-123,-125,-126,223,-275,-273,223,223,223,-272,-274,223,223,223,-276,-277,223,223,223,223,223,223,223,]),'MOD':([75,76,77,78,101,105,106,145,146,147,159,160,163,164,165,166,186,187,190,191,192,193,226,337,338,341,342,343,344,345,346,347,348,349,350,371,374,375,489,492,512,515,],[-123,-124,-125,-126,224,224,224,224,224,224,224,224,-124,-123,-125,-126,224,224,-124,-123,-125,-126,224,-275,-273,224,224,224,-272,-274,224,224,224,-276,-277,224,224,224,224,224,224,224,]),'AND':([75,76,77,78,79,80,100,101,102,103,226,227,228,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,],[-123,-124,-125,-126,-121,-122,211,-243,-244,-245,-246,-247,-248,-267,-259,-261,-263,-265,-275,-273,-256,-262,-252,-255,-260,-272,-274,-253,-254,-276,-277,-257,-264,-258,-266,]),'OR':([75,76,77,78,79,80,100,101,102,103,226,227,228,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,],[-123,-124,-125,-126,-121,-122,212,-243,-244,-245,-246,-247,-248,-267,-259,-261,-263,-265,-275,-273,-256,-262,-252,-255,-260,-272,-274,-253,-254,-276,-277,-257,-264,-258,-266,]),'FUNCION_FLECHA':([79,80,262,263,264,265,266,267,268,360,],[-121,-122,361,362,363,364,365,366,367,439,]),'ARRAYCLASS':([93,95,96,98,152,185,301,315,328,329,381,382,413,498,499,523,526,555,560,],[170,184,197,207,298,298,298,298,298,298,298,298,298,524,525,544,547,298,298,]),'LONGCLASS':([95,98,152,185,301,315,328,329,381,382,413,555,560,],[177,200,295,295,295,295,295,295,295,295,295,295,295,]),'INTCLASS':([95,98,152,185,301,315,328,329,381,382,413,555,560,],[178,201,294,294,294,409,294,294,294,294,294,294,294,]),'FLOATCLASS':([95,98,152,185,301,315,328,329,381,382,413,555,560,],[179,202,297,297,297,297,297,297,297,297,297,297,297,]),'DOUBLECLASS':([95,98,152,185,301,315,328,329,381,382,413,555,560,],[180,203,296,296,296,410,296,296,296,296,296,296,296,]),'STRINGCLASS':([95,98,152,185,301,315,328,329,381,382,413,555,560,],[181,204,292,292,292,292,292,292,292,292,292,292,292,]),'CHARCLASS':([95,98,152,185,301,315,328,329,381,382,413,555,560,],[182,205,291,291,291,291,291,291,291,291,291,291,291,]),'BOOLCLASS':([95,98,152,185,301,315,328,329,381,382,413,555,560,],[183,206,293,293,293,293,293,293,293,293,293,293,293,]),'LISTCLASS':([96,98,152,185,301,315,328,329,381,382,413,502,528,555,560,],[198,208,299,299,299,299,299,299,299,299,299,527,549,299,299,]),'ITERATOR':([110,235,],[236,355,]),'CORCHETE_I':([184,207,208,298,299,544,547,],[315,328,329,381,382,555,560,]),'SUBGUION':([243,246,249,252,255,258,261,],[360,360,360,360,360,360,360,]),'CORCHETE_D':([291,292,293,294,295,296,297,408,409,410,430,431,462,463,494,495,567,572,],[-105,-106,-107,-108,-109,-110,-111,466,467,468,472,473,494,495,-112,-113,577,580,]),'TO_INT':([303,306,],[387,387,]),'TO_DOUBLE':([303,306,],[388,388,]),'TO_FLOAT':([303,306,],[389,389,]),'TO_LONG':([303,306,],[390,390,]),'TO':([357,434,],[436,476,]),'UNTIL':([357,434,],[437,477,]),'NEW':([497,501,502,],[523,526,528,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,5,],[1,8,]),'io':([3,],[5,]),'cuerpo':([7,12,16,17,18,19,20,],[11,46,47,48,49,50,51,]),'funcion':([7,12,16,17,18,19,20,],[12,12,12,12,12,12,12,]),'funcall':([7,12,16,17,18,19,20,85,93,96,136,137,138,139,140,141,142,143,144,145,149,284,286,330,358,361,362,363,364,365,366,367,379,380,439,442,455,460,478,488,493,503,533,534,551,552,],[13,13,13,13,13,13,13,138,175,175,138,138,138,138,138,138,138,138,138,138,138,175,138,138,138,445,445,445,445,445,445,445,138,138,445,138,138,175,138,175,175,138,138,138,138,138,]),'impresion':([7,12,16,17,18,19,20,85,136,137,138,139,140,141,142,143,144,145,149,286,330,358,361,362,363,364,365,366,367,379,380,439,442,455,478,503,533,534,551,552,],[14,14,14,14,14,14,14,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,446,446,446,446,446,446,446,139,139,446,139,139,139,139,139,139,139,139,]),'entrada':([7,12,16,17,18,19,20,85,93,96,136,137,138,139,140,141,142,143,144,145,149,284,286,330,358,361,362,363,364,365,366,367,379,380,439,442,455,460,478,488,493,503,533,534,551,552,],[15,15,15,15,15,15,15,140,174,174,140,140,140,140,140,140,140,140,140,140,140,174,140,140,140,447,447,447,447,447,447,447,140,140,447,140,140,174,140,174,174,140,140,140,140,140,]),'asignacion':([7,12,16,17,18,19,20,85,136,137,138,139,140,141,142,143,144,145,149,286,330,358,361,362,363,364,365,366,367,379,380,439,442,455,478,503,533,534,551,552,],[16,16,16,16,16,16,16,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,443,443,443,443,443,443,443,136,136,443,136,136,136,136,136,136,136,136,]),'while':([7,12,16,17,18,19,20,85,136,137,138,139,140,141,142,143,144,145,149,286,330,358,379,380,442,455,478,503,533,534,551,552,],[17,17,17,17,17,17,17,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'for':([7,12,16,17,18,19,20,85,136,137,138,139,140,141,142,143,144,145,149,286,330,358,379,380,442,455,478,503,533,534,551,552,],[18,18,18,18,18,18,18,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'match':([7,12,16,17,18,19,20,85,136,137,138,139,140,141,142,143,144,145,149,286,330,358,379,380,442,455,478,503,533,534,551,552,],[19,19,19,19,19,19,19,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'if':([7,12,16,17,18,19,20,85,136,137,138,139,140,141,142,143,144,145,149,286,330,358,379,380,442,455,478,503,533,534,551,552,],[20,20,20,20,20,20,20,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'asignacionLong':([7,12,16,17,18,19,20,85,136,137,138,139,140,141,142,143,144,145,149,286,330,358,361,362,363,364,365,366,367,379,380,439,442,455,478,503,533,534,551,552,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'asignacionInt':([7,12,16,17,18,19,20,85,136,137,138,139,140,141,142,143,144,145,149,286,330,358,361,362,363,364,365,366,367,379,380,439,442,455,478,503,533,534,551,552,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'asignacionFloat':([7,12,16,17,18,19,20,85,136,137,138,139,140,141,142,143,144,145,149,286,330,358,361,362,363,364,365,366,367,379,380,439,442,455,478,503,533,534,551,552,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'asignacionDouble':([7,12,16,17,18,19,20,85,136,137,138,139,140,141,142,143,144,145,149,286,330,358,361,362,363,364,365,366,367,379,380,439,442,455,478,503,533,534,551,552,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'asignacionString':([7,12,16,17,18,19,20,85,136,137,138,139,140,141,142,143,144,145,149,286,330,358,361,362,363,364,365,366,367,379,380,439,442,455,478,503,533,534,551,552,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'asignacionChar':([7,12,16,17,18,19,20,85,136,137,138,139,140,141,142,143,144,145,149,286,330,358,361,362,363,364,365,366,367,379,380,439,442,455,478,503,533,534,551,552,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'asignacionBoolean':([7,12,16,17,18,19,20,85,136,137,138,139,140,141,142,143,144,145,149,286,330,358,361,362,363,364,365,366,367,379,380,439,442,455,478,503,533,534,551,552,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'array':([7,12,16,17,18,19,20,85,136,137,138,139,140,141,142,143,144,145,149,286,330,358,361,362,363,364,365,366,367,379,380,439,442,455,478,503,533,534,551,552,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'list':([7,12,16,17,18,19,20,85,136,137,138,139,140,141,142,143,144,145,149,286,330,358,361,362,363,364,365,366,367,379,380,439,442,455,478,503,533,534,551,552,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'arrayInt':([7,12,16,17,18,19,20,85,136,137,138,139,140,141,142,143,144,145,149,286,330,358,361,362,363,364,365,366,367,379,380,439,442,455,478,503,533,534,551,552,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'arrayDouble':([7,12,16,17,18,19,20,85,136,137,138,139,140,141,142,143,144,145,149,286,330,358,361,362,363,364,365,366,367,379,380,439,442,455,478,503,533,534,551,552,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'varparen':([10,146,159,186,371,448,489,512,520,],[42,42,42,42,42,42,42,42,42,]),'elseif':([20,52,81,144,510,],[52,81,81,52,536,]),'else':([20,52,81,144,],[53,82,82,53,]),'valores':([44,65,132,171,285,304,318,319,456,548,562,],[67,113,269,305,67,391,414,415,67,561,574,]),'valor':([44,56,57,65,132,157,171,284,285,304,318,319,456,460,464,487,488,548,562,],[69,90,90,69,69,90,69,372,69,69,69,69,69,490,496,511,513,69,69,]),'numeros':([44,56,57,61,63,65,85,93,96,104,132,134,136,137,138,139,140,141,142,143,144,145,149,157,171,210,214,215,229,230,231,232,284,285,286,304,318,319,330,358,379,380,442,455,456,460,464,478,487,488,503,533,534,548,551,552,562,],[73,73,73,105,105,73,147,147,147,105,73,105,147,147,147,147,147,147,147,147,147,147,147,73,73,105,333,338,341,344,347,349,375,73,147,73,73,73,147,147,147,147,147,147,73,375,73,147,73,375,147,147,147,73,147,147,73,]),'booleanos':([44,56,57,61,63,65,93,96,104,130,132,134,157,171,210,214,225,261,284,285,304,314,318,319,327,456,460,464,487,488,548,562,],[74,74,74,102,102,74,169,196,227,268,74,102,74,74,102,334,339,268,74,74,74,407,74,74,429,74,74,74,74,74,74,74,]),'parametro':([55,],[86,]),'parametros':([55,300,],[87,384,]),'valorI':([56,57,157,],[89,91,302,]),'dectipoTupla':([59,60,86,],[94,97,151,]),'condicional':([61,63,134,210,],[99,111,272,331,]),'valorC':([61,63,134,210,],[100,100,100,100,]),'relacional':([61,63,104,134,210,],[103,103,228,103,103,]),'aritmetica':([61,63,85,93,96,104,134,136,137,138,139,140,141,142,143,144,145,149,210,229,231,284,286,330,358,379,380,442,455,460,478,488,503,533,534,551,552,],[106,106,145,160,187,106,106,145,145,145,145,145,145,145,145,145,145,145,106,342,346,374,145,145,145,145,145,145,145,492,145,515,145,145,145,145,145,]),'cases':([66,],[115,]),'casesInt':([66,123,],[116,241,]),'casesLgn':([66,124,],[117,244,]),'casesFlt':([66,125,],[118,247,]),'casesDob':([66,126,],[119,250,]),'casesStr':([66,127,],[120,253,]),'casesChar':([66,128,],[121,256,]),'casesBool':([66,129,],[122,259,]),'caseInt':([66,123,],[123,123,]),'caseLgn':([66,124,],[124,124,]),'caseFlt':([66,125,],[125,125,]),'caseDob':([66,126,],[126,126,]),'caseStr':([66,127,],[127,127,]),'caseChar':([66,128,],[128,128,]),'caseBool':([66,129,],[129,129,]),'contenido':([85,136,137,138,139,140,141,142,143,144,145,149,286,330,358,379,380,442,455,478,503,533,534,551,552,],[135,274,275,276,277,278,279,280,281,282,283,287,377,432,438,459,461,483,484,506,529,553,554,563,564,]),'reasignacion':([85,136,137,138,139,140,141,142,143,144,145,149,286,330,358,361,362,363,364,365,366,367,379,380,439,442,455,478,503,533,534,551,552,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,444,444,444,444,444,444,444,137,137,444,137,137,137,137,137,137,137,137,]),'dectipo':([86,],[150,]),'declaracion':([88,383,],[154,154,]),'returnfun':([93,96,284,460,488,493,],[161,188,373,491,514,522,]),'tuple':([93,96,176,199,493,],[162,189,307,320,521,]),'returnCastable':([93,96,284,460,488,493,],[172,172,172,172,172,172,]),'castingcall':([93,96,284,460,488,493,],[173,173,173,173,173,173,]),'logicos':([100,],[210,]),'comparacion':([101,102,105,106,107,108,226,227,],[214,225,229,231,233,234,214,225,]),'aritmeticos':([101,105,106,145,146,147,159,160,186,187,226,341,342,343,346,347,348,371,374,375,489,492,512,515,],[215,230,232,232,215,230,215,232,215,232,215,230,232,215,232,230,215,215,232,230,215,232,215,232,]),'defcase':([123,124,125,126,127,128,129,],[242,245,248,251,254,257,260,]),'tipo':([152,185,301,315,328,329,381,382,413,555,560,],[290,317,385,408,430,431,462,463,469,567,572,]),'tipos':([185,],[316,]),'castingfun':([303,306,],[386,393,]),'tiposentry':([317,469,],[412,500,]),'codeBlock':([361,362,363,364,365,366,367,439,],[440,449,450,451,452,453,454,482,]),'contenidoLine':([361,362,363,364,365,366,367,439,],[441,441,441,441,441,441,441,441,]),'valoresInt':([545,],[556,]),'valoresDouble':([546,],[558,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D','inicio',5,'p_inicio','sintax.py',12),
  ('inicio -> IMPORT io inicio','inicio',3,'p_inicio','sintax.py',13),
  ('io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE','io',7,'p_io','sintax.py',16),
  ('cuerpo -> funcion','cuerpo',1,'p_cuerpo','sintax.py',19),
  ('cuerpo -> funcall','cuerpo',1,'p_cuerpo','sintax.py',20),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintax.py',21),
  ('cuerpo -> entrada','cuerpo',1,'p_cuerpo','sintax.py',22),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintax.py',23),
  ('cuerpo -> while','cuerpo',1,'p_cuerpo','sintax.py',24),
  ('cuerpo -> for','cuerpo',1,'p_cuerpo','sintax.py',25),
  ('cuerpo -> match','cuerpo',1,'p_cuerpo','sintax.py',26),
  ('cuerpo -> if','cuerpo',1,'p_cuerpo','sintax.py',27),
  ('cuerpo -> funcion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',28),
  ('cuerpo -> asignacion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',29),
  ('cuerpo -> while cuerpo','cuerpo',2,'p_cuerpo','sintax.py',30),
  ('cuerpo -> for cuerpo','cuerpo',2,'p_cuerpo','sintax.py',31),
  ('cuerpo -> if cuerpo','cuerpo',2,'p_cuerpo','sintax.py',32),
  ('cuerpo -> match cuerpo','cuerpo',2,'p_cuerpo','sintax.py',33),
  ('contenido -> asignacion','contenido',1,'p_contenido','sintax.py',37),
  ('contenido -> reasignacion','contenido',1,'p_contenido','sintax.py',38),
  ('contenido -> funcall','contenido',1,'p_contenido','sintax.py',39),
  ('contenido -> impresion','contenido',1,'p_contenido','sintax.py',40),
  ('contenido -> entrada','contenido',1,'p_contenido','sintax.py',41),
  ('contenido -> while','contenido',1,'p_contenido','sintax.py',42),
  ('contenido -> for','contenido',1,'p_contenido','sintax.py',43),
  ('contenido -> match','contenido',1,'p_contenido','sintax.py',44),
  ('contenido -> if','contenido',1,'p_contenido','sintax.py',45),
  ('contenido -> aritmetica','contenido',1,'p_contenido','sintax.py',46),
  ('contenido -> asignacion contenido','contenido',2,'p_contenido','sintax.py',47),
  ('contenido -> reasignacion contenido','contenido',2,'p_contenido','sintax.py',48),
  ('contenido -> funcall contenido','contenido',2,'p_contenido','sintax.py',49),
  ('contenido -> impresion contenido','contenido',2,'p_contenido','sintax.py',50),
  ('contenido -> entrada contenido','contenido',2,'p_contenido','sintax.py',51),
  ('contenido -> while contenido','contenido',2,'p_contenido','sintax.py',52),
  ('contenido -> for contenido','contenido',2,'p_contenido','sintax.py',53),
  ('contenido -> if contenido','contenido',2,'p_contenido','sintax.py',54),
  ('contenido -> match contenido','contenido',2,'p_contenido','sintax.py',55),
  ('contenido -> aritmetica contenido','contenido',2,'p_contenido','sintax.py',56),
  ('contenidoLine -> asignacion','contenidoLine',1,'p_contenidoLine','sintax.py',60),
  ('contenidoLine -> reasignacion','contenidoLine',1,'p_contenidoLine','sintax.py',61),
  ('contenidoLine -> funcall','contenidoLine',1,'p_contenidoLine','sintax.py',62),
  ('contenidoLine -> impresion','contenidoLine',1,'p_contenidoLine','sintax.py',63),
  ('contenidoLine -> entrada','contenidoLine',1,'p_contenidoLine','sintax.py',64),
  ('asignacion -> VAR VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',68),
  ('asignacion -> VAL VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',69),
  ('asignacion -> VAR VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',70),
  ('asignacion -> VAL VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',71),
  ('asignacion -> VAR VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',72),
  ('asignacion -> VAL VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',73),
  ('asignacion -> asignacionLong','asignacion',1,'p_asignacion','sintax.py',74),
  ('asignacion -> asignacionInt','asignacion',1,'p_asignacion','sintax.py',75),
  ('asignacion -> asignacionFloat','asignacion',1,'p_asignacion','sintax.py',76),
  ('asignacion -> asignacionDouble','asignacion',1,'p_asignacion','sintax.py',77),
  ('asignacion -> asignacionString','asignacion',1,'p_asignacion','sintax.py',78),
  ('asignacion -> asignacionChar','asignacion',1,'p_asignacion','sintax.py',79),
  ('asignacion -> asignacionBoolean','asignacion',1,'p_asignacion','sintax.py',80),
  ('asignacion -> array','asignacion',1,'p_asignacion','sintax.py',81),
  ('asignacion -> list','asignacion',1,'p_asignacion','sintax.py',82),
  ('asignacionLong -> VAR VARIABLE IGUAL LONG','asignacionLong',4,'p_asignacionLong','sintax.py',85),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG','asignacionLong',6,'p_asignacionLong','sintax.py',86),
  ('asignacionLong -> VAL VARIABLE IGUAL LONG','asignacionLong',4,'p_asignacionLong','sintax.py',87),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG','asignacionLong',6,'p_asignacionLong','sintax.py',88),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',89),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',90),
  ('asignacionInt -> VAR VARIABLE IGUAL INT','asignacionInt',4,'p_asignacionInt','sintax.py',93),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT','asignacionInt',6,'p_asignacionInt','sintax.py',94),
  ('asignacionInt -> VAL VARIABLE IGUAL INT','asignacionInt',4,'p_asignacionInt','sintax.py',95),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT','asignacionInt',6,'p_asignacionInt','sintax.py',96),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',97),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',98),
  ('asignacionFloat -> VAR VARIABLE IGUAL FLOAT','asignacionFloat',4,'p_asignacionFloat','sintax.py',101),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT','asignacionFloat',6,'p_asignacionFloat','sintax.py',102),
  ('asignacionFloat -> VAL VARIABLE IGUAL FLOAT','asignacionFloat',4,'p_asignacionFloat','sintax.py',103),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT','asignacionFloat',6,'p_asignacionFloat','sintax.py',104),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',105),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',106),
  ('asignacionDouble -> VAR VARIABLE IGUAL DOUBLE','asignacionDouble',4,'p_asignacionDouble','sintax.py',109),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',110),
  ('asignacionDouble -> VAL VARIABLE IGUAL DOUBLE','asignacionDouble',4,'p_asignacionDouble','sintax.py',111),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',112),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',113),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',114),
  ('asignacionString -> VAR VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',117),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',118),
  ('asignacionString -> VAL VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',119),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',120),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',121),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',122),
  ('asignacionChar -> VAR VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',125),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',126),
  ('asignacionChar -> VAL VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',127),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',128),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',129),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',130),
  ('asignacionBoolean -> VAR VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',133),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',134),
  ('asignacionBoolean -> VAL VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',135),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',136),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',137),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',138),
  ('reasignacion -> VARIABLE IGUAL valor','reasignacion',3,'p_reasignacion','sintax.py',142),
  ('reasignacion -> VARIABLE IGUAL returnfun','reasignacion',3,'p_reasignacion','sintax.py',143),
  ('reasignacion -> VARIABLE IGUAL aritmetica','reasignacion',3,'p_reasignacion','sintax.py',144),
  ('reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor','reasignacion',6,'p_reasignacion','sintax.py',145),
  ('tipo -> CHARCLASS','tipo',1,'p_tipo','sintax.py',148),
  ('tipo -> STRINGCLASS','tipo',1,'p_tipo','sintax.py',149),
  ('tipo -> BOOLCLASS','tipo',1,'p_tipo','sintax.py',150),
  ('tipo -> INTCLASS','tipo',1,'p_tipo','sintax.py',151),
  ('tipo -> LONGCLASS','tipo',1,'p_tipo','sintax.py',152),
  ('tipo -> DOUBLECLASS','tipo',1,'p_tipo','sintax.py',153),
  ('tipo -> FLOATCLASS','tipo',1,'p_tipo','sintax.py',154),
  ('tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',155),
  ('tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',156),
  ('valor -> STRING','valor',1,'p_valor','sintax.py',159),
  ('valor -> CHAR','valor',1,'p_valor','sintax.py',160),
  ('valor -> VARIABLE','valor',1,'p_valor','sintax.py',161),
  ('valor -> numeros','valor',1,'p_valor','sintax.py',162),
  ('valor -> booleanos','valor',1,'p_valor','sintax.py',163),
  ('valor -> VARIABLE PAR_I VARIABLE PAR_D','valor',4,'p_valor','sintax.py',164),
  ('valor -> VARIABLE PAR_I INT PAR_D','valor',4,'p_valor','sintax.py',165),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintax.py',168),
  ('booleanos -> FLASE','booleanos',1,'p_booleanos','sintax.py',169),
  ('numeros -> INT','numeros',1,'p_numeros','sintax.py',172),
  ('numeros -> LONG','numeros',1,'p_numeros','sintax.py',173),
  ('numeros -> FLOAT','numeros',1,'p_numeros','sintax.py',174),
  ('numeros -> DOUBLE','numeros',1,'p_numeros','sintax.py',175),
  ('funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D','funcion',7,'p_funcion','sintax.py',180),
  ('funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D','funcion',6,'p_funcion','sintax.py',181),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo','declaracion',3,'p_declaracion','sintax.py',186),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor','declaracion',5,'p_declaracion_defecto','sintax.py',189),
  ('parametro -> parametros','parametro',1,'p_parametro','sintax.py',192),
  ('parametro -> PAR_I PAR_D','parametro',2,'p_parametro','sintax.py',193),
  ('parametros -> PAR_I declaracion PAR_D','parametros',3,'p_parametros','sintax.py',196),
  ('parametros -> PAR_I declaracion PAR_D parametros','parametros',4,'p_parametros','sintax.py',197),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D','funcion',10,'p_funcion_return','sintax.py',202),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_return','sintax.py',203),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_return','sintax.py',204),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D','funcion',10,'p_funcion_return','sintax.py',205),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',208),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',209),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',210),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',211),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',214),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',215),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',216),
  ('dectipo -> DOBLE_PUNTO tipo','dectipo',2,'p_dectipo','sintax.py',219),
  ('dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D','dectipoTupla',4,'p_dectipoTupla','sintax.py',222),
  ('tipos -> tipo','tipos',1,'p_tipos','sintax.py',225),
  ('tipos -> tipo tiposentry','tipos',2,'p_tipos','sintax.py',226),
  ('tiposentry -> COMA tipo','tiposentry',2,'p_tipoentry','sintax.py',229),
  ('tiposentry -> COMA tipo tiposentry','tiposentry',3,'p_tipoentry','sintax.py',230),
  ('impresion -> PRINTLN PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',235),
  ('impresion -> PRINT PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',236),
  ('valorI -> valor MAS valorI','valorI',3,'p_valorI','sintax.py',239),
  ('valorI -> valor','valorI',1,'p_valorI','sintax.py',240),
  ('entrada -> READLINE PAR_I PAR_D','entrada',3,'p_entrada','sintax.py',245),
  ('funcall -> VARIABLE varparen','funcall',2,'p_funcall','sintax.py',249),
  ('varparen -> PAR_I valores PAR_D','varparen',3,'p_varparen','sintax.py',252),
  ('varparen -> PAR_I PAR_D','varparen',2,'p_varparen','sintax.py',253),
  ('varparen -> varparen PAR_I valores PAR_D','varparen',4,'p_varparen','sintax.py',254),
  ('varparen -> varparen PAR_I PAR_D','varparen',3,'p_varparen','sintax.py',255),
  ('returnfun -> returnCastable','returnfun',1,'p_returnfun','sintax.py',258),
  ('returnfun -> castingcall','returnfun',1,'p_returnfun','sintax.py',259),
  ('returnCastable -> entrada','returnCastable',1,'p_returnCastable','sintax.py',262),
  ('returnCastable -> funcall','returnCastable',1,'p_returnCastable','sintax.py',263),
  ('castingcall -> returnCastable PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',268),
  ('castingcall -> VARIABLE PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',269),
  ('castingfun -> TO_INT','castingfun',1,'p_castingfun','sintax.py',273),
  ('castingfun -> TO_DOUBLE','castingfun',1,'p_castingfun','sintax.py',274),
  ('castingfun -> TO_FLOAT','castingfun',1,'p_castingfun','sintax.py',275),
  ('castingfun -> TO_LONG','castingfun',1,'p_castingfun','sintax.py',276),
  ('array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',281),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',282),
  ('array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',283),
  ('array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',284),
  ('array -> arrayInt','array',1,'p_array','sintax.py',285),
  ('array -> arrayDouble','array',1,'p_array','sintax.py',286),
  ('list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D','list',7,'p_list','sintax.py',290),
  ('list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D','list',13,'p_list','sintax.py',291),
  ('list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D','list',12,'p_list','sintax.py',292),
  ('valores -> valor','valores',1,'p_valores','sintax.py',296),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintax.py',297),
  ('tuple -> PAR_I valores PAR_D','tuple',3,'p_tuple','sintax.py',301),
  ('asignacion -> VAR VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',304),
  ('asignacion -> VAL VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',305),
  ('asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple','asignacion',5,'p_asignacion_tupleDec','sintax.py',308),
  ('asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple','asignacion',5,'p_asignacion_tupleDec','sintax.py',309),
  ('while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','while',7,'p_while','sintax.py',315),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',10,'p_for','sintax.py',319),
  ('for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',9,'p_for','sintax.py',320),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',321),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',322),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',323),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',324),
  ('match -> VARIABLE MATCH LLAVE_I cases LLAVE_D','match',5,'p_match','sintax.py',328),
  ('cases -> casesInt','cases',1,'p_cases','sintax.py',331),
  ('cases -> casesLgn','cases',1,'p_cases','sintax.py',332),
  ('cases -> casesFlt','cases',1,'p_cases','sintax.py',333),
  ('cases -> casesDob','cases',1,'p_cases','sintax.py',334),
  ('cases -> casesStr','cases',1,'p_cases','sintax.py',335),
  ('cases -> casesChar','cases',1,'p_cases','sintax.py',336),
  ('cases -> casesBool','cases',1,'p_cases','sintax.py',337),
  ('caseInt -> CASE INT FUNCION_FLECHA codeBlock','caseInt',4,'p_caseInt','sintax.py',340),
  ('casesInt -> caseInt','casesInt',1,'p_casesInt','sintax.py',343),
  ('casesInt -> caseInt casesInt','casesInt',2,'p_casesInt','sintax.py',344),
  ('casesInt -> caseInt defcase','casesInt',2,'p_casesInt','sintax.py',345),
  ('caseLgn -> CASE LONG FUNCION_FLECHA codeBlock','caseLgn',4,'p_caseLgn','sintax.py',348),
  ('casesLgn -> caseLgn','casesLgn',1,'p_casesLgn','sintax.py',351),
  ('casesLgn -> caseLgn casesLgn','casesLgn',2,'p_casesLgn','sintax.py',352),
  ('casesLgn -> caseLgn defcase','casesLgn',2,'p_casesLgn','sintax.py',353),
  ('caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock','caseFlt',4,'p_caseFlt','sintax.py',356),
  ('casesFlt -> caseFlt','casesFlt',1,'p_casesFlt','sintax.py',359),
  ('casesFlt -> caseFlt casesFlt','casesFlt',2,'p_casesFlt','sintax.py',360),
  ('casesFlt -> caseFlt defcase','casesFlt',2,'p_casesFlt','sintax.py',361),
  ('caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock','caseDob',4,'p_caseDob','sintax.py',364),
  ('casesDob -> caseDob','casesDob',1,'p_casesDob','sintax.py',367),
  ('casesDob -> caseDob casesDob','casesDob',2,'p_casesDob','sintax.py',368),
  ('casesDob -> caseDob defcase','casesDob',2,'p_casesDob','sintax.py',369),
  ('caseStr -> CASE STRING FUNCION_FLECHA codeBlock','caseStr',4,'p_caseStr','sintax.py',372),
  ('casesStr -> caseStr','casesStr',1,'p_casesStr','sintax.py',375),
  ('casesStr -> caseStr casesStr','casesStr',2,'p_casesStr','sintax.py',376),
  ('casesStr -> caseStr defcase','casesStr',2,'p_casesStr','sintax.py',377),
  ('caseChar -> CASE CHAR FUNCION_FLECHA codeBlock','caseChar',4,'p_caseChar','sintax.py',380),
  ('casesChar -> caseChar','casesChar',1,'p_casesChar','sintax.py',383),
  ('casesChar -> caseChar casesChar','casesChar',2,'p_casesChar','sintax.py',384),
  ('casesChar -> caseChar defcase','casesChar',2,'p_casesChar','sintax.py',385),
  ('caseBool -> CASE booleanos FUNCION_FLECHA codeBlock','caseBool',4,'p_caseBool','sintax.py',388),
  ('casesBool -> caseBool','casesBool',1,'p_casesBool','sintax.py',391),
  ('casesBool -> caseBool casesBool','casesBool',2,'p_casesBool','sintax.py',392),
  ('casesBool -> caseBool defcase','casesBool',2,'p_casesBool','sintax.py',393),
  ('defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock','defcase',4,'p_defcase','sintax.py',397),
  ('codeBlock -> contenidoLine','codeBlock',1,'p_codeBlock','sintax.py',400),
  ('codeBlock -> LLAVE_I contenido LLAVE_D','codeBlock',3,'p_codeBlock','sintax.py',401),
  ('if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','if',7,'p_if','sintax.py',405),
  ('if -> if elseif','if',2,'p_if','sintax.py',406),
  ('if -> if else','if',2,'p_if','sintax.py',407),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','elseif',8,'p_elseif','sintax.py',411),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif','elseif',9,'p_elseif','sintax.py',412),
  ('else -> ELSE LLAVE_I contenido LLAVE_D','else',4,'p_else','sintax.py',415),
  ('else -> elseif else','else',2,'p_else','sintax.py',416),
  ('condicional -> valorC logicos condicional','condicional',3,'p_condicional','sintax.py',420),
  ('condicional -> valorC','condicional',1,'p_condicional','sintax.py',421),
  ('valorC -> VARIABLE','valorC',1,'p_valorC','sintax.py',424),
  ('valorC -> booleanos','valorC',1,'p_valorC','sintax.py',425),
  ('valorC -> relacional','valorC',1,'p_valorC','sintax.py',426),
  ('valorC -> NOT VARIABLE','valorC',2,'p_valorC','sintax.py',427),
  ('valorC -> NOT booleanos','valorC',2,'p_valorC','sintax.py',428),
  ('valorC -> NOT relacional','valorC',2,'p_valorC','sintax.py',429),
  ('logicos -> AND','logicos',1,'p_logicos','sintax.py',432),
  ('logicos -> OR','logicos',1,'p_logicos','sintax.py',433),
  ('logicos -> NOT','logicos',1,'p_logicos','sintax.py',434),
  ('relacional -> numeros comparacion numeros','relacional',3,'p_relacional','sintax.py',439),
  ('relacional -> aritmetica comparacion aritmetica','relacional',3,'p_relacional','sintax.py',440),
  ('relacional -> aritmetica comparacion numeros','relacional',3,'p_relacional','sintax.py',441),
  ('relacional -> numeros comparacion aritmetica','relacional',3,'p_relacional','sintax.py',442),
  ('relacional -> booleanos comparacion booleanos','relacional',3,'p_relacional','sintax.py',443),
  ('relacional -> STRING comparacion STRING','relacional',3,'p_relacional','sintax.py',444),
  ('relacional -> CHAR comparacion CHAR','relacional',3,'p_relacional','sintax.py',445),
  ('relacional -> VARIABLE comparacion numeros','relacional',3,'p_relacional','sintax.py',446),
  ('relacional -> numeros comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',447),
  ('relacional -> VARIABLE comparacion booleanos','relacional',3,'p_relacional','sintax.py',448),
  ('relacional -> booleanos comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',449),
  ('relacional -> VARIABLE comparacion STRING','relacional',3,'p_relacional','sintax.py',450),
  ('relacional -> STRING comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',451),
  ('relacional -> VARIABLE comparacion CHAR','relacional',3,'p_relacional','sintax.py',452),
  ('relacional -> CHAR comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',453),
  ('relacional -> VARIABLE comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',454),
  ('comparacion -> IGUAL_COMPARACION','comparacion',1,'p_comparacion','sintax.py',457),
  ('comparacion -> DIFERENTE','comparacion',1,'p_comparacion','sintax.py',458),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion','sintax.py',459),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion','sintax.py',460),
  ('aritmetica -> numeros aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',464),
  ('aritmetica -> VARIABLE aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',465),
  ('aritmetica -> numeros aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',466),
  ('aritmetica -> VARIABLE aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',467),
  ('aritmetica -> aritmetica aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',468),
  ('aritmetica -> aritmetica aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',469),
  ('aritmeticos -> MENOS','aritmeticos',1,'p_aritmeticos','sintax.py',472),
  ('aritmeticos -> MAS','aritmeticos',1,'p_aritmeticos','sintax.py',473),
  ('aritmeticos -> MULTIPLICACION','aritmeticos',1,'p_aritmeticos','sintax.py',474),
  ('aritmeticos -> DIVISION','aritmeticos',1,'p_aritmeticos','sintax.py',475),
  ('aritmeticos -> MOD','aritmeticos',1,'p_aritmeticos','sintax.py',476),
  ('arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D','arrayInt',12,'p_arrayInt','sintax.py',481),
  ('arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D','arrayDouble',12,'p_arrayDouble','sintax.py',485),
  ('valoresInt -> INT','valoresInt',1,'p_valoresInt','sintax.py',488),
  ('valoresInt -> valoresInt COMA INT','valoresInt',3,'p_valoresInt','sintax.py',489),
  ('valoresDouble -> DOUBLE','valoresDouble',1,'p_valoresDouble','sintax.py',492),
  ('valoresDouble -> valoresDouble COMA DOUBLE','valoresDouble',3,'p_valoresDouble','sintax.py',493),
]

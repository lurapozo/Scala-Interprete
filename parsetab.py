
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARRAYCLASS ARROBA BACKTICK BOOLCLASS CASE CATCH CHAR CHARCLASS CLASS COMA CORCHETE_D CORCHETE_I DEF DIFERENTE DIVISION DO DOBLE_PUNTO DOUBLE DOUBLECLASS ELSE EXTENDS FINAL FINALLY FLASE FLOAT FLOATCLASS FOR FOR_SOME FUNCION_FLECHA HASHTAG IF IGUAL IGUAL_COMPARACION IMPLICIT IMPORT INT INTCLASS ITERATOR LAZY LIBRERIA_IO LISTCLASS LLAVE_D LLAVE_I LONG LONGCLASS MACRO MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MOD MULTIPLICACION NEW NOT NULL OBJECT OR OVERRIDE PACKAGE PAR_D PAR_I PRINT PRINTLN PRIVATE PROTECTED PUNTO READLINE RETURN REVERSE SEALED STARTSWITH STRING STRINGCLASS SUBGUION SUPER THIS THROW TO TO_DOUBLE TO_FLOAT TO_INT TO_LONG TRAIT TRUE TRY TYPE UNTIL VAL VAR VARIABLE WHILE WITH YIELD inicio : OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D\n  | IMPORT io inicio\n  | cuerpo\n   io : VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINEcuerpo : funcion\n  | funcall\n  | impresion\n  | entrada\n  | asignacion\n  | while\n  | for\n  | match\n  | if\n  | startsWith\n  | funcion cuerpo\n  | asignacion cuerpo\n  | while cuerpo\n  | for cuerpo\n  | if cuerpo\n  | match cuerpo\n  | startsWith cuerpocontenido : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entrada\n  | while\n  | for\n  | match\n  | if\n  | aritmetica\n  | startsWith\n  | asignacion contenido\n  | reasignacion contenido\n  | funcall contenido\n  | impresion contenido\n  | entrada contenido\n  | while contenido\n  | for contenido\n  | if contenido\n  | match contenido\n  | aritmetica contenido\n  | startsWith contenidocontenidoLine : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entradaasignacion : VAR VARIABLE IGUAL VARIABLE\n  | VAL VARIABLE IGUAL VARIABLE\n  | VAR VARIABLE IGUAL aritmetica\n  | VAL VARIABLE IGUAL aritmetica\n  | VAR VARIABLE IGUAL returnfun\n  | VAL VARIABLE IGUAL returnfun\n  | asignacionLong\n  | asignacionInt\n  | asignacionFloat\n  | asignacionDouble\n  | asignacionString\n  | asignacionChar\n  | asignacionBoolean\n  | array\n  | listasignacionLong :  VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLEasignacionInt : VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE\n  | asignacionSumIntasignacionFloat : VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLEasignacionDouble : VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE\n  | asignacionSumDoubleasignacionString : VAR VARIABLE IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAL VARIABLE IGUAL STRING\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE\n  | asignacionSumStringasignacionChar : VAR VARIABLE IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAL VARIABLE IGUAL CHAR\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLEasignacionBoolean : VAR VARIABLE IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAL VARIABLE IGUAL booleanos\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLEreasignacion :  VARIABLE IGUAL valor\n      | VARIABLE IGUAL returnfun\n      | VARIABLE IGUAL aritmetica\n      | VARIABLE PAR_I INT PAR_D IGUAL valortipo : CHARCLASS\n  | STRINGCLASS\n  | BOOLCLASS\n  | INTCLASS\n  | LONGCLASS\n  | DOUBLECLASS\n  | FLOATCLASS\n  | ARRAYCLASS CORCHETE_I tipo CORCHETE_D\n  | LISTCLASS CORCHETE_I tipo CORCHETE_Dvalor : STRING\n  | CHAR\n  | VARIABLE\n  | numeros\n  | booleanos\n  | VARIABLE PAR_I VARIABLE PAR_D\n  | VARIABLE PAR_I INT PAR_Dbooleanos : TRUE\n  | FLASE\n  | startsWithnumeros : INT\n  | LONG\n  | FLOAT\n  | DOUBLEfuncion : DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D\n  | DEF VARIABLE parametro LLAVE_I contenido LLAVE_Ddeclaracion : VARIABLE DOBLE_PUNTO tipodeclaracion :  VARIABLE DOBLE_PUNTO tipo IGUAL valor parametro : parametros\n  | PAR_I PAR_D parametros : PAR_I declaracion PAR_D \n    | PAR_I declaracion PAR_D parametrosfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D\n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D \n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_Ddectipo : DOBLE_PUNTO tipo dectipoTupla : DOBLE_PUNTO PAR_I tipos PAR_Dtipos : tipo\n    | tipo tiposentrytiposentry : COMA tipo \n  | COMA tipo tiposentryimpresion : PRINTLN PAR_I valorI PAR_D\n  | PRINT PAR_I valorI PAR_DvalorI : valor MAS valorI\n  | valorentrada : READLINE PAR_I PAR_Dfuncall : VARIABLE varparen varparen : PAR_I valores PAR_D\n  | PAR_I PAR_D\n  | varparen PAR_I valores PAR_D\n  | varparen PAR_I PAR_D returnfun : returnCastable\n      | castingcallreturnCastable : entrada\n      | funcallcastingcall : returnCastable PUNTO castingfun\n      | VARIABLE PUNTO castingfuncastingfun : TO_INT\n    | TO_DOUBLE\n    | TO_FLOAT\n    | TO_LONGarray : VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | arrayInt\n  | arrayDoublelist : VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D\n  | listChar\n  | listStringvalores : valor\n  | valor COMA valorestuple : PAR_I valores PAR_Dasignacion : VAR VARIABLE IGUAL tuple \n      | VAL VARIABLE IGUAL tuplewhile : WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_Dfor : FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_Dmatch : VARIABLE MATCH  LLAVE_I cases LLAVE_Dcases : casesInt\n    | casesLgn\n    | casesFlt\n    | casesDob\n    | casesStr\n    | casesChar\n    | casesBoolcaseInt : CASE INT FUNCION_FLECHA codeBlock casesInt : caseInt \n      | caseInt casesInt\n      | caseInt defcasecaseLgn : CASE LONG FUNCION_FLECHA codeBlock casesLgn : caseLgn \n      | caseLgn casesLgn\n      | caseLgn defcasecaseFlt : CASE FLOAT FUNCION_FLECHA codeBlock casesFlt : caseFlt \n      | caseFlt casesFlt\n      | caseFlt defcasecaseDob : CASE DOUBLE FUNCION_FLECHA codeBlock casesDob : caseDob \n      | caseDob casesDob\n      | caseDob defcasecaseStr : CASE STRING FUNCION_FLECHA codeBlock casesStr : caseStr\n      | caseStr casesStr\n      | caseStr defcasecaseChar : CASE CHAR FUNCION_FLECHA codeBlock casesChar : caseChar\n      | caseChar casesChar\n      | caseChar defcasecaseBool : CASE booleanos FUNCION_FLECHA codeBlock casesBool : caseBool\n      | caseBool casesBool\n      | caseBool defcasedefcase : CASE SUBGUION FUNCION_FLECHA codeBlock codeBlock : contenidoLine\n      | LLAVE_I contenido LLAVE_Dif : IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | if elseif\n  | if else\n  elseif : ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseifelse : ELSE LLAVE_I contenido LLAVE_D\n  | elseif elsecondicional : valorC logicos condicional\n  | valorCvalorC : VARIABLE\n  | booleanos\n  | relacional\n  | NOT VARIABLE\n  | NOT booleanos\n  | NOT relacional\n  logicos : AND\n  | OR\n  | NOTrelacional : numeros comparacion numeros\n  | aritmetica comparacion aritmetica\n  | aritmetica comparacion numeros\n  | numeros comparacion aritmetica\n  | booleanos comparacion booleanos\n  | STRING comparacion STRING\n  | CHAR comparacion CHAR\n  | VARIABLE comparacion numeros\n  | numeros comparacion VARIABLE\n  | VARIABLE comparacion booleanos\n  | booleanos comparacion VARIABLE\n  | VARIABLE comparacion STRING\n  | STRING comparacion VARIABLE\n  | VARIABLE comparacion CHAR\n  | CHAR comparacion VARIABLE\n  | VARIABLE comparacion VARIABLEcomparacion : IGUAL_COMPARACION\n  | DIFERENTE\n  | MAYOR\n  | MENORaritmetica : numeros aritmeticos numeros\n  | VARIABLE aritmeticos numeros\n  | numeros aritmeticos VARIABLE\n  | VARIABLE aritmeticos VARIABLE\n  | aritmetica aritmeticos numeros\n  | aritmetica aritmeticos VARIABLE\n  | sumaaritmeticos : MENOS\n  | MULTIPLICACION\n  | DIVISION\n  | MODarrayInt : VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_DarrayDouble : VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_DvaloresInt : INT\n  | valoresInt COMA INTvaloresDouble : DOUBLE\n  | valoresDouble COMA DOUBLEstartsWith : STRING PUNTO STARTSWITH PAR_I STRING PAR_D\n  | STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_DlistString : VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D\n  | VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_DlistChar : VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D\n  | VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_DvaloresString : STRING\n  | valoresString COMA STRINGvaloresChar : CHAR\n  | valoresChar COMA CHARsuma : sumIntChar\n  | sumStringChar\n  | sumIntDouble\n  | sumDoubleCharsumIntDouble : INT MAS DOUBLE\n  | DOUBLE MAS INTsumDoubleChar : DOUBLE MAS CHAR\n  | CHAR MAS DOUBLEsumIntChar : INT MAS CHAR\n  | CHAR MAS INTsumStringChar : STRING MAS CHAR\n  | CHAR MAS STRINGasignacionSumDouble : VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleCharasignacionSumString : VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringCharasignacionSumInt : VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntCharasignacion : VAR VARIABLE DOBLE_PUNTO  dectupla\n      | VAL VARIABLE DOBLE_PUNTO dectupla dectupla : PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D\n  | PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D\n  | PAR_I STRINGCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D\n  | PAR_I STRINGCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D dectupla : PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D\n  | PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D\n  | PAR_I FLOATCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D\n  | PAR_I FLOATCLASS COMA  INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D dectupla : PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D\n  | PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D\n  | PAR_I DOUBLECLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D\n  | PAR_I DOUBLECLASS COMA  INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D dectupla : PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D\n  | PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D\n  | PAR_I LONGCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D\n  | PAR_I LONGCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT  PAR_D dectupla : PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D\n  | PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D\n  | PAR_I INTCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D\n  | PAR_I INTCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D asignacionInt : VAR VARIABLE IGUAL intvalues\n    | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues\n    | VAL VARIABLE IGUAL intvalues\n    | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvaluesintvalues : INT\n  | stringCastIntasignacionLong : VAR VARIABLE IGUAL longvalues\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues\n  | VAL VARIABLE IGUAL longvalues\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalueslongvalues : INT\n  | intvalues\n  | stringCastLongasignacionFloat : VAR VARIABLE IGUAL floatvalues\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues\n  | VAL VARIABLE IGUAL floatvalues\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvaluesfloatvalues : FLOAT\n  | longvalues\n  | stringCastFloatasignacionDouble : VAR VARIABLE IGUAL doublevalues\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues\n  | VAL VARIABLE IGUAL doublevalues\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevaluesdoublevalues : DOUBLE\n  | floatvalues\n  | stringCastDoublestringCastInt : STRING PUNTO TO_INTstringCastLong : STRING PUNTO TO_LONGstringCastFloat : STRING PUNTO TO_FLOATstringCastDouble : STRING PUNTO TO_DOUBLE'
    
_lr_action_items = {end':([1,4,6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,48,49,50,51,52,53,54,55,57,72,79,80,81,82,83,84,85,86,89,99,116,117,118,119,120,127,144,173,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,193,194,195,196,197,198,199,200,211,212,213,214,215,216,217,218,219,220,221,224,267,268,269,303,372,373,380,381,385,386,389,392,393,394,395,396,397,398,426,436,437,438,439,440,441,442,443,444,446,447,448,449,450,451,453,454,455,456,459,460,461,462,464,465,466,467,468,469,470,473,474,475,477,478,479,480,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,521,543,553,588,589,593,600,653,655,661,662,663,664,700,704,705,706,707,708,709,710,711,740,779,780,782,784,806,808,811,812,813,814,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,865,866,],[0,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-172,-173,-150,-15,-16,-17,-18,-20,-19,-226,-227,-21,-152,-116,-117,-118,-119,-113,-114,-115,-2,-231,-149,-269,-290,-291,-292,-293,-154,-151,-145,-146,-49,-51,-53,-177,-338,-332,-345,-352,-74,-81,-87,-155,-156,-336,-344,-337,-349,-351,-356,-358,-157,-158,-310,-50,-52,-54,-178,-340,-334,-347,-354,-76,-83,-89,-311,-1,-153,-186,-230,-266,-264,-263,-265,-267,-268,-300,-299,-301,-297,-298,-294,-295,-296,-121,-160,-161,-162,-163,-164,-360,-359,-361,-362,-176,-159,-64,-339,-336,-343,-66,-333,-308,-336,-69,-346,-349,-350,-71,-353,-302,-304,-356,-357,-336,-78,-75,-306,-85,-82,-91,-88,-65,-341,-67,-335,-309,-70,-348,-72,-355,-303,-305,-79,-77,-307,-86,-84,-92,-90,-280,-120,-165,-167,-171,-179,-225,-281,-228,-133,-132,-134,-135,-181,-229,-129,-128,-130,-131,-137,-136,-138,-180,-182,-183,-274,-275,-285,-283,-284,-282,-184,-185,-312,-313,-314,-315,-328,-329,-330,-331,-324,-325,-326,-327,-320,-321,-322,-323,-316,-317,-318,-319,-166,-168,]),'MATCH':([3,161,],[44,44,]),'PAR_I':([3,17,18,19,31,32,33,43,58,72,76,91,100,101,102,103,124,127,144,161,169,176,187,211,222,223,268,332,417,532,606,610,614,657,665,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,695,696,815,840,],[45,59,60,61,64,65,66,69,95,-152,146,148,188,209,188,209,266,-154,-151,316,322,45,337,45,354,355,-153,433,541,316,146,541,188,541,45,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,738,739,841,862,]),'LLAVE_D':([6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,48,49,50,51,52,53,54,55,57,72,74,75,76,77,78,79,80,81,82,83,84,85,89,99,114,115,116,117,118,119,120,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,149,150,151,152,153,154,155,156,157,158,159,160,173,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,193,194,195,196,197,198,199,200,211,212,213,214,215,216,217,218,219,220,221,224,268,269,270,271,273,274,276,277,279,280,282,283,285,286,288,289,303,304,305,306,307,308,309,310,311,312,313,314,318,372,373,380,381,385,386,389,392,393,394,395,396,397,398,413,414,417,418,419,420,421,422,423,425,426,436,437,438,439,440,441,442,443,444,446,447,448,449,450,451,453,454,455,456,459,460,461,462,464,465,466,467,468,469,470,473,474,475,477,478,479,480,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,514,520,521,524,525,527,528,529,530,531,533,534,535,536,537,538,543,553,588,589,593,600,602,603,605,610,611,612,613,650,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,697,700,704,705,706,707,708,709,710,711,740,743,744,777,778,779,780,782,784,806,808,811,812,813,814,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,865,866,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-172,-173,-150,-15,-16,-17,-18,-20,-19,-226,-227,-21,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-231,-149,-116,-119,-269,-290,-291,-292,-293,267,-154,269,-187,-188,-189,-190,-191,-192,-193,-195,-199,-203,-207,-211,-215,-219,-151,303,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-145,-146,-49,-51,-53,-177,-338,-332,-345,-352,-74,-81,-87,-155,-156,-336,-344,-337,-349,-351,-356,-358,-157,-158,-310,-50,-52,-54,-178,-340,-334,-347,-354,-76,-83,-89,-311,-153,-186,-196,-197,-200,-201,-204,-205,-208,-209,-212,-213,-216,-217,-220,-221,-230,-33,-34,-35,-36,-37,-38,-39,-41,-40,-42,-43,426,-266,-264,-263,-265,-267,-268,-300,-299,-301,-297,-298,-294,-295,-296,-111,-112,-108,-93,-94,-95,-106,-107,-109,543,-121,-160,-161,-162,-163,-164,-360,-359,-361,-362,-176,-159,-64,-339,-336,-343,-66,-333,-308,-336,-69,-346,-349,-350,-71,-353,-302,-304,-356,-357,-336,-78,-75,-306,-85,-82,-91,-88,-65,-341,-67,-335,-309,-70,-348,-72,-355,-303,-305,-79,-77,-307,-86,-84,-92,-90,593,600,-280,-194,-223,-44,-45,-46,-47,-48,-198,-202,-206,-210,-214,-218,-120,-165,-167,-171,-179,-225,-222,654,655,661,662,663,664,700,-281,-224,-228,-96,705,706,707,708,-133,-132,-134,-135,709,710,711,740,-181,-229,-129,-128,-130,-131,-137,-136,-138,-180,779,780,813,814,-182,-183,-274,-275,-285,-283,-284,-282,-184,-185,-312,-313,-314,-315,-328,-329,-330,-331,-324,-325,-326,-327,-320,-321,-322,-323,-316,-317,-318,-319,-166,-168,]),'ELSE':([14,54,55,88,89,158,303,600,655,704,],[56,90,-227,90,-231,56,-230,-225,703,-229,]),'INT':([22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,45,54,55,59,60,64,66,69,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,100,102,109,114,115,116,117,118,119,120,127,143,144,145,146,148,150,151,152,153,154,155,156,157,158,159,160,166,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,211,212,213,214,215,216,217,218,219,220,221,224,235,236,237,238,239,240,241,242,243,244,245,246,247,248,253,254,255,256,260,262,264,268,269,272,303,315,316,317,337,340,341,342,343,354,355,356,357,358,359,365,372,373,380,381,385,386,389,392,393,394,395,396,397,398,399,402,413,414,417,418,419,420,421,422,423,427,428,436,437,438,439,440,441,442,443,444,446,447,448,449,450,451,453,454,455,456,459,460,461,462,464,465,466,467,468,469,470,473,474,475,477,478,479,480,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,518,519,521,522,526,540,541,545,552,553,556,588,589,593,595,596,597,600,608,609,647,653,655,656,700,701,702,704,713,719,720,721,722,740,741,742,779,780,782,783,784,786,795,801,805,806,808,811,812,813,814,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,865,866,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-172,-173,-150,79,-226,-227,79,79,114,114,79,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-231,114,-149,191,191,114,-116,-119,-269,-290,-291,-292,-293,-154,291,-151,79,300,114,114,114,114,114,114,114,114,114,114,114,114,114,-145,79,-146,-49,-51,-53,-177,-338,-332,-345,-352,-74,-81,-87,79,-155,-156,-336,-344,-337,-349,-351,-356,-358,-157,-158,-310,-50,-52,-54,-178,-340,-334,-347,-354,-76,-83,-89,-311,114,-240,-241,-242,79,79,-259,-260,-261,-262,-270,-271,-272,-273,114,79,114,79,392,397,401,-153,-186,291,-230,114,424,114,79,450,456,450,470,79,79,450,456,450,470,114,-266,-264,-263,-265,-267,-268,-300,-299,-301,-297,-298,-294,-295,-296,516,114,-111,-112,-108,-93,-94,-95,-106,-107,-109,114,114,-160,-161,-162,-163,-164,-360,-359,-361,-362,-176,-159,-64,-339,-336,-343,-66,-333,-308,-336,-69,-346,-349,-350,-71,-353,-302,-304,-356,-357,-336,-78,-75,-306,-85,-82,-91,-88,-65,-341,-67,-335,-309,-70,-348,-72,-355,-303,-305,-79,-77,-307,-86,-84,-92,-90,598,599,-280,601,114,114,607,114,79,-165,392,-167,-171,-179,648,649,114,-225,79,114,114,-281,-228,-96,-181,114,114,-229,747,754,755,756,757,-180,114,114,-182,-183,-274,816,-275,818,827,833,837,-285,-283,-284,-282,-184,-185,863,-312,-313,-314,-315,-328,-329,-330,-331,-324,-325,-326,-327,-320,-321,-322,-323,-316,-317,-318,-319,864,-166,-168,]),'LONG':([22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,45,54,55,59,60,64,66,69,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,100,102,109,114,115,116,117,118,119,120,127,143,144,145,148,150,151,152,153,154,155,156,157,158,159,160,166,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,211,212,213,214,215,216,217,218,219,220,221,224,235,236,237,238,239,240,241,242,243,244,245,246,247,248,253,254,255,256,268,269,275,303,315,316,317,337,354,355,365,372,373,380,381,385,386,389,392,393,394,395,396,397,398,402,413,414,417,418,419,420,421,422,423,427,428,436,437,438,439,440,441,442,443,444,446,447,448,449,450,451,453,454,455,456,459,460,461,462,464,465,466,467,468,469,470,473,474,475,477,478,479,480,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,521,526,540,541,545,552,553,588,589,593,597,600,608,609,647,653,655,656,700,701,702,704,723,724,725,726,740,741,742,779,780,782,784,787,791,799,803,806,808,811,812,813,814,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,865,866,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-172,-173,-150,80,-226,-227,80,80,80,80,80,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-231,80,-149,80,80,80,-116,-119,-269,-290,-291,-292,-293,-154,292,-151,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-145,80,-146,-49,-51,-53,-177,-338,-332,-345,-352,-74,-81,-87,80,-155,-156,-336,-344,-337,-349,-351,-356,-358,-157,-158,-310,-50,-52,-54,-178,-340,-334,-347,-354,-76,-83,-89,-311,80,-240,-241,-242,80,80,-259,-260,-261,-262,-270,-271,-272,-273,80,80,80,80,-153,-186,292,-230,80,80,80,80,80,80,80,-266,-264,-263,-265,-267,-268,-300,-299,-301,-297,-298,-294,-295,-296,80,-111,-112,-108,-93,-94,-95,-106,-107,-109,80,80,-160,-161,-162,-163,-164,-360,-359,-361,-362,-176,-159,-64,-339,-336,-343,-66,-333,-308,-336,-69,-346,-349,-350,-71,-353,-302,-304,-356,-357,-336,-78,-75,-306,-85,-82,-91,-88,-65,-341,-67,-335,-309,-70,-348,-72,-355,-303,-305,-79,-77,-307,-86,-84,-92,-90,-280,80,80,80,80,80,-165,-167,-171,-179,80,-225,80,80,80,-281,-228,-96,-181,80,80,-229,758,759,760,761,-180,80,80,-182,-183,-274,-275,819,823,831,835,-285,-283,-284,-282,-184,-185,-312,-313,-314,-315,-328,-329,-330,-331,-324,-325,-326,-327,-320,-321,-322,-323,-316,-317,-318,-319,-166,-168,]),'FLOAT':([22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,45,54,55,59,60,64,66,69,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,100,102,109,114,115,116,117,118,119,120,127,143,144,145,148,150,151,152,153,154,155,156,157,158,159,160,166,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,211,212,213,214,215,216,217,218,219,220,221,224,235,236,237,238,239,240,241,242,243,244,245,246,247,248,253,254,255,256,268,269,278,303,315,316,317,337,342,343,354,355,358,359,365,372,373,380,381,385,386,389,392,393,394,395,396,397,398,402,413,414,417,418,419,420,421,422,423,427,428,436,437,438,439,440,441,442,443,444,446,447,448,449,450,451,453,454,455,456,459,460,461,462,464,465,466,467,468,469,470,473,474,475,477,478,479,480,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,521,526,540,541,545,552,553,588,589,593,597,600,608,609,647,653,655,656,700,701,702,704,731,732,733,734,740,741,742,779,780,782,784,789,793,797,800,806,808,811,812,813,814,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,865,866,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-172,-173,-150,81,-226,-227,81,81,81,81,81,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-231,81,-149,194,194,81,-116,-119,-269,-290,-291,-292,-293,-154,293,-151,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-145,81,-146,-49,-51,-53,-177,-338,-332,-345,-352,-74,-81,-87,81,-155,-156,-336,-344,-337,-349,-351,-356,-358,-157,-158,-310,-50,-52,-54,-178,-340,-334,-347,-354,-76,-83,-89,-311,81,-240,-241,-242,81,81,-259,-260,-261,-262,-270,-271,-272,-273,81,81,81,81,-153,-186,293,-230,81,81,81,81,461,461,81,81,461,461,81,-266,-264,-263,-265,-267,-268,-300,-299,-301,-297,-298,-294,-295,-296,81,-111,-112,-108,-93,-94,-95,-106,-107,-109,81,81,-160,-161,-162,-163,-164,-360,-359,-361,-362,-176,-159,-64,-339,-336,-343,-66,-333,-308,-336,-69,-346,-349,-350,-71,-353,-302,-304,-356,-357,-336,-78,-75,-306,-85,-82,-91,-88,-65,-341,-67,-335,-309,-70,-348,-72,-355,-303,-305,-79,-77,-307,-86,-84,-92,-90,-280,81,81,81,81,81,-165,-167,-171,-179,81,-225,81,81,81,-281,-228,-96,-181,81,81,-229,766,767,768,769,-180,81,81,-182,-183,-274,-275,821,825,829,832,-285,-283,-284,-282,-184,-185,-312,-313,-314,-315,-328,-329,-330,-331,-324,-325,-326,-327,-320,-321,-322,-323,-316,-317,-318,-319,-166,-168,]),'DOUBLE':([22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,45,54,55,59,60,64,66,69,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,100,102,109,114,115,116,117,118,119,120,127,143,144,145,148,150,151,152,153,154,155,156,157,158,159,160,166,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,211,212,213,214,215,216,217,218,219,220,221,224,235,236,237,238,239,240,241,242,243,244,245,246,247,248,253,254,255,256,260,261,268,269,281,303,315,316,317,337,343,354,355,359,365,372,373,380,381,385,386,389,392,393,394,395,396,397,398,402,413,414,417,418,419,420,421,422,423,427,428,436,437,438,439,440,441,442,443,444,446,447,448,449,450,451,453,454,455,456,459,460,461,462,464,465,466,467,468,469,470,473,474,475,477,478,479,480,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,521,526,540,541,545,552,553,559,560,588,589,593,597,600,608,609,647,653,655,656,700,701,702,704,714,727,728,729,730,740,741,742,779,780,782,784,785,788,792,796,804,806,808,811,812,813,814,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,865,866,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-172,-173,-150,82,-226,-227,82,82,115,115,82,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-231,115,-149,196,196,115,-116,-119,-269,-290,-291,-292,-293,-154,294,-151,82,115,115,115,115,115,115,115,115,115,115,115,115,115,-145,82,-146,-49,-51,-53,-177,-338,-332,-345,-352,-74,-81,-87,82,-155,-156,-336,-344,-337,-349,-351,-356,-358,-157,-158,-310,-50,-52,-54,-178,-340,-334,-347,-354,-76,-83,-89,-311,115,-240,-241,-242,82,82,-259,-260,-261,-262,-270,-271,-272,-273,115,82,115,82,394,396,-153,-186,294,-230,115,82,115,82,468,82,82,468,115,-266,-264,-263,-265,-267,-268,-300,-299,-301,-297,-298,-294,-295,-296,115,-111,-112,-108,-93,-94,-95,-106,-107,-109,115,115,-160,-161,-162,-163,-164,-360,-359,-361,-362,-176,-159,-64,-339,-336,-343,-66,-333,-308,-336,-69,-346,-349,-350,-71,-353,-302,-304,-356,-357,-336,-78,-75,-306,-85,-82,-91,-88,-65,-341,-67,-335,-309,-70,-348,-72,-355,-303,-305,-79,-77,-307,-86,-84,-92,-90,-280,115,115,82,115,82,-165,396,394,-167,-171,-179,115,-225,82,115,115,-281,-228,-96,-181,115,115,-229,749,762,763,764,765,-180,115,115,-182,-183,-274,-275,817,820,824,828,836,-285,-283,-284,-282,-184,-185,-312,-313,-314,-315,-328,-329,-330,-331,-324,-325,-326,-327,-320,-321,-322,-323,-316,-317,-318,-319,-166,-168,]),'CHAR':([22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,45,54,55,59,60,64,66,69,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,100,102,109,114,115,116,117,118,119,120,127,143,144,145,148,150,151,152,153,154,155,156,157,158,159,160,166,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,211,212,213,214,215,216,217,218,219,220,221,224,235,236,237,238,239,241,242,243,244,253,255,258,259,261,262,268,269,287,303,315,316,317,337,341,343,344,345,354,355,357,359,360,361,365,372,373,380,381,385,386,389,392,393,394,395,396,397,398,402,413,414,417,418,419,420,421,422,423,427,428,436,437,438,439,440,441,442,443,444,446,447,448,449,450,451,453,454,455,456,459,460,461,462,464,465,466,467,468,469,470,473,474,475,477,478,479,480,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,521,526,540,541,545,552,553,555,588,589,593,597,600,608,609,647,653,655,656,700,701,702,704,735,738,740,741,742,779,780,782,784,806,807,808,811,812,813,814,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,865,866,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-172,-173,-150,75,-226,-227,75,75,113,113,75,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-231,164,-149,185,220,113,-116,-119,-269,-290,-291,-292,-293,-154,296,-151,75,113,164,164,164,164,164,164,164,164,164,164,164,164,-145,75,-146,-49,-51,-53,-177,-338,-332,-345,-352,-74,-81,-87,75,-155,-156,-336,-344,-337,-349,-351,-356,-358,-157,-158,-310,-50,-52,-54,-178,-340,-334,-347,-354,-76,-83,-89,-311,113,-240,-241,-242,371,-259,-260,-261,-262,164,164,389,390,395,398,-153,-186,296,-230,422,75,164,75,457,471,476,478,75,75,457,471,476,508,164,-266,-264,-263,-265,-267,-268,-300,-299,-301,-297,-298,-294,-295,-296,164,-111,-112,-108,-93,-94,-95,-106,-107,-109,164,164,-160,-161,-162,-163,-164,-360,-359,-361,-362,-176,-159,-64,-339,-336,-343,-66,-333,-308,-336,-69,-346,-349,-350,-71,-353,-302,-304,-356,-357,-336,-78,-75,-306,-85,-82,-91,-88,-65,-341,-67,-335,-309,-70,-348,-72,-355,-303,-305,-79,-77,-307,-86,-84,-92,-90,-280,164,164,75,422,75,-165,395,-167,-171,-179,164,-225,75,422,164,-281,-228,-96,-181,164,164,-229,771,771,-180,164,164,-182,-183,-274,-275,-285,838,-283,-284,-282,-184,-185,-312,-313,-314,-315,-328,-329,-330,-331,-324,-325,-326,-327,-320,-321,-322,-323,-316,-317,-318,-319,-166,-168,]),'RETURN':([22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,54,55,72,74,75,76,77,78,79,80,81,82,83,84,85,89,99,114,115,116,117,118,119,120,127,144,150,151,152,153,154,155,156,157,158,159,160,173,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,193,194,195,196,197,198,199,200,211,212,213,214,215,216,217,218,219,220,221,224,268,269,303,304,305,306,307,308,309,310,311,312,313,314,372,373,380,381,385,386,389,392,393,394,395,396,397,398,413,414,417,418,419,420,421,422,423,427,436,437,438,439,440,441,442,443,444,446,447,448,449,450,451,453,454,455,456,459,460,461,462,464,465,466,467,468,469,470,473,474,475,477,478,479,480,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,521,544,546,553,588,589,593,600,653,655,656,700,704,740,779,780,782,784,806,808,811,812,813,814,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,865,866,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-172,-173,-150,-226,-227,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-231,-149,-116,-119,-269,-290,-291,-292,-293,-154,-151,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-145,-146,-49,-51,-53,-177,-338,-332,-345,-352,-74,-81,-87,-155,-156,-336,-344,-337,-349,-351,-356,-358,-157,-158,-310,-50,-52,-54,-178,-340,-334,-347,-354,-76,-83,-89,-311,-153,-186,-230,-33,-34,-35,-36,-37,-38,-39,-41,-40,-42,-43,-266,-264,-263,-265,-267,-268,-300,-299,-301,-297,-298,-294,-295,-296,-111,-112,-108,-93,-94,-95,-106,-107,-109,545,-160,-161,-162,-163,-164,-360,-359,-361,-362,-176,-159,-64,-339,-336,-343,-66,-333,-308,-336,-69,-346,-349,-350,-71,-353,-302,-304,-356,-357,-336,-78,-75,-306,-85,-82,-91,-88,-65,-341,-67,-335,-309,-70,-348,-72,-355,-303,-305,-79,-77,-307,-86,-84,-92,-90,-280,609,614,-165,-167,-171,-179,-225,-281,-228,-96,-181,-229,-180,-182,-183,-274,-275,-285,-283,-284,-282,-184,-185,-312,-313,-314,-315,-328,-329,-330,-331,-324,-325,-326,-327,-320,-321,-322,-323,-316,-317,-318,-319,-166,-168,]),'CASE':([22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,70,72,74,75,76,77,78,79,80,81,82,83,84,85,99,114,115,116,117,118,119,120,127,136,137,138,139,140,141,142,144,173,175,176,177,178,179,180,181,182,183,184,185,186,189,190,191,192,193,194,195,196,197,198,199,200,211,212,213,214,215,216,217,218,219,220,221,224,268,372,373,380,381,385,386,389,392,393,394,395,396,397,398,413,414,417,418,419,420,421,422,423,436,437,438,439,440,441,442,443,444,446,447,448,449,450,451,453,454,455,456,459,460,461,462,464,465,466,467,468,469,470,473,474,475,477,478,479,480,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,521,524,525,527,528,529,530,531,533,534,535,536,537,538,553,588,589,653,654,656,782,784,806,808,811,812,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,865,866,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-172,-173,-150,143,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-149,-116,-119,-269,-290,-291,-292,-293,-154,272,275,278,281,284,287,290,-151,-145,-146,-49,-51,-53,-177,-338,-332,-345,-352,-74,-81,-87,-155,-156,-336,-344,-337,-349,-351,-356,-358,-157,-158,-310,-50,-52,-54,-178,-340,-334,-347,-354,-76,-83,-89,-311,-153,-266,-264,-263,-265,-267,-268,-300,-299,-301,-297,-298,-294,-295,-296,-111,-112,-108,-93,-94,-95,-106,-107,-109,-160,-161,-162,-163,-164,-360,-359,-361,-362,-176,-159,-64,-339,-336,-343,-66,-333,-308,-336,-69,-346,-349,-350,-71,-353,-302,-304,-356,-357,-336,-78,-75,-306,-85,-82,-91,-88,-65,-341,-67,-335,-309,-70,-348,-72,-355,-303,-305,-79,-77,-307,-86,-84,-92,-90,-280,-194,-223,-44,-45,-46,-47,-48,-198,-202,-206,-210,-214,-218,-165,-167,-171,-281,-224,-96,-274,-275,-285,-283,-284,-282,-312,-313,-314,-315,-328,-329,-330,-331,-324,-325,-326,-327,-320,-321,-322,-323,-316,-317,-318,-319,-166,-168,]),'PUNTO':([34,43,47,72,74,99,112,127,144,147,163,176,184,189,198,199,211,219,268,295,370,415,417,421,452,458,463,472,610,657,665,],[67,-150,87,-152,67,-149,67,-154,-151,301,67,335,336,339,-157,-158,335,336,-153,67,67,539,335,67,554,557,558,561,335,335,335,]),'LLAVE_I':([42,44,56,90,93,94,165,170,234,265,319,320,332,406,407,408,409,410,411,412,416,434,517,523,594,651,652,698,699,],[68,70,92,92,166,-124,317,-125,365,402,427,428,-126,526,526,526,526,526,526,526,540,-127,597,526,647,701,702,741,742,]),'PAR_D':([45,61,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,95,96,97,98,104,105,106,107,108,114,115,116,117,118,119,120,123,126,171,250,251,252,298,299,300,302,316,323,324,325,326,327,328,329,334,338,366,367,368,369,370,371,372,373,374,375,376,377,378,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,400,403,413,414,424,429,430,435,445,491,492,515,521,541,548,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,598,599,601,606,607,615,616,617,618,648,649,653,668,746,747,748,749,770,771,772,773,775,776,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,863,864,],[72,99,127,144,-174,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,170,173,-148,175,234,-233,-234,-235,-236,-116,-119,-269,-290,-291,-292,-293,265,268,332,-237,-238,-239,-175,413,414,416,72,-97,-98,-99,-100,-101,-102,-103,-147,446,-232,-258,-250,-252,-254,-256,-266,-264,-247,-253,-243,-246,-251,-263,-265,-244,-245,-267,-268,-248,-255,-300,-249,-257,-299,-301,-297,-298,-294,-295,-296,517,521,-111,-112,542,547,-141,-122,553,588,589,594,-280,72,-142,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,651,652,653,413,414,-143,-104,-105,-123,698,699,-281,-144,782,-276,784,-278,806,-288,808,-286,811,812,-277,-279,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,-289,-287,865,866,]),'TRUE':([45,59,60,64,66,69,100,102,109,143,145,148,174,188,235,236,237,238,239,241,242,243,244,249,290,315,316,337,346,354,355,362,541,545,552,608,609,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-240,-241,-242,83,-259,-260,-261,-262,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'FLASE':([45,59,60,64,66,69,100,102,109,143,145,148,174,188,235,236,237,238,239,241,242,243,244,249,290,315,316,337,346,354,355,362,541,545,552,608,609,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-240,-241,-242,84,-259,-260,-261,-262,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'IGUAL':([62,63,93,94,161,167,168,170,201,202,203,204,205,206,207,225,226,227,228,229,230,231,321,323,324,325,326,327,328,329,332,434,435,532,542,547,563,564,565,586,587,590,591,592,616,617,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,],[100,102,165,-124,315,319,320,-125,340,341,342,343,344,345,346,356,357,358,359,360,361,362,-139,-97,-98,-99,-100,-101,-102,-103,-126,-127,552,315,608,-140,619,620,621,642,643,644,645,646,-104,-105,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,]),'DOBLE_PUNTO':([62,63,93,94,170,172,332,434,],[101,103,169,-124,-125,333,-126,-127,]),'NOT':([64,66,79,80,81,82,83,84,85,105,106,107,108,114,115,116,117,118,119,120,148,235,236,237,238,250,251,252,367,368,369,370,371,372,373,374,375,376,377,378,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,521,653,],[109,109,-116,-117,-118,-119,-113,-114,-115,238,-234,-235,-236,-116,-119,-269,-290,-291,-292,-293,109,109,-240,-241,-242,-237,-238,-239,-258,-250,-252,-254,-256,-266,-264,-247,-253,-243,-246,-251,-263,-265,-244,-245,-267,-268,-248,-255,-300,-249,-257,-299,-301,-297,-298,-294,-295,-296,-280,-281,]),'STARTSWITH':([67,336,],[124,124,]),'COMA':([73,74,75,76,77,78,79,80,81,82,83,84,85,323,324,325,326,327,328,329,348,349,350,351,352,403,413,414,424,430,521,606,607,615,616,617,653,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,775,776,816,817,838,839,],[145,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-97,-98,-99,-100,-101,-102,-103,484,485,486,487,488,522,-111,-112,-116,549,-280,-108,-116,549,-104,-105,-281,783,-276,785,-278,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,807,-288,809,-286,807,809,-277,-279,-289,-287,]),'MAS':([74,75,76,77,78,79,80,81,82,83,84,85,97,112,113,114,115,163,164,184,185,191,196,219,220,379,413,414,421,422,456,457,468,470,471,474,476,505,521,653,],[-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,174,258,260,261,262,258,260,258,260,261,262,258,260,258,-111,-112,258,260,555,556,262,559,560,258,562,258,-280,-281,]),'AND':([79,80,81,82,83,84,85,105,106,107,108,114,115,116,117,118,119,120,250,251,252,367,368,369,370,371,372,373,374,375,376,377,378,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,521,653,],[-116,-117,-118,-119,-113,-114,-115,236,-234,-235,-236,-116,-119,-269,-290,-291,-292,-293,-237,-238,-239,-258,-250,-252,-254,-256,-266,-264,-247,-253,-243,-246,-251,-263,-265,-244,-245,-267,-268,-248,-255,-300,-249,-257,-299,-301,-297,-298,-294,-295,-296,-280,-281,]),'OR':([79,80,81,82,83,84,85,105,106,107,108,114,115,116,117,118,119,120,250,251,252,367,368,369,370,371,372,373,374,375,376,377,378,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,521,653,],[-116,-117,-118,-119,-113,-114,-115,237,-234,-235,-236,-116,-119,-269,-290,-291,-292,-293,-237,-238,-239,-258,-250,-252,-254,-256,-266,-264,-247,-253,-243,-246,-251,-263,-265,-244,-245,-267,-268,-248,-255,-300,-249,-257,-299,-301,-297,-298,-294,-295,-296,-280,-281,]),'IGUAL_COMPARACION':([79,80,81,82,83,84,85,106,107,110,111,112,113,114,115,116,117,118,119,120,250,251,372,373,380,381,385,386,389,392,393,394,395,396,397,398,521,653,],[-116,-117,-118,-119,-113,-114,-115,241,241,241,241,241,241,-116,-119,-269,-290,-291,-292,-293,241,241,-266,-264,-263,-265,-267,-268,-300,-299,-301,-297,-298,-294,-295,-296,-280,-281,]),'DIFERENTE':([79,80,81,82,83,84,85,106,107,110,111,112,113,114,115,116,117,118,119,120,250,251,372,373,380,381,385,386,389,392,393,394,395,396,397,398,521,653,],[-116,-117,-118,-119,-113,-114,-115,242,242,242,242,242,242,-116,-119,-269,-290,-291,-292,-293,242,242,-266,-264,-263,-265,-267,-268,-300,-299,-301,-297,-298,-294,-295,-296,-280,-281,]),'MAYOR':([79,80,81,82,83,84,85,106,107,110,111,112,113,114,115,116,117,118,119,120,250,251,372,373,380,381,385,386,389,392,393,394,395,396,397,398,521,653,],[-116,-117,-118,-119,-113,-114,-115,243,243,243,243,243,243,-116,-119,-269,-290,-291,-292,-293,243,243,-266,-264,-263,-265,-267,-268,-300,-299,-301,-297,-298,-294,-295,-296,-280,-281,]),'MENOR':([79,80,81,82,83,84,85,106,107,110,111,112,113,114,115,116,117,118,119,120,250,251,372,373,380,381,385,386,389,392,393,394,395,396,397,398,521,653,],[-116,-117,-118,-119,-113,-114,-115,244,244,244,244,244,244,-116,-119,-269,-290,-291,-292,-293,244,244,-266,-264,-263,-265,-267,-268,-300,-299,-301,-297,-298,-294,-295,-296,-280,-281,]),'MENOS':([79,80,81,82,106,110,111,114,115,116,117,118,119,120,159,161,162,176,177,191,194,196,211,212,250,372,373,376,377,378,380,381,382,383,384,385,386,389,392,393,394,395,396,397,398,417,420,423,610,613,657,660,],[-116,-117,-118,-119,245,245,245,-116,-119,-269,-290,-291,-292,-293,245,245,245,245,245,-116,-118,-119,245,245,245,-266,-264,245,245,245,-263,-265,245,245,245,-267,-268,-300,-299,-301,-297,-298,-294,-295,-296,245,245,245,245,245,245,245,]),'MULTIPLICACION':([79,80,81,82,106,110,111,114,115,116,117,118,119,120,159,161,162,176,177,191,194,196,211,212,250,372,373,376,377,378,380,381,382,383,384,385,386,389,392,393,394,395,396,397,398,417,420,423,610,613,657,660,],[-116,-117,-118,-119,246,246,246,-116,-119,-269,-290,-291,-292,-293,246,246,246,246,246,-116,-118,-119,246,246,246,-266,-264,246,246,246,-263,-265,246,246,246,-267,-268,-300,-299,-301,-297,-298,-294,-295,-296,246,246,246,246,246,246,246,]),'DIVISION':([79,80,81,82,106,110,111,114,115,116,117,118,119,120,159,161,162,176,177,191,194,196,211,212,250,372,373,376,377,378,380,381,382,383,384,385,386,389,392,393,394,395,396,397,398,417,420,423,610,613,657,660,],[-116,-117,-118,-119,247,247,247,-116,-119,-269,-290,-291,-292,-293,247,247,247,247,247,-116,-118,-119,247,247,247,-266,-264,247,247,247,-263,-265,247,247,247,-267,-268,-300,-299,-301,-297,-298,-294,-295,-296,247,247,247,247,247,247,247,]),'MOD':([79,80,81,82,106,110,111,114,115,116,117,118,119,120,159,161,162,176,177,191,194,196,211,212,250,372,373,376,377,378,380,381,382,383,384,385,386,389,392,393,394,395,396,397,398,417,420,423,610,613,657,660,],[-116,-117,-118,-119,248,248,248,-116,-119,-269,-290,-291,-292,-293,248,248,248,248,248,-116,-118,-119,248,248,248,-266,-264,248,248,248,-263,-265,248,248,248,-267,-268,-300,-299,-301,-297,-298,-294,-295,-296,248,248,248,248,248,248,248,]),'FUNCION_FLECHA':([83,84,85,291,292,293,294,295,296,297,404,405,521,653,],[-113,-114,-115,406,407,408,409,410,411,412,523,410,-280,-281,]),'ARRAYCLASS':([100,101,102,103,169,322,333,347,363,431,432,549,620,621,669,694,745,774,],[187,208,222,232,330,330,330,330,330,330,330,330,670,671,712,737,330,330,]),'LONGCLASS':([101,103,169,209,322,333,347,363,431,432,484,485,487,488,549,745,774,],[201,225,327,350,327,327,327,327,327,327,567,571,579,583,327,327,327,]),'INTCLASS':([101,103,169,209,322,333,347,363,431,432,484,486,487,488,549,745,774,],[202,226,326,349,326,326,482,326,326,326,566,575,581,585,326,326,326,]),'FLOATCLASS':([101,103,169,209,322,333,347,363,431,432,484,485,486,487,549,745,774,],[203,227,329,352,329,329,329,329,329,329,569,573,577,580,329,329,329,]),'DOUBLECLASS':([101,103,169,209,322,333,347,363,431,432,484,485,486,488,549,745,774,],[204,228,328,351,328,328,483,328,328,328,568,572,576,584,328,328,328,]),'STRINGCLASS':([101,103,169,209,322,333,347,353,363,364,431,432,485,486,487,488,549,745,774,],[205,229,324,348,324,324,324,490,324,513,324,324,570,574,578,582,324,324,324,]),'CHARCLASS':([101,103,169,322,333,347,353,363,364,431,432,549,745,774,],[206,230,323,323,323,323,489,323,512,323,323,323,323,323,]),'BOOLCLASS':([101,103,169,322,333,347,363,431,432,549,745,774,],[207,231,325,325,325,325,325,325,325,325,325,325,]),'LISTCLASS':([101,102,103,169,322,333,347,363,431,432,549,642,643,645,646,745,774,],[210,223,233,331,331,331,331,331,331,331,331,692,693,695,696,331,331,]),'ITERATOR':([122,263,],[264,399,]),'CORCHETE_I':([208,210,232,233,330,331,712,737,],[347,353,363,364,431,432,745,774,]),'SUBGUION':([272,275,278,281,284,287,290,],[404,404,404,404,404,404,404,]),'CORCHETE_D':([323,324,325,326,327,328,329,481,482,483,489,490,511,512,513,550,551,616,617,781,810,],[-97,-98,-99,-100,-101,-102,-103,563,564,565,586,587,590,591,592,616,617,-104,-105,815,840,]),'TO_INT':([335,336,339,554,557,558,561,],[437,442,437,442,442,442,442,]),'TO_DOUBLE':([335,336,339,561,],[438,444,438,444,]),'TO_FLOAT':([335,336,339,558,561,],[439,443,439,443,443,]),'TO_LONG':([335,336,339,554,558,561,],[440,441,440,441,441,441,]),'TO':([401,516,],[518,595,]),'UNTIL':([401,516,],[519,596,]),'NEW':([619,644,],[669,694,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,46,],[1,86,]),'cuerpo':([0,6,10,11,12,13,14,15,46,68,],[4,48,49,50,51,52,53,57,4,125,]),'funcion':([0,6,10,11,12,13,14,15,46,68,],[6,6,6,6,6,6,6,6,6,6,]),'funcall':([0,6,10,11,12,13,14,15,46,68,92,100,102,150,151,152,153,154,155,156,157,158,159,160,166,315,317,365,402,406,407,408,409,410,411,412,427,428,523,526,540,545,597,609,614,647,701,702,741,742,],[7,7,7,7,7,7,7,7,7,7,152,199,199,152,152,152,152,152,152,152,152,152,152,152,152,199,152,152,152,529,529,529,529,529,529,529,152,152,529,152,152,199,152,199,199,152,152,152,152,152,]),'impresion':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,406,407,408,409,410,411,412,427,428,523,526,540,597,647,701,702,741,742,],[8,8,8,8,8,8,8,8,8,8,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,530,530,530,530,530,530,530,153,153,530,153,153,153,153,153,153,153,153,]),'entrada':([0,6,10,11,12,13,14,15,46,68,92,100,102,150,151,152,153,154,155,156,157,158,159,160,166,315,317,365,402,406,407,408,409,410,411,412,427,428,523,526,540,545,597,609,614,647,701,702,741,742,],[9,9,9,9,9,9,9,9,9,9,154,198,198,154,154,154,154,154,154,154,154,154,154,154,154,198,154,154,154,531,531,531,531,531,531,531,154,154,531,154,154,198,154,198,198,154,154,154,154,154,]),'asignacion':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,406,407,408,409,410,411,412,427,428,523,526,540,597,647,701,702,741,742,],[10,10,10,10,10,10,10,10,10,10,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,527,527,527,527,527,527,527,150,150,527,150,150,150,150,150,150,150,150,]),'while':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,427,428,526,540,597,647,701,702,741,742,],[11,11,11,11,11,11,11,11,11,11,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'for':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,427,428,526,540,597,647,701,702,741,742,],[12,12,12,12,12,12,12,12,12,12,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'match':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,427,428,526,540,597,647,701,702,741,742,],[13,13,13,13,13,13,13,13,13,13,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'if':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,427,428,526,540,597,647,701,702,741,742,],[14,14,14,14,14,14,14,14,14,14,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'startsWith':([0,6,10,11,12,13,14,15,45,46,59,60,64,66,68,69,92,100,102,109,143,145,148,150,151,152,153,154,155,156,157,158,159,160,166,174,188,235,239,249,290,315,316,317,337,346,354,355,362,365,402,427,428,526,540,541,545,552,597,608,609,647,701,702,741,742,],[15,15,15,15,15,15,15,15,85,15,85,85,85,85,15,85,160,85,85,85,85,85,85,160,160,160,160,160,160,160,160,160,160,160,160,85,85,85,85,85,85,85,85,160,85,85,85,85,85,160,160,160,160,160,160,85,85,85,160,85,85,160,160,160,160,160,]),'asignacionLong':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,406,407,408,409,410,411,412,427,428,523,526,540,597,647,701,702,741,742,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'asignacionInt':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,406,407,408,409,410,411,412,427,428,523,526,540,597,647,701,702,741,742,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'asignacionFloat':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,406,407,408,409,410,411,412,427,428,523,526,540,597,647,701,702,741,742,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'asignacionDouble':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,406,407,408,409,410,411,412,427,428,523,526,540,597,647,701,702,741,742,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'asignacionString':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,406,407,408,409,410,411,412,427,428,523,526,540,597,647,701,702,741,742,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'asignacionChar':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,406,407,408,409,410,411,412,427,428,523,526,540,597,647,701,702,741,742,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'asignacionBoolean':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,406,407,408,409,410,411,412,427,428,523,526,540,597,647,701,702,741,742,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'array':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,406,407,408,409,410,411,412,427,428,523,526,540,597,647,701,702,741,742,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'list':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,406,407,408,409,410,411,412,427,428,523,526,540,597,647,701,702,741,742,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'asignacionSumInt':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,406,407,408,409,410,411,412,427,428,523,526,540,597,647,701,702,741,742,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'asignacionSumDouble':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,406,407,408,409,410,411,412,427,428,523,526,540,597,647,701,702,741,742,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'asignacionSumString':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,406,407,408,409,410,411,412,427,428,523,526,540,597,647,701,702,741,742,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'arrayInt':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,406,407,408,409,410,411,412,427,428,523,526,540,597,647,701,702,741,742,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'arrayDouble':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,406,407,408,409,410,411,412,427,428,523,526,540,597,647,701,702,741,742,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'listChar':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,406,407,408,409,410,411,412,427,428,523,526,540,597,647,701,702,741,742,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'listString':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,406,407,408,409,410,411,412,427,428,523,526,540,597,647,701,702,741,742,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'varparen':([3,161,176,211,417,532,610,657,665,],[43,43,43,43,43,43,43,43,43,]),'io':([5,],[46,]),'elseif':([14,54,88,158,655,],[54,88,88,54,704,]),'else':([14,54,88,158,],[55,89,89,55,]),'valores':([45,69,145,188,316,337,354,355,541,],[71,126,298,338,71,445,491,492,71,]),'valor':([45,59,60,69,145,174,188,315,316,337,354,355,541,545,552,608,609,],[73,97,97,73,73,97,73,418,73,73,73,73,73,611,618,656,658,]),'numeros':([45,59,60,64,66,69,92,100,102,109,145,148,150,151,152,153,154,155,156,157,158,159,160,166,174,188,235,239,240,253,254,255,256,315,316,317,337,354,355,365,402,427,428,526,540,541,545,552,597,608,609,647,701,702,741,742,],[77,77,77,110,110,77,162,162,162,110,77,110,162,162,162,162,162,162,162,162,162,162,162,162,77,77,110,368,373,376,380,383,385,423,77,162,77,77,77,162,162,162,162,162,162,77,423,77,162,77,423,162,162,162,162,162,]),'booleanos':([45,59,60,64,66,69,100,102,109,143,145,148,174,188,235,239,249,290,315,316,337,346,354,355,362,541,545,552,608,609,],[78,78,78,107,107,78,186,221,251,297,78,107,78,78,107,369,374,297,78,78,78,480,78,78,510,78,78,78,78,78,]),'parametro':([58,],[93,]),'parametros':([58,332,],[94,434,]),'valorI':([59,60,174,],[96,98,334,]),'condicional':([64,66,148,235,],[104,123,302,366,]),'valorC':([64,66,148,235,],[105,105,105,105,]),'relacional':([64,66,109,148,235,],[108,108,252,108,108,]),'aritmetica':([64,66,92,100,102,109,148,150,151,152,153,154,155,156,157,158,159,160,166,235,253,255,315,317,365,402,427,428,526,540,545,597,609,647,701,702,741,742,],[111,111,159,177,212,111,111,159,159,159,159,159,159,159,159,159,159,159,159,111,377,382,420,159,159,159,159,159,159,159,613,159,660,159,159,159,159,159,]),'suma':([64,66,92,100,102,109,148,150,151,152,153,154,155,156,157,158,159,160,166,235,253,255,315,317,365,402,427,428,526,540,545,597,609,647,701,702,741,742,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'sumIntChar':([64,66,92,100,102,109,148,150,151,152,153,154,155,156,157,158,159,160,166,235,253,255,315,317,341,357,365,402,427,428,526,540,545,597,609,647,701,702,741,742,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,455,497,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'sumStringChar':([64,66,92,100,102,109,148,150,151,152,153,154,155,156,157,158,159,160,166,235,253,255,315,317,344,360,365,402,427,428,526,540,545,597,609,647,701,702,741,742,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,475,506,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'sumIntDouble':([64,66,92,100,102,109,148,150,151,152,153,154,155,156,157,158,159,160,166,235,253,255,315,317,343,359,365,402,427,428,526,540,545,597,609,647,701,702,741,742,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,466,502,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'sumDoubleChar':([64,66,92,100,102,109,148,150,151,152,153,154,155,156,157,158,159,160,166,235,253,255,315,317,343,359,365,402,427,428,526,540,545,597,609,647,701,702,741,742,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,467,503,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'cases':([70,],[128,]),'casesInt':([70,136,],[129,270,]),'casesLgn':([70,137,],[130,273,]),'casesFlt':([70,138,],[131,276,]),'casesDob':([70,139,],[132,279,]),'casesStr':([70,140,],[133,282,]),'casesChar':([70,141,],[134,285,]),'casesBool':([70,142,],[135,288,]),'caseInt':([70,136,],[136,136,]),'caseLgn':([70,137,],[137,137,]),'caseFlt':([70,138,],[138,138,]),'caseDob':([70,139,],[139,139,]),'caseStr':([70,140,],[140,140,]),'caseChar':([70,141,],[141,141,]),'caseBool':([70,142,],[142,142,]),'contenido':([92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,427,428,526,540,597,647,701,702,741,742,],[149,304,305,306,307,308,309,310,311,312,313,314,318,425,514,520,544,546,603,605,650,697,743,744,777,778,]),'reasignacion':([92,150,151,152,153,154,155,156,157,158,159,160,166,317,365,402,406,407,408,409,410,411,412,427,428,523,526,540,597,647,701,702,741,742,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,528,528,528,528,528,528,528,151,151,528,151,151,151,151,151,151,151,151,]),'dectipo':([93,],[167,]),'dectipoTupla':([93,],[168,]),'declaracion':([95,433,],[171,171,]),'returnfun':([100,102,315,545,609,614,],[178,213,419,612,659,667,]),'tuple':([100,102,614,],[179,214,666,]),'longvalues':([100,102,340,342,343,356,358,359,],[180,215,449,462,462,494,462,462,]),'intvalues':([100,102,340,341,342,343,356,357,358,359,],[181,216,451,454,451,451,451,496,451,451,]),'floatvalues':([100,102,342,343,358,359,],[182,217,460,469,499,469,]),'doublevalues':([100,102,343,359,],[183,218,465,501,]),'returnCastable':([100,102,315,545,609,614,],[189,189,189,189,189,189,]),'castingcall':([100,102,315,545,609,614,],[190,190,190,190,190,190,]),'stringCastLong':([100,102,340,342,343,356,358,359,],[192,192,192,192,192,192,192,192,]),'stringCastInt':([100,102,340,341,342,343,356,357,358,359,],[193,193,193,193,193,193,193,193,193,193,]),'stringCastFloat':([100,102,342,343,358,359,],[195,195,195,195,195,195,]),'stringCastDouble':([100,102,343,359,],[197,197,197,197,]),'dectupla':([101,103,],[200,224,]),'logicos':([105,],[235,]),'comparacion':([106,107,110,111,112,113,250,251,],[239,249,253,255,257,259,239,249,]),'aritmeticos':([106,110,111,159,161,162,176,177,211,212,250,376,377,378,382,383,384,417,420,423,610,613,657,660,],[240,254,256,256,240,254,240,256,240,256,240,254,256,240,256,254,240,240,256,254,240,256,240,256,]),'defcase':([136,137,138,139,140,141,142,],[271,274,277,280,283,286,289,]),'tipo':([169,322,333,347,363,431,432,549,745,774,],[321,430,435,481,511,550,551,615,781,810,]),'tipos':([322,],[429,]),'castingfun':([335,339,],[436,447,]),'codeBlock':([406,407,408,409,410,411,412,523,],[524,533,534,535,536,537,538,602,]),'contenidoLine':([406,407,408,409,410,411,412,523,],[525,525,525,525,525,525,525,525,]),'tiposentry':([430,615,],[548,668,]),'valoresInt':([713,],[746,]),'valoresDouble':([714,],[748,]),'valoresChar':([735,738,],[770,775,]),'valoresString':([736,739,],[772,776,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D','inicio',5,'p_inicio','sintax.py',13),
  ('inicio -> IMPORT io inicio','inicio',3,'p_inicio','sintax.py',14),
  ('inicio -> cuerpo','inicio',1,'p_inicio','sintax.py',15),
  ('io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE','io',7,'p_io','sintax.py',20),
  ('cuerpo -> funcion','cuerpo',1,'p_cuerpo','sintax.py',23),
  ('cuerpo -> funcall','cuerpo',1,'p_cuerpo','sintax.py',24),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintax.py',25),
  ('cuerpo -> entrada','cuerpo',1,'p_cuerpo','sintax.py',26),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintax.py',27),
  ('cuerpo -> while','cuerpo',1,'p_cuerpo','sintax.py',28),
  ('cuerpo -> for','cuerpo',1,'p_cuerpo','sintax.py',29),
  ('cuerpo -> match','cuerpo',1,'p_cuerpo','sintax.py',30),
  ('cuerpo -> if','cuerpo',1,'p_cuerpo','sintax.py',31),
  ('cuerpo -> startsWith','cuerpo',1,'p_cuerpo','sintax.py',32),
  ('cuerpo -> funcion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',33),
  ('cuerpo -> asignacion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',34),
  ('cuerpo -> while cuerpo','cuerpo',2,'p_cuerpo','sintax.py',35),
  ('cuerpo -> for cuerpo','cuerpo',2,'p_cuerpo','sintax.py',36),
  ('cuerpo -> if cuerpo','cuerpo',2,'p_cuerpo','sintax.py',37),
  ('cuerpo -> match cuerpo','cuerpo',2,'p_cuerpo','sintax.py',38),
  ('cuerpo -> startsWith cuerpo','cuerpo',2,'p_cuerpo','sintax.py',39),
  ('contenido -> asignacion','contenido',1,'p_contenido','sintax.py',43),
  ('contenido -> reasignacion','contenido',1,'p_contenido','sintax.py',44),
  ('contenido -> funcall','contenido',1,'p_contenido','sintax.py',45),
  ('contenido -> impresion','contenido',1,'p_contenido','sintax.py',46),
  ('contenido -> entrada','contenido',1,'p_contenido','sintax.py',47),
  ('contenido -> while','contenido',1,'p_contenido','sintax.py',48),
  ('contenido -> for','contenido',1,'p_contenido','sintax.py',49),
  ('contenido -> match','contenido',1,'p_contenido','sintax.py',50),
  ('contenido -> if','contenido',1,'p_contenido','sintax.py',51),
  ('contenido -> aritmetica','contenido',1,'p_contenido','sintax.py',52),
  ('contenido -> startsWith','contenido',1,'p_contenido','sintax.py',53),
  ('contenido -> asignacion contenido','contenido',2,'p_contenido','sintax.py',54),
  ('contenido -> reasignacion contenido','contenido',2,'p_contenido','sintax.py',55),
  ('contenido -> funcall contenido','contenido',2,'p_contenido','sintax.py',56),
  ('contenido -> impresion contenido','contenido',2,'p_contenido','sintax.py',57),
  ('contenido -> entrada contenido','contenido',2,'p_contenido','sintax.py',58),
  ('contenido -> while contenido','contenido',2,'p_contenido','sintax.py',59),
  ('contenido -> for contenido','contenido',2,'p_contenido','sintax.py',60),
  ('contenido -> if contenido','contenido',2,'p_contenido','sintax.py',61),
  ('contenido -> match contenido','contenido',2,'p_contenido','sintax.py',62),
  ('contenido -> aritmetica contenido','contenido',2,'p_contenido','sintax.py',63),
  ('contenido -> startsWith contenido','contenido',2,'p_contenido','sintax.py',64),
  ('contenidoLine -> asignacion','contenidoLine',1,'p_contenidoLine','sintax.py',68),
  ('contenidoLine -> reasignacion','contenidoLine',1,'p_contenidoLine','sintax.py',69),
  ('contenidoLine -> funcall','contenidoLine',1,'p_contenidoLine','sintax.py',70),
  ('contenidoLine -> impresion','contenidoLine',1,'p_contenidoLine','sintax.py',71),
  ('contenidoLine -> entrada','contenidoLine',1,'p_contenidoLine','sintax.py',72),
  ('asignacion -> VAR VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',76),
  ('asignacion -> VAL VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',77),
  ('asignacion -> VAR VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',78),
  ('asignacion -> VAL VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',79),
  ('asignacion -> VAR VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',80),
  ('asignacion -> VAL VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',81),
  ('asignacion -> asignacionLong','asignacion',1,'p_asignacion','sintax.py',82),
  ('asignacion -> asignacionInt','asignacion',1,'p_asignacion','sintax.py',83),
  ('asignacion -> asignacionFloat','asignacion',1,'p_asignacion','sintax.py',84),
  ('asignacion -> asignacionDouble','asignacion',1,'p_asignacion','sintax.py',85),
  ('asignacion -> asignacionString','asignacion',1,'p_asignacion','sintax.py',86),
  ('asignacion -> asignacionChar','asignacion',1,'p_asignacion','sintax.py',87),
  ('asignacion -> asignacionBoolean','asignacion',1,'p_asignacion','sintax.py',88),
  ('asignacion -> array','asignacion',1,'p_asignacion','sintax.py',89),
  ('asignacion -> list','asignacion',1,'p_asignacion','sintax.py',90),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',93),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',94),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',97),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',98),
  ('asignacionInt -> asignacionSumInt','asignacionInt',1,'p_asignacionInt','sintax.py',99),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',102),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',103),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',106),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',107),
  ('asignacionDouble -> asignacionSumDouble','asignacionDouble',1,'p_asignacionDouble','sintax.py',108),
  ('asignacionString -> VAR VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',111),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',112),
  ('asignacionString -> VAL VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',113),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',114),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',115),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',116),
  ('asignacionString -> asignacionSumString','asignacionString',1,'p_asignacionString','sintax.py',117),
  ('asignacionChar -> VAR VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',120),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',121),
  ('asignacionChar -> VAL VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',122),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',123),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',124),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',125),
  ('asignacionBoolean -> VAR VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',128),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',129),
  ('asignacionBoolean -> VAL VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',130),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',131),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',132),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',133),
  ('reasignacion -> VARIABLE IGUAL valor','reasignacion',3,'p_reasignacion','sintax.py',137),
  ('reasignacion -> VARIABLE IGUAL returnfun','reasignacion',3,'p_reasignacion','sintax.py',138),
  ('reasignacion -> VARIABLE IGUAL aritmetica','reasignacion',3,'p_reasignacion','sintax.py',139),
  ('reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor','reasignacion',6,'p_reasignacion','sintax.py',140),
  ('tipo -> CHARCLASS','tipo',1,'p_tipo','sintax.py',143),
  ('tipo -> STRINGCLASS','tipo',1,'p_tipo','sintax.py',144),
  ('tipo -> BOOLCLASS','tipo',1,'p_tipo','sintax.py',145),
  ('tipo -> INTCLASS','tipo',1,'p_tipo','sintax.py',146),
  ('tipo -> LONGCLASS','tipo',1,'p_tipo','sintax.py',147),
  ('tipo -> DOUBLECLASS','tipo',1,'p_tipo','sintax.py',148),
  ('tipo -> FLOATCLASS','tipo',1,'p_tipo','sintax.py',149),
  ('tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',150),
  ('tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',151),
  ('valor -> STRING','valor',1,'p_valor','sintax.py',154),
  ('valor -> CHAR','valor',1,'p_valor','sintax.py',155),
  ('valor -> VARIABLE','valor',1,'p_valor','sintax.py',156),
  ('valor -> numeros','valor',1,'p_valor','sintax.py',157),
  ('valor -> booleanos','valor',1,'p_valor','sintax.py',158),
  ('valor -> VARIABLE PAR_I VARIABLE PAR_D','valor',4,'p_valor','sintax.py',159),
  ('valor -> VARIABLE PAR_I INT PAR_D','valor',4,'p_valor','sintax.py',160),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintax.py',163),
  ('booleanos -> FLASE','booleanos',1,'p_booleanos','sintax.py',164),
  ('booleanos -> startsWith','booleanos',1,'p_booleanos','sintax.py',165),
  ('numeros -> INT','numeros',1,'p_numeros','sintax.py',168),
  ('numeros -> LONG','numeros',1,'p_numeros','sintax.py',169),
  ('numeros -> FLOAT','numeros',1,'p_numeros','sintax.py',170),
  ('numeros -> DOUBLE','numeros',1,'p_numeros','sintax.py',171),
  ('funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D','funcion',7,'p_funcion','sintax.py',176),
  ('funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D','funcion',6,'p_funcion','sintax.py',177),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo','declaracion',3,'p_declaracion','sintax.py',182),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor','declaracion',5,'p_declaracion_defecto','sintax.py',185),
  ('parametro -> parametros','parametro',1,'p_parametro','sintax.py',188),
  ('parametro -> PAR_I PAR_D','parametro',2,'p_parametro','sintax.py',189),
  ('parametros -> PAR_I declaracion PAR_D','parametros',3,'p_parametros','sintax.py',192),
  ('parametros -> PAR_I declaracion PAR_D parametros','parametros',4,'p_parametros','sintax.py',193),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D','funcion',10,'p_funcion_return','sintax.py',198),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_return','sintax.py',199),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_return','sintax.py',200),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D','funcion',10,'p_funcion_return','sintax.py',201),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',204),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',205),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',206),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',207),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',210),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',211),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',212),
  ('dectipo -> DOBLE_PUNTO tipo','dectipo',2,'p_dectipo','sintax.py',215),
  ('dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D','dectipoTupla',4,'p_dectipoTupla','sintax.py',218),
  ('tipos -> tipo','tipos',1,'p_tipos','sintax.py',221),
  ('tipos -> tipo tiposentry','tipos',2,'p_tipos','sintax.py',222),
  ('tiposentry -> COMA tipo','tiposentry',2,'p_tipoentry','sintax.py',225),
  ('tiposentry -> COMA tipo tiposentry','tiposentry',3,'p_tipoentry','sintax.py',226),
  ('impresion -> PRINTLN PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',231),
  ('impresion -> PRINT PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',232),
  ('valorI -> valor MAS valorI','valorI',3,'p_valorI','sintax.py',235),
  ('valorI -> valor','valorI',1,'p_valorI','sintax.py',236),
  ('entrada -> READLINE PAR_I PAR_D','entrada',3,'p_entrada','sintax.py',241),
  ('funcall -> VARIABLE varparen','funcall',2,'p_funcall','sintax.py',245),
  ('varparen -> PAR_I valores PAR_D','varparen',3,'p_varparen','sintax.py',248),
  ('varparen -> PAR_I PAR_D','varparen',2,'p_varparen','sintax.py',249),
  ('varparen -> varparen PAR_I valores PAR_D','varparen',4,'p_varparen','sintax.py',250),
  ('varparen -> varparen PAR_I PAR_D','varparen',3,'p_varparen','sintax.py',251),
  ('returnfun -> returnCastable','returnfun',1,'p_returnfun','sintax.py',254),
  ('returnfun -> castingcall','returnfun',1,'p_returnfun','sintax.py',255),
  ('returnCastable -> entrada','returnCastable',1,'p_returnCastable','sintax.py',258),
  ('returnCastable -> funcall','returnCastable',1,'p_returnCastable','sintax.py',259),
  ('castingcall -> returnCastable PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',264),
  ('castingcall -> VARIABLE PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',265),
  ('castingfun -> TO_INT','castingfun',1,'p_castingfun','sintax.py',269),
  ('castingfun -> TO_DOUBLE','castingfun',1,'p_castingfun','sintax.py',270),
  ('castingfun -> TO_FLOAT','castingfun',1,'p_castingfun','sintax.py',271),
  ('castingfun -> TO_LONG','castingfun',1,'p_castingfun','sintax.py',272),
  ('array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',277),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',278),
  ('array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',279),
  ('array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',280),
  ('array -> arrayInt','array',1,'p_array','sintax.py',281),
  ('array -> arrayDouble','array',1,'p_array','sintax.py',282),
  ('list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D','list',7,'p_list','sintax.py',287),
  ('list -> listChar','list',1,'p_list','sintax.py',288),
  ('list -> listString','list',1,'p_list','sintax.py',289),
  ('valores -> valor','valores',1,'p_valores','sintax.py',293),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintax.py',294),
  ('tuple -> PAR_I valores PAR_D','tuple',3,'p_tuple','sintax.py',298),
  ('asignacion -> VAR VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',301),
  ('asignacion -> VAL VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',302),
  ('while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','while',7,'p_while','sintax.py',310),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',10,'p_for','sintax.py',314),
  ('for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',9,'p_for','sintax.py',315),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',316),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',317),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',318),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',319),
  ('match -> VARIABLE MATCH LLAVE_I cases LLAVE_D','match',5,'p_match','sintax.py',323),
  ('cases -> casesInt','cases',1,'p_cases','sintax.py',326),
  ('cases -> casesLgn','cases',1,'p_cases','sintax.py',327),
  ('cases -> casesFlt','cases',1,'p_cases','sintax.py',328),
  ('cases -> casesDob','cases',1,'p_cases','sintax.py',329),
  ('cases -> casesStr','cases',1,'p_cases','sintax.py',330),
  ('cases -> casesChar','cases',1,'p_cases','sintax.py',331),
  ('cases -> casesBool','cases',1,'p_cases','sintax.py',332),
  ('caseInt -> CASE INT FUNCION_FLECHA codeBlock','caseInt',4,'p_caseInt','sintax.py',335),
  ('casesInt -> caseInt','casesInt',1,'p_casesInt','sintax.py',338),
  ('casesInt -> caseInt casesInt','casesInt',2,'p_casesInt','sintax.py',339),
  ('casesInt -> caseInt defcase','casesInt',2,'p_casesInt','sintax.py',340),
  ('caseLgn -> CASE LONG FUNCION_FLECHA codeBlock','caseLgn',4,'p_caseLgn','sintax.py',343),
  ('casesLgn -> caseLgn','casesLgn',1,'p_casesLgn','sintax.py',346),
  ('casesLgn -> caseLgn casesLgn','casesLgn',2,'p_casesLgn','sintax.py',347),
  ('casesLgn -> caseLgn defcase','casesLgn',2,'p_casesLgn','sintax.py',348),
  ('caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock','caseFlt',4,'p_caseFlt','sintax.py',351),
  ('casesFlt -> caseFlt','casesFlt',1,'p_casesFlt','sintax.py',354),
  ('casesFlt -> caseFlt casesFlt','casesFlt',2,'p_casesFlt','sintax.py',355),
  ('casesFlt -> caseFlt defcase','casesFlt',2,'p_casesFlt','sintax.py',356),
  ('caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock','caseDob',4,'p_caseDob','sintax.py',359),
  ('casesDob -> caseDob','casesDob',1,'p_casesDob','sintax.py',362),
  ('casesDob -> caseDob casesDob','casesDob',2,'p_casesDob','sintax.py',363),
  ('casesDob -> caseDob defcase','casesDob',2,'p_casesDob','sintax.py',364),
  ('caseStr -> CASE STRING FUNCION_FLECHA codeBlock','caseStr',4,'p_caseStr','sintax.py',367),
  ('casesStr -> caseStr','casesStr',1,'p_casesStr','sintax.py',370),
  ('casesStr -> caseStr casesStr','casesStr',2,'p_casesStr','sintax.py',371),
  ('casesStr -> caseStr defcase','casesStr',2,'p_casesStr','sintax.py',372),
  ('caseChar -> CASE CHAR FUNCION_FLECHA codeBlock','caseChar',4,'p_caseChar','sintax.py',375),
  ('casesChar -> caseChar','casesChar',1,'p_casesChar','sintax.py',378),
  ('casesChar -> caseChar casesChar','casesChar',2,'p_casesChar','sintax.py',379),
  ('casesChar -> caseChar defcase','casesChar',2,'p_casesChar','sintax.py',380),
  ('caseBool -> CASE booleanos FUNCION_FLECHA codeBlock','caseBool',4,'p_caseBool','sintax.py',383),
  ('casesBool -> caseBool','casesBool',1,'p_casesBool','sintax.py',386),
  ('casesBool -> caseBool casesBool','casesBool',2,'p_casesBool','sintax.py',387),
  ('casesBool -> caseBool defcase','casesBool',2,'p_casesBool','sintax.py',388),
  ('defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock','defcase',4,'p_defcase','sintax.py',392),
  ('codeBlock -> contenidoLine','codeBlock',1,'p_codeBlock','sintax.py',395),
  ('codeBlock -> LLAVE_I contenido LLAVE_D','codeBlock',3,'p_codeBlock','sintax.py',396),
  ('if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','if',7,'p_if','sintax.py',400),
  ('if -> if elseif','if',2,'p_if','sintax.py',401),
  ('if -> if else','if',2,'p_if','sintax.py',402),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','elseif',8,'p_elseif','sintax.py',406),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif','elseif',9,'p_elseif','sintax.py',407),
  ('else -> ELSE LLAVE_I contenido LLAVE_D','else',4,'p_else','sintax.py',410),
  ('else -> elseif else','else',2,'p_else','sintax.py',411),
  ('condicional -> valorC logicos condicional','condicional',3,'p_condicional','sintax.py',415),
  ('condicional -> valorC','condicional',1,'p_condicional','sintax.py',416),
  ('valorC -> VARIABLE','valorC',1,'p_valorC','sintax.py',419),
  ('valorC -> booleanos','valorC',1,'p_valorC','sintax.py',420),
  ('valorC -> relacional','valorC',1,'p_valorC','sintax.py',421),
  ('valorC -> NOT VARIABLE','valorC',2,'p_valorC','sintax.py',422),
  ('valorC -> NOT booleanos','valorC',2,'p_valorC','sintax.py',423),
  ('valorC -> NOT relacional','valorC',2,'p_valorC','sintax.py',424),
  ('logicos -> AND','logicos',1,'p_logicos','sintax.py',427),
  ('logicos -> OR','logicos',1,'p_logicos','sintax.py',428),
  ('logicos -> NOT','logicos',1,'p_logicos','sintax.py',429),
  ('relacional -> numeros comparacion numeros','relacional',3,'p_relacional','sintax.py',434),
  ('relacional -> aritmetica comparacion aritmetica','relacional',3,'p_relacional','sintax.py',435),
  ('relacional -> aritmetica comparacion numeros','relacional',3,'p_relacional','sintax.py',436),
  ('relacional -> numeros comparacion aritmetica','relacional',3,'p_relacional','sintax.py',437),
  ('relacional -> booleanos comparacion booleanos','relacional',3,'p_relacional','sintax.py',438),
  ('relacional -> STRING comparacion STRING','relacional',3,'p_relacional','sintax.py',439),
  ('relacional -> CHAR comparacion CHAR','relacional',3,'p_relacional','sintax.py',440),
  ('relacional -> VARIABLE comparacion numeros','relacional',3,'p_relacional','sintax.py',441),
  ('relacional -> numeros comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',442),
  ('relacional -> VARIABLE comparacion booleanos','relacional',3,'p_relacional','sintax.py',443),
  ('relacional -> booleanos comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',444),
  ('relacional -> VARIABLE comparacion STRING','relacional',3,'p_relacional','sintax.py',445),
  ('relacional -> STRING comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',446),
  ('relacional -> VARIABLE comparacion CHAR','relacional',3,'p_relacional','sintax.py',447),
  ('relacional -> CHAR comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',448),
  ('relacional -> VARIABLE comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',449),
  ('comparacion -> IGUAL_COMPARACION','comparacion',1,'p_comparacion','sintax.py',452),
  ('comparacion -> DIFERENTE','comparacion',1,'p_comparacion','sintax.py',453),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion','sintax.py',454),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion','sintax.py',455),
  ('aritmetica -> numeros aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',459),
  ('aritmetica -> VARIABLE aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',460),
  ('aritmetica -> numeros aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',461),
  ('aritmetica -> VARIABLE aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',462),
  ('aritmetica -> aritmetica aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',463),
  ('aritmetica -> aritmetica aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',464),
  ('aritmetica -> suma','aritmetica',1,'p_aritmetica','sintax.py',465),
  ('aritmeticos -> MENOS','aritmeticos',1,'p_aritmeticos','sintax.py',468),
  ('aritmeticos -> MULTIPLICACION','aritmeticos',1,'p_aritmeticos','sintax.py',469),
  ('aritmeticos -> DIVISION','aritmeticos',1,'p_aritmeticos','sintax.py',470),
  ('aritmeticos -> MOD','aritmeticos',1,'p_aritmeticos','sintax.py',471),
  ('arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D','arrayInt',12,'p_arrayInt','sintax.py',476),
  ('arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D','arrayDouble',12,'p_arrayDouble','sintax.py',479),
  ('valoresInt -> INT','valoresInt',1,'p_valoresInt','sintax.py',482),
  ('valoresInt -> valoresInt COMA INT','valoresInt',3,'p_valoresInt','sintax.py',483),
  ('valoresDouble -> DOUBLE','valoresDouble',1,'p_valoresDouble','sintax.py',486),
  ('valoresDouble -> valoresDouble COMA DOUBLE','valoresDouble',3,'p_valoresDouble','sintax.py',487),
  ('startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D','startsWith',6,'p_startsWith','sintax.py',491),
  ('startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D','startsWith',8,'p_startsWith','sintax.py',492),
  ('listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D','listString',12,'p_listString','sintax.py',506),
  ('listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D','listString',12,'p_listString','sintax.py',507),
  ('listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D','listChar',12,'p_listChar','sintax.py',510),
  ('listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D','listChar',12,'p_listChar','sintax.py',511),
  ('valoresString -> STRING','valoresString',1,'p_valoresString','sintax.py',514),
  ('valoresString -> valoresString COMA STRING','valoresString',3,'p_valoresString','sintax.py',515),
  ('valoresChar -> CHAR','valoresChar',1,'p_valoresChar','sintax.py',518),
  ('valoresChar -> valoresChar COMA CHAR','valoresChar',3,'p_valoresChar','sintax.py',519),
  ('suma -> sumIntChar','suma',1,'p_suma','sintax.py',523),
  ('suma -> sumStringChar','suma',1,'p_suma','sintax.py',524),
  ('suma -> sumIntDouble','suma',1,'p_suma','sintax.py',525),
  ('suma -> sumDoubleChar','suma',1,'p_suma','sintax.py',526),
  ('sumIntDouble -> INT MAS DOUBLE','sumIntDouble',3,'p_sumIntDouble','sintax.py',529),
  ('sumIntDouble -> DOUBLE MAS INT','sumIntDouble',3,'p_sumIntDouble','sintax.py',530),
  ('sumDoubleChar -> DOUBLE MAS CHAR','sumDoubleChar',3,'p_sumDoubleChar','sintax.py',535),
  ('sumDoubleChar -> CHAR MAS DOUBLE','sumDoubleChar',3,'p_sumDoubleChar','sintax.py',536),
  ('sumIntChar -> INT MAS CHAR','sumIntChar',3,'p_sumIntChar','sintax.py',544),
  ('sumIntChar -> CHAR MAS INT','sumIntChar',3,'p_sumIntChar','sintax.py',545),
  ('sumStringChar -> STRING MAS CHAR','sumStringChar',3,'p_sumStringChar','sintax.py',553),
  ('sumStringChar -> CHAR MAS STRING','sumStringChar',3,'p_sumStringChar','sintax.py',554),
  ('asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble','asignacionSumDouble',6,'p_asignacionSumDouble','sintax.py',559),
  ('asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble','asignacionSumDouble',6,'p_asignacionSumDouble','sintax.py',560),
  ('asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar','asignacionSumDouble',6,'p_asignacionSumDouble','sintax.py',561),
  ('asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar','asignacionSumDouble',6,'p_asignacionSumDouble','sintax.py',562),
  ('asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar','asignacionSumString',6,'p_asignacionSumString','sintax.py',565),
  ('asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar','asignacionSumString',6,'p_asignacionSumString','sintax.py',566),
  ('asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar','asignacionSumInt',6,'p_asignacionSumInt','sintax.py',569),
  ('asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar','asignacionSumInt',6,'p_asignacionSumInt','sintax.py',570),
  ('asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla','asignacion',4,'p_asignacion_tupla','sintax.py',574),
  ('asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla','asignacion',4,'p_asignacion_tupla','sintax.py',575),
  ('dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',578),
  ('dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',579),
  ('dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',580),
  ('dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',581),
  ('dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',584),
  ('dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',585),
  ('dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',586),
  ('dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',587),
  ('dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',590),
  ('dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',591),
  ('dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',592),
  ('dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',593),
  ('dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',596),
  ('dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',597),
  ('dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',598),
  ('dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',599),
  ('dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',602),
  ('dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',603),
  ('dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',604),
  ('dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',605),
  ('asignacionInt -> VAR VARIABLE IGUAL intvalues','asignacionInt',4,'p_asignacionInt_cast','sintax.py',610),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues','asignacionInt',6,'p_asignacionInt_cast','sintax.py',611),
  ('asignacionInt -> VAL VARIABLE IGUAL intvalues','asignacionInt',4,'p_asignacionInt_cast','sintax.py',612),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues','asignacionInt',6,'p_asignacionInt_cast','sintax.py',613),
  ('intvalues -> INT','intvalues',1,'p_intvalues','sintax.py',616),
  ('intvalues -> stringCastInt','intvalues',1,'p_intvalues','sintax.py',617),
  ('asignacionLong -> VAR VARIABLE IGUAL longvalues','asignacionLong',4,'p_asignacionLong_cast','sintax.py',620),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues','asignacionLong',6,'p_asignacionLong_cast','sintax.py',621),
  ('asignacionLong -> VAL VARIABLE IGUAL longvalues','asignacionLong',4,'p_asignacionLong_cast','sintax.py',622),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues','asignacionLong',6,'p_asignacionLong_cast','sintax.py',623),
  ('longvalues -> INT','longvalues',1,'p_longvalues','sintax.py',626),
  ('longvalues -> intvalues','longvalues',1,'p_longvalues','sintax.py',627),
  ('longvalues -> stringCastLong','longvalues',1,'p_longvalues','sintax.py',628),
  ('asignacionFloat -> VAR VARIABLE IGUAL floatvalues','asignacionFloat',4,'p_asignacionFloat_cast','sintax.py',631),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues','asignacionFloat',6,'p_asignacionFloat_cast','sintax.py',632),
  ('asignacionFloat -> VAL VARIABLE IGUAL floatvalues','asignacionFloat',4,'p_asignacionFloat_cast','sintax.py',633),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues','asignacionFloat',6,'p_asignacionFloat_cast','sintax.py',634),
  ('floatvalues -> FLOAT','floatvalues',1,'p_floatvalues','sintax.py',637),
  ('floatvalues -> longvalues','floatvalues',1,'p_floatvalues','sintax.py',638),
  ('floatvalues -> stringCastFloat','floatvalues',1,'p_floatvalues','sintax.py',639),
  ('asignacionDouble -> VAR VARIABLE IGUAL doublevalues','asignacionDouble',4,'p_asignacionDouble_cast','sintax.py',642),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues','asignacionDouble',6,'p_asignacionDouble_cast','sintax.py',643),
  ('asignacionDouble -> VAL VARIABLE IGUAL doublevalues','asignacionDouble',4,'p_asignacionDouble_cast','sintax.py',644),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues','asignacionDouble',6,'p_asignacionDouble_cast','sintax.py',645),
  ('doublevalues -> DOUBLE','doublevalues',1,'p_doublevalues','sintax.py',648),
  ('doublevalues -> floatvalues','doublevalues',1,'p_doublevalues','sintax.py',649),
  ('doublevalues -> stringCastDouble','doublevalues',1,'p_doublevalues','sintax.py',650),
  ('stringCastInt -> STRING PUNTO TO_INT','stringCastInt',3,'p_stringCastInt','sintax.py',659),
  ('stringCastLong -> STRING PUNTO TO_LONG','stringCastLong',3,'p_stringCastLong','sintax.py',675),
  ('stringCastFloat -> STRING PUNTO TO_FLOAT','stringCastFloat',3,'p_stringCastFloat','sintax.py',691),
  ('stringCastDouble -> STRING PUNTO TO_DOUBLE','stringCastDouble',3,'p_stringCastDouble','sintax.py',708),
]

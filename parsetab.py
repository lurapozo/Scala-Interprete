
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARRAYCLASS ARROBA BACKTICK BOOLCLASS CASE CATCH CHAR CHARCLASS CLASS COMA CORCHETE_D CORCHETE_I DEF DIFERENTE DIVISION DO DOBLE_PUNTO DOUBLE DOUBLECLASS ELSE EXTENDS FINAL FINALLY FLASE FLOAT FLOATCLASS FOR FOR_SOME FUNCION_FLECHA HASHTAG IF IGUAL IGUAL_COMPARACION IMPLICIT IMPORT INT INTCLASS ITERATOR LAZY LIBRERIA_IO LISTCLASS LLAVE_D LLAVE_I LONG LONGCLASS MACRO MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MOD MULTIPLICACION NEW NOT NULL OBJECT OR OVERRIDE PACKAGE PAR_D PAR_I PRINT PRINTLN PRIVATE PROTECTED PUNTO READLINE RETURN REVERSE SEALED STRING STRINGCLASS SUBGUION SUPER THIS THROW TO_DOUBLE TO_FLOAT TO_INT TO_LONG TRAIT TRUE TRY TYPE VAL VAR VARIABLE WHILE WITH YIELDcuerpo : contenido\n  | funcioncontenido : asignacion\n  | impresion\n  | entradaasignacion : VAR VARIABLE IGUAL valor\n  | VAL VARIABLE IGUAL valor\n  | VAL declaracion IGUAL valor\n  | VAR declaracion IGUAL valordeclaracion : VARIABLE DOBLE_PUNTO tipotipo : CHARCLASS\n  | STRINGCLASS\n  | BOOLCLASS\n  | INTCLASS\n  | LONGCLASS\n  | DOUBLECLASS\n  | FLOATCLASSvalor : STRING\n  | CHAR\n  | VARIABLE\n  | numeros\n  | booleanosbooleanos : TRUE\n  | FLASEnumeros : INT\n  | LONG\n  | FLOAT\n  | DOUBLEfuncion : DEF VARIABLE PAR_I parametro PAR_D IGUAL LLAVE_I contenido LLAVE_Dparametro : VARIABLE\n  | VARIABLE COMA parametroimpresion : PRINTLN PAR_I valor PAR_D\n  | PRINT PAR_I valor PAR_Dentrada : READLINE PAR_I PAR_Dcondicional : valorC logicos condicional\n  | valorCvalorC : VARIABLE\n  | booleanos\n  | relacional\n  | NOT VARIABLE\n  | NOT booleanos\n  | NOT relacional\n  logicos : AND\n  | OR\n  | NOTrelacional : numeros comparacion numeros\n  | booleanos comparacion booleanos\n  | STRING comparacion STRING\n  | CHAR comparacion CHAR\n  | VARIABLE comparacion numeros\n  | numeros comparacion VARIABLE\n  | VARIABLE comparacion booleanos\n  | booleanos comparacion VARIABLE\n  | VARIABLE comparacion STRING\n  | STRING comparacion VARIABLE\n  | VARIABLE comparacion CHAR\n  | CHAR comparacion VARIABLE\n  | VARIABLE comparacion VARIABLEcomparacion : IGUAL_COMPARACION\n  | DIFERENTE\n  | MAYOR\n  | MENOR'
    
_lr_action_items = {'DEF':([0,],[7,]),'VAR':([0,61,],[8,8,]),'VAL':([0,61,],[9,9,]),'PRINTLN':([0,61,],[10,10,]),'PRINT':([0,61,],[11,11,]),'READLINE':([0,61,],[12,12,]),'$end':([1,2,3,4,5,6,28,29,30,31,32,33,34,35,36,37,38,40,43,52,53,54,55,56,63,],[0,-1,-2,-3,-4,-5,-18,-19,-20,-21,-22,-25,-26,-27,-28,-23,-24,-34,-6,-9,-7,-8,-32,-33,-29,]),'LLAVE_D':([4,5,6,28,29,30,31,32,33,34,35,36,37,38,40,43,52,53,54,55,56,62,],[-3,-4,-5,-18,-19,-20,-21,-22,-25,-26,-27,-28,-23,-24,-34,-6,-9,-7,-8,-32,-33,63,]),'VARIABLE':([7,8,9,18,19,21,22,24,25,26,57,],[13,14,16,30,30,41,30,30,30,30,41,]),'PAR_I':([10,11,12,13,],[18,19,20,21,]),'IGUAL':([14,15,16,17,44,45,46,47,48,49,50,51,58,],[22,24,25,26,-10,-11,-12,-13,-14,-15,-16,-17,60,]),'DOBLE_PUNTO':([14,16,],[23,23,]),'STRING':([18,19,22,24,25,26,],[28,28,28,28,28,28,]),'CHAR':([18,19,22,24,25,26,],[29,29,29,29,29,29,]),'INT':([18,19,22,24,25,26,],[33,33,33,33,33,33,]),'LONG':([18,19,22,24,25,26,],[34,34,34,34,34,34,]),'FLOAT':([18,19,22,24,25,26,],[35,35,35,35,35,35,]),'DOUBLE':([18,19,22,24,25,26,],[36,36,36,36,36,36,]),'TRUE':([18,19,22,24,25,26,],[37,37,37,37,37,37,]),'FLASE':([18,19,22,24,25,26,],[38,38,38,38,38,38,]),'PAR_D':([20,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,59,],[40,55,-18,-19,-20,-21,-22,-25,-26,-27,-28,-23,-24,56,-30,58,-31,]),'CHARCLASS':([23,],[45,]),'STRINGCLASS':([23,],[46,]),'BOOLCLASS':([23,],[47,]),'INTCLASS':([23,],[48,]),'LONGCLASS':([23,],[49,]),'DOUBLECLASS':([23,],[50,]),'FLOATCLASS':([23,],[51,]),'COMA':([41,],[57,]),'LLAVE_I':([60,],[61,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,],[1,]),'contenido':([0,61,],[2,62,]),'funcion':([0,],[3,]),'asignacion':([0,61,],[4,4,]),'impresion':([0,61,],[5,5,]),'entrada':([0,61,],[6,6,]),'declaracion':([8,9,],[15,17,]),'valor':([18,19,22,24,25,26,],[27,39,43,52,53,54,]),'numeros':([18,19,22,24,25,26,],[31,31,31,31,31,31,]),'booleanos':([18,19,22,24,25,26,],[32,32,32,32,32,32,]),'parametro':([21,57,],[42,59,]),'tipo':([23,],[44,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> contenido','cuerpo',1,'p_cuerpo','sintax.py',10),
  ('cuerpo -> funcion','cuerpo',1,'p_cuerpo','sintax.py',11),
  ('contenido -> asignacion','contenido',1,'p_contenido','sintax.py',15),
  ('contenido -> impresion','contenido',1,'p_contenido','sintax.py',16),
  ('contenido -> entrada','contenido',1,'p_contenido','sintax.py',17),
  ('asignacion -> VAR VARIABLE IGUAL valor','asignacion',4,'p_asignacion','sintax.py',22),
  ('asignacion -> VAL VARIABLE IGUAL valor','asignacion',4,'p_asignacion','sintax.py',23),
  ('asignacion -> VAL declaracion IGUAL valor','asignacion',4,'p_asignacion','sintax.py',24),
  ('asignacion -> VAR declaracion IGUAL valor','asignacion',4,'p_asignacion','sintax.py',25),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo','declaracion',3,'p_declaracion','sintax.py',28),
  ('tipo -> CHARCLASS','tipo',1,'p_tipo','sintax.py',32),
  ('tipo -> STRINGCLASS','tipo',1,'p_tipo','sintax.py',33),
  ('tipo -> BOOLCLASS','tipo',1,'p_tipo','sintax.py',34),
  ('tipo -> INTCLASS','tipo',1,'p_tipo','sintax.py',35),
  ('tipo -> LONGCLASS','tipo',1,'p_tipo','sintax.py',36),
  ('tipo -> DOUBLECLASS','tipo',1,'p_tipo','sintax.py',37),
  ('tipo -> FLOATCLASS','tipo',1,'p_tipo','sintax.py',38),
  ('valor -> STRING','valor',1,'p_valor','sintax.py',41),
  ('valor -> CHAR','valor',1,'p_valor','sintax.py',42),
  ('valor -> VARIABLE','valor',1,'p_valor','sintax.py',43),
  ('valor -> numeros','valor',1,'p_valor','sintax.py',44),
  ('valor -> booleanos','valor',1,'p_valor','sintax.py',45),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintax.py',48),
  ('booleanos -> FLASE','booleanos',1,'p_booleanos','sintax.py',49),
  ('numeros -> INT','numeros',1,'p_numeros','sintax.py',52),
  ('numeros -> LONG','numeros',1,'p_numeros','sintax.py',53),
  ('numeros -> FLOAT','numeros',1,'p_numeros','sintax.py',54),
  ('numeros -> DOUBLE','numeros',1,'p_numeros','sintax.py',55),
  ('funcion -> DEF VARIABLE PAR_I parametro PAR_D IGUAL LLAVE_I contenido LLAVE_D','funcion',9,'p_funcion','sintax.py',59),
  ('parametro -> VARIABLE','parametro',1,'p_parametro','sintax.py',62),
  ('parametro -> VARIABLE COMA parametro','parametro',3,'p_parametro','sintax.py',63),
  ('impresion -> PRINTLN PAR_I valor PAR_D','impresion',4,'p_impresion','sintax.py',68),
  ('impresion -> PRINT PAR_I valor PAR_D','impresion',4,'p_impresion','sintax.py',69),
  ('entrada -> READLINE PAR_I PAR_D','entrada',3,'p_entrada','sintax.py',74),
  ('condicional -> valorC logicos condicional','condicional',3,'p_condicional','sintax.py',80),
  ('condicional -> valorC','condicional',1,'p_condicional','sintax.py',81),
  ('valorC -> VARIABLE','valorC',1,'p_valorC','sintax.py',84),
  ('valorC -> booleanos','valorC',1,'p_valorC','sintax.py',85),
  ('valorC -> relacional','valorC',1,'p_valorC','sintax.py',86),
  ('valorC -> NOT VARIABLE','valorC',2,'p_valorC','sintax.py',87),
  ('valorC -> NOT booleanos','valorC',2,'p_valorC','sintax.py',88),
  ('valorC -> NOT relacional','valorC',2,'p_valorC','sintax.py',89),
  ('logicos -> AND','logicos',1,'p_logicos','sintax.py',92),
  ('logicos -> OR','logicos',1,'p_logicos','sintax.py',93),
  ('logicos -> NOT','logicos',1,'p_logicos','sintax.py',94),
  ('relacional -> numeros comparacion numeros','relacional',3,'p_relacional','sintax.py',97),
  ('relacional -> booleanos comparacion booleanos','relacional',3,'p_relacional','sintax.py',98),
  ('relacional -> STRING comparacion STRING','relacional',3,'p_relacional','sintax.py',99),
  ('relacional -> CHAR comparacion CHAR','relacional',3,'p_relacional','sintax.py',100),
  ('relacional -> VARIABLE comparacion numeros','relacional',3,'p_relacional','sintax.py',101),
  ('relacional -> numeros comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',102),
  ('relacional -> VARIABLE comparacion booleanos','relacional',3,'p_relacional','sintax.py',103),
  ('relacional -> booleanos comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',104),
  ('relacional -> VARIABLE comparacion STRING','relacional',3,'p_relacional','sintax.py',105),
  ('relacional -> STRING comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',106),
  ('relacional -> VARIABLE comparacion CHAR','relacional',3,'p_relacional','sintax.py',107),
  ('relacional -> CHAR comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',108),
  ('relacional -> VARIABLE comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',109),
  ('comparacion -> IGUAL_COMPARACION','comparacion',1,'p_comparacion','sintax.py',112),
  ('comparacion -> DIFERENTE','comparacion',1,'p_comparacion','sintax.py',113),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion','sintax.py',114),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion','sintax.py',115),
]


# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARRAYCLASS ARROBA BACKTICK BOOLCLASS CASE CATCH CHAR CHARCLASS CLASS COMA CORCHETE_D CORCHETE_I DEF DIFERENTE DIVISION DO DOBLE_PUNTO DOUBLE DOUBLECLASS ELSE EXTENDS FINAL FINALLY FLASE FLOAT FLOATCLASS FOR FOR_SOME FUNCION_FLECHA HASHTAG IF IGUAL IGUAL_COMPARACION IMPLICIT IMPORT INT INTCLASS ITERATOR LAZY LIBRERIA_IO LISTCLASS LLAVE_D LLAVE_I LONG LONGCLASS MACRO MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MOD MULTIPLICACION NEW NOT NULL OBJECT OR OVERRIDE PACKAGE PAR_D PAR_I PRINT PRINTLN PRIVATE PROTECTED PUNTO READLINE RETURN REVERSE SEALED STRING STRINGCLASS SUBGUION SUPER THIS THROW TO TO_DOUBLE TO_FLOAT TO_INT TO_LONG TRAIT TRUE TRY TYPE UNTIL VAL VAR VARIABLE WHILE WITH YIELD inicio : OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D\n  | IMPORT io inicio\n  | cuerpo\n   io : VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINEcuerpo : funcion\n  | funcall\n  | impresion\n  | entrada\n  | asignacion\n  | while\n  | for\n  | match\n  | if\n  | funcion cuerpo\n  | asignacion cuerpo\n  | while cuerpo\n  | for cuerpo\n  | if cuerpo\n  | match cuerpocontenido : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entrada\n  | while\n  | for\n  | match\n  | if\n  | aritmetica\n  | asignacion contenido\n  | reasignacion contenido\n  | funcall contenido\n  | impresion contenido\n  | entrada contenido\n  | while contenido\n  | for contenido\n  | if contenido\n  | match contenido\n  | aritmetica contenidocontenidoLine : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entradaasignacion : VAR VARIABLE IGUAL VARIABLE\n  | VAL VARIABLE IGUAL VARIABLE\n  | VAR VARIABLE IGUAL aritmetica\n  | VAL VARIABLE IGUAL aritmetica\n  | VAR VARIABLE IGUAL returnfun\n  | VAL VARIABLE IGUAL returnfun\n  | asignacionLong\n  | asignacionInt\n  | asignacionFloat\n  | asignacionDouble\n  | asignacionString\n  | asignacionChar\n  | asignacionBoolean\n  | array\n  | listasignacionLong :  VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLEasignacionInt : VAR VARIABLE IGUAL INT\n  | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT\n  | VAL VARIABLE IGUAL INT\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT\n  | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLEasignacionFloat : VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLEasignacionDouble : VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLEasignacionString : VAR VARIABLE IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAL VARIABLE IGUAL STRING\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLEasignacionChar : VAR VARIABLE IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAL VARIABLE IGUAL CHAR\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLEasignacionBoolean : VAR VARIABLE IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAL VARIABLE IGUAL booleanos\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLEreasignacion :  VARIABLE IGUAL valor\n      | VARIABLE IGUAL returnfun\n      | VARIABLE IGUAL aritmetica\n      | VARIABLE PAR_I INT PAR_D IGUAL valortipo : CHARCLASS\n  | STRINGCLASS\n  | BOOLCLASS\n  | INTCLASS\n  | LONGCLASS\n  | DOUBLECLASS\n  | FLOATCLASS\n  | ARRAYCLASS CORCHETE_I tipo CORCHETE_D\n  | LISTCLASS CORCHETE_I tipo CORCHETE_Dvalor : STRING\n  | CHAR\n  | VARIABLE\n  | numeros\n  | booleanos\n  | VARIABLE PAR_I VARIABLE PAR_D\n  | VARIABLE PAR_I INT PAR_Dbooleanos : TRUE\n  | FLASEnumeros : INT\n  | LONG\n  | FLOAT\n  | DOUBLEfuncion : DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D\n  | DEF VARIABLE parametro LLAVE_I contenido LLAVE_Ddeclaracion : VARIABLE DOBLE_PUNTO tipodeclaracion :  VARIABLE DOBLE_PUNTO tipo IGUAL valor parametro : parametros\n  | PAR_I PAR_D parametros : PAR_I declaracion PAR_D \n    | PAR_I declaracion PAR_D parametrosfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D\n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D \n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_Ddectipo : DOBLE_PUNTO tipo dectipoTupla : DOBLE_PUNTO PAR_I tipos PAR_Dtipos : tipo\n    | tipo tiposentrytiposentry : COMA tipo \n  | COMA tipo tiposentryimpresion : PRINTLN PAR_I valorI PAR_D\n  | PRINT PAR_I valorI PAR_DvalorI : valor MAS valorI\n  | valorentrada : READLINE PAR_I PAR_Dfuncall : VARIABLE varparen varparen : PAR_I valores PAR_D\n  | PAR_I PAR_D\n  | varparen PAR_I valores PAR_D\n  | varparen PAR_I PAR_D returnfun : returnCastable\n      | castingcallreturnCastable : entrada\n      | funcallcastingcall : returnCastable PUNTO castingfun\n      | VARIABLE PUNTO castingfuncastingfun : TO_INT\n    | TO_DOUBLE\n    | TO_FLOAT\n    | TO_LONGarray : VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | arrayInt\n  | arrayDoublelist : VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_Dvalores : valor\n  | valor COMA valorestuple : PAR_I valores PAR_Dasignacion : VAR VARIABLE IGUAL tuple \n      | VAL VARIABLE IGUAL tuplewhile : WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_Dfor : FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_Dmatch : VARIABLE MATCH  LLAVE_I cases LLAVE_Dcases : casesInt\n    | casesLgn\n    | casesFlt\n    | casesDob\n    | casesStr\n    | casesChar\n    | casesBoolcaseInt : CASE INT FUNCION_FLECHA codeBlock casesInt : caseInt \n      | caseInt casesInt\n      | caseInt defcasecaseLgn : CASE LONG FUNCION_FLECHA codeBlock casesLgn : caseLgn \n      | caseLgn casesLgn\n      | caseLgn defcasecaseFlt : CASE FLOAT FUNCION_FLECHA codeBlock casesFlt : caseFlt \n      | caseFlt casesFlt\n      | caseFlt defcasecaseDob : CASE DOUBLE FUNCION_FLECHA codeBlock casesDob : caseDob \n      | caseDob casesDob\n      | caseDob defcasecaseStr : CASE STRING FUNCION_FLECHA codeBlock casesStr : caseStr\n      | caseStr casesStr\n      | caseStr defcasecaseChar : CASE CHAR FUNCION_FLECHA codeBlock casesChar : caseChar\n      | caseChar casesChar\n      | caseChar defcasecaseBool : CASE booleanos FUNCION_FLECHA codeBlock casesBool : caseBool\n      | caseBool casesBool\n      | caseBool defcasedefcase : CASE SUBGUION FUNCION_FLECHA codeBlock codeBlock : contenidoLine\n      | LLAVE_I contenido LLAVE_Dif : IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | if elseif\n  | if else\n  elseif : ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseifelse : ELSE LLAVE_I contenido LLAVE_D\n  | elseif elsecondicional : valorC logicos condicional\n  | valorCvalorC : VARIABLE\n  | booleanos\n  | relacional\n  | NOT VARIABLE\n  | NOT booleanos\n  | NOT relacional\n  logicos : AND\n  | OR\n  | NOTrelacional : numeros comparacion numeros\n  | aritmetica comparacion aritmetica\n  | aritmetica comparacion numeros\n  | numeros comparacion aritmetica\n  | booleanos comparacion booleanos\n  | STRING comparacion STRING\n  | CHAR comparacion CHAR\n  | VARIABLE comparacion numeros\n  | numeros comparacion VARIABLE\n  | VARIABLE comparacion booleanos\n  | booleanos comparacion VARIABLE\n  | VARIABLE comparacion STRING\n  | STRING comparacion VARIABLE\n  | VARIABLE comparacion CHAR\n  | CHAR comparacion VARIABLE\n  | VARIABLE comparacion VARIABLEcomparacion : IGUAL_COMPARACION\n  | DIFERENTE\n  | MAYOR\n  | MENORaritmetica : numeros aritmeticos numeros\n  | VARIABLE aritmeticos numeros\n  | numeros aritmeticos VARIABLE\n  | VARIABLE aritmeticos VARIABLE\n  | aritmetica aritmeticos numeros\n  | aritmetica aritmeticos VARIABLEaritmeticos : MENOS\n  | MAS\n  | MULTIPLICACION\n  | DIVISION\n  | MODarrayInt : VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D\n  arrayDouble : VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_DvaloresInt : INT\n  | valoresInt COMA INTvaloresDouble : DOUBLE\n  | valoresDouble COMA DOUBLEasignacion : VAR VARIABLE DOBLE_PUNTO  dectupla\n      | VAL VARIABLE DOBLE_PUNTO dectupla dectupla : PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D\n              | PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D\n              | PAR_I STRINGCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D\n              | PAR_I STRINGCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D dectupla : PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D\n              | PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D\n              | PAR_I FLOATCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D\n              | PAR_I FLOATCLASS COMA  INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D dectupla : PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D\n              | PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D\n              | PAR_I DOUBLECLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D\n              | PAR_I DOUBLECLASS COMA  INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D dectupla : PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D\n              | PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D\n              | PAR_I LONGCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D\n              | PAR_I LONGCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT  PAR_D dectupla : PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D\n              | PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D\n              | PAR_I INTCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D\n              | PAR_I INTCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D asignacionLong : VAR VARIABLE IGUAL longvalues\n                    | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues\n                    | VAL VARIABLE IGUAL longvalues\n                    | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalueslongvalues : INT\n                | LONGasignacionFloat : VAR VARIABLE IGUAL floatvalues\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues\n  | VAL VARIABLE IGUAL floatvalues\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvaluesfloatvalues : FLOAT\n                  | longvaluesasignacionDouble : VAR VARIABLE IGUAL doublevalues\n                      | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues\n                      | VAL VARIABLE IGUAL doublevalues\n                      | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevaluesdoublevalues : DOUBLE\n                  | floatvalues'
    
_lr_action_items = {end':([1,4,6,7,8,9,10,11,12,13,14,21,22,23,24,25,26,27,28,29,33,34,36,41,42,43,44,45,46,47,48,63,70,71,72,73,74,75,76,79,89,109,126,152,154,155,156,157,158,159,160,161,162,163,164,165,168,169,170,171,172,173,174,175,185,186,187,188,189,190,191,192,193,194,195,198,237,238,239,273,339,340,346,347,351,352,380,390,391,392,393,394,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,428,429,430,431,432,433,434,435,436,437,438,439,440,441,471,481,505,506,509,516,566,572,573,574,575,609,613,614,615,616,617,618,619,620,647,682,683,685,687,710,712,713,738,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,763,764,],[0,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-51,-52,-53,-54,-55,-56,-57,-58,-59,-165,-166,-146,-14,-15,-16,-17,-19,-18,-222,-223,-148,-112,-113,-114,-115,-110,-111,-2,-227,-145,-150,-147,-141,-142,-45,-47,-49,-173,-298,-62,-304,-310,-72,-78,-84,-151,-152,-303,-308,-314,-153,-154,-276,-46,-48,-50,-174,-300,-64,-306,-312,-74,-80,-86,-277,-1,-149,-182,-226,-262,-260,-259,-261,-263,-264,-117,-156,-157,-158,-159,-160,-172,-155,-60,-299,-302,-303,-66,-63,-68,-305,-308,-309,-70,-311,-314,-315,-76,-73,-82,-79,-88,-85,-61,-301,-67,-65,-69,-307,-71,-313,-77,-75,-83,-81,-89,-87,-116,-161,-163,-167,-175,-221,-224,-129,-128,-130,-131,-177,-225,-125,-124,-126,-127,-133,-132,-134,-176,-178,-179,-270,-271,-169,-180,-181,-168,-278,-279,-280,-281,-294,-295,-296,-297,-290,-291,-292,-293,-286,-287,-288,-289,-282,-283,-284,-285,-162,-164,]),'MATCH':([3,142,],[37,37,]),'PAR_I':([3,16,17,18,30,31,32,36,50,63,67,81,90,91,92,93,109,126,142,148,155,166,185,196,197,238,301,373,460,521,525,529,568,576,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,604,646,714,737,],[38,51,52,53,56,57,58,60,85,-148,128,130,167,184,167,184,-150,-147,285,291,38,305,38,321,322,-149,387,469,285,128,469,167,469,38,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,645,679,739,760,]),'LLAVE_D':([6,7,8,9,10,11,12,13,14,21,22,23,24,25,26,27,28,29,33,34,36,41,42,43,44,45,46,47,48,63,65,66,67,68,69,70,71,72,73,74,75,79,89,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,131,132,133,134,135,136,137,138,139,140,141,152,154,155,156,157,158,159,160,161,162,163,164,165,168,169,170,171,172,173,174,175,185,186,187,188,189,190,191,192,193,194,195,198,238,239,240,241,243,244,246,247,249,250,252,253,255,256,258,259,273,274,275,276,277,278,279,280,281,282,283,287,339,340,346,347,351,352,369,370,373,374,375,376,377,379,380,390,391,392,393,394,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,428,429,430,431,432,433,434,435,436,437,438,439,440,441,444,450,452,453,455,456,457,458,459,461,462,463,464,465,466,471,481,505,506,509,516,517,518,520,525,526,527,528,562,565,566,567,568,569,570,571,572,573,574,575,576,577,578,606,609,613,614,615,616,617,618,619,620,647,650,651,680,681,682,683,685,687,710,712,713,738,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,763,764,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-51,-52,-53,-54,-55,-56,-57,-58,-59,-165,-166,-146,-14,-15,-16,-17,-19,-18,-222,-223,-148,-103,-104,-105,-106,-107,-112,-113,-114,-115,-110,-111,-227,-145,237,-150,239,-183,-184,-185,-186,-187,-188,-189,-191,-195,-199,-203,-207,-211,-215,-147,273,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-45,-47,-49,-173,-298,-62,-304,-310,-72,-78,-84,-151,-152,-303,-308,-314,-153,-154,-276,-46,-48,-50,-174,-300,-64,-306,-312,-74,-80,-86,-277,-149,-182,-192,-193,-196,-197,-200,-201,-204,-205,-208,-209,-212,-213,-216,-217,-226,-30,-31,-32,-33,-34,-35,-36,-38,-37,-39,380,-262,-260,-259,-261,-263,-264,-108,-109,-105,-90,-91,-92,-106,471,-117,-156,-157,-158,-159,-160,-172,-155,-60,-299,-302,-303,-66,-63,-68,-305,-308,-309,-70,-311,-314,-315,-76,-73,-82,-79,-88,-85,-61,-301,-67,-65,-69,-307,-71,-313,-77,-75,-83,-81,-89,-87,509,516,-190,-219,-40,-41,-42,-43,-44,-194,-198,-202,-206,-210,-214,-116,-161,-163,-167,-175,-221,-218,565,566,572,573,574,575,609,-220,-224,-93,614,615,616,617,-129,-128,-130,-131,618,619,620,647,-177,-225,-125,-124,-126,-127,-133,-132,-134,-176,682,683,712,713,-178,-179,-270,-271,-169,-180,-181,-168,-278,-279,-280,-281,-294,-295,-296,-297,-290,-291,-292,-293,-286,-287,-288,-289,-282,-283,-284,-285,-162,-164,]),'ELSE':([14,47,48,78,79,140,273,516,566,613,],[49,80,-223,80,-227,49,-226,-221,612,-225,]),'INT':([21,22,23,24,25,26,27,28,29,33,34,36,38,47,48,51,52,56,58,60,63,65,66,67,68,69,70,71,72,73,74,75,79,82,89,90,92,99,109,125,126,127,128,130,132,133,134,135,136,137,138,139,140,141,145,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,185,186,187,188,189,190,191,192,193,194,195,198,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,228,229,230,231,235,238,239,242,273,284,285,286,305,308,309,310,311,321,322,323,324,325,326,332,339,340,346,347,351,352,357,360,369,370,373,374,375,376,377,381,382,390,391,392,393,394,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,428,429,430,431,432,433,434,435,436,437,438,439,440,441,448,449,454,468,469,473,480,481,505,506,509,511,512,513,516,523,524,559,566,567,609,610,611,613,622,628,629,630,631,645,647,648,649,679,682,683,685,686,687,689,698,704,708,710,712,713,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,763,764,],[-51,-52,-53,-54,-55,-56,-57,-58,-59,-165,-166,-146,70,-222,-223,70,70,70,70,70,-148,-103,-104,-105,-106,-107,-112,-113,-114,-115,-110,-111,-227,70,-145,160,190,70,-150,261,-147,70,270,70,70,70,70,70,70,70,70,70,70,70,70,-141,70,-142,-45,-47,-49,-173,-298,-62,-304,-310,-72,-78,-84,70,-151,-152,-303,-308,-314,-153,-154,-276,-46,-48,-50,-174,-300,-64,-306,-312,-74,-80,-86,-277,70,-236,-237,-238,70,70,-255,-256,-257,-258,-265,-266,-267,-268,-269,70,70,70,70,359,-149,-182,261,-226,70,378,70,70,400,403,400,400,70,70,400,431,400,400,70,-262,-260,-259,-261,-263,-264,446,70,-108,-109,-105,-90,-91,-92,-106,70,70,-156,-157,-158,-159,-160,-172,-155,-60,-299,-302,-303,-66,-63,-68,-305,-308,-309,-70,-311,-314,-315,-76,-73,-82,-79,-88,-85,-61,-301,-67,-65,-69,-307,-71,-313,-77,-75,-83,-81,-89,-87,514,515,70,70,522,70,70,-161,-163,-167,-175,560,561,70,-221,70,70,70,-224,-93,-177,70,70,-225,654,661,662,663,664,70,-176,70,70,70,-178,-179,-270,715,-271,717,726,732,736,-169,-180,-181,-168,761,-278,-279,-280,-281,-294,-295,-296,-297,-290,-291,-292,-293,-286,-287,-288,-289,-282,-283,-284,-285,762,-162,-164,]),'LONG':([21,22,23,24,25,26,27,28,29,33,34,36,38,47,48,51,52,56,58,60,63,65,66,67,68,69,70,71,72,73,74,75,79,82,89,90,92,99,109,125,126,127,130,132,133,134,135,136,137,138,139,140,141,145,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,185,186,187,188,189,190,191,192,193,194,195,198,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,228,229,230,231,238,239,245,273,284,285,286,305,308,310,311,321,322,323,325,326,332,339,340,346,347,351,352,360,369,370,373,374,375,376,377,381,382,390,391,392,393,394,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,428,429,430,431,432,433,434,435,436,437,438,439,440,441,454,468,469,473,480,481,505,506,509,513,516,523,524,559,566,567,609,610,611,613,632,633,634,635,645,647,648,649,679,682,683,685,687,690,694,702,706,710,712,713,738,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,763,764,],[-51,-52,-53,-54,-55,-56,-57,-58,-59,-165,-166,-146,71,-222,-223,71,71,71,71,71,-148,-103,-104,-105,-106,-107,-112,-113,-114,-115,-110,-111,-227,71,-145,170,170,71,-150,262,-147,71,71,71,71,71,71,71,71,71,71,71,71,71,-141,71,-142,-45,-47,-49,-173,-298,-62,-304,-310,-72,-78,-84,71,-151,-152,-303,-308,-314,-153,-154,-276,-46,-48,-50,-174,-300,-64,-306,-312,-74,-80,-86,-277,71,-236,-237,-238,71,71,-255,-256,-257,-258,-265,-266,-267,-268,-269,71,71,71,71,-149,-182,262,-226,71,71,71,71,401,401,401,71,71,401,401,401,71,-262,-260,-259,-261,-263,-264,71,-108,-109,-105,-90,-91,-92,-106,71,71,-156,-157,-158,-159,-160,-172,-155,-60,-299,-302,-303,-66,-63,-68,-305,-308,-309,-70,-311,-314,-315,-76,-73,-82,-79,-88,-85,-61,-301,-67,-65,-69,-307,-71,-313,-77,-75,-83,-81,-89,-87,71,71,71,71,71,-161,-163,-167,-175,71,-221,71,71,71,-224,-93,-177,71,71,-225,665,666,667,668,71,-176,71,71,71,-178,-179,-270,-271,718,722,730,734,-169,-180,-181,-168,-278,-279,-280,-281,-294,-295,-296,-297,-290,-291,-292,-293,-286,-287,-288,-289,-282,-283,-284,-285,-162,-164,]),'FLOAT':([21,22,23,24,25,26,27,28,29,33,34,36,38,47,48,51,52,56,58,60,63,65,66,67,68,69,70,71,72,73,74,75,79,82,89,90,92,99,109,125,126,127,130,132,133,134,135,136,137,138,139,140,141,145,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,185,186,187,188,189,190,191,192,193,194,195,198,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,228,229,230,231,238,239,248,273,284,285,286,305,310,311,321,322,325,326,332,339,340,346,347,351,352,360,369,370,373,374,375,376,377,381,382,390,391,392,393,394,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,428,429,430,431,432,433,434,435,436,437,438,439,440,441,454,468,469,473,480,481,505,506,509,513,516,523,524,559,566,567,609,610,611,613,640,641,642,643,645,647,648,649,679,682,683,685,687,692,696,700,703,710,712,713,738,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,763,764,],[-51,-52,-53,-54,-55,-56,-57,-58,-59,-165,-166,-146,72,-222,-223,72,72,72,72,72,-148,-103,-104,-105,-106,-107,-112,-113,-114,-115,-110,-111,-227,72,-145,171,171,72,-150,263,-147,72,72,72,72,72,72,72,72,72,72,72,72,72,-141,72,-142,-45,-47,-49,-173,-298,-62,-304,-310,-72,-78,-84,72,-151,-152,-303,-308,-314,-153,-154,-276,-46,-48,-50,-174,-300,-64,-306,-312,-74,-80,-86,-277,72,-236,-237,-238,72,72,-255,-256,-257,-258,-265,-266,-267,-268,-269,72,72,72,72,-149,-182,263,-226,72,72,72,72,406,406,72,72,406,406,72,-262,-260,-259,-261,-263,-264,72,-108,-109,-105,-90,-91,-92,-106,72,72,-156,-157,-158,-159,-160,-172,-155,-60,-299,-302,-303,-66,-63,-68,-305,-308,-309,-70,-311,-314,-315,-76,-73,-82,-79,-88,-85,-61,-301,-67,-65,-69,-307,-71,-313,-77,-75,-83,-81,-89,-87,72,72,72,72,72,-161,-163,-167,-175,72,-221,72,72,72,-224,-93,-177,72,72,-225,673,674,675,676,72,-176,72,72,72,-178,-179,-270,-271,720,724,728,731,-169,-180,-181,-168,-278,-279,-280,-281,-294,-295,-296,-297,-290,-291,-292,-293,-286,-287,-288,-289,-282,-283,-284,-285,-162,-164,]),'DOUBLE':([21,22,23,24,25,26,27,28,29,33,34,36,38,47,48,51,52,56,58,60,63,65,66,67,68,69,70,71,72,73,74,75,79,82,89,90,92,99,109,125,126,127,130,132,133,134,135,136,137,138,139,140,141,145,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,185,186,187,188,189,190,191,192,193,194,195,198,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,228,229,230,231,238,239,251,273,284,285,286,305,311,321,322,326,332,339,340,346,347,351,352,360,369,370,373,374,375,376,377,381,382,390,391,392,393,394,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,428,429,430,431,432,433,434,435,436,437,438,439,440,441,454,468,469,473,480,481,505,506,509,513,516,523,524,559,566,567,609,610,611,613,623,636,637,638,639,645,647,648,649,679,682,683,685,687,688,691,695,699,707,710,712,713,738,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,763,764,],[-51,-52,-53,-54,-55,-56,-57,-58,-59,-165,-166,-146,73,-222,-223,73,73,73,73,73,-148,-103,-104,-105,-106,-107,-112,-113,-114,-115,-110,-111,-227,73,-145,172,172,73,-150,264,-147,73,73,73,73,73,73,73,73,73,73,73,73,73,-141,73,-142,-45,-47,-49,-173,-298,-62,-304,-310,-72,-78,-84,73,-151,-152,-303,-308,-314,-153,-154,-276,-46,-48,-50,-174,-300,-64,-306,-312,-74,-80,-86,-277,73,-236,-237,-238,73,73,-255,-256,-257,-258,-265,-266,-267,-268,-269,73,73,73,73,-149,-182,264,-226,73,73,73,73,410,73,73,410,73,-262,-260,-259,-261,-263,-264,73,-108,-109,-105,-90,-91,-92,-106,73,73,-156,-157,-158,-159,-160,-172,-155,-60,-299,-302,-303,-66,-63,-68,-305,-308,-309,-70,-311,-314,-315,-76,-73,-82,-79,-88,-85,-61,-301,-67,-65,-69,-307,-71,-313,-77,-75,-83,-81,-89,-87,73,73,73,73,73,-161,-163,-167,-175,73,-221,73,73,73,-224,-93,-177,73,73,-225,656,669,670,671,672,73,-176,73,73,73,-178,-179,-270,-271,716,719,723,727,735,-169,-180,-181,-168,-278,-279,-280,-281,-294,-295,-296,-297,-290,-291,-292,-293,-286,-287,-288,-289,-282,-283,-284,-285,-162,-164,]),'RETURN':([21,22,23,24,25,26,27,28,29,33,34,36,47,48,63,65,66,67,68,69,70,71,72,73,74,75,79,89,109,126,132,133,134,135,136,137,138,139,140,141,152,154,155,156,157,158,159,160,161,162,163,164,165,168,169,170,171,172,173,174,175,185,186,187,188,189,190,191,192,193,194,195,198,238,239,273,274,275,276,277,278,279,280,281,282,283,339,340,346,347,351,352,369,370,373,374,375,376,377,381,390,391,392,393,394,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,428,429,430,431,432,433,434,435,436,437,438,439,440,441,472,474,481,505,506,509,516,566,567,609,613,647,682,683,685,687,710,712,713,738,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,763,764,],[-51,-52,-53,-54,-55,-56,-57,-58,-59,-165,-166,-146,-222,-223,-148,-103,-104,-105,-106,-107,-112,-113,-114,-115,-110,-111,-227,-145,-150,-147,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-141,-142,-45,-47,-49,-173,-298,-62,-304,-310,-72,-78,-84,-151,-152,-303,-308,-314,-153,-154,-276,-46,-48,-50,-174,-300,-64,-306,-312,-74,-80,-86,-277,-149,-182,-226,-30,-31,-32,-33,-34,-35,-36,-38,-37,-39,-262,-260,-259,-261,-263,-264,-108,-109,-105,-90,-91,-92,-106,473,-156,-157,-158,-159,-160,-172,-155,-60,-299,-302,-303,-66,-63,-68,-305,-308,-309,-70,-311,-314,-315,-76,-73,-82,-79,-88,-85,-61,-301,-67,-65,-69,-307,-71,-313,-77,-75,-83,-81,-89,-87,524,529,-161,-163,-167,-175,-221,-224,-93,-177,-225,-176,-178,-179,-270,-271,-169,-180,-181,-168,-278,-279,-280,-281,-294,-295,-296,-297,-290,-291,-292,-293,-286,-287,-288,-289,-282,-283,-284,-285,-162,-164,]),'CASE':([21,22,23,24,25,26,27,28,29,33,34,36,61,63,65,66,67,68,69,70,71,72,73,74,75,89,109,118,119,120,121,122,123,124,126,152,154,155,156,157,158,159,160,161,162,163,164,165,168,169,170,171,172,173,174,175,185,186,187,188,189,190,191,192,193,194,195,198,238,339,340,346,347,351,352,369,370,373,374,375,376,377,390,391,392,393,394,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,428,429,430,431,432,433,434,435,436,437,438,439,440,441,452,453,455,456,457,458,459,461,462,463,464,465,466,481,505,506,565,567,685,687,710,738,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,763,764,],[-51,-52,-53,-54,-55,-56,-57,-58,-59,-165,-166,-146,125,-148,-103,-104,-105,-106,-107,-112,-113,-114,-115,-110,-111,-145,-150,242,245,248,251,254,257,260,-147,-141,-142,-45,-47,-49,-173,-298,-62,-304,-310,-72,-78,-84,-151,-152,-303,-308,-314,-153,-154,-276,-46,-48,-50,-174,-300,-64,-306,-312,-74,-80,-86,-277,-149,-262,-260,-259,-261,-263,-264,-108,-109,-105,-90,-91,-92,-106,-156,-157,-158,-159,-160,-172,-155,-60,-299,-302,-303,-66,-63,-68,-305,-308,-309,-70,-311,-314,-315,-76,-73,-82,-79,-88,-85,-61,-301,-67,-65,-69,-307,-71,-313,-77,-75,-83,-81,-89,-87,-190,-219,-40,-41,-42,-43,-44,-194,-198,-202,-206,-210,-214,-161,-163,-167,-220,-93,-270,-271,-169,-168,-278,-279,-280,-281,-294,-295,-296,-297,-290,-291,-292,-293,-286,-287,-288,-289,-282,-283,-284,-285,-162,-164,]),'LLAVE_I':([35,37,49,80,83,84,144,149,208,236,288,289,301,362,363,364,365,366,367,368,372,388,447,451,510,563,564,607,608,],[59,61,82,82,145,-120,286,-121,332,360,381,382,-122,454,454,454,454,454,454,454,468,-123,513,454,559,610,611,648,649,]),'PUNTO':([36,40,63,89,109,126,129,155,168,173,174,185,238,371,373,525,568,576,],[-146,77,-148,-145,-150,-147,271,304,307,-153,-154,304,-149,467,304,304,304,304,]),'PAR_D':([38,53,60,62,64,65,66,67,68,69,70,71,72,73,74,75,85,86,87,88,94,95,96,97,98,106,108,150,225,226,227,268,269,270,272,285,292,293,294,295,296,297,298,303,306,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,358,369,370,378,383,384,389,395,426,427,445,469,476,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,514,515,521,522,530,531,532,533,560,561,579,653,654,655,656,678,711,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,761,762,],[63,89,109,126,-170,-103,-104,-105,-106,-107,-112,-113,-114,-115,-110,-111,149,152,-144,154,208,-229,-230,-231,-232,236,238,301,-233,-234,-235,-171,369,370,372,63,-94,-95,-96,-97,-98,-99,-100,-143,396,-228,-254,-246,-248,-250,-252,-262,-260,-243,-249,-239,-242,-247,-259,-261,-240,-241,-263,-264,-244,-251,-245,-253,447,-108,-109,470,475,-137,-118,481,505,506,510,63,-138,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,563,564,369,370,-139,-101,-102,-119,607,608,-140,685,-272,687,-274,710,738,-273,-275,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,763,764,]),'STRING':([38,51,52,56,58,60,90,92,99,125,127,130,153,167,209,210,211,212,213,215,216,217,218,232,254,284,285,305,312,321,322,327,469,473,480,523,524,624,625,626,627,645,679,693,697,701,705,],[65,65,65,102,102,65,163,193,102,265,65,102,65,65,102,-236,-237,-238,337,-255,-256,-257,-258,353,265,65,65,65,413,65,65,437,65,65,65,65,65,657,658,659,660,65,65,721,725,729,733,]),'CHAR':([38,51,52,56,58,60,90,92,99,125,127,130,153,167,209,210,211,212,213,215,216,217,218,233,257,284,285,305,313,321,322,328,469,473,480,523,524,645,679,],[66,66,66,103,103,66,164,194,103,266,66,103,66,66,103,-236,-237,-238,338,-255,-256,-257,-258,355,266,66,66,66,415,66,66,439,66,66,66,66,66,66,66,]),'TRUE':([38,51,52,56,58,60,90,92,99,125,127,130,153,167,209,210,211,212,213,215,216,217,218,224,260,284,285,305,314,321,322,329,469,473,480,523,524,645,679,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-236,-237,-238,74,-255,-256,-257,-258,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'FLASE':([38,51,52,56,58,60,90,92,99,125,127,130,153,167,209,210,211,212,213,215,216,217,218,224,260,284,285,305,314,321,322,329,469,473,480,523,524,645,679,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-236,-237,-238,75,-255,-256,-257,-258,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'IGUAL':([54,55,83,84,142,146,147,149,176,177,178,179,180,181,182,199,200,201,202,203,204,205,290,292,293,294,295,296,297,298,301,388,389,460,470,475,482,483,484,507,508,531,532,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,],[90,92,144,-120,284,288,289,-121,308,309,310,311,312,313,314,323,324,325,326,327,328,329,-135,-94,-95,-96,-97,-98,-99,-100,-122,-123,480,284,523,-136,534,535,536,557,558,-101,-102,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,]),'DOBLE_PUNTO':([54,55,83,84,149,151,301,388,],[91,93,148,-120,-121,302,-122,-123,]),'NOT':([56,58,70,71,72,73,74,75,95,96,97,98,130,209,210,211,212,225,226,227,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,],[99,99,-112,-113,-114,-115,-110,-111,212,-230,-231,-232,99,99,-236,-237,-238,-233,-234,-235,-254,-246,-248,-250,-252,-262,-260,-243,-249,-239,-242,-247,-259,-261,-240,-241,-263,-264,-244,-251,-245,-253,]),'COMA':([64,65,66,67,68,69,70,71,72,73,74,75,292,293,294,295,296,297,298,316,317,318,319,320,369,370,378,384,521,522,530,531,532,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,715,716,],[127,-103,-104,-105,-106,-107,-112,-113,-114,-115,-110,-111,-94,-95,-96,-97,-98,-99,-100,421,422,423,424,425,-108,-109,-112,477,-105,-112,477,-101,-102,686,-272,688,-274,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,-273,-275,]),'MAS':([65,66,67,68,69,70,71,72,73,74,75,87,96,100,101,141,142,143,155,156,160,170,171,172,185,186,190,225,339,340,343,344,345,346,347,348,349,350,351,352,369,370,373,376,377,525,528,568,571,],[-103,-104,-105,-106,-107,-112,-113,-114,-115,-110,-111,153,220,220,220,220,220,220,220,220,-112,-113,-114,-115,220,220,-112,220,-262,-260,220,220,220,-259,-261,220,220,220,-263,-264,-108,-109,220,220,220,220,220,220,220,]),'IGUAL_COMPARACION':([70,71,72,73,74,75,96,97,100,101,102,103,225,226,339,340,346,347,351,352,],[-112,-113,-114,-115,-110,-111,215,215,215,215,215,215,215,215,-262,-260,-259,-261,-263,-264,]),'DIFERENTE':([70,71,72,73,74,75,96,97,100,101,102,103,225,226,339,340,346,347,351,352,],[-112,-113,-114,-115,-110,-111,216,216,216,216,216,216,216,216,-262,-260,-259,-261,-263,-264,]),'MAYOR':([70,71,72,73,74,75,96,97,100,101,102,103,225,226,339,340,346,347,351,352,],[-112,-113,-114,-115,-110,-111,217,217,217,217,217,217,217,217,-262,-260,-259,-261,-263,-264,]),'MENOR':([70,71,72,73,74,75,96,97,100,101,102,103,225,226,339,340,346,347,351,352,],[-112,-113,-114,-115,-110,-111,218,218,218,218,218,218,218,218,-262,-260,-259,-261,-263,-264,]),'MENOS':([70,71,72,73,96,100,101,141,142,143,155,156,160,170,171,172,185,186,190,225,339,340,343,344,345,346,347,348,349,350,351,352,373,376,377,525,528,568,571,],[-112,-113,-114,-115,219,219,219,219,219,219,219,219,-112,-113,-114,-115,219,219,-112,219,-262,-260,219,219,219,-259,-261,219,219,219,-263,-264,219,219,219,219,219,219,219,]),'MULTIPLICACION':([70,71,72,73,96,100,101,141,142,143,155,156,160,170,171,172,185,186,190,225,339,340,343,344,345,346,347,348,349,350,351,352,373,376,377,525,528,568,571,],[-112,-113,-114,-115,221,221,221,221,221,221,221,221,-112,-113,-114,-115,221,221,-112,221,-262,-260,221,221,221,-259,-261,221,221,221,-263,-264,221,221,221,221,221,221,221,]),'DIVISION':([70,71,72,73,96,100,101,141,142,143,155,156,160,170,171,172,185,186,190,225,339,340,343,344,345,346,347,348,349,350,351,352,373,376,377,525,528,568,571,],[-112,-113,-114,-115,222,222,222,222,222,222,222,222,-112,-113,-114,-115,222,222,-112,222,-262,-260,222,222,222,-259,-261,222,222,222,-263,-264,222,222,222,222,222,222,222,]),'MOD':([70,71,72,73,96,100,101,141,142,143,155,156,160,170,171,172,185,186,190,225,339,340,343,344,345,346,347,348,349,350,351,352,373,376,377,525,528,568,571,],[-112,-113,-114,-115,223,223,223,223,223,223,223,223,-112,-113,-114,-115,223,223,-112,223,-262,-260,223,223,223,-259,-261,223,223,223,-263,-264,223,223,223,223,223,223,223,]),'AND':([70,71,72,73,74,75,95,96,97,98,225,226,227,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,],[-112,-113,-114,-115,-110,-111,210,-230,-231,-232,-233,-234,-235,-254,-246,-248,-250,-252,-262,-260,-243,-249,-239,-242,-247,-259,-261,-240,-241,-263,-264,-244,-251,-245,-253,]),'OR':([70,71,72,73,74,75,95,96,97,98,225,226,227,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,],[-112,-113,-114,-115,-110,-111,211,-230,-231,-232,-233,-234,-235,-254,-246,-248,-250,-252,-262,-260,-243,-249,-239,-242,-247,-259,-261,-240,-241,-263,-264,-244,-251,-245,-253,]),'FUNCION_FLECHA':([74,75,261,262,263,264,265,266,267,361,],[-110,-111,362,363,364,365,366,367,368,451,]),'ARRAYCLASS':([90,91,92,93,148,291,302,315,330,331,385,386,477,535,536,580,603,652,677,],[166,183,196,206,299,299,299,299,299,299,299,299,299,581,582,621,644,299,299,]),'LONGCLASS':([91,93,148,184,291,302,315,330,331,385,386,421,422,424,425,477,652,677,],[176,199,296,318,296,296,296,296,296,296,296,486,490,498,502,296,296,296,]),'INTCLASS':([91,93,148,184,291,302,315,330,331,385,386,421,423,424,425,477,652,677,],[177,200,295,317,295,295,419,295,295,295,295,485,494,500,504,295,295,295,]),'FLOATCLASS':([91,93,148,184,291,302,315,330,331,385,386,421,422,423,424,477,652,677,],[178,201,298,320,298,298,298,298,298,298,298,488,492,496,499,298,298,298,]),'DOUBLECLASS':([91,93,148,184,291,302,315,330,331,385,386,421,422,423,425,477,652,677,],[179,202,297,319,297,297,420,297,297,297,297,487,491,495,503,297,297,297,]),'STRINGCLASS':([91,93,148,184,291,302,315,330,331,385,386,422,423,424,425,477,652,677,],[180,203,293,316,293,293,293,293,293,293,293,489,493,497,501,293,293,293,]),'CHARCLASS':([91,93,148,291,302,315,330,331,385,386,477,652,677,],[181,204,292,292,292,292,292,292,292,292,292,292,292,]),'BOOLCLASS':([91,93,148,291,302,315,330,331,385,386,477,652,677,],[182,205,294,294,294,294,294,294,294,294,294,294,294,]),'LISTCLASS':([92,93,148,291,302,315,330,331,385,386,477,558,605,652,677,],[197,207,300,300,300,300,300,300,300,300,300,604,646,300,300,]),'ITERATOR':([105,234,],[235,357,]),'CORCHETE_I':([183,206,207,299,300,621,644,],[315,330,331,385,386,652,677,]),'SUBGUION':([242,245,248,251,254,257,260,],[361,361,361,361,361,361,361,]),'CORCHETE_D':([292,293,294,295,296,297,298,418,419,420,442,443,478,479,531,532,684,709,],[-94,-95,-96,-97,-98,-99,-100,482,483,484,507,508,531,532,-101,-102,714,737,]),'TO_INT':([304,307,],[391,391,]),'TO_DOUBLE':([304,307,],[392,392,]),'TO_FLOAT':([304,307,],[393,393,]),'TO_LONG':([304,307,],[394,394,]),'TO':([359,446,],[448,511,]),'UNTIL':([359,446,],[449,512,]),'NEW':([534,557,558,],[580,603,605,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,39,],[1,76,]),'cuerpo':([0,6,10,11,12,13,14,39,59,],[4,41,42,43,44,45,46,4,107,]),'funcion':([0,6,10,11,12,13,14,39,59,],[6,6,6,6,6,6,6,6,6,]),'funcall':([0,6,10,11,12,13,14,39,59,82,90,92,132,133,134,135,136,137,138,139,140,141,145,284,286,332,360,362,363,364,365,366,367,368,381,382,451,454,468,473,513,524,529,559,610,611,648,649,],[7,7,7,7,7,7,7,7,7,134,174,174,134,134,134,134,134,134,134,134,134,134,134,174,134,134,134,457,457,457,457,457,457,457,134,134,457,134,134,174,134,174,174,134,134,134,134,134,]),'impresion':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,286,332,360,362,363,364,365,366,367,368,381,382,451,454,468,513,559,610,611,648,649,],[8,8,8,8,8,8,8,8,8,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,458,458,458,458,458,458,458,135,135,458,135,135,135,135,135,135,135,135,]),'entrada':([0,6,10,11,12,13,14,39,59,82,90,92,132,133,134,135,136,137,138,139,140,141,145,284,286,332,360,362,363,364,365,366,367,368,381,382,451,454,468,473,513,524,529,559,610,611,648,649,],[9,9,9,9,9,9,9,9,9,136,173,173,136,136,136,136,136,136,136,136,136,136,136,173,136,136,136,459,459,459,459,459,459,459,136,136,459,136,136,173,136,173,173,136,136,136,136,136,]),'asignacion':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,286,332,360,362,363,364,365,366,367,368,381,382,451,454,468,513,559,610,611,648,649,],[10,10,10,10,10,10,10,10,10,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,455,455,455,455,455,455,455,132,132,455,132,132,132,132,132,132,132,132,]),'while':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,286,332,360,381,382,454,468,513,559,610,611,648,649,],[11,11,11,11,11,11,11,11,11,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'for':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,286,332,360,381,382,454,468,513,559,610,611,648,649,],[12,12,12,12,12,12,12,12,12,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'match':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,286,332,360,381,382,454,468,513,559,610,611,648,649,],[13,13,13,13,13,13,13,13,13,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,]),'if':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,286,332,360,381,382,454,468,513,559,610,611,648,649,],[14,14,14,14,14,14,14,14,14,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'asignacionLong':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,286,332,360,362,363,364,365,366,367,368,381,382,451,454,468,513,559,610,611,648,649,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'asignacionInt':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,286,332,360,362,363,364,365,366,367,368,381,382,451,454,468,513,559,610,611,648,649,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'asignacionFloat':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,286,332,360,362,363,364,365,366,367,368,381,382,451,454,468,513,559,610,611,648,649,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'asignacionDouble':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,286,332,360,362,363,364,365,366,367,368,381,382,451,454,468,513,559,610,611,648,649,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'asignacionString':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,286,332,360,362,363,364,365,366,367,368,381,382,451,454,468,513,559,610,611,648,649,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'asignacionChar':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,286,332,360,362,363,364,365,366,367,368,381,382,451,454,468,513,559,610,611,648,649,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'asignacionBoolean':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,286,332,360,362,363,364,365,366,367,368,381,382,451,454,468,513,559,610,611,648,649,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'array':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,286,332,360,362,363,364,365,366,367,368,381,382,451,454,468,513,559,610,611,648,649,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'list':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,286,332,360,362,363,364,365,366,367,368,381,382,451,454,468,513,559,610,611,648,649,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'arrayInt':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,286,332,360,362,363,364,365,366,367,368,381,382,451,454,468,513,559,610,611,648,649,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'arrayDouble':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,286,332,360,362,363,364,365,366,367,368,381,382,451,454,468,513,559,610,611,648,649,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'varparen':([3,142,155,185,373,460,525,568,576,],[36,36,36,36,36,36,36,36,36,]),'io':([5,],[39,]),'elseif':([14,47,78,140,566,],[47,78,78,47,613,]),'else':([14,47,78,140,],[48,79,79,48,]),'valores':([38,60,127,167,285,305,321,322,469,645,679,],[62,108,268,306,62,395,426,427,62,678,711,]),'valor':([38,51,52,60,127,153,167,284,285,305,321,322,469,473,480,523,524,645,679,],[64,87,87,64,64,87,64,374,64,64,64,64,64,526,533,567,569,64,64,]),'numeros':([38,51,52,56,58,60,82,90,92,99,127,130,132,133,134,135,136,137,138,139,140,141,145,153,167,209,213,214,228,229,230,231,284,285,286,305,321,322,332,360,381,382,454,468,469,473,480,513,523,524,559,610,611,645,648,649,679,],[68,68,68,100,100,68,143,143,143,100,68,100,143,143,143,143,143,143,143,143,143,143,143,68,68,100,335,340,343,346,349,351,377,68,143,68,68,68,143,143,143,143,143,143,68,377,68,143,68,377,143,143,143,68,143,143,68,]),'booleanos':([38,51,52,56,58,60,90,92,99,125,127,130,153,167,209,213,224,260,284,285,305,314,321,322,329,469,473,480,523,524,645,679,],[69,69,69,97,97,69,165,195,226,267,69,97,69,69,97,336,341,267,69,69,69,417,69,69,441,69,69,69,69,69,69,69,]),'parametro':([50,],[83,]),'parametros':([50,301,],[84,388,]),'valorI':([51,52,153,],[86,88,303,]),'condicional':([56,58,130,209,],[94,106,272,333,]),'valorC':([56,58,130,209,],[95,95,95,95,]),'relacional':([56,58,99,130,209,],[98,98,227,98,98,]),'aritmetica':([56,58,82,90,92,99,130,132,133,134,135,136,137,138,139,140,141,145,209,228,230,284,286,332,360,381,382,454,468,473,513,524,559,610,611,648,649,],[101,101,141,156,186,101,101,141,141,141,141,141,141,141,141,141,141,141,101,344,348,376,141,141,141,141,141,141,141,528,141,571,141,141,141,141,141,]),'cases':([61,],[110,]),'casesInt':([61,118,],[111,240,]),'casesLgn':([61,119,],[112,243,]),'casesFlt':([61,120,],[113,246,]),'casesDob':([61,121,],[114,249,]),'casesStr':([61,122,],[115,252,]),'casesChar':([61,123,],[116,255,]),'casesBool':([61,124,],[117,258,]),'caseInt':([61,118,],[118,118,]),'caseLgn':([61,119,],[119,119,]),'caseFlt':([61,120,],[120,120,]),'caseDob':([61,121,],[121,121,]),'caseStr':([61,122,],[122,122,]),'caseChar':([61,123,],[123,123,]),'caseBool':([61,124,],[124,124,]),'contenido':([82,132,133,134,135,136,137,138,139,140,141,145,286,332,360,381,382,454,468,513,559,610,611,648,649,],[131,274,275,276,277,278,279,280,281,282,283,287,379,444,450,472,474,518,520,562,606,650,651,680,681,]),'reasignacion':([82,132,133,134,135,136,137,138,139,140,141,145,286,332,360,362,363,364,365,366,367,368,381,382,451,454,468,513,559,610,611,648,649,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,456,456,456,456,456,456,456,133,133,456,133,133,133,133,133,133,133,133,]),'dectipo':([83,],[146,]),'dectipoTupla':([83,],[147,]),'declaracion':([85,387,],[150,150,]),'returnfun':([90,92,284,473,524,529,],[157,187,375,527,570,578,]),'tuple':([90,92,529,],[158,188,577,]),'longvalues':([90,92,308,310,311,323,325,326,],[159,189,399,407,407,429,407,407,]),'floatvalues':([90,92,310,311,325,326,],[161,191,405,411,433,411,]),'doublevalues':([90,92,311,326,],[162,192,409,435,]),'returnCastable':([90,92,284,473,524,529,],[168,168,168,168,168,168,]),'castingcall':([90,92,284,473,524,529,],[169,169,169,169,169,169,]),'dectupla':([91,93,],[175,198,]),'logicos':([95,],[209,]),'comparacion':([96,97,100,101,102,103,225,226,],[213,224,228,230,232,233,213,224,]),'aritmeticos':([96,100,101,141,142,143,155,156,185,186,225,343,344,345,348,349,350,373,376,377,525,528,568,571,],[214,229,231,231,214,229,214,231,214,231,214,229,231,214,231,229,214,214,231,229,214,231,214,231,]),'defcase':([118,119,120,121,122,123,124,],[241,244,247,250,253,256,259,]),'tipo':([148,291,302,315,330,331,385,386,477,652,677,],[290,384,389,418,442,443,478,479,530,684,709,]),'tipos':([291,],[383,]),'castingfun':([304,307,],[390,397,]),'codeBlock':([362,363,364,365,366,367,368,451,],[452,461,462,463,464,465,466,517,]),'contenidoLine':([362,363,364,365,366,367,368,451,],[453,453,453,453,453,453,453,453,]),'tiposentry':([384,530,],[476,579,]),'valoresInt':([622,],[653,]),'valoresDouble':([623,],[655,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D','inicio',5,'p_inicio','sintax.py',12),
  ('inicio -> IMPORT io inicio','inicio',3,'p_inicio','sintax.py',13),
  ('inicio -> cuerpo','inicio',1,'p_inicio','sintax.py',14),
  ('io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE','io',7,'p_io','sintax.py',19),
  ('cuerpo -> funcion','cuerpo',1,'p_cuerpo','sintax.py',22),
  ('cuerpo -> funcall','cuerpo',1,'p_cuerpo','sintax.py',23),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintax.py',24),
  ('cuerpo -> entrada','cuerpo',1,'p_cuerpo','sintax.py',25),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintax.py',26),
  ('cuerpo -> while','cuerpo',1,'p_cuerpo','sintax.py',27),
  ('cuerpo -> for','cuerpo',1,'p_cuerpo','sintax.py',28),
  ('cuerpo -> match','cuerpo',1,'p_cuerpo','sintax.py',29),
  ('cuerpo -> if','cuerpo',1,'p_cuerpo','sintax.py',30),
  ('cuerpo -> funcion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',31),
  ('cuerpo -> asignacion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',32),
  ('cuerpo -> while cuerpo','cuerpo',2,'p_cuerpo','sintax.py',33),
  ('cuerpo -> for cuerpo','cuerpo',2,'p_cuerpo','sintax.py',34),
  ('cuerpo -> if cuerpo','cuerpo',2,'p_cuerpo','sintax.py',35),
  ('cuerpo -> match cuerpo','cuerpo',2,'p_cuerpo','sintax.py',36),
  ('contenido -> asignacion','contenido',1,'p_contenido','sintax.py',40),
  ('contenido -> reasignacion','contenido',1,'p_contenido','sintax.py',41),
  ('contenido -> funcall','contenido',1,'p_contenido','sintax.py',42),
  ('contenido -> impresion','contenido',1,'p_contenido','sintax.py',43),
  ('contenido -> entrada','contenido',1,'p_contenido','sintax.py',44),
  ('contenido -> while','contenido',1,'p_contenido','sintax.py',45),
  ('contenido -> for','contenido',1,'p_contenido','sintax.py',46),
  ('contenido -> match','contenido',1,'p_contenido','sintax.py',47),
  ('contenido -> if','contenido',1,'p_contenido','sintax.py',48),
  ('contenido -> aritmetica','contenido',1,'p_contenido','sintax.py',49),
  ('contenido -> asignacion contenido','contenido',2,'p_contenido','sintax.py',50),
  ('contenido -> reasignacion contenido','contenido',2,'p_contenido','sintax.py',51),
  ('contenido -> funcall contenido','contenido',2,'p_contenido','sintax.py',52),
  ('contenido -> impresion contenido','contenido',2,'p_contenido','sintax.py',53),
  ('contenido -> entrada contenido','contenido',2,'p_contenido','sintax.py',54),
  ('contenido -> while contenido','contenido',2,'p_contenido','sintax.py',55),
  ('contenido -> for contenido','contenido',2,'p_contenido','sintax.py',56),
  ('contenido -> if contenido','contenido',2,'p_contenido','sintax.py',57),
  ('contenido -> match contenido','contenido',2,'p_contenido','sintax.py',58),
  ('contenido -> aritmetica contenido','contenido',2,'p_contenido','sintax.py',59),
  ('contenidoLine -> asignacion','contenidoLine',1,'p_contenidoLine','sintax.py',63),
  ('contenidoLine -> reasignacion','contenidoLine',1,'p_contenidoLine','sintax.py',64),
  ('contenidoLine -> funcall','contenidoLine',1,'p_contenidoLine','sintax.py',65),
  ('contenidoLine -> impresion','contenidoLine',1,'p_contenidoLine','sintax.py',66),
  ('contenidoLine -> entrada','contenidoLine',1,'p_contenidoLine','sintax.py',67),
  ('asignacion -> VAR VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',71),
  ('asignacion -> VAL VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',72),
  ('asignacion -> VAR VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',73),
  ('asignacion -> VAL VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',74),
  ('asignacion -> VAR VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',75),
  ('asignacion -> VAL VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',76),
  ('asignacion -> asignacionLong','asignacion',1,'p_asignacion','sintax.py',77),
  ('asignacion -> asignacionInt','asignacion',1,'p_asignacion','sintax.py',78),
  ('asignacion -> asignacionFloat','asignacion',1,'p_asignacion','sintax.py',79),
  ('asignacion -> asignacionDouble','asignacion',1,'p_asignacion','sintax.py',80),
  ('asignacion -> asignacionString','asignacion',1,'p_asignacion','sintax.py',81),
  ('asignacion -> asignacionChar','asignacion',1,'p_asignacion','sintax.py',82),
  ('asignacion -> asignacionBoolean','asignacion',1,'p_asignacion','sintax.py',83),
  ('asignacion -> array','asignacion',1,'p_asignacion','sintax.py',84),
  ('asignacion -> list','asignacion',1,'p_asignacion','sintax.py',85),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',88),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',89),
  ('asignacionInt -> VAR VARIABLE IGUAL INT','asignacionInt',4,'p_asignacionInt','sintax.py',92),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT','asignacionInt',6,'p_asignacionInt','sintax.py',93),
  ('asignacionInt -> VAL VARIABLE IGUAL INT','asignacionInt',4,'p_asignacionInt','sintax.py',94),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT','asignacionInt',6,'p_asignacionInt','sintax.py',95),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',96),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',97),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',100),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',101),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',104),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',105),
  ('asignacionString -> VAR VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',108),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',109),
  ('asignacionString -> VAL VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',110),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',111),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',112),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',113),
  ('asignacionChar -> VAR VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',116),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',117),
  ('asignacionChar -> VAL VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',118),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',119),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',120),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',121),
  ('asignacionBoolean -> VAR VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',124),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',125),
  ('asignacionBoolean -> VAL VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',126),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',127),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',128),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',129),
  ('reasignacion -> VARIABLE IGUAL valor','reasignacion',3,'p_reasignacion','sintax.py',133),
  ('reasignacion -> VARIABLE IGUAL returnfun','reasignacion',3,'p_reasignacion','sintax.py',134),
  ('reasignacion -> VARIABLE IGUAL aritmetica','reasignacion',3,'p_reasignacion','sintax.py',135),
  ('reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor','reasignacion',6,'p_reasignacion','sintax.py',136),
  ('tipo -> CHARCLASS','tipo',1,'p_tipo','sintax.py',139),
  ('tipo -> STRINGCLASS','tipo',1,'p_tipo','sintax.py',140),
  ('tipo -> BOOLCLASS','tipo',1,'p_tipo','sintax.py',141),
  ('tipo -> INTCLASS','tipo',1,'p_tipo','sintax.py',142),
  ('tipo -> LONGCLASS','tipo',1,'p_tipo','sintax.py',143),
  ('tipo -> DOUBLECLASS','tipo',1,'p_tipo','sintax.py',144),
  ('tipo -> FLOATCLASS','tipo',1,'p_tipo','sintax.py',145),
  ('tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',146),
  ('tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',147),
  ('valor -> STRING','valor',1,'p_valor','sintax.py',150),
  ('valor -> CHAR','valor',1,'p_valor','sintax.py',151),
  ('valor -> VARIABLE','valor',1,'p_valor','sintax.py',152),
  ('valor -> numeros','valor',1,'p_valor','sintax.py',153),
  ('valor -> booleanos','valor',1,'p_valor','sintax.py',154),
  ('valor -> VARIABLE PAR_I VARIABLE PAR_D','valor',4,'p_valor','sintax.py',155),
  ('valor -> VARIABLE PAR_I INT PAR_D','valor',4,'p_valor','sintax.py',156),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintax.py',159),
  ('booleanos -> FLASE','booleanos',1,'p_booleanos','sintax.py',160),
  ('numeros -> INT','numeros',1,'p_numeros','sintax.py',163),
  ('numeros -> LONG','numeros',1,'p_numeros','sintax.py',164),
  ('numeros -> FLOAT','numeros',1,'p_numeros','sintax.py',165),
  ('numeros -> DOUBLE','numeros',1,'p_numeros','sintax.py',166),
  ('funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D','funcion',7,'p_funcion','sintax.py',171),
  ('funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D','funcion',6,'p_funcion','sintax.py',172),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo','declaracion',3,'p_declaracion','sintax.py',177),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor','declaracion',5,'p_declaracion_defecto','sintax.py',180),
  ('parametro -> parametros','parametro',1,'p_parametro','sintax.py',183),
  ('parametro -> PAR_I PAR_D','parametro',2,'p_parametro','sintax.py',184),
  ('parametros -> PAR_I declaracion PAR_D','parametros',3,'p_parametros','sintax.py',187),
  ('parametros -> PAR_I declaracion PAR_D parametros','parametros',4,'p_parametros','sintax.py',188),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D','funcion',10,'p_funcion_return','sintax.py',193),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_return','sintax.py',194),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_return','sintax.py',195),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D','funcion',10,'p_funcion_return','sintax.py',196),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',199),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',200),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',201),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',202),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',205),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',206),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',207),
  ('dectipo -> DOBLE_PUNTO tipo','dectipo',2,'p_dectipo','sintax.py',210),
  ('dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D','dectipoTupla',4,'p_dectipoTupla','sintax.py',213),
  ('tipos -> tipo','tipos',1,'p_tipos','sintax.py',216),
  ('tipos -> tipo tiposentry','tipos',2,'p_tipos','sintax.py',217),
  ('tiposentry -> COMA tipo','tiposentry',2,'p_tipoentry','sintax.py',220),
  ('tiposentry -> COMA tipo tiposentry','tiposentry',3,'p_tipoentry','sintax.py',221),
  ('impresion -> PRINTLN PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',226),
  ('impresion -> PRINT PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',227),
  ('valorI -> valor MAS valorI','valorI',3,'p_valorI','sintax.py',230),
  ('valorI -> valor','valorI',1,'p_valorI','sintax.py',231),
  ('entrada -> READLINE PAR_I PAR_D','entrada',3,'p_entrada','sintax.py',236),
  ('funcall -> VARIABLE varparen','funcall',2,'p_funcall','sintax.py',240),
  ('varparen -> PAR_I valores PAR_D','varparen',3,'p_varparen','sintax.py',243),
  ('varparen -> PAR_I PAR_D','varparen',2,'p_varparen','sintax.py',244),
  ('varparen -> varparen PAR_I valores PAR_D','varparen',4,'p_varparen','sintax.py',245),
  ('varparen -> varparen PAR_I PAR_D','varparen',3,'p_varparen','sintax.py',246),
  ('returnfun -> returnCastable','returnfun',1,'p_returnfun','sintax.py',249),
  ('returnfun -> castingcall','returnfun',1,'p_returnfun','sintax.py',250),
  ('returnCastable -> entrada','returnCastable',1,'p_returnCastable','sintax.py',253),
  ('returnCastable -> funcall','returnCastable',1,'p_returnCastable','sintax.py',254),
  ('castingcall -> returnCastable PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',259),
  ('castingcall -> VARIABLE PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',260),
  ('castingfun -> TO_INT','castingfun',1,'p_castingfun','sintax.py',264),
  ('castingfun -> TO_DOUBLE','castingfun',1,'p_castingfun','sintax.py',265),
  ('castingfun -> TO_FLOAT','castingfun',1,'p_castingfun','sintax.py',266),
  ('castingfun -> TO_LONG','castingfun',1,'p_castingfun','sintax.py',267),
  ('array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',272),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',273),
  ('array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',274),
  ('array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',275),
  ('array -> arrayInt','array',1,'p_array','sintax.py',276),
  ('array -> arrayDouble','array',1,'p_array','sintax.py',277),
  ('list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D','list',7,'p_list','sintax.py',281),
  ('list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D','list',13,'p_list','sintax.py',282),
  ('list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D','list',12,'p_list','sintax.py',283),
  ('valores -> valor','valores',1,'p_valores','sintax.py',287),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintax.py',288),
  ('tuple -> PAR_I valores PAR_D','tuple',3,'p_tuple','sintax.py',292),
  ('asignacion -> VAR VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',295),
  ('asignacion -> VAL VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',296),
  ('while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','while',7,'p_while','sintax.py',304),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',10,'p_for','sintax.py',308),
  ('for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',9,'p_for','sintax.py',309),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',310),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',311),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',312),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',313),
  ('match -> VARIABLE MATCH LLAVE_I cases LLAVE_D','match',5,'p_match','sintax.py',317),
  ('cases -> casesInt','cases',1,'p_cases','sintax.py',320),
  ('cases -> casesLgn','cases',1,'p_cases','sintax.py',321),
  ('cases -> casesFlt','cases',1,'p_cases','sintax.py',322),
  ('cases -> casesDob','cases',1,'p_cases','sintax.py',323),
  ('cases -> casesStr','cases',1,'p_cases','sintax.py',324),
  ('cases -> casesChar','cases',1,'p_cases','sintax.py',325),
  ('cases -> casesBool','cases',1,'p_cases','sintax.py',326),
  ('caseInt -> CASE INT FUNCION_FLECHA codeBlock','caseInt',4,'p_caseInt','sintax.py',329),
  ('casesInt -> caseInt','casesInt',1,'p_casesInt','sintax.py',332),
  ('casesInt -> caseInt casesInt','casesInt',2,'p_casesInt','sintax.py',333),
  ('casesInt -> caseInt defcase','casesInt',2,'p_casesInt','sintax.py',334),
  ('caseLgn -> CASE LONG FUNCION_FLECHA codeBlock','caseLgn',4,'p_caseLgn','sintax.py',337),
  ('casesLgn -> caseLgn','casesLgn',1,'p_casesLgn','sintax.py',340),
  ('casesLgn -> caseLgn casesLgn','casesLgn',2,'p_casesLgn','sintax.py',341),
  ('casesLgn -> caseLgn defcase','casesLgn',2,'p_casesLgn','sintax.py',342),
  ('caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock','caseFlt',4,'p_caseFlt','sintax.py',345),
  ('casesFlt -> caseFlt','casesFlt',1,'p_casesFlt','sintax.py',348),
  ('casesFlt -> caseFlt casesFlt','casesFlt',2,'p_casesFlt','sintax.py',349),
  ('casesFlt -> caseFlt defcase','casesFlt',2,'p_casesFlt','sintax.py',350),
  ('caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock','caseDob',4,'p_caseDob','sintax.py',353),
  ('casesDob -> caseDob','casesDob',1,'p_casesDob','sintax.py',356),
  ('casesDob -> caseDob casesDob','casesDob',2,'p_casesDob','sintax.py',357),
  ('casesDob -> caseDob defcase','casesDob',2,'p_casesDob','sintax.py',358),
  ('caseStr -> CASE STRING FUNCION_FLECHA codeBlock','caseStr',4,'p_caseStr','sintax.py',361),
  ('casesStr -> caseStr','casesStr',1,'p_casesStr','sintax.py',364),
  ('casesStr -> caseStr casesStr','casesStr',2,'p_casesStr','sintax.py',365),
  ('casesStr -> caseStr defcase','casesStr',2,'p_casesStr','sintax.py',366),
  ('caseChar -> CASE CHAR FUNCION_FLECHA codeBlock','caseChar',4,'p_caseChar','sintax.py',369),
  ('casesChar -> caseChar','casesChar',1,'p_casesChar','sintax.py',372),
  ('casesChar -> caseChar casesChar','casesChar',2,'p_casesChar','sintax.py',373),
  ('casesChar -> caseChar defcase','casesChar',2,'p_casesChar','sintax.py',374),
  ('caseBool -> CASE booleanos FUNCION_FLECHA codeBlock','caseBool',4,'p_caseBool','sintax.py',377),
  ('casesBool -> caseBool','casesBool',1,'p_casesBool','sintax.py',380),
  ('casesBool -> caseBool casesBool','casesBool',2,'p_casesBool','sintax.py',381),
  ('casesBool -> caseBool defcase','casesBool',2,'p_casesBool','sintax.py',382),
  ('defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock','defcase',4,'p_defcase','sintax.py',386),
  ('codeBlock -> contenidoLine','codeBlock',1,'p_codeBlock','sintax.py',389),
  ('codeBlock -> LLAVE_I contenido LLAVE_D','codeBlock',3,'p_codeBlock','sintax.py',390),
  ('if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','if',7,'p_if','sintax.py',394),
  ('if -> if elseif','if',2,'p_if','sintax.py',395),
  ('if -> if else','if',2,'p_if','sintax.py',396),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','elseif',8,'p_elseif','sintax.py',400),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif','elseif',9,'p_elseif','sintax.py',401),
  ('else -> ELSE LLAVE_I contenido LLAVE_D','else',4,'p_else','sintax.py',404),
  ('else -> elseif else','else',2,'p_else','sintax.py',405),
  ('condicional -> valorC logicos condicional','condicional',3,'p_condicional','sintax.py',409),
  ('condicional -> valorC','condicional',1,'p_condicional','sintax.py',410),
  ('valorC -> VARIABLE','valorC',1,'p_valorC','sintax.py',413),
  ('valorC -> booleanos','valorC',1,'p_valorC','sintax.py',414),
  ('valorC -> relacional','valorC',1,'p_valorC','sintax.py',415),
  ('valorC -> NOT VARIABLE','valorC',2,'p_valorC','sintax.py',416),
  ('valorC -> NOT booleanos','valorC',2,'p_valorC','sintax.py',417),
  ('valorC -> NOT relacional','valorC',2,'p_valorC','sintax.py',418),
  ('logicos -> AND','logicos',1,'p_logicos','sintax.py',421),
  ('logicos -> OR','logicos',1,'p_logicos','sintax.py',422),
  ('logicos -> NOT','logicos',1,'p_logicos','sintax.py',423),
  ('relacional -> numeros comparacion numeros','relacional',3,'p_relacional','sintax.py',428),
  ('relacional -> aritmetica comparacion aritmetica','relacional',3,'p_relacional','sintax.py',429),
  ('relacional -> aritmetica comparacion numeros','relacional',3,'p_relacional','sintax.py',430),
  ('relacional -> numeros comparacion aritmetica','relacional',3,'p_relacional','sintax.py',431),
  ('relacional -> booleanos comparacion booleanos','relacional',3,'p_relacional','sintax.py',432),
  ('relacional -> STRING comparacion STRING','relacional',3,'p_relacional','sintax.py',433),
  ('relacional -> CHAR comparacion CHAR','relacional',3,'p_relacional','sintax.py',434),
  ('relacional -> VARIABLE comparacion numeros','relacional',3,'p_relacional','sintax.py',435),
  ('relacional -> numeros comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',436),
  ('relacional -> VARIABLE comparacion booleanos','relacional',3,'p_relacional','sintax.py',437),
  ('relacional -> booleanos comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',438),
  ('relacional -> VARIABLE comparacion STRING','relacional',3,'p_relacional','sintax.py',439),
  ('relacional -> STRING comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',440),
  ('relacional -> VARIABLE comparacion CHAR','relacional',3,'p_relacional','sintax.py',441),
  ('relacional -> CHAR comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',442),
  ('relacional -> VARIABLE comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',443),
  ('comparacion -> IGUAL_COMPARACION','comparacion',1,'p_comparacion','sintax.py',446),
  ('comparacion -> DIFERENTE','comparacion',1,'p_comparacion','sintax.py',447),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion','sintax.py',448),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion','sintax.py',449),
  ('aritmetica -> numeros aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',453),
  ('aritmetica -> VARIABLE aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',454),
  ('aritmetica -> numeros aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',455),
  ('aritmetica -> VARIABLE aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',456),
  ('aritmetica -> aritmetica aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',457),
  ('aritmetica -> aritmetica aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',458),
  ('aritmeticos -> MENOS','aritmeticos',1,'p_aritmeticos','sintax.py',461),
  ('aritmeticos -> MAS','aritmeticos',1,'p_aritmeticos','sintax.py',462),
  ('aritmeticos -> MULTIPLICACION','aritmeticos',1,'p_aritmeticos','sintax.py',463),
  ('aritmeticos -> DIVISION','aritmeticos',1,'p_aritmeticos','sintax.py',464),
  ('aritmeticos -> MOD','aritmeticos',1,'p_aritmeticos','sintax.py',465),
  ('arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D','arrayInt',12,'p_arrayInt','sintax.py',470),
  ('arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D','arrayDouble',12,'p_arrayDouble','sintax.py',475),
  ('valoresInt -> INT','valoresInt',1,'p_valoresInt','sintax.py',478),
  ('valoresInt -> valoresInt COMA INT','valoresInt',3,'p_valoresInt','sintax.py',479),
  ('valoresDouble -> DOUBLE','valoresDouble',1,'p_valoresDouble','sintax.py',482),
  ('valoresDouble -> valoresDouble COMA DOUBLE','valoresDouble',3,'p_valoresDouble','sintax.py',483),
  ('asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla','asignacion',4,'p_asignacion_tupla','sintax.py',488),
  ('asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla','asignacion',4,'p_asignacion_tupla','sintax.py',489),
  ('dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',492),
  ('dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',493),
  ('dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',494),
  ('dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',495),
  ('dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',498),
  ('dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',499),
  ('dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',500),
  ('dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',501),
  ('dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',504),
  ('dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',505),
  ('dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',506),
  ('dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',507),
  ('dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',510),
  ('dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',511),
  ('dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',512),
  ('dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',513),
  ('dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',516),
  ('dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',517),
  ('dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',518),
  ('dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',519),
  ('asignacionLong -> VAR VARIABLE IGUAL longvalues','asignacionLong',4,'p_asignacionLong_cast','sintax.py',524),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues','asignacionLong',6,'p_asignacionLong_cast','sintax.py',525),
  ('asignacionLong -> VAL VARIABLE IGUAL longvalues','asignacionLong',4,'p_asignacionLong_cast','sintax.py',526),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues','asignacionLong',6,'p_asignacionLong_cast','sintax.py',527),
  ('longvalues -> INT','longvalues',1,'p_longvalues','sintax.py',530),
  ('longvalues -> LONG','longvalues',1,'p_longvalues','sintax.py',531),
  ('asignacionFloat -> VAR VARIABLE IGUAL floatvalues','asignacionFloat',4,'p_asignacionFloat_cast','sintax.py',535),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues','asignacionFloat',6,'p_asignacionFloat_cast','sintax.py',536),
  ('asignacionFloat -> VAL VARIABLE IGUAL floatvalues','asignacionFloat',4,'p_asignacionFloat_cast','sintax.py',537),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues','asignacionFloat',6,'p_asignacionFloat_cast','sintax.py',538),
  ('floatvalues -> FLOAT','floatvalues',1,'p_floatvalues','sintax.py',541),
  ('floatvalues -> longvalues','floatvalues',1,'p_floatvalues','sintax.py',542),
  ('asignacionDouble -> VAR VARIABLE IGUAL doublevalues','asignacionDouble',4,'p_asignacionDouble_cast','sintax.py',545),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues','asignacionDouble',6,'p_asignacionDouble_cast','sintax.py',546),
  ('asignacionDouble -> VAL VARIABLE IGUAL doublevalues','asignacionDouble',4,'p_asignacionDouble_cast','sintax.py',547),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues','asignacionDouble',6,'p_asignacionDouble_cast','sintax.py',548),
  ('doublevalues -> DOUBLE','doublevalues',1,'p_doublevalues','sintax.py',551),
  ('doublevalues -> floatvalues','doublevalues',1,'p_doublevalues','sintax.py',552),
]

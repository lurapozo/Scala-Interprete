
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARRAYCLASS ARROBA BACKTICK BOOLCLASS CASE CATCH CHAR CHARCLASS CLASS COMA CORCHETE_D CORCHETE_I DEF DIFERENTE DIVISION DO DOBLE_PUNTO DOUBLE DOUBLECLASS ELSE EXTENDS FINAL FINALLY FLASE FLOAT FLOATCLASS FOR FOR_SOME FUNCION_FLECHA HASHTAG IF IGUAL IGUAL_COMPARACION IMPLICIT IMPORT INT INTCLASS ITERATOR LAZY LIBRERIA_IO LISTCLASS LLAVE_D LLAVE_I LONG LONGCLASS MACRO MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MOD MULTIPLICACION NEW NOT NULL OBJECT OR OVERRIDE PACKAGE PAR_D PAR_I PRINT PRINTLN PRIVATE PROTECTED PUNTO READLINE RETURN REVERSE SEALED STRING STRINGCLASS SUBGUION SUPER THIS THROW TO TO_DOUBLE TO_FLOAT TO_INT TO_LONG TRAIT TRUE TRY TYPE UNTIL VAL VAR VARIABLE WHILE WITH YIELDcuerpo : funcion\n  | funcall\n  | impresion\n  | entrada\n  | asignacion\n  | while\n  | for\n  | match\n  | if\n  | funcion cuerpo\n  | asignacion cuerpo\n  | while cuerpo\n  | for cuerpo\n  | if cuerpo\n  | match cuerpocontenido : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entrada\n  | while\n  | for\n  | match\n  | if\n  | aritmetica\n  | asignacion contenido\n  | reasignacion contenido\n  | funcall contenido\n  | impresion contenido\n  | entrada contenido\n  | while contenido\n  | for contenido\n  | if contenido\n  | match contenido\n  | aritmetica contenidocontenidoLine : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entradaasignacion : VAR VARIABLE IGUAL VARIABLE\n  | VAL VARIABLE IGUAL VARIABLE\n  | VAR VARIABLE IGUAL aritmetica\n  | VAL VARIABLE IGUAL aritmetica\n  | VAR VARIABLE IGUAL returnfun\n  | VAL VARIABLE IGUAL returnfun\n  | asignacionLong\n  | asignacionInt\n  | asignacionFloat\n  | asignacionDouble\n  | asignacionString\n  | asignacionChar\n  | asignacionBoolean\n  | array\n  | listasignacionLong : VAR VARIABLE IGUAL LONG\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG\n  | VAL VARIABLE IGUAL LONG\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLEasignacionInt : VAR VARIABLE IGUAL INT\n  | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT\n  | VAL VARIABLE IGUAL INT\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT\n  | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLEasignacionFloat : VAR VARIABLE IGUAL FLOAT\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT\n  | VAL VARIABLE IGUAL FLOAT\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLEasignacionDouble : VAR VARIABLE IGUAL DOUBLE\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE\n  | VAL VARIABLE IGUAL DOUBLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLEasignacionString : VAR VARIABLE IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAL VARIABLE IGUAL STRING\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLEasignacionChar : VAR VARIABLE IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAL VARIABLE IGUAL CHAR\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLEasignacionBoolean : VAR VARIABLE IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAL VARIABLE IGUAL booleanos\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLEreasignacion :  VARIABLE IGUAL valor\n      | VARIABLE IGUAL returnfuntipo : CHARCLASS\n  | STRINGCLASS\n  | BOOLCLASS\n  | INTCLASS\n  | LONGCLASS\n  | DOUBLECLASS\n  | FLOATCLASSvalor : STRING\n  | CHAR\n  | VARIABLE\n  | numeros\n  | booleanosbooleanos : TRUE\n  | FLASEnumeros : INT\n  | LONG\n  | FLOAT\n  | DOUBLEfuncion : DEF VARIABLE  parametro  IGUAL LLAVE_I contenido LLAVE_Ddeclaracion : VARIABLE DOBLE_PUNTO tipodeclaracion :  VARIABLE DOBLE_PUNTO tipo IGUAL valor parametro : parametros\n  | PAR_I PAR_D parametros : PAR_I declaracion PAR_D \n    | PAR_I declaracion PAR_D parametrosfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D\n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D \n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_Ddectipo : DOBLE_PUNTO tipo dectipoTupla : DOBLE_PUNTO PAR_I tipos PAR_Dtipos : tipo\n    | tipo tiposentrytiposentry : COMA tipo \n  | COMA tipo tiposentryimpresion : PRINTLN PAR_I valorI PAR_D\n  | PRINT PAR_I valorI PAR_DvalorI : valor MAS valorI\n  | valorentrada : READLINE PAR_I PAR_Dfuncall : VARIABLE PAR_I valores PAR_D\n    | VARIABLE PAR_I  PAR_D returnfun : returnCastable\n      | castingcallreturnCastable : entrada\n      | funcallcastingcall : returnCastable PUNTO castingfun\n      | VARIABLE PUNTO castingfuncastingfun : TO_INT\n    | TO_DOUBLE\n    | TO_FLOAT\n    | TO_LONGarray : VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_Dlist : VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_Dvalores : valor\n  | valor COMA valorestuple : PAR_I valores PAR_Dasignacion : VAR VARIABLE IGUAL tuple \n      | VAL VARIABLE IGUAL tupleasignacion : VAR VARIABLE dectipoTupla IGUAL tuple \n      | VAL VARIABLE dectipoTupla IGUAL tuplewhile : WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_Dfor : FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_Dmatch : VARIABLE MATCH  LLAVE_I cases LLAVE_Dcases : casesInt\n    | casesLgn\n    | casesFlt\n    | casesDob\n    | casesStr\n    | casesChar\n    | casesBoolcaseInt : CASE INT FUNCION_FLECHA codeBlock casesInt : caseInt \n      | caseInt casesInt\n      | caseInt defcasecaseLgn : CASE LONG FUNCION_FLECHA codeBlock casesLgn : caseLgn \n      | caseLgn casesLgn\n      | caseLgn defcasecaseFlt : CASE FLOAT FUNCION_FLECHA codeBlock casesFlt : caseFlt \n      | caseFlt casesFlt\n      | caseFlt defcasecaseDob : CASE DOUBLE FUNCION_FLECHA codeBlock casesDob : caseDob \n      | caseDob casesDob\n      | caseDob defcasecaseStr : CASE STRING FUNCION_FLECHA codeBlock casesStr : caseStr\n      | caseStr casesStr\n      | caseStr defcasecaseChar : CASE CHAR FUNCION_FLECHA codeBlock casesChar : caseChar\n      | caseChar casesChar\n      | caseChar defcasecaseBool : CASE booleanos FUNCION_FLECHA codeBlock casesBool : caseBool\n      | caseBool casesBool\n      | caseBool defcasedefcase : CASE SUBGUION FUNCION_FLECHA codeBlock codeBlock : contenidoLine\n      | LLAVE_I contenido LLAVE_Dif : IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | if elseif\n  | if else\n  elseif : ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_Delse : ELSE LLAVE_I contenido LLAVE_D\n  | elseif elsecondicional : valorC logicos condicional\n  | valorCvalorC : VARIABLE\n  | booleanos\n  | relacional\n  | NOT VARIABLE\n  | NOT booleanos\n  | NOT relacional\n  logicos : AND\n  | OR\n  | NOTrelacional : numeros comparacion numeros\n  | aritmetica comparacion aritmetica\n  | aritmetica comparacion numeros\n  | numeros comparacion aritmetica\n  | booleanos comparacion booleanos\n  | STRING comparacion STRING\n  | CHAR comparacion CHAR\n  | VARIABLE comparacion numeros\n  | numeros comparacion VARIABLE\n  | VARIABLE comparacion booleanos\n  | booleanos comparacion VARIABLE\n  | VARIABLE comparacion STRING\n  | STRING comparacion VARIABLE\n  | VARIABLE comparacion CHAR\n  | CHAR comparacion VARIABLE\n  | VARIABLE comparacion VARIABLEcomparacion : IGUAL_COMPARACION\n  | DIFERENTE\n  | MAYOR\n  | MENORaritmetica : numeros aritmeticos numeros\n  | VARIABLE aritmeticos numeros\n  | numeros aritmeticos VARIABLE\n  | VARIABLE aritmeticos VARIABLE\n  | aritmetica aritmeticos numeros\n  | aritmetica aritmeticos VARIABLEaritmeticos : MENOS\n  | MAS\n  | MULTIPLICACION\n  | DIVISION\n  | MOD'
    
_lr_action_items = {'DEF':([0,2,6,7,8,9,10,18,19,20,21,22,23,24,25,26,36,37,51,60,66,67,68,69,70,71,76,117,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,165,166,167,168,169,170,171,172,173,174,175,216,242,276,288,304,305,311,312,316,317,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,371,372,373,374,375,376,377,378,379,380,381,382,383,384,394,414,417,419,426,442,455,458,459,460,461,462,463,467,477,478,480,481,482,483,486,],[11,11,11,11,11,11,11,-47,-48,-49,-50,-51,-52,-53,-54,-55,-213,-214,-217,-143,-114,-115,-116,-117,-112,-113,-141,-142,-41,-43,-45,-162,-56,-62,-68,-74,-80,-86,-92,-144,-145,-146,-147,-42,-44,-46,-163,-58,-64,-70,-76,-82,-88,-94,-216,-173,-164,-165,-252,-250,-249,-251,-253,-254,-149,-150,-151,-152,-153,-161,-148,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,-118,-154,-157,-166,-212,-215,-168,-126,-125,-127,-129,-128,-130,-167,-169,-170,-155,-158,-171,-172,-156,]),'VARIABLE':([0,2,6,7,8,9,10,11,16,17,18,19,20,21,22,23,24,25,26,36,37,40,42,43,47,48,49,51,54,57,60,62,63,64,65,66,67,68,69,70,71,76,77,80,88,93,96,98,99,100,101,102,103,104,105,106,107,117,118,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,165,166,167,168,169,170,171,172,173,174,175,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,206,207,208,209,210,211,213,216,227,228,242,273,276,277,278,279,280,281,282,283,287,288,289,290,291,292,293,294,295,297,304,305,311,312,316,317,322,325,327,328,329,331,332,333,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,371,372,373,374,375,376,377,378,379,380,381,382,383,384,393,394,397,398,401,414,417,419,423,426,428,429,436,442,455,456,457,458,459,460,461,462,463,465,466,467,468,469,477,478,480,481,482,483,486,],[12,12,12,12,12,12,12,39,45,46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-213,-214,58,58,58,85,94,85,-217,108,116,-143,-107,-108,-110,-111,-114,-115,-116,-117,-112,-113,-141,138,165,203,212,85,108,108,108,108,108,108,108,108,108,108,-142,58,-137,58,-138,-41,-43,-45,-162,-56,-62,-68,-74,-80,-86,-92,58,-144,-145,-146,-147,-42,-44,-46,-163,-58,-64,-70,-76,-82,-88,-94,85,-226,-227,-228,299,304,-245,-246,-247,-248,-255,-256,-257,-258,-259,307,310,312,315,317,319,321,323,-216,327,108,-173,58,-164,352,354,356,358,360,362,364,58,-165,371,373,375,377,379,381,383,108,-252,-250,-249,-251,-253,-254,387,108,-109,-98,-99,108,108,116,407,407,407,407,407,407,407,-149,-150,-151,-152,-153,-161,-148,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,108,-118,58,407,108,-154,-157,-166,108,-212,443,446,108,-215,-168,108,108,-126,-125,-127,-129,-128,-130,58,58,-167,108,108,-169,-170,-155,-158,-171,-172,-156,]),'PRINTLN':([0,2,6,7,8,9,10,18,19,20,21,22,23,24,25,26,36,37,51,54,60,62,63,64,65,66,67,68,69,70,71,76,98,99,100,101,102,103,104,105,106,107,117,135,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,165,166,167,168,169,170,171,172,173,174,175,216,228,242,276,288,297,304,305,311,312,316,317,325,327,328,329,331,332,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,371,372,373,374,375,376,377,378,379,380,381,382,383,384,393,394,398,401,414,417,419,423,426,436,442,455,456,457,458,459,460,461,462,463,467,468,469,477,478,480,481,482,483,486,],[13,13,13,13,13,13,13,-47,-48,-49,-50,-51,-52,-53,-54,-55,-213,-214,-217,13,-143,-107,-108,-110,-111,-114,-115,-116,-117,-112,-113,-141,13,13,13,13,13,13,13,13,13,13,-142,-137,-138,-41,-43,-45,-162,-56,-62,-68,-74,-80,-86,-92,-144,-145,-146,-147,-42,-44,-46,-163,-58,-64,-70,-76,-82,-88,-94,-216,13,-173,-164,-165,13,-252,-250,-249,-251,-253,-254,13,-109,-98,-99,13,13,13,13,13,13,13,13,13,-149,-150,-151,-152,-153,-161,-148,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,13,-118,13,13,-154,-157,-166,13,-212,13,-215,-168,13,13,-126,-125,-127,-129,-128,-130,-167,13,13,-169,-170,-155,-158,-171,-172,-156,]),'PRINT':([0,2,6,7,8,9,10,18,19,20,21,22,23,24,25,26,36,37,51,54,60,62,63,64,65,66,67,68,69,70,71,76,98,99,100,101,102,103,104,105,106,107,117,135,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,165,166,167,168,169,170,171,172,173,174,175,216,228,242,276,288,297,304,305,311,312,316,317,325,327,328,329,331,332,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,371,372,373,374,375,376,377,378,379,380,381,382,383,384,393,394,398,401,414,417,419,423,426,436,442,455,456,457,458,459,460,461,462,463,467,468,469,477,478,480,481,482,483,486,],[14,14,14,14,14,14,14,-47,-48,-49,-50,-51,-52,-53,-54,-55,-213,-214,-217,14,-143,-107,-108,-110,-111,-114,-115,-116,-117,-112,-113,-141,14,14,14,14,14,14,14,14,14,14,-142,-137,-138,-41,-43,-45,-162,-56,-62,-68,-74,-80,-86,-92,-144,-145,-146,-147,-42,-44,-46,-163,-58,-64,-70,-76,-82,-88,-94,-216,14,-173,-164,-165,14,-252,-250,-249,-251,-253,-254,14,-109,-98,-99,14,14,14,14,14,14,14,14,14,-149,-150,-151,-152,-153,-161,-148,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,14,-118,14,14,-154,-157,-166,14,-212,14,-215,-168,14,14,-126,-125,-127,-129,-128,-130,-167,14,14,-169,-170,-155,-158,-171,-172,-156,]),'READLINE':([0,2,6,7,8,9,10,18,19,20,21,22,23,24,25,26,36,37,51,54,60,62,63,64,65,66,67,68,69,70,71,76,77,80,98,99,100,101,102,103,104,105,106,107,117,135,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,165,166,167,168,169,170,171,172,173,174,175,216,227,228,242,276,288,297,304,305,311,312,316,317,325,327,328,329,331,332,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,371,372,373,374,375,376,377,378,379,380,381,382,383,384,393,394,398,401,414,417,419,423,426,428,429,436,442,455,456,457,458,459,460,461,462,463,467,468,469,477,478,480,481,482,483,486,],[15,15,15,15,15,15,15,-47,-48,-49,-50,-51,-52,-53,-54,-55,-213,-214,-217,15,-143,-107,-108,-110,-111,-114,-115,-116,-117,-112,-113,-141,15,15,15,15,15,15,15,15,15,15,15,15,-142,-137,-138,-41,-43,-45,-162,-56,-62,-68,-74,-80,-86,-92,-144,-145,-146,-147,-42,-44,-46,-163,-58,-64,-70,-76,-82,-88,-94,-216,15,15,-173,-164,-165,15,-252,-250,-249,-251,-253,-254,15,-109,-98,-99,15,15,15,15,15,15,15,15,15,-149,-150,-151,-152,-153,-161,-148,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,15,-118,15,15,-154,-157,-166,15,-212,15,15,15,-215,-168,15,15,-126,-125,-127,-129,-128,-130,-167,15,15,-169,-170,-155,-158,-171,-172,-156,]),'VAR':([0,2,6,7,8,9,10,18,19,20,21,22,23,24,25,26,36,37,48,51,54,60,62,63,64,65,66,67,68,69,70,71,76,98,99,100,101,102,103,104,105,106,107,117,135,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,165,166,167,168,169,170,171,172,173,174,175,216,228,242,276,288,297,304,305,311,312,316,317,325,327,328,329,331,332,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,371,372,373,374,375,376,377,378,379,380,381,382,383,384,393,394,398,401,414,417,419,423,426,436,442,455,456,457,458,459,460,461,462,463,467,468,469,477,478,480,481,482,483,486,],[16,16,16,16,16,16,16,-47,-48,-49,-50,-51,-52,-53,-54,-55,-213,-214,93,-217,16,-143,-107,-108,-110,-111,-114,-115,-116,-117,-112,-113,-141,16,16,16,16,16,16,16,16,16,16,-142,-137,-138,-41,-43,-45,-162,-56,-62,-68,-74,-80,-86,-92,-144,-145,-146,-147,-42,-44,-46,-163,-58,-64,-70,-76,-82,-88,-94,-216,16,-173,-164,-165,16,-252,-250,-249,-251,-253,-254,16,-109,-98,-99,16,16,16,16,16,16,16,16,16,-149,-150,-151,-152,-153,-161,-148,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,16,-118,16,16,-154,-157,-166,16,-212,16,-215,-168,16,16,-126,-125,-127,-129,-128,-130,-167,16,16,-169,-170,-155,-158,-171,-172,-156,]),'VAL':([0,2,6,7,8,9,10,18,19,20,21,22,23,24,25,26,36,37,51,54,60,62,63,64,65,66,67,68,69,70,71,76,98,99,100,101,102,103,104,105,106,107,117,135,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,165,166,167,168,169,170,171,172,173,174,175,216,228,242,276,288,297,304,305,311,312,316,317,325,327,328,329,331,332,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,371,372,373,374,375,376,377,378,379,380,381,382,383,384,393,394,398,401,414,417,419,423,426,436,442,455,456,457,458,459,460,461,462,463,467,468,469,477,478,480,481,482,483,486,],[17,17,17,17,17,17,17,-47,-48,-49,-50,-51,-52,-53,-54,-55,-213,-214,-217,17,-143,-107,-108,-110,-111,-114,-115,-116,-117,-112,-113,-141,17,17,17,17,17,17,17,17,17,17,-142,-137,-138,-41,-43,-45,-162,-56,-62,-68,-74,-80,-86,-92,-144,-145,-146,-147,-42,-44,-46,-163,-58,-64,-70,-76,-82,-88,-94,-216,17,-173,-164,-165,17,-252,-250,-249,-251,-253,-254,17,-109,-98,-99,17,17,17,17,17,17,17,17,17,-149,-150,-151,-152,-153,-161,-148,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,17,-118,17,17,-154,-157,-166,17,-212,17,-215,-168,17,17,-126,-125,-127,-129,-128,-130,-167,17,17,-169,-170,-155,-158,-171,-172,-156,]),'WHILE':([0,2,6,7,8,9,10,18,19,20,21,22,23,24,25,26,36,37,51,54,60,62,63,64,65,66,67,68,69,70,71,76,98,99,100,101,102,103,104,105,106,107,117,135,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,165,166,167,168,169,170,171,172,173,174,175,216,228,242,276,288,297,304,305,311,312,316,317,325,327,328,329,331,332,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,371,372,373,374,375,376,377,378,379,380,381,382,383,384,393,394,401,414,417,419,423,426,436,442,455,456,457,458,459,460,461,462,463,467,468,469,477,478,480,481,482,483,486,],[27,27,27,27,27,27,27,-47,-48,-49,-50,-51,-52,-53,-54,-55,-213,-214,-217,27,-143,-107,-108,-110,-111,-114,-115,-116,-117,-112,-113,-141,27,27,27,27,27,27,27,27,27,27,-142,-137,-138,-41,-43,-45,-162,-56,-62,-68,-74,-80,-86,-92,-144,-145,-146,-147,-42,-44,-46,-163,-58,-64,-70,-76,-82,-88,-94,-216,27,-173,-164,-165,27,-252,-250,-249,-251,-253,-254,27,-109,-98,-99,27,27,-149,-150,-151,-152,-153,-161,-148,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,27,-118,27,-154,-157,-166,27,-212,27,-215,-168,27,27,-126,-125,-127,-129,-128,-130,-167,27,27,-169,-170,-155,-158,-171,-172,-156,]),'FOR':([0,2,6,7,8,9,10,18,19,20,21,22,23,24,25,26,36,37,51,54,60,62,63,64,65,66,67,68,69,70,71,76,98,99,100,101,102,103,104,105,106,107,117,135,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,165,166,167,168,169,170,171,172,173,174,175,216,228,242,276,288,297,304,305,311,312,316,317,325,327,328,329,331,332,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,371,372,373,374,375,376,377,378,379,380,381,382,383,384,393,394,401,414,417,419,423,426,436,442,455,456,457,458,459,460,461,462,463,467,468,469,477,478,480,481,482,483,486,],[28,28,28,28,28,28,28,-47,-48,-49,-50,-51,-52,-53,-54,-55,-213,-214,-217,28,-143,-107,-108,-110,-111,-114,-115,-116,-117,-112,-113,-141,28,28,28,28,28,28,28,28,28,28,-142,-137,-138,-41,-43,-45,-162,-56,-62,-68,-74,-80,-86,-92,-144,-145,-146,-147,-42,-44,-46,-163,-58,-64,-70,-76,-82,-88,-94,-216,28,-173,-164,-165,28,-252,-250,-249,-251,-253,-254,28,-109,-98,-99,28,28,-149,-150,-151,-152,-153,-161,-148,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,28,-118,28,-154,-157,-166,28,-212,28,-215,-168,28,28,-126,-125,-127,-129,-128,-130,-167,28,28,-169,-170,-155,-158,-171,-172,-156,]),'IF':([0,2,6,7,8,9,10,18,19,20,21,22,23,24,25,26,36,37,38,51,52,54,60,62,63,64,65,66,67,68,69,70,71,76,98,99,100,101,102,103,104,105,106,107,117,135,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,165,166,167,168,169,170,171,172,173,174,175,216,228,242,276,288,297,304,305,311,312,316,317,325,327,328,329,331,332,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,371,372,373,374,375,376,377,378,379,380,381,382,383,384,393,394,401,414,417,419,423,426,436,442,455,456,457,458,459,460,461,462,463,467,468,469,477,478,480,481,482,483,486,],[29,29,29,29,29,29,29,-47,-48,-49,-50,-51,-52,-53,-54,-55,-213,-214,53,-217,53,29,-143,-107,-108,-110,-111,-114,-115,-116,-117,-112,-113,-141,29,29,29,29,29,29,29,29,29,29,-142,-137,-138,-41,-43,-45,-162,-56,-62,-68,-74,-80,-86,-92,-144,-145,-146,-147,-42,-44,-46,-163,-58,-64,-70,-76,-82,-88,-94,-216,29,-173,-164,-165,29,-252,-250,-249,-251,-253,-254,29,-109,-98,-99,29,29,-149,-150,-151,-152,-153,-161,-148,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,29,-118,29,-154,-157,-166,29,-212,29,-215,-168,29,29,-126,-125,-127,-129,-128,-130,-167,29,29,-169,-170,-155,-158,-171,-172,-156,]),'$end':([1,2,3,4,5,6,7,8,9,10,18,19,20,21,22,23,24,25,26,30,31,32,33,34,35,36,37,51,60,66,67,68,69,70,71,76,117,135,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,165,166,167,168,169,170,171,172,173,174,175,216,242,276,288,304,305,311,312,316,317,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,371,372,373,374,375,376,377,378,379,380,381,382,383,384,394,414,417,419,426,442,455,458,459,460,461,462,463,467,477,478,480,481,482,483,486,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-47,-48,-49,-50,-51,-52,-53,-54,-55,-10,-11,-12,-13,-15,-14,-213,-214,-217,-143,-114,-115,-116,-117,-112,-113,-141,-142,-137,-138,-41,-43,-45,-162,-56,-62,-68,-74,-80,-86,-92,-144,-145,-146,-147,-42,-44,-46,-163,-58,-64,-70,-76,-82,-88,-94,-216,-173,-164,-165,-252,-250,-249,-251,-253,-254,-149,-150,-151,-152,-153,-161,-148,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,-118,-154,-157,-166,-212,-215,-168,-126,-125,-127,-129,-128,-130,-167,-169,-170,-155,-158,-171,-172,-156,]),'ELSE':([10,36,37,50,51,106,216,426,442,],[38,52,-214,52,-217,38,-216,-212,-215,]),'PAR_I':([12,13,14,15,27,28,29,39,53,77,79,80,82,108,113,138,149,155,165,176,177,239,327,407,429,443,446,450,451,479,],[40,42,43,44,47,48,49,57,96,150,164,150,164,40,164,40,273,150,40,287,150,333,40,40,150,40,40,465,466,484,]),'MATCH':([12,108,],[41,41,]),'INT':([18,19,20,21,22,23,24,25,26,36,37,40,42,43,47,49,51,54,60,62,63,64,65,66,67,68,69,70,71,76,77,80,88,96,98,99,100,101,102,103,104,105,106,107,117,118,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,165,166,167,168,169,170,171,172,173,174,175,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,206,207,208,209,213,216,227,228,242,245,273,276,278,287,288,290,297,304,305,311,312,316,317,322,325,327,328,329,331,332,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,371,372,373,374,375,376,377,378,379,380,381,382,383,384,390,391,393,397,401,414,417,419,421,422,423,426,428,436,442,455,456,457,465,466,467,468,469,477,478,480,481,482,483,484,486,],[-47,-48,-49,-50,-51,-52,-53,-54,-55,-213,-214,66,66,66,66,66,-217,66,-143,-107,-108,-110,-111,-114,-115,-116,-117,-112,-113,-141,143,170,66,66,66,66,66,66,66,66,66,66,66,66,-142,66,264,-137,66,-138,-41,-43,-45,-162,-56,-62,-68,-74,-80,-86,-92,66,-144,-145,-146,-147,-42,-44,-46,-163,-58,-64,-70,-76,-82,-88,-94,66,-226,-227,-228,66,66,-245,-246,-247,-248,-255,-256,-257,-258,-259,66,66,66,66,324,-216,66,66,-173,264,66,-164,355,66,-165,374,66,-252,-250,-249,-251,-253,-254,388,66,-109,-98,-99,66,66,-149,-150,-151,-152,-153,-161,-148,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,424,425,66,66,66,-154,-157,-166,437,438,66,-212,66,66,-215,-168,66,66,66,66,-167,66,66,-169,-170,-155,-158,-171,-172,485,-156,]),'LONG':([18,19,20,21,22,23,24,25,26,36,37,40,42,43,47,49,51,54,60,62,63,64,65,66,67,68,69,70,71,76,77,80,88,96,98,99,100,101,102,103,104,105,106,107,117,118,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,165,166,167,168,169,170,171,172,173,174,175,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,206,207,208,209,216,227,228,242,248,273,276,277,287,288,289,297,304,305,311,312,316,317,325,327,328,329,331,332,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,371,372,373,374,375,376,377,378,379,380,381,382,383,384,393,397,401,414,417,419,423,426,428,436,442,455,456,457,465,466,467,468,469,477,478,480,481,482,483,486,],[-47,-48,-49,-50,-51,-52,-53,-54,-55,-213,-214,67,67,67,67,67,-217,67,-143,-107,-108,-110,-111,-114,-115,-116,-117,-112,-113,-141,142,169,67,67,67,67,67,67,67,67,67,67,67,67,-142,67,265,-137,67,-138,-41,-43,-45,-162,-56,-62,-68,-74,-80,-86,-92,67,-144,-145,-146,-147,-42,-44,-46,-163,-58,-64,-70,-76,-82,-88,-94,67,-226,-227,-228,67,67,-245,-246,-247,-248,-255,-256,-257,-258,-259,67,67,67,67,-216,67,67,-173,265,67,-164,353,67,-165,372,67,-252,-250,-249,-251,-253,-254,67,-109,-98,-99,67,67,-149,-150,-151,-152,-153,-161,-148,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,67,67,67,-154,-157,-166,67,-212,67,67,-215,-168,67,67,67,67,-167,67,67,-169,-170,-155,-158,-171,-172,-156,]),'FLOAT':([18,19,20,21,22,23,24,25,26,36,37,40,42,43,47,49,51,54,60,62,63,64,65,66,67,68,69,70,71,76,77,80,88,96,98,99,100,101,102,103,104,105,106,107,117,118,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,165,166,167,168,169,170,171,172,173,174,175,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,206,207,208,209,216,227,228,242,251,273,276,279,287,288,291,297,304,305,311,312,316,317,325,327,328,329,331,332,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,371,372,373,374,375,376,377,378,379,380,381,382,383,384,393,397,401,414,417,419,423,426,428,436,442,455,456,457,465,466,467,468,469,477,478,480,481,482,483,486,],[-47,-48,-49,-50,-51,-52,-53,-54,-55,-213,-214,68,68,68,68,68,-217,68,-143,-107,-108,-110,-111,-114,-115,-116,-117,-112,-113,-141,144,171,68,68,68,68,68,68,68,68,68,68,68,68,-142,68,266,-137,68,-138,-41,-43,-45,-162,-56,-62,-68,-74,-80,-86,-92,68,-144,-145,-146,-147,-42,-44,-46,-163,-58,-64,-70,-76,-82,-88,-94,68,-226,-227,-228,68,68,-245,-246,-247,-248,-255,-256,-257,-258,-259,68,68,68,68,-216,68,68,-173,266,68,-164,357,68,-165,376,68,-252,-250,-249,-251,-253,-254,68,-109,-98,-99,68,68,-149,-150,-151,-152,-153,-161,-148,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,68,68,68,-154,-157,-166,68,-212,68,68,-215,-168,68,68,68,68,-167,68,68,-169,-170,-155,-158,-171,-172,-156,]),'DOUBLE':([18,19,20,21,22,23,24,25,26,36,37,40,42,43,47,49,51,54,60,62,63,64,65,66,67,68,69,70,71,76,77,80,88,96,98,99,100,101,102,103,104,105,106,107,117,118,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,165,166,167,168,169,170,171,172,173,174,175,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,206,207,208,209,216,227,228,242,254,273,276,280,287,288,292,297,304,305,311,312,316,317,325,327,328,329,331,332,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,371,372,373,374,375,376,377,378,379,380,381,382,383,384,393,397,401,414,417,419,423,426,428,436,442,455,456,457,465,466,467,468,469,477,478,480,481,482,483,486,],[-47,-48,-49,-50,-51,-52,-53,-54,-55,-213,-214,69,69,69,69,69,-217,69,-143,-107,-108,-110,-111,-114,-115,-116,-117,-112,-113,-141,145,172,69,69,69,69,69,69,69,69,69,69,69,69,-142,69,267,-137,69,-138,-41,-43,-45,-162,-56,-62,-68,-74,-80,-86,-92,69,-144,-145,-146,-147,-42,-44,-46,-163,-58,-64,-70,-76,-82,-88,-94,69,-226,-227,-228,69,69,-245,-246,-247,-248,-255,-256,-257,-258,-259,69,69,69,69,-216,69,69,-173,267,69,-164,359,69,-165,378,69,-252,-250,-249,-251,-253,-254,69,-109,-98,-99,69,69,-149,-150,-151,-152,-153,-161,-148,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,69,69,69,-154,-157,-166,69,-212,69,69,-215,-168,69,69,69,69,-167,69,69,-169,-170,-155,-158,-171,-172,-156,]),'LLAVE_D':([18,19,20,21,22,23,24,25,26,36,37,51,60,62,63,64,65,66,67,68,69,70,71,76,97,98,99,100,101,102,103,104,105,106,107,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,165,166,167,168,169,170,171,172,173,174,175,216,217,218,219,220,221,222,223,224,225,226,242,243,244,246,247,249,250,252,253,255,256,258,259,261,262,276,288,304,305,311,312,316,317,327,328,329,330,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,392,399,400,402,403,404,405,406,408,409,410,411,412,413,414,417,419,426,427,431,432,439,442,443,444,445,446,447,448,449,452,455,467,470,471,475,476,477,478,480,481,482,483,486,],[-47,-48,-49,-50,-51,-52,-53,-54,-55,-213,-214,-217,-143,-107,-108,-110,-111,-114,-115,-116,-117,-112,-113,-141,216,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-142,242,-174,-175,-176,-177,-178,-179,-180,-182,-186,-190,-194,-198,-202,-206,-137,-138,-41,-43,-45,-162,-56,-62,-68,-74,-80,-86,-92,-144,-145,-146,-147,-42,-44,-46,-163,-58,-64,-70,-76,-82,-88,-94,-216,-26,-27,-28,-29,-30,-31,-32,-34,-33,-35,-173,-183,-184,-187,-188,-191,-192,-195,-196,-199,-200,-203,-204,-207,-208,-164,-165,-252,-250,-249,-251,-253,-254,-109,-98,-99,394,-149,-150,-151,-152,-153,-161,-148,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,419,426,-181,-210,-36,-37,-38,-39,-40,-185,-189,-193,-197,-201,-205,-154,-157,-166,-212,442,-209,449,455,-215,458,459,460,461,462,463,-211,467,-168,-167,477,478,482,483,-169,-170,-155,-158,-171,-172,-156,]),'RETURN':([18,19,20,21,22,23,24,25,26,36,37,51,60,62,63,64,65,66,67,68,69,70,71,76,98,99,100,101,102,103,104,105,106,107,117,135,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,165,166,167,168,169,170,171,172,173,174,175,216,217,218,219,220,221,222,223,224,225,226,242,276,288,304,305,311,312,316,317,327,328,329,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,371,372,373,374,375,376,377,378,379,380,381,382,383,384,395,396,414,417,419,426,442,455,467,477,478,480,481,482,483,486,],[-47,-48,-49,-50,-51,-52,-53,-54,-55,-213,-214,-217,-143,-107,-108,-110,-111,-114,-115,-116,-117,-112,-113,-141,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-142,-137,-138,-41,-43,-45,-162,-56,-62,-68,-74,-80,-86,-92,-144,-145,-146,-147,-42,-44,-46,-163,-58,-64,-70,-76,-82,-88,-94,-216,-26,-27,-28,-29,-30,-31,-32,-34,-33,-35,-173,-164,-165,-252,-250,-249,-251,-253,-254,-109,-98,-99,-149,-150,-151,-152,-153,-161,-148,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,428,429,-154,-157,-166,-212,-215,-168,-167,-169,-170,-155,-158,-171,-172,-156,]),'CASE':([18,19,20,21,22,23,24,25,26,60,62,63,64,65,66,67,68,69,70,71,72,76,117,127,128,129,130,131,132,133,135,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,165,166,167,168,169,170,171,172,173,174,175,276,288,304,305,311,312,316,317,327,328,329,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,371,372,373,374,375,376,377,378,379,380,381,382,383,384,399,400,402,403,404,405,406,408,409,410,411,412,413,414,417,449,480,481,486,],[-47,-48,-49,-50,-51,-52,-53,-54,-55,-143,-107,-108,-110,-111,-114,-115,-116,-117,-112,-113,134,-141,-142,245,248,251,254,257,260,263,-137,-138,-41,-43,-45,-162,-56,-62,-68,-74,-80,-86,-92,-144,-145,-146,-147,-42,-44,-46,-163,-58,-64,-70,-76,-82,-88,-94,-164,-165,-252,-250,-249,-251,-253,-254,-109,-98,-99,-149,-150,-151,-152,-153,-161,-148,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,-181,-210,-36,-37,-38,-39,-40,-185,-189,-193,-197,-201,-205,-154,-157,-211,-155,-158,-156,]),'LLAVE_I':([38,41,52,110,186,214,229,230,326,337,338,339,340,341,342,343,389,398,420,440,441,453,454,],[54,72,54,228,297,325,331,332,393,401,401,401,401,401,401,401,423,401,436,456,457,468,469,]),'PAR_D':([40,44,57,58,59,61,62,63,64,65,66,67,68,69,70,71,73,74,75,83,84,85,86,87,95,115,203,204,205,215,232,233,234,235,236,237,238,241,271,274,285,286,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,323,335,349,368,370,387,416,424,425,430,434,437,438,473,474,485,],[60,76,114,-109,117,-159,-107,-108,-110,-111,-114,-115,-116,-117,-112,-113,135,-140,137,186,-219,-220,-221,-222,214,239,-223,-224,-225,326,-100,-101,-102,-103,-104,-105,-106,-160,-139,350,367,-133,-218,-244,-236,-238,-240,-242,-252,-250,-233,-239,-229,-232,-237,-249,-251,-230,-231,-253,-254,-234,-241,-235,-243,389,-119,414,-134,417,420,-135,440,441,-120,-136,453,454,480,481,486,]),'STRING':([40,42,43,47,49,77,80,88,96,118,134,136,150,187,188,189,190,191,193,194,195,196,210,227,257,273,281,287,293,397,428,465,466,],[62,62,62,91,91,146,173,91,91,62,268,62,62,91,-226,-227,-228,302,-245,-246,-247,-248,318,62,268,62,361,62,380,62,62,62,62,]),'CHAR':([40,42,43,47,49,77,80,88,96,118,134,136,150,187,188,189,190,191,193,194,195,196,211,227,260,273,282,287,294,397,428,465,466,],[63,63,63,92,92,147,174,92,92,63,269,63,63,92,-226,-227,-228,303,-245,-246,-247,-248,320,63,269,63,363,63,382,63,63,63,63,]),'TRUE':([40,42,43,47,49,77,80,88,96,118,134,136,150,187,188,189,190,191,193,194,195,196,202,227,263,273,283,287,295,397,428,465,466,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,-226,-227,-228,70,-245,-246,-247,-248,70,70,70,70,70,70,70,70,70,70,70,]),'FLASE':([40,42,43,47,49,77,80,88,96,118,134,136,150,187,188,189,190,191,193,194,195,196,202,227,263,273,283,287,295,397,428,465,466,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,-226,-227,-228,71,-245,-246,-247,-248,71,71,71,71,71,71,71,71,71,71,71,]),'IGUAL':([45,46,55,56,78,81,108,111,112,114,156,157,158,159,160,161,162,178,179,180,181,182,183,184,231,232,233,234,235,236,237,238,239,334,335,367,407,415,418,],[77,80,110,-121,155,177,227,229,230,-122,277,278,279,280,281,282,283,289,290,291,292,293,294,295,-131,-100,-101,-102,-103,-104,-105,-106,-123,-124,397,-132,227,433,435,]),'DOBLE_PUNTO':([45,46,55,56,114,116,239,334,],[79,82,113,-121,-122,240,-123,-124,]),'NOT':([47,49,66,67,68,69,70,71,84,85,86,87,96,187,188,189,190,203,204,205,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,],[88,88,-114,-115,-116,-117,-112,-113,190,-220,-221,-222,88,88,-226,-227,-228,-223,-224,-225,-244,-236,-238,-240,-242,-252,-250,-233,-239,-229,-232,-237,-249,-251,-230,-231,-253,-254,-234,-241,-235,-243,]),'COMA':([58,61,62,63,64,65,66,67,68,69,70,71,232,233,234,235,236,237,238,286,416,],[-109,118,-107,-108,-110,-111,-114,-115,-116,-117,-112,-113,-100,-101,-102,-103,-104,-105,-106,369,369,]),'MAS':([58,62,63,64,65,66,67,68,69,70,71,74,85,89,90,107,108,109,138,139,142,143,144,145,165,166,169,170,171,172,203,304,305,308,309,310,311,312,313,314,315,316,317,],[-109,-107,-108,-110,-111,-114,-115,-116,-117,-112,-113,136,198,198,198,198,198,198,198,198,-115,-114,-116,-117,198,198,-115,-114,-116,-117,198,-252,-250,198,198,198,-249,-251,198,198,198,-253,-254,]),'PUNTO':([60,76,117,138,151,153,154,165,327,443,446,],[-143,-141,-142,272,275,-146,-147,272,272,272,272,]),'IGUAL_COMPARACION':([66,67,68,69,70,71,85,86,89,90,91,92,203,204,304,305,311,312,316,317,],[-114,-115,-116,-117,-112,-113,193,193,193,193,193,193,193,193,-252,-250,-249,-251,-253,-254,]),'DIFERENTE':([66,67,68,69,70,71,85,86,89,90,91,92,203,204,304,305,311,312,316,317,],[-114,-115,-116,-117,-112,-113,194,194,194,194,194,194,194,194,-252,-250,-249,-251,-253,-254,]),'MAYOR':([66,67,68,69,70,71,85,86,89,90,91,92,203,204,304,305,311,312,316,317,],[-114,-115,-116,-117,-112,-113,195,195,195,195,195,195,195,195,-252,-250,-249,-251,-253,-254,]),'MENOR':([66,67,68,69,70,71,85,86,89,90,91,92,203,204,304,305,311,312,316,317,],[-114,-115,-116,-117,-112,-113,196,196,196,196,196,196,196,196,-252,-250,-249,-251,-253,-254,]),'MENOS':([66,67,68,69,85,89,90,107,108,109,138,139,142,143,144,145,165,166,169,170,171,172,203,304,305,308,309,310,311,312,313,314,315,316,317,],[-114,-115,-116,-117,197,197,197,197,197,197,197,197,-115,-114,-116,-117,197,197,-115,-114,-116,-117,197,-252,-250,197,197,197,-249,-251,197,197,197,-253,-254,]),'MULTIPLICACION':([66,67,68,69,85,89,90,107,108,109,138,139,142,143,144,145,165,166,169,170,171,172,203,304,305,308,309,310,311,312,313,314,315,316,317,],[-114,-115,-116,-117,199,199,199,199,199,199,199,199,-115,-114,-116,-117,199,199,-115,-114,-116,-117,199,-252,-250,199,199,199,-249,-251,199,199,199,-253,-254,]),'DIVISION':([66,67,68,69,85,89,90,107,108,109,138,139,142,143,144,145,165,166,169,170,171,172,203,304,305,308,309,310,311,312,313,314,315,316,317,],[-114,-115,-116,-117,200,200,200,200,200,200,200,200,-115,-114,-116,-117,200,200,-115,-114,-116,-117,200,-252,-250,200,200,200,-249,-251,200,200,200,-253,-254,]),'MOD':([66,67,68,69,85,89,90,107,108,109,138,139,142,143,144,145,165,166,169,170,171,172,203,304,305,308,309,310,311,312,313,314,315,316,317,],[-114,-115,-116,-117,201,201,201,201,201,201,201,201,-115,-114,-116,-117,201,201,-115,-114,-116,-117,201,-252,-250,201,201,201,-249,-251,201,201,201,-253,-254,]),'AND':([66,67,68,69,70,71,84,85,86,87,203,204,205,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,],[-114,-115,-116,-117,-112,-113,188,-220,-221,-222,-223,-224,-225,-244,-236,-238,-240,-242,-252,-250,-233,-239,-229,-232,-237,-249,-251,-230,-231,-253,-254,-234,-241,-235,-243,]),'OR':([66,67,68,69,70,71,84,85,86,87,203,204,205,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,],[-114,-115,-116,-117,-112,-113,189,-220,-221,-222,-223,-224,-225,-244,-236,-238,-240,-242,-252,-250,-233,-239,-229,-232,-237,-249,-251,-230,-231,-253,-254,-234,-241,-235,-243,]),'FUNCION_FLECHA':([70,71,264,265,266,267,268,269,270,336,],[-112,-113,337,338,339,340,341,342,343,398,]),'ARRAYCLASS':([77,79,433,],[149,163,450,]),'LONGCLASS':([79,82,113,164,240,284,296,369,464,],[156,178,236,236,236,236,236,236,236,]),'INTCLASS':([79,82,113,164,240,284,296,369,464,],[157,179,235,235,235,235,235,235,235,]),'FLOATCLASS':([79,82,113,164,240,284,296,369,464,],[158,180,238,238,238,238,238,238,238,]),'DOUBLECLASS':([79,82,113,164,240,284,296,369,464,],[159,181,237,237,237,237,237,237,237,]),'STRINGCLASS':([79,82,113,164,240,284,296,369,464,],[160,182,233,233,233,233,233,233,233,]),'CHARCLASS':([79,82,113,164,240,284,296,369,464,],[161,183,232,232,232,232,232,232,232,]),'BOOLCLASS':([79,82,113,164,240,284,296,369,464,],[162,184,234,234,234,234,234,234,234,]),'LISTCLASS':([80,82,435,],[176,185,451,]),'ITERATOR':([94,212,],[213,322,]),'CORCHETE_I':([163,185,450,],[284,296,464,]),'CORCHETE_D':([232,233,234,235,236,237,238,366,385,472,],[-100,-101,-102,-103,-104,-105,-106,415,418,479,]),'SUBGUION':([245,248,251,254,257,260,263,],[336,336,336,336,336,336,336,]),'TO_INT':([272,275,],[345,345,]),'TO_DOUBLE':([272,275,],[346,346,]),'TO_FLOAT':([272,275,],[347,347,]),'TO_LONG':([272,275,],[348,348,]),'TO':([324,388,],[390,421,]),'UNTIL':([324,388,],[391,422,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,2,6,7,8,9,10,],[1,30,31,32,33,34,35,]),'funcion':([0,2,6,7,8,9,10,],[2,2,2,2,2,2,2,]),'funcall':([0,2,6,7,8,9,10,54,77,80,98,99,100,101,102,103,104,105,106,107,227,228,297,325,331,332,337,338,339,340,341,342,343,393,398,401,423,428,429,436,456,457,468,469,],[3,3,3,3,3,3,3,100,154,154,100,100,100,100,100,100,100,100,100,100,154,100,100,100,100,100,404,404,404,404,404,404,404,100,404,100,100,154,154,100,100,100,100,100,]),'impresion':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,228,297,325,331,332,337,338,339,340,341,342,343,393,398,401,423,436,456,457,468,469,],[4,4,4,4,4,4,4,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,405,405,405,405,405,405,405,101,405,101,101,101,101,101,101,101,]),'entrada':([0,2,6,7,8,9,10,54,77,80,98,99,100,101,102,103,104,105,106,107,227,228,297,325,331,332,337,338,339,340,341,342,343,393,398,401,423,428,429,436,456,457,468,469,],[5,5,5,5,5,5,5,102,153,153,102,102,102,102,102,102,102,102,102,102,153,102,102,102,102,102,406,406,406,406,406,406,406,102,406,102,102,153,153,102,102,102,102,102,]),'asignacion':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,228,297,325,331,332,337,338,339,340,341,342,343,393,398,401,423,436,456,457,468,469,],[6,6,6,6,6,6,6,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,402,402,402,402,402,402,402,98,402,98,98,98,98,98,98,98,]),'while':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,228,297,325,331,332,393,401,423,436,456,457,468,469,],[7,7,7,7,7,7,7,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'for':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,228,297,325,331,332,393,401,423,436,456,457,468,469,],[8,8,8,8,8,8,8,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'match':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,228,297,325,331,332,393,401,423,436,456,457,468,469,],[9,9,9,9,9,9,9,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'if':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,228,297,325,331,332,393,401,423,436,456,457,468,469,],[10,10,10,10,10,10,10,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'asignacionLong':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,228,297,325,331,332,337,338,339,340,341,342,343,393,398,401,423,436,456,457,468,469,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'asignacionInt':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,228,297,325,331,332,337,338,339,340,341,342,343,393,398,401,423,436,456,457,468,469,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'asignacionFloat':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,228,297,325,331,332,337,338,339,340,341,342,343,393,398,401,423,436,456,457,468,469,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'asignacionDouble':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,228,297,325,331,332,337,338,339,340,341,342,343,393,398,401,423,436,456,457,468,469,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'asignacionString':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,228,297,325,331,332,337,338,339,340,341,342,343,393,398,401,423,436,456,457,468,469,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'asignacionChar':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,228,297,325,331,332,337,338,339,340,341,342,343,393,398,401,423,436,456,457,468,469,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'asignacionBoolean':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,228,297,325,331,332,337,338,339,340,341,342,343,393,398,401,423,436,456,457,468,469,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'array':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,228,297,325,331,332,337,338,339,340,341,342,343,393,398,401,423,436,456,457,468,469,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'list':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,228,297,325,331,332,337,338,339,340,341,342,343,393,398,401,423,436,456,457,468,469,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'elseif':([10,36,50,106,],[36,50,50,36,]),'else':([10,36,50,106,],[37,51,51,37,]),'parametro':([39,],[55,]),'parametros':([39,239,],[56,334,]),'valores':([40,118,150,273,287,465,466,],[59,241,274,349,370,473,474,]),'valor':([40,42,43,118,136,150,227,273,287,397,428,465,466,],[61,74,74,61,74,61,328,61,61,430,444,61,61,]),'numeros':([40,42,43,47,49,54,77,80,88,96,98,99,100,101,102,103,104,105,106,107,118,136,150,187,191,192,206,207,208,209,227,228,273,287,297,325,331,332,393,397,401,423,428,436,456,457,465,466,468,469,],[64,64,64,89,89,109,109,109,89,89,109,109,109,109,109,109,109,109,109,109,64,64,64,89,300,305,308,311,314,316,64,109,64,64,109,109,109,109,109,64,109,109,64,109,109,109,64,64,109,109,]),'booleanos':([40,42,43,47,49,77,80,88,96,118,134,136,150,187,191,202,227,263,273,283,287,295,397,428,465,466,],[65,65,65,86,86,148,175,204,86,65,270,65,65,86,301,306,65,270,65,365,65,384,65,65,65,65,]),'valorI':([42,43,136,],[73,75,271,]),'dectipoTupla':([45,46,55,],[78,81,112,]),'condicional':([47,49,96,187,],[83,95,215,298,]),'valorC':([47,49,96,187,],[84,84,84,84,]),'relacional':([47,49,88,96,187,],[87,87,205,87,87,]),'aritmetica':([47,49,54,77,80,88,96,98,99,100,101,102,103,104,105,106,107,187,206,208,228,297,325,331,332,393,401,423,436,456,457,468,469,],[90,90,107,139,166,90,90,107,107,107,107,107,107,107,107,107,107,90,309,313,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'contenido':([54,98,99,100,101,102,103,104,105,106,107,228,297,325,331,332,393,401,423,436,456,457,468,469,],[97,217,218,219,220,221,222,223,224,225,226,330,386,392,395,396,427,432,439,452,470,471,475,476,]),'reasignacion':([54,98,99,100,101,102,103,104,105,106,107,228,297,325,331,332,337,338,339,340,341,342,343,393,398,401,423,436,456,457,468,469,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,403,403,403,403,403,403,403,99,403,99,99,99,99,99,99,99,]),'dectipo':([55,],[111,]),'declaracion':([57,333,],[115,115,]),'cases':([72,],[119,]),'casesInt':([72,127,],[120,243,]),'casesLgn':([72,128,],[121,246,]),'casesFlt':([72,129,],[122,249,]),'casesDob':([72,130,],[123,252,]),'casesStr':([72,131,],[124,255,]),'casesChar':([72,132,],[125,258,]),'casesBool':([72,133,],[126,261,]),'caseInt':([72,127,],[127,127,]),'caseLgn':([72,128,],[128,128,]),'caseFlt':([72,129,],[129,129,]),'caseDob':([72,130,],[130,130,]),'caseStr':([72,131,],[131,131,]),'caseChar':([72,132,],[132,132,]),'caseBool':([72,133,],[133,133,]),'returnfun':([77,80,227,428,429,],[140,167,329,445,448,]),'tuple':([77,80,155,177,429,],[141,168,276,288,447,]),'returnCastable':([77,80,227,428,429,],[151,151,151,151,151,]),'castingcall':([77,80,227,428,429,],[152,152,152,152,152,]),'logicos':([84,],[187,]),'comparacion':([85,86,89,90,91,92,203,204,],[191,202,206,208,210,211,191,202,]),'aritmeticos':([85,89,90,107,108,109,138,139,165,166,203,308,309,310,313,314,315,],[192,207,209,209,192,207,192,209,192,209,192,207,209,192,209,207,192,]),'tipo':([113,164,240,284,296,369,464,],[231,286,335,366,385,416,472,]),'defcase':([127,128,129,130,131,132,133,],[244,247,250,253,256,259,262,]),'tipos':([164,],[285,]),'castingfun':([272,275,],[344,351,]),'tiposentry':([286,416,],[368,434,]),'codeBlock':([337,338,339,340,341,342,343,398,],[399,408,409,410,411,412,413,431,]),'contenidoLine':([337,338,339,340,341,342,343,398,],[400,400,400,400,400,400,400,400,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> funcion','cuerpo',1,'p_cuerpo','sintax.py',10),
  ('cuerpo -> funcall','cuerpo',1,'p_cuerpo','sintax.py',11),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintax.py',12),
  ('cuerpo -> entrada','cuerpo',1,'p_cuerpo','sintax.py',13),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintax.py',14),
  ('cuerpo -> while','cuerpo',1,'p_cuerpo','sintax.py',15),
  ('cuerpo -> for','cuerpo',1,'p_cuerpo','sintax.py',16),
  ('cuerpo -> match','cuerpo',1,'p_cuerpo','sintax.py',17),
  ('cuerpo -> if','cuerpo',1,'p_cuerpo','sintax.py',18),
  ('cuerpo -> funcion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',19),
  ('cuerpo -> asignacion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',20),
  ('cuerpo -> while cuerpo','cuerpo',2,'p_cuerpo','sintax.py',21),
  ('cuerpo -> for cuerpo','cuerpo',2,'p_cuerpo','sintax.py',22),
  ('cuerpo -> if cuerpo','cuerpo',2,'p_cuerpo','sintax.py',23),
  ('cuerpo -> match cuerpo','cuerpo',2,'p_cuerpo','sintax.py',24),
  ('contenido -> asignacion','contenido',1,'p_contenido','sintax.py',28),
  ('contenido -> reasignacion','contenido',1,'p_contenido','sintax.py',29),
  ('contenido -> funcall','contenido',1,'p_contenido','sintax.py',30),
  ('contenido -> impresion','contenido',1,'p_contenido','sintax.py',31),
  ('contenido -> entrada','contenido',1,'p_contenido','sintax.py',32),
  ('contenido -> while','contenido',1,'p_contenido','sintax.py',33),
  ('contenido -> for','contenido',1,'p_contenido','sintax.py',34),
  ('contenido -> match','contenido',1,'p_contenido','sintax.py',35),
  ('contenido -> if','contenido',1,'p_contenido','sintax.py',36),
  ('contenido -> aritmetica','contenido',1,'p_contenido','sintax.py',37),
  ('contenido -> asignacion contenido','contenido',2,'p_contenido','sintax.py',38),
  ('contenido -> reasignacion contenido','contenido',2,'p_contenido','sintax.py',39),
  ('contenido -> funcall contenido','contenido',2,'p_contenido','sintax.py',40),
  ('contenido -> impresion contenido','contenido',2,'p_contenido','sintax.py',41),
  ('contenido -> entrada contenido','contenido',2,'p_contenido','sintax.py',42),
  ('contenido -> while contenido','contenido',2,'p_contenido','sintax.py',43),
  ('contenido -> for contenido','contenido',2,'p_contenido','sintax.py',44),
  ('contenido -> if contenido','contenido',2,'p_contenido','sintax.py',45),
  ('contenido -> match contenido','contenido',2,'p_contenido','sintax.py',46),
  ('contenido -> aritmetica contenido','contenido',2,'p_contenido','sintax.py',47),
  ('contenidoLine -> asignacion','contenidoLine',1,'p_contenidoLine','sintax.py',51),
  ('contenidoLine -> reasignacion','contenidoLine',1,'p_contenidoLine','sintax.py',52),
  ('contenidoLine -> funcall','contenidoLine',1,'p_contenidoLine','sintax.py',53),
  ('contenidoLine -> impresion','contenidoLine',1,'p_contenidoLine','sintax.py',54),
  ('contenidoLine -> entrada','contenidoLine',1,'p_contenidoLine','sintax.py',55),
  ('asignacion -> VAR VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',59),
  ('asignacion -> VAL VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',60),
  ('asignacion -> VAR VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',61),
  ('asignacion -> VAL VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',62),
  ('asignacion -> VAR VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',63),
  ('asignacion -> VAL VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',64),
  ('asignacion -> asignacionLong','asignacion',1,'p_asignacion','sintax.py',65),
  ('asignacion -> asignacionInt','asignacion',1,'p_asignacion','sintax.py',66),
  ('asignacion -> asignacionFloat','asignacion',1,'p_asignacion','sintax.py',67),
  ('asignacion -> asignacionDouble','asignacion',1,'p_asignacion','sintax.py',68),
  ('asignacion -> asignacionString','asignacion',1,'p_asignacion','sintax.py',69),
  ('asignacion -> asignacionChar','asignacion',1,'p_asignacion','sintax.py',70),
  ('asignacion -> asignacionBoolean','asignacion',1,'p_asignacion','sintax.py',71),
  ('asignacion -> array','asignacion',1,'p_asignacion','sintax.py',72),
  ('asignacion -> list','asignacion',1,'p_asignacion','sintax.py',73),
  ('asignacionLong -> VAR VARIABLE IGUAL LONG','asignacionLong',4,'p_asignacionLong','sintax.py',76),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG','asignacionLong',6,'p_asignacionLong','sintax.py',77),
  ('asignacionLong -> VAL VARIABLE IGUAL LONG','asignacionLong',4,'p_asignacionLong','sintax.py',78),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG','asignacionLong',6,'p_asignacionLong','sintax.py',79),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',80),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',81),
  ('asignacionInt -> VAR VARIABLE IGUAL INT','asignacionInt',4,'p_asignacionInt','sintax.py',84),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT','asignacionInt',6,'p_asignacionInt','sintax.py',85),
  ('asignacionInt -> VAL VARIABLE IGUAL INT','asignacionInt',4,'p_asignacionInt','sintax.py',86),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT','asignacionInt',6,'p_asignacionInt','sintax.py',87),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',88),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',89),
  ('asignacionFloat -> VAR VARIABLE IGUAL FLOAT','asignacionFloat',4,'p_asignacionFloat','sintax.py',92),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT','asignacionFloat',6,'p_asignacionFloat','sintax.py',93),
  ('asignacionFloat -> VAL VARIABLE IGUAL FLOAT','asignacionFloat',4,'p_asignacionFloat','sintax.py',94),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT','asignacionFloat',6,'p_asignacionFloat','sintax.py',95),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',96),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',97),
  ('asignacionDouble -> VAR VARIABLE IGUAL DOUBLE','asignacionDouble',4,'p_asignacionDouble','sintax.py',100),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',101),
  ('asignacionDouble -> VAL VARIABLE IGUAL DOUBLE','asignacionDouble',4,'p_asignacionDouble','sintax.py',102),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',103),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',104),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',105),
  ('asignacionString -> VAR VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',108),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',109),
  ('asignacionString -> VAL VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',110),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',111),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',112),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',113),
  ('asignacionChar -> VAR VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',116),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',117),
  ('asignacionChar -> VAL VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',118),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',119),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',120),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',121),
  ('asignacionBoolean -> VAR VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',124),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',125),
  ('asignacionBoolean -> VAL VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',126),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',127),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',128),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',129),
  ('reasignacion -> VARIABLE IGUAL valor','reasignacion',3,'p_reasignacion','sintax.py',133),
  ('reasignacion -> VARIABLE IGUAL returnfun','reasignacion',3,'p_reasignacion','sintax.py',134),
  ('tipo -> CHARCLASS','tipo',1,'p_tipo','sintax.py',138),
  ('tipo -> STRINGCLASS','tipo',1,'p_tipo','sintax.py',139),
  ('tipo -> BOOLCLASS','tipo',1,'p_tipo','sintax.py',140),
  ('tipo -> INTCLASS','tipo',1,'p_tipo','sintax.py',141),
  ('tipo -> LONGCLASS','tipo',1,'p_tipo','sintax.py',142),
  ('tipo -> DOUBLECLASS','tipo',1,'p_tipo','sintax.py',143),
  ('tipo -> FLOATCLASS','tipo',1,'p_tipo','sintax.py',144),
  ('valor -> STRING','valor',1,'p_valor','sintax.py',147),
  ('valor -> CHAR','valor',1,'p_valor','sintax.py',148),
  ('valor -> VARIABLE','valor',1,'p_valor','sintax.py',149),
  ('valor -> numeros','valor',1,'p_valor','sintax.py',150),
  ('valor -> booleanos','valor',1,'p_valor','sintax.py',151),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintax.py',154),
  ('booleanos -> FLASE','booleanos',1,'p_booleanos','sintax.py',155),
  ('numeros -> INT','numeros',1,'p_numeros','sintax.py',158),
  ('numeros -> LONG','numeros',1,'p_numeros','sintax.py',159),
  ('numeros -> FLOAT','numeros',1,'p_numeros','sintax.py',160),
  ('numeros -> DOUBLE','numeros',1,'p_numeros','sintax.py',161),
  ('funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D','funcion',7,'p_funcion','sintax.py',166),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo','declaracion',3,'p_declaracion','sintax.py',171),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor','declaracion',5,'p_declaracion_defecto','sintax.py',174),
  ('parametro -> parametros','parametro',1,'p_parametro','sintax.py',177),
  ('parametro -> PAR_I PAR_D','parametro',2,'p_parametro','sintax.py',178),
  ('parametros -> PAR_I declaracion PAR_D','parametros',3,'p_parametros','sintax.py',181),
  ('parametros -> PAR_I declaracion PAR_D parametros','parametros',4,'p_parametros','sintax.py',182),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D','funcion',10,'p_funcion_return','sintax.py',187),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_return','sintax.py',188),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_return','sintax.py',189),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',192),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',193),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',194),
  ('dectipo -> DOBLE_PUNTO tipo','dectipo',2,'p_dectipo','sintax.py',197),
  ('dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D','dectipoTupla',4,'p_dectipoTupla','sintax.py',200),
  ('tipos -> tipo','tipos',1,'p_tipos','sintax.py',203),
  ('tipos -> tipo tiposentry','tipos',2,'p_tipos','sintax.py',204),
  ('tiposentry -> COMA tipo','tiposentry',2,'p_tipoentry','sintax.py',207),
  ('tiposentry -> COMA tipo tiposentry','tiposentry',3,'p_tipoentry','sintax.py',208),
  ('impresion -> PRINTLN PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',213),
  ('impresion -> PRINT PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',214),
  ('valorI -> valor MAS valorI','valorI',3,'p_valorI','sintax.py',217),
  ('valorI -> valor','valorI',1,'p_valorI','sintax.py',218),
  ('entrada -> READLINE PAR_I PAR_D','entrada',3,'p_entrada','sintax.py',223),
  ('funcall -> VARIABLE PAR_I valores PAR_D','funcall',4,'p_funcall','sintax.py',227),
  ('funcall -> VARIABLE PAR_I PAR_D','funcall',3,'p_funcall','sintax.py',228),
  ('returnfun -> returnCastable','returnfun',1,'p_returnfun','sintax.py',231),
  ('returnfun -> castingcall','returnfun',1,'p_returnfun','sintax.py',232),
  ('returnCastable -> entrada','returnCastable',1,'p_returnCastable','sintax.py',235),
  ('returnCastable -> funcall','returnCastable',1,'p_returnCastable','sintax.py',236),
  ('castingcall -> returnCastable PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',241),
  ('castingcall -> VARIABLE PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',242),
  ('castingfun -> TO_INT','castingfun',1,'p_castingfun','sintax.py',246),
  ('castingfun -> TO_DOUBLE','castingfun',1,'p_castingfun','sintax.py',247),
  ('castingfun -> TO_FLOAT','castingfun',1,'p_castingfun','sintax.py',248),
  ('castingfun -> TO_LONG','castingfun',1,'p_castingfun','sintax.py',249),
  ('array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',254),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D','array',12,'p_array','sintax.py',255),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',15,'p_array','sintax.py',256),
  ('list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D','list',7,'p_list','sintax.py',260),
  ('list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D','list',12,'p_list','sintax.py',261),
  ('valores -> valor','valores',1,'p_valores','sintax.py',265),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintax.py',266),
  ('tuple -> PAR_I valores PAR_D','tuple',3,'p_tuple','sintax.py',270),
  ('asignacion -> VAR VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',273),
  ('asignacion -> VAL VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',274),
  ('asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple','asignacion',5,'p_asignacion_tupleDec','sintax.py',277),
  ('asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple','asignacion',5,'p_asignacion_tupleDec','sintax.py',278),
  ('while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','while',7,'p_while','sintax.py',284),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',10,'p_for','sintax.py',288),
  ('for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',9,'p_for','sintax.py',289),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',290),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',291),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',292),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',293),
  ('match -> VARIABLE MATCH LLAVE_I cases LLAVE_D','match',5,'p_match','sintax.py',297),
  ('cases -> casesInt','cases',1,'p_cases','sintax.py',300),
  ('cases -> casesLgn','cases',1,'p_cases','sintax.py',301),
  ('cases -> casesFlt','cases',1,'p_cases','sintax.py',302),
  ('cases -> casesDob','cases',1,'p_cases','sintax.py',303),
  ('cases -> casesStr','cases',1,'p_cases','sintax.py',304),
  ('cases -> casesChar','cases',1,'p_cases','sintax.py',305),
  ('cases -> casesBool','cases',1,'p_cases','sintax.py',306),
  ('caseInt -> CASE INT FUNCION_FLECHA codeBlock','caseInt',4,'p_caseInt','sintax.py',309),
  ('casesInt -> caseInt','casesInt',1,'p_casesInt','sintax.py',312),
  ('casesInt -> caseInt casesInt','casesInt',2,'p_casesInt','sintax.py',313),
  ('casesInt -> caseInt defcase','casesInt',2,'p_casesInt','sintax.py',314),
  ('caseLgn -> CASE LONG FUNCION_FLECHA codeBlock','caseLgn',4,'p_caseLgn','sintax.py',317),
  ('casesLgn -> caseLgn','casesLgn',1,'p_casesLgn','sintax.py',320),
  ('casesLgn -> caseLgn casesLgn','casesLgn',2,'p_casesLgn','sintax.py',321),
  ('casesLgn -> caseLgn defcase','casesLgn',2,'p_casesLgn','sintax.py',322),
  ('caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock','caseFlt',4,'p_caseFlt','sintax.py',325),
  ('casesFlt -> caseFlt','casesFlt',1,'p_casesFlt','sintax.py',328),
  ('casesFlt -> caseFlt casesFlt','casesFlt',2,'p_casesFlt','sintax.py',329),
  ('casesFlt -> caseFlt defcase','casesFlt',2,'p_casesFlt','sintax.py',330),
  ('caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock','caseDob',4,'p_caseDob','sintax.py',333),
  ('casesDob -> caseDob','casesDob',1,'p_casesDob','sintax.py',336),
  ('casesDob -> caseDob casesDob','casesDob',2,'p_casesDob','sintax.py',337),
  ('casesDob -> caseDob defcase','casesDob',2,'p_casesDob','sintax.py',338),
  ('caseStr -> CASE STRING FUNCION_FLECHA codeBlock','caseStr',4,'p_caseStr','sintax.py',341),
  ('casesStr -> caseStr','casesStr',1,'p_casesStr','sintax.py',344),
  ('casesStr -> caseStr casesStr','casesStr',2,'p_casesStr','sintax.py',345),
  ('casesStr -> caseStr defcase','casesStr',2,'p_casesStr','sintax.py',346),
  ('caseChar -> CASE CHAR FUNCION_FLECHA codeBlock','caseChar',4,'p_caseChar','sintax.py',349),
  ('casesChar -> caseChar','casesChar',1,'p_casesChar','sintax.py',352),
  ('casesChar -> caseChar casesChar','casesChar',2,'p_casesChar','sintax.py',353),
  ('casesChar -> caseChar defcase','casesChar',2,'p_casesChar','sintax.py',354),
  ('caseBool -> CASE booleanos FUNCION_FLECHA codeBlock','caseBool',4,'p_caseBool','sintax.py',357),
  ('casesBool -> caseBool','casesBool',1,'p_casesBool','sintax.py',360),
  ('casesBool -> caseBool casesBool','casesBool',2,'p_casesBool','sintax.py',361),
  ('casesBool -> caseBool defcase','casesBool',2,'p_casesBool','sintax.py',362),
  ('defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock','defcase',4,'p_defcase','sintax.py',366),
  ('codeBlock -> contenidoLine','codeBlock',1,'p_codeBlock','sintax.py',369),
  ('codeBlock -> LLAVE_I contenido LLAVE_D','codeBlock',3,'p_codeBlock','sintax.py',370),
  ('if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','if',7,'p_if','sintax.py',374),
  ('if -> if elseif','if',2,'p_if','sintax.py',375),
  ('if -> if else','if',2,'p_if','sintax.py',376),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','elseif',8,'p_elseif','sintax.py',380),
  ('else -> ELSE LLAVE_I contenido LLAVE_D','else',4,'p_else','sintax.py',383),
  ('else -> elseif else','else',2,'p_else','sintax.py',384),
  ('condicional -> valorC logicos condicional','condicional',3,'p_condicional','sintax.py',388),
  ('condicional -> valorC','condicional',1,'p_condicional','sintax.py',389),
  ('valorC -> VARIABLE','valorC',1,'p_valorC','sintax.py',392),
  ('valorC -> booleanos','valorC',1,'p_valorC','sintax.py',393),
  ('valorC -> relacional','valorC',1,'p_valorC','sintax.py',394),
  ('valorC -> NOT VARIABLE','valorC',2,'p_valorC','sintax.py',395),
  ('valorC -> NOT booleanos','valorC',2,'p_valorC','sintax.py',396),
  ('valorC -> NOT relacional','valorC',2,'p_valorC','sintax.py',397),
  ('logicos -> AND','logicos',1,'p_logicos','sintax.py',400),
  ('logicos -> OR','logicos',1,'p_logicos','sintax.py',401),
  ('logicos -> NOT','logicos',1,'p_logicos','sintax.py',402),
  ('relacional -> numeros comparacion numeros','relacional',3,'p_relacional','sintax.py',407),
  ('relacional -> aritmetica comparacion aritmetica','relacional',3,'p_relacional','sintax.py',408),
  ('relacional -> aritmetica comparacion numeros','relacional',3,'p_relacional','sintax.py',409),
  ('relacional -> numeros comparacion aritmetica','relacional',3,'p_relacional','sintax.py',410),
  ('relacional -> booleanos comparacion booleanos','relacional',3,'p_relacional','sintax.py',411),
  ('relacional -> STRING comparacion STRING','relacional',3,'p_relacional','sintax.py',412),
  ('relacional -> CHAR comparacion CHAR','relacional',3,'p_relacional','sintax.py',413),
  ('relacional -> VARIABLE comparacion numeros','relacional',3,'p_relacional','sintax.py',414),
  ('relacional -> numeros comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',415),
  ('relacional -> VARIABLE comparacion booleanos','relacional',3,'p_relacional','sintax.py',416),
  ('relacional -> booleanos comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',417),
  ('relacional -> VARIABLE comparacion STRING','relacional',3,'p_relacional','sintax.py',418),
  ('relacional -> STRING comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',419),
  ('relacional -> VARIABLE comparacion CHAR','relacional',3,'p_relacional','sintax.py',420),
  ('relacional -> CHAR comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',421),
  ('relacional -> VARIABLE comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',422),
  ('comparacion -> IGUAL_COMPARACION','comparacion',1,'p_comparacion','sintax.py',425),
  ('comparacion -> DIFERENTE','comparacion',1,'p_comparacion','sintax.py',426),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion','sintax.py',427),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion','sintax.py',428),
  ('aritmetica -> numeros aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',432),
  ('aritmetica -> VARIABLE aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',433),
  ('aritmetica -> numeros aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',434),
  ('aritmetica -> VARIABLE aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',435),
  ('aritmetica -> aritmetica aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',436),
  ('aritmetica -> aritmetica aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',437),
  ('aritmeticos -> MENOS','aritmeticos',1,'p_aritmeticos','sintax.py',440),
  ('aritmeticos -> MAS','aritmeticos',1,'p_aritmeticos','sintax.py',441),
  ('aritmeticos -> MULTIPLICACION','aritmeticos',1,'p_aritmeticos','sintax.py',442),
  ('aritmeticos -> DIVISION','aritmeticos',1,'p_aritmeticos','sintax.py',443),
  ('aritmeticos -> MOD','aritmeticos',1,'p_aritmeticos','sintax.py',444),
]

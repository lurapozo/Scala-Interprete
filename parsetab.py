
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARRAYCLASS ARROBA BACKTICK BOOLCLASS CASE CATCH CHAR CHARCLASS CLASS COMA CORCHETE_D CORCHETE_I DEF DIFERENTE DIVISION DO DOBLE_PUNTO DOUBLE DOUBLECLASS ELSE EXTENDS FINAL FINALLY FLASE FLOAT FLOATCLASS FOR FOR_SOME FUNCION_FLECHA HASHTAG IF IGUAL IGUAL_COMPARACION IMPLICIT IMPORT INT INTCLASS ITERATOR LAZY LIBRERIA_IO LISTCLASS LLAVE_D LLAVE_I LONG LONGCLASS MACRO MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MOD MULTIPLICACION NEW NOT NULL OBJECT OR OVERRIDE PACKAGE PAR_D PAR_I PRINT PRINTLN PRIVATE PROTECTED PUNTO READLINE RETURN REVERSE SEALED STARTSWITH STRING STRINGCLASS SUBGUION SUPER THIS THROW TO TO_DOUBLE TO_FLOAT TO_INT TO_LONG TRAIT TRUE TRY TYPE UNTIL VAL VAR VARIABLE WHILE WITH YIELD inicio : OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D\n  | IMPORT io inicio\n  | cuerpo\n   io : VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINEcuerpo : funcion\n  | funcall\n  | impresion\n  | entrada\n  | asignacion\n  | while\n  | for\n  | match\n  | if\n  | startsWith\n  | funcion cuerpo\n  | asignacion cuerpo\n  | while cuerpo\n  | for cuerpo\n  | if cuerpo\n  | match cuerpo\n  | startsWith cuerpocontenido : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entrada\n  | while\n  | for\n  | match\n  | if\n  | aritmetica\n  | startsWith\n  | asignacion contenido\n  | reasignacion contenido\n  | funcall contenido\n  | impresion contenido\n  | entrada contenido\n  | while contenido\n  | for contenido\n  | if contenido\n  | match contenido\n  | aritmetica contenido\n  | startsWith contenidocontenidoLine : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entradaasignacion : VAR VARIABLE IGUAL VARIABLE\n  | VAL VARIABLE IGUAL VARIABLE\n  | VAR VARIABLE IGUAL aritmetica\n  | VAL VARIABLE IGUAL aritmetica\n  | VAR VARIABLE IGUAL returnfun\n  | VAL VARIABLE IGUAL returnfun\n  | asignacionLong\n  | asignacionInt\n  | asignacionFloat\n  | asignacionDouble\n  | asignacionString\n  | asignacionChar\n  | asignacionBoolean\n  | array\n  | listasignacionLong :  VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLEasignacionInt : VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE\n  | asignacionSumIntasignacionFloat : VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLEasignacionDouble : VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE\n  | asignacionSumDoubleasignacionString : VAR VARIABLE IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAL VARIABLE IGUAL STRING\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE\n  | asignacionSumStringasignacionChar : VAR VARIABLE IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAL VARIABLE IGUAL CHAR\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLEasignacionBoolean : VAR VARIABLE IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAL VARIABLE IGUAL booleanos\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLEreasignacion :  VARIABLE IGUAL valor\n      | VARIABLE IGUAL returnfun\n      | VARIABLE IGUAL aritmetica\n      | VARIABLE PAR_I INT PAR_D IGUAL valortipo : CHARCLASS\n  | STRINGCLASS\n  | BOOLCLASS\n  | INTCLASS\n  | LONGCLASS\n  | DOUBLECLASS\n  | FLOATCLASS\n  | ARRAYCLASS CORCHETE_I tipo CORCHETE_D\n  | LISTCLASS CORCHETE_I tipo CORCHETE_Dvalor : STRING\n  | CHAR\n  | VARIABLE\n  | numeros\n  | booleanos\n  | VARIABLE PAR_I VARIABLE PAR_D\n  | VARIABLE PAR_I INT PAR_Dbooleanos : TRUE\n  | FLASE\n  | startsWithnumeros : INT\n  | LONG\n  | FLOAT\n  | DOUBLEfuncion : DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D\n  | DEF VARIABLE parametro LLAVE_I contenido LLAVE_Ddeclaracion : VARIABLE DOBLE_PUNTO tipodeclaracion :  VARIABLE DOBLE_PUNTO tipo IGUAL valor parametro : parametros\n  | PAR_I PAR_D parametros : PAR_I declaracion PAR_D \n    | PAR_I declaracion PAR_D parametrosfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D\n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D \n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_Ddectipo : DOBLE_PUNTO tipo dectipoTupla : DOBLE_PUNTO PAR_I tipos PAR_Dtipos : tipo\n    | tipo tiposentrytiposentry : COMA tipo \n  | COMA tipo tiposentryimpresion : PRINTLN PAR_I valorI PAR_D\n  | PRINT PAR_I valorI PAR_DvalorI : valor MAS valorI\n  | valorentrada : READLINE PAR_I PAR_Dfuncall : VARIABLE varparen varparen : PAR_I valores PAR_D\n  | PAR_I PAR_D\n  | varparen PAR_I valores PAR_D\n  | varparen PAR_I PAR_D returnfun : returnCastable\n      | castingcallreturnCastable : entrada\n      | funcallcastingcall : returnCastable PUNTO castingfun\n      | VARIABLE PUNTO castingfuncastingfun : TO_INT\n    | TO_DOUBLE\n    | TO_FLOAT\n    | TO_LONGarray : VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | arrayInt\n  | arrayDoublelist : VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D\n  | VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D\n  | listChar\n  | listStringvalores : valor\n  | valor COMA valorestuple : PAR_I valores PAR_Dasignacion : VAR VARIABLE IGUAL tuple \n      | VAL VARIABLE IGUAL tuplewhile : WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_Dfor : FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_Dmatch : VARIABLE MATCH  LLAVE_I cases LLAVE_Dcases : casesInt\n    | casesLgn\n    | casesFlt\n    | casesDob\n    | casesStr\n    | casesChar\n    | casesBoolcaseInt : CASE INT FUNCION_FLECHA codeBlock casesInt : caseInt \n      | caseInt casesInt\n      | caseInt defcasecaseLgn : CASE LONG FUNCION_FLECHA codeBlock casesLgn : caseLgn \n      | caseLgn casesLgn\n      | caseLgn defcasecaseFlt : CASE FLOAT FUNCION_FLECHA codeBlock casesFlt : caseFlt \n      | caseFlt casesFlt\n      | caseFlt defcasecaseDob : CASE DOUBLE FUNCION_FLECHA codeBlock casesDob : caseDob \n      | caseDob casesDob\n      | caseDob defcasecaseStr : CASE STRING FUNCION_FLECHA codeBlock casesStr : caseStr\n      | caseStr casesStr\n      | caseStr defcasecaseChar : CASE CHAR FUNCION_FLECHA codeBlock casesChar : caseChar\n      | caseChar casesChar\n      | caseChar defcasecaseBool : CASE booleanos FUNCION_FLECHA codeBlock casesBool : caseBool\n      | caseBool casesBool\n      | caseBool defcasedefcase : CASE SUBGUION FUNCION_FLECHA codeBlock codeBlock : contenidoLine\n      | LLAVE_I contenido LLAVE_Dif : IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | if elseif\n  | if else\n  elseif : ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseifelse : ELSE LLAVE_I contenido LLAVE_D\n  | elseif elsecondicional : valorC logicos condicional\n  | valorCvalorC : VARIABLE\n  | booleanos\n  | relacional\n  | NOT VARIABLE\n  | NOT booleanos\n  | NOT relacional\n  logicos : AND\n  | OR\n  | NOTrelacional : numeros comparacion numeros\n  | aritmetica comparacion aritmetica\n  | aritmetica comparacion numeros\n  | numeros comparacion aritmetica\n  | booleanos comparacion booleanos\n  | STRING comparacion STRING\n  | CHAR comparacion CHAR\n  | VARIABLE comparacion numeros\n  | numeros comparacion VARIABLE\n  | VARIABLE comparacion booleanos\n  | booleanos comparacion VARIABLE\n  | VARIABLE comparacion STRING\n  | STRING comparacion VARIABLE\n  | VARIABLE comparacion CHAR\n  | CHAR comparacion VARIABLE\n  | VARIABLE comparacion VARIABLEcomparacion : IGUAL_COMPARACION\n  | DIFERENTE\n  | MAYOR\n  | MENORaritmetica : numeros aritmeticos numeros\n  | VARIABLE aritmeticos numeros\n  | numeros aritmeticos VARIABLE\n  | VARIABLE aritmeticos VARIABLE\n  | aritmetica aritmeticos numeros\n  | aritmetica aritmeticos VARIABLE\n  | sumaaritmeticos : MENOS\n  | MULTIPLICACION\n  | DIVISION\n  | MODarrayInt : VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_DarrayDouble : VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_DvaloresInt : INT\n  | valoresInt COMA INTvaloresDouble : DOUBLE\n  | valoresDouble COMA DOUBLEstartsWith : STRING PUNTO STARTSWITH PAR_I STRING PAR_D\n  | STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_DlistString : VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D\n  | VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_DlistChar : VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D\n  | VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_DvaloresString : STRING\n  | valoresString COMA STRINGvaloresChar : CHAR\n  | valoresChar COMA CHARsuma : sumIntChar\n  | sumStringChar\n  | sumIntDouble\n  | sumDoubleCharsumIntDouble : INT MAS DOUBLE\n  | DOUBLE MAS INTsumDoubleChar : DOUBLE MAS CHAR\n  | CHAR MAS DOUBLEsumIntChar : INT MAS CHAR\n  | CHAR MAS INTsumStringChar : STRING MAS CHAR\n  | CHAR MAS STRINGasignacionSumDouble : VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleCharasignacionSumString : VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringCharasignacionSumInt : VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntCharasignacion : VAR VARIABLE DOBLE_PUNTO  dectupla\n      | VAL VARIABLE DOBLE_PUNTO dectupla dectupla : PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D\n  | PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D\n  | PAR_I STRINGCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D\n  | PAR_I STRINGCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D dectupla : PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D\n  | PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D\n  | PAR_I FLOATCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D\n  | PAR_I FLOATCLASS COMA  INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D dectupla : PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D\n  | PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D\n  | PAR_I DOUBLECLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D\n  | PAR_I DOUBLECLASS COMA  INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D dectupla : PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D\n  | PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D\n  | PAR_I LONGCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D\n  | PAR_I LONGCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT  PAR_D dectupla : PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D\n  | PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D\n  | PAR_I INTCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D\n  | PAR_I INTCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D asignacionInt : VAR VARIABLE IGUAL intvalues\n    | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues\n    | VAL VARIABLE IGUAL intvalues\n    | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvaluesintvalues : INT\n  | stringCastIntasignacionLong : VAR VARIABLE IGUAL longvalues\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues\n  | VAL VARIABLE IGUAL longvalues\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalueslongvalues : LONG\n  | intvalues\n  | stringCastLongasignacionFloat : VAR VARIABLE IGUAL floatvalues\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues\n  | VAL VARIABLE IGUAL floatvalues\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvaluesfloatvalues : FLOAT\n  | longvalues\n  | stringCastFloatasignacionDouble : VAR VARIABLE IGUAL doublevalues\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues\n  | VAL VARIABLE IGUAL doublevalues\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevaluesdoublevalues : DOUBLE\n  | floatvalues\n  | stringCastDoublestringCastInt : STRING PUNTO TO_INTstringCastLong : STRING PUNTO TO_LONGstringCastFloat : STRING PUNTO TO_FLOATstringCastDouble : STRING PUNTO TO_DOUBLE'
    
_lr_action_items = {'OBJECT':([0,46,610,],[2,2,-4,]),'IMPORT':([0,46,610,],[5,5,-4,]),'DEF':([0,6,10,11,12,13,14,15,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,46,54,55,68,72,79,80,81,82,83,84,85,89,99,116,117,118,119,120,127,144,176,177,178,179,180,181,182,183,184,185,186,190,191,192,193,194,195,196,197,198,199,200,201,202,213,214,215,216,217,218,219,220,221,222,223,226,270,271,305,375,376,383,384,388,389,392,395,396,397,398,399,400,401,429,439,440,441,442,443,444,445,446,447,449,451,452,453,454,455,456,458,459,460,461,464,465,466,467,469,470,471,472,473,474,475,478,479,480,482,483,484,485,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,526,548,558,559,594,595,599,606,610,659,661,667,668,669,670,706,710,711,712,713,714,715,716,717,746,785,786,788,790,812,814,817,818,819,820,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,],[16,16,16,16,16,16,16,16,-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,16,-227,-228,16,-152,-116,-117,-118,-119,-113,-114,-115,-232,-149,-270,-291,-292,-293,-294,-154,-151,-49,-51,-53,-178,-339,-333,-346,-353,-74,-81,-87,-155,-156,-343,-345,-337,-338,-350,-352,-357,-359,-157,-158,-311,-50,-52,-54,-179,-341,-335,-348,-355,-76,-83,-89,-312,-153,-187,-231,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,-121,-160,-161,-162,-163,-164,-361,-360,-362,-363,-177,-159,-64,-340,-343,-344,-337,-66,-334,-309,-337,-69,-347,-350,-351,-71,-354,-303,-305,-357,-358,-337,-78,-75,-307,-85,-82,-91,-88,-65,-342,-67,-336,-310,-70,-349,-72,-356,-304,-306,-79,-77,-308,-86,-84,-92,-90,-281,-120,-165,-172,-167,-171,-180,-226,-4,-282,-229,-133,-132,-134,-135,-182,-230,-129,-128,-130,-131,-137,-136,-138,-181,-183,-184,-275,-276,-286,-284,-285,-283,-185,-186,-313,-314,-315,-316,-329,-330,-331,-332,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-166,-168,]),'VARIABLE':([0,2,5,6,10,11,12,13,14,15,16,20,21,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,45,46,54,55,59,60,64,65,66,68,69,72,74,75,76,77,78,79,80,81,82,83,84,85,87,89,92,95,99,100,102,109,114,115,116,117,118,119,120,121,127,144,145,146,148,150,151,152,153,154,155,156,157,158,159,160,166,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,191,192,193,194,195,196,197,198,199,200,201,202,213,214,215,216,217,218,219,220,221,222,223,226,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,255,256,257,258,259,261,266,270,271,303,305,317,318,319,339,341,343,344,345,346,347,348,349,357,358,359,360,361,362,363,364,365,368,375,376,383,384,388,389,392,395,396,397,398,399,400,401,402,405,409,410,411,412,413,414,415,416,417,420,421,422,423,424,425,426,429,430,431,436,439,440,441,442,443,444,445,446,447,449,451,452,453,454,455,456,458,459,460,461,464,465,466,467,469,470,471,472,473,474,475,478,479,480,482,483,484,485,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,526,528,531,545,546,548,550,557,558,559,594,595,599,603,606,610,614,615,620,653,659,661,662,667,668,669,670,706,707,708,710,711,712,713,714,715,716,717,746,747,748,785,786,788,790,812,814,817,818,819,820,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,],[3,42,47,3,3,3,3,3,3,3,58,62,63,-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,76,3,-227,-228,76,76,106,122,106,3,76,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,147,-232,161,172,-149,176,213,252,-116,-119,-270,-291,-292,-293,-294,265,-154,-151,76,301,106,161,161,161,161,161,161,161,161,161,161,161,161,-145,76,-146,-49,-51,-53,-178,-339,-333,-346,-353,-74,-81,-87,76,-155,-156,-343,-345,-337,-338,-350,-352,-357,-359,-157,-158,-311,-50,-52,-54,-179,-341,-335,-348,-355,-76,-83,-89,-312,106,-241,-242,-243,370,375,-260,-261,-262,-263,-271,-272,-273,-274,378,381,384,387,389,391,394,403,-153,-187,418,-231,420,76,161,76,76,452,458,464,469,478,482,484,76,76,498,500,503,505,509,512,514,161,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,520,161,537,537,537,537,537,537,537,-111,-112,-108,-93,-94,-95,-106,-107,-109,-121,161,161,172,-160,-161,-162,-163,-164,-361,-360,-362,-363,-177,-159,-64,-340,-343,-344,-337,-66,-334,-309,-337,-69,-347,-350,-351,-71,-354,-303,-305,-357,-358,-337,-78,-75,-307,-85,-82,-91,-88,-65,-342,-67,-336,-310,-70,-349,-72,-356,-304,-306,-79,-77,-308,-86,-84,-92,-90,-281,537,161,161,612,-120,616,76,-165,-172,-167,-171,-180,161,-226,-4,76,663,671,161,-282,-229,-96,-133,-132,-134,-135,-182,161,161,-230,-129,-128,-130,-131,-137,-136,-138,-181,161,161,-183,-184,-275,-276,-286,-284,-285,-283,-185,-186,-313,-314,-315,-316,-329,-330,-331,-332,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-166,-168,]),'PRINTLN':([0,6,10,11,12,13,14,15,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,46,54,55,68,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,114,115,116,117,118,119,120,127,144,150,151,152,153,154,155,156,157,158,159,160,166,173,175,176,177,178,179,180,181,182,183,184,185,186,190,191,192,193,194,195,196,197,198,199,200,201,202,213,214,215,216,217,218,219,220,221,222,223,226,270,271,305,319,368,375,376,383,384,388,389,392,395,396,397,398,399,400,401,405,409,410,411,412,413,414,415,416,417,420,421,422,423,424,425,426,429,430,431,439,440,441,442,443,444,445,446,447,449,451,452,453,454,455,456,458,459,460,461,464,465,466,467,469,470,471,472,473,474,475,478,479,480,482,483,484,485,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,526,528,531,545,548,558,559,594,595,599,603,606,610,653,659,661,662,667,668,669,670,706,707,708,710,711,712,713,714,715,716,717,746,747,748,785,786,788,790,812,814,817,818,819,820,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,],[17,17,17,17,17,17,17,17,-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,17,-227,-228,17,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,17,-149,-116,-119,-270,-291,-292,-293,-294,-154,-151,17,17,17,17,17,17,17,17,17,17,17,17,-145,-146,-49,-51,-53,-178,-339,-333,-346,-353,-74,-81,-87,-155,-156,-343,-345,-337,-338,-350,-352,-357,-359,-157,-158,-311,-50,-52,-54,-179,-341,-335,-348,-355,-76,-83,-89,-312,-153,-187,-231,17,17,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,17,17,17,17,17,17,17,17,-111,-112,-108,-93,-94,-95,-106,-107,-109,-121,17,17,-160,-161,-162,-163,-164,-361,-360,-362,-363,-177,-159,-64,-340,-343,-344,-337,-66,-334,-309,-337,-69,-347,-350,-351,-71,-354,-303,-305,-357,-358,-337,-78,-75,-307,-85,-82,-91,-88,-65,-342,-67,-336,-310,-70,-349,-72,-356,-304,-306,-79,-77,-308,-86,-84,-92,-90,-281,17,17,17,-120,-165,-172,-167,-171,-180,17,-226,-4,17,-282,-229,-96,-133,-132,-134,-135,-182,17,17,-230,-129,-128,-130,-131,-137,-136,-138,-181,17,17,-183,-184,-275,-276,-286,-284,-285,-283,-185,-186,-313,-314,-315,-316,-329,-330,-331,-332,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-166,-168,]),'PRINT':([0,6,10,11,12,13,14,15,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,46,54,55,68,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,114,115,116,117,118,119,120,127,144,150,151,152,153,154,155,156,157,158,159,160,166,173,175,176,177,178,179,180,181,182,183,184,185,186,190,191,192,193,194,195,196,197,198,199,200,201,202,213,214,215,216,217,218,219,220,221,222,223,226,270,271,305,319,368,375,376,383,384,388,389,392,395,396,397,398,399,400,401,405,409,410,411,412,413,414,415,416,417,420,421,422,423,424,425,426,429,430,431,439,440,441,442,443,444,445,446,447,449,451,452,453,454,455,456,458,459,460,461,464,465,466,467,469,470,471,472,473,474,475,478,479,480,482,483,484,485,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,526,528,531,545,548,558,559,594,595,599,603,606,610,653,659,661,662,667,668,669,670,706,707,708,710,711,712,713,714,715,716,717,746,747,748,785,786,788,790,812,814,817,818,819,820,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,],[18,18,18,18,18,18,18,18,-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,18,-227,-228,18,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,18,-149,-116,-119,-270,-291,-292,-293,-294,-154,-151,18,18,18,18,18,18,18,18,18,18,18,18,-145,-146,-49,-51,-53,-178,-339,-333,-346,-353,-74,-81,-87,-155,-156,-343,-345,-337,-338,-350,-352,-357,-359,-157,-158,-311,-50,-52,-54,-179,-341,-335,-348,-355,-76,-83,-89,-312,-153,-187,-231,18,18,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,18,18,18,18,18,18,18,18,-111,-112,-108,-93,-94,-95,-106,-107,-109,-121,18,18,-160,-161,-162,-163,-164,-361,-360,-362,-363,-177,-159,-64,-340,-343,-344,-337,-66,-334,-309,-337,-69,-347,-350,-351,-71,-354,-303,-305,-357,-358,-337,-78,-75,-307,-85,-82,-91,-88,-65,-342,-67,-336,-310,-70,-349,-72,-356,-304,-306,-79,-77,-308,-86,-84,-92,-90,-281,18,18,18,-120,-165,-172,-167,-171,-180,18,-226,-4,18,-282,-229,-96,-133,-132,-134,-135,-182,18,18,-230,-129,-128,-130,-131,-137,-136,-138,-181,18,18,-183,-184,-275,-276,-286,-284,-285,-283,-185,-186,-313,-314,-315,-316,-329,-330,-331,-332,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-166,-168,]),'READLINE':([0,6,10,11,12,13,14,15,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,46,54,55,68,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,100,102,114,115,116,117,118,119,120,127,144,150,151,152,153,154,155,156,157,158,159,160,166,173,175,176,177,178,179,180,181,182,183,184,185,186,190,191,192,193,194,195,196,197,198,199,200,201,202,213,214,215,216,217,218,219,220,221,222,223,226,270,271,305,317,319,368,375,376,383,384,388,389,392,395,396,397,398,399,400,401,405,409,410,411,412,413,414,415,416,417,420,421,422,423,424,425,426,429,430,431,439,440,441,442,443,444,445,446,447,449,451,452,453,454,455,456,458,459,460,461,464,465,466,467,469,470,471,472,473,474,475,478,479,480,482,483,484,485,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,526,528,531,544,545,548,550,558,559,594,595,599,603,606,610,615,620,653,659,661,662,667,668,669,670,706,707,708,710,711,712,713,714,715,716,717,746,747,748,785,786,788,790,812,814,817,818,819,820,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,],[19,19,19,19,19,19,19,19,-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,19,-227,-228,19,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,19,-149,19,19,-116,-119,-270,-291,-292,-293,-294,-154,-151,19,19,19,19,19,19,19,19,19,19,19,19,-145,-146,-49,-51,-53,-178,-339,-333,-346,-353,-74,-81,-87,-155,-156,-343,-345,-337,-338,-350,-352,-357,-359,-157,-158,-311,-50,-52,-54,-179,-341,-335,-348,-355,-76,-83,-89,-312,-153,-187,-231,19,19,19,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,19,19,19,19,19,19,19,19,-111,-112,-108,-93,-94,-95,-106,-107,-109,-121,19,19,-160,-161,-162,-163,-164,-361,-360,-362,-363,-177,-159,-64,-340,-343,-344,-337,-66,-334,-309,-337,-69,-347,-350,-351,-71,-354,-303,-305,-357,-358,-337,-78,-75,-307,-85,-82,-91,-88,-65,-342,-67,-336,-310,-70,-349,-72,-356,-304,-306,-79,-77,-308,-86,-84,-92,-90,-281,19,19,610,19,-120,19,-165,-172,-167,-171,-180,19,-226,-4,19,19,19,-282,-229,-96,-133,-132,-134,-135,-182,19,19,-230,-129,-128,-130,-131,-137,-136,-138,-181,19,19,-183,-184,-275,-276,-286,-284,-285,-283,-185,-186,-313,-314,-315,-316,-329,-330,-331,-332,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-166,-168,]),'VAR':([0,6,10,11,12,13,14,15,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,46,54,55,65,68,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,114,115,116,117,118,119,120,127,144,150,151,152,153,154,155,156,157,158,159,160,166,173,175,176,177,178,179,180,181,182,183,184,185,186,190,191,192,193,194,195,196,197,198,199,200,201,202,213,214,215,216,217,218,219,220,221,222,223,226,270,271,305,319,368,375,376,383,384,388,389,392,395,396,397,398,399,400,401,405,409,410,411,412,413,414,415,416,417,420,421,422,423,424,425,426,429,430,431,439,440,441,442,443,444,445,446,447,449,451,452,453,454,455,456,458,459,460,461,464,465,466,467,469,470,471,472,473,474,475,478,479,480,482,483,484,485,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,526,528,531,545,548,558,559,594,595,599,603,606,610,653,659,661,662,667,668,669,670,706,707,708,710,711,712,713,714,715,716,717,746,747,748,785,786,788,790,812,814,817,818,819,820,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,],[20,20,20,20,20,20,20,20,-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,20,-227,-228,121,20,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,20,-149,-116,-119,-270,-291,-292,-293,-294,-154,-151,20,20,20,20,20,20,20,20,20,20,20,20,-145,-146,-49,-51,-53,-178,-339,-333,-346,-353,-74,-81,-87,-155,-156,-343,-345,-337,-338,-350,-352,-357,-359,-157,-158,-311,-50,-52,-54,-179,-341,-335,-348,-355,-76,-83,-89,-312,-153,-187,-231,20,20,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,20,20,20,20,20,20,20,20,-111,-112,-108,-93,-94,-95,-106,-107,-109,-121,20,20,-160,-161,-162,-163,-164,-361,-360,-362,-363,-177,-159,-64,-340,-343,-344,-337,-66,-334,-309,-337,-69,-347,-350,-351,-71,-354,-303,-305,-357,-358,-337,-78,-75,-307,-85,-82,-91,-88,-65,-342,-67,-336,-310,-70,-349,-72,-356,-304,-306,-79,-77,-308,-86,-84,-92,-90,-281,20,20,20,-120,-165,-172,-167,-171,-180,20,-226,-4,20,-282,-229,-96,-133,-132,-134,-135,-182,20,20,-230,-129,-128,-130,-131,-137,-136,-138,-181,20,20,-183,-184,-275,-276,-286,-284,-285,-283,-185,-186,-313,-314,-315,-316,-329,-330,-331,-332,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-166,-168,]),'VAL':([0,6,10,11,12,13,14,15,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,46,54,55,68,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,114,115,116,117,118,119,120,127,144,150,151,152,153,154,155,156,157,158,159,160,166,173,175,176,177,178,179,180,181,182,183,184,185,186,190,191,192,193,194,195,196,197,198,199,200,201,202,213,214,215,216,217,218,219,220,221,222,223,226,270,271,305,319,368,375,376,383,384,388,389,392,395,396,397,398,399,400,401,405,409,410,411,412,413,414,415,416,417,420,421,422,423,424,425,426,429,430,431,439,440,441,442,443,444,445,446,447,449,451,452,453,454,455,456,458,459,460,461,464,465,466,467,469,470,471,472,473,474,475,478,479,480,482,483,484,485,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,526,528,531,545,548,558,559,594,595,599,603,606,610,653,659,661,662,667,668,669,670,706,707,708,710,711,712,713,714,715,716,717,746,747,748,785,786,788,790,812,814,817,818,819,820,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,],[21,21,21,21,21,21,21,21,-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,21,-227,-228,21,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,21,-149,-116,-119,-270,-291,-292,-293,-294,-154,-151,21,21,21,21,21,21,21,21,21,21,21,21,-145,-146,-49,-51,-53,-178,-339,-333,-346,-353,-74,-81,-87,-155,-156,-343,-345,-337,-338,-350,-352,-357,-359,-157,-158,-311,-50,-52,-54,-179,-341,-335,-348,-355,-76,-83,-89,-312,-153,-187,-231,21,21,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,21,21,21,21,21,21,21,21,-111,-112,-108,-93,-94,-95,-106,-107,-109,-121,21,21,-160,-161,-162,-163,-164,-361,-360,-362,-363,-177,-159,-64,-340,-343,-344,-337,-66,-334,-309,-337,-69,-347,-350,-351,-71,-354,-303,-305,-357,-358,-337,-78,-75,-307,-85,-82,-91,-88,-65,-342,-67,-336,-310,-70,-349,-72,-356,-304,-306,-79,-77,-308,-86,-84,-92,-90,-281,21,21,21,-120,-165,-172,-167,-171,-180,21,-226,-4,21,-282,-229,-96,-133,-132,-134,-135,-182,21,21,-230,-129,-128,-130,-131,-137,-136,-138,-181,21,21,-183,-184,-275,-276,-286,-284,-285,-283,-185,-186,-313,-314,-315,-316,-329,-330,-331,-332,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-166,-168,]),'WHILE':([0,6,10,11,12,13,14,15,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,46,54,55,68,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,114,115,116,117,118,119,120,127,144,150,151,152,153,154,155,156,157,158,159,160,166,173,175,176,177,178,179,180,181,182,183,184,185,186,190,191,192,193,194,195,196,197,198,199,200,201,202,213,214,215,216,217,218,219,220,221,222,223,226,270,271,305,319,368,375,376,383,384,388,389,392,395,396,397,398,399,400,401,405,416,417,420,421,422,423,424,425,426,429,430,431,439,440,441,442,443,444,445,446,447,449,451,452,453,454,455,456,458,459,460,461,464,465,466,467,469,470,471,472,473,474,475,478,479,480,482,483,484,485,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,526,531,545,548,558,559,594,595,599,603,606,610,653,659,661,662,667,668,669,670,706,707,708,710,711,712,713,714,715,716,717,746,747,748,785,786,788,790,812,814,817,818,819,820,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,],[31,31,31,31,31,31,31,31,-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,31,-227,-228,31,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,31,-149,-116,-119,-270,-291,-292,-293,-294,-154,-151,31,31,31,31,31,31,31,31,31,31,31,31,-145,-146,-49,-51,-53,-178,-339,-333,-346,-353,-74,-81,-87,-155,-156,-343,-345,-337,-338,-350,-352,-357,-359,-157,-158,-311,-50,-52,-54,-179,-341,-335,-348,-355,-76,-83,-89,-312,-153,-187,-231,31,31,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,31,-111,-112,-108,-93,-94,-95,-106,-107,-109,-121,31,31,-160,-161,-162,-163,-164,-361,-360,-362,-363,-177,-159,-64,-340,-343,-344,-337,-66,-334,-309,-337,-69,-347,-350,-351,-71,-354,-303,-305,-357,-358,-337,-78,-75,-307,-85,-82,-91,-88,-65,-342,-67,-336,-310,-70,-349,-72,-356,-304,-306,-79,-77,-308,-86,-84,-92,-90,-281,31,31,-120,-165,-172,-167,-171,-180,31,-226,-4,31,-282,-229,-96,-133,-132,-134,-135,-182,31,31,-230,-129,-128,-130,-131,-137,-136,-138,-181,31,31,-183,-184,-275,-276,-286,-284,-285,-283,-185,-186,-313,-314,-315,-316,-329,-330,-331,-332,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-166,-168,]),'FOR':([0,6,10,11,12,13,14,15,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,46,54,55,68,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,114,115,116,117,118,119,120,127,144,150,151,152,153,154,155,156,157,158,159,160,166,173,175,176,177,178,179,180,181,182,183,184,185,186,190,191,192,193,194,195,196,197,198,199,200,201,202,213,214,215,216,217,218,219,220,221,222,223,226,270,271,305,319,368,375,376,383,384,388,389,392,395,396,397,398,399,400,401,405,416,417,420,421,422,423,424,425,426,429,430,431,439,440,441,442,443,444,445,446,447,449,451,452,453,454,455,456,458,459,460,461,464,465,466,467,469,470,471,472,473,474,475,478,479,480,482,483,484,485,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,526,531,545,548,558,559,594,595,599,603,606,610,653,659,661,662,667,668,669,670,706,707,708,710,711,712,713,714,715,716,717,746,747,748,785,786,788,790,812,814,817,818,819,820,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,],[32,32,32,32,32,32,32,32,-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,32,-227,-228,32,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,32,-149,-116,-119,-270,-291,-292,-293,-294,-154,-151,32,32,32,32,32,32,32,32,32,32,32,32,-145,-146,-49,-51,-53,-178,-339,-333,-346,-353,-74,-81,-87,-155,-156,-343,-345,-337,-338,-350,-352,-357,-359,-157,-158,-311,-50,-52,-54,-179,-341,-335,-348,-355,-76,-83,-89,-312,-153,-187,-231,32,32,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,32,-111,-112,-108,-93,-94,-95,-106,-107,-109,-121,32,32,-160,-161,-162,-163,-164,-361,-360,-362,-363,-177,-159,-64,-340,-343,-344,-337,-66,-334,-309,-337,-69,-347,-350,-351,-71,-354,-303,-305,-357,-358,-337,-78,-75,-307,-85,-82,-91,-88,-65,-342,-67,-336,-310,-70,-349,-72,-356,-304,-306,-79,-77,-308,-86,-84,-92,-90,-281,32,32,-120,-165,-172,-167,-171,-180,32,-226,-4,32,-282,-229,-96,-133,-132,-134,-135,-182,32,32,-230,-129,-128,-130,-131,-137,-136,-138,-181,32,32,-183,-184,-275,-276,-286,-284,-285,-283,-185,-186,-313,-314,-315,-316,-329,-330,-331,-332,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-166,-168,]),'IF':([0,6,10,11,12,13,14,15,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,46,54,55,56,68,72,74,75,76,77,78,79,80,81,82,83,84,85,89,90,92,99,114,115,116,117,118,119,120,127,144,150,151,152,153,154,155,156,157,158,159,160,166,173,175,176,177,178,179,180,181,182,183,184,185,186,190,191,192,193,194,195,196,197,198,199,200,201,202,213,214,215,216,217,218,219,220,221,222,223,226,270,271,305,319,368,375,376,383,384,388,389,392,395,396,397,398,399,400,401,405,416,417,420,421,422,423,424,425,426,429,430,431,439,440,441,442,443,444,445,446,447,449,451,452,453,454,455,456,458,459,460,461,464,465,466,467,469,470,471,472,473,474,475,478,479,480,482,483,484,485,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,526,531,545,548,558,559,594,595,599,603,606,610,653,659,661,662,667,668,669,670,706,707,708,709,710,711,712,713,714,715,716,717,746,747,748,785,786,788,790,812,814,817,818,819,820,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,],[33,33,33,33,33,33,33,33,-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,33,-227,-228,91,33,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,91,33,-149,-116,-119,-270,-291,-292,-293,-294,-154,-151,33,33,33,33,33,33,33,33,33,33,33,33,-145,-146,-49,-51,-53,-178,-339,-333,-346,-353,-74,-81,-87,-155,-156,-343,-345,-337,-338,-350,-352,-357,-359,-157,-158,-311,-50,-52,-54,-179,-341,-335,-348,-355,-76,-83,-89,-312,-153,-187,-231,33,33,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,33,-111,-112,-108,-93,-94,-95,-106,-107,-109,-121,33,33,-160,-161,-162,-163,-164,-361,-360,-362,-363,-177,-159,-64,-340,-343,-344,-337,-66,-334,-309,-337,-69,-347,-350,-351,-71,-354,-303,-305,-357,-358,-337,-78,-75,-307,-85,-82,-91,-88,-65,-342,-67,-336,-310,-70,-349,-72,-356,-304,-306,-79,-77,-308,-86,-84,-92,-90,-281,33,33,-120,-165,-172,-167,-171,-180,33,-226,-4,33,-282,-229,-96,-133,-132,-134,-135,-182,33,33,91,-230,-129,-128,-130,-131,-137,-136,-138,-181,33,33,-183,-184,-275,-276,-286,-284,-285,-283,-185,-186,-313,-314,-315,-316,-329,-330,-331,-332,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-166,-168,]),'STRING':([0,6,10,11,12,13,14,15,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,45,46,54,55,59,60,64,66,68,69,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,100,102,109,114,115,116,117,118,119,120,127,143,144,145,148,150,151,152,153,154,155,156,157,158,159,160,166,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,191,192,193,194,195,196,197,198,199,200,201,202,213,214,215,216,217,218,219,220,221,222,223,226,237,238,239,240,241,243,244,245,246,251,255,257,259,262,268,270,271,286,292,305,317,318,319,339,341,343,344,345,346,347,349,357,358,359,360,361,362,363,365,368,375,376,383,384,388,389,392,395,396,397,398,399,400,401,405,416,417,420,421,422,423,424,425,426,429,430,431,439,440,441,442,443,444,445,446,447,449,451,452,453,454,455,456,458,459,460,461,464,465,466,467,469,470,471,472,473,474,475,478,479,480,482,483,484,485,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,526,531,545,546,548,550,557,558,559,568,594,595,599,603,606,610,614,615,653,659,661,662,667,668,669,670,706,707,708,710,711,712,713,714,715,716,717,721,722,723,724,742,745,746,747,748,785,786,788,790,796,800,804,808,812,814,815,817,818,819,820,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,],[34,34,34,34,34,34,34,34,-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,74,34,-227,-228,74,74,112,112,34,74,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,163,-149,184,221,112,-116,-119,-270,-291,-292,-293,-294,-154,297,-151,74,112,163,163,163,163,163,163,163,163,163,163,163,163,-145,74,-146,-49,-51,-53,-178,-339,-333,-346,-353,-74,-81,-87,74,-155,-156,-343,-345,-337,-338,-350,-352,-357,-359,-157,-158,-311,-50,-52,-54,-179,-341,-335,-348,-355,-76,-83,-89,-312,112,-241,-242,-243,373,-260,-261,-262,-263,34,382,382,390,396,406,-153,-187,408,34,-231,424,74,163,74,74,457,463,468,477,479,34,74,74,457,463,468,477,510,34,163,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,163,-111,-112,-108,-93,-94,-95,-106,-107,-109,-121,163,163,-160,-161,-162,-163,-164,-361,-360,-362,-363,-177,-159,-64,-340,-343,-344,-337,-66,-334,-309,-337,-69,-347,-350,-351,-71,-354,-303,-305,-357,-358,-337,-78,-75,-307,-85,-82,-91,-88,-65,-342,-67,-336,-310,-70,-349,-72,-356,-304,-306,-79,-77,-308,-86,-84,-92,-90,-281,163,163,74,-120,424,74,-165,-172,396,-167,-171,-180,163,-226,-4,74,424,163,-282,-229,-96,-133,-132,-134,-135,-182,163,163,-230,-129,-128,-130,-131,-137,-136,-138,756,757,758,759,779,779,-181,163,163,-183,-184,-275,-276,828,832,836,840,-286,-284,845,-285,-283,-185,-186,-313,-314,-315,-316,-329,-330,-331,-332,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-166,-168,]),'$end':([1,4,6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,48,49,50,51,52,53,54,55,57,72,79,80,81,82,83,84,85,86,89,99,116,117,118,119,120,127,144,173,175,176,177,178,179,180,181,182,183,184,185,186,190,191,192,193,194,195,196,197,198,199,200,201,202,213,214,215,216,217,218,219,220,221,222,223,226,269,270,271,305,375,376,383,384,388,389,392,395,396,397,398,399,400,401,429,439,440,441,442,443,444,445,446,447,449,451,452,453,454,455,456,458,459,460,461,464,465,466,467,469,470,471,472,473,474,475,478,479,480,482,483,484,485,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,526,548,558,559,594,595,599,606,659,661,667,668,669,670,706,710,711,712,713,714,715,716,717,746,785,786,788,790,812,814,817,818,819,820,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,],[0,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,-15,-16,-17,-18,-20,-19,-227,-228,-21,-152,-116,-117,-118,-119,-113,-114,-115,-2,-232,-149,-270,-291,-292,-293,-294,-154,-151,-145,-146,-49,-51,-53,-178,-339,-333,-346,-353,-74,-81,-87,-155,-156,-343,-345,-337,-338,-350,-352,-357,-359,-157,-158,-311,-50,-52,-54,-179,-341,-335,-348,-355,-76,-83,-89,-312,-1,-153,-187,-231,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,-121,-160,-161,-162,-163,-164,-361,-360,-362,-363,-177,-159,-64,-340,-343,-344,-337,-66,-334,-309,-337,-69,-347,-350,-351,-71,-354,-303,-305,-357,-358,-337,-78,-75,-307,-85,-82,-91,-88,-65,-342,-67,-336,-310,-70,-349,-72,-356,-304,-306,-79,-77,-308,-86,-84,-92,-90,-281,-120,-165,-172,-167,-171,-180,-226,-282,-229,-133,-132,-134,-135,-182,-230,-129,-128,-130,-131,-137,-136,-138,-181,-183,-184,-275,-276,-286,-284,-285,-283,-185,-186,-313,-314,-315,-316,-329,-330,-331,-332,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-166,-168,]),'MATCH':([3,161,],[44,44,]),'PAR_I':([3,17,18,19,31,32,33,43,58,72,76,91,100,101,102,103,124,127,144,161,169,176,187,189,213,224,225,270,334,420,537,612,616,620,663,671,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,701,702,821,846,],[45,59,60,61,64,65,66,69,95,-152,146,148,188,211,188,211,268,-154,-151,318,324,45,339,341,45,357,358,-153,436,546,318,146,546,188,546,45,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,744,745,847,868,]),'LLAVE_D':([6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,48,49,50,51,52,53,54,55,57,72,74,75,76,77,78,79,80,81,82,83,84,85,89,99,114,115,116,117,118,119,120,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,149,150,151,152,153,154,155,156,157,158,159,160,173,175,176,177,178,179,180,181,182,183,184,185,186,190,191,192,193,194,195,196,197,198,199,200,201,202,213,214,215,216,217,218,219,220,221,222,223,226,270,271,272,273,275,276,278,279,281,282,284,285,287,288,290,291,305,306,307,308,309,310,311,312,313,314,315,316,320,375,376,383,384,388,389,392,395,396,397,398,399,400,401,416,417,420,421,422,423,424,425,426,428,429,439,440,441,442,443,444,445,446,447,449,451,452,453,454,455,456,458,459,460,461,464,465,466,467,469,470,471,472,473,474,475,478,479,480,482,483,484,485,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,519,525,526,529,530,532,533,534,535,536,538,539,540,541,542,543,548,558,559,594,595,599,606,608,609,611,616,617,618,619,656,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,703,706,710,711,712,713,714,715,716,717,746,749,750,783,784,785,786,788,790,812,814,817,818,819,820,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,-15,-16,-17,-18,-20,-19,-227,-228,-21,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,-149,-116,-119,-270,-291,-292,-293,-294,269,-154,271,-188,-189,-190,-191,-192,-193,-194,-196,-200,-204,-208,-212,-216,-220,-151,305,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-145,-146,-49,-51,-53,-178,-339,-333,-346,-353,-74,-81,-87,-155,-156,-343,-345,-337,-338,-350,-352,-357,-359,-157,-158,-311,-50,-52,-54,-179,-341,-335,-348,-355,-76,-83,-89,-312,-153,-187,-197,-198,-201,-202,-205,-206,-209,-210,-213,-214,-217,-218,-221,-222,-231,-33,-34,-35,-36,-37,-38,-39,-41,-40,-42,-43,429,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,-111,-112,-108,-93,-94,-95,-106,-107,-109,548,-121,-160,-161,-162,-163,-164,-361,-360,-362,-363,-177,-159,-64,-340,-343,-344,-337,-66,-334,-309,-337,-69,-347,-350,-351,-71,-354,-303,-305,-357,-358,-337,-78,-75,-307,-85,-82,-91,-88,-65,-342,-67,-336,-310,-70,-349,-72,-356,-304,-306,-79,-77,-308,-86,-84,-92,-90,599,606,-281,-195,-224,-44,-45,-46,-47,-48,-199,-203,-207,-211,-215,-219,-120,-165,-172,-167,-171,-180,-226,-223,660,661,667,668,669,670,706,-282,-225,-229,-96,711,712,713,714,-133,-132,-134,-135,715,716,717,746,-182,-230,-129,-128,-130,-131,-137,-136,-138,-181,785,786,819,820,-183,-184,-275,-276,-286,-284,-285,-283,-185,-186,-313,-314,-315,-316,-329,-330,-331,-332,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-166,-168,]),'ELSE':([14,54,55,88,89,158,305,606,661,710,],[56,90,-228,90,-232,56,-231,-226,709,-230,]),'INT':([22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,45,54,55,59,60,64,66,69,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,100,102,109,114,115,116,117,118,119,120,127,143,144,145,146,148,150,151,152,153,154,155,156,157,158,159,160,166,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,191,192,193,194,195,196,197,198,199,200,201,202,213,214,215,216,217,218,219,220,221,222,223,226,237,238,239,240,241,242,243,244,245,246,247,248,249,250,255,256,257,258,262,264,266,270,271,274,305,317,318,319,339,341,343,344,345,346,357,358,359,360,361,362,368,375,376,383,384,388,389,392,395,396,397,398,399,400,401,402,405,416,417,420,421,422,423,424,425,426,430,431,439,440,441,442,443,444,445,446,447,449,451,452,453,454,455,456,458,459,460,461,464,465,466,467,469,470,471,472,473,474,475,478,479,480,482,483,484,485,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,523,524,526,527,531,545,546,550,557,558,559,562,594,595,599,601,602,603,606,614,615,653,659,661,662,706,707,708,710,719,725,726,727,728,746,747,748,785,786,788,789,790,792,801,807,811,812,814,817,818,819,820,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,871,872,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,79,-227,-228,79,79,114,114,79,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,114,-149,194,194,114,-116,-119,-270,-291,-292,-293,-294,-154,293,-151,79,302,114,114,114,114,114,114,114,114,114,114,114,114,114,-145,79,-146,-49,-51,-53,-178,-339,-333,-346,-353,-74,-81,-87,79,-155,-156,-343,-345,-337,-338,-350,-352,-357,-359,-157,-158,-311,-50,-52,-54,-179,-341,-335,-348,-355,-76,-83,-89,-312,114,-241,-242,-243,79,79,-260,-261,-262,-263,-271,-272,-273,-274,114,79,114,79,395,400,404,-153,-187,293,-231,114,427,114,79,79,456,461,456,475,79,79,456,461,456,475,114,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,521,114,-111,-112,-108,-93,-94,-95,-106,-107,-109,114,114,-160,-161,-162,-163,-164,-361,-360,-362,-363,-177,-159,-64,-340,-343,-344,-337,-66,-334,-309,-337,-69,-347,-350,-351,-71,-354,-303,-305,-357,-358,-337,-78,-75,-307,-85,-82,-91,-88,-65,-342,-67,-336,-310,-70,-349,-72,-356,-304,-306,-79,-77,-308,-86,-84,-92,-90,604,605,-281,607,114,114,613,114,79,-165,-172,395,-167,-171,-180,654,655,114,-226,79,114,114,-282,-229,-96,-182,114,114,-230,753,760,761,762,763,-181,114,114,-183,-184,-275,822,-276,824,833,839,843,-286,-284,-285,-283,-185,-186,869,-313,-314,-315,-316,-329,-330,-331,-332,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,870,-166,-168,]),'LONG':([22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,45,54,55,59,60,64,66,69,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,100,102,109,114,115,116,117,118,119,120,127,143,144,145,148,150,151,152,153,154,155,156,157,158,159,160,166,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,191,192,193,194,195,196,197,198,199,200,201,202,213,214,215,216,217,218,219,220,221,222,223,226,237,238,239,240,241,242,243,244,245,246,247,248,249,250,255,256,257,258,270,271,277,305,317,318,319,339,341,343,345,346,357,358,359,361,362,368,375,376,383,384,388,389,392,395,396,397,398,399,400,401,405,416,417,420,421,422,423,424,425,426,430,431,439,440,441,442,443,444,445,446,447,449,451,452,453,454,455,456,458,459,460,461,464,465,466,467,469,470,471,472,473,474,475,478,479,480,482,483,484,485,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,526,531,545,546,550,557,558,559,594,595,599,603,606,614,615,653,659,661,662,706,707,708,710,729,730,731,732,746,747,748,785,786,788,790,793,797,805,809,812,814,817,818,819,820,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,80,-227,-228,80,80,80,80,80,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,80,-149,192,192,80,-116,-119,-270,-291,-292,-293,-294,-154,294,-151,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-145,80,-146,-49,-51,-53,-178,-339,-333,-346,-353,-74,-81,-87,80,-155,-156,-343,-345,-337,-338,-350,-352,-357,-359,-157,-158,-311,-50,-52,-54,-179,-341,-335,-348,-355,-76,-83,-89,-312,80,-241,-242,-243,80,80,-260,-261,-262,-263,-271,-272,-273,-274,80,80,80,80,-153,-187,294,-231,80,80,80,80,80,454,454,454,80,80,454,454,454,80,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,80,-111,-112,-108,-93,-94,-95,-106,-107,-109,80,80,-160,-161,-162,-163,-164,-361,-360,-362,-363,-177,-159,-64,-340,-343,-344,-337,-66,-334,-309,-337,-69,-347,-350,-351,-71,-354,-303,-305,-357,-358,-337,-78,-75,-307,-85,-82,-91,-88,-65,-342,-67,-336,-310,-70,-349,-72,-356,-304,-306,-79,-77,-308,-86,-84,-92,-90,-281,80,80,80,80,80,-165,-172,-167,-171,-180,80,-226,80,80,80,-282,-229,-96,-182,80,80,-230,764,765,766,767,-181,80,80,-183,-184,-275,-276,825,829,837,841,-286,-284,-285,-283,-185,-186,-313,-314,-315,-316,-329,-330,-331,-332,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-166,-168,]),'FLOAT':([22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,45,54,55,59,60,64,66,69,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,100,102,109,114,115,116,117,118,119,120,127,143,144,145,148,150,151,152,153,154,155,156,157,158,159,160,166,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,191,192,193,194,195,196,197,198,199,200,201,202,213,214,215,216,217,218,219,220,221,222,223,226,237,238,239,240,241,242,243,244,245,246,247,248,249,250,255,256,257,258,270,271,280,305,317,318,319,339,341,345,346,357,358,361,362,368,375,376,383,384,388,389,392,395,396,397,398,399,400,401,405,416,417,420,421,422,423,424,425,426,430,431,439,440,441,442,443,444,445,446,447,449,451,452,453,454,455,456,458,459,460,461,464,465,466,467,469,470,471,472,473,474,475,478,479,480,482,483,484,485,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,526,531,545,546,550,557,558,559,594,595,599,603,606,614,615,653,659,661,662,706,707,708,710,737,738,739,740,746,747,748,785,786,788,790,795,799,803,806,812,814,817,818,819,820,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,81,-227,-228,81,81,81,81,81,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,81,-149,196,196,81,-116,-119,-270,-291,-292,-293,-294,-154,295,-151,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-145,81,-146,-49,-51,-53,-178,-339,-333,-346,-353,-74,-81,-87,81,-155,-156,-343,-345,-337,-338,-350,-352,-357,-359,-157,-158,-311,-50,-52,-54,-179,-341,-335,-348,-355,-76,-83,-89,-312,81,-241,-242,-243,81,81,-260,-261,-262,-263,-271,-272,-273,-274,81,81,81,81,-153,-187,295,-231,81,81,81,81,81,466,466,81,81,466,466,81,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,81,-111,-112,-108,-93,-94,-95,-106,-107,-109,81,81,-160,-161,-162,-163,-164,-361,-360,-362,-363,-177,-159,-64,-340,-343,-344,-337,-66,-334,-309,-337,-69,-347,-350,-351,-71,-354,-303,-305,-357,-358,-337,-78,-75,-307,-85,-82,-91,-88,-65,-342,-67,-336,-310,-70,-349,-72,-356,-304,-306,-79,-77,-308,-86,-84,-92,-90,-281,81,81,81,81,81,-165,-172,-167,-171,-180,81,-226,81,81,81,-282,-229,-96,-182,81,81,-230,772,773,774,775,-181,81,81,-183,-184,-275,-276,827,831,835,838,-286,-284,-285,-283,-185,-186,-313,-314,-315,-316,-329,-330,-331,-332,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-166,-168,]),'DOUBLE':([22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,45,54,55,59,60,64,66,69,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,100,102,109,114,115,116,117,118,119,120,127,143,144,145,148,150,151,152,153,154,155,156,157,158,159,160,166,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,191,192,193,194,195,196,197,198,199,200,201,202,213,214,215,216,217,218,219,220,221,222,223,226,237,238,239,240,241,242,243,244,245,246,247,248,249,250,255,256,257,258,262,263,270,271,283,305,317,318,319,339,341,346,357,358,362,368,375,376,383,384,388,389,392,395,396,397,398,399,400,401,405,416,417,420,421,422,423,424,425,426,430,431,439,440,441,442,443,444,445,446,447,449,451,452,453,454,455,456,458,459,460,461,464,465,466,467,469,470,471,472,473,474,475,478,479,480,482,483,484,485,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,526,531,545,546,550,557,558,559,565,566,594,595,599,603,606,614,615,653,659,661,662,706,707,708,710,720,733,734,735,736,746,747,748,785,786,788,790,791,794,798,802,810,812,814,817,818,819,820,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,82,-227,-228,82,82,115,115,82,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,115,-149,198,198,115,-116,-119,-270,-291,-292,-293,-294,-154,296,-151,82,115,115,115,115,115,115,115,115,115,115,115,115,115,-145,82,-146,-49,-51,-53,-178,-339,-333,-346,-353,-74,-81,-87,82,-155,-156,-343,-345,-337,-338,-350,-352,-357,-359,-157,-158,-311,-50,-52,-54,-179,-341,-335,-348,-355,-76,-83,-89,-312,115,-241,-242,-243,82,82,-260,-261,-262,-263,-271,-272,-273,-274,115,82,115,82,397,399,-153,-187,296,-231,115,82,115,82,82,473,82,82,473,115,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,115,-111,-112,-108,-93,-94,-95,-106,-107,-109,115,115,-160,-161,-162,-163,-164,-361,-360,-362,-363,-177,-159,-64,-340,-343,-344,-337,-66,-334,-309,-337,-69,-347,-350,-351,-71,-354,-303,-305,-357,-358,-337,-78,-75,-307,-85,-82,-91,-88,-65,-342,-67,-336,-310,-70,-349,-72,-356,-304,-306,-79,-77,-308,-86,-84,-92,-90,-281,115,115,82,115,82,-165,-172,399,397,-167,-171,-180,115,-226,82,115,115,-282,-229,-96,-182,115,115,-230,755,768,769,770,771,-181,115,115,-183,-184,-275,-276,823,826,830,834,842,-286,-284,-285,-283,-185,-186,-313,-314,-315,-316,-329,-330,-331,-332,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-166,-168,]),'CHAR':([22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,45,54,55,59,60,64,66,69,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,100,102,109,114,115,116,117,118,119,120,127,143,144,145,148,150,151,152,153,154,155,156,157,158,159,160,166,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,191,192,193,194,195,196,197,198,199,200,201,202,213,214,215,216,217,218,219,220,221,222,223,226,237,238,239,240,241,243,244,245,246,255,257,260,261,263,264,270,271,289,305,317,318,319,339,341,344,346,347,348,357,358,360,362,363,364,368,375,376,383,384,388,389,392,395,396,397,398,399,400,401,405,416,417,420,421,422,423,424,425,426,430,431,439,440,441,442,443,444,445,446,447,449,451,452,453,454,455,456,458,459,460,461,464,465,466,467,469,470,471,472,473,474,475,478,479,480,482,483,484,485,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,526,531,545,546,550,557,558,559,561,594,595,599,603,606,614,615,653,659,661,662,706,707,708,710,741,744,746,747,748,785,786,788,790,812,813,814,817,818,819,820,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,75,-227,-228,75,75,113,113,75,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,164,-149,185,222,113,-116,-119,-270,-291,-292,-293,-294,-154,298,-151,75,113,164,164,164,164,164,164,164,164,164,164,164,164,-145,75,-146,-49,-51,-53,-178,-339,-333,-346,-353,-74,-81,-87,75,-155,-156,-343,-345,-337,-338,-350,-352,-357,-359,-157,-158,-311,-50,-52,-54,-179,-341,-335,-348,-355,-76,-83,-89,-312,113,-241,-242,-243,374,-260,-261,-262,-263,164,164,392,393,398,401,-153,-187,298,-231,425,75,164,75,75,462,476,481,483,75,75,462,476,481,513,164,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,164,-111,-112,-108,-93,-94,-95,-106,-107,-109,164,164,-160,-161,-162,-163,-164,-361,-360,-362,-363,-177,-159,-64,-340,-343,-344,-337,-66,-334,-309,-337,-69,-347,-350,-351,-71,-354,-303,-305,-357,-358,-337,-78,-75,-307,-85,-82,-91,-88,-65,-342,-67,-336,-310,-70,-349,-72,-356,-304,-306,-79,-77,-308,-86,-84,-92,-90,-281,164,164,75,425,75,-165,-172,398,-167,-171,-180,164,-226,75,425,164,-282,-229,-96,-182,164,164,-230,777,777,-181,164,164,-183,-184,-275,-276,-286,844,-284,-285,-283,-185,-186,-313,-314,-315,-316,-329,-330,-331,-332,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-166,-168,]),'RETURN':([22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,54,55,72,74,75,76,77,78,79,80,81,82,83,84,85,89,99,114,115,116,117,118,119,120,127,144,150,151,152,153,154,155,156,157,158,159,160,173,175,176,177,178,179,180,181,182,183,184,185,186,190,191,192,193,194,195,196,197,198,199,200,201,202,213,214,215,216,217,218,219,220,221,222,223,226,270,271,305,306,307,308,309,310,311,312,313,314,315,316,375,376,383,384,388,389,392,395,396,397,398,399,400,401,416,417,420,421,422,423,424,425,426,430,439,440,441,442,443,444,445,446,447,449,451,452,453,454,455,456,458,459,460,461,464,465,466,467,469,470,471,472,473,474,475,478,479,480,482,483,484,485,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,526,549,551,558,559,594,595,599,606,659,661,662,706,710,746,785,786,788,790,812,814,817,818,819,820,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,-227,-228,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,-149,-116,-119,-270,-291,-292,-293,-294,-154,-151,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-145,-146,-49,-51,-53,-178,-339,-333,-346,-353,-74,-81,-87,-155,-156,-343,-345,-337,-338,-350,-352,-357,-359,-157,-158,-311,-50,-52,-54,-179,-341,-335,-348,-355,-76,-83,-89,-312,-153,-187,-231,-33,-34,-35,-36,-37,-38,-39,-41,-40,-42,-43,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,-111,-112,-108,-93,-94,-95,-106,-107,-109,550,-160,-161,-162,-163,-164,-361,-360,-362,-363,-177,-159,-64,-340,-343,-344,-337,-66,-334,-309,-337,-69,-347,-350,-351,-71,-354,-303,-305,-357,-358,-337,-78,-75,-307,-85,-82,-91,-88,-65,-342,-67,-336,-310,-70,-349,-72,-356,-304,-306,-79,-77,-308,-86,-84,-92,-90,-281,615,620,-165,-172,-167,-171,-180,-226,-282,-229,-96,-182,-230,-181,-183,-184,-275,-276,-286,-284,-285,-283,-185,-186,-313,-314,-315,-316,-329,-330,-331,-332,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-166,-168,]),'CASE':([22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,70,72,74,75,76,77,78,79,80,81,82,83,84,85,99,114,115,116,117,118,119,120,127,136,137,138,139,140,141,142,144,173,175,176,177,178,179,180,181,182,183,184,185,186,190,191,192,193,194,195,196,197,198,199,200,201,202,213,214,215,216,217,218,219,220,221,222,223,226,270,375,376,383,384,388,389,392,395,396,397,398,399,400,401,416,417,420,421,422,423,424,425,426,439,440,441,442,443,444,445,446,447,449,451,452,453,454,455,456,458,459,460,461,464,465,466,467,469,470,471,472,473,474,475,478,479,480,482,483,484,485,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,526,529,530,532,533,534,535,536,538,539,540,541,542,543,558,559,594,595,659,660,662,788,790,812,814,817,818,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,143,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-149,-116,-119,-270,-291,-292,-293,-294,-154,274,277,280,283,286,289,292,-151,-145,-146,-49,-51,-53,-178,-339,-333,-346,-353,-74,-81,-87,-155,-156,-343,-345,-337,-338,-350,-352,-357,-359,-157,-158,-311,-50,-52,-54,-179,-341,-335,-348,-355,-76,-83,-89,-312,-153,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,-111,-112,-108,-93,-94,-95,-106,-107,-109,-160,-161,-162,-163,-164,-361,-360,-362,-363,-177,-159,-64,-340,-343,-344,-337,-66,-334,-309,-337,-69,-347,-350,-351,-71,-354,-303,-305,-357,-358,-337,-78,-75,-307,-85,-82,-91,-88,-65,-342,-67,-336,-310,-70,-349,-72,-356,-304,-306,-79,-77,-308,-86,-84,-92,-90,-281,-195,-224,-44,-45,-46,-47,-48,-199,-203,-207,-211,-215,-219,-165,-172,-167,-171,-282,-225,-96,-275,-276,-286,-284,-285,-283,-313,-314,-315,-316,-329,-330,-331,-332,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-166,-168,]),'PUNTO':([34,43,47,72,74,99,112,127,144,147,163,176,184,190,200,201,213,221,270,297,373,418,420,424,457,463,468,477,616,663,671,],[67,-150,87,-152,67,-149,67,-154,-151,303,67,337,338,342,-157,-158,337,338,-153,67,67,544,337,67,560,563,564,567,337,337,337,]),'LLAVE_I':([42,44,56,90,93,94,165,170,236,267,321,322,334,409,410,411,412,413,414,415,419,437,522,528,600,657,658,704,705,],[68,70,92,92,166,-124,319,-125,368,405,430,431,-126,531,531,531,531,531,531,531,545,-127,603,531,653,707,708,747,748,]),'PAR_D':([45,61,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,95,96,97,98,104,105,106,107,108,114,115,116,117,118,119,120,123,126,171,252,253,254,300,301,302,304,318,325,326,327,328,329,330,331,336,340,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399,400,401,403,406,416,417,427,432,433,438,448,450,496,497,520,526,546,553,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,604,605,607,612,613,621,622,623,624,654,655,659,674,752,753,754,755,776,777,778,779,781,782,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,869,870,],[72,99,127,144,-175,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,170,173,-148,175,236,-234,-235,-236,-237,-116,-119,-270,-291,-292,-293,-294,267,270,334,-238,-239,-240,-176,416,417,419,72,-97,-98,-99,-100,-101,-102,-103,-147,449,-233,-259,-251,-253,-255,-257,-267,-265,-248,-254,-244,-247,-252,-264,-266,-245,-246,-268,-269,-249,-256,-301,-250,-258,-300,-302,-298,-299,-295,-296,-297,522,526,-111,-112,547,552,-141,-122,558,559,594,595,600,-281,72,-142,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,657,658,659,416,417,-143,-104,-105,-123,704,705,-282,-144,788,-277,790,-279,812,-289,814,-287,817,818,-278,-280,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,-290,-288,871,872,]),'TRUE':([45,59,60,64,66,69,100,102,109,143,145,148,174,188,237,238,239,240,241,243,244,245,246,251,292,317,318,339,341,349,357,358,365,546,550,557,614,615,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-241,-242,-243,83,-260,-261,-262,-263,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'FLASE':([45,59,60,64,66,69,100,102,109,143,145,148,174,188,237,238,239,240,241,243,244,245,246,251,292,317,318,339,341,349,357,358,365,546,550,557,614,615,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-241,-242,-243,84,-260,-261,-262,-263,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'IGUAL':([62,63,93,94,161,167,168,170,203,204,205,206,207,208,209,227,228,229,230,231,232,233,323,325,326,327,328,329,330,331,334,437,438,537,547,552,569,570,571,592,593,596,597,598,622,623,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,],[100,102,165,-124,317,321,322,-125,343,344,345,346,347,348,349,359,360,361,362,363,364,365,-139,-97,-98,-99,-100,-101,-102,-103,-126,-127,557,317,614,-140,625,626,627,648,649,650,651,652,-104,-105,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,]),'DOBLE_PUNTO':([62,63,93,94,170,172,334,437,],[101,103,169,-124,-125,335,-126,-127,]),'NOT':([64,66,79,80,81,82,83,84,85,105,106,107,108,114,115,116,117,118,119,120,148,237,238,239,240,252,253,254,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399,400,401,526,659,],[109,109,-116,-117,-118,-119,-113,-114,-115,240,-235,-236,-237,-116,-119,-270,-291,-292,-293,-294,109,109,-241,-242,-243,-238,-239,-240,-259,-251,-253,-255,-257,-267,-265,-248,-254,-244,-247,-252,-264,-266,-245,-246,-268,-269,-249,-256,-301,-250,-258,-300,-302,-298,-299,-295,-296,-297,-281,-282,]),'STARTSWITH':([67,338,],[124,124,]),'COMA':([73,74,75,76,77,78,79,80,81,82,83,84,85,325,326,327,328,329,330,331,351,352,353,354,355,406,416,417,427,433,526,612,613,621,622,623,659,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,781,782,822,823,844,845,],[145,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-97,-98,-99,-100,-101,-102,-103,489,490,491,492,493,527,-111,-112,-116,554,-281,-108,-116,554,-104,-105,-282,789,-277,791,-279,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,813,-289,815,-287,813,815,-278,-280,-290,-288,]),'MAS':([74,75,76,77,78,79,80,81,82,83,84,85,97,112,113,114,115,163,164,184,185,194,198,221,222,382,416,417,424,425,461,462,473,475,476,479,481,510,526,659,],[-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,174,260,262,263,264,260,262,260,262,263,264,260,262,260,-111,-112,260,262,561,562,264,565,566,260,568,260,-281,-282,]),'AND':([79,80,81,82,83,84,85,105,106,107,108,114,115,116,117,118,119,120,252,253,254,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399,400,401,526,659,],[-116,-117,-118,-119,-113,-114,-115,238,-235,-236,-237,-116,-119,-270,-291,-292,-293,-294,-238,-239,-240,-259,-251,-253,-255,-257,-267,-265,-248,-254,-244,-247,-252,-264,-266,-245,-246,-268,-269,-249,-256,-301,-250,-258,-300,-302,-298,-299,-295,-296,-297,-281,-282,]),'OR':([79,80,81,82,83,84,85,105,106,107,108,114,115,116,117,118,119,120,252,253,254,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399,400,401,526,659,],[-116,-117,-118,-119,-113,-114,-115,239,-235,-236,-237,-116,-119,-270,-291,-292,-293,-294,-238,-239,-240,-259,-251,-253,-255,-257,-267,-265,-248,-254,-244,-247,-252,-264,-266,-245,-246,-268,-269,-249,-256,-301,-250,-258,-300,-302,-298,-299,-295,-296,-297,-281,-282,]),'IGUAL_COMPARACION':([79,80,81,82,83,84,85,106,107,110,111,112,113,114,115,116,117,118,119,120,252,253,375,376,383,384,388,389,392,395,396,397,398,399,400,401,526,659,],[-116,-117,-118,-119,-113,-114,-115,243,243,243,243,243,243,-116,-119,-270,-291,-292,-293,-294,243,243,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,-281,-282,]),'DIFERENTE':([79,80,81,82,83,84,85,106,107,110,111,112,113,114,115,116,117,118,119,120,252,253,375,376,383,384,388,389,392,395,396,397,398,399,400,401,526,659,],[-116,-117,-118,-119,-113,-114,-115,244,244,244,244,244,244,-116,-119,-270,-291,-292,-293,-294,244,244,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,-281,-282,]),'MAYOR':([79,80,81,82,83,84,85,106,107,110,111,112,113,114,115,116,117,118,119,120,252,253,375,376,383,384,388,389,392,395,396,397,398,399,400,401,526,659,],[-116,-117,-118,-119,-113,-114,-115,245,245,245,245,245,245,-116,-119,-270,-291,-292,-293,-294,245,245,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,-281,-282,]),'MENOR':([79,80,81,82,83,84,85,106,107,110,111,112,113,114,115,116,117,118,119,120,252,253,375,376,383,384,388,389,392,395,396,397,398,399,400,401,526,659,],[-116,-117,-118,-119,-113,-114,-115,246,246,246,246,246,246,-116,-119,-270,-291,-292,-293,-294,246,246,-267,-265,-264,-266,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,-281,-282,]),'MENOS':([79,80,81,82,106,110,111,114,115,116,117,118,119,120,159,161,162,176,177,192,194,196,198,213,214,252,375,376,379,380,381,383,384,385,386,387,388,389,392,395,396,397,398,399,400,401,420,423,426,616,619,663,666,],[-116,-117,-118,-119,247,247,247,-116,-119,-270,-291,-292,-293,-294,247,247,247,247,247,-117,-116,-118,-119,247,247,247,-267,-265,247,247,247,-264,-266,247,247,247,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,247,247,247,247,247,247,247,]),'MULTIPLICACION':([79,80,81,82,106,110,111,114,115,116,117,118,119,120,159,161,162,176,177,192,194,196,198,213,214,252,375,376,379,380,381,383,384,385,386,387,388,389,392,395,396,397,398,399,400,401,420,423,426,616,619,663,666,],[-116,-117,-118,-119,248,248,248,-116,-119,-270,-291,-292,-293,-294,248,248,248,248,248,-117,-116,-118,-119,248,248,248,-267,-265,248,248,248,-264,-266,248,248,248,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,248,248,248,248,248,248,248,]),'DIVISION':([79,80,81,82,106,110,111,114,115,116,117,118,119,120,159,161,162,176,177,192,194,196,198,213,214,252,375,376,379,380,381,383,384,385,386,387,388,389,392,395,396,397,398,399,400,401,420,423,426,616,619,663,666,],[-116,-117,-118,-119,249,249,249,-116,-119,-270,-291,-292,-293,-294,249,249,249,249,249,-117,-116,-118,-119,249,249,249,-267,-265,249,249,249,-264,-266,249,249,249,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,249,249,249,249,249,249,249,]),'MOD':([79,80,81,82,106,110,111,114,115,116,117,118,119,120,159,161,162,176,177,192,194,196,198,213,214,252,375,376,379,380,381,383,384,385,386,387,388,389,392,395,396,397,398,399,400,401,420,423,426,616,619,663,666,],[-116,-117,-118,-119,250,250,250,-116,-119,-270,-291,-292,-293,-294,250,250,250,250,250,-117,-116,-118,-119,250,250,250,-267,-265,250,250,250,-264,-266,250,250,250,-268,-269,-301,-300,-302,-298,-299,-295,-296,-297,250,250,250,250,250,250,250,]),'FUNCION_FLECHA':([83,84,85,293,294,295,296,297,298,299,407,408,526,659,],[-113,-114,-115,409,410,411,412,413,414,415,528,413,-281,-282,]),'ARRAYCLASS':([100,101,102,103,169,324,335,350,366,434,435,554,626,627,675,700,751,780,],[187,210,224,234,332,332,332,332,332,332,332,332,676,677,718,743,332,332,]),'LISTCLASS':([100,101,102,103,169,324,335,350,366,434,435,554,648,649,651,652,751,780,],[189,212,225,235,333,333,333,333,333,333,333,333,698,699,701,702,333,333,]),'LONGCLASS':([101,103,169,211,324,335,350,366,434,435,489,490,492,493,554,751,780,],[203,227,329,353,329,329,329,329,329,329,573,577,585,589,329,329,329,]),'INTCLASS':([101,103,169,211,324,335,350,366,434,435,489,491,492,493,554,751,780,],[204,228,328,352,328,328,487,328,328,328,572,581,587,591,328,328,328,]),'FLOATCLASS':([101,103,169,211,324,335,350,366,434,435,489,490,491,492,554,751,780,],[205,229,331,355,331,331,331,331,331,331,575,579,583,586,331,331,331,]),'DOUBLECLASS':([101,103,169,211,324,335,350,366,434,435,489,490,491,493,554,751,780,],[206,230,330,354,330,330,488,330,330,330,574,578,582,590,330,330,330,]),'STRINGCLASS':([101,103,169,211,324,335,350,356,366,367,434,435,490,491,492,493,554,751,780,],[207,231,326,351,326,326,326,495,326,518,326,326,576,580,584,588,326,326,326,]),'CHARCLASS':([101,103,169,324,335,350,356,366,367,434,435,554,751,780,],[208,232,325,325,325,325,494,325,517,325,325,325,325,325,]),'BOOLCLASS':([101,103,169,324,335,350,366,434,435,554,751,780,],[209,233,327,327,327,327,327,327,327,327,327,327,]),'ITERATOR':([122,265,],[266,402,]),'CORCHETE_I':([210,212,234,235,332,333,718,743,],[350,356,366,367,434,435,751,780,]),'SUBGUION':([274,277,280,283,286,289,292,],[407,407,407,407,407,407,407,]),'CORCHETE_D':([325,326,327,328,329,330,331,486,487,488,494,495,516,517,518,555,556,622,623,787,816,],[-97,-98,-99,-100,-101,-102,-103,569,570,571,592,593,596,597,598,622,623,-104,-105,821,846,]),'TO_INT':([337,338,342,560,563,564,567,],[440,445,440,445,445,445,445,]),'TO_DOUBLE':([337,338,342,567,],[441,447,441,447,]),'TO_FLOAT':([337,338,342,564,567,],[442,446,442,446,446,]),'TO_LONG':([337,338,342,560,564,567,],[443,444,443,444,444,444,]),'TO':([404,521,],[523,601,]),'UNTIL':([404,521,],[524,602,]),'NEW':([625,650,],[675,700,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,46,],[1,86,]),'cuerpo':([0,6,10,11,12,13,14,15,46,68,],[4,48,49,50,51,52,53,57,4,125,]),'funcion':([0,6,10,11,12,13,14,15,46,68,],[6,6,6,6,6,6,6,6,6,6,]),'funcall':([0,6,10,11,12,13,14,15,46,68,92,100,102,150,151,152,153,154,155,156,157,158,159,160,166,317,319,368,405,409,410,411,412,413,414,415,430,431,528,531,545,550,603,615,620,653,707,708,747,748,],[7,7,7,7,7,7,7,7,7,7,152,201,201,152,152,152,152,152,152,152,152,152,152,152,152,201,152,152,152,534,534,534,534,534,534,534,152,152,534,152,152,201,152,201,201,152,152,152,152,152,]),'impresion':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,409,410,411,412,413,414,415,430,431,528,531,545,603,653,707,708,747,748,],[8,8,8,8,8,8,8,8,8,8,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,535,535,535,535,535,535,535,153,153,535,153,153,153,153,153,153,153,153,]),'entrada':([0,6,10,11,12,13,14,15,46,68,92,100,102,150,151,152,153,154,155,156,157,158,159,160,166,317,319,368,405,409,410,411,412,413,414,415,430,431,528,531,545,550,603,615,620,653,707,708,747,748,],[9,9,9,9,9,9,9,9,9,9,154,200,200,154,154,154,154,154,154,154,154,154,154,154,154,200,154,154,154,536,536,536,536,536,536,536,154,154,536,154,154,200,154,200,200,154,154,154,154,154,]),'asignacion':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,409,410,411,412,413,414,415,430,431,528,531,545,603,653,707,708,747,748,],[10,10,10,10,10,10,10,10,10,10,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,532,532,532,532,532,532,532,150,150,532,150,150,150,150,150,150,150,150,]),'while':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,430,431,531,545,603,653,707,708,747,748,],[11,11,11,11,11,11,11,11,11,11,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'for':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,430,431,531,545,603,653,707,708,747,748,],[12,12,12,12,12,12,12,12,12,12,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'match':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,430,431,531,545,603,653,707,708,747,748,],[13,13,13,13,13,13,13,13,13,13,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'if':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,430,431,531,545,603,653,707,708,747,748,],[14,14,14,14,14,14,14,14,14,14,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'startsWith':([0,6,10,11,12,13,14,15,45,46,59,60,64,66,68,69,92,100,102,109,143,145,148,150,151,152,153,154,155,156,157,158,159,160,166,174,188,237,241,251,292,317,318,319,339,341,349,357,358,365,368,405,430,431,531,545,546,550,557,603,614,615,653,707,708,747,748,],[15,15,15,15,15,15,15,15,85,15,85,85,85,85,15,85,160,85,85,85,85,85,85,160,160,160,160,160,160,160,160,160,160,160,160,85,85,85,85,85,85,85,85,160,85,85,85,85,85,85,160,160,160,160,160,160,85,85,85,160,85,85,160,160,160,160,160,]),'asignacionLong':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,409,410,411,412,413,414,415,430,431,528,531,545,603,653,707,708,747,748,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'asignacionInt':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,409,410,411,412,413,414,415,430,431,528,531,545,603,653,707,708,747,748,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'asignacionFloat':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,409,410,411,412,413,414,415,430,431,528,531,545,603,653,707,708,747,748,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'asignacionDouble':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,409,410,411,412,413,414,415,430,431,528,531,545,603,653,707,708,747,748,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'asignacionString':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,409,410,411,412,413,414,415,430,431,528,531,545,603,653,707,708,747,748,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'asignacionChar':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,409,410,411,412,413,414,415,430,431,528,531,545,603,653,707,708,747,748,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'asignacionBoolean':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,409,410,411,412,413,414,415,430,431,528,531,545,603,653,707,708,747,748,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'array':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,409,410,411,412,413,414,415,430,431,528,531,545,603,653,707,708,747,748,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'list':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,409,410,411,412,413,414,415,430,431,528,531,545,603,653,707,708,747,748,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'asignacionSumInt':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,409,410,411,412,413,414,415,430,431,528,531,545,603,653,707,708,747,748,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'asignacionSumDouble':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,409,410,411,412,413,414,415,430,431,528,531,545,603,653,707,708,747,748,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'asignacionSumString':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,409,410,411,412,413,414,415,430,431,528,531,545,603,653,707,708,747,748,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'arrayInt':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,409,410,411,412,413,414,415,430,431,528,531,545,603,653,707,708,747,748,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'arrayDouble':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,409,410,411,412,413,414,415,430,431,528,531,545,603,653,707,708,747,748,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'listChar':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,409,410,411,412,413,414,415,430,431,528,531,545,603,653,707,708,747,748,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'listString':([0,6,10,11,12,13,14,15,46,68,92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,409,410,411,412,413,414,415,430,431,528,531,545,603,653,707,708,747,748,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'varparen':([3,161,176,213,420,537,616,663,671,],[43,43,43,43,43,43,43,43,43,]),'io':([5,],[46,]),'elseif':([14,54,88,158,661,],[54,88,88,54,710,]),'else':([14,54,88,158,],[55,89,89,55,]),'valores':([45,69,145,188,318,339,341,357,358,546,],[71,126,300,340,71,448,450,496,497,71,]),'valor':([45,59,60,69,145,174,188,317,318,339,341,357,358,546,550,557,614,615,],[73,97,97,73,73,97,73,421,73,73,73,73,73,73,617,624,662,664,]),'numeros':([45,59,60,64,66,69,92,100,102,109,145,148,150,151,152,153,154,155,156,157,158,159,160,166,174,188,237,241,242,255,256,257,258,317,318,319,339,341,357,358,368,405,430,431,531,545,546,550,557,603,614,615,653,707,708,747,748,],[77,77,77,110,110,77,162,162,162,110,77,110,162,162,162,162,162,162,162,162,162,162,162,162,77,77,110,371,376,379,383,386,388,426,77,162,77,77,77,77,162,162,162,162,162,162,77,426,77,162,77,426,162,162,162,162,162,]),'booleanos':([45,59,60,64,66,69,100,102,109,143,145,148,174,188,237,241,251,292,317,318,339,341,349,357,358,365,546,550,557,614,615,],[78,78,78,107,107,78,186,223,253,299,78,107,78,78,107,372,377,299,78,78,78,78,485,78,78,515,78,78,78,78,78,]),'parametro':([58,],[93,]),'parametros':([58,334,],[94,437,]),'valorI':([59,60,174,],[96,98,336,]),'condicional':([64,66,148,237,],[104,123,304,369,]),'valorC':([64,66,148,237,],[105,105,105,105,]),'relacional':([64,66,109,148,237,],[108,108,254,108,108,]),'aritmetica':([64,66,92,100,102,109,148,150,151,152,153,154,155,156,157,158,159,160,166,237,255,257,317,319,368,405,430,431,531,545,550,603,615,653,707,708,747,748,],[111,111,159,177,214,111,111,159,159,159,159,159,159,159,159,159,159,159,159,111,380,385,423,159,159,159,159,159,159,159,619,159,666,159,159,159,159,159,]),'suma':([64,66,92,100,102,109,148,150,151,152,153,154,155,156,157,158,159,160,166,237,255,257,317,319,368,405,430,431,531,545,550,603,615,653,707,708,747,748,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'sumIntChar':([64,66,92,100,102,109,148,150,151,152,153,154,155,156,157,158,159,160,166,237,255,257,317,319,344,360,368,405,430,431,531,545,550,603,615,653,707,708,747,748,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,460,502,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'sumStringChar':([64,66,92,100,102,109,148,150,151,152,153,154,155,156,157,158,159,160,166,237,255,257,317,319,347,363,368,405,430,431,531,545,550,603,615,653,707,708,747,748,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,480,511,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'sumIntDouble':([64,66,92,100,102,109,148,150,151,152,153,154,155,156,157,158,159,160,166,237,255,257,317,319,346,362,368,405,430,431,531,545,550,603,615,653,707,708,747,748,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,471,507,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'sumDoubleChar':([64,66,92,100,102,109,148,150,151,152,153,154,155,156,157,158,159,160,166,237,255,257,317,319,346,362,368,405,430,431,531,545,550,603,615,653,707,708,747,748,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,472,508,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'cases':([70,],[128,]),'casesInt':([70,136,],[129,272,]),'casesLgn':([70,137,],[130,275,]),'casesFlt':([70,138,],[131,278,]),'casesDob':([70,139,],[132,281,]),'casesStr':([70,140,],[133,284,]),'casesChar':([70,141,],[134,287,]),'casesBool':([70,142,],[135,290,]),'caseInt':([70,136,],[136,136,]),'caseLgn':([70,137,],[137,137,]),'caseFlt':([70,138,],[138,138,]),'caseDob':([70,139,],[139,139,]),'caseStr':([70,140,],[140,140,]),'caseChar':([70,141,],[141,141,]),'caseBool':([70,142,],[142,142,]),'contenido':([92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,430,431,531,545,603,653,707,708,747,748,],[149,306,307,308,309,310,311,312,313,314,315,316,320,428,519,525,549,551,609,611,656,703,749,750,783,784,]),'reasignacion':([92,150,151,152,153,154,155,156,157,158,159,160,166,319,368,405,409,410,411,412,413,414,415,430,431,528,531,545,603,653,707,708,747,748,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,533,533,533,533,533,533,533,151,151,533,151,151,151,151,151,151,151,151,]),'dectipo':([93,],[167,]),'dectipoTupla':([93,],[168,]),'declaracion':([95,436,],[171,171,]),'returnfun':([100,102,317,550,615,620,],[178,215,422,618,665,673,]),'tuple':([100,102,620,],[179,216,672,]),'longvalues':([100,102,343,345,346,359,361,362,],[180,217,453,467,467,499,467,467,]),'intvalues':([100,102,343,344,345,346,359,360,361,362,],[181,218,455,459,455,455,455,501,455,455,]),'floatvalues':([100,102,345,346,361,362,],[182,219,465,474,504,474,]),'doublevalues':([100,102,346,362,],[183,220,470,506,]),'returnCastable':([100,102,317,550,615,620,],[190,190,190,190,190,190,]),'castingcall':([100,102,317,550,615,620,],[191,191,191,191,191,191,]),'stringCastLong':([100,102,343,345,346,359,361,362,],[193,193,193,193,193,193,193,193,]),'stringCastInt':([100,102,343,344,345,346,359,360,361,362,],[195,195,195,195,195,195,195,195,195,195,]),'stringCastFloat':([100,102,345,346,361,362,],[197,197,197,197,197,197,]),'stringCastDouble':([100,102,346,362,],[199,199,199,199,]),'dectupla':([101,103,],[202,226,]),'logicos':([105,],[237,]),'comparacion':([106,107,110,111,112,113,252,253,],[241,251,255,257,259,261,241,251,]),'aritmeticos':([106,110,111,159,161,162,176,177,213,214,252,379,380,381,385,386,387,420,423,426,616,619,663,666,],[242,256,258,258,242,256,242,258,242,258,242,256,258,242,258,256,242,242,258,256,242,258,242,258,]),'defcase':([136,137,138,139,140,141,142,],[273,276,279,282,285,288,291,]),'tipo':([169,324,335,350,366,434,435,554,751,780,],[323,433,438,486,516,555,556,621,787,816,]),'tipos':([324,],[432,]),'castingfun':([337,342,],[439,451,]),'codeBlock':([409,410,411,412,413,414,415,528,],[529,538,539,540,541,542,543,608,]),'contenidoLine':([409,410,411,412,413,414,415,528,],[530,530,530,530,530,530,530,530,]),'tiposentry':([433,621,],[553,674,]),'valoresInt':([719,],[752,]),'valoresDouble':([720,],[754,]),'valoresChar':([741,744,],[776,781,]),'valoresString':([742,745,],[778,782,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D','inicio',5,'p_inicio','sintax.py',13),
  ('inicio -> IMPORT io inicio','inicio',3,'p_inicio','sintax.py',14),
  ('inicio -> cuerpo','inicio',1,'p_inicio','sintax.py',15),
  ('io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE','io',7,'p_io','sintax.py',20),
  ('cuerpo -> funcion','cuerpo',1,'p_cuerpo','sintax.py',23),
  ('cuerpo -> funcall','cuerpo',1,'p_cuerpo','sintax.py',24),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintax.py',25),
  ('cuerpo -> entrada','cuerpo',1,'p_cuerpo','sintax.py',26),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintax.py',27),
  ('cuerpo -> while','cuerpo',1,'p_cuerpo','sintax.py',28),
  ('cuerpo -> for','cuerpo',1,'p_cuerpo','sintax.py',29),
  ('cuerpo -> match','cuerpo',1,'p_cuerpo','sintax.py',30),
  ('cuerpo -> if','cuerpo',1,'p_cuerpo','sintax.py',31),
  ('cuerpo -> startsWith','cuerpo',1,'p_cuerpo','sintax.py',32),
  ('cuerpo -> funcion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',33),
  ('cuerpo -> asignacion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',34),
  ('cuerpo -> while cuerpo','cuerpo',2,'p_cuerpo','sintax.py',35),
  ('cuerpo -> for cuerpo','cuerpo',2,'p_cuerpo','sintax.py',36),
  ('cuerpo -> if cuerpo','cuerpo',2,'p_cuerpo','sintax.py',37),
  ('cuerpo -> match cuerpo','cuerpo',2,'p_cuerpo','sintax.py',38),
  ('cuerpo -> startsWith cuerpo','cuerpo',2,'p_cuerpo','sintax.py',39),
  ('contenido -> asignacion','contenido',1,'p_contenido','sintax.py',43),
  ('contenido -> reasignacion','contenido',1,'p_contenido','sintax.py',44),
  ('contenido -> funcall','contenido',1,'p_contenido','sintax.py',45),
  ('contenido -> impresion','contenido',1,'p_contenido','sintax.py',46),
  ('contenido -> entrada','contenido',1,'p_contenido','sintax.py',47),
  ('contenido -> while','contenido',1,'p_contenido','sintax.py',48),
  ('contenido -> for','contenido',1,'p_contenido','sintax.py',49),
  ('contenido -> match','contenido',1,'p_contenido','sintax.py',50),
  ('contenido -> if','contenido',1,'p_contenido','sintax.py',51),
  ('contenido -> aritmetica','contenido',1,'p_contenido','sintax.py',52),
  ('contenido -> startsWith','contenido',1,'p_contenido','sintax.py',53),
  ('contenido -> asignacion contenido','contenido',2,'p_contenido','sintax.py',54),
  ('contenido -> reasignacion contenido','contenido',2,'p_contenido','sintax.py',55),
  ('contenido -> funcall contenido','contenido',2,'p_contenido','sintax.py',56),
  ('contenido -> impresion contenido','contenido',2,'p_contenido','sintax.py',57),
  ('contenido -> entrada contenido','contenido',2,'p_contenido','sintax.py',58),
  ('contenido -> while contenido','contenido',2,'p_contenido','sintax.py',59),
  ('contenido -> for contenido','contenido',2,'p_contenido','sintax.py',60),
  ('contenido -> if contenido','contenido',2,'p_contenido','sintax.py',61),
  ('contenido -> match contenido','contenido',2,'p_contenido','sintax.py',62),
  ('contenido -> aritmetica contenido','contenido',2,'p_contenido','sintax.py',63),
  ('contenido -> startsWith contenido','contenido',2,'p_contenido','sintax.py',64),
  ('contenidoLine -> asignacion','contenidoLine',1,'p_contenidoLine','sintax.py',68),
  ('contenidoLine -> reasignacion','contenidoLine',1,'p_contenidoLine','sintax.py',69),
  ('contenidoLine -> funcall','contenidoLine',1,'p_contenidoLine','sintax.py',70),
  ('contenidoLine -> impresion','contenidoLine',1,'p_contenidoLine','sintax.py',71),
  ('contenidoLine -> entrada','contenidoLine',1,'p_contenidoLine','sintax.py',72),
  ('asignacion -> VAR VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',76),
  ('asignacion -> VAL VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',77),
  ('asignacion -> VAR VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',78),
  ('asignacion -> VAL VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',79),
  ('asignacion -> VAR VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',80),
  ('asignacion -> VAL VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',81),
  ('asignacion -> asignacionLong','asignacion',1,'p_asignacion','sintax.py',82),
  ('asignacion -> asignacionInt','asignacion',1,'p_asignacion','sintax.py',83),
  ('asignacion -> asignacionFloat','asignacion',1,'p_asignacion','sintax.py',84),
  ('asignacion -> asignacionDouble','asignacion',1,'p_asignacion','sintax.py',85),
  ('asignacion -> asignacionString','asignacion',1,'p_asignacion','sintax.py',86),
  ('asignacion -> asignacionChar','asignacion',1,'p_asignacion','sintax.py',87),
  ('asignacion -> asignacionBoolean','asignacion',1,'p_asignacion','sintax.py',88),
  ('asignacion -> array','asignacion',1,'p_asignacion','sintax.py',89),
  ('asignacion -> list','asignacion',1,'p_asignacion','sintax.py',90),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',93),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',94),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',97),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',98),
  ('asignacionInt -> asignacionSumInt','asignacionInt',1,'p_asignacionInt','sintax.py',99),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',102),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',103),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',106),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',107),
  ('asignacionDouble -> asignacionSumDouble','asignacionDouble',1,'p_asignacionDouble','sintax.py',108),
  ('asignacionString -> VAR VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',111),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',112),
  ('asignacionString -> VAL VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',113),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',114),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',115),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',116),
  ('asignacionString -> asignacionSumString','asignacionString',1,'p_asignacionString','sintax.py',117),
  ('asignacionChar -> VAR VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',120),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',121),
  ('asignacionChar -> VAL VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',122),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',123),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',124),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',125),
  ('asignacionBoolean -> VAR VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',128),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',129),
  ('asignacionBoolean -> VAL VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',130),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',131),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',132),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',133),
  ('reasignacion -> VARIABLE IGUAL valor','reasignacion',3,'p_reasignacion','sintax.py',137),
  ('reasignacion -> VARIABLE IGUAL returnfun','reasignacion',3,'p_reasignacion','sintax.py',138),
  ('reasignacion -> VARIABLE IGUAL aritmetica','reasignacion',3,'p_reasignacion','sintax.py',139),
  ('reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor','reasignacion',6,'p_reasignacion','sintax.py',140),
  ('tipo -> CHARCLASS','tipo',1,'p_tipo','sintax.py',143),
  ('tipo -> STRINGCLASS','tipo',1,'p_tipo','sintax.py',144),
  ('tipo -> BOOLCLASS','tipo',1,'p_tipo','sintax.py',145),
  ('tipo -> INTCLASS','tipo',1,'p_tipo','sintax.py',146),
  ('tipo -> LONGCLASS','tipo',1,'p_tipo','sintax.py',147),
  ('tipo -> DOUBLECLASS','tipo',1,'p_tipo','sintax.py',148),
  ('tipo -> FLOATCLASS','tipo',1,'p_tipo','sintax.py',149),
  ('tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',150),
  ('tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',151),
  ('valor -> STRING','valor',1,'p_valor','sintax.py',154),
  ('valor -> CHAR','valor',1,'p_valor','sintax.py',155),
  ('valor -> VARIABLE','valor',1,'p_valor','sintax.py',156),
  ('valor -> numeros','valor',1,'p_valor','sintax.py',157),
  ('valor -> booleanos','valor',1,'p_valor','sintax.py',158),
  ('valor -> VARIABLE PAR_I VARIABLE PAR_D','valor',4,'p_valor','sintax.py',159),
  ('valor -> VARIABLE PAR_I INT PAR_D','valor',4,'p_valor','sintax.py',160),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintax.py',163),
  ('booleanos -> FLASE','booleanos',1,'p_booleanos','sintax.py',164),
  ('booleanos -> startsWith','booleanos',1,'p_booleanos','sintax.py',165),
  ('numeros -> INT','numeros',1,'p_numeros','sintax.py',168),
  ('numeros -> LONG','numeros',1,'p_numeros','sintax.py',169),
  ('numeros -> FLOAT','numeros',1,'p_numeros','sintax.py',170),
  ('numeros -> DOUBLE','numeros',1,'p_numeros','sintax.py',171),
  ('funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D','funcion',7,'p_funcion','sintax.py',176),
  ('funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D','funcion',6,'p_funcion','sintax.py',177),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo','declaracion',3,'p_declaracion','sintax.py',182),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor','declaracion',5,'p_declaracion_defecto','sintax.py',185),
  ('parametro -> parametros','parametro',1,'p_parametro','sintax.py',188),
  ('parametro -> PAR_I PAR_D','parametro',2,'p_parametro','sintax.py',189),
  ('parametros -> PAR_I declaracion PAR_D','parametros',3,'p_parametros','sintax.py',192),
  ('parametros -> PAR_I declaracion PAR_D parametros','parametros',4,'p_parametros','sintax.py',193),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D','funcion',10,'p_funcion_return','sintax.py',198),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_return','sintax.py',199),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_return','sintax.py',200),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D','funcion',10,'p_funcion_return','sintax.py',201),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',204),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',205),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',206),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',207),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',210),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',211),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',212),
  ('dectipo -> DOBLE_PUNTO tipo','dectipo',2,'p_dectipo','sintax.py',215),
  ('dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D','dectipoTupla',4,'p_dectipoTupla','sintax.py',218),
  ('tipos -> tipo','tipos',1,'p_tipos','sintax.py',221),
  ('tipos -> tipo tiposentry','tipos',2,'p_tipos','sintax.py',222),
  ('tiposentry -> COMA tipo','tiposentry',2,'p_tipoentry','sintax.py',225),
  ('tiposentry -> COMA tipo tiposentry','tiposentry',3,'p_tipoentry','sintax.py',226),
  ('impresion -> PRINTLN PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',231),
  ('impresion -> PRINT PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',232),
  ('valorI -> valor MAS valorI','valorI',3,'p_valorI','sintax.py',235),
  ('valorI -> valor','valorI',1,'p_valorI','sintax.py',236),
  ('entrada -> READLINE PAR_I PAR_D','entrada',3,'p_entrada','sintax.py',241),
  ('funcall -> VARIABLE varparen','funcall',2,'p_funcall','sintax.py',245),
  ('varparen -> PAR_I valores PAR_D','varparen',3,'p_varparen','sintax.py',248),
  ('varparen -> PAR_I PAR_D','varparen',2,'p_varparen','sintax.py',249),
  ('varparen -> varparen PAR_I valores PAR_D','varparen',4,'p_varparen','sintax.py',250),
  ('varparen -> varparen PAR_I PAR_D','varparen',3,'p_varparen','sintax.py',251),
  ('returnfun -> returnCastable','returnfun',1,'p_returnfun','sintax.py',254),
  ('returnfun -> castingcall','returnfun',1,'p_returnfun','sintax.py',255),
  ('returnCastable -> entrada','returnCastable',1,'p_returnCastable','sintax.py',258),
  ('returnCastable -> funcall','returnCastable',1,'p_returnCastable','sintax.py',259),
  ('castingcall -> returnCastable PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',264),
  ('castingcall -> VARIABLE PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',265),
  ('castingfun -> TO_INT','castingfun',1,'p_castingfun','sintax.py',269),
  ('castingfun -> TO_DOUBLE','castingfun',1,'p_castingfun','sintax.py',270),
  ('castingfun -> TO_FLOAT','castingfun',1,'p_castingfun','sintax.py',271),
  ('castingfun -> TO_LONG','castingfun',1,'p_castingfun','sintax.py',272),
  ('array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',277),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',278),
  ('array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',279),
  ('array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',280),
  ('array -> arrayInt','array',1,'p_array','sintax.py',281),
  ('array -> arrayDouble','array',1,'p_array','sintax.py',282),
  ('list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D','list',7,'p_list','sintax.py',286),
  ('list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D','list',7,'p_list','sintax.py',287),
  ('list -> listChar','list',1,'p_list','sintax.py',288),
  ('list -> listString','list',1,'p_list','sintax.py',289),
  ('valores -> valor','valores',1,'p_valores','sintax.py',293),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintax.py',294),
  ('tuple -> PAR_I valores PAR_D','tuple',3,'p_tuple','sintax.py',298),
  ('asignacion -> VAR VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',301),
  ('asignacion -> VAL VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',302),
  ('while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','while',7,'p_while','sintax.py',310),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',10,'p_for','sintax.py',314),
  ('for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',9,'p_for','sintax.py',315),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',316),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',317),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',318),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',319),
  ('match -> VARIABLE MATCH LLAVE_I cases LLAVE_D','match',5,'p_match','sintax.py',323),
  ('cases -> casesInt','cases',1,'p_cases','sintax.py',326),
  ('cases -> casesLgn','cases',1,'p_cases','sintax.py',327),
  ('cases -> casesFlt','cases',1,'p_cases','sintax.py',328),
  ('cases -> casesDob','cases',1,'p_cases','sintax.py',329),
  ('cases -> casesStr','cases',1,'p_cases','sintax.py',330),
  ('cases -> casesChar','cases',1,'p_cases','sintax.py',331),
  ('cases -> casesBool','cases',1,'p_cases','sintax.py',332),
  ('caseInt -> CASE INT FUNCION_FLECHA codeBlock','caseInt',4,'p_caseInt','sintax.py',335),
  ('casesInt -> caseInt','casesInt',1,'p_casesInt','sintax.py',338),
  ('casesInt -> caseInt casesInt','casesInt',2,'p_casesInt','sintax.py',339),
  ('casesInt -> caseInt defcase','casesInt',2,'p_casesInt','sintax.py',340),
  ('caseLgn -> CASE LONG FUNCION_FLECHA codeBlock','caseLgn',4,'p_caseLgn','sintax.py',343),
  ('casesLgn -> caseLgn','casesLgn',1,'p_casesLgn','sintax.py',346),
  ('casesLgn -> caseLgn casesLgn','casesLgn',2,'p_casesLgn','sintax.py',347),
  ('casesLgn -> caseLgn defcase','casesLgn',2,'p_casesLgn','sintax.py',348),
  ('caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock','caseFlt',4,'p_caseFlt','sintax.py',351),
  ('casesFlt -> caseFlt','casesFlt',1,'p_casesFlt','sintax.py',354),
  ('casesFlt -> caseFlt casesFlt','casesFlt',2,'p_casesFlt','sintax.py',355),
  ('casesFlt -> caseFlt defcase','casesFlt',2,'p_casesFlt','sintax.py',356),
  ('caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock','caseDob',4,'p_caseDob','sintax.py',359),
  ('casesDob -> caseDob','casesDob',1,'p_casesDob','sintax.py',362),
  ('casesDob -> caseDob casesDob','casesDob',2,'p_casesDob','sintax.py',363),
  ('casesDob -> caseDob defcase','casesDob',2,'p_casesDob','sintax.py',364),
  ('caseStr -> CASE STRING FUNCION_FLECHA codeBlock','caseStr',4,'p_caseStr','sintax.py',367),
  ('casesStr -> caseStr','casesStr',1,'p_casesStr','sintax.py',370),
  ('casesStr -> caseStr casesStr','casesStr',2,'p_casesStr','sintax.py',371),
  ('casesStr -> caseStr defcase','casesStr',2,'p_casesStr','sintax.py',372),
  ('caseChar -> CASE CHAR FUNCION_FLECHA codeBlock','caseChar',4,'p_caseChar','sintax.py',375),
  ('casesChar -> caseChar','casesChar',1,'p_casesChar','sintax.py',378),
  ('casesChar -> caseChar casesChar','casesChar',2,'p_casesChar','sintax.py',379),
  ('casesChar -> caseChar defcase','casesChar',2,'p_casesChar','sintax.py',380),
  ('caseBool -> CASE booleanos FUNCION_FLECHA codeBlock','caseBool',4,'p_caseBool','sintax.py',383),
  ('casesBool -> caseBool','casesBool',1,'p_casesBool','sintax.py',386),
  ('casesBool -> caseBool casesBool','casesBool',2,'p_casesBool','sintax.py',387),
  ('casesBool -> caseBool defcase','casesBool',2,'p_casesBool','sintax.py',388),
  ('defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock','defcase',4,'p_defcase','sintax.py',392),
  ('codeBlock -> contenidoLine','codeBlock',1,'p_codeBlock','sintax.py',395),
  ('codeBlock -> LLAVE_I contenido LLAVE_D','codeBlock',3,'p_codeBlock','sintax.py',396),
  ('if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','if',7,'p_if','sintax.py',400),
  ('if -> if elseif','if',2,'p_if','sintax.py',401),
  ('if -> if else','if',2,'p_if','sintax.py',402),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','elseif',8,'p_elseif','sintax.py',406),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif','elseif',9,'p_elseif','sintax.py',407),
  ('else -> ELSE LLAVE_I contenido LLAVE_D','else',4,'p_else','sintax.py',410),
  ('else -> elseif else','else',2,'p_else','sintax.py',411),
  ('condicional -> valorC logicos condicional','condicional',3,'p_condicional','sintax.py',415),
  ('condicional -> valorC','condicional',1,'p_condicional','sintax.py',416),
  ('valorC -> VARIABLE','valorC',1,'p_valorC','sintax.py',419),
  ('valorC -> booleanos','valorC',1,'p_valorC','sintax.py',420),
  ('valorC -> relacional','valorC',1,'p_valorC','sintax.py',421),
  ('valorC -> NOT VARIABLE','valorC',2,'p_valorC','sintax.py',422),
  ('valorC -> NOT booleanos','valorC',2,'p_valorC','sintax.py',423),
  ('valorC -> NOT relacional','valorC',2,'p_valorC','sintax.py',424),
  ('logicos -> AND','logicos',1,'p_logicos','sintax.py',427),
  ('logicos -> OR','logicos',1,'p_logicos','sintax.py',428),
  ('logicos -> NOT','logicos',1,'p_logicos','sintax.py',429),
  ('relacional -> numeros comparacion numeros','relacional',3,'p_relacional','sintax.py',434),
  ('relacional -> aritmetica comparacion aritmetica','relacional',3,'p_relacional','sintax.py',435),
  ('relacional -> aritmetica comparacion numeros','relacional',3,'p_relacional','sintax.py',436),
  ('relacional -> numeros comparacion aritmetica','relacional',3,'p_relacional','sintax.py',437),
  ('relacional -> booleanos comparacion booleanos','relacional',3,'p_relacional','sintax.py',438),
  ('relacional -> STRING comparacion STRING','relacional',3,'p_relacional','sintax.py',439),
  ('relacional -> CHAR comparacion CHAR','relacional',3,'p_relacional','sintax.py',440),
  ('relacional -> VARIABLE comparacion numeros','relacional',3,'p_relacional','sintax.py',441),
  ('relacional -> numeros comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',442),
  ('relacional -> VARIABLE comparacion booleanos','relacional',3,'p_relacional','sintax.py',443),
  ('relacional -> booleanos comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',444),
  ('relacional -> VARIABLE comparacion STRING','relacional',3,'p_relacional','sintax.py',445),
  ('relacional -> STRING comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',446),
  ('relacional -> VARIABLE comparacion CHAR','relacional',3,'p_relacional','sintax.py',447),
  ('relacional -> CHAR comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',448),
  ('relacional -> VARIABLE comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',449),
  ('comparacion -> IGUAL_COMPARACION','comparacion',1,'p_comparacion','sintax.py',452),
  ('comparacion -> DIFERENTE','comparacion',1,'p_comparacion','sintax.py',453),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion','sintax.py',454),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion','sintax.py',455),
  ('aritmetica -> numeros aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',459),
  ('aritmetica -> VARIABLE aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',460),
  ('aritmetica -> numeros aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',461),
  ('aritmetica -> VARIABLE aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',462),
  ('aritmetica -> aritmetica aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',463),
  ('aritmetica -> aritmetica aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',464),
  ('aritmetica -> suma','aritmetica',1,'p_aritmetica','sintax.py',465),
  ('aritmeticos -> MENOS','aritmeticos',1,'p_aritmeticos','sintax.py',468),
  ('aritmeticos -> MULTIPLICACION','aritmeticos',1,'p_aritmeticos','sintax.py',469),
  ('aritmeticos -> DIVISION','aritmeticos',1,'p_aritmeticos','sintax.py',470),
  ('aritmeticos -> MOD','aritmeticos',1,'p_aritmeticos','sintax.py',471),
  ('arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D','arrayInt',12,'p_arrayInt','sintax.py',476),
  ('arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D','arrayDouble',12,'p_arrayDouble','sintax.py',479),
  ('valoresInt -> INT','valoresInt',1,'p_valoresInt','sintax.py',482),
  ('valoresInt -> valoresInt COMA INT','valoresInt',3,'p_valoresInt','sintax.py',483),
  ('valoresDouble -> DOUBLE','valoresDouble',1,'p_valoresDouble','sintax.py',486),
  ('valoresDouble -> valoresDouble COMA DOUBLE','valoresDouble',3,'p_valoresDouble','sintax.py',487),
  ('startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D','startsWith',6,'p_startsWith','sintax.py',491),
  ('startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D','startsWith',8,'p_startsWith','sintax.py',492),
  ('listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D','listString',12,'p_listString','sintax.py',506),
  ('listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D','listString',12,'p_listString','sintax.py',507),
  ('listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D','listChar',12,'p_listChar','sintax.py',510),
  ('listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D','listChar',12,'p_listChar','sintax.py',511),
  ('valoresString -> STRING','valoresString',1,'p_valoresString','sintax.py',514),
  ('valoresString -> valoresString COMA STRING','valoresString',3,'p_valoresString','sintax.py',515),
  ('valoresChar -> CHAR','valoresChar',1,'p_valoresChar','sintax.py',518),
  ('valoresChar -> valoresChar COMA CHAR','valoresChar',3,'p_valoresChar','sintax.py',519),
  ('suma -> sumIntChar','suma',1,'p_suma','sintax.py',523),
  ('suma -> sumStringChar','suma',1,'p_suma','sintax.py',524),
  ('suma -> sumIntDouble','suma',1,'p_suma','sintax.py',525),
  ('suma -> sumDoubleChar','suma',1,'p_suma','sintax.py',526),
  ('sumIntDouble -> INT MAS DOUBLE','sumIntDouble',3,'p_sumIntDouble','sintax.py',529),
  ('sumIntDouble -> DOUBLE MAS INT','sumIntDouble',3,'p_sumIntDouble','sintax.py',530),
  ('sumDoubleChar -> DOUBLE MAS CHAR','sumDoubleChar',3,'p_sumDoubleChar','sintax.py',535),
  ('sumDoubleChar -> CHAR MAS DOUBLE','sumDoubleChar',3,'p_sumDoubleChar','sintax.py',536),
  ('sumIntChar -> INT MAS CHAR','sumIntChar',3,'p_sumIntChar','sintax.py',544),
  ('sumIntChar -> CHAR MAS INT','sumIntChar',3,'p_sumIntChar','sintax.py',545),
  ('sumStringChar -> STRING MAS CHAR','sumStringChar',3,'p_sumStringChar','sintax.py',553),
  ('sumStringChar -> CHAR MAS STRING','sumStringChar',3,'p_sumStringChar','sintax.py',554),
  ('asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble','asignacionSumDouble',6,'p_asignacionSumDouble','sintax.py',559),
  ('asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble','asignacionSumDouble',6,'p_asignacionSumDouble','sintax.py',560),
  ('asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar','asignacionSumDouble',6,'p_asignacionSumDouble','sintax.py',561),
  ('asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar','asignacionSumDouble',6,'p_asignacionSumDouble','sintax.py',562),
  ('asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar','asignacionSumString',6,'p_asignacionSumString','sintax.py',565),
  ('asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar','asignacionSumString',6,'p_asignacionSumString','sintax.py',566),
  ('asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar','asignacionSumInt',6,'p_asignacionSumInt','sintax.py',569),
  ('asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar','asignacionSumInt',6,'p_asignacionSumInt','sintax.py',570),
  ('asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla','asignacion',4,'p_asignacion_tupla','sintax.py',574),
  ('asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla','asignacion',4,'p_asignacion_tupla','sintax.py',575),
  ('dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',578),
  ('dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',579),
  ('dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',580),
  ('dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',581),
  ('dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',584),
  ('dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',585),
  ('dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',586),
  ('dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',587),
  ('dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',590),
  ('dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',591),
  ('dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',592),
  ('dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',593),
  ('dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',596),
  ('dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',597),
  ('dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',598),
  ('dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',599),
  ('dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',602),
  ('dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',603),
  ('dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',604),
  ('dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',605),
  ('asignacionInt -> VAR VARIABLE IGUAL intvalues','asignacionInt',4,'p_asignacionInt_cast','sintax.py',610),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues','asignacionInt',6,'p_asignacionInt_cast','sintax.py',611),
  ('asignacionInt -> VAL VARIABLE IGUAL intvalues','asignacionInt',4,'p_asignacionInt_cast','sintax.py',612),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues','asignacionInt',6,'p_asignacionInt_cast','sintax.py',613),
  ('intvalues -> INT','intvalues',1,'p_intvalues','sintax.py',616),
  ('intvalues -> stringCastInt','intvalues',1,'p_intvalues','sintax.py',617),
  ('asignacionLong -> VAR VARIABLE IGUAL longvalues','asignacionLong',4,'p_asignacionLong_cast','sintax.py',620),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues','asignacionLong',6,'p_asignacionLong_cast','sintax.py',621),
  ('asignacionLong -> VAL VARIABLE IGUAL longvalues','asignacionLong',4,'p_asignacionLong_cast','sintax.py',622),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues','asignacionLong',6,'p_asignacionLong_cast','sintax.py',623),
  ('longvalues -> LONG','longvalues',1,'p_longvalues','sintax.py',626),
  ('longvalues -> intvalues','longvalues',1,'p_longvalues','sintax.py',627),
  ('longvalues -> stringCastLong','longvalues',1,'p_longvalues','sintax.py',628),
  ('asignacionFloat -> VAR VARIABLE IGUAL floatvalues','asignacionFloat',4,'p_asignacionFloat_cast','sintax.py',631),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues','asignacionFloat',6,'p_asignacionFloat_cast','sintax.py',632),
  ('asignacionFloat -> VAL VARIABLE IGUAL floatvalues','asignacionFloat',4,'p_asignacionFloat_cast','sintax.py',633),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues','asignacionFloat',6,'p_asignacionFloat_cast','sintax.py',634),
  ('floatvalues -> FLOAT','floatvalues',1,'p_floatvalues','sintax.py',637),
  ('floatvalues -> longvalues','floatvalues',1,'p_floatvalues','sintax.py',638),
  ('floatvalues -> stringCastFloat','floatvalues',1,'p_floatvalues','sintax.py',639),
  ('asignacionDouble -> VAR VARIABLE IGUAL doublevalues','asignacionDouble',4,'p_asignacionDouble_cast','sintax.py',642),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues','asignacionDouble',6,'p_asignacionDouble_cast','sintax.py',643),
  ('asignacionDouble -> VAL VARIABLE IGUAL doublevalues','asignacionDouble',4,'p_asignacionDouble_cast','sintax.py',644),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues','asignacionDouble',6,'p_asignacionDouble_cast','sintax.py',645),
  ('doublevalues -> DOUBLE','doublevalues',1,'p_doublevalues','sintax.py',648),
  ('doublevalues -> floatvalues','doublevalues',1,'p_doublevalues','sintax.py',649),
  ('doublevalues -> stringCastDouble','doublevalues',1,'p_doublevalues','sintax.py',650),
  ('stringCastInt -> STRING PUNTO TO_INT','stringCastInt',3,'p_stringCastInt','sintax.py',659),
  ('stringCastLong -> STRING PUNTO TO_LONG','stringCastLong',3,'p_stringCastLong','sintax.py',675),
  ('stringCastFloat -> STRING PUNTO TO_FLOAT','stringCastFloat',3,'p_stringCastFloat','sintax.py',691),
  ('stringCastDouble -> STRING PUNTO TO_DOUBLE','stringCastDouble',3,'p_stringCastDouble','sintax.py',708),
]

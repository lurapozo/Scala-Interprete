
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARRAYCLASS ARROBA BACKTICK BOOLCLASS CASE CATCH CHAR CHARCLASS CLASS COMA CORCHETE_D CORCHETE_I DEF DIFERENTE DIVISION DO DOBLE_PUNTO DOUBLE DOUBLECLASS ELSE EXTENDS FINAL FINALLY FLASE FLOAT FLOATCLASS FOR FOR_SOME FUNCION_FLECHA HASHTAG IF IGUAL IGUAL_COMPARACION IMPLICIT IMPORT INT INTCLASS ITERATOR LAZY LIBRERIA_IO LISTCLASS LLAVE_D LLAVE_I LONG LONGCLASS MACRO MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MOD MULTIPLICACION NEW NOT NULL OBJECT OR OVERRIDE PACKAGE PAR_D PAR_I PRINT PRINTLN PRIVATE PROTECTED PUNTO READLINE RETURN REVERSE SEALED STRING STRINGCLASS SUBGUION SUPER THIS THROW TO TO_DOUBLE TO_FLOAT TO_INT TO_LONG TRAIT TRUE TRY TYPE UNTIL VAL VAR VARIABLE WHILE WITH YIELDcuerpo : funcion\n  | impresion\n  | entrada\n  | asignacion\n  | while\n  | for\n  | match\n  | if\n  | funcion cuerpo\n  | asignacion cuerpo\n  | while cuerpo\n  | for cuerpo\n  | if cuerpo\n  | match cuerpocontenido : asignacion\n  | impresion\n  | entrada\n  | while\n  | for\n  | match\n  | if\n  | aritmetica\n  | asignacion contenido\n  | impresion contenido\n  | entrada contenido\n  | while contenido\n  | for contenido\n  | if contenido\n  | match contenido\n  | aritmetica contenidocontenidoLine : asignacion\n  | impresion\n  | entradaasignacion : VAR VARIABLE IGUAL VARIABLE\n  | VAL VARIABLE IGUAL VARIABLE\n  | VAR VARIABLE IGUAL aritmetica\n  | VAL VARIABLE IGUAL aritmetica\n  | asignacionLong\n  | asignacionInt\n  | asignacionFloat\n  | asignacionDouble\n  | asignacionString\n  | asignacionChar\n  | asignacionBoolean\n  | array\n  | listasignacionLong : VAR VARIABLE IGUAL LONG\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG\n  | VAL VARIABLE IGUAL LONG\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLEasignacionInt : VAR VARIABLE IGUAL INT\n  | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT\n  | VAL VARIABLE IGUAL INT\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT\n  | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLEasignacionFloat : VAR VARIABLE IGUAL FLOAT\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT\n  | VAL VARIABLE IGUAL FLOAT\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLEasignacionDouble : VAR VARIABLE IGUAL DOUBLE\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE\n  | VAL VARIABLE IGUAL DOUBLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLEasignacionString : VAR VARIABLE IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAL VARIABLE IGUAL STRING\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLEasignacionChar : VAR VARIABLE IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAL VARIABLE IGUAL CHAR\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLEasignacionBoolean : VAR VARIABLE IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAL VARIABLE IGUAL booleanos\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLEtipo : CHARCLASS\n  | STRINGCLASS\n  | BOOLCLASS\n  | INTCLASS\n  | LONGCLASS\n  | DOUBLECLASS\n  | FLOATCLASSvalor : STRING\n  | CHAR\n  | VARIABLE\n  | numeros\n  | booleanosbooleanos : TRUE\n  | FLASEnumeros : INT\n  | LONG\n  | FLOAT\n  | DOUBLEfuncion : DEF VARIABLE  parametro  IGUAL LLAVE_I contenido LLAVE_Ddeclaracion : VARIABLE DOBLE_PUNTO tipodeclaracion :  VARIABLE DOBLE_PUNTO tipo IGUAL valor parametro : parametros\n  | PAR_I PAR_D parametros : PAR_I declaracion PAR_D \n    | PAR_I declaracion PAR_D parametrosfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D funcion : DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D dectipo : DOBLE_PUNTO tipo dectipoTupla : DOBLE_PUNTO PAR_I tipos PAR_Dtipos : tipo\n    | tipo tiposentrytiposentry : COMA tipo \n  | COMA tipo tiposentryimpresion : PRINTLN PAR_I valorI PAR_D\n  | PRINT PAR_I valorI PAR_DvalorI : valor MAS valorI\n  | valorentrada : READLINE PAR_I PAR_Darray : VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_Dlist : VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_Dvalores : valor\n  | valor COMA valoreswhile : WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_Dfor : FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_Dmatch : VARIABLE MATCH  LLAVE_I cases LLAVE_Dcases : casesInt\n    | casesLgn\n    | casesFlt\n    | casesDob\n    | casesStr\n    | casesCharcaseInt : CASE INT FUNCION_FLECHA codeBlock casesInt : caseInt \n      | caseInt casesInt\n      | caseInt defcasecaseLgn : CASE LONG FUNCION_FLECHA codeBlock casesLgn : caseLgn \n      | caseLgn casesLgn\n      | caseLgn defcasecaseFlt : CASE FLOAT FUNCION_FLECHA codeBlock casesFlt : caseFlt \n      | caseFlt casesFlt\n      | caseFlt defcasecaseDob : CASE DOUBLE FUNCION_FLECHA codeBlock casesDob : caseDob \n      | caseDob casesDob\n      | caseDob defcasecaseStr : CASE STRING FUNCION_FLECHA codeBlock casesStr : caseStr\n      | caseStr casesStr\n      | caseStr defcasecaseChar : CASE CHAR FUNCION_FLECHA codeBlock casesChar : caseChar\n      | caseChar casesChar\n      | caseChar defcasecaseBool : CASE booleanos FUNCION_FLECHA codeBlock casesBool : caseBool\n      | caseBool casesBool\n      | caseBool defcasedefcase : CASE SUBGUION FUNCION_FLECHA codeBlock codeBlock : contenidoLine\n      | LLAVE_I contenido LLAVE_Dif : IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | if elseif\n  | if else\n  elseif : ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_Delse : ELSE LLAVE_I contenido LLAVE_D\n  | elseif elsecondicional : valorC logicos condicional\n  | valorCvalorC : VARIABLE\n  | booleanos\n  | relacional\n  | NOT VARIABLE\n  | NOT booleanos\n  | NOT relacional\n  logicos : AND\n  | OR\n  | NOTrelacional : numeros comparacion numeros\n  | aritmetica comparacion aritmetica\n  | aritmetica comparacion numeros\n  | numeros comparacion aritmetica\n  | booleanos comparacion booleanos\n  | STRING comparacion STRING\n  | CHAR comparacion CHAR\n  | VARIABLE comparacion numeros\n  | numeros comparacion VARIABLE\n  | VARIABLE comparacion booleanos\n  | booleanos comparacion VARIABLE\n  | VARIABLE comparacion STRING\n  | STRING comparacion VARIABLE\n  | VARIABLE comparacion CHAR\n  | CHAR comparacion VARIABLE\n  | VARIABLE comparacion VARIABLEcomparacion : IGUAL_COMPARACION\n  | DIFERENTE\n  | MAYOR\n  | MENORaritmetica : numeros aritmeticos numeros\n  | VARIABLE aritmeticos numeros\n  | numeros aritmeticos VARIABLE\n  | VARIABLE aritmeticos VARIABLE\n  | aritmetica aritmeticos numeros\n  | aritmetica aritmeticos VARIABLEaritmeticos : MENOS\n  | MAS\n  | MULTIPLICACION\n  | DIVISION\n  | MOD'
    
_lr_action_items = {'DEF':([0,2,5,6,7,8,9,17,18,19,20,21,22,23,24,25,35,36,49,64,65,66,67,68,69,125,126,127,128,129,130,131,132,133,143,144,145,146,147,148,149,150,151,191,214,265,266,272,273,277,278,305,306,307,308,309,310,311,312,313,314,315,316,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,344,363,366,368,375,392,402,405,406,410,420,421,423,424,425,426,429,],[10,10,10,10,10,10,10,-38,-39,-40,-41,-42,-43,-44,-45,-46,-180,-181,-184,-103,-104,-105,-106,-101,-102,-34,-36,-47,-53,-59,-65,-71,-77,-83,-35,-37,-49,-55,-61,-67,-73,-79,-85,-183,-141,-219,-217,-216,-218,-220,-221,-51,-48,-57,-54,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-52,-50,-58,-56,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-107,-127,-130,-134,-179,-182,-136,-114,-115,-135,-137,-138,-128,-131,-139,-140,-129,]),'PRINTLN':([0,2,5,6,7,8,9,17,18,19,20,21,22,23,24,25,35,36,49,52,64,65,66,67,68,69,71,91,92,93,94,95,96,97,98,122,124,125,126,127,128,129,130,131,132,133,143,144,145,146,147,148,149,150,151,191,200,214,258,265,266,272,273,277,278,286,289,290,297,298,299,300,301,302,305,306,307,308,309,310,311,312,313,314,315,316,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,344,351,354,363,366,368,372,375,386,392,402,403,404,405,406,410,411,412,420,421,423,424,425,426,429,],[12,12,12,12,12,12,12,-38,-39,-40,-41,-42,-43,-44,-45,-46,-180,-181,-184,12,-103,-104,-105,-106,-101,-102,-126,12,12,12,12,12,12,12,12,-122,-123,-34,-36,-47,-53,-59,-65,-71,-77,-83,-35,-37,-49,-55,-61,-67,-73,-79,-85,-183,12,-141,12,-219,-217,-216,-218,-220,-221,12,12,12,12,12,12,12,12,12,-51,-48,-57,-54,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-52,-50,-58,-56,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,12,-107,12,12,-127,-130,-134,12,-179,12,-182,-136,12,12,-114,-115,-135,12,12,-137,-138,-128,-131,-139,-140,-129,]),'PRINT':([0,2,5,6,7,8,9,17,18,19,20,21,22,23,24,25,35,36,49,52,64,65,66,67,68,69,71,91,92,93,94,95,96,97,98,122,124,125,126,127,128,129,130,131,132,133,143,144,145,146,147,148,149,150,151,191,200,214,258,265,266,272,273,277,278,286,289,290,297,298,299,300,301,302,305,306,307,308,309,310,311,312,313,314,315,316,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,344,351,354,363,366,368,372,375,386,392,402,403,404,405,406,410,411,412,420,421,423,424,425,426,429,],[13,13,13,13,13,13,13,-38,-39,-40,-41,-42,-43,-44,-45,-46,-180,-181,-184,13,-103,-104,-105,-106,-101,-102,-126,13,13,13,13,13,13,13,13,-122,-123,-34,-36,-47,-53,-59,-65,-71,-77,-83,-35,-37,-49,-55,-61,-67,-73,-79,-85,-183,13,-141,13,-219,-217,-216,-218,-220,-221,13,13,13,13,13,13,13,13,13,-51,-48,-57,-54,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-52,-50,-58,-56,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,13,-107,13,13,-127,-130,-134,13,-179,13,-182,-136,13,13,-114,-115,-135,13,13,-137,-138,-128,-131,-139,-140,-129,]),'READLINE':([0,2,5,6,7,8,9,17,18,19,20,21,22,23,24,25,35,36,49,52,64,65,66,67,68,69,71,91,92,93,94,95,96,97,98,122,124,125,126,127,128,129,130,131,132,133,143,144,145,146,147,148,149,150,151,191,200,214,258,265,266,272,273,277,278,286,289,290,297,298,299,300,301,302,305,306,307,308,309,310,311,312,313,314,315,316,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,344,351,354,363,366,368,372,375,386,392,402,403,404,405,406,410,411,412,420,421,423,424,425,426,429,],[14,14,14,14,14,14,14,-38,-39,-40,-41,-42,-43,-44,-45,-46,-180,-181,-184,14,-103,-104,-105,-106,-101,-102,-126,14,14,14,14,14,14,14,14,-122,-123,-34,-36,-47,-53,-59,-65,-71,-77,-83,-35,-37,-49,-55,-61,-67,-73,-79,-85,-183,14,-141,14,-219,-217,-216,-218,-220,-221,14,14,14,14,14,14,14,14,14,-51,-48,-57,-54,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-52,-50,-58,-56,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,14,-107,14,14,-127,-130,-134,14,-179,14,-182,-136,14,14,-114,-115,-135,14,14,-137,-138,-128,-131,-139,-140,-129,]),'VAR':([0,2,5,6,7,8,9,17,18,19,20,21,22,23,24,25,35,36,46,49,52,64,65,66,67,68,69,71,91,92,93,94,95,96,97,98,122,124,125,126,127,128,129,130,131,132,133,143,144,145,146,147,148,149,150,151,191,200,214,258,265,266,272,273,277,278,286,289,290,297,298,299,300,301,302,305,306,307,308,309,310,311,312,313,314,315,316,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,344,351,354,363,366,368,372,375,386,392,402,403,404,405,406,410,411,412,420,421,423,424,425,426,429,],[15,15,15,15,15,15,15,-38,-39,-40,-41,-42,-43,-44,-45,-46,-180,-181,86,-184,15,-103,-104,-105,-106,-101,-102,-126,15,15,15,15,15,15,15,15,-122,-123,-34,-36,-47,-53,-59,-65,-71,-77,-83,-35,-37,-49,-55,-61,-67,-73,-79,-85,-183,15,-141,15,-219,-217,-216,-218,-220,-221,15,15,15,15,15,15,15,15,15,-51,-48,-57,-54,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-52,-50,-58,-56,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,15,-107,15,15,-127,-130,-134,15,-179,15,-182,-136,15,15,-114,-115,-135,15,15,-137,-138,-128,-131,-139,-140,-129,]),'VAL':([0,2,5,6,7,8,9,17,18,19,20,21,22,23,24,25,35,36,49,52,64,65,66,67,68,69,71,91,92,93,94,95,96,97,98,122,124,125,126,127,128,129,130,131,132,133,143,144,145,146,147,148,149,150,151,191,200,214,258,265,266,272,273,277,278,286,289,290,297,298,299,300,301,302,305,306,307,308,309,310,311,312,313,314,315,316,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,344,351,354,363,366,368,372,375,386,392,402,403,404,405,406,410,411,412,420,421,423,424,425,426,429,],[16,16,16,16,16,16,16,-38,-39,-40,-41,-42,-43,-44,-45,-46,-180,-181,-184,16,-103,-104,-105,-106,-101,-102,-126,16,16,16,16,16,16,16,16,-122,-123,-34,-36,-47,-53,-59,-65,-71,-77,-83,-35,-37,-49,-55,-61,-67,-73,-79,-85,-183,16,-141,16,-219,-217,-216,-218,-220,-221,16,16,16,16,16,16,16,16,16,-51,-48,-57,-54,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-52,-50,-58,-56,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,16,-107,16,16,-127,-130,-134,16,-179,16,-182,-136,16,16,-114,-115,-135,16,16,-137,-138,-128,-131,-139,-140,-129,]),'WHILE':([0,2,5,6,7,8,9,17,18,19,20,21,22,23,24,25,35,36,49,52,64,65,66,67,68,69,71,91,92,93,94,95,96,97,98,122,124,125,126,127,128,129,130,131,132,133,143,144,145,146,147,148,149,150,151,191,200,214,258,265,266,272,273,277,278,286,289,290,305,306,307,308,309,310,311,312,313,314,315,316,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,344,354,363,366,368,372,375,386,392,402,403,404,405,406,410,411,412,420,421,423,424,425,426,429,],[26,26,26,26,26,26,26,-38,-39,-40,-41,-42,-43,-44,-45,-46,-180,-181,-184,26,-103,-104,-105,-106,-101,-102,-126,26,26,26,26,26,26,26,26,-122,-123,-34,-36,-47,-53,-59,-65,-71,-77,-83,-35,-37,-49,-55,-61,-67,-73,-79,-85,-183,26,-141,26,-219,-217,-216,-218,-220,-221,26,26,26,-51,-48,-57,-54,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-52,-50,-58,-56,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,26,-107,26,-127,-130,-134,26,-179,26,-182,-136,26,26,-114,-115,-135,26,26,-137,-138,-128,-131,-139,-140,-129,]),'FOR':([0,2,5,6,7,8,9,17,18,19,20,21,22,23,24,25,35,36,49,52,64,65,66,67,68,69,71,91,92,93,94,95,96,97,98,122,124,125,126,127,128,129,130,131,132,133,143,144,145,146,147,148,149,150,151,191,200,214,258,265,266,272,273,277,278,286,289,290,305,306,307,308,309,310,311,312,313,314,315,316,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,344,354,363,366,368,372,375,386,392,402,403,404,405,406,410,411,412,420,421,423,424,425,426,429,],[27,27,27,27,27,27,27,-38,-39,-40,-41,-42,-43,-44,-45,-46,-180,-181,-184,27,-103,-104,-105,-106,-101,-102,-126,27,27,27,27,27,27,27,27,-122,-123,-34,-36,-47,-53,-59,-65,-71,-77,-83,-35,-37,-49,-55,-61,-67,-73,-79,-85,-183,27,-141,27,-219,-217,-216,-218,-220,-221,27,27,27,-51,-48,-57,-54,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-52,-50,-58,-56,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,27,-107,27,-127,-130,-134,27,-179,27,-182,-136,27,27,-114,-115,-135,27,27,-137,-138,-128,-131,-139,-140,-129,]),'VARIABLE':([0,2,5,6,7,8,9,10,15,16,17,18,19,20,21,22,23,24,25,35,36,40,41,45,46,47,49,52,55,64,65,66,67,68,69,71,72,74,81,86,89,91,92,93,94,95,96,97,98,122,123,124,125,126,127,128,129,130,131,132,133,143,144,145,146,147,148,149,150,151,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,181,182,183,184,185,186,188,191,200,214,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,258,265,266,272,273,277,278,283,286,289,290,293,305,306,307,308,309,310,311,312,313,314,315,316,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,344,350,354,363,364,366,368,372,375,377,378,386,392,402,403,404,405,406,408,409,410,411,412,420,421,423,424,425,426,429,],[11,11,11,11,11,11,11,38,43,44,-38,-39,-40,-41,-42,-43,-44,-45,-46,-180,-181,61,61,78,87,78,-184,99,107,-103,-104,-105,-106,-101,-102,-126,125,143,178,187,78,99,99,99,99,99,99,99,99,-122,61,-123,-34,-36,-47,-53,-59,-65,-71,-77,-83,-35,-37,-49,-55,-61,-67,-73,-79,-85,78,-193,-194,-195,260,265,-212,-213,-214,-215,-222,-223,-224,-225,-226,268,271,273,276,278,280,282,284,-183,99,-141,61,305,307,309,311,313,315,317,61,321,323,325,327,329,331,333,99,-219,-217,-216,-218,-220,-221,337,99,99,99,107,-51,-48,-57,-54,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-52,-50,-58,-56,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,99,-107,61,99,-127,61,-130,-134,99,-179,61,61,99,-182,-136,99,99,-114,-115,61,61,-135,99,99,-137,-138,-128,-131,-139,-140,-129,]),'IF':([0,2,5,6,7,8,9,17,18,19,20,21,22,23,24,25,35,36,37,49,50,52,64,65,66,67,68,69,71,91,92,93,94,95,96,97,98,122,124,125,126,127,128,129,130,131,132,133,143,144,145,146,147,148,149,150,151,191,200,214,258,265,266,272,273,277,278,286,289,290,305,306,307,308,309,310,311,312,313,314,315,316,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,344,354,363,366,368,372,375,386,392,402,403,404,405,406,410,411,412,420,421,423,424,425,426,429,],[28,28,28,28,28,28,28,-38,-39,-40,-41,-42,-43,-44,-45,-46,-180,-181,51,-184,51,28,-103,-104,-105,-106,-101,-102,-126,28,28,28,28,28,28,28,28,-122,-123,-34,-36,-47,-53,-59,-65,-71,-77,-83,-35,-37,-49,-55,-61,-67,-73,-79,-85,-183,28,-141,28,-219,-217,-216,-218,-220,-221,28,28,28,-51,-48,-57,-54,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-52,-50,-58,-56,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,28,-107,28,-127,-130,-134,28,-179,28,-182,-136,28,28,-114,-115,-135,28,28,-137,-138,-128,-131,-139,-140,-129,]),'$end':([1,2,3,4,5,6,7,8,9,17,18,19,20,21,22,23,24,25,29,30,31,32,33,34,35,36,49,64,65,66,67,68,69,71,122,124,125,126,127,128,129,130,131,132,133,143,144,145,146,147,148,149,150,151,191,214,265,266,272,273,277,278,305,306,307,308,309,310,311,312,313,314,315,316,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,344,363,366,368,375,392,402,405,406,410,420,421,423,424,425,426,429,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-38,-39,-40,-41,-42,-43,-44,-45,-46,-9,-10,-11,-12,-14,-13,-180,-181,-184,-103,-104,-105,-106,-101,-102,-126,-122,-123,-34,-36,-47,-53,-59,-65,-71,-77,-83,-35,-37,-49,-55,-61,-67,-73,-79,-85,-183,-141,-219,-217,-216,-218,-220,-221,-51,-48,-57,-54,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-52,-50,-58,-56,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-107,-127,-130,-134,-179,-182,-136,-114,-115,-135,-137,-138,-128,-131,-139,-140,-129,]),'ELSE':([9,35,36,48,49,97,191,375,392,],[37,50,-181,50,-184,37,-183,-179,-182,]),'MATCH':([11,99,],[39,39,]),'PAR_I':([12,13,14,26,27,28,38,51,104,134,152,212,397,398,422,],[40,41,42,45,46,47,55,89,204,240,249,293,408,409,427,]),'INT':([17,18,19,20,21,22,23,24,25,35,36,40,41,45,47,49,52,64,65,66,67,68,69,71,72,74,81,89,91,92,93,94,95,96,97,98,121,122,123,124,125,126,127,128,129,130,131,132,133,143,144,145,146,147,148,149,150,151,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,181,182,183,184,188,191,200,214,217,240,242,249,251,258,265,266,272,273,277,278,283,286,289,290,305,306,307,308,309,310,311,312,313,314,315,316,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,340,341,343,350,354,363,364,366,368,370,371,372,375,377,378,386,392,402,403,404,408,409,410,411,412,420,421,423,424,425,426,427,429,],[-38,-39,-40,-41,-42,-43,-44,-45,-46,-180,-181,64,64,64,64,-184,64,-103,-104,-105,-106,-101,-102,-126,128,146,64,64,64,64,64,64,64,64,64,64,233,-122,64,-123,-34,-36,-47,-53,-59,-65,-71,-77,-83,-35,-37,-49,-55,-61,-67,-73,-79,-85,64,-193,-194,-195,64,64,-212,-213,-214,-215,-222,-223,-224,-225,-226,64,64,64,64,285,-183,64,-141,233,64,308,64,324,64,-219,-217,-216,-218,-220,-221,338,64,64,64,-51,-48,-57,-54,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-52,-50,-58,-56,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,373,374,64,64,64,-127,64,-130,-134,387,388,64,-179,64,64,64,-182,-136,64,64,64,64,-135,64,64,-137,-138,-128,-131,-139,-140,428,-129,]),'LONG':([17,18,19,20,21,22,23,24,25,35,36,40,41,45,47,49,52,64,65,66,67,68,69,71,72,74,81,89,91,92,93,94,95,96,97,98,121,122,123,124,125,126,127,128,129,130,131,132,133,143,144,145,146,147,148,149,150,151,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,181,182,183,184,191,200,214,220,240,241,249,250,258,265,266,272,273,277,278,286,289,290,305,306,307,308,309,310,311,312,313,314,315,316,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,350,354,363,364,366,368,372,375,377,378,386,392,402,403,404,408,409,410,411,412,420,421,423,424,425,426,429,],[-38,-39,-40,-41,-42,-43,-44,-45,-46,-180,-181,65,65,65,65,-184,65,-103,-104,-105,-106,-101,-102,-126,127,145,65,65,65,65,65,65,65,65,65,65,234,-122,65,-123,-34,-36,-47,-53,-59,-65,-71,-77,-83,-35,-37,-49,-55,-61,-67,-73,-79,-85,65,-193,-194,-195,65,65,-212,-213,-214,-215,-222,-223,-224,-225,-226,65,65,65,65,-183,65,-141,234,65,306,65,322,65,-219,-217,-216,-218,-220,-221,65,65,65,-51,-48,-57,-54,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-52,-50,-58,-56,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,65,65,65,-127,65,-130,-134,65,-179,65,65,65,-182,-136,65,65,65,65,-135,65,65,-137,-138,-128,-131,-139,-140,-129,]),'FLOAT':([17,18,19,20,21,22,23,24,25,35,36,40,41,45,47,49,52,64,65,66,67,68,69,71,72,74,81,89,91,92,93,94,95,96,97,98,121,122,123,124,125,126,127,128,129,130,131,132,133,143,144,145,146,147,148,149,150,151,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,181,182,183,184,191,200,214,223,240,243,249,252,258,265,266,272,273,277,278,286,289,290,305,306,307,308,309,310,311,312,313,314,315,316,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,350,354,363,364,366,368,372,375,377,378,386,392,402,403,404,408,409,410,411,412,420,421,423,424,425,426,429,],[-38,-39,-40,-41,-42,-43,-44,-45,-46,-180,-181,66,66,66,66,-184,66,-103,-104,-105,-106,-101,-102,-126,129,147,66,66,66,66,66,66,66,66,66,66,235,-122,66,-123,-34,-36,-47,-53,-59,-65,-71,-77,-83,-35,-37,-49,-55,-61,-67,-73,-79,-85,66,-193,-194,-195,66,66,-212,-213,-214,-215,-222,-223,-224,-225,-226,66,66,66,66,-183,66,-141,235,66,310,66,326,66,-219,-217,-216,-218,-220,-221,66,66,66,-51,-48,-57,-54,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-52,-50,-58,-56,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,66,66,66,-127,66,-130,-134,66,-179,66,66,66,-182,-136,66,66,66,66,-135,66,66,-137,-138,-128,-131,-139,-140,-129,]),'DOUBLE':([17,18,19,20,21,22,23,24,25,35,36,40,41,45,47,49,52,64,65,66,67,68,69,71,72,74,81,89,91,92,93,94,95,96,97,98,121,122,123,124,125,126,127,128,129,130,131,132,133,143,144,145,146,147,148,149,150,151,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,181,182,183,184,191,200,214,226,240,244,249,253,258,265,266,272,273,277,278,286,289,290,305,306,307,308,309,310,311,312,313,314,315,316,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,343,350,354,363,364,366,368,372,375,377,378,386,392,402,403,404,408,409,410,411,412,420,421,423,424,425,426,429,],[-38,-39,-40,-41,-42,-43,-44,-45,-46,-180,-181,67,67,67,67,-184,67,-103,-104,-105,-106,-101,-102,-126,130,148,67,67,67,67,67,67,67,67,67,67,236,-122,67,-123,-34,-36,-47,-53,-59,-65,-71,-77,-83,-35,-37,-49,-55,-61,-67,-73,-79,-85,67,-193,-194,-195,67,67,-212,-213,-214,-215,-222,-223,-224,-225,-226,67,67,67,67,-183,67,-141,236,67,312,67,328,67,-219,-217,-216,-218,-220,-221,67,67,67,-51,-48,-57,-54,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-52,-50,-58,-56,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,67,67,67,-127,67,-130,-134,67,-179,67,67,67,-182,-136,67,67,67,67,-135,67,67,-137,-138,-128,-131,-139,-140,-129,]),'LLAVE_D':([17,18,19,20,21,22,23,24,25,35,36,49,59,60,61,62,63,64,65,66,67,68,69,71,90,91,92,93,94,95,96,97,98,108,109,110,111,112,113,114,115,116,117,118,119,120,122,124,125,126,127,128,129,130,131,132,133,143,144,145,146,147,148,149,150,151,191,192,193,194,195,196,197,198,199,214,215,216,218,219,221,222,224,225,227,228,230,231,265,266,272,273,277,278,288,305,306,307,308,309,310,311,312,313,314,315,316,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,342,352,353,355,356,357,358,359,360,361,362,363,366,368,375,376,381,382,389,392,393,394,396,399,402,410,413,414,418,419,420,421,423,424,425,426,429,],[-38,-39,-40,-41,-42,-43,-44,-45,-46,-180,-181,-184,-96,-97,-98,-99,-100,-103,-104,-105,-106,-101,-102,-126,191,-15,-16,-17,-18,-19,-20,-21,-22,214,-142,-143,-144,-145,-146,-147,-149,-153,-157,-161,-165,-169,-122,-123,-34,-36,-47,-53,-59,-65,-71,-77,-83,-35,-37,-49,-55,-61,-67,-73,-79,-85,-183,-23,-24,-25,-26,-27,-29,-28,-30,-141,-150,-151,-154,-155,-158,-159,-162,-163,-166,-167,-170,-171,-219,-217,-216,-218,-220,-221,344,-51,-48,-57,-54,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-52,-50,-58,-56,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,368,375,-148,-177,-31,-32,-33,-152,-156,-160,-164,-168,-127,-130,-134,-179,392,-176,396,402,-182,405,406,-178,410,-136,-135,420,421,425,426,-137,-138,-128,-131,-139,-140,-129,]),'RETURN':([17,18,19,20,21,22,23,24,25,35,36,49,64,65,66,67,68,69,71,91,92,93,94,95,96,97,98,122,124,125,126,127,128,129,130,131,132,133,143,144,145,146,147,148,149,150,151,191,192,193,194,195,196,197,198,199,214,265,266,272,273,277,278,305,306,307,308,309,310,311,312,313,314,315,316,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,345,346,363,366,368,375,392,402,410,420,421,423,424,425,426,429,],[-38,-39,-40,-41,-42,-43,-44,-45,-46,-180,-181,-184,-103,-104,-105,-106,-101,-102,-126,-15,-16,-17,-18,-19,-20,-21,-22,-122,-123,-34,-36,-47,-53,-59,-65,-71,-77,-83,-35,-37,-49,-55,-61,-67,-73,-79,-85,-183,-23,-24,-25,-26,-27,-29,-28,-30,-141,-219,-217,-216,-218,-220,-221,-51,-48,-57,-54,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-52,-50,-58,-56,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,377,378,-127,-130,-134,-179,-182,-136,-135,-137,-138,-128,-131,-139,-140,-129,]),'CASE':([17,18,19,20,21,22,23,24,25,56,64,65,66,67,68,69,71,115,116,117,118,119,120,122,124,125,126,127,128,129,130,131,132,133,143,144,145,146,147,148,149,150,151,265,266,272,273,277,278,305,306,307,308,309,310,311,312,313,314,315,316,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,352,353,355,356,357,358,359,360,361,362,363,366,396,423,424,429,],[-38,-39,-40,-41,-42,-43,-44,-45,-46,121,-103,-104,-105,-106,-101,-102,-126,217,220,223,226,229,232,-122,-123,-34,-36,-47,-53,-59,-65,-71,-77,-83,-35,-37,-49,-55,-61,-67,-73,-79,-85,-219,-217,-216,-218,-220,-221,-51,-48,-57,-54,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-52,-50,-58,-56,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-148,-177,-31,-32,-33,-152,-156,-160,-164,-168,-127,-130,-178,-128,-131,-129,]),'LLAVE_I':([37,39,50,101,161,189,201,202,287,297,298,299,300,301,302,339,351,369,390,391,400,401,],[52,56,52,200,258,286,289,290,343,354,354,354,354,354,354,372,354,386,403,404,411,412,]),'STRING':([40,41,45,47,72,74,81,89,121,123,162,163,164,165,166,168,169,170,171,185,229,240,245,249,254,350,364,377,378,408,409,],[59,59,84,84,131,149,84,84,237,59,84,-193,-194,-195,263,-212,-213,-214,-215,279,237,59,314,59,330,59,59,59,59,59,59,]),'CHAR':([40,41,45,47,72,74,81,89,121,123,162,163,164,165,166,168,169,170,171,186,232,240,246,249,255,350,364,377,378,408,409,],[60,60,85,85,132,150,85,85,238,60,85,-193,-194,-195,264,-212,-213,-214,-215,281,238,60,316,60,332,60,60,60,60,60,60,]),'TRUE':([40,41,45,47,72,74,81,89,123,162,163,164,165,166,168,169,170,171,177,240,247,249,256,350,364,377,378,408,409,],[68,68,68,68,68,68,68,68,68,68,-193,-194,-195,68,-212,-213,-214,-215,68,68,68,68,68,68,68,68,68,68,68,]),'FLASE':([40,41,45,47,72,74,81,89,123,162,163,164,165,166,168,169,170,171,177,240,247,249,256,350,364,377,378,408,409,],[69,69,69,69,69,69,69,69,69,69,-193,-194,-195,69,-212,-213,-214,-215,69,69,69,69,69,69,69,69,69,69,69,]),'PAR_D':([42,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,76,77,78,79,80,88,106,178,179,180,190,205,206,207,208,209,210,211,239,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,284,291,292,295,303,304,320,337,348,373,374,379,380,383,387,388,395,416,417,428,],[71,105,122,-125,-96,-97,-98,-99,-100,-103,-104,-105,-106,-101,-102,124,161,-186,-187,-188,-189,189,212,-190,-191,-192,287,-89,-90,-91,-92,-93,-94,-95,-124,-185,-211,-203,-205,-207,-209,-219,-217,-200,-206,-196,-199,-204,-216,-218,-197,-198,-220,-221,-201,-208,-202,-210,339,347,-118,-108,363,-132,366,369,-119,390,391,-120,-109,-133,400,401,-121,423,424,429,]),'IGUAL':([43,44,53,54,102,103,105,135,136,137,138,139,140,141,153,154,155,156,157,158,159,203,205,206,207,208,209,210,211,212,294,295,347,365,367,],[72,74,101,-110,201,202,-111,241,242,243,244,245,246,247,250,251,252,253,254,255,256,-116,-89,-90,-91,-92,-93,-94,-95,-112,-113,350,-117,384,385,]),'DOBLE_PUNTO':([43,44,53,54,105,107,212,294,],[73,75,104,-110,-111,213,-112,-113,]),'NOT':([45,47,64,65,66,67,68,69,77,78,79,80,89,162,163,164,165,178,179,180,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,],[81,81,-103,-104,-105,-106,-101,-102,165,-187,-188,-189,81,81,-193,-194,-195,-190,-191,-192,-211,-203,-205,-207,-209,-219,-217,-200,-206,-196,-199,-204,-216,-218,-197,-198,-220,-221,-201,-208,-202,-210,]),'MAS':([58,59,60,61,62,63,64,65,66,67,68,69,78,82,83,98,99,100,125,126,127,128,129,130,143,144,145,146,147,148,178,265,266,269,270,271,272,273,274,275,276,277,278,],[123,-96,-97,-98,-99,-100,-103,-104,-105,-106,-101,-102,173,173,173,173,173,173,173,173,-104,-103,-105,-106,173,173,-104,-103,-105,-106,173,-219,-217,173,173,173,-216,-218,173,173,173,-220,-221,]),'COMA':([59,60,61,62,63,64,65,66,67,68,69,205,206,207,208,209,210,211,292,304,379,],[-96,-97,-98,-99,-100,-103,-104,-105,-106,-101,-102,-89,-90,-91,-92,-93,-94,-95,349,364,349,]),'IGUAL_COMPARACION':([64,65,66,67,68,69,78,79,82,83,84,85,178,179,265,266,272,273,277,278,],[-103,-104,-105,-106,-101,-102,168,168,168,168,168,168,168,168,-219,-217,-216,-218,-220,-221,]),'DIFERENTE':([64,65,66,67,68,69,78,79,82,83,84,85,178,179,265,266,272,273,277,278,],[-103,-104,-105,-106,-101,-102,169,169,169,169,169,169,169,169,-219,-217,-216,-218,-220,-221,]),'MAYOR':([64,65,66,67,68,69,78,79,82,83,84,85,178,179,265,266,272,273,277,278,],[-103,-104,-105,-106,-101,-102,170,170,170,170,170,170,170,170,-219,-217,-216,-218,-220,-221,]),'MENOR':([64,65,66,67,68,69,78,79,82,83,84,85,178,179,265,266,272,273,277,278,],[-103,-104,-105,-106,-101,-102,171,171,171,171,171,171,171,171,-219,-217,-216,-218,-220,-221,]),'MENOS':([64,65,66,67,78,82,83,98,99,100,125,126,127,128,129,130,143,144,145,146,147,148,178,265,266,269,270,271,272,273,274,275,276,277,278,],[-103,-104,-105,-106,172,172,172,172,172,172,172,172,-104,-103,-105,-106,172,172,-104,-103,-105,-106,172,-219,-217,172,172,172,-216,-218,172,172,172,-220,-221,]),'MULTIPLICACION':([64,65,66,67,78,82,83,98,99,100,125,126,127,128,129,130,143,144,145,146,147,148,178,265,266,269,270,271,272,273,274,275,276,277,278,],[-103,-104,-105,-106,174,174,174,174,174,174,174,174,-104,-103,-105,-106,174,174,-104,-103,-105,-106,174,-219,-217,174,174,174,-216,-218,174,174,174,-220,-221,]),'DIVISION':([64,65,66,67,78,82,83,98,99,100,125,126,127,128,129,130,143,144,145,146,147,148,178,265,266,269,270,271,272,273,274,275,276,277,278,],[-103,-104,-105,-106,175,175,175,175,175,175,175,175,-104,-103,-105,-106,175,175,-104,-103,-105,-106,175,-219,-217,175,175,175,-216,-218,175,175,175,-220,-221,]),'MOD':([64,65,66,67,78,82,83,98,99,100,125,126,127,128,129,130,143,144,145,146,147,148,178,265,266,269,270,271,272,273,274,275,276,277,278,],[-103,-104,-105,-106,176,176,176,176,176,176,176,176,-104,-103,-105,-106,176,176,-104,-103,-105,-106,176,-219,-217,176,176,176,-216,-218,176,176,176,-220,-221,]),'AND':([64,65,66,67,68,69,77,78,79,80,178,179,180,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,],[-103,-104,-105,-106,-101,-102,163,-187,-188,-189,-190,-191,-192,-211,-203,-205,-207,-209,-219,-217,-200,-206,-196,-199,-204,-216,-218,-197,-198,-220,-221,-201,-208,-202,-210,]),'OR':([64,65,66,67,68,69,77,78,79,80,178,179,180,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,],[-103,-104,-105,-106,-101,-102,164,-187,-188,-189,-190,-191,-192,-211,-203,-205,-207,-209,-219,-217,-200,-206,-196,-199,-204,-216,-218,-197,-198,-220,-221,-201,-208,-202,-210,]),'ARRAYCLASS':([72,73,384,],[134,142,397,]),'LONGCLASS':([73,75,104,204,213,248,257,349,407,],[135,153,209,209,209,209,209,209,209,]),'INTCLASS':([73,75,104,204,213,248,257,349,407,],[136,154,208,208,208,208,208,208,208,]),'FLOATCLASS':([73,75,104,204,213,248,257,349,407,],[137,155,211,211,211,211,211,211,211,]),'DOUBLECLASS':([73,75,104,204,213,248,257,349,407,],[138,156,210,210,210,210,210,210,210,]),'STRINGCLASS':([73,75,104,204,213,248,257,349,407,],[139,157,206,206,206,206,206,206,206,]),'CHARCLASS':([73,75,104,204,213,248,257,349,407,],[140,158,205,205,205,205,205,205,205,]),'BOOLCLASS':([73,75,104,204,213,248,257,349,407,],[141,159,207,207,207,207,207,207,207,]),'LISTCLASS':([74,75,385,],[152,160,398,]),'ITERATOR':([87,187,],[188,283,]),'CORCHETE_I':([142,160,397,],[248,257,407,]),'CORCHETE_D':([205,206,207,208,209,210,211,319,335,415,],[-89,-90,-91,-92,-93,-94,-95,365,367,422,]),'SUBGUION':([217,220,223,226,229,232,],[296,296,296,296,296,296,]),'FUNCION_FLECHA':([233,234,235,236,237,238,296,],[297,298,299,300,301,302,351,]),'TO':([285,338,],[340,370,]),'UNTIL':([285,338,],[341,371,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,2,5,6,7,8,9,],[1,29,30,31,32,33,34,]),'funcion':([0,2,5,6,7,8,9,],[2,2,2,2,2,2,2,]),'impresion':([0,2,5,6,7,8,9,52,91,92,93,94,95,96,97,98,200,258,286,289,290,297,298,299,300,301,302,343,351,354,372,386,403,404,411,412,],[3,3,3,3,3,3,3,92,92,92,92,92,92,92,92,92,92,92,92,92,92,356,356,356,356,356,356,92,356,92,92,92,92,92,92,92,]),'entrada':([0,2,5,6,7,8,9,52,91,92,93,94,95,96,97,98,200,258,286,289,290,297,298,299,300,301,302,343,351,354,372,386,403,404,411,412,],[4,4,4,4,4,4,4,93,93,93,93,93,93,93,93,93,93,93,93,93,93,357,357,357,357,357,357,93,357,93,93,93,93,93,93,93,]),'asignacion':([0,2,5,6,7,8,9,52,91,92,93,94,95,96,97,98,200,258,286,289,290,297,298,299,300,301,302,343,351,354,372,386,403,404,411,412,],[5,5,5,5,5,5,5,91,91,91,91,91,91,91,91,91,91,91,91,91,91,355,355,355,355,355,355,91,355,91,91,91,91,91,91,91,]),'while':([0,2,5,6,7,8,9,52,91,92,93,94,95,96,97,98,200,258,286,289,290,343,354,372,386,403,404,411,412,],[6,6,6,6,6,6,6,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'for':([0,2,5,6,7,8,9,52,91,92,93,94,95,96,97,98,200,258,286,289,290,343,354,372,386,403,404,411,412,],[7,7,7,7,7,7,7,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'match':([0,2,5,6,7,8,9,52,91,92,93,94,95,96,97,98,200,258,286,289,290,343,354,372,386,403,404,411,412,],[8,8,8,8,8,8,8,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'if':([0,2,5,6,7,8,9,52,91,92,93,94,95,96,97,98,200,258,286,289,290,343,354,372,386,403,404,411,412,],[9,9,9,9,9,9,9,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'asignacionLong':([0,2,5,6,7,8,9,52,91,92,93,94,95,96,97,98,200,258,286,289,290,297,298,299,300,301,302,343,351,354,372,386,403,404,411,412,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'asignacionInt':([0,2,5,6,7,8,9,52,91,92,93,94,95,96,97,98,200,258,286,289,290,297,298,299,300,301,302,343,351,354,372,386,403,404,411,412,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'asignacionFloat':([0,2,5,6,7,8,9,52,91,92,93,94,95,96,97,98,200,258,286,289,290,297,298,299,300,301,302,343,351,354,372,386,403,404,411,412,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'asignacionDouble':([0,2,5,6,7,8,9,52,91,92,93,94,95,96,97,98,200,258,286,289,290,297,298,299,300,301,302,343,351,354,372,386,403,404,411,412,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'asignacionString':([0,2,5,6,7,8,9,52,91,92,93,94,95,96,97,98,200,258,286,289,290,297,298,299,300,301,302,343,351,354,372,386,403,404,411,412,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'asignacionChar':([0,2,5,6,7,8,9,52,91,92,93,94,95,96,97,98,200,258,286,289,290,297,298,299,300,301,302,343,351,354,372,386,403,404,411,412,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'asignacionBoolean':([0,2,5,6,7,8,9,52,91,92,93,94,95,96,97,98,200,258,286,289,290,297,298,299,300,301,302,343,351,354,372,386,403,404,411,412,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'array':([0,2,5,6,7,8,9,52,91,92,93,94,95,96,97,98,200,258,286,289,290,297,298,299,300,301,302,343,351,354,372,386,403,404,411,412,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'list':([0,2,5,6,7,8,9,52,91,92,93,94,95,96,97,98,200,258,286,289,290,297,298,299,300,301,302,343,351,354,372,386,403,404,411,412,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'elseif':([9,35,48,97,],[35,48,48,35,]),'else':([9,35,48,97,],[36,49,49,36,]),'parametro':([38,],[53,]),'parametros':([38,212,],[54,294,]),'valorI':([40,41,123,],[57,70,239,]),'valor':([40,41,123,240,249,350,364,377,378,408,409,],[58,58,58,304,304,380,304,393,394,304,304,]),'numeros':([40,41,45,47,52,72,74,81,89,91,92,93,94,95,96,97,98,123,162,166,167,181,182,183,184,200,240,249,258,286,289,290,343,350,354,364,372,377,378,386,403,404,408,409,411,412,],[62,62,82,82,100,100,100,82,82,100,100,100,100,100,100,100,100,62,82,261,266,269,272,275,277,100,62,62,100,100,100,100,100,62,100,62,100,62,62,100,100,100,62,62,100,100,]),'booleanos':([40,41,45,47,72,74,81,89,123,162,166,177,240,247,249,256,350,364,377,378,408,409,],[63,63,79,79,133,151,179,79,63,79,262,267,63,318,63,334,63,63,63,63,63,63,]),'condicional':([45,47,89,162,],[76,88,190,259,]),'valorC':([45,47,89,162,],[77,77,77,77,]),'relacional':([45,47,81,89,162,],[80,80,180,80,80,]),'aritmetica':([45,47,52,72,74,81,89,91,92,93,94,95,96,97,98,162,181,183,200,258,286,289,290,343,354,372,386,403,404,411,412,],[83,83,98,126,144,83,83,98,98,98,98,98,98,98,98,83,270,274,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'contenido':([52,91,92,93,94,95,96,97,98,200,258,286,289,290,343,354,372,386,403,404,411,412,],[90,192,193,194,195,196,197,198,199,288,336,342,345,346,376,382,389,399,413,414,418,419,]),'dectipo':([53,],[102,]),'dectipoTupla':([53,],[103,]),'declaracion':([55,293,],[106,106,]),'cases':([56,],[108,]),'casesInt':([56,115,],[109,215,]),'casesLgn':([56,116,],[110,218,]),'casesFlt':([56,117,],[111,221,]),'casesDob':([56,118,],[112,224,]),'casesStr':([56,119,],[113,227,]),'casesChar':([56,120,],[114,230,]),'caseInt':([56,115,],[115,115,]),'caseLgn':([56,116,],[116,116,]),'caseFlt':([56,117,],[117,117,]),'caseDob':([56,118,],[118,118,]),'caseStr':([56,119,],[119,119,]),'caseChar':([56,120,],[120,120,]),'logicos':([77,],[162,]),'comparacion':([78,79,82,83,84,85,178,179,],[166,177,181,183,185,186,166,177,]),'aritmeticos':([78,82,83,98,99,100,125,126,143,144,178,269,270,271,274,275,276,],[167,182,184,184,167,182,167,184,167,184,167,182,184,167,184,182,167,]),'tipo':([104,204,213,248,257,349,407,],[203,292,295,319,335,379,415,]),'defcase':([115,116,117,118,119,120,],[216,219,222,225,228,231,]),'tipos':([204,],[291,]),'valores':([240,249,364,408,409,],[303,320,383,416,417,]),'tiposentry':([292,379,],[348,395,]),'codeBlock':([297,298,299,300,301,302,351,],[352,358,359,360,361,362,381,]),'contenidoLine':([297,298,299,300,301,302,351,],[353,353,353,353,353,353,353,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> funcion','cuerpo',1,'p_cuerpo','sintax.py',10),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintax.py',11),
  ('cuerpo -> entrada','cuerpo',1,'p_cuerpo','sintax.py',12),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintax.py',13),
  ('cuerpo -> while','cuerpo',1,'p_cuerpo','sintax.py',14),
  ('cuerpo -> for','cuerpo',1,'p_cuerpo','sintax.py',15),
  ('cuerpo -> match','cuerpo',1,'p_cuerpo','sintax.py',16),
  ('cuerpo -> if','cuerpo',1,'p_cuerpo','sintax.py',17),
  ('cuerpo -> funcion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',18),
  ('cuerpo -> asignacion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',19),
  ('cuerpo -> while cuerpo','cuerpo',2,'p_cuerpo','sintax.py',20),
  ('cuerpo -> for cuerpo','cuerpo',2,'p_cuerpo','sintax.py',21),
  ('cuerpo -> if cuerpo','cuerpo',2,'p_cuerpo','sintax.py',22),
  ('cuerpo -> match cuerpo','cuerpo',2,'p_cuerpo','sintax.py',23),
  ('contenido -> asignacion','contenido',1,'p_contenido','sintax.py',27),
  ('contenido -> impresion','contenido',1,'p_contenido','sintax.py',28),
  ('contenido -> entrada','contenido',1,'p_contenido','sintax.py',29),
  ('contenido -> while','contenido',1,'p_contenido','sintax.py',30),
  ('contenido -> for','contenido',1,'p_contenido','sintax.py',31),
  ('contenido -> match','contenido',1,'p_contenido','sintax.py',32),
  ('contenido -> if','contenido',1,'p_contenido','sintax.py',33),
  ('contenido -> aritmetica','contenido',1,'p_contenido','sintax.py',34),
  ('contenido -> asignacion contenido','contenido',2,'p_contenido','sintax.py',35),
  ('contenido -> impresion contenido','contenido',2,'p_contenido','sintax.py',36),
  ('contenido -> entrada contenido','contenido',2,'p_contenido','sintax.py',37),
  ('contenido -> while contenido','contenido',2,'p_contenido','sintax.py',38),
  ('contenido -> for contenido','contenido',2,'p_contenido','sintax.py',39),
  ('contenido -> if contenido','contenido',2,'p_contenido','sintax.py',40),
  ('contenido -> match contenido','contenido',2,'p_contenido','sintax.py',41),
  ('contenido -> aritmetica contenido','contenido',2,'p_contenido','sintax.py',42),
  ('contenidoLine -> asignacion','contenidoLine',1,'p_contenidoLine','sintax.py',46),
  ('contenidoLine -> impresion','contenidoLine',1,'p_contenidoLine','sintax.py',47),
  ('contenidoLine -> entrada','contenidoLine',1,'p_contenidoLine','sintax.py',48),
  ('asignacion -> VAR VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',52),
  ('asignacion -> VAL VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',53),
  ('asignacion -> VAR VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',54),
  ('asignacion -> VAL VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',55),
  ('asignacion -> asignacionLong','asignacion',1,'p_asignacion','sintax.py',56),
  ('asignacion -> asignacionInt','asignacion',1,'p_asignacion','sintax.py',57),
  ('asignacion -> asignacionFloat','asignacion',1,'p_asignacion','sintax.py',58),
  ('asignacion -> asignacionDouble','asignacion',1,'p_asignacion','sintax.py',59),
  ('asignacion -> asignacionString','asignacion',1,'p_asignacion','sintax.py',60),
  ('asignacion -> asignacionChar','asignacion',1,'p_asignacion','sintax.py',61),
  ('asignacion -> asignacionBoolean','asignacion',1,'p_asignacion','sintax.py',62),
  ('asignacion -> array','asignacion',1,'p_asignacion','sintax.py',63),
  ('asignacion -> list','asignacion',1,'p_asignacion','sintax.py',64),
  ('asignacionLong -> VAR VARIABLE IGUAL LONG','asignacionLong',4,'p_asignacionLong','sintax.py',67),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG','asignacionLong',6,'p_asignacionLong','sintax.py',68),
  ('asignacionLong -> VAL VARIABLE IGUAL LONG','asignacionLong',4,'p_asignacionLong','sintax.py',69),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG','asignacionLong',6,'p_asignacionLong','sintax.py',70),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',71),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',72),
  ('asignacionInt -> VAR VARIABLE IGUAL INT','asignacionInt',4,'p_asignacionInt','sintax.py',75),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT','asignacionInt',6,'p_asignacionInt','sintax.py',76),
  ('asignacionInt -> VAL VARIABLE IGUAL INT','asignacionInt',4,'p_asignacionInt','sintax.py',77),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT','asignacionInt',6,'p_asignacionInt','sintax.py',78),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',79),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',80),
  ('asignacionFloat -> VAR VARIABLE IGUAL FLOAT','asignacionFloat',4,'p_asignacionFloat','sintax.py',83),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT','asignacionFloat',6,'p_asignacionFloat','sintax.py',84),
  ('asignacionFloat -> VAL VARIABLE IGUAL FLOAT','asignacionFloat',4,'p_asignacionFloat','sintax.py',85),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT','asignacionFloat',6,'p_asignacionFloat','sintax.py',86),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',87),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',88),
  ('asignacionDouble -> VAR VARIABLE IGUAL DOUBLE','asignacionDouble',4,'p_asignacionDouble','sintax.py',91),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',92),
  ('asignacionDouble -> VAL VARIABLE IGUAL DOUBLE','asignacionDouble',4,'p_asignacionDouble','sintax.py',93),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',94),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',95),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',96),
  ('asignacionString -> VAR VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',99),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',100),
  ('asignacionString -> VAL VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',101),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',102),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',103),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',104),
  ('asignacionChar -> VAR VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',107),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',108),
  ('asignacionChar -> VAL VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',109),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',110),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',111),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',112),
  ('asignacionBoolean -> VAR VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',115),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',116),
  ('asignacionBoolean -> VAL VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',117),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',118),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',119),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',120),
  ('tipo -> CHARCLASS','tipo',1,'p_tipo','sintax.py',124),
  ('tipo -> STRINGCLASS','tipo',1,'p_tipo','sintax.py',125),
  ('tipo -> BOOLCLASS','tipo',1,'p_tipo','sintax.py',126),
  ('tipo -> INTCLASS','tipo',1,'p_tipo','sintax.py',127),
  ('tipo -> LONGCLASS','tipo',1,'p_tipo','sintax.py',128),
  ('tipo -> DOUBLECLASS','tipo',1,'p_tipo','sintax.py',129),
  ('tipo -> FLOATCLASS','tipo',1,'p_tipo','sintax.py',130),
  ('valor -> STRING','valor',1,'p_valor','sintax.py',133),
  ('valor -> CHAR','valor',1,'p_valor','sintax.py',134),
  ('valor -> VARIABLE','valor',1,'p_valor','sintax.py',135),
  ('valor -> numeros','valor',1,'p_valor','sintax.py',136),
  ('valor -> booleanos','valor',1,'p_valor','sintax.py',137),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintax.py',140),
  ('booleanos -> FLASE','booleanos',1,'p_booleanos','sintax.py',141),
  ('numeros -> INT','numeros',1,'p_numeros','sintax.py',144),
  ('numeros -> LONG','numeros',1,'p_numeros','sintax.py',145),
  ('numeros -> FLOAT','numeros',1,'p_numeros','sintax.py',146),
  ('numeros -> DOUBLE','numeros',1,'p_numeros','sintax.py',147),
  ('funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D','funcion',7,'p_funcion','sintax.py',152),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo','declaracion',3,'p_declaracion','sintax.py',157),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor','declaracion',5,'p_declaracion_defecto','sintax.py',160),
  ('parametro -> parametros','parametro',1,'p_parametro','sintax.py',163),
  ('parametro -> PAR_I PAR_D','parametro',2,'p_parametro','sintax.py',164),
  ('parametros -> PAR_I declaracion PAR_D','parametros',3,'p_parametros','sintax.py',167),
  ('parametros -> PAR_I declaracion PAR_D parametros','parametros',4,'p_parametros','sintax.py',168),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D','funcion',10,'p_funcion_return','sintax.py',173),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN valor LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',176),
  ('dectipo -> DOBLE_PUNTO tipo','dectipo',2,'p_dectipo','sintax.py',179),
  ('dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D','dectipoTupla',4,'p_dectipoTupla','sintax.py',182),
  ('tipos -> tipo','tipos',1,'p_tipos','sintax.py',185),
  ('tipos -> tipo tiposentry','tipos',2,'p_tipos','sintax.py',186),
  ('tiposentry -> COMA tipo','tiposentry',2,'p_tipoentry','sintax.py',189),
  ('tiposentry -> COMA tipo tiposentry','tiposentry',3,'p_tipoentry','sintax.py',190),
  ('impresion -> PRINTLN PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',194),
  ('impresion -> PRINT PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',195),
  ('valorI -> valor MAS valorI','valorI',3,'p_valorI','sintax.py',198),
  ('valorI -> valor','valorI',1,'p_valorI','sintax.py',199),
  ('entrada -> READLINE PAR_I PAR_D','entrada',3,'p_entrada','sintax.py',204),
  ('array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',210),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D','array',12,'p_array','sintax.py',211),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',15,'p_array','sintax.py',212),
  ('list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D','list',7,'p_list','sintax.py',216),
  ('list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D','list',12,'p_list','sintax.py',217),
  ('valores -> valor','valores',1,'p_valores','sintax.py',222),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintax.py',223),
  ('while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','while',7,'p_while','sintax.py',230),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',10,'p_for','sintax.py',234),
  ('for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',9,'p_for','sintax.py',235),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',236),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',237),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',238),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',239),
  ('match -> VARIABLE MATCH LLAVE_I cases LLAVE_D','match',5,'p_match','sintax.py',243),
  ('cases -> casesInt','cases',1,'p_cases','sintax.py',246),
  ('cases -> casesLgn','cases',1,'p_cases','sintax.py',247),
  ('cases -> casesFlt','cases',1,'p_cases','sintax.py',248),
  ('cases -> casesDob','cases',1,'p_cases','sintax.py',249),
  ('cases -> casesStr','cases',1,'p_cases','sintax.py',250),
  ('cases -> casesChar','cases',1,'p_cases','sintax.py',251),
  ('caseInt -> CASE INT FUNCION_FLECHA codeBlock','caseInt',4,'p_caseInt','sintax.py',254),
  ('casesInt -> caseInt','casesInt',1,'p_casesInt','sintax.py',257),
  ('casesInt -> caseInt casesInt','casesInt',2,'p_casesInt','sintax.py',258),
  ('casesInt -> caseInt defcase','casesInt',2,'p_casesInt','sintax.py',259),
  ('caseLgn -> CASE LONG FUNCION_FLECHA codeBlock','caseLgn',4,'p_caseLgn','sintax.py',262),
  ('casesLgn -> caseLgn','casesLgn',1,'p_casesLgn','sintax.py',265),
  ('casesLgn -> caseLgn casesLgn','casesLgn',2,'p_casesLgn','sintax.py',266),
  ('casesLgn -> caseLgn defcase','casesLgn',2,'p_casesLgn','sintax.py',267),
  ('caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock','caseFlt',4,'p_caseFlt','sintax.py',270),
  ('casesFlt -> caseFlt','casesFlt',1,'p_casesFlt','sintax.py',273),
  ('casesFlt -> caseFlt casesFlt','casesFlt',2,'p_casesFlt','sintax.py',274),
  ('casesFlt -> caseFlt defcase','casesFlt',2,'p_casesFlt','sintax.py',275),
  ('caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock','caseDob',4,'p_caseDob','sintax.py',278),
  ('casesDob -> caseDob','casesDob',1,'p_casesDob','sintax.py',281),
  ('casesDob -> caseDob casesDob','casesDob',2,'p_casesDob','sintax.py',282),
  ('casesDob -> caseDob defcase','casesDob',2,'p_casesDob','sintax.py',283),
  ('caseStr -> CASE STRING FUNCION_FLECHA codeBlock','caseStr',4,'p_caseStr','sintax.py',286),
  ('casesStr -> caseStr','casesStr',1,'p_casesStr','sintax.py',289),
  ('casesStr -> caseStr casesStr','casesStr',2,'p_casesStr','sintax.py',290),
  ('casesStr -> caseStr defcase','casesStr',2,'p_casesStr','sintax.py',291),
  ('caseChar -> CASE CHAR FUNCION_FLECHA codeBlock','caseChar',4,'p_caseChar','sintax.py',294),
  ('casesChar -> caseChar','casesChar',1,'p_casesChar','sintax.py',297),
  ('casesChar -> caseChar casesChar','casesChar',2,'p_casesChar','sintax.py',298),
  ('casesChar -> caseChar defcase','casesChar',2,'p_casesChar','sintax.py',299),
  ('caseBool -> CASE booleanos FUNCION_FLECHA codeBlock','caseBool',4,'p_caseBool','sintax.py',302),
  ('casesBool -> caseBool','casesBool',1,'p_casesBool','sintax.py',305),
  ('casesBool -> caseBool casesBool','casesBool',2,'p_casesBool','sintax.py',306),
  ('casesBool -> caseBool defcase','casesBool',2,'p_casesBool','sintax.py',307),
  ('defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock','defcase',4,'p_defcase','sintax.py',311),
  ('codeBlock -> contenidoLine','codeBlock',1,'p_codeBlock','sintax.py',314),
  ('codeBlock -> LLAVE_I contenido LLAVE_D','codeBlock',3,'p_codeBlock','sintax.py',315),
  ('if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','if',7,'p_if','sintax.py',319),
  ('if -> if elseif','if',2,'p_if','sintax.py',320),
  ('if -> if else','if',2,'p_if','sintax.py',321),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','elseif',8,'p_elseif','sintax.py',325),
  ('else -> ELSE LLAVE_I contenido LLAVE_D','else',4,'p_else','sintax.py',328),
  ('else -> elseif else','else',2,'p_else','sintax.py',329),
  ('condicional -> valorC logicos condicional','condicional',3,'p_condicional','sintax.py',333),
  ('condicional -> valorC','condicional',1,'p_condicional','sintax.py',334),
  ('valorC -> VARIABLE','valorC',1,'p_valorC','sintax.py',337),
  ('valorC -> booleanos','valorC',1,'p_valorC','sintax.py',338),
  ('valorC -> relacional','valorC',1,'p_valorC','sintax.py',339),
  ('valorC -> NOT VARIABLE','valorC',2,'p_valorC','sintax.py',340),
  ('valorC -> NOT booleanos','valorC',2,'p_valorC','sintax.py',341),
  ('valorC -> NOT relacional','valorC',2,'p_valorC','sintax.py',342),
  ('logicos -> AND','logicos',1,'p_logicos','sintax.py',345),
  ('logicos -> OR','logicos',1,'p_logicos','sintax.py',346),
  ('logicos -> NOT','logicos',1,'p_logicos','sintax.py',347),
  ('relacional -> numeros comparacion numeros','relacional',3,'p_relacional','sintax.py',352),
  ('relacional -> aritmetica comparacion aritmetica','relacional',3,'p_relacional','sintax.py',353),
  ('relacional -> aritmetica comparacion numeros','relacional',3,'p_relacional','sintax.py',354),
  ('relacional -> numeros comparacion aritmetica','relacional',3,'p_relacional','sintax.py',355),
  ('relacional -> booleanos comparacion booleanos','relacional',3,'p_relacional','sintax.py',356),
  ('relacional -> STRING comparacion STRING','relacional',3,'p_relacional','sintax.py',357),
  ('relacional -> CHAR comparacion CHAR','relacional',3,'p_relacional','sintax.py',358),
  ('relacional -> VARIABLE comparacion numeros','relacional',3,'p_relacional','sintax.py',359),
  ('relacional -> numeros comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',360),
  ('relacional -> VARIABLE comparacion booleanos','relacional',3,'p_relacional','sintax.py',361),
  ('relacional -> booleanos comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',362),
  ('relacional -> VARIABLE comparacion STRING','relacional',3,'p_relacional','sintax.py',363),
  ('relacional -> STRING comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',364),
  ('relacional -> VARIABLE comparacion CHAR','relacional',3,'p_relacional','sintax.py',365),
  ('relacional -> CHAR comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',366),
  ('relacional -> VARIABLE comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',367),
  ('comparacion -> IGUAL_COMPARACION','comparacion',1,'p_comparacion','sintax.py',370),
  ('comparacion -> DIFERENTE','comparacion',1,'p_comparacion','sintax.py',371),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion','sintax.py',372),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion','sintax.py',373),
  ('aritmetica -> numeros aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',377),
  ('aritmetica -> VARIABLE aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',378),
  ('aritmetica -> numeros aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',379),
  ('aritmetica -> VARIABLE aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',380),
  ('aritmetica -> aritmetica aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',381),
  ('aritmetica -> aritmetica aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',382),
  ('aritmeticos -> MENOS','aritmeticos',1,'p_aritmeticos','sintax.py',385),
  ('aritmeticos -> MAS','aritmeticos',1,'p_aritmeticos','sintax.py',386),
  ('aritmeticos -> MULTIPLICACION','aritmeticos',1,'p_aritmeticos','sintax.py',387),
  ('aritmeticos -> DIVISION','aritmeticos',1,'p_aritmeticos','sintax.py',388),
  ('aritmeticos -> MOD','aritmeticos',1,'p_aritmeticos','sintax.py',389),
]

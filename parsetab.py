
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARRAYCLASS ARROBA BACKTICK BOOLCLASS CASE CATCH CHAR CHARCLASS CLASS COMA CORCHETE_D CORCHETE_I DEF DIFERENTE DIVISION DO DOBLE_PUNTO DOUBLE DOUBLECLASS ELSE EXTENDS FINAL FINALLY FLASE FLOAT FLOATCLASS FOR FOR_SOME FUNCION_FLECHA HASHTAG IF IGUAL IGUAL_COMPARACION IMPLICIT IMPORT INT INTCLASS ITERATOR LAZY LIBRERIA_IO LISTCLASS LLAVE_D LLAVE_I LONG LONGCLASS MACRO MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MOD MULTIPLICACION NEW NOT NULL OBJECT OR OVERRIDE PACKAGE PAR_D PAR_I PRINT PRINTLN PRIVATE PROTECTED PUNTO READLINE RETURN REVERSE SEALED STARTSWITH STRING STRINGCLASS SUBGUION SUPER THIS THROW TO TO_DOUBLE TO_FLOAT TO_INT TO_LONG TRAIT TRUE TRY TYPE UNTIL VAL VAR VARIABLE WHILE WITH YIELD inicio : OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D\n  | IMPORT io inicio\n  | cuerpo\n   io : VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINEcuerpo : funcion\n  | funcall\n  | impresion\n  | entrada\n  | asignacion\n  | while\n  | for\n  | match\n  | if\n  | funcion cuerpo\n  | asignacion cuerpo\n  | while cuerpo\n  | for cuerpo\n  | if cuerpo\n  | match cuerpo\n  | startsWithcontenido : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entrada\n  | while\n  | for\n  | match\n  | if\n  | aritmetica\n  | asignacion contenido\n  | reasignacion contenido\n  | funcall contenido\n  | impresion contenido\n  | entrada contenido\n  | while contenido\n  | for contenido\n  | if contenido\n  | match contenido\n  | aritmetica contenidocontenidoLine : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entradaasignacion : VAR VARIABLE IGUAL VARIABLE\n  | VAL VARIABLE IGUAL VARIABLE\n  | VAR VARIABLE IGUAL aritmetica\n  | VAL VARIABLE IGUAL aritmetica\n  | VAR VARIABLE IGUAL returnfun\n  | VAL VARIABLE IGUAL returnfun\n  | asignacionLong\n  | asignacionInt\n  | asignacionFloat\n  | asignacionDouble\n  | asignacionString\n  | asignacionChar\n  | asignacionBoolean\n  | array\n  | listasignacionLong :  VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLEasignacionFloat : VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLEasignacionDouble : VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLEasignacionString : VAR VARIABLE IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAL VARIABLE IGUAL STRING\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLEasignacionChar : VAR VARIABLE IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAL VARIABLE IGUAL CHAR\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLEasignacionBoolean : VAR VARIABLE IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAL VARIABLE IGUAL booleanos\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLEreasignacion :  VARIABLE IGUAL valor\n      | VARIABLE IGUAL returnfun\n      | VARIABLE IGUAL aritmetica\n      | VARIABLE PAR_I INT PAR_D IGUAL valortipo : CHARCLASS\n  | STRINGCLASS\n  | BOOLCLASS\n  | INTCLASS\n  | LONGCLASS\n  | DOUBLECLASS\n  | FLOATCLASS\n  | ARRAYCLASS CORCHETE_I tipo CORCHETE_D\n  | LISTCLASS CORCHETE_I tipo CORCHETE_Dvalor : STRING\n  | CHAR\n  | VARIABLE\n  | numeros\n  | booleanos\n  | VARIABLE PAR_I VARIABLE PAR_D\n  | VARIABLE PAR_I INT PAR_Dbooleanos : TRUE\n  | FLASE\n  | startsWithnumeros : INT\n  | LONG\n  | FLOAT\n  | DOUBLEfuncion : DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D\n  | DEF VARIABLE parametro LLAVE_I contenido LLAVE_Ddeclaracion : VARIABLE DOBLE_PUNTO tipodeclaracion :  VARIABLE DOBLE_PUNTO tipo IGUAL valor parametro : parametros\n  | PAR_I PAR_D parametros : PAR_I declaracion PAR_D \n    | PAR_I declaracion PAR_D parametrosfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D\n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D \n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_Ddectipo : DOBLE_PUNTO tipo dectipoTupla : DOBLE_PUNTO PAR_I tipos PAR_Dtipos : tipo\n    | tipo tiposentrytiposentry : COMA tipo \n  | COMA tipo tiposentryimpresion : PRINTLN PAR_I valorI PAR_D\n  | PRINT PAR_I valorI PAR_DvalorI : valor MAS valorI\n  | valorentrada : READLINE PAR_I PAR_Dfuncall : VARIABLE varparen varparen : PAR_I valores PAR_D\n  | PAR_I PAR_D\n  | varparen PAR_I valores PAR_D\n  | varparen PAR_I PAR_D returnfun : returnCastable\n      | castingcallreturnCastable : entrada\n      | funcallcastingcall : returnCastable PUNTO castingfun\n      | VARIABLE PUNTO castingfuncastingfun : TO_INT\n    | TO_DOUBLE\n    | TO_FLOAT\n    | TO_LONGarray : VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | arrayInt\n  | arrayDoublelist : VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_Dvalores : valor\n  | valor COMA valorestuple : PAR_I valores PAR_Dasignacion : VAR VARIABLE IGUAL tuple \n      | VAL VARIABLE IGUAL tuplewhile : WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_Dfor : FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_Dmatch : VARIABLE MATCH  LLAVE_I cases LLAVE_Dcases : casesInt\n    | casesLgn\n    | casesFlt\n    | casesDob\n    | casesStr\n    | casesChar\n    | casesBoolcaseInt : CASE INT FUNCION_FLECHA codeBlock casesInt : caseInt \n      | caseInt casesInt\n      | caseInt defcasecaseLgn : CASE LONG FUNCION_FLECHA codeBlock casesLgn : caseLgn \n      | caseLgn casesLgn\n      | caseLgn defcasecaseFlt : CASE FLOAT FUNCION_FLECHA codeBlock casesFlt : caseFlt \n      | caseFlt casesFlt\n      | caseFlt defcasecaseDob : CASE DOUBLE FUNCION_FLECHA codeBlock casesDob : caseDob \n      | caseDob casesDob\n      | caseDob defcasecaseStr : CASE STRING FUNCION_FLECHA codeBlock casesStr : caseStr\n      | caseStr casesStr\n      | caseStr defcasecaseChar : CASE CHAR FUNCION_FLECHA codeBlock casesChar : caseChar\n      | caseChar casesChar\n      | caseChar defcasecaseBool : CASE booleanos FUNCION_FLECHA codeBlock casesBool : caseBool\n      | caseBool casesBool\n      | caseBool defcasedefcase : CASE SUBGUION FUNCION_FLECHA codeBlock codeBlock : contenidoLine\n      | LLAVE_I contenido LLAVE_Dif : IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | if elseif\n  | if else\n  elseif : ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseifelse : ELSE LLAVE_I contenido LLAVE_D\n  | elseif elsecondicional : valorC logicos condicional\n  | valorCvalorC : VARIABLE\n  | booleanos\n  | relacional\n  | NOT VARIABLE\n  | NOT booleanos\n  | NOT relacional\n  logicos : AND\n  | OR\n  | NOTrelacional : numeros comparacion numeros\n  | aritmetica comparacion aritmetica\n  | aritmetica comparacion numeros\n  | numeros comparacion aritmetica\n  | booleanos comparacion booleanos\n  | STRING comparacion STRING\n  | CHAR comparacion CHAR\n  | VARIABLE comparacion numeros\n  | numeros comparacion VARIABLE\n  | VARIABLE comparacion booleanos\n  | booleanos comparacion VARIABLE\n  | VARIABLE comparacion STRING\n  | STRING comparacion VARIABLE\n  | VARIABLE comparacion CHAR\n  | CHAR comparacion VARIABLE\n  | VARIABLE comparacion VARIABLEcomparacion : IGUAL_COMPARACION\n  | DIFERENTE\n  | MAYOR\n  | MENORaritmetica : numeros aritmeticos numeros\n  | VARIABLE aritmeticos numeros\n  | numeros aritmeticos VARIABLE\n  | VARIABLE aritmeticos VARIABLE\n  | aritmetica aritmeticos numeros\n  | aritmetica aritmeticos VARIABLEaritmeticos : MENOS\n  | MAS\n  | MULTIPLICACION\n  | DIVISION\n  | MODarrayInt : VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D\n  arrayDouble : VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_DvaloresInt : INT\n  | valoresInt COMA INTvaloresDouble : DOUBLE\n  | valoresDouble COMA DOUBLEstartsWith : STRING PUNTO STARTSWITH PAR_I STRING PAR_Dasignacion : VAR VARIABLE DOBLE_PUNTO  dectupla\n      | VAL VARIABLE DOBLE_PUNTO dectupla dectupla : PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D\n  | PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D\n  | PAR_I STRINGCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D\n  | PAR_I STRINGCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D dectupla : PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D\n  | PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D\n  | PAR_I FLOATCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D\n  | PAR_I FLOATCLASS COMA  INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D dectupla : PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D\n  | PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D\n  | PAR_I DOUBLECLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D\n  | PAR_I DOUBLECLASS COMA  INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D dectupla : PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D\n  | PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D\n  | PAR_I LONGCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D\n  | PAR_I LONGCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT  PAR_D dectupla : PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D\n  | PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D\n  | PAR_I INTCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D\n  | PAR_I INTCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D asignacionInt : VAR VARIABLE IGUAL intvalues\n    | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues\n    | VAL VARIABLE IGUAL intvalues\n    | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvaluesintvalues : INT\n  | stringCastIntasignacionLong : VAR VARIABLE IGUAL longvalues\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues\n  | VAL VARIABLE IGUAL longvalues\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalueslongvalues : INT\n  | intvalues\n  | stringCastLongasignacionFloat : VAR VARIABLE IGUAL floatvalues\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues\n  | VAL VARIABLE IGUAL floatvalues\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvaluesfloatvalues : FLOAT\n  | longvalues\n  | stringCastFloatasignacionDouble : VAR VARIABLE IGUAL doublevalues\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues\n  | VAL VARIABLE IGUAL doublevalues\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevaluesdoublevalues : DOUBLE\n  | floatvalues\n  | stringCastDoublestringCastInt : STRING PUNTO TO_INTstringCastLong : STRING PUNTO TO_LONGstringCastFloat : STRING PUNTO TO_FLOATstringCastDouble : STRING PUNTO TO_DOUBLE'
    
_lr_action_items = {end':([1,4,6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,28,29,30,35,36,38,43,44,45,46,47,48,49,50,66,73,74,75,76,77,78,79,80,83,93,114,131,157,159,160,161,162,163,164,165,166,167,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,194,195,196,197,198,199,200,201,202,203,204,207,247,248,249,283,350,351,357,358,362,363,393,403,404,405,406,407,408,409,410,411,413,414,415,416,417,418,420,421,423,424,425,426,428,429,430,431,433,434,435,436,437,438,449,450,451,452,453,454,455,456,457,458,459,460,461,471,492,502,530,531,534,541,591,597,598,599,600,634,638,639,640,641,642,643,644,645,672,707,708,710,712,735,737,738,763,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,788,789,],[0,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-20,-52,-53,-54,-55,-56,-57,-58,-59,-60,-161,-162,-142,-14,-15,-16,-17,-19,-18,-218,-219,-144,-108,-109,-110,-111,-105,-106,-107,-2,-223,-141,-146,-143,-137,-138,-46,-48,-50,-169,-301,-295,-308,-315,-67,-73,-79,-147,-148,-299,-307,-300,-312,-314,-319,-321,-149,-150,-273,-47,-49,-51,-170,-303,-297,-310,-317,-69,-75,-81,-274,-1,-145,-178,-222,-258,-256,-255,-257,-259,-260,-113,-152,-153,-154,-155,-156,-323,-322,-324,-325,-168,-151,-61,-302,-299,-306,-296,-299,-63,-309,-312,-313,-65,-316,-319,-320,-71,-68,-77,-74,-83,-80,-62,-304,-298,-64,-311,-66,-318,-72,-70,-78,-76,-84,-82,-272,-112,-157,-159,-163,-171,-217,-220,-125,-124,-126,-127,-173,-221,-121,-120,-122,-123,-129,-128,-130,-172,-174,-175,-266,-267,-165,-176,-177,-164,-275,-276,-277,-278,-291,-292,-293,-294,-287,-288,-289,-290,-283,-284,-285,-286,-279,-280,-281,-282,-158,-160,]),'MATCH':([3,147,],[39,39,]),'PAR_I':([3,17,18,19,31,32,33,38,52,66,70,85,94,95,96,97,111,114,131,147,153,160,171,194,205,206,248,311,386,481,546,550,554,593,601,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,629,671,739,762,],[40,53,54,55,58,59,60,63,89,-144,133,135,172,193,172,193,246,-146,-143,295,301,40,316,40,332,333,-145,400,490,295,133,490,172,490,40,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,670,704,764,785,]),'LLAVE_D':([6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,28,29,30,35,36,38,43,44,45,46,47,48,49,50,66,68,69,70,71,72,73,74,75,76,77,78,79,83,93,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,136,137,138,139,140,141,142,143,144,145,146,157,159,160,161,162,163,164,165,166,167,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,194,195,196,197,198,199,200,201,202,203,204,207,248,249,250,251,253,254,256,257,259,260,262,263,265,266,268,269,283,284,285,286,287,288,289,290,291,292,293,297,350,351,357,358,362,363,382,383,386,387,388,389,390,392,393,403,404,405,406,407,408,409,410,411,413,414,415,416,417,418,420,421,423,424,425,426,428,429,430,431,433,434,435,436,437,438,449,450,451,452,453,454,455,456,457,458,459,460,461,464,470,471,473,474,476,477,478,479,480,482,483,484,485,486,487,492,502,530,531,534,541,542,543,545,550,551,552,553,587,590,591,592,593,594,595,596,597,598,599,600,601,602,603,631,634,638,639,640,641,642,643,644,645,672,675,676,705,706,707,708,710,712,735,737,738,763,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,788,789,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-20,-52,-53,-54,-55,-56,-57,-58,-59,-60,-161,-162,-142,-14,-15,-16,-17,-19,-18,-218,-219,-144,-98,-99,-100,-101,-102,-108,-109,-110,-111,-105,-106,-107,-223,-141,247,-146,249,-179,-180,-181,-182,-183,-184,-185,-187,-191,-195,-199,-203,-207,-211,-143,283,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-137,-138,-46,-48,-50,-169,-301,-295,-308,-315,-67,-73,-79,-147,-148,-299,-307,-300,-312,-314,-319,-321,-149,-150,-273,-47,-49,-51,-170,-303,-297,-310,-317,-69,-75,-81,-274,-145,-178,-188,-189,-192,-193,-196,-197,-200,-201,-204,-205,-208,-209,-212,-213,-222,-31,-32,-33,-34,-35,-36,-37,-39,-38,-40,393,-258,-256,-255,-257,-259,-260,-103,-104,-100,-85,-86,-87,-101,492,-113,-152,-153,-154,-155,-156,-323,-322,-324,-325,-168,-151,-61,-302,-299,-306,-296,-299,-63,-309,-312,-313,-65,-316,-319,-320,-71,-68,-77,-74,-83,-80,-62,-304,-298,-64,-311,-66,-318,-72,-70,-78,-76,-84,-82,534,541,-272,-186,-215,-41,-42,-43,-44,-45,-190,-194,-198,-202,-206,-210,-112,-157,-159,-163,-171,-217,-214,590,591,597,598,599,600,634,-216,-220,-88,639,640,641,642,-125,-124,-126,-127,643,644,645,672,-173,-221,-121,-120,-122,-123,-129,-128,-130,-172,707,708,737,738,-174,-175,-266,-267,-165,-176,-177,-164,-275,-276,-277,-278,-291,-292,-293,-294,-287,-288,-289,-290,-283,-284,-285,-286,-279,-280,-281,-282,-158,-160,]),'ELSE':([14,49,50,82,83,145,283,541,591,638,],[51,84,-219,84,-223,51,-222,-217,637,-221,]),'INT':([22,23,24,25,26,27,28,29,30,35,36,38,40,49,50,53,54,58,60,63,66,68,69,70,71,72,73,74,75,76,77,78,79,83,86,93,94,96,103,114,130,131,132,133,135,137,138,139,140,141,142,143,144,145,146,150,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,194,195,196,197,198,199,200,201,202,203,204,207,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,237,238,239,240,244,248,249,252,283,294,295,296,316,319,320,321,322,332,333,334,335,336,337,343,350,351,357,358,362,363,368,371,382,383,386,387,388,389,390,394,395,403,404,405,406,407,408,409,410,411,413,414,415,416,417,418,420,421,423,424,425,426,428,429,430,431,433,434,435,436,437,438,449,450,451,452,453,454,455,456,457,458,459,460,461,468,469,471,475,489,490,494,501,502,530,531,534,536,537,538,541,548,549,584,591,592,634,635,636,638,647,653,654,655,656,670,672,673,674,704,707,708,710,711,712,714,723,729,733,735,737,738,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,788,789,],[-52,-53,-54,-55,-56,-57,-58,-59,-60,-161,-162,-142,73,-218,-219,73,73,73,73,73,-144,-98,-99,-100,-101,-102,-108,-109,-110,-111,-105,-106,-107,-223,73,-141,175,175,73,-146,271,-143,73,280,73,73,73,73,73,73,73,73,73,73,73,73,-137,73,-138,-46,-48,-50,-169,-301,-295,-308,-315,-67,-73,-79,73,-147,-148,-299,-307,-300,-312,-314,-319,-321,-149,-150,-273,-47,-49,-51,-170,-303,-297,-310,-317,-69,-75,-81,-274,73,-232,-233,-234,73,73,-251,-252,-253,-254,-261,-262,-263,-264,-265,73,73,73,73,370,-145,-178,271,-222,73,391,73,73,417,421,417,417,73,73,417,421,417,417,73,-258,-256,-255,-257,-259,-260,466,73,-103,-104,-100,-85,-86,-87,-101,73,73,-152,-153,-154,-155,-156,-323,-322,-324,-325,-168,-151,-61,-302,-299,-306,-296,-299,-63,-309,-312,-313,-65,-316,-319,-320,-71,-68,-77,-74,-83,-80,-62,-304,-298,-64,-311,-66,-318,-72,-70,-78,-76,-84,-82,539,540,-272,73,73,547,73,73,-157,-159,-163,-171,585,586,73,-217,73,73,73,-220,-88,-173,73,73,-221,679,686,687,688,689,73,-172,73,73,73,-174,-175,-266,740,-267,742,751,757,761,-165,-176,-177,-164,786,-275,-276,-277,-278,-291,-292,-293,-294,-287,-288,-289,-290,-283,-284,-285,-286,-279,-280,-281,-282,787,-158,-160,]),'LONG':([22,23,24,25,26,27,28,29,30,35,36,38,40,49,50,53,54,58,60,63,66,68,69,70,71,72,73,74,75,76,77,78,79,83,86,93,94,96,103,114,130,131,132,135,137,138,139,140,141,142,143,144,145,146,150,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,194,195,196,197,198,199,200,201,202,203,204,207,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,237,238,239,240,248,249,255,283,294,295,296,316,332,333,343,350,351,357,358,362,363,371,382,383,386,387,388,389,390,394,395,403,404,405,406,407,408,409,410,411,413,414,415,416,417,418,420,421,423,424,425,426,428,429,430,431,433,434,435,436,437,438,449,450,451,452,453,454,455,456,457,458,459,460,461,471,475,489,490,494,501,502,530,531,534,538,541,548,549,584,591,592,634,635,636,638,657,658,659,660,670,672,673,674,704,707,708,710,712,715,719,727,731,735,737,738,763,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,788,789,],[-52,-53,-54,-55,-56,-57,-58,-59,-60,-161,-162,-142,74,-218,-219,74,74,74,74,74,-144,-98,-99,-100,-101,-102,-108,-109,-110,-111,-105,-106,-107,-223,74,-141,74,74,74,-146,272,-143,74,74,74,74,74,74,74,74,74,74,74,74,74,-137,74,-138,-46,-48,-50,-169,-301,-295,-308,-315,-67,-73,-79,74,-147,-148,-299,-307,-300,-312,-314,-319,-321,-149,-150,-273,-47,-49,-51,-170,-303,-297,-310,-317,-69,-75,-81,-274,74,-232,-233,-234,74,74,-251,-252,-253,-254,-261,-262,-263,-264,-265,74,74,74,74,-145,-178,272,-222,74,74,74,74,74,74,74,-258,-256,-255,-257,-259,-260,74,-103,-104,-100,-85,-86,-87,-101,74,74,-152,-153,-154,-155,-156,-323,-322,-324,-325,-168,-151,-61,-302,-299,-306,-296,-299,-63,-309,-312,-313,-65,-316,-319,-320,-71,-68,-77,-74,-83,-80,-62,-304,-298,-64,-311,-66,-318,-72,-70,-78,-76,-84,-82,-272,74,74,74,74,74,-157,-159,-163,-171,74,-217,74,74,74,-220,-88,-173,74,74,-221,690,691,692,693,74,-172,74,74,74,-174,-175,-266,-267,743,747,755,759,-165,-176,-177,-164,-275,-276,-277,-278,-291,-292,-293,-294,-287,-288,-289,-290,-283,-284,-285,-286,-279,-280,-281,-282,-158,-160,]),'FLOAT':([22,23,24,25,26,27,28,29,30,35,36,38,40,49,50,53,54,58,60,63,66,68,69,70,71,72,73,74,75,76,77,78,79,83,86,93,94,96,103,114,130,131,132,135,137,138,139,140,141,142,143,144,145,146,150,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,194,195,196,197,198,199,200,201,202,203,204,207,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,237,238,239,240,248,249,258,283,294,295,296,316,321,322,332,333,336,337,343,350,351,357,358,362,363,371,382,383,386,387,388,389,390,394,395,403,404,405,406,407,408,409,410,411,413,414,415,416,417,418,420,421,423,424,425,426,428,429,430,431,433,434,435,436,437,438,449,450,451,452,453,454,455,456,457,458,459,460,461,471,475,489,490,494,501,502,530,531,534,538,541,548,549,584,591,592,634,635,636,638,665,666,667,668,670,672,673,674,704,707,708,710,712,717,721,725,728,735,737,738,763,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,788,789,],[-52,-53,-54,-55,-56,-57,-58,-59,-60,-161,-162,-142,75,-218,-219,75,75,75,75,75,-144,-98,-99,-100,-101,-102,-108,-109,-110,-111,-105,-106,-107,-223,75,-141,178,178,75,-146,273,-143,75,75,75,75,75,75,75,75,75,75,75,75,75,-137,75,-138,-46,-48,-50,-169,-301,-295,-308,-315,-67,-73,-79,75,-147,-148,-299,-307,-300,-312,-314,-319,-321,-149,-150,-273,-47,-49,-51,-170,-303,-297,-310,-317,-69,-75,-81,-274,75,-232,-233,-234,75,75,-251,-252,-253,-254,-261,-262,-263,-264,-265,75,75,75,75,-145,-178,273,-222,75,75,75,75,425,425,75,75,425,425,75,-258,-256,-255,-257,-259,-260,75,-103,-104,-100,-85,-86,-87,-101,75,75,-152,-153,-154,-155,-156,-323,-322,-324,-325,-168,-151,-61,-302,-299,-306,-296,-299,-63,-309,-312,-313,-65,-316,-319,-320,-71,-68,-77,-74,-83,-80,-62,-304,-298,-64,-311,-66,-318,-72,-70,-78,-76,-84,-82,-272,75,75,75,75,75,-157,-159,-163,-171,75,-217,75,75,75,-220,-88,-173,75,75,-221,698,699,700,701,75,-172,75,75,75,-174,-175,-266,-267,745,749,753,756,-165,-176,-177,-164,-275,-276,-277,-278,-291,-292,-293,-294,-287,-288,-289,-290,-283,-284,-285,-286,-279,-280,-281,-282,-158,-160,]),'DOUBLE':([22,23,24,25,26,27,28,29,30,35,36,38,40,49,50,53,54,58,60,63,66,68,69,70,71,72,73,74,75,76,77,78,79,83,86,93,94,96,103,114,130,131,132,135,137,138,139,140,141,142,143,144,145,146,150,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,194,195,196,197,198,199,200,201,202,203,204,207,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,237,238,239,240,248,249,261,283,294,295,296,316,322,332,333,337,343,350,351,357,358,362,363,371,382,383,386,387,388,389,390,394,395,403,404,405,406,407,408,409,410,411,413,414,415,416,417,418,420,421,423,424,425,426,428,429,430,431,433,434,435,436,437,438,449,450,451,452,453,454,455,456,457,458,459,460,461,471,475,489,490,494,501,502,530,531,534,538,541,548,549,584,591,592,634,635,636,638,648,661,662,663,664,670,672,673,674,704,707,708,710,712,713,716,720,724,732,735,737,738,763,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,788,789,],[-52,-53,-54,-55,-56,-57,-58,-59,-60,-161,-162,-142,76,-218,-219,76,76,76,76,76,-144,-98,-99,-100,-101,-102,-108,-109,-110,-111,-105,-106,-107,-223,76,-141,180,180,76,-146,274,-143,76,76,76,76,76,76,76,76,76,76,76,76,76,-137,76,-138,-46,-48,-50,-169,-301,-295,-308,-315,-67,-73,-79,76,-147,-148,-299,-307,-300,-312,-314,-319,-321,-149,-150,-273,-47,-49,-51,-170,-303,-297,-310,-317,-69,-75,-81,-274,76,-232,-233,-234,76,76,-251,-252,-253,-254,-261,-262,-263,-264,-265,76,76,76,76,-145,-178,274,-222,76,76,76,76,430,76,76,430,76,-258,-256,-255,-257,-259,-260,76,-103,-104,-100,-85,-86,-87,-101,76,76,-152,-153,-154,-155,-156,-323,-322,-324,-325,-168,-151,-61,-302,-299,-306,-296,-299,-63,-309,-312,-313,-65,-316,-319,-320,-71,-68,-77,-74,-83,-80,-62,-304,-298,-64,-311,-66,-318,-72,-70,-78,-76,-84,-82,-272,76,76,76,76,76,-157,-159,-163,-171,76,-217,76,76,76,-220,-88,-173,76,76,-221,681,694,695,696,697,76,-172,76,76,76,-174,-175,-266,-267,741,744,748,752,760,-165,-176,-177,-164,-275,-276,-277,-278,-291,-292,-293,-294,-287,-288,-289,-290,-283,-284,-285,-286,-279,-280,-281,-282,-158,-160,]),'RETURN':([22,23,24,25,26,27,28,29,30,35,36,38,49,50,66,68,69,70,71,72,73,74,75,76,77,78,79,83,93,114,131,137,138,139,140,141,142,143,144,145,146,157,159,160,161,162,163,164,165,166,167,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,194,195,196,197,198,199,200,201,202,203,204,207,248,249,283,284,285,286,287,288,289,290,291,292,293,350,351,357,358,362,363,382,383,386,387,388,389,390,394,403,404,405,406,407,408,409,410,411,413,414,415,416,417,418,420,421,423,424,425,426,428,429,430,431,433,434,435,436,437,438,449,450,451,452,453,454,455,456,457,458,459,460,461,471,493,495,502,530,531,534,541,591,592,634,638,672,707,708,710,712,735,737,738,763,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,788,789,],[-52,-53,-54,-55,-56,-57,-58,-59,-60,-161,-162,-142,-218,-219,-144,-98,-99,-100,-101,-102,-108,-109,-110,-111,-105,-106,-107,-223,-141,-146,-143,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-137,-138,-46,-48,-50,-169,-301,-295,-308,-315,-67,-73,-79,-147,-148,-299,-307,-300,-312,-314,-319,-321,-149,-150,-273,-47,-49,-51,-170,-303,-297,-310,-317,-69,-75,-81,-274,-145,-178,-222,-31,-32,-33,-34,-35,-36,-37,-39,-38,-40,-258,-256,-255,-257,-259,-260,-103,-104,-100,-85,-86,-87,-101,494,-152,-153,-154,-155,-156,-323,-322,-324,-325,-168,-151,-61,-302,-299,-306,-296,-299,-63,-309,-312,-313,-65,-316,-319,-320,-71,-68,-77,-74,-83,-80,-62,-304,-298,-64,-311,-66,-318,-72,-70,-78,-76,-84,-82,-272,549,554,-157,-159,-163,-171,-217,-220,-88,-173,-221,-172,-174,-175,-266,-267,-165,-176,-177,-164,-275,-276,-277,-278,-291,-292,-293,-294,-287,-288,-289,-290,-283,-284,-285,-286,-279,-280,-281,-282,-158,-160,]),'CASE':([22,23,24,25,26,27,28,29,30,35,36,38,64,66,68,69,70,71,72,73,74,75,76,77,78,79,93,114,123,124,125,126,127,128,129,131,157,159,160,161,162,163,164,165,166,167,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,194,195,196,197,198,199,200,201,202,203,204,207,248,350,351,357,358,362,363,382,383,386,387,388,389,390,403,404,405,406,407,408,409,410,411,413,414,415,416,417,418,420,421,423,424,425,426,428,429,430,431,433,434,435,436,437,438,449,450,451,452,453,454,455,456,457,458,459,460,461,471,473,474,476,477,478,479,480,482,483,484,485,486,487,502,530,531,590,592,710,712,735,763,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,788,789,],[-52,-53,-54,-55,-56,-57,-58,-59,-60,-161,-162,-142,130,-144,-98,-99,-100,-101,-102,-108,-109,-110,-111,-105,-106,-107,-141,-146,252,255,258,261,264,267,270,-143,-137,-138,-46,-48,-50,-169,-301,-295,-308,-315,-67,-73,-79,-147,-148,-299,-307,-300,-312,-314,-319,-321,-149,-150,-273,-47,-49,-51,-170,-303,-297,-310,-317,-69,-75,-81,-274,-145,-258,-256,-255,-257,-259,-260,-103,-104,-100,-85,-86,-87,-101,-152,-153,-154,-155,-156,-323,-322,-324,-325,-168,-151,-61,-302,-299,-306,-296,-299,-63,-309,-312,-313,-65,-316,-319,-320,-71,-68,-77,-74,-83,-80,-62,-304,-298,-64,-311,-66,-318,-72,-70,-78,-76,-84,-82,-272,-186,-215,-41,-42,-43,-44,-45,-190,-194,-198,-202,-206,-210,-157,-159,-163,-216,-88,-266,-267,-165,-164,-275,-276,-277,-278,-291,-292,-293,-294,-287,-288,-289,-290,-283,-284,-285,-286,-279,-280,-281,-282,-158,-160,]),'PUNTO':([34,38,42,66,68,93,106,114,131,134,160,168,173,182,183,194,202,248,275,348,384,386,419,422,427,432,550,593,601,],[61,-142,81,-144,61,-141,61,-146,-143,281,314,315,318,-149,-150,314,315,-145,61,61,488,314,503,504,505,506,314,314,314,]),'LLAVE_I':([37,39,51,84,87,88,149,154,217,245,298,299,311,375,376,377,378,379,380,381,385,401,467,472,535,588,589,632,633,],[62,64,86,86,150,-116,296,-117,343,371,394,395,-118,475,475,475,475,475,475,475,489,-119,538,475,584,635,636,673,674,]),'PAR_D':([40,55,63,65,67,68,69,70,71,72,73,74,75,76,77,78,79,89,90,91,92,98,99,100,101,102,110,113,155,234,235,236,278,279,280,282,295,302,303,304,305,306,307,308,313,317,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,362,363,364,365,366,367,369,372,382,383,391,396,397,402,412,447,448,465,471,490,497,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,539,540,546,547,555,556,557,558,585,586,604,678,679,680,681,703,736,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,786,787,],[66,93,114,131,-166,-98,-99,-100,-101,-102,-108,-109,-110,-111,-105,-106,-107,154,157,-140,159,217,-225,-226,-227,-228,245,248,311,-229,-230,-231,-167,382,383,385,66,-89,-90,-91,-92,-93,-94,-95,-139,413,-224,-250,-242,-244,-246,-248,-258,-256,-239,-245,-235,-238,-243,-255,-257,-236,-237,-259,-260,-240,-247,-241,-249,467,471,-103,-104,491,496,-133,-114,502,530,531,535,-272,66,-134,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,588,589,382,383,-135,-96,-97,-115,632,633,-136,710,-268,712,-270,735,763,-269,-271,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,788,789,]),'CHAR':([40,53,54,58,60,63,94,96,103,130,132,135,158,172,218,219,220,221,222,224,225,226,227,242,267,294,295,316,324,332,333,339,490,494,501,548,549,670,704,],[69,69,69,107,107,69,169,203,107,276,69,107,69,69,107,-232,-233,-234,349,-251,-252,-253,-254,366,276,69,69,69,436,69,69,459,69,69,69,69,69,69,69,]),'TRUE':([40,53,54,58,60,63,94,96,103,130,132,135,158,172,218,219,220,221,222,224,225,226,227,233,270,294,295,316,325,332,333,340,490,494,501,548,549,670,704,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-232,-233,-234,77,-251,-252,-253,-254,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'FLASE':([40,53,54,58,60,63,94,96,103,130,132,135,158,172,218,219,220,221,222,224,225,226,227,233,270,294,295,316,325,332,333,340,490,494,501,548,549,670,704,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-232,-233,-234,78,-251,-252,-253,-254,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'IGUAL':([56,57,87,88,147,151,152,154,185,186,187,188,189,190,191,208,209,210,211,212,213,214,300,302,303,304,305,306,307,308,311,401,402,481,491,496,507,508,509,532,533,556,557,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,],[94,96,149,-116,294,298,299,-117,319,320,321,322,323,324,325,334,335,336,337,338,339,340,-131,-89,-90,-91,-92,-93,-94,-95,-118,-119,501,294,548,-132,559,560,561,582,583,-96,-97,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,]),'DOBLE_PUNTO':([56,57,87,88,154,156,311,401,],[95,97,153,-116,-117,312,-118,-119,]),'NOT':([58,60,73,74,75,76,77,78,79,99,100,101,102,135,218,219,220,221,234,235,236,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,362,363,364,365,366,367,471,],[103,103,-108,-109,-110,-111,-105,-106,-107,221,-226,-227,-228,103,103,-232,-233,-234,-229,-230,-231,-250,-242,-244,-246,-248,-258,-256,-239,-245,-235,-238,-243,-255,-257,-236,-237,-259,-260,-240,-247,-241,-249,-272,]),'STARTSWITH':([61,315,],[111,111,]),'COMA':([67,68,69,70,71,72,73,74,75,76,77,78,79,302,303,304,305,306,307,308,327,328,329,330,331,382,383,391,397,471,546,547,555,556,557,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,740,741,],[132,-98,-99,-100,-101,-102,-108,-109,-110,-111,-105,-106,-107,-89,-90,-91,-92,-93,-94,-95,442,443,444,445,446,-103,-104,-108,498,-272,-100,-108,498,-96,-97,711,-268,713,-270,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,-269,-271,]),'MAS':([68,69,70,71,72,73,74,75,76,77,78,79,91,100,104,105,146,147,148,160,161,175,178,180,194,195,234,350,351,354,355,356,357,358,359,360,361,362,363,382,383,386,389,390,471,550,553,593,596,],[-98,-99,-100,-101,-102,-108,-109,-110,-111,-105,-106,-107,158,229,229,229,229,229,229,229,229,-108,-110,-111,229,229,229,-258,-256,229,229,229,-255,-257,229,229,229,-259,-260,-103,-104,229,229,229,-272,229,229,229,229,]),'IGUAL_COMPARACION':([73,74,75,76,77,78,79,100,101,104,105,106,107,234,235,350,351,357,358,362,363,471,],[-108,-109,-110,-111,-105,-106,-107,224,224,224,224,224,224,224,224,-258,-256,-255,-257,-259,-260,-272,]),'DIFERENTE':([73,74,75,76,77,78,79,100,101,104,105,106,107,234,235,350,351,357,358,362,363,471,],[-108,-109,-110,-111,-105,-106,-107,225,225,225,225,225,225,225,225,-258,-256,-255,-257,-259,-260,-272,]),'MAYOR':([73,74,75,76,77,78,79,100,101,104,105,106,107,234,235,350,351,357,358,362,363,471,],[-108,-109,-110,-111,-105,-106,-107,226,226,226,226,226,226,226,226,-258,-256,-255,-257,-259,-260,-272,]),'MENOR':([73,74,75,76,77,78,79,100,101,104,105,106,107,234,235,350,351,357,358,362,363,471,],[-108,-109,-110,-111,-105,-106,-107,227,227,227,227,227,227,227,227,-258,-256,-255,-257,-259,-260,-272,]),'MENOS':([73,74,75,76,100,104,105,146,147,148,160,161,175,178,180,194,195,234,350,351,354,355,356,357,358,359,360,361,362,363,386,389,390,550,553,593,596,],[-108,-109,-110,-111,228,228,228,228,228,228,228,228,-108,-110,-111,228,228,228,-258,-256,228,228,228,-255,-257,228,228,228,-259,-260,228,228,228,228,228,228,228,]),'MULTIPLICACION':([73,74,75,76,100,104,105,146,147,148,160,161,175,178,180,194,195,234,350,351,354,355,356,357,358,359,360,361,362,363,386,389,390,550,553,593,596,],[-108,-109,-110,-111,230,230,230,230,230,230,230,230,-108,-110,-111,230,230,230,-258,-256,230,230,230,-255,-257,230,230,230,-259,-260,230,230,230,230,230,230,230,]),'DIVISION':([73,74,75,76,100,104,105,146,147,148,160,161,175,178,180,194,195,234,350,351,354,355,356,357,358,359,360,361,362,363,386,389,390,550,553,593,596,],[-108,-109,-110,-111,231,231,231,231,231,231,231,231,-108,-110,-111,231,231,231,-258,-256,231,231,231,-255,-257,231,231,231,-259,-260,231,231,231,231,231,231,231,]),'MOD':([73,74,75,76,100,104,105,146,147,148,160,161,175,178,180,194,195,234,350,351,354,355,356,357,358,359,360,361,362,363,386,389,390,550,553,593,596,],[-108,-109,-110,-111,232,232,232,232,232,232,232,232,-108,-110,-111,232,232,232,-258,-256,232,232,232,-255,-257,232,232,232,-259,-260,232,232,232,232,232,232,232,]),'AND':([73,74,75,76,77,78,79,99,100,101,102,234,235,236,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,362,363,364,365,366,367,471,],[-108,-109,-110,-111,-105,-106,-107,219,-226,-227,-228,-229,-230,-231,-250,-242,-244,-246,-248,-258,-256,-239,-245,-235,-238,-243,-255,-257,-236,-237,-259,-260,-240,-247,-241,-249,-272,]),'OR':([73,74,75,76,77,78,79,99,100,101,102,234,235,236,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,362,363,364,365,366,367,471,],[-108,-109,-110,-111,-105,-106,-107,220,-226,-227,-228,-229,-230,-231,-250,-242,-244,-246,-248,-258,-256,-239,-245,-235,-238,-243,-255,-257,-236,-237,-259,-260,-240,-247,-241,-249,-272,]),'FUNCION_FLECHA':([77,78,79,271,272,273,274,275,276,277,373,374,471,],[-105,-106,-107,375,376,377,378,379,380,381,472,379,-272,]),'ARRAYCLASS':([94,95,96,97,153,301,312,326,341,342,398,399,498,560,561,605,628,677,702,],[171,192,205,215,309,309,309,309,309,309,309,309,309,606,607,646,669,309,309,]),'LONGCLASS':([95,97,153,193,301,312,326,341,342,398,399,442,443,445,446,498,677,702,],[185,208,306,329,306,306,306,306,306,306,306,511,515,523,527,306,306,306,]),'INTCLASS':([95,97,153,193,301,312,326,341,342,398,399,442,444,445,446,498,677,702,],[186,209,305,328,305,305,440,305,305,305,305,510,519,525,529,305,305,305,]),'FLOATCLASS':([95,97,153,193,301,312,326,341,342,398,399,442,443,444,445,498,677,702,],[187,210,308,331,308,308,308,308,308,308,308,513,517,521,524,308,308,308,]),'DOUBLECLASS':([95,97,153,193,301,312,326,341,342,398,399,442,443,444,446,498,677,702,],[188,211,307,330,307,307,441,307,307,307,307,512,516,520,528,307,307,307,]),'STRINGCLASS':([95,97,153,193,301,312,326,341,342,398,399,443,444,445,446,498,677,702,],[189,212,303,327,303,303,303,303,303,303,303,514,518,522,526,303,303,303,]),'CHARCLASS':([95,97,153,301,312,326,341,342,398,399,498,677,702,],[190,213,302,302,302,302,302,302,302,302,302,302,302,]),'BOOLCLASS':([95,97,153,301,312,326,341,342,398,399,498,677,702,],[191,214,304,304,304,304,304,304,304,304,304,304,304,]),'LISTCLASS':([96,97,153,301,312,326,341,342,398,399,498,583,630,677,702,],[206,216,310,310,310,310,310,310,310,310,310,629,671,310,310,]),'ITERATOR':([109,243,],[244,368,]),'CORCHETE_I':([192,215,216,309,310,646,669,],[326,341,342,398,399,677,702,]),'SUBGUION':([252,255,258,261,264,267,270,],[373,373,373,373,373,373,373,]),'CORCHETE_D':([302,303,304,305,306,307,308,439,440,441,462,463,499,500,556,557,709,734,],[-89,-90,-91,-92,-93,-94,-95,507,508,509,532,533,556,557,-96,-97,739,762,]),'TO_INT':([314,315,318,503,504,505,506,],[404,409,404,409,409,409,409,]),'TO_DOUBLE':([314,315,318,506,],[405,411,405,411,]),'TO_FLOAT':([314,315,318,505,506,],[406,410,406,410,410,]),'TO_LONG':([314,315,318,503,505,506,],[407,408,407,408,408,408,]),'TO':([370,466,],[468,536,]),'UNTIL':([370,466,],[469,537,]),'NEW':([559,582,583,],[605,628,630,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,41,],[1,80,]),'cuerpo':([0,6,10,11,12,13,14,41,62,],[4,43,44,45,46,47,48,4,112,]),'funcion':([0,6,10,11,12,13,14,41,62,],[6,6,6,6,6,6,6,6,6,]),'funcall':([0,6,10,11,12,13,14,41,62,86,94,96,137,138,139,140,141,142,143,144,145,146,150,294,296,343,371,375,376,377,378,379,380,381,394,395,472,475,489,494,538,549,554,584,635,636,673,674,],[7,7,7,7,7,7,7,7,7,139,183,183,139,139,139,139,139,139,139,139,139,139,139,183,139,139,139,478,478,478,478,478,478,478,139,139,478,139,139,183,139,183,183,139,139,139,139,139,]),'impresion':([0,6,10,11,12,13,14,41,62,86,137,138,139,140,141,142,143,144,145,146,150,296,343,371,375,376,377,378,379,380,381,394,395,472,475,489,538,584,635,636,673,674,],[8,8,8,8,8,8,8,8,8,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,479,479,479,479,479,479,479,140,140,479,140,140,140,140,140,140,140,140,]),'entrada':([0,6,10,11,12,13,14,41,62,86,94,96,137,138,139,140,141,142,143,144,145,146,150,294,296,343,371,375,376,377,378,379,380,381,394,395,472,475,489,494,538,549,554,584,635,636,673,674,],[9,9,9,9,9,9,9,9,9,141,182,182,141,141,141,141,141,141,141,141,141,141,141,182,141,141,141,480,480,480,480,480,480,480,141,141,480,141,141,182,141,182,182,141,141,141,141,141,]),'asignacion':([0,6,10,11,12,13,14,41,62,86,137,138,139,140,141,142,143,144,145,146,150,296,343,371,375,376,377,378,379,380,381,394,395,472,475,489,538,584,635,636,673,674,],[10,10,10,10,10,10,10,10,10,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,476,476,476,476,476,476,476,137,137,476,137,137,137,137,137,137,137,137,]),'while':([0,6,10,11,12,13,14,41,62,86,137,138,139,140,141,142,143,144,145,146,150,296,343,371,394,395,475,489,538,584,635,636,673,674,],[11,11,11,11,11,11,11,11,11,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'for':([0,6,10,11,12,13,14,41,62,86,137,138,139,140,141,142,143,144,145,146,150,296,343,371,394,395,475,489,538,584,635,636,673,674,],[12,12,12,12,12,12,12,12,12,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'match':([0,6,10,11,12,13,14,41,62,86,137,138,139,140,141,142,143,144,145,146,150,296,343,371,394,395,475,489,538,584,635,636,673,674,],[13,13,13,13,13,13,13,13,13,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'if':([0,6,10,11,12,13,14,41,62,86,137,138,139,140,141,142,143,144,145,146,150,296,343,371,394,395,475,489,538,584,635,636,673,674,],[14,14,14,14,14,14,14,14,14,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'startsWith':([0,6,10,11,12,13,14,40,41,53,54,58,60,62,63,94,96,103,130,132,135,158,172,218,222,233,270,294,295,316,325,332,333,340,490,494,501,548,549,670,704,],[15,15,15,15,15,15,15,79,15,79,79,79,79,15,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'asignacionLong':([0,6,10,11,12,13,14,41,62,86,137,138,139,140,141,142,143,144,145,146,150,296,343,371,375,376,377,378,379,380,381,394,395,472,475,489,538,584,635,636,673,674,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'asignacionInt':([0,6,10,11,12,13,14,41,62,86,137,138,139,140,141,142,143,144,145,146,150,296,343,371,375,376,377,378,379,380,381,394,395,472,475,489,538,584,635,636,673,674,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'asignacionFloat':([0,6,10,11,12,13,14,41,62,86,137,138,139,140,141,142,143,144,145,146,150,296,343,371,375,376,377,378,379,380,381,394,395,472,475,489,538,584,635,636,673,674,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'asignacionDouble':([0,6,10,11,12,13,14,41,62,86,137,138,139,140,141,142,143,144,145,146,150,296,343,371,375,376,377,378,379,380,381,394,395,472,475,489,538,584,635,636,673,674,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'asignacionString':([0,6,10,11,12,13,14,41,62,86,137,138,139,140,141,142,143,144,145,146,150,296,343,371,375,376,377,378,379,380,381,394,395,472,475,489,538,584,635,636,673,674,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'asignacionChar':([0,6,10,11,12,13,14,41,62,86,137,138,139,140,141,142,143,144,145,146,150,296,343,371,375,376,377,378,379,380,381,394,395,472,475,489,538,584,635,636,673,674,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'asignacionBoolean':([0,6,10,11,12,13,14,41,62,86,137,138,139,140,141,142,143,144,145,146,150,296,343,371,375,376,377,378,379,380,381,394,395,472,475,489,538,584,635,636,673,674,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'array':([0,6,10,11,12,13,14,41,62,86,137,138,139,140,141,142,143,144,145,146,150,296,343,371,375,376,377,378,379,380,381,394,395,472,475,489,538,584,635,636,673,674,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'list':([0,6,10,11,12,13,14,41,62,86,137,138,139,140,141,142,143,144,145,146,150,296,343,371,375,376,377,378,379,380,381,394,395,472,475,489,538,584,635,636,673,674,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'arrayInt':([0,6,10,11,12,13,14,41,62,86,137,138,139,140,141,142,143,144,145,146,150,296,343,371,375,376,377,378,379,380,381,394,395,472,475,489,538,584,635,636,673,674,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'arrayDouble':([0,6,10,11,12,13,14,41,62,86,137,138,139,140,141,142,143,144,145,146,150,296,343,371,375,376,377,378,379,380,381,394,395,472,475,489,538,584,635,636,673,674,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'varparen':([3,147,160,194,386,481,550,593,601,],[38,38,38,38,38,38,38,38,38,]),'io':([5,],[41,]),'elseif':([14,49,82,145,591,],[49,82,82,49,638,]),'else':([14,49,82,145,],[50,83,83,50,]),'valores':([40,63,132,172,295,316,332,333,490,670,704,],[65,113,278,317,65,412,447,448,65,703,736,]),'valor':([40,53,54,63,132,158,172,294,295,316,332,333,490,494,501,548,549,670,704,],[67,91,91,67,67,91,67,387,67,67,67,67,67,551,558,592,594,67,67,]),'numeros':([40,53,54,58,60,63,86,94,96,103,132,135,137,138,139,140,141,142,143,144,145,146,150,158,172,218,222,223,237,238,239,240,294,295,296,316,332,333,343,371,394,395,475,489,490,494,501,538,548,549,584,635,636,670,673,674,704,],[71,71,71,104,104,71,148,148,148,104,71,104,148,148,148,148,148,148,148,148,148,148,148,71,71,104,346,351,354,357,360,362,390,71,148,71,71,71,148,148,148,148,148,148,71,390,71,148,71,390,148,148,148,71,148,148,71,]),'booleanos':([40,53,54,58,60,63,94,96,103,130,132,135,158,172,218,222,233,270,294,295,316,325,332,333,340,490,494,501,548,549,670,704,],[72,72,72,101,101,72,170,204,235,277,72,101,72,72,101,347,352,277,72,72,72,438,72,72,461,72,72,72,72,72,72,72,]),'parametro':([52,],[87,]),'parametros':([52,311,],[88,401,]),'valorI':([53,54,158,],[90,92,313,]),'condicional':([58,60,135,218,],[98,110,282,344,]),'valorC':([58,60,135,218,],[99,99,99,99,]),'relacional':([58,60,103,135,218,],[102,102,236,102,102,]),'aritmetica':([58,60,86,94,96,103,135,137,138,139,140,141,142,143,144,145,146,150,218,237,239,294,296,343,371,394,395,475,489,494,538,549,584,635,636,673,674,],[105,105,146,161,195,105,105,146,146,146,146,146,146,146,146,146,146,146,105,355,359,389,146,146,146,146,146,146,146,553,146,596,146,146,146,146,146,]),'cases':([64,],[115,]),'casesInt':([64,123,],[116,250,]),'casesLgn':([64,124,],[117,253,]),'casesFlt':([64,125,],[118,256,]),'casesDob':([64,126,],[119,259,]),'casesStr':([64,127,],[120,262,]),'casesChar':([64,128,],[121,265,]),'casesBool':([64,129,],[122,268,]),'caseInt':([64,123,],[123,123,]),'caseLgn':([64,124,],[124,124,]),'caseFlt':([64,125,],[125,125,]),'caseDob':([64,126,],[126,126,]),'caseStr':([64,127,],[127,127,]),'caseChar':([64,128,],[128,128,]),'caseBool':([64,129,],[129,129,]),'contenido':([86,137,138,139,140,141,142,143,144,145,146,150,296,343,371,394,395,475,489,538,584,635,636,673,674,],[136,284,285,286,287,288,289,290,291,292,293,297,392,464,470,493,495,543,545,587,631,675,676,705,706,]),'reasignacion':([86,137,138,139,140,141,142,143,144,145,146,150,296,343,371,375,376,377,378,379,380,381,394,395,472,475,489,538,584,635,636,673,674,],[138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,477,477,477,477,477,477,477,138,138,477,138,138,138,138,138,138,138,138,]),'dectipo':([87,],[151,]),'dectipoTupla':([87,],[152,]),'declaracion':([89,400,],[155,155,]),'returnfun':([94,96,294,494,549,554,],[162,196,388,552,595,603,]),'tuple':([94,96,554,],[163,197,602,]),'longvalues':([94,96,319,321,322,334,336,337,],[164,198,416,426,426,450,426,426,]),'intvalues':([94,96,319,320,321,322,334,335,336,337,],[165,199,418,420,418,418,418,451,418,418,]),'floatvalues':([94,96,321,322,336,337,],[166,200,424,431,453,431,]),'doublevalues':([94,96,322,337,],[167,201,429,455,]),'returnCastable':([94,96,294,494,549,554,],[173,173,173,173,173,173,]),'castingcall':([94,96,294,494,549,554,],[174,174,174,174,174,174,]),'stringCastLong':([94,96,319,321,322,334,336,337,],[176,176,176,176,176,176,176,176,]),'stringCastInt':([94,96,319,320,321,322,334,335,336,337,],[177,177,177,177,177,177,177,177,177,177,]),'stringCastFloat':([94,96,321,322,336,337,],[179,179,179,179,179,179,]),'stringCastDouble':([94,96,322,337,],[181,181,181,181,]),'dectupla':([95,97,],[184,207,]),'logicos':([99,],[218,]),'comparacion':([100,101,104,105,106,107,234,235,],[222,233,237,239,241,242,222,233,]),'aritmeticos':([100,104,105,146,147,148,160,161,194,195,234,354,355,356,359,360,361,386,389,390,550,553,593,596,],[223,238,240,240,223,238,223,240,223,240,223,238,240,223,240,238,223,223,240,238,223,240,223,240,]),'defcase':([123,124,125,126,127,128,129,],[251,254,257,260,263,266,269,]),'tipo':([153,301,312,326,341,342,398,399,498,677,702,],[300,397,402,439,462,463,499,500,555,709,734,]),'tipos':([301,],[396,]),'castingfun':([314,318,],[403,414,]),'codeBlock':([375,376,377,378,379,380,381,472,],[473,482,483,484,485,486,487,542,]),'contenidoLine':([375,376,377,378,379,380,381,472,],[474,474,474,474,474,474,474,474,]),'tiposentry':([397,555,],[497,604,]),'valoresInt':([647,],[678,]),'valoresDouble':([648,],[680,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D','inicio',5,'p_inicio','sintax.py',13),
  ('inicio -> IMPORT io inicio','inicio',3,'p_inicio','sintax.py',14),
  ('inicio -> cuerpo','inicio',1,'p_inicio','sintax.py',15),
  ('io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE','io',7,'p_io','sintax.py',20),
  ('cuerpo -> funcion','cuerpo',1,'p_cuerpo','sintax.py',23),
  ('cuerpo -> funcall','cuerpo',1,'p_cuerpo','sintax.py',24),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintax.py',25),
  ('cuerpo -> entrada','cuerpo',1,'p_cuerpo','sintax.py',26),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintax.py',27),
  ('cuerpo -> while','cuerpo',1,'p_cuerpo','sintax.py',28),
  ('cuerpo -> for','cuerpo',1,'p_cuerpo','sintax.py',29),
  ('cuerpo -> match','cuerpo',1,'p_cuerpo','sintax.py',30),
  ('cuerpo -> if','cuerpo',1,'p_cuerpo','sintax.py',31),
  ('cuerpo -> funcion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',32),
  ('cuerpo -> asignacion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',33),
  ('cuerpo -> while cuerpo','cuerpo',2,'p_cuerpo','sintax.py',34),
  ('cuerpo -> for cuerpo','cuerpo',2,'p_cuerpo','sintax.py',35),
  ('cuerpo -> if cuerpo','cuerpo',2,'p_cuerpo','sintax.py',36),
  ('cuerpo -> match cuerpo','cuerpo',2,'p_cuerpo','sintax.py',37),
  ('cuerpo -> startsWith','cuerpo',1,'p_cuerpo','sintax.py',38),
  ('contenido -> asignacion','contenido',1,'p_contenido','sintax.py',42),
  ('contenido -> reasignacion','contenido',1,'p_contenido','sintax.py',43),
  ('contenido -> funcall','contenido',1,'p_contenido','sintax.py',44),
  ('contenido -> impresion','contenido',1,'p_contenido','sintax.py',45),
  ('contenido -> entrada','contenido',1,'p_contenido','sintax.py',46),
  ('contenido -> while','contenido',1,'p_contenido','sintax.py',47),
  ('contenido -> for','contenido',1,'p_contenido','sintax.py',48),
  ('contenido -> match','contenido',1,'p_contenido','sintax.py',49),
  ('contenido -> if','contenido',1,'p_contenido','sintax.py',50),
  ('contenido -> aritmetica','contenido',1,'p_contenido','sintax.py',51),
  ('contenido -> asignacion contenido','contenido',2,'p_contenido','sintax.py',52),
  ('contenido -> reasignacion contenido','contenido',2,'p_contenido','sintax.py',53),
  ('contenido -> funcall contenido','contenido',2,'p_contenido','sintax.py',54),
  ('contenido -> impresion contenido','contenido',2,'p_contenido','sintax.py',55),
  ('contenido -> entrada contenido','contenido',2,'p_contenido','sintax.py',56),
  ('contenido -> while contenido','contenido',2,'p_contenido','sintax.py',57),
  ('contenido -> for contenido','contenido',2,'p_contenido','sintax.py',58),
  ('contenido -> if contenido','contenido',2,'p_contenido','sintax.py',59),
  ('contenido -> match contenido','contenido',2,'p_contenido','sintax.py',60),
  ('contenido -> aritmetica contenido','contenido',2,'p_contenido','sintax.py',61),
  ('contenidoLine -> asignacion','contenidoLine',1,'p_contenidoLine','sintax.py',65),
  ('contenidoLine -> reasignacion','contenidoLine',1,'p_contenidoLine','sintax.py',66),
  ('contenidoLine -> funcall','contenidoLine',1,'p_contenidoLine','sintax.py',67),
  ('contenidoLine -> impresion','contenidoLine',1,'p_contenidoLine','sintax.py',68),
  ('contenidoLine -> entrada','contenidoLine',1,'p_contenidoLine','sintax.py',69),
  ('asignacion -> VAR VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',73),
  ('asignacion -> VAL VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',74),
  ('asignacion -> VAR VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',75),
  ('asignacion -> VAL VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',76),
  ('asignacion -> VAR VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',77),
  ('asignacion -> VAL VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',78),
  ('asignacion -> asignacionLong','asignacion',1,'p_asignacion','sintax.py',79),
  ('asignacion -> asignacionInt','asignacion',1,'p_asignacion','sintax.py',80),
  ('asignacion -> asignacionFloat','asignacion',1,'p_asignacion','sintax.py',81),
  ('asignacion -> asignacionDouble','asignacion',1,'p_asignacion','sintax.py',82),
  ('asignacion -> asignacionString','asignacion',1,'p_asignacion','sintax.py',83),
  ('asignacion -> asignacionChar','asignacion',1,'p_asignacion','sintax.py',84),
  ('asignacion -> asignacionBoolean','asignacion',1,'p_asignacion','sintax.py',85),
  ('asignacion -> array','asignacion',1,'p_asignacion','sintax.py',86),
  ('asignacion -> list','asignacion',1,'p_asignacion','sintax.py',87),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',90),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',91),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',98),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',99),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',102),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',103),
  ('asignacionString -> VAR VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',106),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',107),
  ('asignacionString -> VAL VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',108),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',109),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',110),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',111),
  ('asignacionChar -> VAR VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',114),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',115),
  ('asignacionChar -> VAL VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',116),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',117),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',118),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',119),
  ('asignacionBoolean -> VAR VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',122),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',123),
  ('asignacionBoolean -> VAL VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',124),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',125),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',126),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',127),
  ('reasignacion -> VARIABLE IGUAL valor','reasignacion',3,'p_reasignacion','sintax.py',131),
  ('reasignacion -> VARIABLE IGUAL returnfun','reasignacion',3,'p_reasignacion','sintax.py',132),
  ('reasignacion -> VARIABLE IGUAL aritmetica','reasignacion',3,'p_reasignacion','sintax.py',133),
  ('reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor','reasignacion',6,'p_reasignacion','sintax.py',134),
  ('tipo -> CHARCLASS','tipo',1,'p_tipo','sintax.py',137),
  ('tipo -> STRINGCLASS','tipo',1,'p_tipo','sintax.py',138),
  ('tipo -> BOOLCLASS','tipo',1,'p_tipo','sintax.py',139),
  ('tipo -> INTCLASS','tipo',1,'p_tipo','sintax.py',140),
  ('tipo -> LONGCLASS','tipo',1,'p_tipo','sintax.py',141),
  ('tipo -> DOUBLECLASS','tipo',1,'p_tipo','sintax.py',142),
  ('tipo -> FLOATCLASS','tipo',1,'p_tipo','sintax.py',143),
  ('tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',144),
  ('tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',145),
  ('valor -> STRING','valor',1,'p_valor','sintax.py',148),
  ('valor -> CHAR','valor',1,'p_valor','sintax.py',149),
  ('valor -> VARIABLE','valor',1,'p_valor','sintax.py',150),
  ('valor -> numeros','valor',1,'p_valor','sintax.py',151),
  ('valor -> booleanos','valor',1,'p_valor','sintax.py',152),
  ('valor -> VARIABLE PAR_I VARIABLE PAR_D','valor',4,'p_valor','sintax.py',153),
  ('valor -> VARIABLE PAR_I INT PAR_D','valor',4,'p_valor','sintax.py',154),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintax.py',157),
  ('booleanos -> FLASE','booleanos',1,'p_booleanos','sintax.py',158),
  ('booleanos -> startsWith','booleanos',1,'p_booleanos','sintax.py',159),
  ('numeros -> INT','numeros',1,'p_numeros','sintax.py',162),
  ('numeros -> LONG','numeros',1,'p_numeros','sintax.py',163),
  ('numeros -> FLOAT','numeros',1,'p_numeros','sintax.py',164),
  ('numeros -> DOUBLE','numeros',1,'p_numeros','sintax.py',165),
  ('funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D','funcion',7,'p_funcion','sintax.py',170),
  ('funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D','funcion',6,'p_funcion','sintax.py',171),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo','declaracion',3,'p_declaracion','sintax.py',176),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor','declaracion',5,'p_declaracion_defecto','sintax.py',179),
  ('parametro -> parametros','parametro',1,'p_parametro','sintax.py',182),
  ('parametro -> PAR_I PAR_D','parametro',2,'p_parametro','sintax.py',183),
  ('parametros -> PAR_I declaracion PAR_D','parametros',3,'p_parametros','sintax.py',186),
  ('parametros -> PAR_I declaracion PAR_D parametros','parametros',4,'p_parametros','sintax.py',187),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D','funcion',10,'p_funcion_return','sintax.py',192),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_return','sintax.py',193),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_return','sintax.py',194),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D','funcion',10,'p_funcion_return','sintax.py',195),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',198),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',199),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',200),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',201),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',204),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',205),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',206),
  ('dectipo -> DOBLE_PUNTO tipo','dectipo',2,'p_dectipo','sintax.py',209),
  ('dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D','dectipoTupla',4,'p_dectipoTupla','sintax.py',212),
  ('tipos -> tipo','tipos',1,'p_tipos','sintax.py',215),
  ('tipos -> tipo tiposentry','tipos',2,'p_tipos','sintax.py',216),
  ('tiposentry -> COMA tipo','tiposentry',2,'p_tipoentry','sintax.py',219),
  ('tiposentry -> COMA tipo tiposentry','tiposentry',3,'p_tipoentry','sintax.py',220),
  ('impresion -> PRINTLN PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',225),
  ('impresion -> PRINT PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',226),
  ('valorI -> valor MAS valorI','valorI',3,'p_valorI','sintax.py',229),
  ('valorI -> valor','valorI',1,'p_valorI','sintax.py',230),
  ('entrada -> READLINE PAR_I PAR_D','entrada',3,'p_entrada','sintax.py',235),
  ('funcall -> VARIABLE varparen','funcall',2,'p_funcall','sintax.py',239),
  ('varparen -> PAR_I valores PAR_D','varparen',3,'p_varparen','sintax.py',242),
  ('varparen -> PAR_I PAR_D','varparen',2,'p_varparen','sintax.py',243),
  ('varparen -> varparen PAR_I valores PAR_D','varparen',4,'p_varparen','sintax.py',244),
  ('varparen -> varparen PAR_I PAR_D','varparen',3,'p_varparen','sintax.py',245),
  ('returnfun -> returnCastable','returnfun',1,'p_returnfun','sintax.py',248),
  ('returnfun -> castingcall','returnfun',1,'p_returnfun','sintax.py',249),
  ('returnCastable -> entrada','returnCastable',1,'p_returnCastable','sintax.py',252),
  ('returnCastable -> funcall','returnCastable',1,'p_returnCastable','sintax.py',253),
  ('castingcall -> returnCastable PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',258),
  ('castingcall -> VARIABLE PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',259),
  ('castingfun -> TO_INT','castingfun',1,'p_castingfun','sintax.py',263),
  ('castingfun -> TO_DOUBLE','castingfun',1,'p_castingfun','sintax.py',264),
  ('castingfun -> TO_FLOAT','castingfun',1,'p_castingfun','sintax.py',265),
  ('castingfun -> TO_LONG','castingfun',1,'p_castingfun','sintax.py',266),
  ('array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',271),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',272),
  ('array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',273),
  ('array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',274),
  ('array -> arrayInt','array',1,'p_array','sintax.py',275),
  ('array -> arrayDouble','array',1,'p_array','sintax.py',276),
  ('list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D','list',7,'p_list','sintax.py',280),
  ('list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D','list',13,'p_list','sintax.py',281),
  ('list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D','list',12,'p_list','sintax.py',282),
  ('valores -> valor','valores',1,'p_valores','sintax.py',286),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintax.py',287),
  ('tuple -> PAR_I valores PAR_D','tuple',3,'p_tuple','sintax.py',291),
  ('asignacion -> VAR VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',294),
  ('asignacion -> VAL VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',295),
  ('while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','while',7,'p_while','sintax.py',303),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',10,'p_for','sintax.py',307),
  ('for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',9,'p_for','sintax.py',308),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',309),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',310),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',311),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',312),
  ('match -> VARIABLE MATCH LLAVE_I cases LLAVE_D','match',5,'p_match','sintax.py',316),
  ('cases -> casesInt','cases',1,'p_cases','sintax.py',319),
  ('cases -> casesLgn','cases',1,'p_cases','sintax.py',320),
  ('cases -> casesFlt','cases',1,'p_cases','sintax.py',321),
  ('cases -> casesDob','cases',1,'p_cases','sintax.py',322),
  ('cases -> casesStr','cases',1,'p_cases','sintax.py',323),
  ('cases -> casesChar','cases',1,'p_cases','sintax.py',324),
  ('cases -> casesBool','cases',1,'p_cases','sintax.py',325),
  ('caseInt -> CASE INT FUNCION_FLECHA codeBlock','caseInt',4,'p_caseInt','sintax.py',328),
  ('casesInt -> caseInt','casesInt',1,'p_casesInt','sintax.py',331),
  ('casesInt -> caseInt casesInt','casesInt',2,'p_casesInt','sintax.py',332),
  ('casesInt -> caseInt defcase','casesInt',2,'p_casesInt','sintax.py',333),
  ('caseLgn -> CASE LONG FUNCION_FLECHA codeBlock','caseLgn',4,'p_caseLgn','sintax.py',336),
  ('casesLgn -> caseLgn','casesLgn',1,'p_casesLgn','sintax.py',339),
  ('casesLgn -> caseLgn casesLgn','casesLgn',2,'p_casesLgn','sintax.py',340),
  ('casesLgn -> caseLgn defcase','casesLgn',2,'p_casesLgn','sintax.py',341),
  ('caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock','caseFlt',4,'p_caseFlt','sintax.py',344),
  ('casesFlt -> caseFlt','casesFlt',1,'p_casesFlt','sintax.py',347),
  ('casesFlt -> caseFlt casesFlt','casesFlt',2,'p_casesFlt','sintax.py',348),
  ('casesFlt -> caseFlt defcase','casesFlt',2,'p_casesFlt','sintax.py',349),
  ('caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock','caseDob',4,'p_caseDob','sintax.py',352),
  ('casesDob -> caseDob','casesDob',1,'p_casesDob','sintax.py',355),
  ('casesDob -> caseDob casesDob','casesDob',2,'p_casesDob','sintax.py',356),
  ('casesDob -> caseDob defcase','casesDob',2,'p_casesDob','sintax.py',357),
  ('caseStr -> CASE STRING FUNCION_FLECHA codeBlock','caseStr',4,'p_caseStr','sintax.py',360),
  ('casesStr -> caseStr','casesStr',1,'p_casesStr','sintax.py',363),
  ('casesStr -> caseStr casesStr','casesStr',2,'p_casesStr','sintax.py',364),
  ('casesStr -> caseStr defcase','casesStr',2,'p_casesStr','sintax.py',365),
  ('caseChar -> CASE CHAR FUNCION_FLECHA codeBlock','caseChar',4,'p_caseChar','sintax.py',368),
  ('casesChar -> caseChar','casesChar',1,'p_casesChar','sintax.py',371),
  ('casesChar -> caseChar casesChar','casesChar',2,'p_casesChar','sintax.py',372),
  ('casesChar -> caseChar defcase','casesChar',2,'p_casesChar','sintax.py',373),
  ('caseBool -> CASE booleanos FUNCION_FLECHA codeBlock','caseBool',4,'p_caseBool','sintax.py',376),
  ('casesBool -> caseBool','casesBool',1,'p_casesBool','sintax.py',379),
  ('casesBool -> caseBool casesBool','casesBool',2,'p_casesBool','sintax.py',380),
  ('casesBool -> caseBool defcase','casesBool',2,'p_casesBool','sintax.py',381),
  ('defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock','defcase',4,'p_defcase','sintax.py',385),
  ('codeBlock -> contenidoLine','codeBlock',1,'p_codeBlock','sintax.py',388),
  ('codeBlock -> LLAVE_I contenido LLAVE_D','codeBlock',3,'p_codeBlock','sintax.py',389),
  ('if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','if',7,'p_if','sintax.py',393),
  ('if -> if elseif','if',2,'p_if','sintax.py',394),
  ('if -> if else','if',2,'p_if','sintax.py',395),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','elseif',8,'p_elseif','sintax.py',399),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif','elseif',9,'p_elseif','sintax.py',400),
  ('else -> ELSE LLAVE_I contenido LLAVE_D','else',4,'p_else','sintax.py',403),
  ('else -> elseif else','else',2,'p_else','sintax.py',404),
  ('condicional -> valorC logicos condicional','condicional',3,'p_condicional','sintax.py',408),
  ('condicional -> valorC','condicional',1,'p_condicional','sintax.py',409),
  ('valorC -> VARIABLE','valorC',1,'p_valorC','sintax.py',412),
  ('valorC -> booleanos','valorC',1,'p_valorC','sintax.py',413),
  ('valorC -> relacional','valorC',1,'p_valorC','sintax.py',414),
  ('valorC -> NOT VARIABLE','valorC',2,'p_valorC','sintax.py',415),
  ('valorC -> NOT booleanos','valorC',2,'p_valorC','sintax.py',416),
  ('valorC -> NOT relacional','valorC',2,'p_valorC','sintax.py',417),
  ('logicos -> AND','logicos',1,'p_logicos','sintax.py',420),
  ('logicos -> OR','logicos',1,'p_logicos','sintax.py',421),
  ('logicos -> NOT','logicos',1,'p_logicos','sintax.py',422),
  ('relacional -> numeros comparacion numeros','relacional',3,'p_relacional','sintax.py',427),
  ('relacional -> aritmetica comparacion aritmetica','relacional',3,'p_relacional','sintax.py',428),
  ('relacional -> aritmetica comparacion numeros','relacional',3,'p_relacional','sintax.py',429),
  ('relacional -> numeros comparacion aritmetica','relacional',3,'p_relacional','sintax.py',430),
  ('relacional -> booleanos comparacion booleanos','relacional',3,'p_relacional','sintax.py',431),
  ('relacional -> STRING comparacion STRING','relacional',3,'p_relacional','sintax.py',432),
  ('relacional -> CHAR comparacion CHAR','relacional',3,'p_relacional','sintax.py',433),
  ('relacional -> VARIABLE comparacion numeros','relacional',3,'p_relacional','sintax.py',434),
  ('relacional -> numeros comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',435),
  ('relacional -> VARIABLE comparacion booleanos','relacional',3,'p_relacional','sintax.py',436),
  ('relacional -> booleanos comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',437),
  ('relacional -> VARIABLE comparacion STRING','relacional',3,'p_relacional','sintax.py',438),
  ('relacional -> STRING comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',439),
  ('relacional -> VARIABLE comparacion CHAR','relacional',3,'p_relacional','sintax.py',440),
  ('relacional -> CHAR comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',441),
  ('relacional -> VARIABLE comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',442),
  ('comparacion -> IGUAL_COMPARACION','comparacion',1,'p_comparacion','sintax.py',445),
  ('comparacion -> DIFERENTE','comparacion',1,'p_comparacion','sintax.py',446),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion','sintax.py',447),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion','sintax.py',448),
  ('aritmetica -> numeros aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',452),
  ('aritmetica -> VARIABLE aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',453),
  ('aritmetica -> numeros aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',454),
  ('aritmetica -> VARIABLE aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',455),
  ('aritmetica -> aritmetica aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',456),
  ('aritmetica -> aritmetica aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',457),
  ('aritmeticos -> MENOS','aritmeticos',1,'p_aritmeticos','sintax.py',460),
  ('aritmeticos -> MAS','aritmeticos',1,'p_aritmeticos','sintax.py',461),
  ('aritmeticos -> MULTIPLICACION','aritmeticos',1,'p_aritmeticos','sintax.py',462),
  ('aritmeticos -> DIVISION','aritmeticos',1,'p_aritmeticos','sintax.py',463),
  ('aritmeticos -> MOD','aritmeticos',1,'p_aritmeticos','sintax.py',464),
  ('arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D','arrayInt',12,'p_arrayInt','sintax.py',469),
  ('arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D','arrayDouble',12,'p_arrayDouble','sintax.py',473),
  ('valoresInt -> INT','valoresInt',1,'p_valoresInt','sintax.py',476),
  ('valoresInt -> valoresInt COMA INT','valoresInt',3,'p_valoresInt','sintax.py',477),
  ('valoresDouble -> DOUBLE','valoresDouble',1,'p_valoresDouble','sintax.py',480),
  ('valoresDouble -> valoresDouble COMA DOUBLE','valoresDouble',3,'p_valoresDouble','sintax.py',481),
  ('startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D','startsWith',6,'p_startsWith','sintax.py',485),
  ('asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla','asignacion',4,'p_asignacion_tupla','sintax.py',493),
  ('asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla','asignacion',4,'p_asignacion_tupla','sintax.py',494),
  ('dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',497),
  ('dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',498),
  ('dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',499),
  ('dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',500),
  ('dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',503),
  ('dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',504),
  ('dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',505),
  ('dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',506),
  ('dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',509),
  ('dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',510),
  ('dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',511),
  ('dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',512),
  ('dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',515),
  ('dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',516),
  ('dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',517),
  ('dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',518),
  ('dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',521),
  ('dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',522),
  ('dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',523),
  ('dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',524),
  ('asignacionInt -> VAR VARIABLE IGUAL intvalues','asignacionInt',4,'p_asignacionInt','sintax.py',529),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues','asignacionInt',6,'p_asignacionInt','sintax.py',530),
  ('asignacionInt -> VAL VARIABLE IGUAL intvalues','asignacionInt',4,'p_asignacionInt','sintax.py',531),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues','asignacionInt',6,'p_asignacionInt','sintax.py',532),
  ('intvalues -> INT','intvalues',1,'p_intvalues','sintax.py',535),
  ('intvalues -> stringCastInt','intvalues',1,'p_intvalues','sintax.py',536),
  ('asignacionLong -> VAR VARIABLE IGUAL longvalues','asignacionLong',4,'p_asignacionLong_cast','sintax.py',539),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues','asignacionLong',6,'p_asignacionLong_cast','sintax.py',540),
  ('asignacionLong -> VAL VARIABLE IGUAL longvalues','asignacionLong',4,'p_asignacionLong_cast','sintax.py',541),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues','asignacionLong',6,'p_asignacionLong_cast','sintax.py',542),
  ('longvalues -> INT','longvalues',1,'p_longvalues','sintax.py',545),
  ('longvalues -> intvalues','longvalues',1,'p_longvalues','sintax.py',546),
  ('longvalues -> stringCastLong','longvalues',1,'p_longvalues','sintax.py',547),
  ('asignacionFloat -> VAR VARIABLE IGUAL floatvalues','asignacionFloat',4,'p_asignacionFloat_cast','sintax.py',550),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues','asignacionFloat',6,'p_asignacionFloat_cast','sintax.py',551),
  ('asignacionFloat -> VAL VARIABLE IGUAL floatvalues','asignacionFloat',4,'p_asignacionFloat_cast','sintax.py',552),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues','asignacionFloat',6,'p_asignacionFloat_cast','sintax.py',553),
  ('floatvalues -> FLOAT','floatvalues',1,'p_floatvalues','sintax.py',556),
  ('floatvalues -> longvalues','floatvalues',1,'p_floatvalues','sintax.py',557),
  ('floatvalues -> stringCastFloat','floatvalues',1,'p_floatvalues','sintax.py',558),
  ('asignacionDouble -> VAR VARIABLE IGUAL doublevalues','asignacionDouble',4,'p_asignacionDouble_cast','sintax.py',561),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues','asignacionDouble',6,'p_asignacionDouble_cast','sintax.py',562),
  ('asignacionDouble -> VAL VARIABLE IGUAL doublevalues','asignacionDouble',4,'p_asignacionDouble_cast','sintax.py',563),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues','asignacionDouble',6,'p_asignacionDouble_cast','sintax.py',564),
  ('doublevalues -> DOUBLE','doublevalues',1,'p_doublevalues','sintax.py',567),
  ('doublevalues -> floatvalues','doublevalues',1,'p_doublevalues','sintax.py',568),
  ('doublevalues -> stringCastDouble','doublevalues',1,'p_doublevalues','sintax.py',569),
  ('stringCastInt -> STRING PUNTO TO_INT','stringCastInt',3,'p_stringCastInt','sintax.py',578),
  ('stringCastLong -> STRING PUNTO TO_LONG','stringCastLong',3,'p_stringCastLong','sintax.py',594),
  ('stringCastFloat -> STRING PUNTO TO_FLOAT','stringCastFloat',3,'p_stringCastFloat','sintax.py',610),
  ('stringCastDouble -> STRING PUNTO TO_DOUBLE','stringCastDouble',3,'p_stringCastDouble','sintax.py',627),
]

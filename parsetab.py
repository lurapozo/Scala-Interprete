
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARRAYCLASS ARROBA BACKTICK BOOLCLASS CASE CATCH CHAR CHARCLASS CLASS COMA CORCHETE_D CORCHETE_I DEF DIFERENTE DIVISION DO DOBLE_PUNTO DOUBLE DOUBLECLASS ELSE EXTENDS FINAL FINALLY FLASE FLOAT FLOATCLASS FOR FOR_SOME FUNCION_FLECHA HASHTAG IF IGUAL IGUAL_COMPARACION IMPLICIT IMPORT INT INTCLASS ITERATOR LAZY LIBRERIA_IO LISTCLASS LLAVE_D LLAVE_I LONG LONGCLASS MACRO MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MOD MULTIPLICACION NEW NOT NULL OBJECT OR OVERRIDE PACKAGE PAR_D PAR_I PRINT PRINTLN PRIVATE PROTECTED PUNTO READLINE RETURN REVERSE SEALED STARTSWITH STRING STRINGCLASS SUBGUION SUPER THIS THROW TO TO_DOUBLE TO_FLOAT TO_INT TO_LONG TRAIT TRUE TRY TYPE UNTIL VAL VAR VARIABLE WHILE WITH YIELD inicio : OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D\n  | IMPORT io inicio\n  | cuerpo\n   io : VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINEcuerpo : funcion\n  | funcion cuerpo\n  | contenido \n  | contenido cuerpocontenido : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entrada\n  | while\n  | for\n  | match\n  | if\n  | aritmetica\n  | startsWith\n  | asignacion contenido\n  | reasignacion contenido\n  | funcall contenido\n  | impresion contenido\n  | entrada contenido\n  | while contenido\n  | for contenido\n  | if contenido\n  | match contenido\n  | aritmetica contenido\n  | startsWith contenidocontenidoLine : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entradaasignacion : VAR VARIABLE IGUAL VARIABLE\n  | VAL VARIABLE IGUAL VARIABLE\n  | VAR VARIABLE IGUAL aritmetica\n  | VAL VARIABLE IGUAL aritmetica\n  | VAR VARIABLE IGUAL returnfun\n  | VAL VARIABLE IGUAL returnfun\n  | asignacionLong\n  | asignacionInt\n  | asignacionFloat\n  | asignacionDouble\n  | asignacionString\n  | asignacionChar\n  | asignacionBoolean\n  | array\n  | listasignacionLong :  VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLEasignacionInt : VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE\n  | asignacionSumIntasignacionFloat : VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLEasignacionDouble : VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE\n  | asignacionSumDoubleasignacionString : VAR VARIABLE IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAL VARIABLE IGUAL STRING\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE\n  | asignacionSumStringasignacionChar : VAR VARIABLE IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAL VARIABLE IGUAL CHAR\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLEasignacionBoolean : VAR VARIABLE IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAL VARIABLE IGUAL booleanos\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLEreasignacion :  VARIABLE IGUAL valor\n      | VARIABLE IGUAL returnfun\n      | VARIABLE IGUAL aritmetica\n      | VARIABLE PAR_I INT PAR_D IGUAL valortipo : CHARCLASS\n  | STRINGCLASS\n  | BOOLCLASS\n  | INTCLASS\n  | LONGCLASS\n  | DOUBLECLASS\n  | FLOATCLASS\n  | ARRAYCLASS CORCHETE_I tipo CORCHETE_D\n  | LISTCLASS CORCHETE_I tipo CORCHETE_Dvalor : STRING\n  | CHAR\n  | VARIABLE\n  | numeros\n  | booleanos\n  | VARIABLE PAR_I VARIABLE PAR_D\n  | VARIABLE PAR_I INT PAR_Dbooleanos : TRUE\n  | FLASE\n  | startsWithnumeros : INT\n  | LONG\n  | FLOAT\n  | DOUBLEfuncion : DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D\n  | DEF VARIABLE parametro LLAVE_I contenido LLAVE_Ddeclaracion : VARIABLE DOBLE_PUNTO tipodeclaracion :  VARIABLE DOBLE_PUNTO tipo IGUAL valor parametro : parametros\n  | PAR_I PAR_D parametros : PAR_I declaracion PAR_D \n    | PAR_I declaracion PAR_D parametrosfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D\n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D \n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_Ddectipo : DOBLE_PUNTO tipo dectipoTupla : DOBLE_PUNTO PAR_I tipos PAR_Dtipos : tipo\n    | tipo tiposentrytiposentry : COMA tipo \n  | COMA tipo tiposentryimpresion : PRINTLN PAR_I valorI PAR_D\n  | PRINT PAR_I valorI PAR_DvalorI : valor MAS valorI\n  | valorentrada : READLINE PAR_I PAR_Dfuncall : VARIABLE varparen varparen : PAR_I valores PAR_D\n  | PAR_I PAR_D\n  | varparen PAR_I valores PAR_D\n  | varparen PAR_I PAR_D returnfun : returnCastable\n      | castingcallreturnCastable : entrada\n      | funcallcastingcall : returnCastable PUNTO castingfun\n      | VARIABLE PUNTO castingfuncastingfun : TO_INT\n    | TO_DOUBLE\n    | TO_FLOAT\n    | TO_LONGarray : VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | arrayInt\n  | arrayDoublelist : VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D\n  | VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D\n  | listChar\n  | listStringvalores : valor\n  | valor COMA valorestuple : PAR_I valores PAR_Dasignacion : VAR VARIABLE IGUAL tuple \n      | VAL VARIABLE IGUAL tuplewhile : WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_Dfor : FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_Dmatch : VARIABLE MATCH  LLAVE_I cases LLAVE_Dcases : casesInt\n    | casesLgn\n    | casesFlt\n    | casesDob\n    | casesStr\n    | casesChar\n    | casesBoolcaseInt : CASE INT FUNCION_FLECHA codeBlock casesInt : caseInt \n      | caseInt casesInt\n      | caseInt defcasecaseLgn : CASE LONG FUNCION_FLECHA codeBlock casesLgn : caseLgn \n      | caseLgn casesLgn\n      | caseLgn defcasecaseFlt : CASE FLOAT FUNCION_FLECHA codeBlock casesFlt : caseFlt \n      | caseFlt casesFlt\n      | caseFlt defcasecaseDob : CASE DOUBLE FUNCION_FLECHA codeBlock casesDob : caseDob \n      | caseDob casesDob\n      | caseDob defcasecaseStr : CASE STRING FUNCION_FLECHA codeBlock casesStr : caseStr\n      | caseStr casesStr\n      | caseStr defcasecaseChar : CASE CHAR FUNCION_FLECHA codeBlock casesChar : caseChar\n      | caseChar casesChar\n      | caseChar defcasecaseBool : CASE booleanos FUNCION_FLECHA codeBlock casesBool : caseBool\n      | caseBool casesBool\n      | caseBool defcasedefcase : CASE SUBGUION FUNCION_FLECHA codeBlock codeBlock : contenidoLine\n      | LLAVE_I contenido LLAVE_Dif : IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | if elseif\n  | if else\n  elseif : ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseifelse : ELSE LLAVE_I contenido LLAVE_D\n  | elseif elsecondicional : valorC logicos condicional\n  | valorCvalorC : VARIABLE\n  | booleanos\n  | relacional\n  | NOT VARIABLE\n  | NOT booleanos\n  | NOT relacional\n  logicos : AND\n  | OR\n  | NOTrelacional : numeros comparacion numeros\n  | aritmetica comparacion aritmetica\n  | aritmetica comparacion numeros\n  | numeros comparacion aritmetica\n  | booleanos comparacion booleanos\n  | STRING comparacion STRING\n  | CHAR comparacion CHAR\n  | VARIABLE comparacion numeros\n  | numeros comparacion VARIABLE\n  | VARIABLE comparacion booleanos\n  | booleanos comparacion VARIABLE\n  | VARIABLE comparacion STRING\n  | STRING comparacion VARIABLE\n  | VARIABLE comparacion CHAR\n  | CHAR comparacion VARIABLE\n  | VARIABLE comparacion VARIABLEcomparacion : IGUAL_COMPARACION\n  | DIFERENTE\n  | MAYOR\n  | MENORaritmetica : numeros aritmeticos numeros\n  | VARIABLE aritmeticos numeros\n  | numeros aritmeticos VARIABLE\n  | VARIABLE aritmeticos VARIABLE\n  | aritmetica aritmeticos numeros\n  | aritmetica aritmeticos VARIABLEaritmetica : suma\n  | VARIABLE MAS numeros\n  | numeros MAS VARIABLE\n  | VARIABLE MAS VARIABLE\n  | aritmetica MAS numeros\n  | aritmetica MAS VARIABLE\n  | INT MAS INT\n  | DOUBLE MAS DOUBLE\n  | LONG MAS LONG\n  | FLOAT MAS FLOAT\n  aritmeticos : MENOS\n  | MULTIPLICACION\n  | DIVISION\n  | MODarrayInt : VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_DarrayDouble : VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_DvaloresInt : INT\n  | valoresInt COMA INTvaloresDouble : DOUBLE\n  | valoresDouble COMA DOUBLEstartsWith : STRING PUNTO STARTSWITH PAR_I STRING PAR_D\n  | STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_DlistString : VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D\n  | VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_DlistChar : VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D\n  | VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_DvaloresString : STRING\n  | valoresString COMA STRINGvaloresChar : CHAR\n  | valoresChar COMA CHARsuma : sumIntChar\n  | sumStringChar\n  | sumIntDouble\n  | sumDoubleCharsumIntDouble : INT MAS DOUBLE\n  | DOUBLE MAS INTsumDoubleChar : DOUBLE MAS CHAR\n  | CHAR MAS DOUBLEsumIntChar : INT MAS CHAR\n  | CHAR MAS INTsumStringChar : STRING MAS CHAR\n  | CHAR MAS STRINGasignacionSumDouble : VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleCharasignacionSumString : VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringCharasignacionSumInt : VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntCharasignacion : VAR VARIABLE DOBLE_PUNTO  dectupla\n      | VAL VARIABLE DOBLE_PUNTO dectupla dectupla : PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D\n  | PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D\n  | PAR_I STRINGCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D\n  | PAR_I STRINGCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D dectupla : PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D\n  | PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D\n  | PAR_I FLOATCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D\n  | PAR_I FLOATCLASS COMA  INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D dectupla : PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D\n  | PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D\n  | PAR_I DOUBLECLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D\n  | PAR_I DOUBLECLASS COMA  INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D dectupla : PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D\n  | PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D\n  | PAR_I LONGCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D\n  | PAR_I LONGCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT  PAR_D dectupla : PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D\n  | PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D\n  | PAR_I INTCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D\n  | PAR_I INTCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D asignacionInt : VAR VARIABLE IGUAL intvalues\n    | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues\n    | VAL VARIABLE IGUAL intvalues\n    | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvaluesintvalues : INT\n  | stringCastIntasignacionLong : VAR VARIABLE IGUAL longvalues\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues\n  | VAL VARIABLE IGUAL longvalues\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalueslongvalues : LONG\n  | intvalues\n  | stringCastLongasignacionFloat : VAR VARIABLE IGUAL floatvalues\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues\n  | VAL VARIABLE IGUAL floatvalues\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvaluesfloatvalues : FLOAT\n  | longvalues\n  | stringCastFloatasignacionDouble : VAR VARIABLE IGUAL doublevalues\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues\n  | VAL VARIABLE IGUAL doublevalues\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevaluesdoublevalues : DOUBLE\n  | floatvalues\n  | stringCastDoublestringCastInt : STRING PUNTO TO_INTstringCastLong : STRING PUNTO TO_LONGstringCastFloat : STRING PUNTO TO_FLOATstringCastDouble : STRING PUNTO TO_DOUBLE'
    
_lr_action_items = {'OBJECT':([0,67,621,],[2,2,-4,]),'IMPORT':([0,67,621,],[5,5,-4,]),'DEF':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,59,67,72,75,76,77,78,79,80,81,82,83,84,85,87,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,134,135,136,137,138,144,145,146,147,149,157,158,159,163,181,182,183,184,185,186,187,188,190,191,192,193,201,203,231,232,233,234,235,236,237,238,239,240,241,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,289,315,316,317,318,319,320,325,326,374,432,433,434,446,457,458,459,460,462,464,465,466,467,468,470,471,472,473,476,477,478,479,481,482,483,484,485,486,487,490,491,492,494,495,496,497,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,538,557,568,569,605,606,610,617,621,667,673,674,675,676,681,713,716,717,718,719,720,721,722,724,753,792,793,795,797,819,821,824,825,826,827,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,878,879,],[8,8,8,-18,-9,-10,-11,-12,-13,-14,-15,-16,-17,-19,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-257,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-287,-288,-289,-290,-137,8,-29,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,-30,8,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-219,-263,-295,-291,-136,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,-138,-141,-36,-38,-40,-165,-335,-329,-342,-349,-61,-68,-74,-333,-353,-339,-346,-341,-334,-348,-355,-307,-37,-39,-41,-166,-337,-331,-344,-351,-63,-70,-76,-308,-132,-133,-147,-148,-149,-150,-151,-146,-140,-174,-218,-98,-99,-83,-108,-357,-356,-358,-359,-164,-51,-336,-339,-340,-333,-53,-330,-305,-333,-56,-343,-346,-347,-58,-350,-299,-301,-353,-354,-333,-65,-62,-303,-72,-69,-78,-75,-52,-338,-54,-332,-306,-57,-345,-59,-352,-300,-302,-66,-64,-304,-73,-71,-79,-77,-277,-107,-152,-159,-154,-158,-167,-213,-4,-278,-120,-119,-121,-122,-216,-169,-116,-115,-117,-118,-124,-123,-125,-217,-168,-170,-171,-271,-272,-282,-280,-281,-279,-172,-173,-309,-310,-311,-312,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-313,-314,-315,-316,-153,-155,]),'VAR':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,59,67,72,75,76,77,78,79,80,81,82,83,84,85,87,95,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,134,135,136,137,138,144,145,146,147,149,152,157,158,159,163,181,182,183,184,185,186,187,188,190,191,192,193,201,203,222,231,232,233,234,235,236,237,238,239,240,241,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,289,315,316,317,318,319,320,325,326,356,374,406,430,432,433,434,437,438,439,440,441,442,443,446,447,448,457,458,459,460,462,464,465,466,467,468,470,471,472,473,476,477,478,479,481,482,483,484,485,486,487,490,491,492,494,495,496,497,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,538,540,543,557,567,568,569,605,606,610,614,617,621,661,667,673,674,675,676,681,713,714,715,716,717,718,719,720,721,722,724,753,754,755,792,793,795,797,819,821,824,825,826,827,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,878,879,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-257,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-287,-288,-289,-290,-137,20,-29,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,-30,178,20,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-219,20,-263,-295,-291,-136,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,-138,-141,20,-36,-38,-40,-165,-335,-329,-342,-349,-61,-68,-74,-333,-353,-339,-346,-341,-334,-348,-355,-307,-37,-39,-41,-166,-337,-331,-344,-351,-63,-70,-76,-308,-132,-133,-147,-148,-149,-150,-151,-146,-140,-174,20,-218,20,20,-98,-99,-83,20,20,20,20,20,20,20,-108,20,20,-357,-356,-358,-359,-164,-51,-336,-339,-340,-333,-53,-330,-305,-333,-56,-343,-346,-347,-58,-350,-299,-301,-353,-354,-333,-65,-62,-303,-72,-69,-78,-75,-52,-338,-54,-332,-306,-57,-345,-59,-352,-300,-302,-66,-64,-304,-73,-71,-79,-77,-277,20,20,-107,20,-152,-159,-154,-158,-167,20,-213,-4,20,-278,-120,-119,-121,-122,-216,-169,20,20,-116,-115,-117,-118,-124,-123,-125,-217,-168,20,20,-170,-171,-271,-272,-282,-280,-281,-279,-172,-173,-309,-310,-311,-312,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-313,-314,-315,-316,-153,-155,]),'VAL':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,59,67,72,75,76,77,78,79,80,81,82,83,84,85,87,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,134,135,136,137,138,144,145,146,147,149,152,157,158,159,163,181,182,183,184,185,186,187,188,190,191,192,193,201,203,222,231,232,233,234,235,236,237,238,239,240,241,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,289,315,316,317,318,319,320,325,326,356,374,406,430,432,433,434,437,438,439,440,441,442,443,446,447,448,457,458,459,460,462,464,465,466,467,468,470,471,472,473,476,477,478,479,481,482,483,484,485,486,487,490,491,492,494,495,496,497,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,538,540,543,557,567,568,569,605,606,610,614,617,621,661,667,673,674,675,676,681,713,714,715,716,717,718,719,720,721,722,724,753,754,755,792,793,795,797,819,821,824,825,826,827,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,878,879,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-257,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-287,-288,-289,-290,-137,21,-29,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,-30,21,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-219,21,-263,-295,-291,-136,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,-138,-141,21,-36,-38,-40,-165,-335,-329,-342,-349,-61,-68,-74,-333,-353,-339,-346,-341,-334,-348,-355,-307,-37,-39,-41,-166,-337,-331,-344,-351,-63,-70,-76,-308,-132,-133,-147,-148,-149,-150,-151,-146,-140,-174,21,-218,21,21,-98,-99,-83,21,21,21,21,21,21,21,-108,21,21,-357,-356,-358,-359,-164,-51,-336,-339,-340,-333,-53,-330,-305,-333,-56,-343,-346,-347,-58,-350,-299,-301,-353,-354,-333,-65,-62,-303,-72,-69,-78,-75,-52,-338,-54,-332,-306,-57,-345,-59,-352,-300,-302,-66,-64,-304,-73,-71,-79,-77,-277,21,21,-107,21,-152,-159,-154,-158,-167,21,-213,-4,21,-278,-120,-119,-121,-122,-216,-169,21,21,-116,-115,-117,-118,-124,-123,-125,-217,-168,21,21,-170,-171,-271,-272,-282,-280,-281,-279,-172,-173,-309,-310,-311,-312,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-313,-314,-315,-316,-153,-155,]),'VARIABLE':([0,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,57,58,59,61,62,63,64,65,66,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,91,92,94,95,96,97,98,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,132,134,135,136,137,138,140,143,144,145,146,147,149,152,153,155,157,158,159,163,169,178,181,182,183,184,185,186,187,188,190,191,192,193,195,198,200,201,203,222,229,231,232,233,234,235,236,237,238,239,240,241,243,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,288,289,291,292,293,294,295,296,297,298,299,300,304,305,306,307,309,315,316,317,318,319,320,323,325,326,355,356,374,375,377,379,380,381,382,383,384,385,386,394,395,396,397,398,399,400,401,402,406,427,430,432,433,434,437,438,439,440,441,442,443,446,447,448,453,457,458,459,460,462,464,465,466,467,468,470,471,472,473,476,477,478,479,481,482,483,484,485,486,487,490,491,492,494,495,496,497,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,538,540,543,557,559,566,567,568,569,605,606,610,614,617,621,622,627,661,667,673,674,675,676,681,713,714,715,716,717,718,719,720,721,722,724,753,754,755,792,793,795,797,819,821,824,825,826,827,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,878,879,],[3,56,68,3,3,71,3,3,3,3,3,3,3,3,3,3,3,88,89,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-257,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-287,-288,-289,-290,106,121,-137,134,137,-267,-268,-269,-270,3,-29,145,147,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,-30,121,121,166,179,166,182,183,3,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,121,-254,-252,-103,-260,-258,220,228,-255,-256,-261,-262,-219,3,231,264,-263,-295,-291,-136,301,308,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,313,321,121,-138,-141,3,166,-36,-38,-40,-165,-335,-329,-342,-349,-61,-68,-74,121,-333,-353,-339,-346,-341,-334,-348,-355,-307,-37,-39,-41,-166,-337,-331,-344,-351,-63,-70,-76,-308,-132,121,-133,166,-228,-229,-230,408,-247,-248,-249,-250,414,418,422,424,426,428,-147,-148,-149,-150,-151,-146,121,-140,-174,444,3,-218,121,121,121,464,470,476,481,490,494,496,121,121,510,512,515,517,521,524,526,3,532,3,-98,-99,-83,549,549,549,549,549,549,549,-108,3,3,228,-357,-356,-358,-359,-164,-51,-336,-339,-340,-333,-53,-330,-305,-333,-56,-343,-346,-347,-58,-350,-299,-301,-353,-354,-333,-65,-62,-303,-72,-69,-78,-75,-52,-338,-54,-332,-306,-57,-345,-59,-352,-300,-302,-66,-64,-304,-73,-71,-79,-77,-277,549,3,-107,623,121,3,-152,-159,-154,-158,-167,3,-213,-4,669,677,3,-278,-120,-119,-121,-122,-216,-169,3,3,-116,-115,-117,-118,-124,-123,-125,-217,-168,3,3,-170,-171,-271,-272,-282,-280,-281,-279,-172,-173,-309,-310,-311,-312,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-313,-314,-315,-316,-153,-155,]),'PRINTLN':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,59,67,72,75,76,77,78,79,80,81,82,83,84,85,87,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,134,135,136,137,138,144,145,146,147,149,152,157,158,159,163,181,182,183,184,185,186,187,188,190,191,192,193,201,203,222,231,232,233,234,235,236,237,238,239,240,241,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,289,315,316,317,318,319,320,325,326,356,374,406,430,432,433,434,437,438,439,440,441,442,443,446,447,448,457,458,459,460,462,464,465,466,467,468,470,471,472,473,476,477,478,479,481,482,483,484,485,486,487,490,491,492,494,495,496,497,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,538,540,543,557,567,568,569,605,606,610,614,617,621,661,667,673,674,675,676,681,713,714,715,716,717,718,719,720,721,722,724,753,754,755,792,793,795,797,819,821,824,825,826,827,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,878,879,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-257,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-287,-288,-289,-290,-137,32,-29,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,-30,32,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-219,32,-263,-295,-291,-136,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,-138,-141,32,-36,-38,-40,-165,-335,-329,-342,-349,-61,-68,-74,-333,-353,-339,-346,-341,-334,-348,-355,-307,-37,-39,-41,-166,-337,-331,-344,-351,-63,-70,-76,-308,-132,-133,-147,-148,-149,-150,-151,-146,-140,-174,32,-218,32,32,-98,-99,-83,32,32,32,32,32,32,32,-108,32,32,-357,-356,-358,-359,-164,-51,-336,-339,-340,-333,-53,-330,-305,-333,-56,-343,-346,-347,-58,-350,-299,-301,-353,-354,-333,-65,-62,-303,-72,-69,-78,-75,-52,-338,-54,-332,-306,-57,-345,-59,-352,-300,-302,-66,-64,-304,-73,-71,-79,-77,-277,32,32,-107,32,-152,-159,-154,-158,-167,32,-213,-4,32,-278,-120,-119,-121,-122,-216,-169,32,32,-116,-115,-117,-118,-124,-123,-125,-217,-168,32,32,-170,-171,-271,-272,-282,-280,-281,-279,-172,-173,-309,-310,-311,-312,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-313,-314,-315,-316,-153,-155,]),'PRINT':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,59,67,72,75,76,77,78,79,80,81,82,83,84,85,87,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,134,135,136,137,138,144,145,146,147,149,152,157,158,159,163,181,182,183,184,185,186,187,188,190,191,192,193,201,203,222,231,232,233,234,235,236,237,238,239,240,241,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,289,315,316,317,318,319,320,325,326,356,374,406,430,432,433,434,437,438,439,440,441,442,443,446,447,448,457,458,459,460,462,464,465,466,467,468,470,471,472,473,476,477,478,479,481,482,483,484,485,486,487,490,491,492,494,495,496,497,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,538,540,543,557,567,568,569,605,606,610,614,617,621,661,667,673,674,675,676,681,713,714,715,716,717,718,719,720,721,722,724,753,754,755,792,793,795,797,819,821,824,825,826,827,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,878,879,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-257,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-287,-288,-289,-290,-137,33,-29,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,-30,33,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-219,33,-263,-295,-291,-136,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,-138,-141,33,-36,-38,-40,-165,-335,-329,-342,-349,-61,-68,-74,-333,-353,-339,-346,-341,-334,-348,-355,-307,-37,-39,-41,-166,-337,-331,-344,-351,-63,-70,-76,-308,-132,-133,-147,-148,-149,-150,-151,-146,-140,-174,33,-218,33,33,-98,-99,-83,33,33,33,33,33,33,33,-108,33,33,-357,-356,-358,-359,-164,-51,-336,-339,-340,-333,-53,-330,-305,-333,-56,-343,-346,-347,-58,-350,-299,-301,-353,-354,-333,-65,-62,-303,-72,-69,-78,-75,-52,-338,-54,-332,-306,-57,-345,-59,-352,-300,-302,-66,-64,-304,-73,-71,-79,-77,-277,33,33,-107,33,-152,-159,-154,-158,-167,33,-213,-4,33,-278,-120,-119,-121,-122,-216,-169,33,33,-116,-115,-117,-118,-124,-123,-125,-217,-168,33,33,-170,-171,-271,-272,-282,-280,-281,-279,-172,-173,-309,-310,-311,-312,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-313,-314,-315,-316,-153,-155,]),'READLINE':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,57,59,67,72,75,76,77,78,79,80,81,82,83,84,85,87,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,134,135,136,137,138,144,145,146,147,149,152,153,155,157,158,159,163,181,182,183,184,185,186,187,188,190,191,192,193,201,203,222,231,232,233,234,235,236,237,238,239,240,241,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,289,315,316,317,318,319,320,325,326,356,374,406,430,432,433,434,437,438,439,440,441,442,443,446,447,448,457,458,459,460,462,464,465,466,467,468,470,471,472,473,476,477,478,479,481,482,483,484,485,486,487,490,491,492,494,495,496,497,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,538,540,543,556,557,559,567,568,569,605,606,610,614,617,621,622,627,661,667,673,674,675,676,681,713,714,715,716,717,718,719,720,721,722,724,753,754,755,792,793,795,797,819,821,824,825,826,827,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,878,879,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-257,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-287,-288,-289,-290,34,-137,34,-29,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,-30,34,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-219,34,34,34,-263,-295,-291,-136,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,-138,-141,34,-36,-38,-40,-165,-335,-329,-342,-349,-61,-68,-74,-333,-353,-339,-346,-341,-334,-348,-355,-307,-37,-39,-41,-166,-337,-331,-344,-351,-63,-70,-76,-308,-132,-133,-147,-148,-149,-150,-151,-146,-140,-174,34,-218,34,34,-98,-99,-83,34,34,34,34,34,34,34,-108,34,34,-357,-356,-358,-359,-164,-51,-336,-339,-340,-333,-53,-330,-305,-333,-56,-343,-346,-347,-58,-350,-299,-301,-353,-354,-333,-65,-62,-303,-72,-69,-78,-75,-52,-338,-54,-332,-306,-57,-345,-59,-352,-300,-302,-66,-64,-304,-73,-71,-79,-77,-277,34,34,621,-107,34,34,-152,-159,-154,-158,-167,34,-213,-4,34,34,34,-278,-120,-119,-121,-122,-216,-169,34,34,-116,-115,-117,-118,-124,-123,-125,-217,-168,34,34,-170,-171,-271,-272,-282,-280,-281,-279,-172,-173,-309,-310,-311,-312,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-313,-314,-315,-316,-153,-155,]),'WHILE':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,59,67,72,75,76,77,78,79,80,81,82,83,84,85,87,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,134,135,136,137,138,144,145,146,147,149,152,157,158,159,163,181,182,183,184,185,186,187,188,190,191,192,193,201,203,222,231,232,233,234,235,236,237,238,239,240,241,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,289,315,316,317,318,319,320,325,326,356,374,406,430,432,433,434,446,447,448,457,458,459,460,462,464,465,466,467,468,470,471,472,473,476,477,478,479,481,482,483,484,485,486,487,490,491,492,494,495,496,497,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,538,543,557,567,568,569,605,606,610,614,617,621,661,667,673,674,675,676,681,713,714,715,716,717,718,719,720,721,722,724,753,754,755,792,793,795,797,819,821,824,825,826,827,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,878,879,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-257,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-287,-288,-289,-290,-137,35,-29,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,-30,35,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-219,35,-263,-295,-291,-136,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,-138,-141,35,-36,-38,-40,-165,-335,-329,-342,-349,-61,-68,-74,-333,-353,-339,-346,-341,-334,-348,-355,-307,-37,-39,-41,-166,-337,-331,-344,-351,-63,-70,-76,-308,-132,-133,-147,-148,-149,-150,-151,-146,-140,-174,35,-218,35,35,-98,-99,-83,-108,35,35,-357,-356,-358,-359,-164,-51,-336,-339,-340,-333,-53,-330,-305,-333,-56,-343,-346,-347,-58,-350,-299,-301,-353,-354,-333,-65,-62,-303,-72,-69,-78,-75,-52,-338,-54,-332,-306,-57,-345,-59,-352,-300,-302,-66,-64,-304,-73,-71,-79,-77,-277,35,-107,35,-152,-159,-154,-158,-167,35,-213,-4,35,-278,-120,-119,-121,-122,-216,-169,35,35,-116,-115,-117,-118,-124,-123,-125,-217,-168,35,35,-170,-171,-271,-272,-282,-280,-281,-279,-172,-173,-309,-310,-311,-312,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-313,-314,-315,-316,-153,-155,]),'FOR':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,59,67,72,75,76,77,78,79,80,81,82,83,84,85,87,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,134,135,136,137,138,144,145,146,147,149,152,157,158,159,163,181,182,183,184,185,186,187,188,190,191,192,193,201,203,222,231,232,233,234,235,236,237,238,239,240,241,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,289,315,316,317,318,319,320,325,326,356,374,406,430,432,433,434,446,447,448,457,458,459,460,462,464,465,466,467,468,470,471,472,473,476,477,478,479,481,482,483,484,485,486,487,490,491,492,494,495,496,497,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,538,543,557,567,568,569,605,606,610,614,617,621,661,667,673,674,675,676,681,713,714,715,716,717,718,719,720,721,722,724,753,754,755,792,793,795,797,819,821,824,825,826,827,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,878,879,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-257,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-287,-288,-289,-290,-137,36,-29,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,-30,36,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-219,36,-263,-295,-291,-136,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,-138,-141,36,-36,-38,-40,-165,-335,-329,-342,-349,-61,-68,-74,-333,-353,-339,-346,-341,-334,-348,-355,-307,-37,-39,-41,-166,-337,-331,-344,-351,-63,-70,-76,-308,-132,-133,-147,-148,-149,-150,-151,-146,-140,-174,36,-218,36,36,-98,-99,-83,-108,36,36,-357,-356,-358,-359,-164,-51,-336,-339,-340,-333,-53,-330,-305,-333,-56,-343,-346,-347,-58,-350,-299,-301,-353,-354,-333,-65,-62,-303,-72,-69,-78,-75,-52,-338,-54,-332,-306,-57,-345,-59,-352,-300,-302,-66,-64,-304,-73,-71,-79,-77,-277,36,-107,36,-152,-159,-154,-158,-167,36,-213,-4,36,-278,-120,-119,-121,-122,-216,-169,36,36,-116,-115,-117,-118,-124,-123,-125,-217,-168,36,36,-170,-171,-271,-272,-282,-280,-281,-279,-172,-173,-309,-310,-311,-312,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-313,-314,-315,-316,-153,-155,]),'IF':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,59,67,72,75,76,77,78,79,80,81,82,83,84,85,86,87,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,134,135,136,137,138,144,145,146,147,149,150,152,157,158,159,163,181,182,183,184,185,186,187,188,190,191,192,193,201,203,222,231,232,233,234,235,236,237,238,239,240,241,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,289,315,316,317,318,319,320,325,326,356,374,406,430,432,433,434,446,447,448,457,458,459,460,462,464,465,466,467,468,470,471,472,473,476,477,478,479,481,482,483,484,485,486,487,490,491,492,494,495,496,497,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,538,543,557,567,568,569,605,606,610,614,617,621,661,667,673,674,675,676,681,713,714,715,716,717,718,719,720,721,722,723,724,753,754,755,792,793,795,797,819,821,824,825,826,827,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,878,879,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-257,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-287,-288,-289,-290,-137,37,-29,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,151,-30,37,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-219,151,37,-263,-295,-291,-136,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,-138,-141,37,-36,-38,-40,-165,-335,-329,-342,-349,-61,-68,-74,-333,-353,-339,-346,-341,-334,-348,-355,-307,-37,-39,-41,-166,-337,-331,-344,-351,-63,-70,-76,-308,-132,-133,-147,-148,-149,-150,-151,-146,-140,-174,37,-218,37,37,-98,-99,-83,-108,37,37,-357,-356,-358,-359,-164,-51,-336,-339,-340,-333,-53,-330,-305,-333,-56,-343,-346,-347,-58,-350,-299,-301,-353,-354,-333,-65,-62,-303,-72,-69,-78,-75,-52,-338,-54,-332,-306,-57,-345,-59,-352,-300,-302,-66,-64,-304,-73,-71,-79,-77,-277,37,-107,37,-152,-159,-154,-158,-167,37,-213,-4,37,-278,-120,-119,-121,-122,-216,-169,37,37,-116,-115,-117,-118,-124,-123,-125,151,-217,-168,37,37,-170,-171,-271,-272,-282,-280,-281,-279,-172,-173,-309,-310,-311,-312,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-313,-314,-315,-316,-153,-155,]),'INT':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,57,58,59,61,62,63,64,65,66,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,90,91,92,94,96,97,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,132,134,135,136,137,138,144,145,146,147,149,152,153,155,157,158,159,163,169,181,182,183,184,185,186,187,188,190,191,192,193,195,198,200,201,203,219,222,229,231,232,233,234,235,236,237,238,239,240,241,243,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,288,289,291,292,293,294,295,296,297,298,299,304,305,309,315,316,317,318,319,320,323,325,326,329,356,374,375,377,379,380,381,382,383,394,395,396,397,398,399,406,427,430,432,433,434,446,447,448,457,458,459,460,462,464,465,466,467,468,470,471,472,473,476,477,478,479,481,482,483,484,485,486,487,490,491,492,494,495,496,497,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,535,536,538,539,543,557,559,566,567,568,569,572,575,605,606,610,612,613,614,617,621,622,661,667,673,674,675,676,681,713,714,715,716,717,718,719,720,721,722,724,726,732,733,734,735,753,754,755,792,793,795,796,797,799,808,814,818,819,821,824,825,826,827,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,878,879,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-257,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-287,-288,-289,-290,31,122,-137,136,136,-267,-268,-269,-270,31,-29,136,136,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,-30,157,136,136,174,174,136,185,191,31,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,136,-254,-252,-103,-260,-258,-255,-256,-261,-262,-219,31,245,245,-263,-295,-291,-136,174,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,314,322,136,-138,-141,348,31,174,-36,-38,-40,-165,-335,-329,-342,-349,-61,-68,-74,136,-333,-353,-339,-346,-341,-334,-348,-355,-307,-37,-39,-41,-166,-337,-331,-344,-351,-63,-70,-76,-308,-132,136,-133,174,-228,-229,-230,136,-247,-248,-249,-250,174,31,429,-147,-148,-149,-150,-151,-146,136,-140,-174,348,31,-218,136,136,136,468,473,468,487,136,136,468,473,468,487,31,533,31,-98,-99,-83,-108,31,31,-357,-356,-358,-359,-164,-51,-336,-339,-340,-333,-53,-330,-305,-333,-56,-343,-346,-347,-58,-350,-299,-301,-353,-354,-333,-65,-62,-303,-72,-69,-78,-75,-52,-338,-54,-332,-306,-57,-345,-59,-352,-300,-302,-66,-64,-304,-73,-71,-79,-77,615,616,-277,618,31,-107,31,136,31,-152,-159,191,185,-154,-158,-167,662,663,31,-213,-4,31,31,-278,-120,-119,-121,-122,-216,-169,31,31,-116,-115,-117,-118,-124,-123,-125,-217,760,767,768,769,770,-168,31,31,-170,-171,-271,829,-272,831,840,846,850,-282,-280,-281,-279,-172,-173,876,-309,-310,-311,-312,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-313,-314,-315,-316,877,-153,-155,]),'DOUBLE':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,57,58,59,61,62,63,64,65,66,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,90,91,92,94,96,97,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,132,134,135,136,137,138,144,145,146,147,149,152,153,155,157,158,159,163,169,181,182,183,184,185,186,187,188,190,191,192,193,195,200,201,203,219,222,229,231,232,233,234,235,236,237,238,239,240,241,243,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,288,289,291,292,293,294,295,296,297,298,299,304,305,315,316,317,318,319,320,323,325,326,338,356,374,375,377,379,383,394,395,399,406,430,432,433,434,446,447,448,457,458,459,460,462,464,465,466,467,468,470,471,472,473,476,477,478,479,481,482,483,484,485,486,487,490,491,492,494,495,496,497,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,538,543,557,559,566,567,568,569,576,577,605,606,610,614,617,621,622,661,667,673,674,675,676,681,713,714,715,716,717,718,719,720,721,722,724,727,740,741,742,743,753,754,755,792,793,795,797,798,801,805,809,817,819,821,824,825,826,827,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,878,879,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-257,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-287,-288,-289,-290,40,131,-137,131,131,-267,-268,-269,-270,40,-29,131,131,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,-30,159,131,131,177,177,131,184,193,40,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,131,-254,-252,-103,-260,-258,-255,-256,-261,-262,-219,40,246,246,-263,-295,-291,-136,177,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,131,131,-138,-141,351,40,177,-36,-38,-40,-165,-335,-329,-342,-349,-61,-68,-74,131,-333,-353,-339,-346,-341,-334,-348,-355,-307,-37,-39,-41,-166,-337,-331,-344,-351,-63,-70,-76,-308,-132,131,-133,177,-228,-229,-230,131,-247,-248,-249,-250,177,40,-147,-148,-149,-150,-151,-146,131,-140,-174,351,40,-218,131,131,131,485,131,131,485,40,40,-98,-99,-83,-108,40,40,-357,-356,-358,-359,-164,-51,-336,-339,-340,-333,-53,-330,-305,-333,-56,-343,-346,-347,-58,-350,-299,-301,-353,-354,-333,-65,-62,-303,-72,-69,-78,-75,-52,-338,-54,-332,-306,-57,-345,-59,-352,-300,-302,-66,-64,-304,-73,-71,-79,-77,-277,40,-107,40,131,40,-152,-159,159,193,-154,-158,-167,40,-213,-4,40,40,-278,-120,-119,-121,-122,-216,-169,40,40,-116,-115,-117,-118,-124,-123,-125,-217,762,775,776,777,778,-168,40,40,-170,-171,-271,-272,830,833,837,841,849,-282,-280,-281,-279,-172,-173,-309,-310,-311,-312,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-313,-314,-315,-316,-153,-155,]),'LONG':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,57,58,59,61,62,63,64,65,66,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,91,92,94,96,97,100,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,132,134,135,136,137,138,144,145,146,147,149,152,153,155,157,158,159,163,169,181,182,183,184,185,186,187,188,190,191,192,193,195,200,201,203,219,222,229,231,232,233,234,235,236,237,238,239,240,241,243,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,288,289,291,292,293,294,295,296,297,298,299,304,305,315,316,317,318,319,320,323,325,326,332,356,374,375,377,379,380,382,383,394,395,396,398,399,406,430,432,433,434,446,447,448,457,458,459,460,462,464,465,466,467,468,470,471,472,473,476,477,478,479,481,482,483,484,485,486,487,490,491,492,494,495,496,497,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,538,543,557,559,566,567,568,569,605,606,610,614,617,621,622,661,667,673,674,675,676,681,713,714,715,716,717,718,719,720,721,722,724,736,737,738,739,753,754,755,792,793,795,797,800,804,812,816,819,821,824,825,826,827,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,878,879,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-257,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-287,-288,-289,-290,41,129,-137,129,129,-267,-268,-269,-270,41,-29,129,129,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,-30,129,129,175,175,129,187,41,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,129,-254,-252,-103,-260,-258,-255,-256,-261,-262,-219,41,247,247,-263,-295,-291,-136,175,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,129,129,-138,-141,349,41,175,-36,-38,-40,-165,-335,-329,-342,-349,-61,-68,-74,129,-333,-353,-339,-346,-341,-334,-348,-355,-307,-37,-39,-41,-166,-337,-331,-344,-351,-63,-70,-76,-308,-132,129,-133,175,-228,-229,-230,129,-247,-248,-249,-250,175,41,-147,-148,-149,-150,-151,-146,129,-140,-174,349,41,-218,129,129,129,466,466,466,129,129,466,466,466,41,41,-98,-99,-83,-108,41,41,-357,-356,-358,-359,-164,-51,-336,-339,-340,-333,-53,-330,-305,-333,-56,-343,-346,-347,-58,-350,-299,-301,-353,-354,-333,-65,-62,-303,-72,-69,-78,-75,-52,-338,-54,-332,-306,-57,-345,-59,-352,-300,-302,-66,-64,-304,-73,-71,-79,-77,-277,41,-107,41,129,41,-152,-159,-154,-158,-167,41,-213,-4,41,41,-278,-120,-119,-121,-122,-216,-169,41,41,-116,-115,-117,-118,-124,-123,-125,-217,771,772,773,774,-168,41,41,-170,-171,-271,-272,832,836,844,848,-282,-280,-281,-279,-172,-173,-309,-310,-311,-312,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-313,-314,-315,-316,-153,-155,]),'FLOAT':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,57,58,59,61,62,63,64,65,66,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,91,92,94,96,97,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,132,134,135,136,137,138,144,145,146,147,149,152,153,155,157,158,159,163,169,181,182,183,184,185,186,187,188,190,191,192,193,195,200,201,203,219,222,229,231,232,233,234,235,236,237,238,239,240,241,243,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,288,289,291,292,293,294,295,296,297,298,299,304,305,315,316,317,318,319,320,323,325,326,335,356,374,375,377,379,382,383,394,395,398,399,406,430,432,433,434,446,447,448,457,458,459,460,462,464,465,466,467,468,470,471,472,473,476,477,478,479,481,482,483,484,485,486,487,490,491,492,494,495,496,497,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,538,543,557,559,566,567,568,569,605,606,610,614,617,621,622,661,667,673,674,675,676,681,713,714,715,716,717,718,719,720,721,722,724,744,745,746,747,753,754,755,792,793,795,797,802,806,810,813,819,821,824,825,826,827,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,878,879,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-257,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-287,-288,-289,-290,42,130,-137,130,130,-267,-268,-269,-270,42,-29,130,130,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,-30,130,130,176,176,130,188,42,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,130,-254,-252,-103,-260,-258,-255,-256,-261,-262,-219,42,248,248,-263,-295,-291,-136,176,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,130,130,-138,-141,350,42,176,-36,-38,-40,-165,-335,-329,-342,-349,-61,-68,-74,130,-333,-353,-339,-346,-341,-334,-348,-355,-307,-37,-39,-41,-166,-337,-331,-344,-351,-63,-70,-76,-308,-132,130,-133,176,-228,-229,-230,130,-247,-248,-249,-250,176,42,-147,-148,-149,-150,-151,-146,130,-140,-174,350,42,-218,130,130,130,478,478,130,130,478,478,42,42,-98,-99,-83,-108,42,42,-357,-356,-358,-359,-164,-51,-336,-339,-340,-333,-53,-330,-305,-333,-56,-343,-346,-347,-58,-350,-299,-301,-353,-354,-333,-65,-62,-303,-72,-69,-78,-75,-52,-338,-54,-332,-306,-57,-345,-59,-352,-300,-302,-66,-64,-304,-73,-71,-79,-77,-277,42,-107,42,130,42,-152,-159,-154,-158,-167,42,-213,-4,42,42,-278,-120,-119,-121,-122,-216,-169,42,42,-116,-115,-117,-118,-124,-123,-125,-217,779,780,781,782,-168,42,42,-170,-171,-271,-272,834,838,842,845,-282,-280,-281,-279,-172,-173,-309,-310,-311,-312,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-313,-314,-315,-316,-153,-155,]),'STRING':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,57,58,59,67,72,75,76,77,78,79,80,81,82,83,84,85,87,91,92,94,96,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,132,134,135,136,137,138,144,145,146,147,149,152,153,155,157,158,159,163,169,181,182,183,184,185,186,187,188,190,191,192,193,195,200,201,203,219,222,229,231,232,233,234,235,236,237,238,239,240,241,243,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,288,289,291,292,293,294,295,296,297,298,299,300,304,305,306,311,315,316,317,318,319,320,323,325,326,341,347,356,374,375,377,379,380,381,382,383,384,386,394,395,396,397,398,399,400,402,406,430,432,433,434,446,447,448,457,458,459,460,462,464,465,466,467,468,470,471,472,473,476,477,478,479,481,482,483,484,485,486,487,490,491,492,494,495,496,497,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,538,543,557,559,566,567,568,569,579,605,606,610,614,617,621,622,661,667,673,674,675,676,681,713,714,715,716,717,718,719,720,721,722,724,728,729,730,731,749,752,753,754,755,792,793,795,797,803,807,811,815,819,821,822,824,825,826,827,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,878,879,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-257,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-287,-288,-289,-290,110,126,-137,43,-29,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,-30,126,126,172,172,192,43,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,126,-254,-252,-103,-260,-258,-255,-256,-261,-262,-219,43,239,272,-263,-295,-291,-136,172,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,126,126,-138,-141,352,43,172,-36,-38,-40,-165,-335,-329,-342,-349,-61,-68,-74,126,-333,-353,-339,-346,-341,-334,-348,-355,-307,-37,-39,-41,-166,-337,-331,-344,-351,-63,-70,-76,-308,-132,126,-133,172,-228,-229,-230,411,-247,-248,-249,-250,415,419,419,423,431,-147,-148,-149,-150,-151,-146,126,-140,-174,436,415,43,-218,126,126,126,469,475,480,489,491,415,126,126,469,475,480,489,522,415,43,43,-98,-99,-83,-108,43,43,-357,-356,-358,-359,-164,-51,-336,-339,-340,-333,-53,-330,-305,-333,-56,-343,-346,-347,-58,-350,-299,-301,-353,-354,-333,-65,-62,-303,-72,-69,-78,-75,-52,-338,-54,-332,-306,-57,-345,-59,-352,-300,-302,-66,-64,-304,-73,-71,-79,-77,-277,43,-107,110,126,43,-152,-159,192,-154,-158,-167,43,-213,-4,110,43,-278,-120,-119,-121,-122,-216,-169,43,43,-116,-115,-117,-118,-124,-123,-125,-217,763,764,765,766,786,786,-168,43,43,-170,-171,-271,-272,835,839,843,847,-282,-280,852,-281,-279,-172,-173,-309,-310,-311,-312,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-313,-314,-315,-316,-153,-155,]),'CHAR':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,57,58,59,67,72,75,76,77,78,79,80,81,82,83,84,85,87,90,91,92,94,96,99,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,132,134,135,136,137,138,144,145,146,147,149,152,153,155,157,158,159,163,169,181,182,183,184,185,186,187,188,190,191,192,193,195,200,201,203,219,222,229,231,232,233,234,235,236,237,238,239,240,241,243,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,288,289,291,292,293,294,295,296,297,298,299,304,305,307,315,316,317,318,319,320,323,325,326,344,356,374,375,377,379,381,383,384,385,394,395,397,399,400,401,406,430,432,433,434,446,447,448,457,458,459,460,462,464,465,466,467,468,470,471,472,473,476,477,478,479,481,482,483,484,485,486,487,490,491,492,494,495,496,497,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,538,543,557,559,566,567,568,569,571,575,605,606,610,614,617,621,622,661,667,673,674,675,676,681,713,714,715,716,717,718,719,720,721,722,724,748,751,753,754,755,792,793,795,797,819,820,821,824,825,826,827,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,878,879,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-257,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-287,-288,-289,-290,111,127,-137,47,-29,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,-30,158,127,127,173,173,186,190,47,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,127,-254,-252,-103,-260,-258,-255,-256,-261,-262,-219,47,240,273,-263,-295,-291,-136,173,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,127,127,-138,-141,353,47,173,-36,-38,-40,-165,-335,-329,-342,-349,-61,-68,-74,127,-333,-353,-339,-346,-341,-334,-348,-355,-307,-37,-39,-41,-166,-337,-331,-344,-351,-63,-70,-76,-308,-132,127,-133,173,-228,-229,-230,412,-247,-248,-249,-250,47,47,425,-147,-148,-149,-150,-151,-146,127,-140,-174,353,47,-218,127,127,127,474,488,493,495,127,127,474,488,493,525,47,47,-98,-99,-83,-108,47,47,-357,-356,-358,-359,-164,-51,-336,-339,-340,-333,-53,-330,-305,-333,-56,-343,-346,-347,-58,-350,-299,-301,-353,-354,-333,-65,-62,-303,-72,-69,-78,-75,-52,-338,-54,-332,-306,-57,-345,-59,-352,-300,-302,-66,-64,-304,-73,-71,-79,-77,-277,47,-107,111,127,47,-152,-159,158,186,-154,-158,-167,47,-213,-4,111,47,-278,-120,-119,-121,-122,-216,-169,47,47,-116,-115,-117,-118,-124,-123,-125,-217,784,784,-168,47,47,-170,-171,-271,-272,-282,851,-280,-281,-279,-172,-173,-309,-310,-311,-312,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-313,-314,-315,-316,-153,-155,]),'$end':([1,4,6,7,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,59,69,70,72,75,76,77,78,79,80,81,82,83,84,85,87,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,134,135,136,137,138,139,144,145,146,147,149,157,158,159,163,181,182,183,184,185,186,187,188,190,191,192,193,201,203,231,232,233,234,235,236,237,238,239,240,241,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,289,312,315,316,317,318,319,320,325,326,374,432,433,434,446,457,458,459,460,462,464,465,466,467,468,470,471,472,473,476,477,478,479,481,482,483,484,485,486,487,490,491,492,494,495,496,497,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,538,557,568,569,605,606,610,617,667,673,674,675,676,681,713,716,717,718,719,720,721,722,724,753,792,793,795,797,819,821,824,825,826,827,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,878,879,],[0,-3,-5,-7,-18,-9,-10,-11,-12,-13,-14,-15,-16,-17,-19,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-257,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-287,-288,-289,-290,-137,-6,-8,-29,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,-30,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,-254,-252,-103,-260,-258,-2,-255,-256,-261,-262,-219,-263,-295,-291,-136,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,-138,-141,-36,-38,-40,-165,-335,-329,-342,-349,-61,-68,-74,-333,-353,-339,-346,-341,-334,-348,-355,-307,-37,-39,-41,-166,-337,-331,-344,-351,-63,-70,-76,-308,-132,-133,-1,-147,-148,-149,-150,-151,-146,-140,-174,-218,-98,-99,-83,-108,-357,-356,-358,-359,-164,-51,-336,-339,-340,-333,-53,-330,-305,-333,-56,-343,-346,-347,-58,-350,-299,-301,-353,-354,-333,-65,-62,-303,-72,-69,-78,-75,-52,-338,-54,-332,-306,-57,-345,-59,-352,-300,-302,-66,-64,-304,-73,-71,-79,-77,-277,-107,-152,-159,-154,-158,-167,-213,-278,-120,-119,-121,-122,-216,-169,-116,-115,-117,-118,-124,-123,-125,-217,-168,-170,-171,-271,-272,-282,-280,-281,-279,-172,-173,-309,-310,-311,-312,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-313,-314,-315,-316,-153,-155,]),'IGUAL':([3,88,89,141,142,199,223,224,226,254,255,256,257,258,259,260,278,279,280,281,282,283,284,360,362,363,364,365,366,367,368,371,454,455,549,561,580,581,582,603,604,607,608,609,629,630,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,],[57,153,155,221,-111,323,358,359,-112,380,381,382,383,384,385,386,396,397,398,399,400,401,402,-126,-84,-85,-86,-87,-88,-89,-90,-113,-114,566,57,-127,633,634,635,656,657,658,659,660,-91,-92,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,]),'PAR_I':([3,32,33,34,35,36,37,59,71,106,121,123,151,153,154,155,156,189,201,203,225,231,242,244,264,275,276,313,325,371,549,623,627,669,677,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,708,709,828,853,],[58,91,92,93,94,95,96,132,143,195,198,-139,229,243,262,243,262,311,-138,-141,361,375,377,379,375,394,395,198,-140,453,58,195,243,195,375,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,751,752,854,875,]),'MATCH':([3,],[60,]),'MAS':([3,9,31,38,39,40,41,42,43,47,52,53,54,55,106,109,110,111,112,113,116,117,118,121,126,127,128,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,161,166,170,171,172,173,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,231,232,239,240,245,246,247,248,264,265,272,273,301,416,417,418,419,420,421,422,432,433,473,474,485,487,488,491,493,522,538,623,626,667,669,672,],[62,74,90,98,-257,99,100,101,103,104,-287,-288,-289,-290,62,74,103,104,98,-97,-100,-101,-102,-95,-93,-94,-96,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-263,-295,-291,288,62,98,74,103,104,90,100,101,99,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,62,74,103,104,90,99,100,101,62,74,103,104,62,98,74,62,103,74,98,62,-98,-99,571,572,575,576,577,103,579,103,-277,62,74,-278,62,74,]),'MENOS':([3,9,31,38,39,40,41,42,52,53,54,55,106,109,112,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,166,170,171,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,231,232,245,246,247,248,264,265,301,416,417,418,420,421,422,623,626,669,672,],[63,63,-103,63,-257,-106,-104,-105,-287,-288,-289,-290,63,63,63,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-263,-295,-291,63,63,63,-103,-104,-105,-106,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,63,63,-103,-106,-104,-105,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'MULTIPLICACION':([3,9,31,38,39,40,41,42,52,53,54,55,106,109,112,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,166,170,171,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,231,232,245,246,247,248,264,265,301,416,417,418,420,421,422,623,626,669,672,],[64,64,-103,64,-257,-106,-104,-105,-287,-288,-289,-290,64,64,64,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-263,-295,-291,64,64,64,-103,-104,-105,-106,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,64,64,-103,-106,-104,-105,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'DIVISION':([3,9,31,38,39,40,41,42,52,53,54,55,106,109,112,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,166,170,171,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,231,232,245,246,247,248,264,265,301,416,417,418,420,421,422,623,626,669,672,],[65,65,-103,65,-257,-106,-104,-105,-287,-288,-289,-290,65,65,65,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-263,-295,-291,65,65,65,-103,-104,-105,-106,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,65,65,-103,-106,-104,-105,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'MOD':([3,9,31,38,39,40,41,42,52,53,54,55,106,109,112,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,166,170,171,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,231,232,245,246,247,248,264,265,301,416,417,418,420,421,422,623,626,669,672,],[66,66,-103,66,-257,-106,-104,-105,-287,-288,-289,-290,66,66,66,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-263,-295,-291,66,66,66,-103,-104,-105,-106,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,66,66,-103,-106,-104,-105,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'LLAVE_D':([6,7,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,59,69,70,72,75,76,77,78,79,80,81,82,83,84,85,87,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,134,135,136,137,138,144,145,146,147,149,157,158,159,163,181,182,183,184,185,186,187,188,190,191,192,193,194,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,230,231,232,233,234,235,236,237,238,239,240,241,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,289,315,316,317,318,319,320,325,326,327,328,330,331,333,334,336,337,339,340,342,343,345,346,357,374,432,433,434,445,446,457,458,459,460,462,464,465,466,467,468,470,471,472,473,476,477,478,479,481,482,483,484,485,486,487,490,491,492,494,495,496,497,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,531,537,538,541,542,544,545,546,547,548,550,551,552,553,554,555,557,568,569,605,606,610,617,619,620,623,624,625,626,632,664,667,668,669,670,671,672,673,674,675,676,677,678,679,681,710,713,716,717,718,719,720,721,722,724,753,756,757,790,791,792,793,795,797,819,821,824,825,826,827,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,878,879,],[-5,-7,-18,-9,-10,-11,-12,-13,-14,-15,-16,-17,-19,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-257,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-287,-288,-289,-290,-137,-6,-8,-29,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,-30,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-219,-263,-295,-291,-136,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,312,-138,-141,326,-175,-176,-177,-178,-179,-180,-181,-183,-187,-191,-195,-199,-203,-207,374,-36,-38,-40,-165,-335,-329,-342,-349,-61,-68,-74,-333,-353,-339,-346,-341,-334,-348,-355,-307,-37,-39,-41,-166,-337,-331,-344,-351,-63,-70,-76,-308,-132,-133,-147,-148,-149,-150,-151,-146,-140,-174,-184,-185,-188,-189,-192,-193,-196,-197,-200,-201,-204,-205,-208,-209,446,-218,-98,-99,-83,557,-108,-357,-356,-358,-359,-164,-51,-336,-339,-340,-333,-53,-330,-305,-333,-56,-343,-346,-347,-58,-350,-299,-301,-353,-354,-333,-65,-62,-303,-72,-69,-78,-75,-52,-338,-54,-332,-306,-57,-345,-59,-352,-300,-302,-66,-64,-304,-73,-71,-79,-77,610,617,-277,-182,-211,-31,-32,-33,-34,-35,-186,-190,-194,-198,-202,-206,-107,-152,-159,-154,-158,-167,-213,-210,668,673,674,675,676,681,713,-278,-212,716,717,718,719,-120,-119,-121,-122,720,721,722,-216,753,-169,-116,-115,-117,-118,-124,-123,-125,-217,-168,792,793,826,827,-170,-171,-271,-272,-282,-280,-281,-279,-172,-173,-309,-310,-311,-312,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-313,-314,-315,-316,-153,-155,]),'RETURN':([9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,59,72,75,76,77,78,79,80,81,82,83,84,85,87,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,134,135,136,137,138,144,145,146,147,149,157,158,159,163,181,182,183,184,185,186,187,188,190,191,192,193,201,203,231,232,233,234,235,236,237,238,239,240,241,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,289,315,316,317,318,319,320,325,326,374,432,433,434,447,457,458,459,460,462,464,465,466,467,468,470,471,472,473,476,477,478,479,481,482,483,484,485,486,487,490,491,492,494,495,496,497,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,538,558,560,568,569,605,606,610,617,667,681,713,724,753,792,793,795,797,819,821,824,825,826,827,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,878,879,],[-18,-9,-10,-11,-12,-13,-14,-15,-16,-17,-19,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-257,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-287,-288,-289,-290,-137,-29,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,-30,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-219,-263,-295,-291,-136,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,-138,-141,-36,-38,-40,-165,-335,-329,-342,-349,-61,-68,-74,-333,-353,-339,-346,-341,-334,-348,-355,-307,-37,-39,-41,-166,-337,-331,-344,-351,-63,-70,-76,-308,-132,-133,-147,-148,-149,-150,-151,-146,-140,-174,-218,-98,-99,-83,559,-357,-356,-358,-359,-164,-51,-336,-339,-340,-333,-53,-330,-305,-333,-56,-343,-346,-347,-58,-350,-299,-301,-353,-354,-333,-65,-62,-303,-72,-69,-78,-75,-52,-338,-54,-332,-306,-57,-345,-59,-352,-300,-302,-66,-64,-304,-73,-71,-79,-77,-277,622,627,-152,-159,-154,-158,-167,-213,-278,-216,-169,-217,-168,-170,-171,-271,-272,-282,-280,-281,-279,-172,-173,-309,-310,-311,-312,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-313,-314,-315,-316,-153,-155,]),'ELSE':([18,84,85,148,149,374,617,681,724,],[86,150,-215,150,-219,-218,-213,723,-217,]),'CASE':([22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,59,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,133,134,135,136,137,138,144,145,146,147,157,158,159,163,181,182,183,184,185,186,187,188,190,191,192,193,201,203,212,213,214,215,216,217,218,231,232,233,234,235,236,237,238,239,240,241,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,289,315,316,317,318,319,320,325,432,433,434,457,458,459,460,462,464,465,466,467,468,470,471,472,473,476,477,478,479,481,482,483,484,485,486,487,490,491,492,494,495,496,497,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,538,541,542,544,545,546,547,548,550,551,552,553,554,555,568,569,605,606,667,668,795,797,819,821,824,825,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,878,879,],[-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-257,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-287,-288,-289,-290,-137,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,219,-254,-252,-103,-260,-258,-255,-256,-261,-262,-263,-295,-291,-136,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,-138,-141,329,332,335,338,341,344,347,-36,-38,-40,-165,-335,-329,-342,-349,-61,-68,-74,-333,-353,-339,-346,-341,-334,-348,-355,-307,-37,-39,-41,-166,-337,-331,-344,-351,-63,-70,-76,-308,-132,-133,-147,-148,-149,-150,-151,-146,-140,-98,-99,-83,-357,-356,-358,-359,-164,-51,-336,-339,-340,-333,-53,-330,-305,-333,-56,-343,-346,-347,-58,-350,-299,-301,-353,-354,-333,-65,-62,-303,-72,-69,-78,-75,-52,-338,-54,-332,-306,-57,-345,-59,-352,-300,-302,-66,-64,-304,-73,-71,-79,-77,-277,-182,-211,-31,-32,-33,-34,-35,-186,-190,-194,-198,-202,-206,-152,-159,-154,-158,-278,-212,-271,-272,-282,-280,-281,-279,-309,-310,-311,-312,-325,-326,-327,-328,-321,-322,-323,-324,-317,-318,-319,-320,-313,-314,-315,-316,-153,-155,]),'AND':([31,39,40,41,42,52,53,54,55,116,117,118,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,165,166,167,168,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,301,302,303,408,409,410,411,412,413,414,416,417,418,420,421,423,424,425,426,538,667,],[-103,-257,-106,-104,-105,-287,-288,-289,-290,-100,-101,-102,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-263,-295,-291,292,-222,-223,-224,-103,-104,-105,-106,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,-225,-226,-227,-246,-238,-240,-242,-244,-235,-241,-231,-234,-239,-232,-233,-236,-243,-237,-245,-277,-278,]),'OR':([31,39,40,41,42,52,53,54,55,116,117,118,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,165,166,167,168,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,301,302,303,408,409,410,411,412,413,414,416,417,418,420,421,423,424,425,426,538,667,],[-103,-257,-106,-104,-105,-287,-288,-289,-290,-100,-101,-102,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-263,-295,-291,293,-222,-223,-224,-103,-104,-105,-106,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,-225,-226,-227,-246,-238,-240,-242,-244,-235,-241,-231,-234,-239,-232,-233,-236,-243,-237,-245,-277,-278,]),'NOT':([31,39,40,41,42,52,53,54,55,94,96,116,117,118,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,165,166,167,168,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,229,291,292,293,294,301,302,303,408,409,410,411,412,413,414,416,417,418,420,421,423,424,425,426,538,667,],[-103,-257,-106,-104,-105,-287,-288,-289,-290,169,169,-100,-101,-102,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-263,-295,-291,294,-222,-223,-224,-103,-104,-105,-106,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,169,169,-228,-229,-230,-225,-226,-227,-246,-238,-240,-242,-244,-235,-241,-231,-234,-239,-232,-233,-236,-243,-237,-245,-277,-278,]),'PAR_D':([31,39,40,41,42,52,53,54,55,58,93,113,116,117,118,121,122,124,125,126,127,128,129,130,131,132,134,135,136,137,138,143,144,145,146,147,157,158,159,160,161,162,164,165,166,167,168,174,175,176,177,180,181,182,183,184,185,186,187,188,190,191,192,193,195,202,227,301,302,303,313,314,321,322,324,362,363,364,365,366,367,368,373,375,378,405,407,408,409,410,411,412,413,414,416,417,418,420,421,423,424,425,426,428,431,432,433,449,450,455,461,463,508,509,532,538,562,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,615,616,618,628,629,630,631,662,663,667,680,759,760,761,762,783,784,785,786,788,789,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,876,877,],[-103,-257,-106,-104,-105,-287,-288,-289,-290,123,163,-97,-100,-101,-102,-95,199,-162,201,-93,-94,-96,-104,-105,-106,203,-254,-252,-103,-260,-258,226,-255,-256,-261,-262,-263,-295,-291,287,-135,289,290,-221,-222,-223,-224,-103,-104,-105,-106,310,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,123,325,371,-225,-226,-227,432,433,432,433,-163,-84,-85,-86,-87,-88,-89,-90,456,123,462,-134,-220,-246,-238,-240,-242,-244,-235,-241,-231,-234,-239,-232,-233,-236,-243,-237,-245,534,538,-98,-99,561,-128,-109,568,569,605,606,611,-277,-129,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,665,666,667,-130,-91,-92,-110,711,712,-278,-131,795,-273,797,-275,819,-285,821,-283,824,825,-274,-276,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,-286,-284,878,879,]),'IGUAL_COMPARACION':([39,52,53,54,55,116,117,118,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,166,167,170,171,172,173,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,301,302,538,667,],[-257,-287,-288,-289,-290,-100,-101,-102,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-263,-295,-291,296,296,296,296,296,296,-103,-104,-105,-106,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,296,296,-277,-278,]),'DIFERENTE':([39,52,53,54,55,116,117,118,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,166,167,170,171,172,173,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,301,302,538,667,],[-257,-287,-288,-289,-290,-100,-101,-102,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-263,-295,-291,297,297,297,297,297,297,-103,-104,-105,-106,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,297,297,-277,-278,]),'MAYOR':([39,52,53,54,55,116,117,118,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,166,167,170,171,172,173,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,301,302,538,667,],[-257,-287,-288,-289,-290,-100,-101,-102,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-263,-295,-291,298,298,298,298,298,298,-103,-104,-105,-106,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,298,298,-277,-278,]),'MENOR':([39,52,53,54,55,116,117,118,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,166,167,170,171,172,173,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,301,302,538,667,],[-257,-287,-288,-289,-290,-100,-101,-102,-104,-105,-106,-254,-252,-103,-260,-258,-255,-256,-261,-262,-263,-295,-291,299,299,299,299,299,299,-103,-104,-105,-106,-251,-253,-259,-264,-292,-293,-265,-266,-297,-296,-298,-294,299,299,-277,-278,]),'PUNTO':([43,59,68,106,110,114,119,120,123,126,163,172,201,203,220,231,239,264,272,325,352,411,415,444,469,475,480,489,623,669,677,],[102,-137,140,196,102,197,-144,-145,-139,102,-136,102,-138,-141,355,196,376,196,376,-140,102,102,102,556,570,573,574,578,196,196,196,]),'LLAVE_I':([56,60,86,141,142,150,221,226,290,310,358,359,371,437,438,439,440,441,442,443,454,456,534,540,611,665,666,711,712,],[105,133,152,222,-111,152,356,-112,406,430,447,448,-113,543,543,543,543,543,543,543,-114,567,614,543,661,714,715,754,755,]),'TRUE':([57,58,91,92,94,96,132,153,155,169,195,200,219,229,243,288,291,292,293,294,295,296,297,298,299,300,323,347,375,377,379,386,394,395,402,559,566,622,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,-228,-229,-230,116,-247,-248,-249,-250,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'FLASE':([57,58,91,92,94,96,132,153,155,169,195,200,219,229,243,288,291,292,293,294,295,296,297,298,299,300,323,347,375,377,379,386,394,395,402,559,566,622,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-228,-229,-230,117,-247,-248,-249,-250,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'DOBLE_PUNTO':([88,89,141,142,226,228,371,454,],[154,156,225,-111,-112,372,-113,-114,]),'STARTSWITH':([102,376,],[189,189,]),'COMA':([113,116,117,118,121,122,124,126,127,128,129,130,131,136,313,314,362,363,364,365,366,367,368,388,389,390,391,392,431,432,433,450,538,628,629,630,667,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,788,789,829,830,851,852,],[-97,-100,-101,-102,-95,-103,200,-93,-94,-96,-104,-105,-106,-103,-95,-103,-84,-85,-86,-87,-88,-89,-90,501,502,503,504,505,539,-98,-99,563,-277,563,-91,-92,-278,796,-273,798,-275,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,820,-285,822,-283,820,822,-274,-276,-286,-284,]),'FUNCION_FLECHA':([116,117,118,348,349,350,351,352,353,354,435,436,538,667,],[-100,-101,-102,437,438,439,440,441,442,443,540,441,-277,-278,]),'ARRAYCLASS':([153,154,155,156,225,361,372,387,403,451,452,563,634,635,682,707,758,787,],[242,261,275,285,369,369,369,369,369,369,369,369,683,684,725,750,369,369,]),'LISTCLASS':([153,154,155,156,225,361,372,387,403,451,452,563,656,657,659,660,758,787,],[244,263,276,286,370,370,370,370,370,370,370,370,705,706,708,709,370,370,]),'LONGCLASS':([154,156,225,262,361,372,387,403,451,452,501,502,504,505,563,758,787,],[254,278,366,390,366,366,366,366,366,366,584,588,596,600,366,366,366,]),'INTCLASS':([154,156,225,262,361,372,387,403,451,452,501,503,504,505,563,758,787,],[255,279,365,389,365,365,499,365,365,365,583,592,598,602,365,365,365,]),'FLOATCLASS':([154,156,225,262,361,372,387,403,451,452,501,502,503,504,563,758,787,],[256,280,368,392,368,368,368,368,368,368,586,590,594,597,368,368,368,]),'DOUBLECLASS':([154,156,225,262,361,372,387,403,451,452,501,502,503,505,563,758,787,],[257,281,367,391,367,367,500,367,367,367,585,589,593,601,367,367,367,]),'STRINGCLASS':([154,156,225,262,361,372,387,393,403,404,451,452,502,503,504,505,563,758,787,],[258,282,363,388,363,363,363,507,363,530,363,363,587,591,595,599,363,363,363,]),'CHARCLASS':([154,156,225,361,372,387,393,403,404,451,452,563,758,787,],[259,283,362,362,362,362,506,362,529,362,362,362,362,362,]),'BOOLCLASS':([154,156,225,361,372,387,403,451,452,563,758,787,],[260,284,364,364,364,364,364,364,364,364,364,364,]),'ITERATOR':([179,308,],[309,427,]),'TO_INT':([196,197,376,570,573,574,578,],[316,316,458,458,458,458,458,]),'TO_DOUBLE':([196,197,376,578,],[317,317,460,460,]),'TO_FLOAT':([196,197,376,574,578,],[318,318,459,459,459,]),'TO_LONG':([196,197,376,570,574,578,],[319,319,457,457,457,457,]),'CORCHETE_I':([261,263,285,286,369,370,725,750,],[387,393,403,404,451,452,758,787,]),'SUBGUION':([329,332,335,338,341,344,347,],[435,435,435,435,435,435,435,]),'CORCHETE_D':([362,363,364,365,366,367,368,498,499,500,506,507,528,529,530,564,565,629,630,794,823,],[-84,-85,-86,-87,-88,-89,-90,580,581,582,603,604,607,608,609,629,630,-91,-92,828,853,]),'TO':([429,533,],[535,612,]),'UNTIL':([429,533,],[536,613,]),'NEW':([633,658,],[682,707,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,67,],[1,139,]),'cuerpo':([0,6,7,67,105,],[4,69,70,4,194,]),'funcion':([0,6,7,67,105,],[6,6,6,6,6,]),'contenido':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,447,448,543,567,614,661,714,715,754,755,],[7,7,7,72,75,76,77,78,79,80,81,82,83,87,7,7,230,357,445,531,537,558,560,620,632,664,710,756,757,790,791,]),'aritmetica':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,57,67,94,96,105,152,153,155,169,222,229,291,304,305,356,406,430,447,448,543,559,567,614,622,661,714,715,754,755,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,109,9,171,171,9,9,232,265,171,9,171,171,417,420,9,9,9,9,9,9,626,9,9,672,9,9,9,9,9,]),'asignacion':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,437,438,439,440,441,442,443,447,448,540,543,567,614,661,714,715,754,755,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,544,544,544,544,544,544,544,10,10,544,10,10,10,10,10,10,10,10,]),'reasignacion':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,437,438,439,440,441,442,443,447,448,540,543,567,614,661,714,715,754,755,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,545,545,545,545,545,545,545,11,11,545,11,11,11,11,11,11,11,11,]),'funcall':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,57,67,105,152,153,155,222,356,406,430,437,438,439,440,441,442,443,447,448,540,543,559,567,614,622,627,661,714,715,754,755,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,120,12,12,12,120,120,12,12,12,12,546,546,546,546,546,546,546,12,12,546,12,120,12,12,120,120,12,12,12,12,12,]),'impresion':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,437,438,439,440,441,442,443,447,448,540,543,567,614,661,714,715,754,755,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,547,547,547,547,547,547,547,13,13,547,13,13,13,13,13,13,13,13,]),'entrada':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,57,67,105,152,153,155,222,356,406,430,437,438,439,440,441,442,443,447,448,540,543,559,567,614,622,627,661,714,715,754,755,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,119,14,14,14,119,119,14,14,14,14,548,548,548,548,548,548,548,14,14,548,14,119,14,14,119,119,14,14,14,14,14,]),'while':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,447,448,543,567,614,661,714,715,754,755,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'for':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,447,448,543,567,614,661,714,715,754,755,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'match':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,447,448,543,567,614,661,714,715,754,755,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'if':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,447,448,543,567,614,661,714,715,754,755,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'startsWith':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,57,58,67,91,92,94,96,105,132,152,153,155,169,195,200,219,222,229,243,288,291,295,300,323,347,356,375,377,379,386,394,395,402,406,430,447,448,543,559,566,567,614,622,661,714,715,754,755,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,118,118,19,118,118,118,118,19,118,19,118,118,118,118,118,118,19,118,118,118,118,118,118,118,118,19,118,118,118,118,118,118,118,19,19,19,19,19,118,118,19,19,118,19,19,19,19,19,]),'asignacionLong':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,437,438,439,440,441,442,443,447,448,540,543,567,614,661,714,715,754,755,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'asignacionInt':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,437,438,439,440,441,442,443,447,448,540,543,567,614,661,714,715,754,755,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'asignacionFloat':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,437,438,439,440,441,442,443,447,448,540,543,567,614,661,714,715,754,755,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'asignacionDouble':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,437,438,439,440,441,442,443,447,448,540,543,567,614,661,714,715,754,755,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'asignacionString':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,437,438,439,440,441,442,443,447,448,540,543,567,614,661,714,715,754,755,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'asignacionChar':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,437,438,439,440,441,442,443,447,448,540,543,567,614,661,714,715,754,755,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'asignacionBoolean':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,437,438,439,440,441,442,443,447,448,540,543,567,614,661,714,715,754,755,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'array':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,437,438,439,440,441,442,443,447,448,540,543,567,614,661,714,715,754,755,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'list':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,437,438,439,440,441,442,443,447,448,540,543,567,614,661,714,715,754,755,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'numeros':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,57,58,61,62,67,73,74,91,92,94,96,97,105,132,152,153,155,169,195,200,222,229,243,288,291,295,304,305,323,356,375,377,379,394,395,406,430,447,448,543,559,566,567,614,622,661,714,715,754,755,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,112,128,135,138,38,144,146,128,128,170,170,181,38,128,38,38,38,170,128,128,38,170,128,128,170,409,416,421,128,38,128,128,128,128,128,38,38,38,38,38,112,128,38,38,112,38,38,38,38,38,]),'suma':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,57,67,94,96,105,152,153,155,169,222,229,291,304,305,356,406,430,447,448,543,559,567,614,622,661,714,715,754,755,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'asignacionSumInt':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,437,438,439,440,441,442,443,447,448,540,543,567,614,661,714,715,754,755,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'asignacionSumDouble':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,437,438,439,440,441,442,443,447,448,540,543,567,614,661,714,715,754,755,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'asignacionSumString':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,437,438,439,440,441,442,443,447,448,540,543,567,614,661,714,715,754,755,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'arrayInt':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,437,438,439,440,441,442,443,447,448,540,543,567,614,661,714,715,754,755,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'arrayDouble':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,437,438,439,440,441,442,443,447,448,540,543,567,614,661,714,715,754,755,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'listChar':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,437,438,439,440,441,442,443,447,448,540,543,567,614,661,714,715,754,755,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'listString':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,356,406,430,437,438,439,440,441,442,443,447,448,540,543,567,614,661,714,715,754,755,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'sumIntChar':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,57,67,94,96,105,152,153,155,169,222,229,291,304,305,356,381,397,406,430,447,448,543,559,567,614,622,661,714,715,754,755,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,472,514,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'sumStringChar':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,57,67,94,96,105,152,153,155,169,222,229,291,304,305,356,384,400,406,430,447,448,543,559,567,614,622,661,714,715,754,755,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,492,523,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'sumIntDouble':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,57,67,94,96,105,152,153,155,169,222,229,291,304,305,356,383,399,406,430,447,448,543,559,567,614,622,661,714,715,754,755,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,483,519,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'sumDoubleChar':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,57,67,94,96,105,152,153,155,169,222,229,291,304,305,356,383,399,406,430,447,448,543,559,567,614,622,661,714,715,754,755,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,484,520,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'varparen':([3,106,231,264,549,623,669,677,],[59,59,59,59,59,59,59,59,]),'aritmeticos':([3,9,38,106,109,112,166,170,171,231,232,264,265,301,416,417,418,420,421,422,623,626,669,672,],[61,73,97,61,73,97,61,97,73,61,73,61,73,61,97,73,61,73,97,61,61,73,61,73,]),'io':([5,],[67,]),'elseif':([18,84,148,681,],[84,148,148,724,]),'else':([18,84,148,],[85,149,149,]),'valor':([57,58,91,92,132,195,200,243,288,323,375,377,379,394,395,559,566,622,],[107,124,161,161,124,124,124,124,161,434,124,124,124,124,124,624,631,670,]),'returnfun':([57,153,155,559,622,627,],[108,233,266,625,671,679,]),'booleanos':([57,58,91,92,94,96,132,153,155,169,195,200,219,229,243,288,291,295,300,323,347,375,377,379,386,394,395,402,559,566,622,],[113,113,113,113,167,167,113,241,274,302,113,113,354,167,113,113,167,410,413,113,354,113,113,113,497,113,113,527,113,113,113,]),'returnCastable':([57,153,155,559,622,627,],[114,114,114,114,114,114,]),'castingcall':([57,153,155,559,622,627,],[115,115,115,115,115,115,]),'valores':([58,132,195,200,243,375,377,379,394,395,],[125,202,125,324,378,125,461,463,508,509,]),'parametro':([71,],[141,]),'parametros':([71,371,],[142,454,]),'valorI':([91,92,288,],[160,162,405,]),'condicional':([94,96,229,291,],[164,180,373,407,]),'valorC':([94,96,229,291,],[165,165,165,165,]),'relacional':([94,96,169,229,291,],[168,168,303,168,168,]),'cases':([133,],[204,]),'casesInt':([133,212,],[205,327,]),'casesLgn':([133,213,],[206,330,]),'casesFlt':([133,214,],[207,333,]),'casesDob':([133,215,],[208,336,]),'casesStr':([133,216,],[209,339,]),'casesChar':([133,217,],[210,342,]),'casesBool':([133,218,],[211,345,]),'caseInt':([133,212,],[212,212,]),'caseLgn':([133,213,],[213,213,]),'caseFlt':([133,214,],[214,214,]),'caseDob':([133,215,],[215,215,]),'caseStr':([133,216,],[216,216,]),'caseChar':([133,217,],[217,217,]),'caseBool':([133,218,],[218,218,]),'dectipo':([141,],[223,]),'dectipoTupla':([141,],[224,]),'declaracion':([143,453,],[227,227,]),'tuple':([153,155,627,],[234,267,678,]),'longvalues':([153,155,380,382,383,396,398,399,],[235,268,465,479,479,511,479,479,]),'intvalues':([153,155,380,381,382,383,396,397,398,399,],[236,269,467,471,467,467,467,513,467,467,]),'floatvalues':([153,155,382,383,398,399,],[237,270,477,486,516,486,]),'doublevalues':([153,155,383,399,],[238,271,482,518,]),'stringCastLong':([153,155,380,382,383,396,398,399,],[249,249,249,249,249,249,249,249,]),'stringCastInt':([153,155,380,381,382,383,396,397,398,399,],[250,250,250,250,250,250,250,250,250,250,]),'stringCastFloat':([153,155,382,383,398,399,],[251,251,251,251,251,251,]),'stringCastDouble':([153,155,383,399,],[252,252,252,252,]),'dectupla':([154,156,],[253,277,]),'logicos':([165,],[291,]),'comparacion':([166,167,170,171,172,173,301,302,],[295,300,304,305,306,307,295,300,]),'castingfun':([196,197,],[315,320,]),'defcase':([212,213,214,215,216,217,218,],[328,331,334,337,340,343,346,]),'tipo':([225,361,372,387,403,451,452,563,758,787,],[360,450,455,498,528,564,565,628,794,823,]),'tipos':([361,],[449,]),'codeBlock':([437,438,439,440,441,442,443,540,],[541,550,551,552,553,554,555,619,]),'contenidoLine':([437,438,439,440,441,442,443,540,],[542,542,542,542,542,542,542,542,]),'tiposentry':([450,628,],[562,680,]),'valoresInt':([726,],[759,]),'valoresDouble':([727,],[761,]),'valoresChar':([748,751,],[783,788,]),'valoresString':([749,752,],[785,789,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D','inicio',5,'p_inicio','sintax.py',13),
  ('inicio -> IMPORT io inicio','inicio',3,'p_inicio','sintax.py',14),
  ('inicio -> cuerpo','inicio',1,'p_inicio','sintax.py',15),
  ('io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE','io',7,'p_io','sintax.py',20),
  ('cuerpo -> funcion','cuerpo',1,'p_cuerpo','sintax.py',23),
  ('cuerpo -> funcion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',24),
  ('cuerpo -> contenido','cuerpo',1,'p_cuerpo','sintax.py',25),
  ('cuerpo -> contenido cuerpo','cuerpo',2,'p_cuerpo','sintax.py',26),
  ('contenido -> asignacion','contenido',1,'p_contenido','sintax.py',30),
  ('contenido -> reasignacion','contenido',1,'p_contenido','sintax.py',31),
  ('contenido -> funcall','contenido',1,'p_contenido','sintax.py',32),
  ('contenido -> impresion','contenido',1,'p_contenido','sintax.py',33),
  ('contenido -> entrada','contenido',1,'p_contenido','sintax.py',34),
  ('contenido -> while','contenido',1,'p_contenido','sintax.py',35),
  ('contenido -> for','contenido',1,'p_contenido','sintax.py',36),
  ('contenido -> match','contenido',1,'p_contenido','sintax.py',37),
  ('contenido -> if','contenido',1,'p_contenido','sintax.py',38),
  ('contenido -> aritmetica','contenido',1,'p_contenido','sintax.py',39),
  ('contenido -> startsWith','contenido',1,'p_contenido','sintax.py',40),
  ('contenido -> asignacion contenido','contenido',2,'p_contenido','sintax.py',41),
  ('contenido -> reasignacion contenido','contenido',2,'p_contenido','sintax.py',42),
  ('contenido -> funcall contenido','contenido',2,'p_contenido','sintax.py',43),
  ('contenido -> impresion contenido','contenido',2,'p_contenido','sintax.py',44),
  ('contenido -> entrada contenido','contenido',2,'p_contenido','sintax.py',45),
  ('contenido -> while contenido','contenido',2,'p_contenido','sintax.py',46),
  ('contenido -> for contenido','contenido',2,'p_contenido','sintax.py',47),
  ('contenido -> if contenido','contenido',2,'p_contenido','sintax.py',48),
  ('contenido -> match contenido','contenido',2,'p_contenido','sintax.py',49),
  ('contenido -> aritmetica contenido','contenido',2,'p_contenido','sintax.py',50),
  ('contenido -> startsWith contenido','contenido',2,'p_contenido','sintax.py',51),
  ('contenidoLine -> asignacion','contenidoLine',1,'p_contenidoLine','sintax.py',55),
  ('contenidoLine -> reasignacion','contenidoLine',1,'p_contenidoLine','sintax.py',56),
  ('contenidoLine -> funcall','contenidoLine',1,'p_contenidoLine','sintax.py',57),
  ('contenidoLine -> impresion','contenidoLine',1,'p_contenidoLine','sintax.py',58),
  ('contenidoLine -> entrada','contenidoLine',1,'p_contenidoLine','sintax.py',59),
  ('asignacion -> VAR VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',63),
  ('asignacion -> VAL VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',64),
  ('asignacion -> VAR VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',65),
  ('asignacion -> VAL VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',66),
  ('asignacion -> VAR VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',67),
  ('asignacion -> VAL VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',68),
  ('asignacion -> asignacionLong','asignacion',1,'p_asignacion','sintax.py',69),
  ('asignacion -> asignacionInt','asignacion',1,'p_asignacion','sintax.py',70),
  ('asignacion -> asignacionFloat','asignacion',1,'p_asignacion','sintax.py',71),
  ('asignacion -> asignacionDouble','asignacion',1,'p_asignacion','sintax.py',72),
  ('asignacion -> asignacionString','asignacion',1,'p_asignacion','sintax.py',73),
  ('asignacion -> asignacionChar','asignacion',1,'p_asignacion','sintax.py',74),
  ('asignacion -> asignacionBoolean','asignacion',1,'p_asignacion','sintax.py',75),
  ('asignacion -> array','asignacion',1,'p_asignacion','sintax.py',76),
  ('asignacion -> list','asignacion',1,'p_asignacion','sintax.py',77),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',80),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',81),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',84),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',85),
  ('asignacionInt -> asignacionSumInt','asignacionInt',1,'p_asignacionInt','sintax.py',86),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',89),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',90),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',93),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',94),
  ('asignacionDouble -> asignacionSumDouble','asignacionDouble',1,'p_asignacionDouble','sintax.py',95),
  ('asignacionString -> VAR VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',98),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',99),
  ('asignacionString -> VAL VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',100),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',101),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',102),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',103),
  ('asignacionString -> asignacionSumString','asignacionString',1,'p_asignacionString','sintax.py',104),
  ('asignacionChar -> VAR VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',107),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',108),
  ('asignacionChar -> VAL VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',109),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',110),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',111),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',112),
  ('asignacionBoolean -> VAR VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',115),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',116),
  ('asignacionBoolean -> VAL VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',117),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',118),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',119),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',120),
  ('reasignacion -> VARIABLE IGUAL valor','reasignacion',3,'p_reasignacion','sintax.py',124),
  ('reasignacion -> VARIABLE IGUAL returnfun','reasignacion',3,'p_reasignacion','sintax.py',125),
  ('reasignacion -> VARIABLE IGUAL aritmetica','reasignacion',3,'p_reasignacion','sintax.py',126),
  ('reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor','reasignacion',6,'p_reasignacion','sintax.py',127),
  ('tipo -> CHARCLASS','tipo',1,'p_tipo','sintax.py',130),
  ('tipo -> STRINGCLASS','tipo',1,'p_tipo','sintax.py',131),
  ('tipo -> BOOLCLASS','tipo',1,'p_tipo','sintax.py',132),
  ('tipo -> INTCLASS','tipo',1,'p_tipo','sintax.py',133),
  ('tipo -> LONGCLASS','tipo',1,'p_tipo','sintax.py',134),
  ('tipo -> DOUBLECLASS','tipo',1,'p_tipo','sintax.py',135),
  ('tipo -> FLOATCLASS','tipo',1,'p_tipo','sintax.py',136),
  ('tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',137),
  ('tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',138),
  ('valor -> STRING','valor',1,'p_valor','sintax.py',141),
  ('valor -> CHAR','valor',1,'p_valor','sintax.py',142),
  ('valor -> VARIABLE','valor',1,'p_valor','sintax.py',143),
  ('valor -> numeros','valor',1,'p_valor','sintax.py',144),
  ('valor -> booleanos','valor',1,'p_valor','sintax.py',145),
  ('valor -> VARIABLE PAR_I VARIABLE PAR_D','valor',4,'p_valor','sintax.py',146),
  ('valor -> VARIABLE PAR_I INT PAR_D','valor',4,'p_valor','sintax.py',147),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintax.py',150),
  ('booleanos -> FLASE','booleanos',1,'p_booleanos','sintax.py',151),
  ('booleanos -> startsWith','booleanos',1,'p_booleanos','sintax.py',152),
  ('numeros -> INT','numeros',1,'p_numeros','sintax.py',155),
  ('numeros -> LONG','numeros',1,'p_numeros','sintax.py',156),
  ('numeros -> FLOAT','numeros',1,'p_numeros','sintax.py',157),
  ('numeros -> DOUBLE','numeros',1,'p_numeros','sintax.py',158),
  ('funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D','funcion',7,'p_funcion','sintax.py',163),
  ('funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D','funcion',6,'p_funcion','sintax.py',164),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo','declaracion',3,'p_declaracion','sintax.py',169),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor','declaracion',5,'p_declaracion_defecto','sintax.py',172),
  ('parametro -> parametros','parametro',1,'p_parametro','sintax.py',175),
  ('parametro -> PAR_I PAR_D','parametro',2,'p_parametro','sintax.py',176),
  ('parametros -> PAR_I declaracion PAR_D','parametros',3,'p_parametros','sintax.py',179),
  ('parametros -> PAR_I declaracion PAR_D parametros','parametros',4,'p_parametros','sintax.py',180),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D','funcion',10,'p_funcion_return','sintax.py',185),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_return','sintax.py',186),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_return','sintax.py',187),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D','funcion',10,'p_funcion_return','sintax.py',188),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',191),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',192),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',193),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',194),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',197),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',198),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',199),
  ('dectipo -> DOBLE_PUNTO tipo','dectipo',2,'p_dectipo','sintax.py',202),
  ('dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D','dectipoTupla',4,'p_dectipoTupla','sintax.py',205),
  ('tipos -> tipo','tipos',1,'p_tipos','sintax.py',208),
  ('tipos -> tipo tiposentry','tipos',2,'p_tipos','sintax.py',209),
  ('tiposentry -> COMA tipo','tiposentry',2,'p_tipoentry','sintax.py',212),
  ('tiposentry -> COMA tipo tiposentry','tiposentry',3,'p_tipoentry','sintax.py',213),
  ('impresion -> PRINTLN PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',218),
  ('impresion -> PRINT PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',219),
  ('valorI -> valor MAS valorI','valorI',3,'p_valorI','sintax.py',222),
  ('valorI -> valor','valorI',1,'p_valorI','sintax.py',223),
  ('entrada -> READLINE PAR_I PAR_D','entrada',3,'p_entrada','sintax.py',228),
  ('funcall -> VARIABLE varparen','funcall',2,'p_funcall','sintax.py',232),
  ('varparen -> PAR_I valores PAR_D','varparen',3,'p_varparen','sintax.py',235),
  ('varparen -> PAR_I PAR_D','varparen',2,'p_varparen','sintax.py',236),
  ('varparen -> varparen PAR_I valores PAR_D','varparen',4,'p_varparen','sintax.py',237),
  ('varparen -> varparen PAR_I PAR_D','varparen',3,'p_varparen','sintax.py',238),
  ('returnfun -> returnCastable','returnfun',1,'p_returnfun','sintax.py',241),
  ('returnfun -> castingcall','returnfun',1,'p_returnfun','sintax.py',242),
  ('returnCastable -> entrada','returnCastable',1,'p_returnCastable','sintax.py',245),
  ('returnCastable -> funcall','returnCastable',1,'p_returnCastable','sintax.py',246),
  ('castingcall -> returnCastable PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',251),
  ('castingcall -> VARIABLE PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',252),
  ('castingfun -> TO_INT','castingfun',1,'p_castingfun','sintax.py',256),
  ('castingfun -> TO_DOUBLE','castingfun',1,'p_castingfun','sintax.py',257),
  ('castingfun -> TO_FLOAT','castingfun',1,'p_castingfun','sintax.py',258),
  ('castingfun -> TO_LONG','castingfun',1,'p_castingfun','sintax.py',259),
  ('array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',264),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',265),
  ('array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',266),
  ('array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',267),
  ('array -> arrayInt','array',1,'p_array','sintax.py',268),
  ('array -> arrayDouble','array',1,'p_array','sintax.py',269),
  ('list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D','list',7,'p_list','sintax.py',273),
  ('list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D','list',7,'p_list','sintax.py',274),
  ('list -> listChar','list',1,'p_list','sintax.py',275),
  ('list -> listString','list',1,'p_list','sintax.py',276),
  ('valores -> valor','valores',1,'p_valores','sintax.py',280),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintax.py',281),
  ('tuple -> PAR_I valores PAR_D','tuple',3,'p_tuple','sintax.py',285),
  ('asignacion -> VAR VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',288),
  ('asignacion -> VAL VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',289),
  ('while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','while',7,'p_while','sintax.py',297),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',10,'p_for','sintax.py',301),
  ('for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',9,'p_for','sintax.py',302),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',303),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',304),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',305),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',306),
  ('match -> VARIABLE MATCH LLAVE_I cases LLAVE_D','match',5,'p_match','sintax.py',310),
  ('cases -> casesInt','cases',1,'p_cases','sintax.py',313),
  ('cases -> casesLgn','cases',1,'p_cases','sintax.py',314),
  ('cases -> casesFlt','cases',1,'p_cases','sintax.py',315),
  ('cases -> casesDob','cases',1,'p_cases','sintax.py',316),
  ('cases -> casesStr','cases',1,'p_cases','sintax.py',317),
  ('cases -> casesChar','cases',1,'p_cases','sintax.py',318),
  ('cases -> casesBool','cases',1,'p_cases','sintax.py',319),
  ('caseInt -> CASE INT FUNCION_FLECHA codeBlock','caseInt',4,'p_caseInt','sintax.py',322),
  ('casesInt -> caseInt','casesInt',1,'p_casesInt','sintax.py',325),
  ('casesInt -> caseInt casesInt','casesInt',2,'p_casesInt','sintax.py',326),
  ('casesInt -> caseInt defcase','casesInt',2,'p_casesInt','sintax.py',327),
  ('caseLgn -> CASE LONG FUNCION_FLECHA codeBlock','caseLgn',4,'p_caseLgn','sintax.py',330),
  ('casesLgn -> caseLgn','casesLgn',1,'p_casesLgn','sintax.py',333),
  ('casesLgn -> caseLgn casesLgn','casesLgn',2,'p_casesLgn','sintax.py',334),
  ('casesLgn -> caseLgn defcase','casesLgn',2,'p_casesLgn','sintax.py',335),
  ('caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock','caseFlt',4,'p_caseFlt','sintax.py',338),
  ('casesFlt -> caseFlt','casesFlt',1,'p_casesFlt','sintax.py',341),
  ('casesFlt -> caseFlt casesFlt','casesFlt',2,'p_casesFlt','sintax.py',342),
  ('casesFlt -> caseFlt defcase','casesFlt',2,'p_casesFlt','sintax.py',343),
  ('caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock','caseDob',4,'p_caseDob','sintax.py',346),
  ('casesDob -> caseDob','casesDob',1,'p_casesDob','sintax.py',349),
  ('casesDob -> caseDob casesDob','casesDob',2,'p_casesDob','sintax.py',350),
  ('casesDob -> caseDob defcase','casesDob',2,'p_casesDob','sintax.py',351),
  ('caseStr -> CASE STRING FUNCION_FLECHA codeBlock','caseStr',4,'p_caseStr','sintax.py',354),
  ('casesStr -> caseStr','casesStr',1,'p_casesStr','sintax.py',357),
  ('casesStr -> caseStr casesStr','casesStr',2,'p_casesStr','sintax.py',358),
  ('casesStr -> caseStr defcase','casesStr',2,'p_casesStr','sintax.py',359),
  ('caseChar -> CASE CHAR FUNCION_FLECHA codeBlock','caseChar',4,'p_caseChar','sintax.py',362),
  ('casesChar -> caseChar','casesChar',1,'p_casesChar','sintax.py',365),
  ('casesChar -> caseChar casesChar','casesChar',2,'p_casesChar','sintax.py',366),
  ('casesChar -> caseChar defcase','casesChar',2,'p_casesChar','sintax.py',367),
  ('caseBool -> CASE booleanos FUNCION_FLECHA codeBlock','caseBool',4,'p_caseBool','sintax.py',370),
  ('casesBool -> caseBool','casesBool',1,'p_casesBool','sintax.py',373),
  ('casesBool -> caseBool casesBool','casesBool',2,'p_casesBool','sintax.py',374),
  ('casesBool -> caseBool defcase','casesBool',2,'p_casesBool','sintax.py',375),
  ('defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock','defcase',4,'p_defcase','sintax.py',379),
  ('codeBlock -> contenidoLine','codeBlock',1,'p_codeBlock','sintax.py',382),
  ('codeBlock -> LLAVE_I contenido LLAVE_D','codeBlock',3,'p_codeBlock','sintax.py',383),
  ('if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','if',7,'p_if','sintax.py',387),
  ('if -> if elseif','if',2,'p_if','sintax.py',388),
  ('if -> if else','if',2,'p_if','sintax.py',389),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','elseif',8,'p_elseif','sintax.py',393),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif','elseif',9,'p_elseif','sintax.py',394),
  ('else -> ELSE LLAVE_I contenido LLAVE_D','else',4,'p_else','sintax.py',397),
  ('else -> elseif else','else',2,'p_else','sintax.py',398),
  ('condicional -> valorC logicos condicional','condicional',3,'p_condicional','sintax.py',402),
  ('condicional -> valorC','condicional',1,'p_condicional','sintax.py',403),
  ('valorC -> VARIABLE','valorC',1,'p_valorC','sintax.py',406),
  ('valorC -> booleanos','valorC',1,'p_valorC','sintax.py',407),
  ('valorC -> relacional','valorC',1,'p_valorC','sintax.py',408),
  ('valorC -> NOT VARIABLE','valorC',2,'p_valorC','sintax.py',409),
  ('valorC -> NOT booleanos','valorC',2,'p_valorC','sintax.py',410),
  ('valorC -> NOT relacional','valorC',2,'p_valorC','sintax.py',411),
  ('logicos -> AND','logicos',1,'p_logicos','sintax.py',414),
  ('logicos -> OR','logicos',1,'p_logicos','sintax.py',415),
  ('logicos -> NOT','logicos',1,'p_logicos','sintax.py',416),
  ('relacional -> numeros comparacion numeros','relacional',3,'p_relacional','sintax.py',421),
  ('relacional -> aritmetica comparacion aritmetica','relacional',3,'p_relacional','sintax.py',422),
  ('relacional -> aritmetica comparacion numeros','relacional',3,'p_relacional','sintax.py',423),
  ('relacional -> numeros comparacion aritmetica','relacional',3,'p_relacional','sintax.py',424),
  ('relacional -> booleanos comparacion booleanos','relacional',3,'p_relacional','sintax.py',425),
  ('relacional -> STRING comparacion STRING','relacional',3,'p_relacional','sintax.py',426),
  ('relacional -> CHAR comparacion CHAR','relacional',3,'p_relacional','sintax.py',427),
  ('relacional -> VARIABLE comparacion numeros','relacional',3,'p_relacional','sintax.py',428),
  ('relacional -> numeros comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',429),
  ('relacional -> VARIABLE comparacion booleanos','relacional',3,'p_relacional','sintax.py',430),
  ('relacional -> booleanos comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',431),
  ('relacional -> VARIABLE comparacion STRING','relacional',3,'p_relacional','sintax.py',432),
  ('relacional -> STRING comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',433),
  ('relacional -> VARIABLE comparacion CHAR','relacional',3,'p_relacional','sintax.py',434),
  ('relacional -> CHAR comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',435),
  ('relacional -> VARIABLE comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',436),
  ('comparacion -> IGUAL_COMPARACION','comparacion',1,'p_comparacion','sintax.py',439),
  ('comparacion -> DIFERENTE','comparacion',1,'p_comparacion','sintax.py',440),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion','sintax.py',441),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion','sintax.py',442),
  ('aritmetica -> numeros aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',446),
  ('aritmetica -> VARIABLE aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',447),
  ('aritmetica -> numeros aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',448),
  ('aritmetica -> VARIABLE aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',449),
  ('aritmetica -> aritmetica aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',450),
  ('aritmetica -> aritmetica aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',451),
  ('aritmetica -> suma','aritmetica',1,'p_aritmetica_suma','sintax.py',454),
  ('aritmetica -> VARIABLE MAS numeros','aritmetica',3,'p_aritmetica_suma','sintax.py',455),
  ('aritmetica -> numeros MAS VARIABLE','aritmetica',3,'p_aritmetica_suma','sintax.py',456),
  ('aritmetica -> VARIABLE MAS VARIABLE','aritmetica',3,'p_aritmetica_suma','sintax.py',457),
  ('aritmetica -> aritmetica MAS numeros','aritmetica',3,'p_aritmetica_suma','sintax.py',458),
  ('aritmetica -> aritmetica MAS VARIABLE','aritmetica',3,'p_aritmetica_suma','sintax.py',459),
  ('aritmetica -> INT MAS INT','aritmetica',3,'p_aritmetica_suma','sintax.py',460),
  ('aritmetica -> DOUBLE MAS DOUBLE','aritmetica',3,'p_aritmetica_suma','sintax.py',461),
  ('aritmetica -> LONG MAS LONG','aritmetica',3,'p_aritmetica_suma','sintax.py',462),
  ('aritmetica -> FLOAT MAS FLOAT','aritmetica',3,'p_aritmetica_suma','sintax.py',463),
  ('aritmeticos -> MENOS','aritmeticos',1,'p_aritmeticos','sintax.py',468),
  ('aritmeticos -> MULTIPLICACION','aritmeticos',1,'p_aritmeticos','sintax.py',469),
  ('aritmeticos -> DIVISION','aritmeticos',1,'p_aritmeticos','sintax.py',470),
  ('aritmeticos -> MOD','aritmeticos',1,'p_aritmeticos','sintax.py',471),
  ('arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D','arrayInt',12,'p_arrayInt','sintax.py',476),
  ('arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D','arrayDouble',12,'p_arrayDouble','sintax.py',479),
  ('valoresInt -> INT','valoresInt',1,'p_valoresInt','sintax.py',482),
  ('valoresInt -> valoresInt COMA INT','valoresInt',3,'p_valoresInt','sintax.py',483),
  ('valoresDouble -> DOUBLE','valoresDouble',1,'p_valoresDouble','sintax.py',486),
  ('valoresDouble -> valoresDouble COMA DOUBLE','valoresDouble',3,'p_valoresDouble','sintax.py',487),
  ('startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D','startsWith',6,'p_startsWith','sintax.py',491),
  ('startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D','startsWith',8,'p_startsWith','sintax.py',492),
  ('listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D','listString',12,'p_listString','sintax.py',506),
  ('listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D','listString',12,'p_listString','sintax.py',507),
  ('listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D','listChar',12,'p_listChar','sintax.py',510),
  ('listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D','listChar',12,'p_listChar','sintax.py',511),
  ('valoresString -> STRING','valoresString',1,'p_valoresString','sintax.py',514),
  ('valoresString -> valoresString COMA STRING','valoresString',3,'p_valoresString','sintax.py',515),
  ('valoresChar -> CHAR','valoresChar',1,'p_valoresChar','sintax.py',518),
  ('valoresChar -> valoresChar COMA CHAR','valoresChar',3,'p_valoresChar','sintax.py',519),
  ('suma -> sumIntChar','suma',1,'p_suma','sintax.py',523),
  ('suma -> sumStringChar','suma',1,'p_suma','sintax.py',524),
  ('suma -> sumIntDouble','suma',1,'p_suma','sintax.py',525),
  ('suma -> sumDoubleChar','suma',1,'p_suma','sintax.py',526),
  ('sumIntDouble -> INT MAS DOUBLE','sumIntDouble',3,'p_sumIntDouble','sintax.py',529),
  ('sumIntDouble -> DOUBLE MAS INT','sumIntDouble',3,'p_sumIntDouble','sintax.py',530),
  ('sumDoubleChar -> DOUBLE MAS CHAR','sumDoubleChar',3,'p_sumDoubleChar','sintax.py',535),
  ('sumDoubleChar -> CHAR MAS DOUBLE','sumDoubleChar',3,'p_sumDoubleChar','sintax.py',536),
  ('sumIntChar -> INT MAS CHAR','sumIntChar',3,'p_sumIntChar','sintax.py',544),
  ('sumIntChar -> CHAR MAS INT','sumIntChar',3,'p_sumIntChar','sintax.py',545),
  ('sumStringChar -> STRING MAS CHAR','sumStringChar',3,'p_sumStringChar','sintax.py',553),
  ('sumStringChar -> CHAR MAS STRING','sumStringChar',3,'p_sumStringChar','sintax.py',554),
  ('asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble','asignacionSumDouble',6,'p_asignacionSumDouble','sintax.py',559),
  ('asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble','asignacionSumDouble',6,'p_asignacionSumDouble','sintax.py',560),
  ('asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar','asignacionSumDouble',6,'p_asignacionSumDouble','sintax.py',561),
  ('asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar','asignacionSumDouble',6,'p_asignacionSumDouble','sintax.py',562),
  ('asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar','asignacionSumString',6,'p_asignacionSumString','sintax.py',565),
  ('asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar','asignacionSumString',6,'p_asignacionSumString','sintax.py',566),
  ('asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar','asignacionSumInt',6,'p_asignacionSumInt','sintax.py',569),
  ('asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar','asignacionSumInt',6,'p_asignacionSumInt','sintax.py',570),
  ('asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla','asignacion',4,'p_asignacion_tupla','sintax.py',574),
  ('asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla','asignacion',4,'p_asignacion_tupla','sintax.py',575),
  ('dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',578),
  ('dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',579),
  ('dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',580),
  ('dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',581),
  ('dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',584),
  ('dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',585),
  ('dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',586),
  ('dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',587),
  ('dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',590),
  ('dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',591),
  ('dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',592),
  ('dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',593),
  ('dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',596),
  ('dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',597),
  ('dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',598),
  ('dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',599),
  ('dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',602),
  ('dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',603),
  ('dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',604),
  ('dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',605),
  ('asignacionInt -> VAR VARIABLE IGUAL intvalues','asignacionInt',4,'p_asignacionInt_cast','sintax.py',610),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues','asignacionInt',6,'p_asignacionInt_cast','sintax.py',611),
  ('asignacionInt -> VAL VARIABLE IGUAL intvalues','asignacionInt',4,'p_asignacionInt_cast','sintax.py',612),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues','asignacionInt',6,'p_asignacionInt_cast','sintax.py',613),
  ('intvalues -> INT','intvalues',1,'p_intvalues','sintax.py',616),
  ('intvalues -> stringCastInt','intvalues',1,'p_intvalues','sintax.py',617),
  ('asignacionLong -> VAR VARIABLE IGUAL longvalues','asignacionLong',4,'p_asignacionLong_cast','sintax.py',620),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues','asignacionLong',6,'p_asignacionLong_cast','sintax.py',621),
  ('asignacionLong -> VAL VARIABLE IGUAL longvalues','asignacionLong',4,'p_asignacionLong_cast','sintax.py',622),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues','asignacionLong',6,'p_asignacionLong_cast','sintax.py',623),
  ('longvalues -> LONG','longvalues',1,'p_longvalues','sintax.py',626),
  ('longvalues -> intvalues','longvalues',1,'p_longvalues','sintax.py',627),
  ('longvalues -> stringCastLong','longvalues',1,'p_longvalues','sintax.py',628),
  ('asignacionFloat -> VAR VARIABLE IGUAL floatvalues','asignacionFloat',4,'p_asignacionFloat_cast','sintax.py',631),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues','asignacionFloat',6,'p_asignacionFloat_cast','sintax.py',632),
  ('asignacionFloat -> VAL VARIABLE IGUAL floatvalues','asignacionFloat',4,'p_asignacionFloat_cast','sintax.py',633),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues','asignacionFloat',6,'p_asignacionFloat_cast','sintax.py',634),
  ('floatvalues -> FLOAT','floatvalues',1,'p_floatvalues','sintax.py',637),
  ('floatvalues -> longvalues','floatvalues',1,'p_floatvalues','sintax.py',638),
  ('floatvalues -> stringCastFloat','floatvalues',1,'p_floatvalues','sintax.py',639),
  ('asignacionDouble -> VAR VARIABLE IGUAL doublevalues','asignacionDouble',4,'p_asignacionDouble_cast','sintax.py',642),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues','asignacionDouble',6,'p_asignacionDouble_cast','sintax.py',643),
  ('asignacionDouble -> VAL VARIABLE IGUAL doublevalues','asignacionDouble',4,'p_asignacionDouble_cast','sintax.py',644),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues','asignacionDouble',6,'p_asignacionDouble_cast','sintax.py',645),
  ('doublevalues -> DOUBLE','doublevalues',1,'p_doublevalues','sintax.py',648),
  ('doublevalues -> floatvalues','doublevalues',1,'p_doublevalues','sintax.py',649),
  ('doublevalues -> stringCastDouble','doublevalues',1,'p_doublevalues','sintax.py',650),
  ('stringCastInt -> STRING PUNTO TO_INT','stringCastInt',3,'p_stringCastInt','sintax.py',659),
  ('stringCastLong -> STRING PUNTO TO_LONG','stringCastLong',3,'p_stringCastLong','sintax.py',675),
  ('stringCastFloat -> STRING PUNTO TO_FLOAT','stringCastFloat',3,'p_stringCastFloat','sintax.py',691),
  ('stringCastDouble -> STRING PUNTO TO_DOUBLE','stringCastDouble',3,'p_stringCastDouble','sintax.py',708),
]

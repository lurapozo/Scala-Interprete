
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARRAYCLASS ARROBA BACKTICK BOOLCLASS CASE CATCH CHAR CHARCLASS CLASS COMA CORCHETE_D CORCHETE_I DEF DIFERENTE DIVISION DO DOBLE_PUNTO DOUBLE DOUBLECLASS ELSE EXTENDS FINAL FINALLY FLASE FLOAT FLOATCLASS FOR FOR_SOME FUNCION_FLECHA HASHTAG IF IGUAL IGUAL_COMPARACION IMPLICIT IMPORT INT INTCLASS ITERATOR LAZY LIBRERIA_IO LISTCLASS LLAVE_D LLAVE_I LONG LONGCLASS MACRO MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MOD MULTIPLICACION NEW NOT NULL OBJECT OR OVERRIDE PACKAGE PAR_D PAR_I PRINT PRINTLN PRIVATE PROTECTED PUNTO READLINE RETURN REVERSE SEALED STRING STRINGCLASS SUBGUION SUPER THIS THROW TO TO_DOUBLE TO_FLOAT TO_INT TO_LONG TRAIT TRUE TRY TYPE UNTIL VAL VAR VARIABLE WHILE WITH YIELDcuerpo : funcion\n  | funcall\n  | impresion\n  | entrada\n  | asignacion\n  | while\n  | for\n  | match\n  | if\n  | funcion cuerpo\n  | asignacion cuerpo\n  | while cuerpo\n  | for cuerpo\n  | if cuerpo\n  | match cuerpocontenido : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entrada\n  | while\n  | for\n  | match\n  | if\n  | aritmetica\n  | asignacion contenido\n  | reasignacion contenido\n  | funcall contenido\n  | impresion contenido\n  | entrada contenido\n  | while contenido\n  | for contenido\n  | if contenido\n  | match contenido\n  | aritmetica contenidocontenidoLine : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entradaasignacion : VAR VARIABLE IGUAL VARIABLE\n  | VAL VARIABLE IGUAL VARIABLE\n  | VAR VARIABLE IGUAL aritmetica\n  | VAL VARIABLE IGUAL aritmetica\n  | VAR VARIABLE IGUAL returnfun\n  | VAL VARIABLE IGUAL returnfun\n  | asignacionLong\n  | asignacionInt\n  | asignacionFloat\n  | asignacionDouble\n  | asignacionString\n  | asignacionChar\n  | asignacionBoolean\n  | array\n  | listasignacionLong : VAR VARIABLE IGUAL LONG\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG\n  | VAL VARIABLE IGUAL LONG\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLEasignacionInt : VAR VARIABLE IGUAL INT\n  | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT\n  | VAL VARIABLE IGUAL INT\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT\n  | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLEasignacionFloat : VAR VARIABLE IGUAL FLOAT\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT\n  | VAL VARIABLE IGUAL FLOAT\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLEasignacionDouble : VAR VARIABLE IGUAL DOUBLE\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE\n  | VAL VARIABLE IGUAL DOUBLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLEasignacionString : VAR VARIABLE IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAL VARIABLE IGUAL STRING\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLEasignacionChar : VAR VARIABLE IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAL VARIABLE IGUAL CHAR\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLEasignacionBoolean : VAR VARIABLE IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAL VARIABLE IGUAL booleanos\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLEreasignacion :  VARIABLE IGUAL valor\n      | VARIABLE IGUAL returnfun\n      | VARIABLE IGUAL aritmetica\n      | VARIABLE PAR_I INT PAR_D IGUAL valortipo : CHARCLASS\n  | STRINGCLASS\n  | BOOLCLASS\n  | INTCLASS\n  | LONGCLASS\n  | DOUBLECLASS\n  | FLOATCLASSvalor : STRING\n  | CHAR\n  | VARIABLE\n  | numeros\n  | booleanosbooleanos : TRUE\n  | FLASEnumeros : INT\n  | LONG\n  | FLOAT\n  | DOUBLEfuncion : DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D\n  | DEF VARIABLE parametro LLAVE_I contenido LLAVE_Ddeclaracion : VARIABLE DOBLE_PUNTO tipodeclaracion :  VARIABLE DOBLE_PUNTO tipo IGUAL valor parametro : parametros\n  | PAR_I PAR_D parametros : PAR_I declaracion PAR_D \n    | PAR_I declaracion PAR_D parametrosfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D\n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D \n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_Ddectipo : DOBLE_PUNTO tipo dectipoTupla : DOBLE_PUNTO PAR_I tipos PAR_Dtipos : tipo\n    | tipo tiposentrytiposentry : COMA tipo \n  | COMA tipo tiposentryimpresion : PRINTLN PAR_I valorI PAR_D\n  | PRINT PAR_I valorI PAR_DvalorI : valor MAS valorI\n  | valorentrada : READLINE PAR_I PAR_Dfuncall : VARIABLE PAR_I valores PAR_D\n    | VARIABLE PAR_I  PAR_D returnfun : returnCastable\n      | castingcallreturnCastable : entrada\n      | funcallcastingcall : returnCastable PUNTO castingfun\n      | VARIABLE PUNTO castingfuncastingfun : TO_INT\n    | TO_DOUBLE\n    | TO_FLOAT\n    | TO_LONGarray : VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_Dlist : VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_Dvalores : valor\n  | valor COMA valorestuple : PAR_I valores PAR_Dasignacion : VAR VARIABLE IGUAL tuple \n      | VAL VARIABLE IGUAL tupleasignacion : VAR VARIABLE dectipoTupla IGUAL tuple \n      | VAL VARIABLE dectipoTupla IGUAL tuplewhile : WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_Dfor : FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_Dmatch : VARIABLE MATCH  LLAVE_I cases LLAVE_Dcases : casesInt\n    | casesLgn\n    | casesFlt\n    | casesDob\n    | casesStr\n    | casesChar\n    | casesBoolcaseInt : CASE INT FUNCION_FLECHA codeBlock casesInt : caseInt \n      | caseInt casesInt\n      | caseInt defcasecaseLgn : CASE LONG FUNCION_FLECHA codeBlock casesLgn : caseLgn \n      | caseLgn casesLgn\n      | caseLgn defcasecaseFlt : CASE FLOAT FUNCION_FLECHA codeBlock casesFlt : caseFlt \n      | caseFlt casesFlt\n      | caseFlt defcasecaseDob : CASE DOUBLE FUNCION_FLECHA codeBlock casesDob : caseDob \n      | caseDob casesDob\n      | caseDob defcasecaseStr : CASE STRING FUNCION_FLECHA codeBlock casesStr : caseStr\n      | caseStr casesStr\n      | caseStr defcasecaseChar : CASE CHAR FUNCION_FLECHA codeBlock casesChar : caseChar\n      | caseChar casesChar\n      | caseChar defcasecaseBool : CASE booleanos FUNCION_FLECHA codeBlock casesBool : caseBool\n      | caseBool casesBool\n      | caseBool defcasedefcase : CASE SUBGUION FUNCION_FLECHA codeBlock codeBlock : contenidoLine\n      | LLAVE_I contenido LLAVE_Dif : IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | if elseif\n  | if else\n  elseif : ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseifelse : ELSE LLAVE_I contenido LLAVE_D\n  | elseif elsecondicional : valorC logicos condicional\n  | valorCvalorC : VARIABLE\n  | booleanos\n  | relacional\n  | NOT VARIABLE\n  | NOT booleanos\n  | NOT relacional\n  logicos : AND\n  | OR\n  | NOTrelacional : numeros comparacion numeros\n  | aritmetica comparacion aritmetica\n  | aritmetica comparacion numeros\n  | numeros comparacion aritmetica\n  | booleanos comparacion booleanos\n  | STRING comparacion STRING\n  | CHAR comparacion CHAR\n  | VARIABLE comparacion numeros\n  | numeros comparacion VARIABLE\n  | VARIABLE comparacion booleanos\n  | booleanos comparacion VARIABLE\n  | VARIABLE comparacion STRING\n  | STRING comparacion VARIABLE\n  | VARIABLE comparacion CHAR\n  | CHAR comparacion VARIABLE\n  | VARIABLE comparacion VARIABLEcomparacion : IGUAL_COMPARACION\n  | DIFERENTE\n  | MAYOR\n  | MENORaritmetica : numeros aritmeticos numeros\n  | VARIABLE aritmeticos numeros\n  | numeros aritmeticos VARIABLE\n  | VARIABLE aritmeticos VARIABLE\n  | aritmetica aritmeticos numeros\n  | aritmetica aritmeticos VARIABLEaritmeticos : MENOS\n  | MAS\n  | MULTIPLICACION\n  | DIVISION\n  | MOD'
    
_lr_action_items = {'DEF':([0,2,6,7,8,9,10,18,19,20,21,22,23,24,25,26,36,37,51,60,66,67,68,69,70,71,76,118,139,140,141,142,143,144,145,146,147,148,149,152,153,154,155,166,167,168,169,170,171,172,173,174,175,176,219,247,281,294,311,312,318,319,323,324,341,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,383,384,385,386,387,388,389,390,391,392,393,394,395,396,408,428,431,432,435,442,460,478,482,483,484,485,486,487,488,495,508,509,510,512,514,516,517,520,525,526,],[11,11,11,11,11,11,11,-47,-48,-49,-50,-51,-52,-53,-54,-55,-220,-221,-225,-146,-116,-117,-118,-119,-114,-115,-144,-145,-41,-43,-45,-169,-56,-62,-68,-74,-80,-86,-92,-147,-148,-149,-150,-42,-44,-46,-170,-58,-64,-70,-76,-82,-88,-94,-224,-180,-171,-172,-260,-258,-257,-259,-261,-262,-121,-152,-153,-154,-155,-156,-168,-151,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,-120,-157,-160,-163,-173,-219,-222,-175,-223,-129,-128,-130,-132,-131,-133,-174,-176,-177,-158,-161,-165,-178,-179,-164,-159,-162,]),'VARIABLE':([0,2,6,7,8,9,10,11,16,17,18,19,20,21,22,23,24,25,26,36,37,40,42,43,47,48,49,51,54,57,58,60,62,63,64,65,66,67,68,69,70,71,76,77,80,88,93,96,98,99,100,101,102,103,104,105,106,107,111,118,119,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,166,167,168,169,170,171,172,173,174,175,176,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,209,210,211,212,213,214,216,219,230,231,232,247,278,281,282,283,284,285,286,287,288,292,293,294,295,296,297,298,299,300,301,304,311,312,318,319,323,324,329,332,334,335,336,337,338,341,342,343,344,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,383,384,385,386,387,388,389,390,391,392,393,394,395,396,406,408,411,412,415,428,431,432,435,439,442,444,445,446,454,460,461,478,479,480,482,483,484,485,486,487,488,489,491,493,495,496,497,505,508,509,510,512,514,516,517,520,525,526,],[12,12,12,12,12,12,12,39,45,46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-220,-221,58,58,58,85,94,85,-225,108,117,-111,-146,-109,-110,-112,-113,-116,-117,-118,-119,-114,-115,-144,139,166,206,215,85,108,108,108,108,108,108,108,108,108,108,108,-145,58,-140,58,-141,-41,-43,-45,-169,-56,-62,-68,-74,-80,-86,-92,58,-147,-148,-149,-150,-42,-44,-46,-170,-58,-64,-70,-76,-82,-88,-94,85,-234,-235,-236,306,311,-253,-254,-255,-256,-263,-264,-265,-266,-267,314,317,319,322,324,326,328,330,-224,334,58,108,-180,58,-171,363,365,367,369,371,373,375,58,58,-172,383,385,387,389,391,393,395,108,-260,-258,-257,-259,-261,-262,400,108,-111,-98,-99,-100,-112,-121,108,108,117,421,421,421,421,421,421,421,-152,-153,-154,-155,-156,-168,-151,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,108,-120,58,421,108,-157,-160,-163,-173,108,-219,58,462,465,108,-222,-101,-175,108,108,-223,-129,-128,-130,-132,-131,-133,58,58,58,-174,108,108,58,-176,-177,-158,-161,-165,-178,-179,-164,-159,-162,]),'PRINTLN':([0,2,6,7,8,9,10,18,19,20,21,22,23,24,25,26,36,37,51,54,58,60,62,63,64,65,66,67,68,69,70,71,76,98,99,100,101,102,103,104,105,106,107,111,118,136,138,139,140,141,142,143,144,145,146,147,148,149,152,153,154,155,166,167,168,169,170,171,172,173,174,175,176,219,232,247,281,294,304,311,312,318,319,323,324,332,334,335,336,337,338,341,342,343,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,383,384,385,386,387,388,389,390,391,392,393,394,395,396,406,408,412,415,428,431,432,435,439,442,454,460,461,478,479,480,482,483,484,485,486,487,488,495,496,497,508,509,510,512,514,516,517,520,525,526,],[13,13,13,13,13,13,13,-47,-48,-49,-50,-51,-52,-53,-54,-55,-220,-221,-225,13,-111,-146,-109,-110,-112,-113,-116,-117,-118,-119,-114,-115,-144,13,13,13,13,13,13,13,13,13,13,13,-145,-140,-141,-41,-43,-45,-169,-56,-62,-68,-74,-80,-86,-92,-147,-148,-149,-150,-42,-44,-46,-170,-58,-64,-70,-76,-82,-88,-94,-224,13,-180,-171,-172,13,-260,-258,-257,-259,-261,-262,13,-111,-98,-99,-100,-112,-121,13,13,13,13,13,13,13,13,13,-152,-153,-154,-155,-156,-168,-151,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,13,-120,13,13,-157,-160,-163,-173,13,-219,13,-222,-101,-175,13,13,-223,-129,-128,-130,-132,-131,-133,-174,13,13,-176,-177,-158,-161,-165,-178,-179,-164,-159,-162,]),'PRINT':([0,2,6,7,8,9,10,18,19,20,21,22,23,24,25,26,36,37,51,54,58,60,62,63,64,65,66,67,68,69,70,71,76,98,99,100,101,102,103,104,105,106,107,111,118,136,138,139,140,141,142,143,144,145,146,147,148,149,152,153,154,155,166,167,168,169,170,171,172,173,174,175,176,219,232,247,281,294,304,311,312,318,319,323,324,332,334,335,336,337,338,341,342,343,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,383,384,385,386,387,388,389,390,391,392,393,394,395,396,406,408,412,415,428,431,432,435,439,442,454,460,461,478,479,480,482,483,484,485,486,487,488,495,496,497,508,509,510,512,514,516,517,520,525,526,],[14,14,14,14,14,14,14,-47,-48,-49,-50,-51,-52,-53,-54,-55,-220,-221,-225,14,-111,-146,-109,-110,-112,-113,-116,-117,-118,-119,-114,-115,-144,14,14,14,14,14,14,14,14,14,14,14,-145,-140,-141,-41,-43,-45,-169,-56,-62,-68,-74,-80,-86,-92,-147,-148,-149,-150,-42,-44,-46,-170,-58,-64,-70,-76,-82,-88,-94,-224,14,-180,-171,-172,14,-260,-258,-257,-259,-261,-262,14,-111,-98,-99,-100,-112,-121,14,14,14,14,14,14,14,14,14,-152,-153,-154,-155,-156,-168,-151,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,14,-120,14,14,-157,-160,-163,-173,14,-219,14,-222,-101,-175,14,14,-223,-129,-128,-130,-132,-131,-133,-174,14,14,-176,-177,-158,-161,-165,-178,-179,-164,-159,-162,]),'READLINE':([0,2,6,7,8,9,10,18,19,20,21,22,23,24,25,26,36,37,51,54,58,60,62,63,64,65,66,67,68,69,70,71,76,77,80,98,99,100,101,102,103,104,105,106,107,111,118,136,138,139,140,141,142,143,144,145,146,147,148,149,152,153,154,155,166,167,168,169,170,171,172,173,174,175,176,219,230,232,247,281,294,304,311,312,318,319,323,324,332,334,335,336,337,338,341,342,343,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,383,384,385,386,387,388,389,390,391,392,393,394,395,396,406,408,412,415,428,431,432,435,439,442,445,446,454,460,461,478,479,480,482,483,484,485,486,487,488,495,496,497,508,509,510,512,514,516,517,520,525,526,],[15,15,15,15,15,15,15,-47,-48,-49,-50,-51,-52,-53,-54,-55,-220,-221,-225,15,-111,-146,-109,-110,-112,-113,-116,-117,-118,-119,-114,-115,-144,15,15,15,15,15,15,15,15,15,15,15,15,15,-145,-140,-141,-41,-43,-45,-169,-56,-62,-68,-74,-80,-86,-92,-147,-148,-149,-150,-42,-44,-46,-170,-58,-64,-70,-76,-82,-88,-94,-224,15,15,-180,-171,-172,15,-260,-258,-257,-259,-261,-262,15,-111,-98,-99,-100,-112,-121,15,15,15,15,15,15,15,15,15,-152,-153,-154,-155,-156,-168,-151,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,15,-120,15,15,-157,-160,-163,-173,15,-219,15,15,15,-222,-101,-175,15,15,-223,-129,-128,-130,-132,-131,-133,-174,15,15,-176,-177,-158,-161,-165,-178,-179,-164,-159,-162,]),'VAR':([0,2,6,7,8,9,10,18,19,20,21,22,23,24,25,26,36,37,48,51,54,58,60,62,63,64,65,66,67,68,69,70,71,76,98,99,100,101,102,103,104,105,106,107,111,118,136,138,139,140,141,142,143,144,145,146,147,148,149,152,153,154,155,166,167,168,169,170,171,172,173,174,175,176,219,232,247,281,294,304,311,312,318,319,323,324,332,334,335,336,337,338,341,342,343,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,383,384,385,386,387,388,389,390,391,392,393,394,395,396,406,408,412,415,428,431,432,435,439,442,454,460,461,478,479,480,482,483,484,485,486,487,488,495,496,497,508,509,510,512,514,516,517,520,525,526,],[16,16,16,16,16,16,16,-47,-48,-49,-50,-51,-52,-53,-54,-55,-220,-221,93,-225,16,-111,-146,-109,-110,-112,-113,-116,-117,-118,-119,-114,-115,-144,16,16,16,16,16,16,16,16,16,16,16,-145,-140,-141,-41,-43,-45,-169,-56,-62,-68,-74,-80,-86,-92,-147,-148,-149,-150,-42,-44,-46,-170,-58,-64,-70,-76,-82,-88,-94,-224,16,-180,-171,-172,16,-260,-258,-257,-259,-261,-262,16,-111,-98,-99,-100,-112,-121,16,16,16,16,16,16,16,16,16,-152,-153,-154,-155,-156,-168,-151,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,16,-120,16,16,-157,-160,-163,-173,16,-219,16,-222,-101,-175,16,16,-223,-129,-128,-130,-132,-131,-133,-174,16,16,-176,-177,-158,-161,-165,-178,-179,-164,-159,-162,]),'VAL':([0,2,6,7,8,9,10,18,19,20,21,22,23,24,25,26,36,37,51,54,58,60,62,63,64,65,66,67,68,69,70,71,76,98,99,100,101,102,103,104,105,106,107,111,118,136,138,139,140,141,142,143,144,145,146,147,148,149,152,153,154,155,166,167,168,169,170,171,172,173,174,175,176,219,232,247,281,294,304,311,312,318,319,323,324,332,334,335,336,337,338,341,342,343,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,383,384,385,386,387,388,389,390,391,392,393,394,395,396,406,408,412,415,428,431,432,435,439,442,454,460,461,478,479,480,482,483,484,485,486,487,488,495,496,497,508,509,510,512,514,516,517,520,525,526,],[17,17,17,17,17,17,17,-47,-48,-49,-50,-51,-52,-53,-54,-55,-220,-221,-225,17,-111,-146,-109,-110,-112,-113,-116,-117,-118,-119,-114,-115,-144,17,17,17,17,17,17,17,17,17,17,17,-145,-140,-141,-41,-43,-45,-169,-56,-62,-68,-74,-80,-86,-92,-147,-148,-149,-150,-42,-44,-46,-170,-58,-64,-70,-76,-82,-88,-94,-224,17,-180,-171,-172,17,-260,-258,-257,-259,-261,-262,17,-111,-98,-99,-100,-112,-121,17,17,17,17,17,17,17,17,17,-152,-153,-154,-155,-156,-168,-151,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,17,-120,17,17,-157,-160,-163,-173,17,-219,17,-222,-101,-175,17,17,-223,-129,-128,-130,-132,-131,-133,-174,17,17,-176,-177,-158,-161,-165,-178,-179,-164,-159,-162,]),'WHILE':([0,2,6,7,8,9,10,18,19,20,21,22,23,24,25,26,36,37,51,54,58,60,62,63,64,65,66,67,68,69,70,71,76,98,99,100,101,102,103,104,105,106,107,111,118,136,138,139,140,141,142,143,144,145,146,147,148,149,152,153,154,155,166,167,168,169,170,171,172,173,174,175,176,219,232,247,281,294,304,311,312,318,319,323,324,332,334,335,336,337,338,341,342,343,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,383,384,385,386,387,388,389,390,391,392,393,394,395,396,406,408,415,428,431,432,435,439,442,454,460,461,478,479,480,482,483,484,485,486,487,488,495,496,497,508,509,510,512,514,516,517,520,525,526,],[27,27,27,27,27,27,27,-47,-48,-49,-50,-51,-52,-53,-54,-55,-220,-221,-225,27,-111,-146,-109,-110,-112,-113,-116,-117,-118,-119,-114,-115,-144,27,27,27,27,27,27,27,27,27,27,27,-145,-140,-141,-41,-43,-45,-169,-56,-62,-68,-74,-80,-86,-92,-147,-148,-149,-150,-42,-44,-46,-170,-58,-64,-70,-76,-82,-88,-94,-224,27,-180,-171,-172,27,-260,-258,-257,-259,-261,-262,27,-111,-98,-99,-100,-112,-121,27,27,-152,-153,-154,-155,-156,-168,-151,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,27,-120,27,-157,-160,-163,-173,27,-219,27,-222,-101,-175,27,27,-223,-129,-128,-130,-132,-131,-133,-174,27,27,-176,-177,-158,-161,-165,-178,-179,-164,-159,-162,]),'FOR':([0,2,6,7,8,9,10,18,19,20,21,22,23,24,25,26,36,37,51,54,58,60,62,63,64,65,66,67,68,69,70,71,76,98,99,100,101,102,103,104,105,106,107,111,118,136,138,139,140,141,142,143,144,145,146,147,148,149,152,153,154,155,166,167,168,169,170,171,172,173,174,175,176,219,232,247,281,294,304,311,312,318,319,323,324,332,334,335,336,337,338,341,342,343,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,383,384,385,386,387,388,389,390,391,392,393,394,395,396,406,408,415,428,431,432,435,439,442,454,460,461,478,479,480,482,483,484,485,486,487,488,495,496,497,508,509,510,512,514,516,517,520,525,526,],[28,28,28,28,28,28,28,-47,-48,-49,-50,-51,-52,-53,-54,-55,-220,-221,-225,28,-111,-146,-109,-110,-112,-113,-116,-117,-118,-119,-114,-115,-144,28,28,28,28,28,28,28,28,28,28,28,-145,-140,-141,-41,-43,-45,-169,-56,-62,-68,-74,-80,-86,-92,-147,-148,-149,-150,-42,-44,-46,-170,-58,-64,-70,-76,-82,-88,-94,-224,28,-180,-171,-172,28,-260,-258,-257,-259,-261,-262,28,-111,-98,-99,-100,-112,-121,28,28,-152,-153,-154,-155,-156,-168,-151,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,28,-120,28,-157,-160,-163,-173,28,-219,28,-222,-101,-175,28,28,-223,-129,-128,-130,-132,-131,-133,-174,28,28,-176,-177,-158,-161,-165,-178,-179,-164,-159,-162,]),'IF':([0,2,6,7,8,9,10,18,19,20,21,22,23,24,25,26,36,37,38,51,52,54,58,60,62,63,64,65,66,67,68,69,70,71,76,98,99,100,101,102,103,104,105,106,107,111,118,136,138,139,140,141,142,143,144,145,146,147,148,149,152,153,154,155,166,167,168,169,170,171,172,173,174,175,176,219,232,247,281,294,304,311,312,318,319,323,324,332,334,335,336,337,338,341,342,343,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,383,384,385,386,387,388,389,390,391,392,393,394,395,396,406,408,415,428,431,432,435,439,442,454,460,461,478,479,480,481,482,483,484,485,486,487,488,495,496,497,508,509,510,512,514,516,517,520,525,526,],[29,29,29,29,29,29,29,-47,-48,-49,-50,-51,-52,-53,-54,-55,-220,-221,53,-225,53,29,-111,-146,-109,-110,-112,-113,-116,-117,-118,-119,-114,-115,-144,29,29,29,29,29,29,29,29,29,29,29,-145,-140,-141,-41,-43,-45,-169,-56,-62,-68,-74,-80,-86,-92,-147,-148,-149,-150,-42,-44,-46,-170,-58,-64,-70,-76,-82,-88,-94,-224,29,-180,-171,-172,29,-260,-258,-257,-259,-261,-262,29,-111,-98,-99,-100,-112,-121,29,29,-152,-153,-154,-155,-156,-168,-151,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,29,-120,29,-157,-160,-163,-173,29,-219,29,-222,-101,-175,29,29,53,-223,-129,-128,-130,-132,-131,-133,-174,29,29,-176,-177,-158,-161,-165,-178,-179,-164,-159,-162,]),'$end':([1,2,3,4,5,6,7,8,9,10,18,19,20,21,22,23,24,25,26,30,31,32,33,34,35,36,37,51,60,66,67,68,69,70,71,76,118,136,138,139,140,141,142,143,144,145,146,147,148,149,152,153,154,155,166,167,168,169,170,171,172,173,174,175,176,219,247,281,294,311,312,318,319,323,324,341,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,383,384,385,386,387,388,389,390,391,392,393,394,395,396,408,428,431,432,435,442,460,478,482,483,484,485,486,487,488,495,508,509,510,512,514,516,517,520,525,526,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-47,-48,-49,-50,-51,-52,-53,-54,-55,-10,-11,-12,-13,-15,-14,-220,-221,-225,-146,-116,-117,-118,-119,-114,-115,-144,-145,-140,-141,-41,-43,-45,-169,-56,-62,-68,-74,-80,-86,-92,-147,-148,-149,-150,-42,-44,-46,-170,-58,-64,-70,-76,-82,-88,-94,-224,-180,-171,-172,-260,-258,-257,-259,-261,-262,-121,-152,-153,-154,-155,-156,-168,-151,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,-120,-157,-160,-163,-173,-219,-222,-175,-223,-129,-128,-130,-132,-131,-133,-174,-176,-177,-158,-161,-165,-178,-179,-164,-159,-162,]),'ELSE':([10,36,37,50,51,106,219,442,460,482,],[38,52,-221,52,-225,38,-224,-219,481,-223,]),'PAR_I':([12,13,14,15,27,28,29,39,53,77,79,80,82,108,114,139,150,156,166,177,178,179,244,334,421,446,462,465,469,471,473,494,518,519,],[40,42,43,44,47,48,49,57,96,151,165,151,165,231,165,40,278,151,40,292,293,151,344,40,231,151,40,40,489,491,493,505,521,522,]),'MATCH':([12,108,],[41,41,]),'INT':([18,19,20,21,22,23,24,25,26,36,37,40,42,43,47,49,51,54,58,60,62,63,64,65,66,67,68,69,70,71,76,77,80,88,96,98,99,100,101,102,103,104,105,106,107,111,118,119,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,166,167,168,169,170,171,172,173,174,175,176,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,209,210,211,212,216,219,230,231,232,247,250,278,281,283,292,293,294,296,304,311,312,318,319,323,324,329,332,334,335,336,337,338,342,343,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,383,384,385,386,387,388,389,390,391,392,393,394,395,396,403,404,406,411,415,428,431,432,435,437,438,439,442,444,445,454,460,461,478,479,480,482,489,491,493,495,496,497,505,508,509,510,512,514,516,517,520,521,522,525,526,],[-47,-48,-49,-50,-51,-52,-53,-54,-55,-220,-221,66,66,66,66,66,-225,66,-111,-146,-109,-110,-112,-113,-116,-117,-118,-119,-114,-115,-144,144,171,66,66,66,66,66,66,66,66,66,66,66,66,66,-145,66,269,-140,66,-141,-41,-43,-45,-169,-56,-62,-68,-74,-80,-86,-92,66,-147,-148,-149,-150,-42,-44,-46,-170,-58,-64,-70,-76,-82,-88,-94,66,-234,-235,-236,66,66,-253,-254,-255,-256,-263,-264,-265,-266,-267,66,66,66,66,331,-224,66,339,66,-180,269,66,-171,366,66,66,-172,386,66,-260,-258,-257,-259,-261,-262,401,66,-111,-98,-99,-100,-112,66,66,-152,-153,-154,-155,-156,-168,-151,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,440,441,66,66,66,-157,-160,-163,-173,455,456,66,-219,66,66,66,-222,-101,-175,66,66,-223,66,66,66,-174,66,66,66,-176,-177,-158,-161,-165,-178,-179,-164,523,524,-159,-162,]),'LONG':([18,19,20,21,22,23,24,25,26,36,37,40,42,43,47,49,51,54,58,60,62,63,64,65,66,67,68,69,70,71,76,77,80,88,96,98,99,100,101,102,103,104,105,106,107,111,118,119,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,166,167,168,169,170,171,172,173,174,175,176,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,209,210,211,212,219,230,231,232,247,253,278,281,282,292,293,294,295,304,311,312,318,319,323,324,332,334,335,336,337,338,342,343,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,383,384,385,386,387,388,389,390,391,392,393,394,395,396,406,411,415,428,431,432,435,439,442,444,445,454,460,461,478,479,480,482,489,491,493,495,496,497,505,508,509,510,512,514,516,517,520,525,526,],[-47,-48,-49,-50,-51,-52,-53,-54,-55,-220,-221,67,67,67,67,67,-225,67,-111,-146,-109,-110,-112,-113,-116,-117,-118,-119,-114,-115,-144,143,170,67,67,67,67,67,67,67,67,67,67,67,67,67,-145,67,270,-140,67,-141,-41,-43,-45,-169,-56,-62,-68,-74,-80,-86,-92,67,-147,-148,-149,-150,-42,-44,-46,-170,-58,-64,-70,-76,-82,-88,-94,67,-234,-235,-236,67,67,-253,-254,-255,-256,-263,-264,-265,-266,-267,67,67,67,67,-224,67,67,67,-180,270,67,-171,364,67,67,-172,384,67,-260,-258,-257,-259,-261,-262,67,-111,-98,-99,-100,-112,67,67,-152,-153,-154,-155,-156,-168,-151,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,67,67,67,-157,-160,-163,-173,67,-219,67,67,67,-222,-101,-175,67,67,-223,67,67,67,-174,67,67,67,-176,-177,-158,-161,-165,-178,-179,-164,-159,-162,]),'FLOAT':([18,19,20,21,22,23,24,25,26,36,37,40,42,43,47,49,51,54,58,60,62,63,64,65,66,67,68,69,70,71,76,77,80,88,96,98,99,100,101,102,103,104,105,106,107,111,118,119,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,166,167,168,169,170,171,172,173,174,175,176,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,209,210,211,212,219,230,231,232,247,256,278,281,284,292,293,294,297,304,311,312,318,319,323,324,332,334,335,336,337,338,342,343,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,383,384,385,386,387,388,389,390,391,392,393,394,395,396,406,411,415,428,431,432,435,439,442,444,445,454,460,461,478,479,480,482,489,491,493,495,496,497,505,508,509,510,512,514,516,517,520,525,526,],[-47,-48,-49,-50,-51,-52,-53,-54,-55,-220,-221,68,68,68,68,68,-225,68,-111,-146,-109,-110,-112,-113,-116,-117,-118,-119,-114,-115,-144,145,172,68,68,68,68,68,68,68,68,68,68,68,68,68,-145,68,271,-140,68,-141,-41,-43,-45,-169,-56,-62,-68,-74,-80,-86,-92,68,-147,-148,-149,-150,-42,-44,-46,-170,-58,-64,-70,-76,-82,-88,-94,68,-234,-235,-236,68,68,-253,-254,-255,-256,-263,-264,-265,-266,-267,68,68,68,68,-224,68,68,68,-180,271,68,-171,368,68,68,-172,388,68,-260,-258,-257,-259,-261,-262,68,-111,-98,-99,-100,-112,68,68,-152,-153,-154,-155,-156,-168,-151,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,68,68,68,-157,-160,-163,-173,68,-219,68,68,68,-222,-101,-175,68,68,-223,68,68,68,-174,68,68,68,-176,-177,-158,-161,-165,-178,-179,-164,-159,-162,]),'DOUBLE':([18,19,20,21,22,23,24,25,26,36,37,40,42,43,47,49,51,54,58,60,62,63,64,65,66,67,68,69,70,71,76,77,80,88,96,98,99,100,101,102,103,104,105,106,107,111,118,119,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,166,167,168,169,170,171,172,173,174,175,176,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,209,210,211,212,219,230,231,232,247,259,278,281,285,292,293,294,298,304,311,312,318,319,323,324,332,334,335,336,337,338,342,343,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,383,384,385,386,387,388,389,390,391,392,393,394,395,396,406,411,415,428,431,432,435,439,442,444,445,454,460,461,478,479,480,482,489,491,493,495,496,497,505,508,509,510,512,514,516,517,520,525,526,],[-47,-48,-49,-50,-51,-52,-53,-54,-55,-220,-221,69,69,69,69,69,-225,69,-111,-146,-109,-110,-112,-113,-116,-117,-118,-119,-114,-115,-144,146,173,69,69,69,69,69,69,69,69,69,69,69,69,69,-145,69,272,-140,69,-141,-41,-43,-45,-169,-56,-62,-68,-74,-80,-86,-92,69,-147,-148,-149,-150,-42,-44,-46,-170,-58,-64,-70,-76,-82,-88,-94,69,-234,-235,-236,69,69,-253,-254,-255,-256,-263,-264,-265,-266,-267,69,69,69,69,-224,69,69,69,-180,272,69,-171,370,69,69,-172,390,69,-260,-258,-257,-259,-261,-262,69,-111,-98,-99,-100,-112,69,69,-152,-153,-154,-155,-156,-168,-151,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,69,69,69,-157,-160,-163,-173,69,-219,69,69,69,-222,-101,-175,69,69,-223,69,69,69,-174,69,69,69,-176,-177,-158,-161,-165,-178,-179,-164,-159,-162,]),'LLAVE_D':([18,19,20,21,22,23,24,25,26,36,37,51,58,60,62,63,64,65,66,67,68,69,70,71,76,97,98,99,100,101,102,103,104,105,106,107,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,152,153,154,155,166,167,168,169,170,171,172,173,174,175,176,219,220,221,222,223,224,225,226,227,228,229,233,247,248,249,251,252,254,255,257,258,260,261,263,264,266,267,281,294,311,312,318,319,323,324,334,335,336,337,338,340,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,383,384,385,386,387,388,389,390,391,392,393,394,395,396,399,405,413,414,416,417,418,419,420,422,423,424,425,426,427,428,431,432,435,442,443,448,449,457,460,461,462,463,464,465,466,467,468,475,478,482,495,498,499,506,507,508,509,510,512,514,516,517,520,525,526,],[-47,-48,-49,-50,-51,-52,-53,-54,-55,-220,-221,-225,-111,-146,-109,-110,-112,-113,-116,-117,-118,-119,-114,-115,-144,219,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-145,247,-181,-182,-183,-184,-185,-186,-187,-189,-193,-197,-201,-205,-209,-213,-140,-141,-41,-43,-45,-169,-56,-62,-68,-74,-80,-86,-92,-147,-148,-149,-150,-42,-44,-46,-170,-58,-64,-70,-76,-82,-88,-94,-224,-26,-27,-28,-29,-30,-31,-32,-34,-33,-35,341,-180,-190,-191,-194,-195,-198,-199,-202,-203,-206,-207,-210,-211,-214,-215,-171,-172,-260,-258,-257,-259,-261,-262,-111,-98,-99,-100,-112,408,-152,-153,-154,-155,-156,-168,-151,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,435,442,-188,-217,-36,-37,-38,-39,-40,-192,-196,-200,-204,-208,-212,-157,-160,-163,-173,-219,460,-216,468,478,-222,-101,483,484,485,486,487,488,-218,495,-175,-223,-174,508,509,516,517,-176,-177,-158,-161,-165,-178,-179,-164,-159,-162,]),'RETURN':([18,19,20,21,22,23,24,25,26,36,37,51,58,60,62,63,64,65,66,67,68,69,70,71,76,98,99,100,101,102,103,104,105,106,107,118,136,138,139,140,141,142,143,144,145,146,147,148,149,152,153,154,155,166,167,168,169,170,171,172,173,174,175,176,219,220,221,222,223,224,225,226,227,228,229,247,281,294,311,312,318,319,323,324,334,335,336,337,338,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,383,384,385,386,387,388,389,390,391,392,393,394,395,396,409,410,428,431,432,435,442,460,461,478,482,495,508,509,510,512,514,516,517,520,525,526,],[-47,-48,-49,-50,-51,-52,-53,-54,-55,-220,-221,-225,-111,-146,-109,-110,-112,-113,-116,-117,-118,-119,-114,-115,-144,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-145,-140,-141,-41,-43,-45,-169,-56,-62,-68,-74,-80,-86,-92,-147,-148,-149,-150,-42,-44,-46,-170,-58,-64,-70,-76,-82,-88,-94,-224,-26,-27,-28,-29,-30,-31,-32,-34,-33,-35,-180,-171,-172,-260,-258,-257,-259,-261,-262,-111,-98,-99,-100,-112,-152,-153,-154,-155,-156,-168,-151,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,445,446,-157,-160,-163,-173,-219,-222,-101,-175,-223,-174,-176,-177,-158,-161,-165,-178,-179,-164,-159,-162,]),'CASE':([18,19,20,21,22,23,24,25,26,58,60,62,63,64,65,66,67,68,69,70,71,72,76,118,128,129,130,131,132,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,152,153,154,155,166,167,168,169,170,171,172,173,174,175,176,281,294,311,312,318,319,323,324,334,335,336,337,338,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,383,384,385,386,387,388,389,390,391,392,393,394,395,396,413,414,416,417,418,419,420,422,423,424,425,426,427,428,431,432,461,468,510,512,514,520,525,526,],[-47,-48,-49,-50,-51,-52,-53,-54,-55,-111,-146,-109,-110,-112,-113,-116,-117,-118,-119,-114,-115,135,-144,-145,250,253,256,259,262,265,268,-140,-141,-41,-43,-45,-169,-56,-62,-68,-74,-80,-86,-92,-147,-148,-149,-150,-42,-44,-46,-170,-58,-64,-70,-76,-82,-88,-94,-171,-172,-260,-258,-257,-259,-261,-262,-111,-98,-99,-100,-112,-152,-153,-154,-155,-156,-168,-151,-60,-57,-66,-63,-72,-69,-78,-75,-84,-81,-90,-87,-96,-93,-61,-59,-67,-65,-73,-71,-79,-77,-85,-83,-91,-89,-97,-95,-188,-217,-36,-37,-38,-39,-40,-192,-196,-200,-204,-208,-212,-157,-160,-163,-101,-218,-158,-161,-165,-164,-159,-162,]),'LLAVE_I':([38,41,52,55,56,110,115,189,217,234,235,244,333,345,348,349,350,351,352,353,354,402,412,436,458,459,476,477,],[54,72,54,111,-124,232,-125,304,332,342,343,-126,406,-127,415,415,415,415,415,415,415,439,415,454,479,480,496,497,]),'PAR_D':([40,44,57,58,59,61,62,63,64,65,66,67,68,69,70,71,73,74,75,83,84,85,86,87,95,116,206,207,208,218,231,237,238,239,240,241,242,243,246,276,279,290,291,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,330,339,346,360,379,381,382,400,430,440,441,447,451,455,456,500,502,504,515,523,524,],[60,76,115,-111,118,-166,-109,-110,-112,-113,-116,-117,-118,-119,-114,-115,136,-143,138,189,-227,-228,-229,-230,217,244,-231,-232,-233,333,60,-102,-103,-104,-105,-106,-107,-108,-167,-142,361,378,-136,-226,-252,-244,-246,-248,-250,-260,-258,-241,-247,-237,-240,-245,-257,-259,-238,-239,-261,-262,-242,-249,-243,-251,402,407,-122,428,-137,431,432,436,-138,458,459,-123,-139,476,477,510,512,514,520,525,526,]),'STRING':([40,42,43,47,49,77,80,88,96,119,135,137,151,190,191,192,193,194,196,197,198,199,213,230,231,262,278,286,292,293,299,411,444,445,489,491,493,505,],[62,62,62,91,91,147,174,91,91,62,273,62,62,91,-234,-235,-236,309,-253,-254,-255,-256,325,62,62,273,62,372,62,62,392,62,62,62,62,62,62,62,]),'CHAR':([40,42,43,47,49,77,80,88,96,119,135,137,151,190,191,192,193,194,196,197,198,199,214,230,231,265,278,287,292,293,300,411,444,445,489,491,493,505,],[63,63,63,92,92,148,175,92,92,63,274,63,63,92,-234,-235,-236,310,-253,-254,-255,-256,327,63,63,274,63,374,63,63,394,63,63,63,63,63,63,63,]),'TRUE':([40,42,43,47,49,77,80,88,96,119,135,137,151,190,191,192,193,194,196,197,198,199,205,230,231,268,278,288,292,293,301,411,444,445,489,491,493,505,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,-234,-235,-236,70,-253,-254,-255,-256,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'FLASE':([40,42,43,47,49,77,80,88,96,119,135,137,151,190,191,192,193,194,196,197,198,199,205,230,231,268,278,288,292,293,301,411,444,445,489,491,493,505,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,-234,-235,-236,71,-253,-254,-255,-256,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'IGUAL':([45,46,55,56,78,81,108,112,113,115,157,158,159,160,161,162,163,180,181,182,183,184,185,186,236,237,238,239,240,241,242,243,244,345,346,378,407,421,429,433,434,],[77,80,110,-124,156,179,230,234,235,-125,282,283,284,285,286,287,288,295,296,297,298,299,300,301,-134,-102,-103,-104,-105,-106,-107,-108,-126,-127,411,-135,444,230,450,452,453,]),'DOBLE_PUNTO':([45,46,55,56,115,117,244,345,],[79,82,114,-124,-125,245,-126,-127,]),'NOT':([47,49,66,67,68,69,70,71,84,85,86,87,96,190,191,192,193,206,207,208,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,],[88,88,-116,-117,-118,-119,-114,-115,193,-228,-229,-230,88,88,-234,-235,-236,-231,-232,-233,-252,-244,-246,-248,-250,-260,-258,-241,-247,-237,-240,-245,-257,-259,-238,-239,-261,-262,-242,-249,-243,-251,]),'COMA':([58,61,62,63,64,65,66,67,68,69,70,71,237,238,239,240,241,242,243,291,339,430,],[-111,119,-109,-110,-112,-113,-116,-117,-118,-119,-114,-115,-102,-103,-104,-105,-106,-107,-108,380,-116,380,]),'MAS':([58,62,63,64,65,66,67,68,69,70,71,74,85,89,90,107,108,109,139,140,143,144,145,146,166,167,170,171,172,173,206,311,312,315,316,317,318,319,320,321,322,323,324,334,337,338,],[-111,-109,-110,-112,-113,-116,-117,-118,-119,-114,-115,137,201,201,201,201,201,201,201,201,-117,-116,-118,-119,201,201,-117,-116,-118,-119,201,-260,-258,201,201,201,-257,-259,201,201,201,-261,-262,201,201,201,]),'PUNTO':([60,76,118,139,152,154,155,166,334,462,465,],[-146,-144,-145,277,280,-149,-150,277,277,277,277,]),'IGUAL_COMPARACION':([66,67,68,69,70,71,85,86,89,90,91,92,206,207,311,312,318,319,323,324,],[-116,-117,-118,-119,-114,-115,196,196,196,196,196,196,196,196,-260,-258,-257,-259,-261,-262,]),'DIFERENTE':([66,67,68,69,70,71,85,86,89,90,91,92,206,207,311,312,318,319,323,324,],[-116,-117,-118,-119,-114,-115,197,197,197,197,197,197,197,197,-260,-258,-257,-259,-261,-262,]),'MAYOR':([66,67,68,69,70,71,85,86,89,90,91,92,206,207,311,312,318,319,323,324,],[-116,-117,-118,-119,-114,-115,198,198,198,198,198,198,198,198,-260,-258,-257,-259,-261,-262,]),'MENOR':([66,67,68,69,70,71,85,86,89,90,91,92,206,207,311,312,318,319,323,324,],[-116,-117,-118,-119,-114,-115,199,199,199,199,199,199,199,199,-260,-258,-257,-259,-261,-262,]),'MENOS':([66,67,68,69,85,89,90,107,108,109,139,140,143,144,145,146,166,167,170,171,172,173,206,311,312,315,316,317,318,319,320,321,322,323,324,334,337,338,],[-116,-117,-118,-119,200,200,200,200,200,200,200,200,-117,-116,-118,-119,200,200,-117,-116,-118,-119,200,-260,-258,200,200,200,-257,-259,200,200,200,-261,-262,200,200,200,]),'MULTIPLICACION':([66,67,68,69,85,89,90,107,108,109,139,140,143,144,145,146,166,167,170,171,172,173,206,311,312,315,316,317,318,319,320,321,322,323,324,334,337,338,],[-116,-117,-118,-119,202,202,202,202,202,202,202,202,-117,-116,-118,-119,202,202,-117,-116,-118,-119,202,-260,-258,202,202,202,-257,-259,202,202,202,-261,-262,202,202,202,]),'DIVISION':([66,67,68,69,85,89,90,107,108,109,139,140,143,144,145,146,166,167,170,171,172,173,206,311,312,315,316,317,318,319,320,321,322,323,324,334,337,338,],[-116,-117,-118,-119,203,203,203,203,203,203,203,203,-117,-116,-118,-119,203,203,-117,-116,-118,-119,203,-260,-258,203,203,203,-257,-259,203,203,203,-261,-262,203,203,203,]),'MOD':([66,67,68,69,85,89,90,107,108,109,139,140,143,144,145,146,166,167,170,171,172,173,206,311,312,315,316,317,318,319,320,321,322,323,324,334,337,338,],[-116,-117,-118,-119,204,204,204,204,204,204,204,204,-117,-116,-118,-119,204,204,-117,-116,-118,-119,204,-260,-258,204,204,204,-257,-259,204,204,204,-261,-262,204,204,204,]),'AND':([66,67,68,69,70,71,84,85,86,87,206,207,208,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,],[-116,-117,-118,-119,-114,-115,191,-228,-229,-230,-231,-232,-233,-252,-244,-246,-248,-250,-260,-258,-241,-247,-237,-240,-245,-257,-259,-238,-239,-261,-262,-242,-249,-243,-251,]),'OR':([66,67,68,69,70,71,84,85,86,87,206,207,208,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,],[-116,-117,-118,-119,-114,-115,192,-228,-229,-230,-231,-232,-233,-252,-244,-246,-248,-250,-260,-258,-241,-247,-237,-240,-245,-257,-259,-238,-239,-261,-262,-242,-249,-243,-251,]),'FUNCION_FLECHA':([70,71,269,270,271,272,273,274,275,347,],[-114,-115,348,349,350,351,352,353,354,412,]),'ARRAYCLASS':([77,79,80,82,450,452,470,472,],[150,164,177,187,469,471,490,492,]),'LONGCLASS':([79,82,114,165,245,289,302,303,380,501,503,],[157,180,241,241,241,241,241,241,241,241,241,]),'INTCLASS':([79,82,114,165,245,289,302,303,380,501,503,],[158,181,240,240,240,240,240,240,240,240,240,]),'FLOATCLASS':([79,82,114,165,245,289,302,303,380,501,503,],[159,182,243,243,243,243,243,243,243,243,243,]),'DOUBLECLASS':([79,82,114,165,245,289,302,303,380,501,503,],[160,183,242,242,242,242,242,242,242,242,242,]),'STRINGCLASS':([79,82,114,165,245,289,302,303,380,501,503,],[161,184,238,238,238,238,238,238,238,238,238,]),'CHARCLASS':([79,82,114,165,245,289,302,303,380,501,503,],[162,185,237,237,237,237,237,237,237,237,237,]),'BOOLCLASS':([79,82,114,165,245,289,302,303,380,501,503,],[163,186,239,239,239,239,239,239,239,239,239,]),'LISTCLASS':([80,82,453,474,],[178,188,473,494,]),'ITERATOR':([94,215,],[216,329,]),'CORCHETE_I':([164,187,188,490,492,],[289,302,303,501,503,]),'CORCHETE_D':([237,238,239,240,241,242,243,377,397,398,511,513,],[-102,-103,-104,-105,-106,-107,-108,429,433,434,518,519,]),'SUBGUION':([250,253,256,259,262,265,268,],[347,347,347,347,347,347,347,]),'TO_INT':([277,280,],[356,356,]),'TO_DOUBLE':([277,280,],[357,357,]),'TO_FLOAT':([277,280,],[358,358,]),'TO_LONG':([277,280,],[359,359,]),'TO':([331,401,],[403,437,]),'UNTIL':([331,401,],[404,438,]),'NEW':([450,452,453,],[470,472,474,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,2,6,7,8,9,10,],[1,30,31,32,33,34,35,]),'funcion':([0,2,6,7,8,9,10,],[2,2,2,2,2,2,2,]),'funcall':([0,2,6,7,8,9,10,54,77,80,98,99,100,101,102,103,104,105,106,107,111,230,232,304,332,342,343,348,349,350,351,352,353,354,406,412,415,439,445,446,454,479,480,496,497,],[3,3,3,3,3,3,3,100,155,155,100,100,100,100,100,100,100,100,100,100,100,155,100,100,100,100,100,418,418,418,418,418,418,418,100,418,100,100,155,155,100,100,100,100,100,]),'impresion':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,111,232,304,332,342,343,348,349,350,351,352,353,354,406,412,415,439,454,479,480,496,497,],[4,4,4,4,4,4,4,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,419,419,419,419,419,419,419,101,419,101,101,101,101,101,101,101,]),'entrada':([0,2,6,7,8,9,10,54,77,80,98,99,100,101,102,103,104,105,106,107,111,230,232,304,332,342,343,348,349,350,351,352,353,354,406,412,415,439,445,446,454,479,480,496,497,],[5,5,5,5,5,5,5,102,154,154,102,102,102,102,102,102,102,102,102,102,102,154,102,102,102,102,102,420,420,420,420,420,420,420,102,420,102,102,154,154,102,102,102,102,102,]),'asignacion':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,111,232,304,332,342,343,348,349,350,351,352,353,354,406,412,415,439,454,479,480,496,497,],[6,6,6,6,6,6,6,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,416,416,416,416,416,416,416,98,416,98,98,98,98,98,98,98,]),'while':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,111,232,304,332,342,343,406,415,439,454,479,480,496,497,],[7,7,7,7,7,7,7,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'for':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,111,232,304,332,342,343,406,415,439,454,479,480,496,497,],[8,8,8,8,8,8,8,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'match':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,111,232,304,332,342,343,406,415,439,454,479,480,496,497,],[9,9,9,9,9,9,9,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'if':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,111,232,304,332,342,343,406,415,439,454,479,480,496,497,],[10,10,10,10,10,10,10,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'asignacionLong':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,111,232,304,332,342,343,348,349,350,351,352,353,354,406,412,415,439,454,479,480,496,497,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'asignacionInt':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,111,232,304,332,342,343,348,349,350,351,352,353,354,406,412,415,439,454,479,480,496,497,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'asignacionFloat':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,111,232,304,332,342,343,348,349,350,351,352,353,354,406,412,415,439,454,479,480,496,497,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'asignacionDouble':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,111,232,304,332,342,343,348,349,350,351,352,353,354,406,412,415,439,454,479,480,496,497,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'asignacionString':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,111,232,304,332,342,343,348,349,350,351,352,353,354,406,412,415,439,454,479,480,496,497,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'asignacionChar':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,111,232,304,332,342,343,348,349,350,351,352,353,354,406,412,415,439,454,479,480,496,497,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'asignacionBoolean':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,111,232,304,332,342,343,348,349,350,351,352,353,354,406,412,415,439,454,479,480,496,497,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'array':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,111,232,304,332,342,343,348,349,350,351,352,353,354,406,412,415,439,454,479,480,496,497,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'list':([0,2,6,7,8,9,10,54,98,99,100,101,102,103,104,105,106,107,111,232,304,332,342,343,348,349,350,351,352,353,354,406,412,415,439,454,479,480,496,497,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'elseif':([10,36,50,106,460,],[36,50,50,36,482,]),'else':([10,36,50,106,],[37,51,51,37,]),'parametro':([39,],[55,]),'parametros':([39,244,],[56,345,]),'valores':([40,119,151,231,278,292,293,489,491,493,505,],[59,246,279,59,360,381,382,500,502,504,515,]),'valor':([40,42,43,119,137,151,230,231,278,292,293,411,444,445,489,491,493,505,],[61,74,74,61,74,61,335,61,61,61,61,447,461,463,61,61,61,61,]),'numeros':([40,42,43,47,49,54,77,80,88,96,98,99,100,101,102,103,104,105,106,107,111,119,137,151,190,194,195,209,210,211,212,230,231,232,278,292,293,304,332,342,343,406,411,415,439,444,445,454,479,480,489,491,493,496,497,505,],[64,64,64,89,89,109,109,109,89,89,109,109,109,109,109,109,109,109,109,109,109,64,64,64,89,307,312,315,318,321,323,338,64,109,64,64,64,109,109,109,109,109,64,109,109,64,64,109,109,109,64,64,64,109,109,64,]),'booleanos':([40,42,43,47,49,77,80,88,96,119,135,137,151,190,194,205,230,231,268,278,288,292,293,301,411,444,445,489,491,493,505,],[65,65,65,86,86,149,176,207,86,65,275,65,65,86,308,313,65,65,275,65,376,65,65,396,65,65,65,65,65,65,65,]),'valorI':([42,43,137,],[73,75,276,]),'dectipoTupla':([45,46,55,],[78,81,113,]),'condicional':([47,49,96,190,],[83,95,218,305,]),'valorC':([47,49,96,190,],[84,84,84,84,]),'relacional':([47,49,88,96,190,],[87,87,208,87,87,]),'aritmetica':([47,49,54,77,80,88,96,98,99,100,101,102,103,104,105,106,107,111,190,209,211,230,232,304,332,342,343,406,415,439,454,479,480,496,497,],[90,90,107,140,167,90,90,107,107,107,107,107,107,107,107,107,107,107,90,316,320,337,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'contenido':([54,98,99,100,101,102,103,104,105,106,107,111,232,304,332,342,343,406,415,439,454,479,480,496,497,],[97,220,221,222,223,224,225,226,227,228,229,233,340,399,405,409,410,443,449,457,475,498,499,506,507,]),'reasignacion':([54,98,99,100,101,102,103,104,105,106,107,111,232,304,332,342,343,348,349,350,351,352,353,354,406,412,415,439,454,479,480,496,497,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,417,417,417,417,417,417,417,99,417,99,99,99,99,99,99,99,]),'dectipo':([55,],[112,]),'declaracion':([57,344,],[116,116,]),'cases':([72,],[120,]),'casesInt':([72,128,],[121,248,]),'casesLgn':([72,129,],[122,251,]),'casesFlt':([72,130,],[123,254,]),'casesDob':([72,131,],[124,257,]),'casesStr':([72,132,],[125,260,]),'casesChar':([72,133,],[126,263,]),'casesBool':([72,134,],[127,266,]),'caseInt':([72,128,],[128,128,]),'caseLgn':([72,129,],[129,129,]),'caseFlt':([72,130,],[130,130,]),'caseDob':([72,131,],[131,131,]),'caseStr':([72,132,],[132,132,]),'caseChar':([72,133,],[133,133,]),'caseBool':([72,134,],[134,134,]),'returnfun':([77,80,230,445,446,],[141,168,336,464,467,]),'tuple':([77,80,156,179,446,],[142,169,281,294,466,]),'returnCastable':([77,80,230,445,446,],[152,152,152,152,152,]),'castingcall':([77,80,230,445,446,],[153,153,153,153,153,]),'logicos':([84,],[190,]),'comparacion':([85,86,89,90,91,92,206,207,],[194,205,209,211,213,214,194,205,]),'aritmeticos':([85,89,90,107,108,109,139,140,166,167,206,315,316,317,320,321,322,334,337,338,],[195,210,212,212,195,210,195,212,195,212,195,210,212,195,212,210,195,195,212,210,]),'tipo':([114,165,245,289,302,303,380,501,503,],[236,291,346,377,397,398,430,511,513,]),'defcase':([128,129,130,131,132,133,134,],[249,252,255,258,261,264,267,]),'tipos':([165,],[290,]),'castingfun':([277,280,],[355,362,]),'tiposentry':([291,430,],[379,451,]),'codeBlock':([348,349,350,351,352,353,354,412,],[413,422,423,424,425,426,427,448,]),'contenidoLine':([348,349,350,351,352,353,354,412,],[414,414,414,414,414,414,414,414,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> funcion','cuerpo',1,'p_cuerpo','sintax.py',10),
  ('cuerpo -> funcall','cuerpo',1,'p_cuerpo','sintax.py',11),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintax.py',12),
  ('cuerpo -> entrada','cuerpo',1,'p_cuerpo','sintax.py',13),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintax.py',14),
  ('cuerpo -> while','cuerpo',1,'p_cuerpo','sintax.py',15),
  ('cuerpo -> for','cuerpo',1,'p_cuerpo','sintax.py',16),
  ('cuerpo -> match','cuerpo',1,'p_cuerpo','sintax.py',17),
  ('cuerpo -> if','cuerpo',1,'p_cuerpo','sintax.py',18),
  ('cuerpo -> funcion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',19),
  ('cuerpo -> asignacion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',20),
  ('cuerpo -> while cuerpo','cuerpo',2,'p_cuerpo','sintax.py',21),
  ('cuerpo -> for cuerpo','cuerpo',2,'p_cuerpo','sintax.py',22),
  ('cuerpo -> if cuerpo','cuerpo',2,'p_cuerpo','sintax.py',23),
  ('cuerpo -> match cuerpo','cuerpo',2,'p_cuerpo','sintax.py',24),
  ('contenido -> asignacion','contenido',1,'p_contenido','sintax.py',28),
  ('contenido -> reasignacion','contenido',1,'p_contenido','sintax.py',29),
  ('contenido -> funcall','contenido',1,'p_contenido','sintax.py',30),
  ('contenido -> impresion','contenido',1,'p_contenido','sintax.py',31),
  ('contenido -> entrada','contenido',1,'p_contenido','sintax.py',32),
  ('contenido -> while','contenido',1,'p_contenido','sintax.py',33),
  ('contenido -> for','contenido',1,'p_contenido','sintax.py',34),
  ('contenido -> match','contenido',1,'p_contenido','sintax.py',35),
  ('contenido -> if','contenido',1,'p_contenido','sintax.py',36),
  ('contenido -> aritmetica','contenido',1,'p_contenido','sintax.py',37),
  ('contenido -> asignacion contenido','contenido',2,'p_contenido','sintax.py',38),
  ('contenido -> reasignacion contenido','contenido',2,'p_contenido','sintax.py',39),
  ('contenido -> funcall contenido','contenido',2,'p_contenido','sintax.py',40),
  ('contenido -> impresion contenido','contenido',2,'p_contenido','sintax.py',41),
  ('contenido -> entrada contenido','contenido',2,'p_contenido','sintax.py',42),
  ('contenido -> while contenido','contenido',2,'p_contenido','sintax.py',43),
  ('contenido -> for contenido','contenido',2,'p_contenido','sintax.py',44),
  ('contenido -> if contenido','contenido',2,'p_contenido','sintax.py',45),
  ('contenido -> match contenido','contenido',2,'p_contenido','sintax.py',46),
  ('contenido -> aritmetica contenido','contenido',2,'p_contenido','sintax.py',47),
  ('contenidoLine -> asignacion','contenidoLine',1,'p_contenidoLine','sintax.py',51),
  ('contenidoLine -> reasignacion','contenidoLine',1,'p_contenidoLine','sintax.py',52),
  ('contenidoLine -> funcall','contenidoLine',1,'p_contenidoLine','sintax.py',53),
  ('contenidoLine -> impresion','contenidoLine',1,'p_contenidoLine','sintax.py',54),
  ('contenidoLine -> entrada','contenidoLine',1,'p_contenidoLine','sintax.py',55),
  ('asignacion -> VAR VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',59),
  ('asignacion -> VAL VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',60),
  ('asignacion -> VAR VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',61),
  ('asignacion -> VAL VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',62),
  ('asignacion -> VAR VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',63),
  ('asignacion -> VAL VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',64),
  ('asignacion -> asignacionLong','asignacion',1,'p_asignacion','sintax.py',65),
  ('asignacion -> asignacionInt','asignacion',1,'p_asignacion','sintax.py',66),
  ('asignacion -> asignacionFloat','asignacion',1,'p_asignacion','sintax.py',67),
  ('asignacion -> asignacionDouble','asignacion',1,'p_asignacion','sintax.py',68),
  ('asignacion -> asignacionString','asignacion',1,'p_asignacion','sintax.py',69),
  ('asignacion -> asignacionChar','asignacion',1,'p_asignacion','sintax.py',70),
  ('asignacion -> asignacionBoolean','asignacion',1,'p_asignacion','sintax.py',71),
  ('asignacion -> array','asignacion',1,'p_asignacion','sintax.py',72),
  ('asignacion -> list','asignacion',1,'p_asignacion','sintax.py',73),
  ('asignacionLong -> VAR VARIABLE IGUAL LONG','asignacionLong',4,'p_asignacionLong','sintax.py',76),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG','asignacionLong',6,'p_asignacionLong','sintax.py',77),
  ('asignacionLong -> VAL VARIABLE IGUAL LONG','asignacionLong',4,'p_asignacionLong','sintax.py',78),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG','asignacionLong',6,'p_asignacionLong','sintax.py',79),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',80),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',81),
  ('asignacionInt -> VAR VARIABLE IGUAL INT','asignacionInt',4,'p_asignacionInt','sintax.py',84),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT','asignacionInt',6,'p_asignacionInt','sintax.py',85),
  ('asignacionInt -> VAL VARIABLE IGUAL INT','asignacionInt',4,'p_asignacionInt','sintax.py',86),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT','asignacionInt',6,'p_asignacionInt','sintax.py',87),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',88),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',89),
  ('asignacionFloat -> VAR VARIABLE IGUAL FLOAT','asignacionFloat',4,'p_asignacionFloat','sintax.py',92),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT','asignacionFloat',6,'p_asignacionFloat','sintax.py',93),
  ('asignacionFloat -> VAL VARIABLE IGUAL FLOAT','asignacionFloat',4,'p_asignacionFloat','sintax.py',94),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT','asignacionFloat',6,'p_asignacionFloat','sintax.py',95),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',96),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',97),
  ('asignacionDouble -> VAR VARIABLE IGUAL DOUBLE','asignacionDouble',4,'p_asignacionDouble','sintax.py',100),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',101),
  ('asignacionDouble -> VAL VARIABLE IGUAL DOUBLE','asignacionDouble',4,'p_asignacionDouble','sintax.py',102),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',103),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',104),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',105),
  ('asignacionString -> VAR VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',108),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',109),
  ('asignacionString -> VAL VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',110),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',111),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',112),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',113),
  ('asignacionChar -> VAR VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',116),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',117),
  ('asignacionChar -> VAL VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',118),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',119),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',120),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',121),
  ('asignacionBoolean -> VAR VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',124),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',125),
  ('asignacionBoolean -> VAL VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',126),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',127),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',128),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',129),
  ('reasignacion -> VARIABLE IGUAL valor','reasignacion',3,'p_reasignacion','sintax.py',133),
  ('reasignacion -> VARIABLE IGUAL returnfun','reasignacion',3,'p_reasignacion','sintax.py',134),
  ('reasignacion -> VARIABLE IGUAL aritmetica','reasignacion',3,'p_reasignacion','sintax.py',135),
  ('reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor','reasignacion',6,'p_reasignacion','sintax.py',136),
  ('tipo -> CHARCLASS','tipo',1,'p_tipo','sintax.py',139),
  ('tipo -> STRINGCLASS','tipo',1,'p_tipo','sintax.py',140),
  ('tipo -> BOOLCLASS','tipo',1,'p_tipo','sintax.py',141),
  ('tipo -> INTCLASS','tipo',1,'p_tipo','sintax.py',142),
  ('tipo -> LONGCLASS','tipo',1,'p_tipo','sintax.py',143),
  ('tipo -> DOUBLECLASS','tipo',1,'p_tipo','sintax.py',144),
  ('tipo -> FLOATCLASS','tipo',1,'p_tipo','sintax.py',145),
  ('valor -> STRING','valor',1,'p_valor','sintax.py',148),
  ('valor -> CHAR','valor',1,'p_valor','sintax.py',149),
  ('valor -> VARIABLE','valor',1,'p_valor','sintax.py',150),
  ('valor -> numeros','valor',1,'p_valor','sintax.py',151),
  ('valor -> booleanos','valor',1,'p_valor','sintax.py',152),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintax.py',155),
  ('booleanos -> FLASE','booleanos',1,'p_booleanos','sintax.py',156),
  ('numeros -> INT','numeros',1,'p_numeros','sintax.py',159),
  ('numeros -> LONG','numeros',1,'p_numeros','sintax.py',160),
  ('numeros -> FLOAT','numeros',1,'p_numeros','sintax.py',161),
  ('numeros -> DOUBLE','numeros',1,'p_numeros','sintax.py',162),
  ('funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D','funcion',7,'p_funcion','sintax.py',167),
  ('funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D','funcion',6,'p_funcion','sintax.py',168),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo','declaracion',3,'p_declaracion','sintax.py',173),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor','declaracion',5,'p_declaracion_defecto','sintax.py',176),
  ('parametro -> parametros','parametro',1,'p_parametro','sintax.py',179),
  ('parametro -> PAR_I PAR_D','parametro',2,'p_parametro','sintax.py',180),
  ('parametros -> PAR_I declaracion PAR_D','parametros',3,'p_parametros','sintax.py',183),
  ('parametros -> PAR_I declaracion PAR_D parametros','parametros',4,'p_parametros','sintax.py',184),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D','funcion',10,'p_funcion_return','sintax.py',189),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_return','sintax.py',190),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_return','sintax.py',191),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',194),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',195),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',196),
  ('dectipo -> DOBLE_PUNTO tipo','dectipo',2,'p_dectipo','sintax.py',199),
  ('dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D','dectipoTupla',4,'p_dectipoTupla','sintax.py',202),
  ('tipos -> tipo','tipos',1,'p_tipos','sintax.py',205),
  ('tipos -> tipo tiposentry','tipos',2,'p_tipos','sintax.py',206),
  ('tiposentry -> COMA tipo','tiposentry',2,'p_tipoentry','sintax.py',209),
  ('tiposentry -> COMA tipo tiposentry','tiposentry',3,'p_tipoentry','sintax.py',210),
  ('impresion -> PRINTLN PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',215),
  ('impresion -> PRINT PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',216),
  ('valorI -> valor MAS valorI','valorI',3,'p_valorI','sintax.py',219),
  ('valorI -> valor','valorI',1,'p_valorI','sintax.py',220),
  ('entrada -> READLINE PAR_I PAR_D','entrada',3,'p_entrada','sintax.py',225),
  ('funcall -> VARIABLE PAR_I valores PAR_D','funcall',4,'p_funcall','sintax.py',229),
  ('funcall -> VARIABLE PAR_I PAR_D','funcall',3,'p_funcall','sintax.py',230),
  ('returnfun -> returnCastable','returnfun',1,'p_returnfun','sintax.py',233),
  ('returnfun -> castingcall','returnfun',1,'p_returnfun','sintax.py',234),
  ('returnCastable -> entrada','returnCastable',1,'p_returnCastable','sintax.py',237),
  ('returnCastable -> funcall','returnCastable',1,'p_returnCastable','sintax.py',238),
  ('castingcall -> returnCastable PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',243),
  ('castingcall -> VARIABLE PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',244),
  ('castingfun -> TO_INT','castingfun',1,'p_castingfun','sintax.py',248),
  ('castingfun -> TO_DOUBLE','castingfun',1,'p_castingfun','sintax.py',249),
  ('castingfun -> TO_FLOAT','castingfun',1,'p_castingfun','sintax.py',250),
  ('castingfun -> TO_LONG','castingfun',1,'p_castingfun','sintax.py',251),
  ('array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',256),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D','array',12,'p_array','sintax.py',257),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',258),
  ('array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',259),
  ('array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D','array',12,'p_array','sintax.py',260),
  ('array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',261),
  ('list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D','list',7,'p_list','sintax.py',265),
  ('list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D','list',13,'p_list','sintax.py',266),
  ('list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D','list',12,'p_list','sintax.py',267),
  ('valores -> valor','valores',1,'p_valores','sintax.py',271),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintax.py',272),
  ('tuple -> PAR_I valores PAR_D','tuple',3,'p_tuple','sintax.py',276),
  ('asignacion -> VAR VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',279),
  ('asignacion -> VAL VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',280),
  ('asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple','asignacion',5,'p_asignacion_tupleDec','sintax.py',283),
  ('asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple','asignacion',5,'p_asignacion_tupleDec','sintax.py',284),
  ('while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','while',7,'p_while','sintax.py',290),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',10,'p_for','sintax.py',294),
  ('for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',9,'p_for','sintax.py',295),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',296),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',297),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',298),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',299),
  ('match -> VARIABLE MATCH LLAVE_I cases LLAVE_D','match',5,'p_match','sintax.py',303),
  ('cases -> casesInt','cases',1,'p_cases','sintax.py',306),
  ('cases -> casesLgn','cases',1,'p_cases','sintax.py',307),
  ('cases -> casesFlt','cases',1,'p_cases','sintax.py',308),
  ('cases -> casesDob','cases',1,'p_cases','sintax.py',309),
  ('cases -> casesStr','cases',1,'p_cases','sintax.py',310),
  ('cases -> casesChar','cases',1,'p_cases','sintax.py',311),
  ('cases -> casesBool','cases',1,'p_cases','sintax.py',312),
  ('caseInt -> CASE INT FUNCION_FLECHA codeBlock','caseInt',4,'p_caseInt','sintax.py',315),
  ('casesInt -> caseInt','casesInt',1,'p_casesInt','sintax.py',318),
  ('casesInt -> caseInt casesInt','casesInt',2,'p_casesInt','sintax.py',319),
  ('casesInt -> caseInt defcase','casesInt',2,'p_casesInt','sintax.py',320),
  ('caseLgn -> CASE LONG FUNCION_FLECHA codeBlock','caseLgn',4,'p_caseLgn','sintax.py',323),
  ('casesLgn -> caseLgn','casesLgn',1,'p_casesLgn','sintax.py',326),
  ('casesLgn -> caseLgn casesLgn','casesLgn',2,'p_casesLgn','sintax.py',327),
  ('casesLgn -> caseLgn defcase','casesLgn',2,'p_casesLgn','sintax.py',328),
  ('caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock','caseFlt',4,'p_caseFlt','sintax.py',331),
  ('casesFlt -> caseFlt','casesFlt',1,'p_casesFlt','sintax.py',334),
  ('casesFlt -> caseFlt casesFlt','casesFlt',2,'p_casesFlt','sintax.py',335),
  ('casesFlt -> caseFlt defcase','casesFlt',2,'p_casesFlt','sintax.py',336),
  ('caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock','caseDob',4,'p_caseDob','sintax.py',339),
  ('casesDob -> caseDob','casesDob',1,'p_casesDob','sintax.py',342),
  ('casesDob -> caseDob casesDob','casesDob',2,'p_casesDob','sintax.py',343),
  ('casesDob -> caseDob defcase','casesDob',2,'p_casesDob','sintax.py',344),
  ('caseStr -> CASE STRING FUNCION_FLECHA codeBlock','caseStr',4,'p_caseStr','sintax.py',347),
  ('casesStr -> caseStr','casesStr',1,'p_casesStr','sintax.py',350),
  ('casesStr -> caseStr casesStr','casesStr',2,'p_casesStr','sintax.py',351),
  ('casesStr -> caseStr defcase','casesStr',2,'p_casesStr','sintax.py',352),
  ('caseChar -> CASE CHAR FUNCION_FLECHA codeBlock','caseChar',4,'p_caseChar','sintax.py',355),
  ('casesChar -> caseChar','casesChar',1,'p_casesChar','sintax.py',358),
  ('casesChar -> caseChar casesChar','casesChar',2,'p_casesChar','sintax.py',359),
  ('casesChar -> caseChar defcase','casesChar',2,'p_casesChar','sintax.py',360),
  ('caseBool -> CASE booleanos FUNCION_FLECHA codeBlock','caseBool',4,'p_caseBool','sintax.py',363),
  ('casesBool -> caseBool','casesBool',1,'p_casesBool','sintax.py',366),
  ('casesBool -> caseBool casesBool','casesBool',2,'p_casesBool','sintax.py',367),
  ('casesBool -> caseBool defcase','casesBool',2,'p_casesBool','sintax.py',368),
  ('defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock','defcase',4,'p_defcase','sintax.py',372),
  ('codeBlock -> contenidoLine','codeBlock',1,'p_codeBlock','sintax.py',375),
  ('codeBlock -> LLAVE_I contenido LLAVE_D','codeBlock',3,'p_codeBlock','sintax.py',376),
  ('if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','if',7,'p_if','sintax.py',380),
  ('if -> if elseif','if',2,'p_if','sintax.py',381),
  ('if -> if else','if',2,'p_if','sintax.py',382),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','elseif',8,'p_elseif','sintax.py',386),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif','elseif',9,'p_elseif','sintax.py',387),
  ('else -> ELSE LLAVE_I contenido LLAVE_D','else',4,'p_else','sintax.py',390),
  ('else -> elseif else','else',2,'p_else','sintax.py',391),
  ('condicional -> valorC logicos condicional','condicional',3,'p_condicional','sintax.py',395),
  ('condicional -> valorC','condicional',1,'p_condicional','sintax.py',396),
  ('valorC -> VARIABLE','valorC',1,'p_valorC','sintax.py',399),
  ('valorC -> booleanos','valorC',1,'p_valorC','sintax.py',400),
  ('valorC -> relacional','valorC',1,'p_valorC','sintax.py',401),
  ('valorC -> NOT VARIABLE','valorC',2,'p_valorC','sintax.py',402),
  ('valorC -> NOT booleanos','valorC',2,'p_valorC','sintax.py',403),
  ('valorC -> NOT relacional','valorC',2,'p_valorC','sintax.py',404),
  ('logicos -> AND','logicos',1,'p_logicos','sintax.py',407),
  ('logicos -> OR','logicos',1,'p_logicos','sintax.py',408),
  ('logicos -> NOT','logicos',1,'p_logicos','sintax.py',409),
  ('relacional -> numeros comparacion numeros','relacional',3,'p_relacional','sintax.py',414),
  ('relacional -> aritmetica comparacion aritmetica','relacional',3,'p_relacional','sintax.py',415),
  ('relacional -> aritmetica comparacion numeros','relacional',3,'p_relacional','sintax.py',416),
  ('relacional -> numeros comparacion aritmetica','relacional',3,'p_relacional','sintax.py',417),
  ('relacional -> booleanos comparacion booleanos','relacional',3,'p_relacional','sintax.py',418),
  ('relacional -> STRING comparacion STRING','relacional',3,'p_relacional','sintax.py',419),
  ('relacional -> CHAR comparacion CHAR','relacional',3,'p_relacional','sintax.py',420),
  ('relacional -> VARIABLE comparacion numeros','relacional',3,'p_relacional','sintax.py',421),
  ('relacional -> numeros comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',422),
  ('relacional -> VARIABLE comparacion booleanos','relacional',3,'p_relacional','sintax.py',423),
  ('relacional -> booleanos comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',424),
  ('relacional -> VARIABLE comparacion STRING','relacional',3,'p_relacional','sintax.py',425),
  ('relacional -> STRING comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',426),
  ('relacional -> VARIABLE comparacion CHAR','relacional',3,'p_relacional','sintax.py',427),
  ('relacional -> CHAR comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',428),
  ('relacional -> VARIABLE comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',429),
  ('comparacion -> IGUAL_COMPARACION','comparacion',1,'p_comparacion','sintax.py',432),
  ('comparacion -> DIFERENTE','comparacion',1,'p_comparacion','sintax.py',433),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion','sintax.py',434),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion','sintax.py',435),
  ('aritmetica -> numeros aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',439),
  ('aritmetica -> VARIABLE aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',440),
  ('aritmetica -> numeros aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',441),
  ('aritmetica -> VARIABLE aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',442),
  ('aritmetica -> aritmetica aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',443),
  ('aritmetica -> aritmetica aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',444),
  ('aritmeticos -> MENOS','aritmeticos',1,'p_aritmeticos','sintax.py',447),
  ('aritmeticos -> MAS','aritmeticos',1,'p_aritmeticos','sintax.py',448),
  ('aritmeticos -> MULTIPLICACION','aritmeticos',1,'p_aritmeticos','sintax.py',449),
  ('aritmeticos -> DIVISION','aritmeticos',1,'p_aritmeticos','sintax.py',450),
  ('aritmeticos -> MOD','aritmeticos',1,'p_aritmeticos','sintax.py',451),
]

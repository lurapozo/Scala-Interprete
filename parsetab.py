
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARRAYCLASS ARROBA BACKTICK BOOLCLASS CASE CATCH CHAR CHARCLASS CLASS COMA CORCHETE_D CORCHETE_I DEF DIFERENTE DIVISION DO DOBLE_PUNTO DOUBLE DOUBLECLASS ELSE EXTENDS FINAL FINALLY FLASE FLOAT FLOATCLASS FOR FOR_SOME FUNCION_FLECHA HASHTAG IF IGUAL IGUAL_COMPARACION IMPLICIT IMPORT INT INTCLASS ITERATOR LAZY LIBRERIA_IO LISTCLASS LLAVE_D LLAVE_I LONG LONGCLASS MACRO MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MOD MULTIPLICACION NEW NOT NULL OBJECT OR OVERRIDE PACKAGE PAR_D PAR_I PRINT PRINTLN PRIVATE PROTECTED PUNTO READLINE RETURN REVERSE SEALED STRING STRINGCLASS SUBGUION SUPER THIS THROW TO_DOUBLE TO_FLOAT TO_INT TO_LONG TRAIT TRUE TRY TYPE VAL VAR VARIABLE WHILE WITH YIELDcuerpo : contenido\n  | funcioncontenido : asignacion\n  | impresion\n  | entradaasignacion : VAR VARIABLE IGUAL valor\n  | VAL VARIABLE IGUAL valor\n  | VAL VARIABLE DOBLE_PUNTO tipo IGUAL valor\n  | VAR VARIABLE DOBLE_PUNTO tipo IGUAL valortipo : INTCLASS\n  | LONGCLASS\n  | DOUBLECLASS\n  | FLOATCLASS\n  | CHARCLASS\n  | STRINGCLASS\n  | LISTCLASS\n  | ARRAYCLASS\n  | BOOLCLASSvalor : INT\n  | LONG\n  | FLOAT\n  | DOUBLE\n  | STRING\n  | CHAR\n  | VARIABLE\n  | TRUE\n  | FLASEfuncion : DEF VARIABLE PAR_I parametro PAR_D IGUAL LLAVE_I contenido LLAVE_Dparametro : VARIABLE\n  | VARIABLE COMA parametroimpresion : PRINTLN PAR_I valor PAR_D\n  | PRINT PAR_I valor PAR_Dentrada : READLINE PAR_I PAR_D'
    
_lr_action_items = {'DEF':([0,],[7,]),'VAR':([0,61,],[8,8,]),'VAL':([0,61,],[9,9,]),'PRINTLN':([0,61,],[10,10,]),'PRINT':([0,61,],[11,11,]),'READLINE':([0,61,],[12,12,]),'$end':([1,2,3,4,5,6,25,26,27,28,29,30,31,32,33,35,38,49,51,52,59,60,63,],[0,-1,-2,-3,-4,-5,-19,-20,-21,-22,-23,-24,-25,-26,-27,-33,-6,-7,-31,-32,-9,-8,-28,]),'LLAVE_D':([4,5,6,25,26,27,28,29,30,31,32,33,35,38,49,51,52,59,60,62,],[-3,-4,-5,-19,-20,-21,-22,-23,-24,-25,-26,-27,-33,-6,-7,-31,-32,-9,-8,63,]),'VARIABLE':([7,8,9,16,17,19,20,22,53,55,56,],[13,14,15,31,31,36,31,31,36,31,31,]),'PAR_I':([10,11,12,13,],[16,17,18,19,]),'IGUAL':([14,15,39,40,41,42,43,44,45,46,47,48,50,54,],[20,22,55,-10,-11,-12,-13,-14,-15,-16,-17,-18,56,58,]),'DOBLE_PUNTO':([14,15,],[21,23,]),'INT':([16,17,20,22,55,56,],[25,25,25,25,25,25,]),'LONG':([16,17,20,22,55,56,],[26,26,26,26,26,26,]),'FLOAT':([16,17,20,22,55,56,],[27,27,27,27,27,27,]),'DOUBLE':([16,17,20,22,55,56,],[28,28,28,28,28,28,]),'STRING':([16,17,20,22,55,56,],[29,29,29,29,29,29,]),'CHAR':([16,17,20,22,55,56,],[30,30,30,30,30,30,]),'TRUE':([16,17,20,22,55,56,],[32,32,32,32,32,32,]),'FLASE':([16,17,20,22,55,56,],[33,33,33,33,33,33,]),'PAR_D':([18,24,25,26,27,28,29,30,31,32,33,34,36,37,57,],[35,51,-19,-20,-21,-22,-23,-24,-25,-26,-27,52,-29,54,-30,]),'INTCLASS':([21,23,],[40,40,]),'LONGCLASS':([21,23,],[41,41,]),'DOUBLECLASS':([21,23,],[42,42,]),'FLOATCLASS':([21,23,],[43,43,]),'CHARCLASS':([21,23,],[44,44,]),'STRINGCLASS':([21,23,],[45,45,]),'LISTCLASS':([21,23,],[46,46,]),'ARRAYCLASS':([21,23,],[47,47,]),'BOOLCLASS':([21,23,],[48,48,]),'COMA':([36,],[53,]),'LLAVE_I':([58,],[61,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,],[1,]),'contenido':([0,61,],[2,62,]),'funcion':([0,],[3,]),'asignacion':([0,61,],[4,4,]),'impresion':([0,61,],[5,5,]),'entrada':([0,61,],[6,6,]),'valor':([16,17,20,22,55,56,],[24,34,38,49,59,60,]),'parametro':([19,53,],[37,57,]),'tipo':([21,23,],[39,50,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> contenido','cuerpo',1,'p_cuerpo','sintax.py',10),
  ('cuerpo -> funcion','cuerpo',1,'p_cuerpo','sintax.py',11),
  ('contenido -> asignacion','contenido',1,'p_contenido','sintax.py',15),
  ('contenido -> impresion','contenido',1,'p_contenido','sintax.py',16),
  ('contenido -> entrada','contenido',1,'p_contenido','sintax.py',17),
  ('asignacion -> VAR VARIABLE IGUAL valor','asignacion',4,'p_asignacion','sintax.py',22),
  ('asignacion -> VAL VARIABLE IGUAL valor','asignacion',4,'p_asignacion','sintax.py',23),
  ('asignacion -> VAL VARIABLE DOBLE_PUNTO tipo IGUAL valor','asignacion',6,'p_asignacion','sintax.py',24),
  ('asignacion -> VAR VARIABLE DOBLE_PUNTO tipo IGUAL valor','asignacion',6,'p_asignacion','sintax.py',25),
  ('tipo -> INTCLASS','tipo',1,'p_tipo','sintax.py',29),
  ('tipo -> LONGCLASS','tipo',1,'p_tipo','sintax.py',30),
  ('tipo -> DOUBLECLASS','tipo',1,'p_tipo','sintax.py',31),
  ('tipo -> FLOATCLASS','tipo',1,'p_tipo','sintax.py',32),
  ('tipo -> CHARCLASS','tipo',1,'p_tipo','sintax.py',33),
  ('tipo -> STRINGCLASS','tipo',1,'p_tipo','sintax.py',34),
  ('tipo -> LISTCLASS','tipo',1,'p_tipo','sintax.py',35),
  ('tipo -> ARRAYCLASS','tipo',1,'p_tipo','sintax.py',36),
  ('tipo -> BOOLCLASS','tipo',1,'p_tipo','sintax.py',37),
  ('valor -> INT','valor',1,'p_valor','sintax.py',40),
  ('valor -> LONG','valor',1,'p_valor','sintax.py',41),
  ('valor -> FLOAT','valor',1,'p_valor','sintax.py',42),
  ('valor -> DOUBLE','valor',1,'p_valor','sintax.py',43),
  ('valor -> STRING','valor',1,'p_valor','sintax.py',44),
  ('valor -> CHAR','valor',1,'p_valor','sintax.py',45),
  ('valor -> VARIABLE','valor',1,'p_valor','sintax.py',46),
  ('valor -> TRUE','valor',1,'p_valor','sintax.py',47),
  ('valor -> FLASE','valor',1,'p_valor','sintax.py',48),
  ('funcion -> DEF VARIABLE PAR_I parametro PAR_D IGUAL LLAVE_I contenido LLAVE_D','funcion',9,'p_funcion','sintax.py',53),
  ('parametro -> VARIABLE','parametro',1,'p_parametro','sintax.py',56),
  ('parametro -> VARIABLE COMA parametro','parametro',3,'p_parametro','sintax.py',57),
  ('impresion -> PRINTLN PAR_I valor PAR_D','impresion',4,'p_impresion','sintax.py',62),
  ('impresion -> PRINT PAR_I valor PAR_D','impresion',4,'p_impresion','sintax.py',63),
  ('entrada -> READLINE PAR_I PAR_D','entrada',3,'p_entrada','sintax.py',68),
]

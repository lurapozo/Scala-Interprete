
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARRAYCLASS ARROBA BACKTICK BOOLCLASS CASE CATCH CHAR CHARCLASS CLASS COMA CORCHETE_D CORCHETE_I DEF DIFERENTE DIVISION DO DOBLE_PUNTO DOUBLE DOUBLECLASS ELSE EXTENDS FINAL FINALLY FLASE FLOAT FLOATCLASS FOR FOR_SOME FUNCION_FLECHA HASHTAG IF IGUAL IGUAL_COMPARACION IMPLICIT IMPORT INT INTCLASS ITERATOR LAZY LIBRERIA_IO LISTCLASS LLAVE_D LLAVE_I LONG LONGCLASS MACRO MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MOD MULTIPLICACION NEW NOT NULL OBJECT OR OVERRIDE PACKAGE PAR_D PAR_I PRINT PRINTLN PRIVATE PROTECTED PUNTO READLINE RETURN REVERSE SEALED STRING STRINGCLASS SUBGUION SUPER THIS THROW TO TO_DOUBLE TO_FLOAT TO_INT TO_LONG TRAIT TRUE TRY TYPE UNTIL VAL VAR VARIABLE WHILE WITH YIELD inicio : OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D\n  | IMPORT io inicio io : VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINEcuerpo : funcion\n  | funcall\n  | impresion\n  | entrada\n  | asignacion\n  | while\n  | for\n  | match\n  | if\n  | funcion cuerpo\n  | asignacion cuerpo\n  | while cuerpo\n  | for cuerpo\n  | if cuerpo\n  | match cuerpocontenido : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entrada\n  | while\n  | for\n  | match\n  | if\n  | aritmetica\n  | asignacion contenido\n  | reasignacion contenido\n  | funcall contenido\n  | impresion contenido\n  | entrada contenido\n  | while contenido\n  | for contenido\n  | if contenido\n  | match contenido\n  | aritmetica contenidocontenidoLine : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entradaasignacion : VAR VARIABLE IGUAL VARIABLE\n  | VAL VARIABLE IGUAL VARIABLE\n  | VAR VARIABLE IGUAL aritmetica\n  | VAL VARIABLE IGUAL aritmetica\n  | VAR VARIABLE IGUAL returnfun\n  | VAL VARIABLE IGUAL returnfun\n  | asignacionLong\n  | asignacionInt\n  | asignacionFloat\n  | asignacionDouble\n  | asignacionString\n  | asignacionChar\n  | asignacionBoolean\n  | array\n  | listasignacionLong : VAR VARIABLE IGUAL LONG\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG\n  | VAL VARIABLE IGUAL LONG\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLEasignacionInt : VAR VARIABLE IGUAL INT\n  | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT\n  | VAL VARIABLE IGUAL INT\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT\n  | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLEasignacionFloat : VAR VARIABLE IGUAL FLOAT\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT\n  | VAL VARIABLE IGUAL FLOAT\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLEasignacionDouble : VAR VARIABLE IGUAL DOUBLE\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE\n  | VAL VARIABLE IGUAL DOUBLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLEasignacionString : VAR VARIABLE IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAL VARIABLE IGUAL STRING\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLEasignacionChar : VAR VARIABLE IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAL VARIABLE IGUAL CHAR\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLEasignacionBoolean : VAR VARIABLE IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAL VARIABLE IGUAL booleanos\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLEreasignacion :  VARIABLE IGUAL valor\n      | VARIABLE IGUAL returnfun\n      | VARIABLE IGUAL aritmetica\n      | VARIABLE PAR_I INT PAR_D IGUAL valortipo : CHARCLASS\n  | STRINGCLASS\n  | BOOLCLASS\n  | INTCLASS\n  | LONGCLASS\n  | DOUBLECLASS\n  | FLOATCLASS\n  | ARRAYCLASS CORCHETE_I tipo CORCHETE_D\n  | LISTCLASS CORCHETE_I tipo CORCHETE_Dvalor : STRING\n  | CHAR\n  | VARIABLE\n  | numeros\n  | booleanos\n  | VARIABLE PAR_I VARIABLE PAR_D\n  | VARIABLE PAR_I INT PAR_Dbooleanos : TRUE\n  | FLASEnumeros : INT\n  | LONG\n  | FLOAT\n  | DOUBLEfuncion : DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D\n  | DEF VARIABLE parametro LLAVE_I contenido LLAVE_Ddeclaracion : VARIABLE DOBLE_PUNTO tipodeclaracion :  VARIABLE DOBLE_PUNTO tipo IGUAL valor parametro : parametros\n  | PAR_I PAR_D parametros : PAR_I declaracion PAR_D \n    | PAR_I declaracion PAR_D parametrosfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D\n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D \n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_Ddectipo : DOBLE_PUNTO tipo dectipoTupla : DOBLE_PUNTO PAR_I tipos PAR_Dtipos : tipo\n    | tipo tiposentrytiposentry : COMA tipo \n  | COMA tipo tiposentryimpresion : PRINTLN PAR_I valorI PAR_D\n  | PRINT PAR_I valorI PAR_DvalorI : valor MAS valorI\n  | valorentrada : READLINE PAR_I PAR_Dfuncall : VARIABLE varparen varparen : PAR_I valores PAR_D\n  | PAR_I PAR_D\n  | varparen PAR_I valores PAR_D\n  | varparen PAR_I PAR_D returnfun : returnCastable\n      | castingcallreturnCastable : entrada\n      | funcallcastingcall : returnCastable PUNTO castingfun\n      | VARIABLE PUNTO castingfuncastingfun : TO_INT\n    | TO_DOUBLE\n    | TO_FLOAT\n    | TO_LONGarray : VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_Dlist : VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_Dvalores : valor\n  | valor COMA valorestuple : PAR_I valores PAR_Dasignacion : VAR VARIABLE IGUAL tuple \n      | VAL VARIABLE IGUAL tuplewhile : WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_Dfor : FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_Dmatch : VARIABLE MATCH  LLAVE_I cases LLAVE_Dcases : casesInt\n    | casesLgn\n    | casesFlt\n    | casesDob\n    | casesStr\n    | casesChar\n    | casesBoolcaseInt : CASE INT FUNCION_FLECHA codeBlock casesInt : caseInt \n      | caseInt casesInt\n      | caseInt defcasecaseLgn : CASE LONG FUNCION_FLECHA codeBlock casesLgn : caseLgn \n      | caseLgn casesLgn\n      | caseLgn defcasecaseFlt : CASE FLOAT FUNCION_FLECHA codeBlock casesFlt : caseFlt \n      | caseFlt casesFlt\n      | caseFlt defcasecaseDob : CASE DOUBLE FUNCION_FLECHA codeBlock casesDob : caseDob \n      | caseDob casesDob\n      | caseDob defcasecaseStr : CASE STRING FUNCION_FLECHA codeBlock casesStr : caseStr\n      | caseStr casesStr\n      | caseStr defcasecaseChar : CASE CHAR FUNCION_FLECHA codeBlock casesChar : caseChar\n      | caseChar casesChar\n      | caseChar defcasecaseBool : CASE booleanos FUNCION_FLECHA codeBlock casesBool : caseBool\n      | caseBool casesBool\n      | caseBool defcasedefcase : CASE SUBGUION FUNCION_FLECHA codeBlock codeBlock : contenidoLine\n      | LLAVE_I contenido LLAVE_Dif : IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | if elseif\n  | if else\n  elseif : ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseifelse : ELSE LLAVE_I contenido LLAVE_D\n  | elseif elsecondicional : valorC logicos condicional\n  | valorCvalorC : VARIABLE\n  | booleanos\n  | relacional\n  | NOT VARIABLE\n  | NOT booleanos\n  | NOT relacional\n  logicos : AND\n  | OR\n  | NOTrelacional : numeros comparacion numeros\n  | aritmetica comparacion aritmetica\n  | aritmetica comparacion numeros\n  | numeros comparacion aritmetica\n  | booleanos comparacion booleanos\n  | STRING comparacion STRING\n  | CHAR comparacion CHAR\n  | VARIABLE comparacion numeros\n  | numeros comparacion VARIABLE\n  | VARIABLE comparacion booleanos\n  | booleanos comparacion VARIABLE\n  | VARIABLE comparacion STRING\n  | STRING comparacion VARIABLE\n  | VARIABLE comparacion CHAR\n  | CHAR comparacion VARIABLE\n  | VARIABLE comparacion VARIABLEcomparacion : IGUAL_COMPARACION\n  | DIFERENTE\n  | MAYOR\n  | MENORaritmetica : numeros aritmeticos numeros\n  | VARIABLE aritmeticos numeros\n  | numeros aritmeticos VARIABLE\n  | VARIABLE aritmeticos VARIABLE\n  | aritmetica aritmeticos numeros\n  | aritmetica aritmeticos VARIABLEaritmeticos : MENOS\n  | MAS\n  | MULTIPLICACION\n  | DIVISION\n  | MODasignacion : VAR VARIABLE DOBLE_PUNTO  dectupla\n      | VAL VARIABLE DOBLE_PUNTO dectupla dectupla : PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D\n              | PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D\n              | PAR_I STRINGCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D\n              | PAR_I STRINGCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D dectupla : PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D\n              | PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D\n              | PAR_I FLOATCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D\n              | PAR_I FLOATCLASS COMA  INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D dectupla : PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D\n              | PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D\n              | PAR_I DOUBLECLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D\n              | PAR_I DOUBLECLASS COMA  INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D dectupla : PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D\n              | PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D\n              | PAR_I LONGCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D\n              | PAR_I LONGCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT  PAR_D dectupla : PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D\n              | PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D\n              | PAR_I INTCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D\n              | PAR_I INTCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D '
    
_lr_action_items = {'OBJECT':([0,5,357,],[2,2,-3,]),'IMPORT':([0,5,357,],[3,3,-3,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,5,],[1,8,]),'io':([3,],[5,]),'cuerpo':([7,12,16,17,18,19,20,],[11,44,45,46,47,48,49,]),'funcion':([7,12,16,17,18,19,20,],[12,12,12,12,12,12,12,]),'funcall':([7,12,16,17,18,19,20,83,91,93,132,133,134,135,136,137,138,139,140,141,145,280,282,328,356,359,360,361,362,363,364,365,377,378,439,442,455,460,498,508,513,541,592,593,630,631,],[13,13,13,13,13,13,13,134,171,171,134,134,134,134,134,134,134,134,134,134,134,171,134,134,134,445,445,445,445,445,445,445,134,134,445,134,134,171,134,171,171,134,134,134,134,134,]),'impresion':([7,12,16,17,18,19,20,83,132,133,134,135,136,137,138,139,140,141,145,282,328,356,359,360,361,362,363,364,365,377,378,439,442,455,498,541,592,593,630,631,],[14,14,14,14,14,14,14,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,446,446,446,446,446,446,446,135,135,446,135,135,135,135,135,135,135,135,]),'entrada':([7,12,16,17,18,19,20,83,91,93,132,133,134,135,136,137,138,139,140,141,145,280,282,328,356,359,360,361,362,363,364,365,377,378,439,442,455,460,498,508,513,541,592,593,630,631,],[15,15,15,15,15,15,15,136,170,170,136,136,136,136,136,136,136,136,136,136,136,170,136,136,136,447,447,447,447,447,447,447,136,136,447,136,136,170,136,170,170,136,136,136,136,136,]),'asignacion':([7,12,16,17,18,19,20,83,132,133,134,135,136,137,138,139,140,141,145,282,328,356,359,360,361,362,363,364,365,377,378,439,442,455,498,541,592,593,630,631,],[16,16,16,16,16,16,16,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,443,443,443,443,443,443,443,132,132,443,132,132,132,132,132,132,132,132,]),'while':([7,12,16,17,18,19,20,83,132,133,134,135,136,137,138,139,140,141,145,282,328,356,377,378,442,455,498,541,592,593,630,631,],[17,17,17,17,17,17,17,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'for':([7,12,16,17,18,19,20,83,132,133,134,135,136,137,138,139,140,141,145,282,328,356,377,378,442,455,498,541,592,593,630,631,],[18,18,18,18,18,18,18,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'match':([7,12,16,17,18,19,20,83,132,133,134,135,136,137,138,139,140,141,145,282,328,356,377,378,442,455,498,541,592,593,630,631,],[19,19,19,19,19,19,19,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,]),'if':([7,12,16,17,18,19,20,83,132,133,134,135,136,137,138,139,140,141,145,282,328,356,377,378,442,455,498,541,592,593,630,631,],[20,20,20,20,20,20,20,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'asignacionLong':([7,12,16,17,18,19,20,83,132,133,134,135,136,137,138,139,140,141,145,282,328,356,359,360,361,362,363,364,365,377,378,439,442,455,498,541,592,593,630,631,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'asignacionInt':([7,12,16,17,18,19,20,83,132,133,134,135,136,137,138,139,140,141,145,282,328,356,359,360,361,362,363,364,365,377,378,439,442,455,498,541,592,593,630,631,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'asignacionFloat':([7,12,16,17,18,19,20,83,132,133,134,135,136,137,138,139,140,141,145,282,328,356,359,360,361,362,363,364,365,377,378,439,442,455,498,541,592,593,630,631,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'asignacionDouble':([7,12,16,17,18,19,20,83,132,133,134,135,136,137,138,139,140,141,145,282,328,356,359,360,361,362,363,364,365,377,378,439,442,455,498,541,592,593,630,631,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'asignacionString':([7,12,16,17,18,19,20,83,132,133,134,135,136,137,138,139,140,141,145,282,328,356,359,360,361,362,363,364,365,377,378,439,442,455,498,541,592,593,630,631,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'asignacionChar':([7,12,16,17,18,19,20,83,132,133,134,135,136,137,138,139,140,141,145,282,328,356,359,360,361,362,363,364,365,377,378,439,442,455,498,541,592,593,630,631,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'asignacionBoolean':([7,12,16,17,18,19,20,83,132,133,134,135,136,137,138,139,140,141,145,282,328,356,359,360,361,362,363,364,365,377,378,439,442,455,498,541,592,593,630,631,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'array':([7,12,16,17,18,19,20,83,132,133,134,135,136,137,138,139,140,141,145,282,328,356,359,360,361,362,363,364,365,377,378,439,442,455,498,541,592,593,630,631,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'list':([7,12,16,17,18,19,20,83,132,133,134,135,136,137,138,139,140,141,145,282,328,356,359,360,361,362,363,364,365,377,378,439,442,455,498,541,592,593,630,631,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'varparen':([10,142,155,182,369,448,509,550,558,],[40,40,40,40,40,40,40,40,40,]),'elseif':([20,50,79,140,548,],[50,79,79,50,595,]),'else':([20,50,79,140,],[51,80,80,51,]),'valores':([42,63,128,167,281,301,317,318,456,603,625,627,659,],[65,109,265,302,65,391,414,415,65,634,656,658,689,]),'valor':([42,54,55,63,128,153,167,280,281,301,317,318,456,460,467,507,508,603,625,627,659,],[67,88,88,67,67,88,67,370,67,67,67,67,67,510,517,549,551,67,67,67,67,]),'numeros':([42,54,55,59,61,63,83,91,93,100,128,130,132,133,134,135,136,137,138,139,140,141,145,153,167,206,210,211,225,226,227,228,280,281,282,301,317,318,328,356,377,378,442,455,456,460,467,498,507,508,541,592,593,603,625,627,630,631,659,],[71,71,71,101,101,71,143,143,143,101,71,101,143,143,143,143,143,143,143,143,143,143,143,71,71,101,331,336,339,342,345,347,373,71,143,71,71,71,143,143,143,143,143,143,71,373,71,143,71,373,143,143,143,71,71,71,143,143,71,]),'booleanos':([42,54,55,59,61,63,91,93,100,126,128,130,153,167,206,210,221,257,280,281,301,310,317,318,325,456,460,467,507,508,603,625,627,659,],[72,72,72,98,98,72,165,192,223,264,72,98,72,72,98,332,337,264,72,72,72,407,72,72,429,72,72,72,72,72,72,72,72,72,]),'parametro':([53,],[84,]),'parametros':([53,297,],[85,384,]),'valorI':([54,55,153,],[87,89,299,]),'condicional':([59,61,130,206,],[95,107,268,329,]),'valorC':([59,61,130,206,],[96,96,96,96,]),'relacional':([59,61,100,130,206,],[99,99,224,99,99,]),'aritmetica':([59,61,83,91,93,100,130,132,133,134,135,136,137,138,139,140,141,145,206,225,227,280,282,328,356,377,378,442,455,460,498,508,541,592,593,630,631,],[102,102,141,156,183,102,102,141,141,141,141,141,141,141,141,141,141,141,102,340,344,372,141,141,141,141,141,141,141,512,141,553,141,141,141,141,141,]),'cases':([64,],[111,]),'casesInt':([64,119,],[112,237,]),'casesLgn':([64,120,],[113,240,]),'casesFlt':([64,121,],[114,243,]),'casesDob':([64,122,],[115,246,]),'casesStr':([64,123,],[116,249,]),'casesChar':([64,124,],[117,252,]),'casesBool':([64,125,],[118,255,]),'caseInt':([64,119,],[119,119,]),'caseLgn':([64,120,],[120,120,]),'caseFlt':([64,121,],[121,121,]),'caseDob':([64,122,],[122,122,]),'caseStr':([64,123,],[123,123,]),'caseChar':([64,124,],[124,124,]),'caseBool':([64,125,],[125,125,]),'contenido':([83,132,133,134,135,136,137,138,139,140,141,145,282,328,356,377,378,442,455,498,541,592,593,630,631,],[131,270,271,272,273,274,275,276,277,278,279,283,375,432,438,459,461,503,504,544,588,632,633,660,661,]),'reasignacion':([83,132,133,134,135,136,137,138,139,140,141,145,282,328,356,359,360,361,362,363,364,365,377,378,439,442,455,498,541,592,593,630,631,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,444,444,444,444,444,444,444,133,133,444,133,133,133,133,133,133,133,133,]),'dectipo':([84,],[146,]),'dectipoTupla':([84,],[147,]),'declaracion':([86,383,],[150,150,]),'returnfun':([91,93,280,460,508,513,],[157,184,371,511,552,560,]),'tuple':([91,93,513,],[158,185,559,]),'returnCastable':([91,93,280,460,508,513,],[168,168,168,168,168,168,]),'castingcall':([91,93,280,460,508,513,],[169,169,169,169,169,169,]),'dectupla':([92,94,],[172,195,]),'logicos':([96,],[206,]),'comparacion':([97,98,101,102,103,104,222,223,],[210,221,225,227,229,230,210,221,]),'aritmeticos':([97,101,102,141,142,143,155,156,182,183,222,339,340,341,344,345,346,369,372,373,509,512,550,553,],[211,226,228,228,211,226,211,228,211,228,211,226,228,211,228,226,211,211,228,226,211,228,211,228,]),'defcase':([119,120,121,122,123,124,125,],[238,241,244,247,250,253,256,]),'tipo':([148,287,298,311,326,327,381,382,464,635,657,],[286,380,385,408,430,431,465,466,514,665,687,]),'tipos':([287,],[379,]),'castingfun':([300,303,],[386,393,]),'codeBlock':([359,360,361,362,363,364,365,439,],[440,449,450,451,452,453,454,502,]),'contenidoLine':([359,360,361,362,363,364,365,439,],[441,441,441,441,441,441,441,441,]),'tiposentry':([380,514,],[463,561,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D','inicio',5,'p_inicio','sintax.py',12),
  ('inicio -> IMPORT io inicio','inicio',3,'p_inicio','sintax.py',13),
  ('io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE','io',7,'p_io','sintax.py',16),
  ('cuerpo -> funcion','cuerpo',1,'p_cuerpo','sintax.py',19),
  ('cuerpo -> funcall','cuerpo',1,'p_cuerpo','sintax.py',20),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintax.py',21),
  ('cuerpo -> entrada','cuerpo',1,'p_cuerpo','sintax.py',22),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintax.py',23),
  ('cuerpo -> while','cuerpo',1,'p_cuerpo','sintax.py',24),
  ('cuerpo -> for','cuerpo',1,'p_cuerpo','sintax.py',25),
  ('cuerpo -> match','cuerpo',1,'p_cuerpo','sintax.py',26),
  ('cuerpo -> if','cuerpo',1,'p_cuerpo','sintax.py',27),
  ('cuerpo -> funcion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',28),
  ('cuerpo -> asignacion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',29),
  ('cuerpo -> while cuerpo','cuerpo',2,'p_cuerpo','sintax.py',30),
  ('cuerpo -> for cuerpo','cuerpo',2,'p_cuerpo','sintax.py',31),
  ('cuerpo -> if cuerpo','cuerpo',2,'p_cuerpo','sintax.py',32),
  ('cuerpo -> match cuerpo','cuerpo',2,'p_cuerpo','sintax.py',33),
  ('contenido -> asignacion','contenido',1,'p_contenido','sintax.py',37),
  ('contenido -> reasignacion','contenido',1,'p_contenido','sintax.py',38),
  ('contenido -> funcall','contenido',1,'p_contenido','sintax.py',39),
  ('contenido -> impresion','contenido',1,'p_contenido','sintax.py',40),
  ('contenido -> entrada','contenido',1,'p_contenido','sintax.py',41),
  ('contenido -> while','contenido',1,'p_contenido','sintax.py',42),
  ('contenido -> for','contenido',1,'p_contenido','sintax.py',43),
  ('contenido -> match','contenido',1,'p_contenido','sintax.py',44),
  ('contenido -> if','contenido',1,'p_contenido','sintax.py',45),
  ('contenido -> aritmetica','contenido',1,'p_contenido','sintax.py',46),
  ('contenido -> asignacion contenido','contenido',2,'p_contenido','sintax.py',47),
  ('contenido -> reasignacion contenido','contenido',2,'p_contenido','sintax.py',48),
  ('contenido -> funcall contenido','contenido',2,'p_contenido','sintax.py',49),
  ('contenido -> impresion contenido','contenido',2,'p_contenido','sintax.py',50),
  ('contenido -> entrada contenido','contenido',2,'p_contenido','sintax.py',51),
  ('contenido -> while contenido','contenido',2,'p_contenido','sintax.py',52),
  ('contenido -> for contenido','contenido',2,'p_contenido','sintax.py',53),
  ('contenido -> if contenido','contenido',2,'p_contenido','sintax.py',54),
  ('contenido -> match contenido','contenido',2,'p_contenido','sintax.py',55),
  ('contenido -> aritmetica contenido','contenido',2,'p_contenido','sintax.py',56),
  ('contenidoLine -> asignacion','contenidoLine',1,'p_contenidoLine','sintax.py',60),
  ('contenidoLine -> reasignacion','contenidoLine',1,'p_contenidoLine','sintax.py',61),
  ('contenidoLine -> funcall','contenidoLine',1,'p_contenidoLine','sintax.py',62),
  ('contenidoLine -> impresion','contenidoLine',1,'p_contenidoLine','sintax.py',63),
  ('contenidoLine -> entrada','contenidoLine',1,'p_contenidoLine','sintax.py',64),
  ('asignacion -> VAR VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',68),
  ('asignacion -> VAL VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',69),
  ('asignacion -> VAR VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',70),
  ('asignacion -> VAL VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',71),
  ('asignacion -> VAR VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',72),
  ('asignacion -> VAL VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',73),
  ('asignacion -> asignacionLong','asignacion',1,'p_asignacion','sintax.py',74),
  ('asignacion -> asignacionInt','asignacion',1,'p_asignacion','sintax.py',75),
  ('asignacion -> asignacionFloat','asignacion',1,'p_asignacion','sintax.py',76),
  ('asignacion -> asignacionDouble','asignacion',1,'p_asignacion','sintax.py',77),
  ('asignacion -> asignacionString','asignacion',1,'p_asignacion','sintax.py',78),
  ('asignacion -> asignacionChar','asignacion',1,'p_asignacion','sintax.py',79),
  ('asignacion -> asignacionBoolean','asignacion',1,'p_asignacion','sintax.py',80),
  ('asignacion -> array','asignacion',1,'p_asignacion','sintax.py',81),
  ('asignacion -> list','asignacion',1,'p_asignacion','sintax.py',82),
  ('asignacionLong -> VAR VARIABLE IGUAL LONG','asignacionLong',4,'p_asignacionLong','sintax.py',85),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG','asignacionLong',6,'p_asignacionLong','sintax.py',86),
  ('asignacionLong -> VAL VARIABLE IGUAL LONG','asignacionLong',4,'p_asignacionLong','sintax.py',87),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG','asignacionLong',6,'p_asignacionLong','sintax.py',88),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',89),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',90),
  ('asignacionInt -> VAR VARIABLE IGUAL INT','asignacionInt',4,'p_asignacionInt','sintax.py',93),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT','asignacionInt',6,'p_asignacionInt','sintax.py',94),
  ('asignacionInt -> VAL VARIABLE IGUAL INT','asignacionInt',4,'p_asignacionInt','sintax.py',95),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT','asignacionInt',6,'p_asignacionInt','sintax.py',96),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',97),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',98),
  ('asignacionFloat -> VAR VARIABLE IGUAL FLOAT','asignacionFloat',4,'p_asignacionFloat','sintax.py',101),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT','asignacionFloat',6,'p_asignacionFloat','sintax.py',102),
  ('asignacionFloat -> VAL VARIABLE IGUAL FLOAT','asignacionFloat',4,'p_asignacionFloat','sintax.py',103),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT','asignacionFloat',6,'p_asignacionFloat','sintax.py',104),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',105),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',106),
  ('asignacionDouble -> VAR VARIABLE IGUAL DOUBLE','asignacionDouble',4,'p_asignacionDouble','sintax.py',109),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',110),
  ('asignacionDouble -> VAL VARIABLE IGUAL DOUBLE','asignacionDouble',4,'p_asignacionDouble','sintax.py',111),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',112),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',113),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',114),
  ('asignacionString -> VAR VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',117),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',118),
  ('asignacionString -> VAL VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',119),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',120),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',121),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',122),
  ('asignacionChar -> VAR VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',125),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',126),
  ('asignacionChar -> VAL VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',127),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',128),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',129),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',130),
  ('asignacionBoolean -> VAR VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',133),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',134),
  ('asignacionBoolean -> VAL VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',135),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',136),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',137),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',138),
  ('reasignacion -> VARIABLE IGUAL valor','reasignacion',3,'p_reasignacion','sintax.py',142),
  ('reasignacion -> VARIABLE IGUAL returnfun','reasignacion',3,'p_reasignacion','sintax.py',143),
  ('reasignacion -> VARIABLE IGUAL aritmetica','reasignacion',3,'p_reasignacion','sintax.py',144),
  ('reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor','reasignacion',6,'p_reasignacion','sintax.py',145),
  ('tipo -> CHARCLASS','tipo',1,'p_tipo','sintax.py',148),
  ('tipo -> STRINGCLASS','tipo',1,'p_tipo','sintax.py',149),
  ('tipo -> BOOLCLASS','tipo',1,'p_tipo','sintax.py',150),
  ('tipo -> INTCLASS','tipo',1,'p_tipo','sintax.py',151),
  ('tipo -> LONGCLASS','tipo',1,'p_tipo','sintax.py',152),
  ('tipo -> DOUBLECLASS','tipo',1,'p_tipo','sintax.py',153),
  ('tipo -> FLOATCLASS','tipo',1,'p_tipo','sintax.py',154),
  ('tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',155),
  ('tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',156),
  ('valor -> STRING','valor',1,'p_valor','sintax.py',159),
  ('valor -> CHAR','valor',1,'p_valor','sintax.py',160),
  ('valor -> VARIABLE','valor',1,'p_valor','sintax.py',161),
  ('valor -> numeros','valor',1,'p_valor','sintax.py',162),
  ('valor -> booleanos','valor',1,'p_valor','sintax.py',163),
  ('valor -> VARIABLE PAR_I VARIABLE PAR_D','valor',4,'p_valor','sintax.py',164),
  ('valor -> VARIABLE PAR_I INT PAR_D','valor',4,'p_valor','sintax.py',165),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintax.py',168),
  ('booleanos -> FLASE','booleanos',1,'p_booleanos','sintax.py',169),
  ('numeros -> INT','numeros',1,'p_numeros','sintax.py',172),
  ('numeros -> LONG','numeros',1,'p_numeros','sintax.py',173),
  ('numeros -> FLOAT','numeros',1,'p_numeros','sintax.py',174),
  ('numeros -> DOUBLE','numeros',1,'p_numeros','sintax.py',175),
  ('funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D','funcion',7,'p_funcion','sintax.py',180),
  ('funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D','funcion',6,'p_funcion','sintax.py',181),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo','declaracion',3,'p_declaracion','sintax.py',186),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor','declaracion',5,'p_declaracion_defecto','sintax.py',189),
  ('parametro -> parametros','parametro',1,'p_parametro','sintax.py',192),
  ('parametro -> PAR_I PAR_D','parametro',2,'p_parametro','sintax.py',193),
  ('parametros -> PAR_I declaracion PAR_D','parametros',3,'p_parametros','sintax.py',196),
  ('parametros -> PAR_I declaracion PAR_D parametros','parametros',4,'p_parametros','sintax.py',197),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D','funcion',10,'p_funcion_return','sintax.py',202),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_return','sintax.py',203),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_return','sintax.py',204),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D','funcion',10,'p_funcion_return','sintax.py',205),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',208),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',209),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',210),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',211),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',214),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',215),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',216),
  ('dectipo -> DOBLE_PUNTO tipo','dectipo',2,'p_dectipo','sintax.py',219),
  ('dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D','dectipoTupla',4,'p_dectipoTupla','sintax.py',222),
  ('tipos -> tipo','tipos',1,'p_tipos','sintax.py',225),
  ('tipos -> tipo tiposentry','tipos',2,'p_tipos','sintax.py',226),
  ('tiposentry -> COMA tipo','tiposentry',2,'p_tipoentry','sintax.py',229),
  ('tiposentry -> COMA tipo tiposentry','tiposentry',3,'p_tipoentry','sintax.py',230),
  ('impresion -> PRINTLN PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',235),
  ('impresion -> PRINT PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',236),
  ('valorI -> valor MAS valorI','valorI',3,'p_valorI','sintax.py',239),
  ('valorI -> valor','valorI',1,'p_valorI','sintax.py',240),
  ('entrada -> READLINE PAR_I PAR_D','entrada',3,'p_entrada','sintax.py',245),
  ('funcall -> VARIABLE varparen','funcall',2,'p_funcall','sintax.py',249),
  ('varparen -> PAR_I valores PAR_D','varparen',3,'p_varparen','sintax.py',252),
  ('varparen -> PAR_I PAR_D','varparen',2,'p_varparen','sintax.py',253),
  ('varparen -> varparen PAR_I valores PAR_D','varparen',4,'p_varparen','sintax.py',254),
  ('varparen -> varparen PAR_I PAR_D','varparen',3,'p_varparen','sintax.py',255),
  ('returnfun -> returnCastable','returnfun',1,'p_returnfun','sintax.py',258),
  ('returnfun -> castingcall','returnfun',1,'p_returnfun','sintax.py',259),
  ('returnCastable -> entrada','returnCastable',1,'p_returnCastable','sintax.py',262),
  ('returnCastable -> funcall','returnCastable',1,'p_returnCastable','sintax.py',263),
  ('castingcall -> returnCastable PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',268),
  ('castingcall -> VARIABLE PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',269),
  ('castingfun -> TO_INT','castingfun',1,'p_castingfun','sintax.py',273),
  ('castingfun -> TO_DOUBLE','castingfun',1,'p_castingfun','sintax.py',274),
  ('castingfun -> TO_FLOAT','castingfun',1,'p_castingfun','sintax.py',275),
  ('castingfun -> TO_LONG','castingfun',1,'p_castingfun','sintax.py',276),
  ('array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',281),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D','array',12,'p_array','sintax.py',282),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',283),
  ('array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',284),
  ('array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D','array',12,'p_array','sintax.py',285),
  ('array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',286),
  ('list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D','list',7,'p_list','sintax.py',290),
  ('list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D','list',13,'p_list','sintax.py',291),
  ('list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D','list',12,'p_list','sintax.py',292),
  ('valores -> valor','valores',1,'p_valores','sintax.py',296),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintax.py',297),
  ('tuple -> PAR_I valores PAR_D','tuple',3,'p_tuple','sintax.py',301),
  ('asignacion -> VAR VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',304),
  ('asignacion -> VAL VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',305),
  ('while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','while',7,'p_while','sintax.py',313),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',10,'p_for','sintax.py',317),
  ('for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',9,'p_for','sintax.py',318),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',319),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',320),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',321),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',322),
  ('match -> VARIABLE MATCH LLAVE_I cases LLAVE_D','match',5,'p_match','sintax.py',326),
  ('cases -> casesInt','cases',1,'p_cases','sintax.py',329),
  ('cases -> casesLgn','cases',1,'p_cases','sintax.py',330),
  ('cases -> casesFlt','cases',1,'p_cases','sintax.py',331),
  ('cases -> casesDob','cases',1,'p_cases','sintax.py',332),
  ('cases -> casesStr','cases',1,'p_cases','sintax.py',333),
  ('cases -> casesChar','cases',1,'p_cases','sintax.py',334),
  ('cases -> casesBool','cases',1,'p_cases','sintax.py',335),
  ('caseInt -> CASE INT FUNCION_FLECHA codeBlock','caseInt',4,'p_caseInt','sintax.py',338),
  ('casesInt -> caseInt','casesInt',1,'p_casesInt','sintax.py',341),
  ('casesInt -> caseInt casesInt','casesInt',2,'p_casesInt','sintax.py',342),
  ('casesInt -> caseInt defcase','casesInt',2,'p_casesInt','sintax.py',343),
  ('caseLgn -> CASE LONG FUNCION_FLECHA codeBlock','caseLgn',4,'p_caseLgn','sintax.py',346),
  ('casesLgn -> caseLgn','casesLgn',1,'p_casesLgn','sintax.py',349),
  ('casesLgn -> caseLgn casesLgn','casesLgn',2,'p_casesLgn','sintax.py',350),
  ('casesLgn -> caseLgn defcase','casesLgn',2,'p_casesLgn','sintax.py',351),
  ('caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock','caseFlt',4,'p_caseFlt','sintax.py',354),
  ('casesFlt -> caseFlt','casesFlt',1,'p_casesFlt','sintax.py',357),
  ('casesFlt -> caseFlt casesFlt','casesFlt',2,'p_casesFlt','sintax.py',358),
  ('casesFlt -> caseFlt defcase','casesFlt',2,'p_casesFlt','sintax.py',359),
  ('caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock','caseDob',4,'p_caseDob','sintax.py',362),
  ('casesDob -> caseDob','casesDob',1,'p_casesDob','sintax.py',365),
  ('casesDob -> caseDob casesDob','casesDob',2,'p_casesDob','sintax.py',366),
  ('casesDob -> caseDob defcase','casesDob',2,'p_casesDob','sintax.py',367),
  ('caseStr -> CASE STRING FUNCION_FLECHA codeBlock','caseStr',4,'p_caseStr','sintax.py',370),
  ('casesStr -> caseStr','casesStr',1,'p_casesStr','sintax.py',373),
  ('casesStr -> caseStr casesStr','casesStr',2,'p_casesStr','sintax.py',374),
  ('casesStr -> caseStr defcase','casesStr',2,'p_casesStr','sintax.py',375),
  ('caseChar -> CASE CHAR FUNCION_FLECHA codeBlock','caseChar',4,'p_caseChar','sintax.py',378),
  ('casesChar -> caseChar','casesChar',1,'p_casesChar','sintax.py',381),
  ('casesChar -> caseChar casesChar','casesChar',2,'p_casesChar','sintax.py',382),
  ('casesChar -> caseChar defcase','casesChar',2,'p_casesChar','sintax.py',383),
  ('caseBool -> CASE booleanos FUNCION_FLECHA codeBlock','caseBool',4,'p_caseBool','sintax.py',386),
  ('casesBool -> caseBool','casesBool',1,'p_casesBool','sintax.py',389),
  ('casesBool -> caseBool casesBool','casesBool',2,'p_casesBool','sintax.py',390),
  ('casesBool -> caseBool defcase','casesBool',2,'p_casesBool','sintax.py',391),
  ('defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock','defcase',4,'p_defcase','sintax.py',395),
  ('codeBlock -> contenidoLine','codeBlock',1,'p_codeBlock','sintax.py',398),
  ('codeBlock -> LLAVE_I contenido LLAVE_D','codeBlock',3,'p_codeBlock','sintax.py',399),
  ('if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','if',7,'p_if','sintax.py',403),
  ('if -> if elseif','if',2,'p_if','sintax.py',404),
  ('if -> if else','if',2,'p_if','sintax.py',405),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','elseif',8,'p_elseif','sintax.py',409),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif','elseif',9,'p_elseif','sintax.py',410),
  ('else -> ELSE LLAVE_I contenido LLAVE_D','else',4,'p_else','sintax.py',413),
  ('else -> elseif else','else',2,'p_else','sintax.py',414),
  ('condicional -> valorC logicos condicional','condicional',3,'p_condicional','sintax.py',418),
  ('condicional -> valorC','condicional',1,'p_condicional','sintax.py',419),
  ('valorC -> VARIABLE','valorC',1,'p_valorC','sintax.py',422),
  ('valorC -> booleanos','valorC',1,'p_valorC','sintax.py',423),
  ('valorC -> relacional','valorC',1,'p_valorC','sintax.py',424),
  ('valorC -> NOT VARIABLE','valorC',2,'p_valorC','sintax.py',425),
  ('valorC -> NOT booleanos','valorC',2,'p_valorC','sintax.py',426),
  ('valorC -> NOT relacional','valorC',2,'p_valorC','sintax.py',427),
  ('logicos -> AND','logicos',1,'p_logicos','sintax.py',430),
  ('logicos -> OR','logicos',1,'p_logicos','sintax.py',431),
  ('logicos -> NOT','logicos',1,'p_logicos','sintax.py',432),
  ('relacional -> numeros comparacion numeros','relacional',3,'p_relacional','sintax.py',437),
  ('relacional -> aritmetica comparacion aritmetica','relacional',3,'p_relacional','sintax.py',438),
  ('relacional -> aritmetica comparacion numeros','relacional',3,'p_relacional','sintax.py',439),
  ('relacional -> numeros comparacion aritmetica','relacional',3,'p_relacional','sintax.py',440),
  ('relacional -> booleanos comparacion booleanos','relacional',3,'p_relacional','sintax.py',441),
  ('relacional -> STRING comparacion STRING','relacional',3,'p_relacional','sintax.py',442),
  ('relacional -> CHAR comparacion CHAR','relacional',3,'p_relacional','sintax.py',443),
  ('relacional -> VARIABLE comparacion numeros','relacional',3,'p_relacional','sintax.py',444),
  ('relacional -> numeros comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',445),
  ('relacional -> VARIABLE comparacion booleanos','relacional',3,'p_relacional','sintax.py',446),
  ('relacional -> booleanos comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',447),
  ('relacional -> VARIABLE comparacion STRING','relacional',3,'p_relacional','sintax.py',448),
  ('relacional -> STRING comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',449),
  ('relacional -> VARIABLE comparacion CHAR','relacional',3,'p_relacional','sintax.py',450),
  ('relacional -> CHAR comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',451),
  ('relacional -> VARIABLE comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',452),
  ('comparacion -> IGUAL_COMPARACION','comparacion',1,'p_comparacion','sintax.py',455),
  ('comparacion -> DIFERENTE','comparacion',1,'p_comparacion','sintax.py',456),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion','sintax.py',457),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion','sintax.py',458),
  ('aritmetica -> numeros aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',462),
  ('aritmetica -> VARIABLE aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',463),
  ('aritmetica -> numeros aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',464),
  ('aritmetica -> VARIABLE aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',465),
  ('aritmetica -> aritmetica aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',466),
  ('aritmetica -> aritmetica aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',467),
  ('aritmeticos -> MENOS','aritmeticos',1,'p_aritmeticos','sintax.py',470),
  ('aritmeticos -> MAS','aritmeticos',1,'p_aritmeticos','sintax.py',471),
  ('aritmeticos -> MULTIPLICACION','aritmeticos',1,'p_aritmeticos','sintax.py',472),
  ('aritmeticos -> DIVISION','aritmeticos',1,'p_aritmeticos','sintax.py',473),
  ('aritmeticos -> MOD','aritmeticos',1,'p_aritmeticos','sintax.py',474),
  ('asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla','asignacion',4,'p_asignacion_tupla','sintax.py',480),
  ('asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla','asignacion',4,'p_asignacion_tupla','sintax.py',481),
  ('dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',484),
  ('dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',485),
  ('dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',486),
  ('dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',487),
  ('dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',490),
  ('dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',491),
  ('dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',492),
  ('dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',493),
  ('dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',496),
  ('dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',497),
  ('dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',498),
  ('dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',499),
  ('dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',502),
  ('dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',503),
  ('dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',504),
  ('dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',505),
  ('dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',508),
  ('dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',509),
  ('dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',510),
  ('dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',511),
]

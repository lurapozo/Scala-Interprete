
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARRAYCLASS ARROBA BACKTICK BOOLCLASS CASE CATCH CHAR CHARCLASS CLASS COMA CORCHETE_D CORCHETE_I DEF DIFERENTE DIVISION DO DOBLE_PUNTO DOUBLE DOUBLECLASS ELSE EXTENDS FINAL FINALLY FLASE FLOAT FLOATCLASS FOR FOR_SOME FUNCION_FLECHA HASHTAG IF IGUAL IGUAL_COMPARACION IMPLICIT IMPORT INT INTCLASS ITERATOR LAZY LIBRERIA_IO LISTCLASS LLAVE_D LLAVE_I LONG LONGCLASS MACRO MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MOD MULTIPLICACION NEW NOT NULL OBJECT OR OVERRIDE PACKAGE PAR_D PAR_I PRINT PRINTLN PRIVATE PROTECTED PUNTO READLINE RETURN REVERSE SEALED STRING STRINGCLASS SUBGUION SUPER THIS THROW TO TO_DOUBLE TO_FLOAT TO_INT TO_LONG TRAIT TRUE TRY TYPE UNTIL VAL VAR VARIABLE WHILE WITH YIELD inicio : OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D\n  | IMPORT io inicio\n  | cuerpo\n   io : VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINEcuerpo : funcion\n  | funcall\n  | impresion\n  | entrada\n  | asignacion\n  | while\n  | for\n  | match\n  | if\n  | funcion cuerpo\n  | asignacion cuerpo\n  | while cuerpo\n  | for cuerpo\n  | if cuerpo\n  | match cuerpocontenido : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entrada\n  | while\n  | for\n  | match\n  | if\n  | aritmetica\n  | asignacion contenido\n  | reasignacion contenido\n  | funcall contenido\n  | impresion contenido\n  | entrada contenido\n  | while contenido\n  | for contenido\n  | if contenido\n  | match contenido\n  | aritmetica contenidocontenidoLine : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entradaasignacion : VAR VARIABLE IGUAL VARIABLE\n  | VAL VARIABLE IGUAL VARIABLE\n  | VAR VARIABLE IGUAL aritmetica\n  | VAL VARIABLE IGUAL aritmetica\n  | VAR VARIABLE IGUAL returnfun\n  | VAL VARIABLE IGUAL returnfun\n  | asignacionLong\n  | asignacionInt\n  | asignacionFloat\n  | asignacionDouble\n  | asignacionString\n  | asignacionChar\n  | asignacionBoolean\n  | array\n  | listasignacionLong :  VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLEasignacionFloat : VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLEasignacionDouble : VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLEasignacionString : VAR VARIABLE IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAL VARIABLE IGUAL STRING\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLEasignacionChar : VAR VARIABLE IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAL VARIABLE IGUAL CHAR\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLEasignacionBoolean : VAR VARIABLE IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAL VARIABLE IGUAL booleanos\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLEreasignacion :  VARIABLE IGUAL valor\n      | VARIABLE IGUAL returnfun\n      | VARIABLE IGUAL aritmetica\n      | VARIABLE PAR_I INT PAR_D IGUAL valortipo : CHARCLASS\n  | STRINGCLASS\n  | BOOLCLASS\n  | INTCLASS\n  | LONGCLASS\n  | DOUBLECLASS\n  | FLOATCLASS\n  | ARRAYCLASS CORCHETE_I tipo CORCHETE_D\n  | LISTCLASS CORCHETE_I tipo CORCHETE_Dvalor : STRING\n  | CHAR\n  | VARIABLE\n  | numeros\n  | booleanos\n  | VARIABLE PAR_I VARIABLE PAR_D\n  | VARIABLE PAR_I INT PAR_Dbooleanos : TRUE\n  | FLASEnumeros : INT\n  | LONG\n  | FLOAT\n  | DOUBLEfuncion : DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D\n  | DEF VARIABLE parametro LLAVE_I contenido LLAVE_Ddeclaracion : VARIABLE DOBLE_PUNTO tipodeclaracion :  VARIABLE DOBLE_PUNTO tipo IGUAL valor parametro : parametros\n  | PAR_I PAR_D parametros : PAR_I declaracion PAR_D \n    | PAR_I declaracion PAR_D parametrosfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D\n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D \n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_Ddectipo : DOBLE_PUNTO tipo dectipoTupla : DOBLE_PUNTO PAR_I tipos PAR_Dtipos : tipo\n    | tipo tiposentrytiposentry : COMA tipo \n  | COMA tipo tiposentryimpresion : PRINTLN PAR_I valorI PAR_D\n  | PRINT PAR_I valorI PAR_DvalorI : valor MAS valorI\n  | valorentrada : READLINE PAR_I PAR_Dfuncall : VARIABLE varparen varparen : PAR_I valores PAR_D\n  | PAR_I PAR_D\n  | varparen PAR_I valores PAR_D\n  | varparen PAR_I PAR_D returnfun : returnCastable\n      | castingcallreturnCastable : entrada\n      | funcallcastingcall : returnCastable PUNTO castingfun\n      | VARIABLE PUNTO castingfuncastingfun : TO_INT\n    | TO_DOUBLE\n    | TO_FLOAT\n    | TO_LONGarray : VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | arrayInt\n  | arrayDoublelist : VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_Dvalores : valor\n  | valor COMA valorestuple : PAR_I valores PAR_Dasignacion : VAR VARIABLE IGUAL tuple \n      | VAL VARIABLE IGUAL tuplewhile : WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_Dfor : FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_Dmatch : VARIABLE MATCH  LLAVE_I cases LLAVE_Dcases : casesInt\n    | casesLgn\n    | casesFlt\n    | casesDob\n    | casesStr\n    | casesChar\n    | casesBoolcaseInt : CASE INT FUNCION_FLECHA codeBlock casesInt : caseInt \n      | caseInt casesInt\n      | caseInt defcasecaseLgn : CASE LONG FUNCION_FLECHA codeBlock casesLgn : caseLgn \n      | caseLgn casesLgn\n      | caseLgn defcasecaseFlt : CASE FLOAT FUNCION_FLECHA codeBlock casesFlt : caseFlt \n      | caseFlt casesFlt\n      | caseFlt defcasecaseDob : CASE DOUBLE FUNCION_FLECHA codeBlock casesDob : caseDob \n      | caseDob casesDob\n      | caseDob defcasecaseStr : CASE STRING FUNCION_FLECHA codeBlock casesStr : caseStr\n      | caseStr casesStr\n      | caseStr defcasecaseChar : CASE CHAR FUNCION_FLECHA codeBlock casesChar : caseChar\n      | caseChar casesChar\n      | caseChar defcasecaseBool : CASE booleanos FUNCION_FLECHA codeBlock casesBool : caseBool\n      | caseBool casesBool\n      | caseBool defcasedefcase : CASE SUBGUION FUNCION_FLECHA codeBlock codeBlock : contenidoLine\n      | LLAVE_I contenido LLAVE_Dif : IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | if elseif\n  | if else\n  elseif : ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseifelse : ELSE LLAVE_I contenido LLAVE_D\n  | elseif elsecondicional : valorC logicos condicional\n  | valorCvalorC : VARIABLE\n  | booleanos\n  | relacional\n  | NOT VARIABLE\n  | NOT booleanos\n  | NOT relacional\n  logicos : AND\n  | OR\n  | NOTrelacional : numeros comparacion numeros\n  | aritmetica comparacion aritmetica\n  | aritmetica comparacion numeros\n  | numeros comparacion aritmetica\n  | booleanos comparacion booleanos\n  | STRING comparacion STRING\n  | CHAR comparacion CHAR\n  | VARIABLE comparacion numeros\n  | numeros comparacion VARIABLE\n  | VARIABLE comparacion booleanos\n  | booleanos comparacion VARIABLE\n  | VARIABLE comparacion STRING\n  | STRING comparacion VARIABLE\n  | VARIABLE comparacion CHAR\n  | CHAR comparacion VARIABLE\n  | VARIABLE comparacion VARIABLEcomparacion : IGUAL_COMPARACION\n  | DIFERENTE\n  | MAYOR\n  | MENORaritmetica : numeros aritmeticos numeros\n  | VARIABLE aritmeticos numeros\n  | numeros aritmeticos VARIABLE\n  | VARIABLE aritmeticos VARIABLE\n  | aritmetica aritmeticos numeros\n  | aritmetica aritmeticos VARIABLEaritmeticos : MENOS\n  | MAS\n  | MULTIPLICACION\n  | DIVISION\n  | MODarrayInt : VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D\n  arrayDouble : VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_DvaloresInt : INT\n  | valoresInt COMA INTvaloresDouble : DOUBLE\n  | valoresDouble COMA DOUBLEasignacion : VAR VARIABLE DOBLE_PUNTO  dectupla\n      | VAL VARIABLE DOBLE_PUNTO dectupla dectupla : PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D\n  | PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D\n  | PAR_I STRINGCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D\n  | PAR_I STRINGCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D dectupla : PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D\n  | PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D\n  | PAR_I FLOATCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D\n  | PAR_I FLOATCLASS COMA  INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D dectupla : PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D\n  | PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D\n  | PAR_I DOUBLECLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D\n  | PAR_I DOUBLECLASS COMA  INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D dectupla : PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D\n  | PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D\n  | PAR_I LONGCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D\n  | PAR_I LONGCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT  PAR_D dectupla : PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D\n  | PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D\n  | PAR_I INTCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D\n  | PAR_I INTCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D asignacionInt : VAR VARIABLE IGUAL intvalues\n    | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues\n    | VAL VARIABLE IGUAL intvalues\n    | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvaluesintvalues : INT\n  | stringCastIntasignacionLong : VAR VARIABLE IGUAL longvalues\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues\n  | VAL VARIABLE IGUAL longvalues\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalueslongvalues : INT\n  | intvalues\n  | stringCastLongasignacionFloat : VAR VARIABLE IGUAL floatvalues\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues\n  | VAL VARIABLE IGUAL floatvalues\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvaluesfloatvalues : FLOAT\n  | longvalues\n  | stringCastFloatasignacionDouble : VAR VARIABLE IGUAL doublevalues\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues\n  | VAL VARIABLE IGUAL doublevalues\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevaluesdoublevalues : DOUBLE\n  | floatvalues\n  | stringCastDoublestringCastInt : STRING PUNTO TO_INTstringCastLong : STRING PUNTO TO_LONGstringCastFloat : STRING PUNTO TO_FLOATstringCastDouble : STRING PUNTO TO_DOUBLE'
    
_lr_action_items = {end':([1,4,6,7,8,9,10,11,12,13,14,21,22,23,24,25,26,27,28,29,33,34,36,41,42,43,44,45,46,47,48,63,70,71,72,73,74,75,76,79,89,109,126,152,154,155,156,157,158,159,160,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,202,241,242,243,277,344,345,351,352,356,357,385,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,412,413,415,416,417,418,420,421,422,423,425,426,427,428,429,430,441,442,443,444,445,446,447,448,449,450,451,452,453,483,493,521,522,525,532,582,588,589,590,591,625,629,630,631,632,633,634,635,636,663,698,699,701,703,726,728,729,754,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,779,780,],[0,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-51,-52,-53,-54,-55,-56,-57,-58,-59,-159,-160,-140,-14,-15,-16,-17,-19,-18,-216,-217,-142,-106,-107,-108,-109,-104,-105,-2,-221,-139,-144,-141,-135,-136,-45,-47,-49,-167,-298,-292,-305,-312,-66,-72,-78,-145,-146,-296,-304,-297,-309,-311,-316,-318,-147,-148,-270,-46,-48,-50,-168,-300,-294,-307,-314,-68,-74,-80,-271,-1,-143,-176,-220,-256,-254,-253,-255,-257,-258,-111,-150,-151,-152,-153,-154,-320,-319,-321,-322,-166,-149,-60,-299,-296,-303,-293,-296,-62,-306,-309,-310,-64,-313,-316,-317,-70,-67,-76,-73,-82,-79,-61,-301,-295,-63,-308,-65,-315,-71,-69,-77,-75,-83,-81,-110,-155,-157,-161,-169,-215,-218,-123,-122,-124,-125,-171,-219,-119,-118,-120,-121,-127,-126,-128,-170,-172,-173,-264,-265,-163,-174,-175,-162,-272,-273,-274,-275,-288,-289,-290,-291,-284,-285,-286,-287,-280,-281,-282,-283,-276,-277,-278,-279,-156,-158,]),'MATCH':([3,142,],[37,37,]),'PAR_I':([3,16,17,18,30,31,32,36,50,63,67,81,90,91,92,93,109,126,142,148,155,166,189,200,201,242,305,378,472,537,541,545,584,592,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,620,662,730,753,],[38,51,52,53,56,57,58,60,85,-142,128,130,167,188,167,188,-144,-141,289,295,38,310,38,326,327,-143,392,481,289,128,481,167,481,38,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,661,695,755,776,]),'LLAVE_D':([6,7,8,9,10,11,12,13,14,21,22,23,24,25,26,27,28,29,33,34,36,41,42,43,44,45,46,47,48,63,65,66,67,68,69,70,71,72,73,74,75,79,89,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,131,132,133,134,135,136,137,138,139,140,141,152,154,155,156,157,158,159,160,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,202,242,243,244,245,247,248,250,251,253,254,256,257,259,260,262,263,277,278,279,280,281,282,283,284,285,286,287,291,344,345,351,352,356,357,374,375,378,379,380,381,382,384,385,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,412,413,415,416,417,418,420,421,422,423,425,426,427,428,429,430,441,442,443,444,445,446,447,448,449,450,451,452,453,456,462,464,465,467,468,469,470,471,473,474,475,476,477,478,483,493,521,522,525,532,533,534,536,541,542,543,544,578,581,582,583,584,585,586,587,588,589,590,591,592,593,594,622,625,629,630,631,632,633,634,635,636,663,666,667,696,697,698,699,701,703,726,728,729,754,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,779,780,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-51,-52,-53,-54,-55,-56,-57,-58,-59,-159,-160,-140,-14,-15,-16,-17,-19,-18,-216,-217,-142,-97,-98,-99,-100,-101,-106,-107,-108,-109,-104,-105,-221,-139,241,-144,243,-177,-178,-179,-180,-181,-182,-183,-185,-189,-193,-197,-201,-205,-209,-141,277,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-135,-136,-45,-47,-49,-167,-298,-292,-305,-312,-66,-72,-78,-145,-146,-296,-304,-297,-309,-311,-316,-318,-147,-148,-270,-46,-48,-50,-168,-300,-294,-307,-314,-68,-74,-80,-271,-143,-176,-186,-187,-190,-191,-194,-195,-198,-199,-202,-203,-206,-207,-210,-211,-220,-30,-31,-32,-33,-34,-35,-36,-38,-37,-39,385,-256,-254,-253,-255,-257,-258,-102,-103,-99,-84,-85,-86,-100,483,-111,-150,-151,-152,-153,-154,-320,-319,-321,-322,-166,-149,-60,-299,-296,-303,-293,-296,-62,-306,-309,-310,-64,-313,-316,-317,-70,-67,-76,-73,-82,-79,-61,-301,-295,-63,-308,-65,-315,-71,-69,-77,-75,-83,-81,525,532,-184,-213,-40,-41,-42,-43,-44,-188,-192,-196,-200,-204,-208,-110,-155,-157,-161,-169,-215,-212,581,582,588,589,590,591,625,-214,-218,-87,630,631,632,633,-123,-122,-124,-125,634,635,636,663,-171,-219,-119,-118,-120,-121,-127,-126,-128,-170,698,699,728,729,-172,-173,-264,-265,-163,-174,-175,-162,-272,-273,-274,-275,-288,-289,-290,-291,-284,-285,-286,-287,-280,-281,-282,-283,-276,-277,-278,-279,-156,-158,]),'ELSE':([14,47,48,78,79,140,277,532,582,629,],[49,80,-217,80,-221,49,-220,-215,628,-219,]),'INT':([21,22,23,24,25,26,27,28,29,33,34,36,38,47,48,51,52,56,58,60,63,65,66,67,68,69,70,71,72,73,74,75,79,82,89,90,92,99,109,125,126,127,128,130,132,133,134,135,136,137,138,139,140,141,145,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,202,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,232,233,234,235,239,242,243,246,277,288,289,290,310,313,314,315,316,326,327,328,329,330,331,337,344,345,351,352,356,357,362,365,374,375,378,379,380,381,382,386,387,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,412,413,415,416,417,418,420,421,422,423,425,426,427,428,429,430,441,442,443,444,445,446,447,448,449,450,451,452,453,460,461,466,480,481,485,492,493,521,522,525,527,528,529,532,539,540,575,582,583,625,626,627,629,638,644,645,646,647,661,663,664,665,695,698,699,701,702,703,705,714,720,724,726,728,729,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,779,780,],[-51,-52,-53,-54,-55,-56,-57,-58,-59,-159,-160,-140,70,-216,-217,70,70,70,70,70,-142,-97,-98,-99,-100,-101,-106,-107,-108,-109,-104,-105,-221,70,-139,170,170,70,-144,265,-141,70,274,70,70,70,70,70,70,70,70,70,70,70,70,-135,70,-136,-45,-47,-49,-167,-298,-292,-305,-312,-66,-72,-78,70,-145,-146,-296,-304,-297,-309,-311,-316,-318,-147,-148,-270,-46,-48,-50,-168,-300,-294,-307,-314,-68,-74,-80,-271,70,-230,-231,-232,70,70,-249,-250,-251,-252,-259,-260,-261,-262,-263,70,70,70,70,364,-143,-176,265,-220,70,383,70,70,409,413,409,409,70,70,409,413,409,409,70,-256,-254,-253,-255,-257,-258,458,70,-102,-103,-99,-84,-85,-86,-100,70,70,-150,-151,-152,-153,-154,-320,-319,-321,-322,-166,-149,-60,-299,-296,-303,-293,-296,-62,-306,-309,-310,-64,-313,-316,-317,-70,-67,-76,-73,-82,-79,-61,-301,-295,-63,-308,-65,-315,-71,-69,-77,-75,-83,-81,530,531,70,70,538,70,70,-155,-157,-161,-169,576,577,70,-215,70,70,70,-218,-87,-171,70,70,-219,670,677,678,679,680,70,-170,70,70,70,-172,-173,-264,731,-265,733,742,748,752,-163,-174,-175,-162,777,-272,-273,-274,-275,-288,-289,-290,-291,-284,-285,-286,-287,-280,-281,-282,-283,-276,-277,-278,-279,778,-156,-158,]),'LONG':([21,22,23,24,25,26,27,28,29,33,34,36,38,47,48,51,52,56,58,60,63,65,66,67,68,69,70,71,72,73,74,75,79,82,89,90,92,99,109,125,126,127,130,132,133,134,135,136,137,138,139,140,141,145,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,202,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,232,233,234,235,242,243,249,277,288,289,290,310,326,327,337,344,345,351,352,356,357,365,374,375,378,379,380,381,382,386,387,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,412,413,415,416,417,418,420,421,422,423,425,426,427,428,429,430,441,442,443,444,445,446,447,448,449,450,451,452,453,466,480,481,485,492,493,521,522,525,529,532,539,540,575,582,583,625,626,627,629,648,649,650,651,661,663,664,665,695,698,699,701,703,706,710,718,722,726,728,729,754,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,779,780,],[-51,-52,-53,-54,-55,-56,-57,-58,-59,-159,-160,-140,71,-216,-217,71,71,71,71,71,-142,-97,-98,-99,-100,-101,-106,-107,-108,-109,-104,-105,-221,71,-139,71,71,71,-144,266,-141,71,71,71,71,71,71,71,71,71,71,71,71,71,-135,71,-136,-45,-47,-49,-167,-298,-292,-305,-312,-66,-72,-78,71,-145,-146,-296,-304,-297,-309,-311,-316,-318,-147,-148,-270,-46,-48,-50,-168,-300,-294,-307,-314,-68,-74,-80,-271,71,-230,-231,-232,71,71,-249,-250,-251,-252,-259,-260,-261,-262,-263,71,71,71,71,-143,-176,266,-220,71,71,71,71,71,71,71,-256,-254,-253,-255,-257,-258,71,-102,-103,-99,-84,-85,-86,-100,71,71,-150,-151,-152,-153,-154,-320,-319,-321,-322,-166,-149,-60,-299,-296,-303,-293,-296,-62,-306,-309,-310,-64,-313,-316,-317,-70,-67,-76,-73,-82,-79,-61,-301,-295,-63,-308,-65,-315,-71,-69,-77,-75,-83,-81,71,71,71,71,71,-155,-157,-161,-169,71,-215,71,71,71,-218,-87,-171,71,71,-219,681,682,683,684,71,-170,71,71,71,-172,-173,-264,-265,734,738,746,750,-163,-174,-175,-162,-272,-273,-274,-275,-288,-289,-290,-291,-284,-285,-286,-287,-280,-281,-282,-283,-276,-277,-278,-279,-156,-158,]),'FLOAT':([21,22,23,24,25,26,27,28,29,33,34,36,38,47,48,51,52,56,58,60,63,65,66,67,68,69,70,71,72,73,74,75,79,82,89,90,92,99,109,125,126,127,130,132,133,134,135,136,137,138,139,140,141,145,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,202,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,232,233,234,235,242,243,252,277,288,289,290,310,315,316,326,327,330,331,337,344,345,351,352,356,357,365,374,375,378,379,380,381,382,386,387,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,412,413,415,416,417,418,420,421,422,423,425,426,427,428,429,430,441,442,443,444,445,446,447,448,449,450,451,452,453,466,480,481,485,492,493,521,522,525,529,532,539,540,575,582,583,625,626,627,629,656,657,658,659,661,663,664,665,695,698,699,701,703,708,712,716,719,726,728,729,754,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,779,780,],[-51,-52,-53,-54,-55,-56,-57,-58,-59,-159,-160,-140,72,-216,-217,72,72,72,72,72,-142,-97,-98,-99,-100,-101,-106,-107,-108,-109,-104,-105,-221,72,-139,173,173,72,-144,267,-141,72,72,72,72,72,72,72,72,72,72,72,72,72,-135,72,-136,-45,-47,-49,-167,-298,-292,-305,-312,-66,-72,-78,72,-145,-146,-296,-304,-297,-309,-311,-316,-318,-147,-148,-270,-46,-48,-50,-168,-300,-294,-307,-314,-68,-74,-80,-271,72,-230,-231,-232,72,72,-249,-250,-251,-252,-259,-260,-261,-262,-263,72,72,72,72,-143,-176,267,-220,72,72,72,72,417,417,72,72,417,417,72,-256,-254,-253,-255,-257,-258,72,-102,-103,-99,-84,-85,-86,-100,72,72,-150,-151,-152,-153,-154,-320,-319,-321,-322,-166,-149,-60,-299,-296,-303,-293,-296,-62,-306,-309,-310,-64,-313,-316,-317,-70,-67,-76,-73,-82,-79,-61,-301,-295,-63,-308,-65,-315,-71,-69,-77,-75,-83,-81,72,72,72,72,72,-155,-157,-161,-169,72,-215,72,72,72,-218,-87,-171,72,72,-219,689,690,691,692,72,-170,72,72,72,-172,-173,-264,-265,736,740,744,747,-163,-174,-175,-162,-272,-273,-274,-275,-288,-289,-290,-291,-284,-285,-286,-287,-280,-281,-282,-283,-276,-277,-278,-279,-156,-158,]),'DOUBLE':([21,22,23,24,25,26,27,28,29,33,34,36,38,47,48,51,52,56,58,60,63,65,66,67,68,69,70,71,72,73,74,75,79,82,89,90,92,99,109,125,126,127,130,132,133,134,135,136,137,138,139,140,141,145,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,202,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,232,233,234,235,242,243,255,277,288,289,290,310,316,326,327,331,337,344,345,351,352,356,357,365,374,375,378,379,380,381,382,386,387,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,412,413,415,416,417,418,420,421,422,423,425,426,427,428,429,430,441,442,443,444,445,446,447,448,449,450,451,452,453,466,480,481,485,492,493,521,522,525,529,532,539,540,575,582,583,625,626,627,629,639,652,653,654,655,661,663,664,665,695,698,699,701,703,704,707,711,715,723,726,728,729,754,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,779,780,],[-51,-52,-53,-54,-55,-56,-57,-58,-59,-159,-160,-140,73,-216,-217,73,73,73,73,73,-142,-97,-98,-99,-100,-101,-106,-107,-108,-109,-104,-105,-221,73,-139,175,175,73,-144,268,-141,73,73,73,73,73,73,73,73,73,73,73,73,73,-135,73,-136,-45,-47,-49,-167,-298,-292,-305,-312,-66,-72,-78,73,-145,-146,-296,-304,-297,-309,-311,-316,-318,-147,-148,-270,-46,-48,-50,-168,-300,-294,-307,-314,-68,-74,-80,-271,73,-230,-231,-232,73,73,-249,-250,-251,-252,-259,-260,-261,-262,-263,73,73,73,73,-143,-176,268,-220,73,73,73,73,422,73,73,422,73,-256,-254,-253,-255,-257,-258,73,-102,-103,-99,-84,-85,-86,-100,73,73,-150,-151,-152,-153,-154,-320,-319,-321,-322,-166,-149,-60,-299,-296,-303,-293,-296,-62,-306,-309,-310,-64,-313,-316,-317,-70,-67,-76,-73,-82,-79,-61,-301,-295,-63,-308,-65,-315,-71,-69,-77,-75,-83,-81,73,73,73,73,73,-155,-157,-161,-169,73,-215,73,73,73,-218,-87,-171,73,73,-219,672,685,686,687,688,73,-170,73,73,73,-172,-173,-264,-265,732,735,739,743,751,-163,-174,-175,-162,-272,-273,-274,-275,-288,-289,-290,-291,-284,-285,-286,-287,-280,-281,-282,-283,-276,-277,-278,-279,-156,-158,]),'RETURN':([21,22,23,24,25,26,27,28,29,33,34,36,47,48,63,65,66,67,68,69,70,71,72,73,74,75,79,89,109,126,132,133,134,135,136,137,138,139,140,141,152,154,155,156,157,158,159,160,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,202,242,243,277,278,279,280,281,282,283,284,285,286,287,344,345,351,352,356,357,374,375,378,379,380,381,382,386,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,412,413,415,416,417,418,420,421,422,423,425,426,427,428,429,430,441,442,443,444,445,446,447,448,449,450,451,452,453,484,486,493,521,522,525,532,582,583,625,629,663,698,699,701,703,726,728,729,754,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,779,780,],[-51,-52,-53,-54,-55,-56,-57,-58,-59,-159,-160,-140,-216,-217,-142,-97,-98,-99,-100,-101,-106,-107,-108,-109,-104,-105,-221,-139,-144,-141,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-135,-136,-45,-47,-49,-167,-298,-292,-305,-312,-66,-72,-78,-145,-146,-296,-304,-297,-309,-311,-316,-318,-147,-148,-270,-46,-48,-50,-168,-300,-294,-307,-314,-68,-74,-80,-271,-143,-176,-220,-30,-31,-32,-33,-34,-35,-36,-38,-37,-39,-256,-254,-253,-255,-257,-258,-102,-103,-99,-84,-85,-86,-100,485,-150,-151,-152,-153,-154,-320,-319,-321,-322,-166,-149,-60,-299,-296,-303,-293,-296,-62,-306,-309,-310,-64,-313,-316,-317,-70,-67,-76,-73,-82,-79,-61,-301,-295,-63,-308,-65,-315,-71,-69,-77,-75,-83,-81,540,545,-155,-157,-161,-169,-215,-218,-87,-171,-219,-170,-172,-173,-264,-265,-163,-174,-175,-162,-272,-273,-274,-275,-288,-289,-290,-291,-284,-285,-286,-287,-280,-281,-282,-283,-276,-277,-278,-279,-156,-158,]),'CASE':([21,22,23,24,25,26,27,28,29,33,34,36,61,63,65,66,67,68,69,70,71,72,73,74,75,89,109,118,119,120,121,122,123,124,126,152,154,155,156,157,158,159,160,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,189,190,191,192,193,194,195,196,197,198,199,202,242,344,345,351,352,356,357,374,375,378,379,380,381,382,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,412,413,415,416,417,418,420,421,422,423,425,426,427,428,429,430,441,442,443,444,445,446,447,448,449,450,451,452,453,464,465,467,468,469,470,471,473,474,475,476,477,478,493,521,522,581,583,701,703,726,754,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,779,780,],[-51,-52,-53,-54,-55,-56,-57,-58,-59,-159,-160,-140,125,-142,-97,-98,-99,-100,-101,-106,-107,-108,-109,-104,-105,-139,-144,246,249,252,255,258,261,264,-141,-135,-136,-45,-47,-49,-167,-298,-292,-305,-312,-66,-72,-78,-145,-146,-296,-304,-297,-309,-311,-316,-318,-147,-148,-270,-46,-48,-50,-168,-300,-294,-307,-314,-68,-74,-80,-271,-143,-256,-254,-253,-255,-257,-258,-102,-103,-99,-84,-85,-86,-100,-150,-151,-152,-153,-154,-320,-319,-321,-322,-166,-149,-60,-299,-296,-303,-293,-296,-62,-306,-309,-310,-64,-313,-316,-317,-70,-67,-76,-73,-82,-79,-61,-301,-295,-63,-308,-65,-315,-71,-69,-77,-75,-83,-81,-184,-213,-40,-41,-42,-43,-44,-188,-192,-196,-200,-204,-208,-155,-157,-161,-214,-87,-264,-265,-163,-162,-272,-273,-274,-275,-288,-289,-290,-291,-284,-285,-286,-287,-280,-281,-282,-283,-276,-277,-278,-279,-156,-158,]),'LLAVE_I':([35,37,49,80,83,84,144,149,212,240,292,293,305,367,368,369,370,371,372,373,377,393,459,463,526,579,580,623,624,],[59,61,82,82,145,-114,290,-115,337,365,386,387,-116,466,466,466,466,466,466,466,480,-117,529,466,575,626,627,664,665,]),'PUNTO':([36,40,63,89,109,126,129,155,163,168,177,178,189,197,242,376,378,411,414,419,424,541,584,592,],[-140,77,-142,-139,-144,-141,275,308,309,312,-147,-148,308,309,-143,479,308,494,495,496,497,308,308,308,]),'PAR_D':([38,53,60,62,64,65,66,67,68,69,70,71,72,73,74,75,85,86,87,88,94,95,96,97,98,106,108,150,229,230,231,272,273,274,276,289,296,297,298,299,300,301,302,307,311,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,363,374,375,383,388,389,394,404,439,440,457,481,488,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,530,531,537,538,546,547,548,549,576,577,595,669,670,671,672,694,727,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,777,778,],[63,89,109,126,-164,-97,-98,-99,-100,-101,-106,-107,-108,-109,-104,-105,149,152,-138,154,212,-223,-224,-225,-226,240,242,305,-227,-228,-229,-165,374,375,377,63,-88,-89,-90,-91,-92,-93,-94,-137,405,-222,-248,-240,-242,-244,-246,-256,-254,-237,-243,-233,-236,-241,-253,-255,-234,-235,-257,-258,-238,-245,-239,-247,459,-102,-103,482,487,-131,-112,493,521,522,526,63,-132,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,579,580,374,375,-133,-95,-96,-113,623,624,-134,701,-266,703,-268,726,754,-267,-269,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,779,780,]),'STRING':([38,51,52,56,58,60,90,92,99,125,127,130,153,167,213,214,215,216,217,219,220,221,222,236,258,288,289,310,313,314,315,316,317,326,327,328,329,330,331,332,481,485,492,539,540,640,641,642,643,661,695,709,713,717,721,],[65,65,65,102,102,65,163,197,102,269,65,102,65,65,102,-230,-231,-232,342,-249,-250,-251,-252,358,269,65,65,65,411,414,419,424,426,65,65,411,414,419,424,449,65,65,65,65,65,673,674,675,676,65,65,737,741,745,749,]),'CHAR':([38,51,52,56,58,60,90,92,99,125,127,130,153,167,213,214,215,216,217,219,220,221,222,237,261,288,289,310,318,326,327,333,481,485,492,539,540,661,695,],[66,66,66,103,103,66,164,198,103,270,66,103,66,66,103,-230,-231,-232,343,-249,-250,-251,-252,360,270,66,66,66,428,66,66,451,66,66,66,66,66,66,66,]),'TRUE':([38,51,52,56,58,60,90,92,99,125,127,130,153,167,213,214,215,216,217,219,220,221,222,228,264,288,289,310,319,326,327,334,481,485,492,539,540,661,695,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-230,-231,-232,74,-249,-250,-251,-252,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'FLASE':([38,51,52,56,58,60,90,92,99,125,127,130,153,167,213,214,215,216,217,219,220,221,222,228,264,288,289,310,319,326,327,334,481,485,492,539,540,661,695,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-230,-231,-232,75,-249,-250,-251,-252,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'IGUAL':([54,55,83,84,142,146,147,149,180,181,182,183,184,185,186,203,204,205,206,207,208,209,294,296,297,298,299,300,301,302,305,393,394,472,482,487,498,499,500,523,524,547,548,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,],[90,92,144,-114,288,292,293,-115,313,314,315,316,317,318,319,328,329,330,331,332,333,334,-129,-88,-89,-90,-91,-92,-93,-94,-116,-117,492,288,539,-130,550,551,552,573,574,-95,-96,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,]),'DOBLE_PUNTO':([54,55,83,84,149,151,305,393,],[91,93,148,-114,-115,306,-116,-117,]),'NOT':([56,58,70,71,72,73,74,75,95,96,97,98,130,213,214,215,216,229,230,231,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,],[99,99,-106,-107,-108,-109,-104,-105,216,-224,-225,-226,99,99,-230,-231,-232,-227,-228,-229,-248,-240,-242,-244,-246,-256,-254,-237,-243,-233,-236,-241,-253,-255,-234,-235,-257,-258,-238,-245,-239,-247,]),'COMA':([64,65,66,67,68,69,70,71,72,73,74,75,296,297,298,299,300,301,302,321,322,323,324,325,374,375,383,389,537,538,546,547,548,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,731,732,],[127,-97,-98,-99,-100,-101,-106,-107,-108,-109,-104,-105,-88,-89,-90,-91,-92,-93,-94,434,435,436,437,438,-102,-103,-106,489,-99,-106,489,-95,-96,702,-266,704,-268,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,-267,-269,]),'MAS':([65,66,67,68,69,70,71,72,73,74,75,87,96,100,101,141,142,143,155,156,170,173,175,189,190,229,344,345,348,349,350,351,352,353,354,355,356,357,374,375,378,381,382,541,544,584,587,],[-97,-98,-99,-100,-101,-106,-107,-108,-109,-104,-105,153,224,224,224,224,224,224,224,224,-106,-108,-109,224,224,224,-256,-254,224,224,224,-253,-255,224,224,224,-257,-258,-102,-103,224,224,224,224,224,224,224,]),'IGUAL_COMPARACION':([70,71,72,73,74,75,96,97,100,101,102,103,229,230,344,345,351,352,356,357,],[-106,-107,-108,-109,-104,-105,219,219,219,219,219,219,219,219,-256,-254,-253,-255,-257,-258,]),'DIFERENTE':([70,71,72,73,74,75,96,97,100,101,102,103,229,230,344,345,351,352,356,357,],[-106,-107,-108,-109,-104,-105,220,220,220,220,220,220,220,220,-256,-254,-253,-255,-257,-258,]),'MAYOR':([70,71,72,73,74,75,96,97,100,101,102,103,229,230,344,345,351,352,356,357,],[-106,-107,-108,-109,-104,-105,221,221,221,221,221,221,221,221,-256,-254,-253,-255,-257,-258,]),'MENOR':([70,71,72,73,74,75,96,97,100,101,102,103,229,230,344,345,351,352,356,357,],[-106,-107,-108,-109,-104,-105,222,222,222,222,222,222,222,222,-256,-254,-253,-255,-257,-258,]),'MENOS':([70,71,72,73,96,100,101,141,142,143,155,156,170,173,175,189,190,229,344,345,348,349,350,351,352,353,354,355,356,357,378,381,382,541,544,584,587,],[-106,-107,-108,-109,223,223,223,223,223,223,223,223,-106,-108,-109,223,223,223,-256,-254,223,223,223,-253,-255,223,223,223,-257,-258,223,223,223,223,223,223,223,]),'MULTIPLICACION':([70,71,72,73,96,100,101,141,142,143,155,156,170,173,175,189,190,229,344,345,348,349,350,351,352,353,354,355,356,357,378,381,382,541,544,584,587,],[-106,-107,-108,-109,225,225,225,225,225,225,225,225,-106,-108,-109,225,225,225,-256,-254,225,225,225,-253,-255,225,225,225,-257,-258,225,225,225,225,225,225,225,]),'DIVISION':([70,71,72,73,96,100,101,141,142,143,155,156,170,173,175,189,190,229,344,345,348,349,350,351,352,353,354,355,356,357,378,381,382,541,544,584,587,],[-106,-107,-108,-109,226,226,226,226,226,226,226,226,-106,-108,-109,226,226,226,-256,-254,226,226,226,-253,-255,226,226,226,-257,-258,226,226,226,226,226,226,226,]),'MOD':([70,71,72,73,96,100,101,141,142,143,155,156,170,173,175,189,190,229,344,345,348,349,350,351,352,353,354,355,356,357,378,381,382,541,544,584,587,],[-106,-107,-108,-109,227,227,227,227,227,227,227,227,-106,-108,-109,227,227,227,-256,-254,227,227,227,-253,-255,227,227,227,-257,-258,227,227,227,227,227,227,227,]),'AND':([70,71,72,73,74,75,95,96,97,98,229,230,231,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,],[-106,-107,-108,-109,-104,-105,214,-224,-225,-226,-227,-228,-229,-248,-240,-242,-244,-246,-256,-254,-237,-243,-233,-236,-241,-253,-255,-234,-235,-257,-258,-238,-245,-239,-247,]),'OR':([70,71,72,73,74,75,95,96,97,98,229,230,231,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,],[-106,-107,-108,-109,-104,-105,215,-224,-225,-226,-227,-228,-229,-248,-240,-242,-244,-246,-256,-254,-237,-243,-233,-236,-241,-253,-255,-234,-235,-257,-258,-238,-245,-239,-247,]),'FUNCION_FLECHA':([74,75,265,266,267,268,269,270,271,366,],[-104,-105,367,368,369,370,371,372,373,463,]),'ARRAYCLASS':([90,91,92,93,148,295,306,320,335,336,390,391,489,551,552,596,619,668,693,],[166,187,200,210,303,303,303,303,303,303,303,303,303,597,598,637,660,303,303,]),'LONGCLASS':([91,93,148,188,295,306,320,335,336,390,391,434,435,437,438,489,668,693,],[180,203,300,323,300,300,300,300,300,300,300,502,506,514,518,300,300,300,]),'INTCLASS':([91,93,148,188,295,306,320,335,336,390,391,434,436,437,438,489,668,693,],[181,204,299,322,299,299,432,299,299,299,299,501,510,516,520,299,299,299,]),'FLOATCLASS':([91,93,148,188,295,306,320,335,336,390,391,434,435,436,437,489,668,693,],[182,205,302,325,302,302,302,302,302,302,302,504,508,512,515,302,302,302,]),'DOUBLECLASS':([91,93,148,188,295,306,320,335,336,390,391,434,435,436,438,489,668,693,],[183,206,301,324,301,301,433,301,301,301,301,503,507,511,519,301,301,301,]),'STRINGCLASS':([91,93,148,188,295,306,320,335,336,390,391,435,436,437,438,489,668,693,],[184,207,297,321,297,297,297,297,297,297,297,505,509,513,517,297,297,297,]),'CHARCLASS':([91,93,148,295,306,320,335,336,390,391,489,668,693,],[185,208,296,296,296,296,296,296,296,296,296,296,296,]),'BOOLCLASS':([91,93,148,295,306,320,335,336,390,391,489,668,693,],[186,209,298,298,298,298,298,298,298,298,298,298,298,]),'LISTCLASS':([92,93,148,295,306,320,335,336,390,391,489,574,621,668,693,],[201,211,304,304,304,304,304,304,304,304,304,620,662,304,304,]),'ITERATOR':([105,238,],[239,362,]),'CORCHETE_I':([187,210,211,303,304,637,660,],[320,335,336,390,391,668,693,]),'SUBGUION':([246,249,252,255,258,261,264,],[366,366,366,366,366,366,366,]),'CORCHETE_D':([296,297,298,299,300,301,302,431,432,433,454,455,490,491,547,548,700,725,],[-88,-89,-90,-91,-92,-93,-94,498,499,500,523,524,547,548,-95,-96,730,753,]),'TO_INT':([308,309,312,494,495,496,497,],[396,401,396,401,401,401,401,]),'TO_DOUBLE':([308,309,312,497,],[397,403,397,403,]),'TO_FLOAT':([308,309,312,496,497,],[398,402,398,402,402,]),'TO_LONG':([308,309,312,494,496,497,],[399,400,399,400,400,400,]),'TO':([364,458,],[460,527,]),'UNTIL':([364,458,],[461,528,]),'NEW':([550,573,574,],[596,619,621,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,39,],[1,76,]),'cuerpo':([0,6,10,11,12,13,14,39,59,],[4,41,42,43,44,45,46,4,107,]),'funcion':([0,6,10,11,12,13,14,39,59,],[6,6,6,6,6,6,6,6,6,]),'funcall':([0,6,10,11,12,13,14,39,59,82,90,92,132,133,134,135,136,137,138,139,140,141,145,288,290,337,365,367,368,369,370,371,372,373,386,387,463,466,480,485,529,540,545,575,626,627,664,665,],[7,7,7,7,7,7,7,7,7,134,178,178,134,134,134,134,134,134,134,134,134,134,134,178,134,134,134,469,469,469,469,469,469,469,134,134,469,134,134,178,134,178,178,134,134,134,134,134,]),'impresion':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,290,337,365,367,368,369,370,371,372,373,386,387,463,466,480,529,575,626,627,664,665,],[8,8,8,8,8,8,8,8,8,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,470,470,470,470,470,470,470,135,135,470,135,135,135,135,135,135,135,135,]),'entrada':([0,6,10,11,12,13,14,39,59,82,90,92,132,133,134,135,136,137,138,139,140,141,145,288,290,337,365,367,368,369,370,371,372,373,386,387,463,466,480,485,529,540,545,575,626,627,664,665,],[9,9,9,9,9,9,9,9,9,136,177,177,136,136,136,136,136,136,136,136,136,136,136,177,136,136,136,471,471,471,471,471,471,471,136,136,471,136,136,177,136,177,177,136,136,136,136,136,]),'asignacion':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,290,337,365,367,368,369,370,371,372,373,386,387,463,466,480,529,575,626,627,664,665,],[10,10,10,10,10,10,10,10,10,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,467,467,467,467,467,467,467,132,132,467,132,132,132,132,132,132,132,132,]),'while':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,290,337,365,386,387,466,480,529,575,626,627,664,665,],[11,11,11,11,11,11,11,11,11,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'for':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,290,337,365,386,387,466,480,529,575,626,627,664,665,],[12,12,12,12,12,12,12,12,12,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'match':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,290,337,365,386,387,466,480,529,575,626,627,664,665,],[13,13,13,13,13,13,13,13,13,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,]),'if':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,290,337,365,386,387,466,480,529,575,626,627,664,665,],[14,14,14,14,14,14,14,14,14,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'asignacionLong':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,290,337,365,367,368,369,370,371,372,373,386,387,463,466,480,529,575,626,627,664,665,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'asignacionInt':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,290,337,365,367,368,369,370,371,372,373,386,387,463,466,480,529,575,626,627,664,665,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'asignacionFloat':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,290,337,365,367,368,369,370,371,372,373,386,387,463,466,480,529,575,626,627,664,665,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'asignacionDouble':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,290,337,365,367,368,369,370,371,372,373,386,387,463,466,480,529,575,626,627,664,665,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'asignacionString':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,290,337,365,367,368,369,370,371,372,373,386,387,463,466,480,529,575,626,627,664,665,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'asignacionChar':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,290,337,365,367,368,369,370,371,372,373,386,387,463,466,480,529,575,626,627,664,665,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'asignacionBoolean':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,290,337,365,367,368,369,370,371,372,373,386,387,463,466,480,529,575,626,627,664,665,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'array':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,290,337,365,367,368,369,370,371,372,373,386,387,463,466,480,529,575,626,627,664,665,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'list':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,290,337,365,367,368,369,370,371,372,373,386,387,463,466,480,529,575,626,627,664,665,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'arrayInt':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,290,337,365,367,368,369,370,371,372,373,386,387,463,466,480,529,575,626,627,664,665,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'arrayDouble':([0,6,10,11,12,13,14,39,59,82,132,133,134,135,136,137,138,139,140,141,145,290,337,365,367,368,369,370,371,372,373,386,387,463,466,480,529,575,626,627,664,665,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'varparen':([3,142,155,189,378,472,541,584,592,],[36,36,36,36,36,36,36,36,36,]),'io':([5,],[39,]),'elseif':([14,47,78,140,582,],[47,78,78,47,629,]),'else':([14,47,78,140,],[48,79,79,48,]),'valores':([38,60,127,167,289,310,326,327,481,661,695,],[62,108,272,311,62,404,439,440,62,694,727,]),'valor':([38,51,52,60,127,153,167,288,289,310,326,327,481,485,492,539,540,661,695,],[64,87,87,64,64,87,64,379,64,64,64,64,64,542,549,583,585,64,64,]),'numeros':([38,51,52,56,58,60,82,90,92,99,127,130,132,133,134,135,136,137,138,139,140,141,145,153,167,213,217,218,232,233,234,235,288,289,290,310,326,327,337,365,386,387,466,480,481,485,492,529,539,540,575,626,627,661,664,665,695,],[68,68,68,100,100,68,143,143,143,100,68,100,143,143,143,143,143,143,143,143,143,143,143,68,68,100,340,345,348,351,354,356,382,68,143,68,68,68,143,143,143,143,143,143,68,382,68,143,68,382,143,143,143,68,143,143,68,]),'booleanos':([38,51,52,56,58,60,90,92,99,125,127,130,153,167,213,217,228,264,288,289,310,319,326,327,334,481,485,492,539,540,661,695,],[69,69,69,97,97,69,165,199,230,271,69,97,69,69,97,341,346,271,69,69,69,430,69,69,453,69,69,69,69,69,69,69,]),'parametro':([50,],[83,]),'parametros':([50,305,],[84,393,]),'valorI':([51,52,153,],[86,88,307,]),'condicional':([56,58,130,213,],[94,106,276,338,]),'valorC':([56,58,130,213,],[95,95,95,95,]),'relacional':([56,58,99,130,213,],[98,98,231,98,98,]),'aritmetica':([56,58,82,90,92,99,130,132,133,134,135,136,137,138,139,140,141,145,213,232,234,288,290,337,365,386,387,466,480,485,529,540,575,626,627,664,665,],[101,101,141,156,190,101,101,141,141,141,141,141,141,141,141,141,141,141,101,349,353,381,141,141,141,141,141,141,141,544,141,587,141,141,141,141,141,]),'cases':([61,],[110,]),'casesInt':([61,118,],[111,244,]),'casesLgn':([61,119,],[112,247,]),'casesFlt':([61,120,],[113,250,]),'casesDob':([61,121,],[114,253,]),'casesStr':([61,122,],[115,256,]),'casesChar':([61,123,],[116,259,]),'casesBool':([61,124,],[117,262,]),'caseInt':([61,118,],[118,118,]),'caseLgn':([61,119,],[119,119,]),'caseFlt':([61,120,],[120,120,]),'caseDob':([61,121,],[121,121,]),'caseStr':([61,122,],[122,122,]),'caseChar':([61,123,],[123,123,]),'caseBool':([61,124,],[124,124,]),'contenido':([82,132,133,134,135,136,137,138,139,140,141,145,290,337,365,386,387,466,480,529,575,626,627,664,665,],[131,278,279,280,281,282,283,284,285,286,287,291,384,456,462,484,486,534,536,578,622,666,667,696,697,]),'reasignacion':([82,132,133,134,135,136,137,138,139,140,141,145,290,337,365,367,368,369,370,371,372,373,386,387,463,466,480,529,575,626,627,664,665,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,468,468,468,468,468,468,468,133,133,468,133,133,133,133,133,133,133,133,]),'dectipo':([83,],[146,]),'dectipoTupla':([83,],[147,]),'declaracion':([85,392,],[150,150,]),'returnfun':([90,92,288,485,540,545,],[157,191,380,543,586,594,]),'tuple':([90,92,545,],[158,192,593,]),'longvalues':([90,92,313,315,316,328,330,331,],[159,193,408,418,418,442,418,418,]),'intvalues':([90,92,313,314,315,316,328,329,330,331,],[160,194,410,412,410,410,410,443,410,410,]),'floatvalues':([90,92,315,316,330,331,],[161,195,416,423,445,423,]),'doublevalues':([90,92,316,331,],[162,196,421,447,]),'returnCastable':([90,92,288,485,540,545,],[168,168,168,168,168,168,]),'castingcall':([90,92,288,485,540,545,],[169,169,169,169,169,169,]),'stringCastLong':([90,92,313,315,316,328,330,331,],[171,171,171,171,171,171,171,171,]),'stringCastInt':([90,92,313,314,315,316,328,329,330,331,],[172,172,172,172,172,172,172,172,172,172,]),'stringCastFloat':([90,92,315,316,330,331,],[174,174,174,174,174,174,]),'stringCastDouble':([90,92,316,331,],[176,176,176,176,]),'dectupla':([91,93,],[179,202,]),'logicos':([95,],[213,]),'comparacion':([96,97,100,101,102,103,229,230,],[217,228,232,234,236,237,217,228,]),'aritmeticos':([96,100,101,141,142,143,155,156,189,190,229,348,349,350,353,354,355,378,381,382,541,544,584,587,],[218,233,235,235,218,233,218,235,218,235,218,233,235,218,235,233,218,218,235,233,218,235,218,235,]),'defcase':([118,119,120,121,122,123,124,],[245,248,251,254,257,260,263,]),'tipo':([148,295,306,320,335,336,390,391,489,668,693,],[294,389,394,431,454,455,490,491,546,700,725,]),'tipos':([295,],[388,]),'castingfun':([308,312,],[395,406,]),'codeBlock':([367,368,369,370,371,372,373,463,],[464,473,474,475,476,477,478,533,]),'contenidoLine':([367,368,369,370,371,372,373,463,],[465,465,465,465,465,465,465,465,]),'tiposentry':([389,546,],[488,595,]),'valoresInt':([638,],[669,]),'valoresDouble':([639,],[671,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D','inicio',5,'p_inicio','sintax.py',13),
  ('inicio -> IMPORT io inicio','inicio',3,'p_inicio','sintax.py',14),
  ('inicio -> cuerpo','inicio',1,'p_inicio','sintax.py',15),
  ('io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE','io',7,'p_io','sintax.py',20),
  ('cuerpo -> funcion','cuerpo',1,'p_cuerpo','sintax.py',23),
  ('cuerpo -> funcall','cuerpo',1,'p_cuerpo','sintax.py',24),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintax.py',25),
  ('cuerpo -> entrada','cuerpo',1,'p_cuerpo','sintax.py',26),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintax.py',27),
  ('cuerpo -> while','cuerpo',1,'p_cuerpo','sintax.py',28),
  ('cuerpo -> for','cuerpo',1,'p_cuerpo','sintax.py',29),
  ('cuerpo -> match','cuerpo',1,'p_cuerpo','sintax.py',30),
  ('cuerpo -> if','cuerpo',1,'p_cuerpo','sintax.py',31),
  ('cuerpo -> funcion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',32),
  ('cuerpo -> asignacion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',33),
  ('cuerpo -> while cuerpo','cuerpo',2,'p_cuerpo','sintax.py',34),
  ('cuerpo -> for cuerpo','cuerpo',2,'p_cuerpo','sintax.py',35),
  ('cuerpo -> if cuerpo','cuerpo',2,'p_cuerpo','sintax.py',36),
  ('cuerpo -> match cuerpo','cuerpo',2,'p_cuerpo','sintax.py',37),
  ('contenido -> asignacion','contenido',1,'p_contenido','sintax.py',41),
  ('contenido -> reasignacion','contenido',1,'p_contenido','sintax.py',42),
  ('contenido -> funcall','contenido',1,'p_contenido','sintax.py',43),
  ('contenido -> impresion','contenido',1,'p_contenido','sintax.py',44),
  ('contenido -> entrada','contenido',1,'p_contenido','sintax.py',45),
  ('contenido -> while','contenido',1,'p_contenido','sintax.py',46),
  ('contenido -> for','contenido',1,'p_contenido','sintax.py',47),
  ('contenido -> match','contenido',1,'p_contenido','sintax.py',48),
  ('contenido -> if','contenido',1,'p_contenido','sintax.py',49),
  ('contenido -> aritmetica','contenido',1,'p_contenido','sintax.py',50),
  ('contenido -> asignacion contenido','contenido',2,'p_contenido','sintax.py',51),
  ('contenido -> reasignacion contenido','contenido',2,'p_contenido','sintax.py',52),
  ('contenido -> funcall contenido','contenido',2,'p_contenido','sintax.py',53),
  ('contenido -> impresion contenido','contenido',2,'p_contenido','sintax.py',54),
  ('contenido -> entrada contenido','contenido',2,'p_contenido','sintax.py',55),
  ('contenido -> while contenido','contenido',2,'p_contenido','sintax.py',56),
  ('contenido -> for contenido','contenido',2,'p_contenido','sintax.py',57),
  ('contenido -> if contenido','contenido',2,'p_contenido','sintax.py',58),
  ('contenido -> match contenido','contenido',2,'p_contenido','sintax.py',59),
  ('contenido -> aritmetica contenido','contenido',2,'p_contenido','sintax.py',60),
  ('contenidoLine -> asignacion','contenidoLine',1,'p_contenidoLine','sintax.py',64),
  ('contenidoLine -> reasignacion','contenidoLine',1,'p_contenidoLine','sintax.py',65),
  ('contenidoLine -> funcall','contenidoLine',1,'p_contenidoLine','sintax.py',66),
  ('contenidoLine -> impresion','contenidoLine',1,'p_contenidoLine','sintax.py',67),
  ('contenidoLine -> entrada','contenidoLine',1,'p_contenidoLine','sintax.py',68),
  ('asignacion -> VAR VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',72),
  ('asignacion -> VAL VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',73),
  ('asignacion -> VAR VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',74),
  ('asignacion -> VAL VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',75),
  ('asignacion -> VAR VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',76),
  ('asignacion -> VAL VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',77),
  ('asignacion -> asignacionLong','asignacion',1,'p_asignacion','sintax.py',78),
  ('asignacion -> asignacionInt','asignacion',1,'p_asignacion','sintax.py',79),
  ('asignacion -> asignacionFloat','asignacion',1,'p_asignacion','sintax.py',80),
  ('asignacion -> asignacionDouble','asignacion',1,'p_asignacion','sintax.py',81),
  ('asignacion -> asignacionString','asignacion',1,'p_asignacion','sintax.py',82),
  ('asignacion -> asignacionChar','asignacion',1,'p_asignacion','sintax.py',83),
  ('asignacion -> asignacionBoolean','asignacion',1,'p_asignacion','sintax.py',84),
  ('asignacion -> array','asignacion',1,'p_asignacion','sintax.py',85),
  ('asignacion -> list','asignacion',1,'p_asignacion','sintax.py',86),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',89),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',90),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',97),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',98),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',101),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',102),
  ('asignacionString -> VAR VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',105),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',106),
  ('asignacionString -> VAL VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',107),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',108),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',109),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',110),
  ('asignacionChar -> VAR VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',113),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',114),
  ('asignacionChar -> VAL VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',115),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',116),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',117),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',118),
  ('asignacionBoolean -> VAR VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',121),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',122),
  ('asignacionBoolean -> VAL VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',123),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',124),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',125),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',126),
  ('reasignacion -> VARIABLE IGUAL valor','reasignacion',3,'p_reasignacion','sintax.py',130),
  ('reasignacion -> VARIABLE IGUAL returnfun','reasignacion',3,'p_reasignacion','sintax.py',131),
  ('reasignacion -> VARIABLE IGUAL aritmetica','reasignacion',3,'p_reasignacion','sintax.py',132),
  ('reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor','reasignacion',6,'p_reasignacion','sintax.py',133),
  ('tipo -> CHARCLASS','tipo',1,'p_tipo','sintax.py',136),
  ('tipo -> STRINGCLASS','tipo',1,'p_tipo','sintax.py',137),
  ('tipo -> BOOLCLASS','tipo',1,'p_tipo','sintax.py',138),
  ('tipo -> INTCLASS','tipo',1,'p_tipo','sintax.py',139),
  ('tipo -> LONGCLASS','tipo',1,'p_tipo','sintax.py',140),
  ('tipo -> DOUBLECLASS','tipo',1,'p_tipo','sintax.py',141),
  ('tipo -> FLOATCLASS','tipo',1,'p_tipo','sintax.py',142),
  ('tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',143),
  ('tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',144),
  ('valor -> STRING','valor',1,'p_valor','sintax.py',147),
  ('valor -> CHAR','valor',1,'p_valor','sintax.py',148),
  ('valor -> VARIABLE','valor',1,'p_valor','sintax.py',149),
  ('valor -> numeros','valor',1,'p_valor','sintax.py',150),
  ('valor -> booleanos','valor',1,'p_valor','sintax.py',151),
  ('valor -> VARIABLE PAR_I VARIABLE PAR_D','valor',4,'p_valor','sintax.py',152),
  ('valor -> VARIABLE PAR_I INT PAR_D','valor',4,'p_valor','sintax.py',153),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintax.py',156),
  ('booleanos -> FLASE','booleanos',1,'p_booleanos','sintax.py',157),
  ('numeros -> INT','numeros',1,'p_numeros','sintax.py',160),
  ('numeros -> LONG','numeros',1,'p_numeros','sintax.py',161),
  ('numeros -> FLOAT','numeros',1,'p_numeros','sintax.py',162),
  ('numeros -> DOUBLE','numeros',1,'p_numeros','sintax.py',163),
  ('funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D','funcion',7,'p_funcion','sintax.py',168),
  ('funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D','funcion',6,'p_funcion','sintax.py',169),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo','declaracion',3,'p_declaracion','sintax.py',174),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor','declaracion',5,'p_declaracion_defecto','sintax.py',177),
  ('parametro -> parametros','parametro',1,'p_parametro','sintax.py',180),
  ('parametro -> PAR_I PAR_D','parametro',2,'p_parametro','sintax.py',181),
  ('parametros -> PAR_I declaracion PAR_D','parametros',3,'p_parametros','sintax.py',184),
  ('parametros -> PAR_I declaracion PAR_D parametros','parametros',4,'p_parametros','sintax.py',185),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D','funcion',10,'p_funcion_return','sintax.py',190),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_return','sintax.py',191),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_return','sintax.py',192),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D','funcion',10,'p_funcion_return','sintax.py',193),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',196),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',197),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',198),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',199),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',202),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',203),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',204),
  ('dectipo -> DOBLE_PUNTO tipo','dectipo',2,'p_dectipo','sintax.py',207),
  ('dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D','dectipoTupla',4,'p_dectipoTupla','sintax.py',210),
  ('tipos -> tipo','tipos',1,'p_tipos','sintax.py',213),
  ('tipos -> tipo tiposentry','tipos',2,'p_tipos','sintax.py',214),
  ('tiposentry -> COMA tipo','tiposentry',2,'p_tipoentry','sintax.py',217),
  ('tiposentry -> COMA tipo tiposentry','tiposentry',3,'p_tipoentry','sintax.py',218),
  ('impresion -> PRINTLN PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',223),
  ('impresion -> PRINT PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',224),
  ('valorI -> valor MAS valorI','valorI',3,'p_valorI','sintax.py',227),
  ('valorI -> valor','valorI',1,'p_valorI','sintax.py',228),
  ('entrada -> READLINE PAR_I PAR_D','entrada',3,'p_entrada','sintax.py',233),
  ('funcall -> VARIABLE varparen','funcall',2,'p_funcall','sintax.py',237),
  ('varparen -> PAR_I valores PAR_D','varparen',3,'p_varparen','sintax.py',240),
  ('varparen -> PAR_I PAR_D','varparen',2,'p_varparen','sintax.py',241),
  ('varparen -> varparen PAR_I valores PAR_D','varparen',4,'p_varparen','sintax.py',242),
  ('varparen -> varparen PAR_I PAR_D','varparen',3,'p_varparen','sintax.py',243),
  ('returnfun -> returnCastable','returnfun',1,'p_returnfun','sintax.py',246),
  ('returnfun -> castingcall','returnfun',1,'p_returnfun','sintax.py',247),
  ('returnCastable -> entrada','returnCastable',1,'p_returnCastable','sintax.py',250),
  ('returnCastable -> funcall','returnCastable',1,'p_returnCastable','sintax.py',251),
  ('castingcall -> returnCastable PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',256),
  ('castingcall -> VARIABLE PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',257),
  ('castingfun -> TO_INT','castingfun',1,'p_castingfun','sintax.py',261),
  ('castingfun -> TO_DOUBLE','castingfun',1,'p_castingfun','sintax.py',262),
  ('castingfun -> TO_FLOAT','castingfun',1,'p_castingfun','sintax.py',263),
  ('castingfun -> TO_LONG','castingfun',1,'p_castingfun','sintax.py',264),
  ('array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',269),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',270),
  ('array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',271),
  ('array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',272),
  ('array -> arrayInt','array',1,'p_array','sintax.py',273),
  ('array -> arrayDouble','array',1,'p_array','sintax.py',274),
  ('list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D','list',7,'p_list','sintax.py',278),
  ('list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D','list',13,'p_list','sintax.py',279),
  ('list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D','list',12,'p_list','sintax.py',280),
  ('valores -> valor','valores',1,'p_valores','sintax.py',284),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintax.py',285),
  ('tuple -> PAR_I valores PAR_D','tuple',3,'p_tuple','sintax.py',289),
  ('asignacion -> VAR VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',292),
  ('asignacion -> VAL VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',293),
  ('while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','while',7,'p_while','sintax.py',301),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',10,'p_for','sintax.py',305),
  ('for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',9,'p_for','sintax.py',306),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',307),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',308),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',309),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',310),
  ('match -> VARIABLE MATCH LLAVE_I cases LLAVE_D','match',5,'p_match','sintax.py',314),
  ('cases -> casesInt','cases',1,'p_cases','sintax.py',317),
  ('cases -> casesLgn','cases',1,'p_cases','sintax.py',318),
  ('cases -> casesFlt','cases',1,'p_cases','sintax.py',319),
  ('cases -> casesDob','cases',1,'p_cases','sintax.py',320),
  ('cases -> casesStr','cases',1,'p_cases','sintax.py',321),
  ('cases -> casesChar','cases',1,'p_cases','sintax.py',322),
  ('cases -> casesBool','cases',1,'p_cases','sintax.py',323),
  ('caseInt -> CASE INT FUNCION_FLECHA codeBlock','caseInt',4,'p_caseInt','sintax.py',326),
  ('casesInt -> caseInt','casesInt',1,'p_casesInt','sintax.py',329),
  ('casesInt -> caseInt casesInt','casesInt',2,'p_casesInt','sintax.py',330),
  ('casesInt -> caseInt defcase','casesInt',2,'p_casesInt','sintax.py',331),
  ('caseLgn -> CASE LONG FUNCION_FLECHA codeBlock','caseLgn',4,'p_caseLgn','sintax.py',334),
  ('casesLgn -> caseLgn','casesLgn',1,'p_casesLgn','sintax.py',337),
  ('casesLgn -> caseLgn casesLgn','casesLgn',2,'p_casesLgn','sintax.py',338),
  ('casesLgn -> caseLgn defcase','casesLgn',2,'p_casesLgn','sintax.py',339),
  ('caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock','caseFlt',4,'p_caseFlt','sintax.py',342),
  ('casesFlt -> caseFlt','casesFlt',1,'p_casesFlt','sintax.py',345),
  ('casesFlt -> caseFlt casesFlt','casesFlt',2,'p_casesFlt','sintax.py',346),
  ('casesFlt -> caseFlt defcase','casesFlt',2,'p_casesFlt','sintax.py',347),
  ('caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock','caseDob',4,'p_caseDob','sintax.py',350),
  ('casesDob -> caseDob','casesDob',1,'p_casesDob','sintax.py',353),
  ('casesDob -> caseDob casesDob','casesDob',2,'p_casesDob','sintax.py',354),
  ('casesDob -> caseDob defcase','casesDob',2,'p_casesDob','sintax.py',355),
  ('caseStr -> CASE STRING FUNCION_FLECHA codeBlock','caseStr',4,'p_caseStr','sintax.py',358),
  ('casesStr -> caseStr','casesStr',1,'p_casesStr','sintax.py',361),
  ('casesStr -> caseStr casesStr','casesStr',2,'p_casesStr','sintax.py',362),
  ('casesStr -> caseStr defcase','casesStr',2,'p_casesStr','sintax.py',363),
  ('caseChar -> CASE CHAR FUNCION_FLECHA codeBlock','caseChar',4,'p_caseChar','sintax.py',366),
  ('casesChar -> caseChar','casesChar',1,'p_casesChar','sintax.py',369),
  ('casesChar -> caseChar casesChar','casesChar',2,'p_casesChar','sintax.py',370),
  ('casesChar -> caseChar defcase','casesChar',2,'p_casesChar','sintax.py',371),
  ('caseBool -> CASE booleanos FUNCION_FLECHA codeBlock','caseBool',4,'p_caseBool','sintax.py',374),
  ('casesBool -> caseBool','casesBool',1,'p_casesBool','sintax.py',377),
  ('casesBool -> caseBool casesBool','casesBool',2,'p_casesBool','sintax.py',378),
  ('casesBool -> caseBool defcase','casesBool',2,'p_casesBool','sintax.py',379),
  ('defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock','defcase',4,'p_defcase','sintax.py',383),
  ('codeBlock -> contenidoLine','codeBlock',1,'p_codeBlock','sintax.py',386),
  ('codeBlock -> LLAVE_I contenido LLAVE_D','codeBlock',3,'p_codeBlock','sintax.py',387),
  ('if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','if',7,'p_if','sintax.py',391),
  ('if -> if elseif','if',2,'p_if','sintax.py',392),
  ('if -> if else','if',2,'p_if','sintax.py',393),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','elseif',8,'p_elseif','sintax.py',397),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif','elseif',9,'p_elseif','sintax.py',398),
  ('else -> ELSE LLAVE_I contenido LLAVE_D','else',4,'p_else','sintax.py',401),
  ('else -> elseif else','else',2,'p_else','sintax.py',402),
  ('condicional -> valorC logicos condicional','condicional',3,'p_condicional','sintax.py',406),
  ('condicional -> valorC','condicional',1,'p_condicional','sintax.py',407),
  ('valorC -> VARIABLE','valorC',1,'p_valorC','sintax.py',410),
  ('valorC -> booleanos','valorC',1,'p_valorC','sintax.py',411),
  ('valorC -> relacional','valorC',1,'p_valorC','sintax.py',412),
  ('valorC -> NOT VARIABLE','valorC',2,'p_valorC','sintax.py',413),
  ('valorC -> NOT booleanos','valorC',2,'p_valorC','sintax.py',414),
  ('valorC -> NOT relacional','valorC',2,'p_valorC','sintax.py',415),
  ('logicos -> AND','logicos',1,'p_logicos','sintax.py',418),
  ('logicos -> OR','logicos',1,'p_logicos','sintax.py',419),
  ('logicos -> NOT','logicos',1,'p_logicos','sintax.py',420),
  ('relacional -> numeros comparacion numeros','relacional',3,'p_relacional','sintax.py',425),
  ('relacional -> aritmetica comparacion aritmetica','relacional',3,'p_relacional','sintax.py',426),
  ('relacional -> aritmetica comparacion numeros','relacional',3,'p_relacional','sintax.py',427),
  ('relacional -> numeros comparacion aritmetica','relacional',3,'p_relacional','sintax.py',428),
  ('relacional -> booleanos comparacion booleanos','relacional',3,'p_relacional','sintax.py',429),
  ('relacional -> STRING comparacion STRING','relacional',3,'p_relacional','sintax.py',430),
  ('relacional -> CHAR comparacion CHAR','relacional',3,'p_relacional','sintax.py',431),
  ('relacional -> VARIABLE comparacion numeros','relacional',3,'p_relacional','sintax.py',432),
  ('relacional -> numeros comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',433),
  ('relacional -> VARIABLE comparacion booleanos','relacional',3,'p_relacional','sintax.py',434),
  ('relacional -> booleanos comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',435),
  ('relacional -> VARIABLE comparacion STRING','relacional',3,'p_relacional','sintax.py',436),
  ('relacional -> STRING comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',437),
  ('relacional -> VARIABLE comparacion CHAR','relacional',3,'p_relacional','sintax.py',438),
  ('relacional -> CHAR comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',439),
  ('relacional -> VARIABLE comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',440),
  ('comparacion -> IGUAL_COMPARACION','comparacion',1,'p_comparacion','sintax.py',443),
  ('comparacion -> DIFERENTE','comparacion',1,'p_comparacion','sintax.py',444),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion','sintax.py',445),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion','sintax.py',446),
  ('aritmetica -> numeros aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',450),
  ('aritmetica -> VARIABLE aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',451),
  ('aritmetica -> numeros aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',452),
  ('aritmetica -> VARIABLE aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',453),
  ('aritmetica -> aritmetica aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',454),
  ('aritmetica -> aritmetica aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',455),
  ('aritmeticos -> MENOS','aritmeticos',1,'p_aritmeticos','sintax.py',458),
  ('aritmeticos -> MAS','aritmeticos',1,'p_aritmeticos','sintax.py',459),
  ('aritmeticos -> MULTIPLICACION','aritmeticos',1,'p_aritmeticos','sintax.py',460),
  ('aritmeticos -> DIVISION','aritmeticos',1,'p_aritmeticos','sintax.py',461),
  ('aritmeticos -> MOD','aritmeticos',1,'p_aritmeticos','sintax.py',462),
  ('arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D','arrayInt',12,'p_arrayInt','sintax.py',467),
  ('arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D','arrayDouble',12,'p_arrayDouble','sintax.py',472),
  ('valoresInt -> INT','valoresInt',1,'p_valoresInt','sintax.py',475),
  ('valoresInt -> valoresInt COMA INT','valoresInt',3,'p_valoresInt','sintax.py',476),
  ('valoresDouble -> DOUBLE','valoresDouble',1,'p_valoresDouble','sintax.py',479),
  ('valoresDouble -> valoresDouble COMA DOUBLE','valoresDouble',3,'p_valoresDouble','sintax.py',480),
  ('asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla','asignacion',4,'p_asignacion_tupla','sintax.py',485),
  ('asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla','asignacion',4,'p_asignacion_tupla','sintax.py',486),
  ('dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',489),
  ('dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',490),
  ('dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',491),
  ('dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',492),
  ('dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',495),
  ('dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',496),
  ('dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',497),
  ('dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',498),
  ('dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',501),
  ('dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',502),
  ('dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',503),
  ('dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',504),
  ('dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',507),
  ('dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',508),
  ('dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',509),
  ('dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',510),
  ('dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',513),
  ('dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',514),
  ('dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',515),
  ('dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',516),
  ('asignacionInt -> VAR VARIABLE IGUAL intvalues','asignacionInt',4,'p_asignacionInt','sintax.py',522),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues','asignacionInt',6,'p_asignacionInt','sintax.py',523),
  ('asignacionInt -> VAL VARIABLE IGUAL intvalues','asignacionInt',4,'p_asignacionInt','sintax.py',524),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues','asignacionInt',6,'p_asignacionInt','sintax.py',525),
  ('intvalues -> INT','intvalues',1,'p_intvalues','sintax.py',528),
  ('intvalues -> stringCastInt','intvalues',1,'p_intvalues','sintax.py',529),
  ('asignacionLong -> VAR VARIABLE IGUAL longvalues','asignacionLong',4,'p_asignacionLong_cast','sintax.py',533),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues','asignacionLong',6,'p_asignacionLong_cast','sintax.py',534),
  ('asignacionLong -> VAL VARIABLE IGUAL longvalues','asignacionLong',4,'p_asignacionLong_cast','sintax.py',535),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues','asignacionLong',6,'p_asignacionLong_cast','sintax.py',536),
  ('longvalues -> INT','longvalues',1,'p_longvalues','sintax.py',539),
  ('longvalues -> intvalues','longvalues',1,'p_longvalues','sintax.py',540),
  ('longvalues -> stringCastLong','longvalues',1,'p_longvalues','sintax.py',541),
  ('asignacionFloat -> VAR VARIABLE IGUAL floatvalues','asignacionFloat',4,'p_asignacionFloat_cast','sintax.py',545),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues','asignacionFloat',6,'p_asignacionFloat_cast','sintax.py',546),
  ('asignacionFloat -> VAL VARIABLE IGUAL floatvalues','asignacionFloat',4,'p_asignacionFloat_cast','sintax.py',547),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues','asignacionFloat',6,'p_asignacionFloat_cast','sintax.py',548),
  ('floatvalues -> FLOAT','floatvalues',1,'p_floatvalues','sintax.py',551),
  ('floatvalues -> longvalues','floatvalues',1,'p_floatvalues','sintax.py',552),
  ('floatvalues -> stringCastFloat','floatvalues',1,'p_floatvalues','sintax.py',553),
  ('asignacionDouble -> VAR VARIABLE IGUAL doublevalues','asignacionDouble',4,'p_asignacionDouble_cast','sintax.py',556),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues','asignacionDouble',6,'p_asignacionDouble_cast','sintax.py',557),
  ('asignacionDouble -> VAL VARIABLE IGUAL doublevalues','asignacionDouble',4,'p_asignacionDouble_cast','sintax.py',558),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues','asignacionDouble',6,'p_asignacionDouble_cast','sintax.py',559),
  ('doublevalues -> DOUBLE','doublevalues',1,'p_doublevalues','sintax.py',562),
  ('doublevalues -> floatvalues','doublevalues',1,'p_doublevalues','sintax.py',563),
  ('doublevalues -> stringCastDouble','doublevalues',1,'p_doublevalues','sintax.py',564),
  ('stringCastInt -> STRING PUNTO TO_INT','stringCastInt',3,'p_stringCastInt','sintax.py',573),
  ('stringCastLong -> STRING PUNTO TO_LONG','stringCastLong',3,'p_stringCastLong','sintax.py',590),
  ('stringCastFloat -> STRING PUNTO TO_FLOAT','stringCastFloat',3,'p_stringCastFloat','sintax.py',606),
  ('stringCastDouble -> STRING PUNTO TO_DOUBLE','stringCastDouble',3,'p_stringCastDouble','sintax.py',624),
]

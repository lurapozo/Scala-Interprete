
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARRAYCLASS ARROBA BACKTICK BOOLCLASS CASE CATCH CHAR CHARCLASS CLASS COMA CORCHETE_D CORCHETE_I DEF DIFERENTE DIVISION DO DOBLE_PUNTO DOUBLE DOUBLECLASS ELSE EXTENDS FINAL FINALLY FLASE FLOAT FLOATCLASS FOR FOR_SOME FUNCION_FLECHA HASHTAG IF IGUAL IGUAL_COMPARACION IMPLICIT IMPORT INT INTCLASS ITERATOR LAZY LIBRERIA_IO LISTCLASS LLAVE_D LLAVE_I LONG LONGCLASS MACRO MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MOD MULTIPLICACION NEW NOT NULL OBJECT OR OVERRIDE PACKAGE PAR_D PAR_I PRINT PRINTLN PRIVATE PROTECTED PUNTO READLINE RETURN REVERSE SEALED STARTSWITH STRING STRINGCLASS SUBGUION SUPER THIS THROW TO TO_DOUBLE TO_FLOAT TO_INT TO_LONG TRAIT TRUE TRY TYPE UNTIL VAL VAR VARIABLE WHILE WITH YIELD inicio : OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D\n  | IMPORT io inicio\n  | cuerpo\n   io : VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINEcuerpo : funcion\n  | funcall\n  | impresion\n  | entrada\n  | asignacion\n  | while\n  | for\n  | match\n  | if\n  | startsWith\n  | funcion cuerpo\n  | asignacion cuerpo\n  | while cuerpo\n  | for cuerpo\n  | if cuerpo\n  | match cuerpo\n  | startsWith cuerpocontenido : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entrada\n  | while\n  | for\n  | match\n  | if\n  | aritmetica\n  | startsWith\n  | asignacion contenido\n  | reasignacion contenido\n  | funcall contenido\n  | impresion contenido\n  | entrada contenido\n  | while contenido\n  | for contenido\n  | if contenido\n  | match contenido\n  | aritmetica contenido\n  | startsWith contenidocontenidoLine : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entradaasignacion : VAR VARIABLE IGUAL VARIABLE\n  | VAL VARIABLE IGUAL VARIABLE\n  | VAR VARIABLE IGUAL aritmetica\n  | VAL VARIABLE IGUAL aritmetica\n  | VAR VARIABLE IGUAL returnfun\n  | VAL VARIABLE IGUAL returnfun\n  | asignacionLong\n  | asignacionInt\n  | asignacionFloat\n  | asignacionDouble\n  | asignacionString\n  | asignacionChar\n  | asignacionBoolean\n  | array\n  | listasignacionLong :  VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLEasignacionInt : VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE\n  | asignacionSumIntasignacionFloat : VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLEasignacionDouble : VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE\n  | asignacionSumDoubleasignacionString : VAR VARIABLE IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAL VARIABLE IGUAL STRING\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE\n  | asignacionSumStringasignacionChar : VAR VARIABLE IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAL VARIABLE IGUAL CHAR\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLEasignacionBoolean : VAR VARIABLE IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAL VARIABLE IGUAL booleanos\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLEreasignacion :  VARIABLE IGUAL valor\n      | VARIABLE IGUAL returnfun\n      | VARIABLE IGUAL aritmetica\n      | VARIABLE PAR_I INT PAR_D IGUAL valortipo : CHARCLASS\n  | STRINGCLASS\n  | BOOLCLASS\n  | INTCLASS\n  | LONGCLASS\n  | DOUBLECLASS\n  | FLOATCLASS\n  | ARRAYCLASS CORCHETE_I tipo CORCHETE_D\n  | LISTCLASS CORCHETE_I tipo CORCHETE_Dvalor : STRING\n  | CHAR\n  | VARIABLE\n  | numeros\n  | booleanos\n  | VARIABLE PAR_I VARIABLE PAR_D\n  | VARIABLE PAR_I INT PAR_Dbooleanos : TRUE\n  | FLASE\n  | startsWithnumeros : INT\n  | LONG\n  | FLOAT\n  | DOUBLEfuncion : DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D\n  | DEF VARIABLE parametro LLAVE_I contenido LLAVE_Ddeclaracion : VARIABLE DOBLE_PUNTO tipodeclaracion :  VARIABLE DOBLE_PUNTO tipo IGUAL valor parametro : parametros\n  | PAR_I PAR_D parametros : PAR_I declaracion PAR_D \n    | PAR_I declaracion PAR_D parametrosfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D\n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D \n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_Ddectipo : DOBLE_PUNTO tipo dectipoTupla : DOBLE_PUNTO PAR_I tipos PAR_Dtipos : tipo\n    | tipo tiposentrytiposentry : COMA tipo \n  | COMA tipo tiposentryimpresion : PRINTLN PAR_I valorI PAR_D\n  | PRINT PAR_I valorI PAR_DvalorI : valor MAS valorI\n  | valorentrada : READLINE PAR_I PAR_Dfuncall : VARIABLE varparen varparen : PAR_I valores PAR_D\n  | PAR_I PAR_D\n  | varparen PAR_I valores PAR_D\n  | varparen PAR_I PAR_D returnfun : returnCastable\n      | castingcallreturnCastable : entrada\n      | funcallcastingcall : returnCastable PUNTO castingfun\n      | VARIABLE PUNTO castingfuncastingfun : TO_INT\n    | TO_DOUBLE\n    | TO_FLOAT\n    | TO_LONGarray : VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | arrayInt\n  | arrayDoublelist : VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D\n  | VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D\n  | listChar\n  | listStringvalores : valor\n  | valor COMA valorestuple : PAR_I valores PAR_Dasignacion : VAR VARIABLE IGUAL tuple \n      | VAL VARIABLE IGUAL tuplewhile : WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_Dfor : FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_Dmatch : VARIABLE MATCH  LLAVE_I cases LLAVE_Dcases : casesInt\n    | casesLgn\n    | casesFlt\n    | casesDob\n    | casesStr\n    | casesChar\n    | casesBoolcaseInt : CASE INT FUNCION_FLECHA codeBlock casesInt : caseInt \n      | caseInt casesInt\n      | caseInt defcasecaseLgn : CASE LONG FUNCION_FLECHA codeBlock casesLgn : caseLgn \n      | caseLgn casesLgn\n      | caseLgn defcasecaseFlt : CASE FLOAT FUNCION_FLECHA codeBlock casesFlt : caseFlt \n      | caseFlt casesFlt\n      | caseFlt defcasecaseDob : CASE DOUBLE FUNCION_FLECHA codeBlock casesDob : caseDob \n      | caseDob casesDob\n      | caseDob defcasecaseStr : CASE STRING FUNCION_FLECHA codeBlock casesStr : caseStr\n      | caseStr casesStr\n      | caseStr defcasecaseChar : CASE CHAR FUNCION_FLECHA codeBlock casesChar : caseChar\n      | caseChar casesChar\n      | caseChar defcasecaseBool : CASE booleanos FUNCION_FLECHA codeBlock casesBool : caseBool\n      | caseBool casesBool\n      | caseBool defcasedefcase : CASE SUBGUION FUNCION_FLECHA codeBlock codeBlock : contenidoLine\n      | LLAVE_I contenido LLAVE_Dif : IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | if elseif\n  | if else\n  elseif : ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseifelse : ELSE LLAVE_I contenido LLAVE_D\n  | elseif elsecondicional : valorC logicos condicional\n  | valorCvalorC : VARIABLE\n  | booleanos\n  | relacional\n  | NOT VARIABLE\n  | NOT booleanos\n  | NOT relacional\n  logicos : AND\n  | OR\n  | NOTrelacional : numeros comparacion numeros\n  | aritmetica comparacion aritmetica\n  | aritmetica comparacion numeros\n  | numeros comparacion aritmetica\n  | booleanos comparacion booleanos\n  | STRING comparacion STRING\n  | CHAR comparacion CHAR\n  | VARIABLE comparacion numeros\n  | numeros comparacion VARIABLE\n  | VARIABLE comparacion booleanos\n  | booleanos comparacion VARIABLE\n  | VARIABLE comparacion STRING\n  | STRING comparacion VARIABLE\n  | VARIABLE comparacion CHAR\n  | CHAR comparacion VARIABLE\n  | VARIABLE comparacion VARIABLEcomparacion : IGUAL_COMPARACION\n  | DIFERENTE\n  | MAYOR\n  | MENORaritmetica : numeros aritmeticos numeros\n  | VARIABLE aritmeticos numeros\n  | numeros aritmeticos VARIABLE\n  | VARIABLE aritmeticos VARIABLE\n  | aritmetica aritmeticos numeros\n  | aritmetica aritmeticos VARIABLEaritmetica : suma\n  | VARIABLE MAS numeros\n  | numeros MAS VARIABLE\n  | VARIABLE MAS VARIABLE\n  | aritmetica MAS numeros\n  | aritmetica MAS VARIABLE\n  | INT MAS INT\n  | DOUBLE MAS DOUBLE\n  | LONG MAS LONG\n  | FLOAT MAS FLOAT\n  aritmeticos : MENOS\n  | MULTIPLICACION\n  | DIVISION\n  | MODarrayInt : VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_DarrayDouble : VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_DvaloresInt : INT\n  | valoresInt COMA INTvaloresDouble : DOUBLE\n  | valoresDouble COMA DOUBLEstartsWith : STRING PUNTO STARTSWITH PAR_I STRING PAR_D\n  | STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_DlistString : VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D\n  | VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_DlistChar : VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D\n  | VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_DvaloresString : STRING\n  | valoresString COMA STRINGvaloresChar : CHAR\n  | valoresChar COMA CHARsuma : sumIntChar\n  | sumStringChar\n  | sumIntDouble\n  | sumDoubleCharsumIntDouble : INT MAS DOUBLE\n  | DOUBLE MAS INTsumDoubleChar : DOUBLE MAS CHAR\n  | CHAR MAS DOUBLEsumIntChar : INT MAS CHAR\n  | CHAR MAS INTsumStringChar : STRING MAS CHAR\n  | CHAR MAS STRINGasignacionSumDouble : VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleCharasignacionSumString : VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringCharasignacionSumInt : VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntCharasignacion : VAR VARIABLE DOBLE_PUNTO  dectupla\n      | VAL VARIABLE DOBLE_PUNTO dectupla dectupla : PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D\n  | PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D\n  | PAR_I STRINGCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D\n  | PAR_I STRINGCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D dectupla : PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D\n  | PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D\n  | PAR_I FLOATCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D\n  | PAR_I FLOATCLASS COMA  INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D dectupla : PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D\n  | PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D\n  | PAR_I DOUBLECLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D\n  | PAR_I DOUBLECLASS COMA  INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D dectupla : PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D\n  | PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D\n  | PAR_I LONGCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D\n  | PAR_I LONGCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT  PAR_D dectupla : PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D\n  | PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D\n  | PAR_I INTCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D\n  | PAR_I INTCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D asignacionInt : VAR VARIABLE IGUAL intvalues\n    | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues\n    | VAL VARIABLE IGUAL intvalues\n    | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvaluesintvalues : INT\n  | stringCastIntasignacionLong : VAR VARIABLE IGUAL longvalues\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues\n  | VAL VARIABLE IGUAL longvalues\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalueslongvalues : LONG\n  | intvalues\n  | stringCastLongasignacionFloat : VAR VARIABLE IGUAL floatvalues\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues\n  | VAL VARIABLE IGUAL floatvalues\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvaluesfloatvalues : FLOAT\n  | longvalues\n  | stringCastFloatasignacionDouble : VAR VARIABLE IGUAL doublevalues\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues\n  | VAL VARIABLE IGUAL doublevalues\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevaluesdoublevalues : DOUBLE\n  | floatvalues\n  | stringCastDoublestringCastInt : STRING PUNTO TO_INTstringCastLong : STRING PUNTO TO_LONGstringCastFloat : STRING PUNTO TO_FLOATstringCastDouble : STRING PUNTO TO_DOUBLE'
    
_lr_action_items = {end':([1,4,6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,48,49,50,51,52,53,54,55,57,72,79,80,81,82,83,84,85,86,89,99,118,119,120,121,122,129,146,179,181,182,183,184,185,186,187,188,189,190,191,192,196,197,198,199,200,201,202,203,204,205,206,207,208,219,220,221,222,223,224,225,226,227,228,229,232,280,281,282,316,386,387,388,389,396,397,398,402,403,404,405,408,411,412,413,414,415,416,417,418,419,420,421,449,459,460,461,462,463,464,465,466,467,469,471,472,473,474,475,476,478,479,480,481,484,485,486,487,489,490,491,492,493,494,495,498,499,500,502,503,504,505,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,546,568,578,579,615,616,620,627,680,682,688,689,690,691,727,731,732,733,734,735,736,737,738,767,806,807,809,811,833,835,838,839,840,841,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,892,893,],[0,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,-15,-16,-17,-18,-20,-19,-227,-228,-21,-152,-116,-117,-118,-119,-113,-114,-115,-2,-232,-149,-270,-300,-301,-302,-303,-154,-151,-145,-146,-49,-51,-53,-178,-348,-342,-355,-362,-74,-81,-87,-346,-366,-352,-359,-155,-156,-354,-347,-361,-368,-157,-158,-320,-50,-52,-54,-179,-350,-344,-357,-364,-76,-83,-89,-321,-1,-153,-187,-231,-267,-265,-273,-271,-264,-266,-272,-268,-269,-274,-275,-310,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,-121,-160,-161,-162,-163,-164,-370,-369,-371,-372,-177,-159,-64,-349,-352,-353,-346,-66,-343,-318,-346,-69,-356,-359,-360,-71,-363,-312,-314,-366,-367,-346,-78,-75,-316,-85,-82,-91,-88,-65,-351,-67,-345,-319,-70,-358,-72,-365,-313,-315,-79,-77,-317,-86,-84,-92,-90,-290,-120,-165,-172,-167,-171,-180,-226,-291,-229,-133,-132,-134,-135,-182,-230,-129,-128,-130,-131,-137,-136,-138,-181,-183,-184,-284,-285,-295,-293,-294,-292,-185,-186,-322,-323,-324,-325,-338,-339,-340,-341,-334,-335,-336,-337,-330,-331,-332,-333,-326,-327,-328,-329,-166,-168,]),'MATCH':([3,163,],[44,44,]),'PAR_I':([3,17,18,19,31,32,33,43,58,72,76,91,100,101,102,103,126,129,146,163,175,182,193,195,219,230,231,281,345,440,557,633,637,641,684,692,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,722,723,842,867,],[45,59,60,61,64,65,66,69,95,-152,148,150,194,217,194,217,279,-154,-151,329,335,45,350,352,45,368,369,-153,456,566,329,148,566,194,566,45,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,765,766,868,889,]),'LLAVE_D':([6,7,8,9,10,11,12,13,14,15,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,48,49,50,51,52,53,54,55,57,72,74,75,76,77,78,79,80,81,82,83,84,85,89,99,118,119,120,121,122,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,151,152,153,154,155,156,157,158,159,160,161,162,164,166,167,168,179,181,182,183,184,185,186,187,188,189,190,191,192,196,197,198,199,200,201,202,203,204,205,206,207,208,219,220,221,222,223,224,225,226,227,228,229,232,281,282,283,284,286,287,289,290,292,293,295,296,298,299,301,302,316,317,318,319,320,321,322,323,324,325,326,327,331,386,387,388,389,396,397,398,402,403,404,405,408,411,412,413,414,415,416,417,418,419,420,421,436,437,440,441,442,443,444,445,446,448,449,459,460,461,462,463,464,465,466,467,469,471,472,473,474,475,476,478,479,480,481,484,485,486,487,489,490,491,492,493,494,495,498,499,500,502,503,504,505,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,539,545,546,549,550,552,553,554,555,556,558,559,560,561,562,563,568,578,579,615,616,620,627,629,630,632,637,638,639,640,677,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,724,727,731,732,733,734,735,736,737,738,767,770,771,804,805,806,807,809,811,833,835,838,839,840,841,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,892,893,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,-15,-16,-17,-18,-20,-19,-227,-228,-21,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,-149,-270,-300,-301,-302,-303,280,-154,282,-188,-189,-190,-191,-192,-193,-194,-196,-200,-204,-208,-212,-216,-220,-151,316,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-116,-119,-117,-118,-145,-146,-49,-51,-53,-178,-348,-342,-355,-362,-74,-81,-87,-346,-366,-352,-359,-155,-156,-354,-347,-361,-368,-157,-158,-320,-50,-52,-54,-179,-350,-344,-357,-364,-76,-83,-89,-321,-153,-187,-197,-198,-201,-202,-205,-206,-209,-210,-213,-214,-217,-218,-221,-222,-231,-33,-34,-35,-36,-37,-38,-39,-41,-40,-42,-43,449,-267,-265,-273,-271,-264,-266,-272,-268,-269,-274,-275,-310,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,-111,-112,-108,-93,-94,-95,-106,-107,-109,568,-121,-160,-161,-162,-163,-164,-370,-369,-371,-372,-177,-159,-64,-349,-352,-353,-346,-66,-343,-318,-346,-69,-356,-359,-360,-71,-363,-312,-314,-366,-367,-346,-78,-75,-316,-85,-82,-91,-88,-65,-351,-67,-345,-319,-70,-358,-72,-365,-313,-315,-79,-77,-317,-86,-84,-92,-90,620,627,-290,-195,-224,-44,-45,-46,-47,-48,-199,-203,-207,-211,-215,-219,-120,-165,-172,-167,-171,-180,-226,-223,681,682,688,689,690,691,727,-291,-225,-229,-96,732,733,734,735,-133,-132,-134,-135,736,737,738,767,-182,-230,-129,-128,-130,-131,-137,-136,-138,-181,806,807,840,841,-183,-184,-284,-285,-295,-293,-294,-292,-185,-186,-322,-323,-324,-325,-338,-339,-340,-341,-334,-335,-336,-337,-330,-331,-332,-333,-326,-327,-328,-329,-166,-168,]),'ELSE':([14,54,55,88,89,160,316,627,682,731,],[56,90,-228,90,-232,56,-231,-226,730,-230,]),'INT':([22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,45,54,55,59,60,64,66,69,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,100,102,109,118,119,120,121,122,129,145,146,147,148,150,152,153,154,155,156,157,158,159,160,161,162,164,166,167,168,172,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,196,197,198,199,200,201,202,203,204,205,206,207,208,219,220,221,222,223,224,225,226,227,228,229,232,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,262,263,265,266,267,271,272,275,277,281,282,285,316,328,329,330,350,352,354,355,356,357,368,369,370,371,372,373,379,386,387,388,389,396,397,398,402,403,404,405,408,411,412,413,414,415,416,417,418,419,420,421,422,425,436,437,440,441,442,443,444,445,446,450,451,459,460,461,462,463,464,465,466,467,469,471,472,473,474,475,476,478,479,480,481,484,485,486,487,489,490,491,492,493,494,495,498,499,500,502,503,504,505,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,543,544,546,547,551,565,566,570,577,578,579,582,585,615,616,620,622,623,624,627,635,636,674,680,682,683,727,728,729,731,740,746,747,748,749,767,768,769,806,807,809,810,811,813,822,828,832,833,835,838,839,840,841,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,892,893,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,79,-227,-228,79,79,114,114,79,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,164,-149,196,196,114,-270,-300,-301,-302,-303,-154,304,-151,79,313,114,164,164,164,164,164,164,164,164,164,164,164,-116,-119,-117,-118,164,-145,79,-146,-49,-51,-53,-178,-348,-342,-355,-362,-74,-81,-87,79,-346,-366,-352,-359,-155,-156,-354,-347,-361,-368,-157,-158,-320,-50,-52,-54,-179,-350,-344,-357,-364,-76,-83,-89,-321,114,-241,-242,-243,79,79,79,-260,-261,-262,-263,-280,-281,-282,-283,114,79,164,79,79,411,414,420,424,-153,-187,304,-231,164,447,164,79,79,476,481,476,495,79,79,476,481,476,495,164,-267,-265,-273,-271,-264,-266,-272,-268,-269,-274,-275,-310,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,541,164,-111,-112,-108,-93,-94,-95,-106,-107,-109,164,164,-160,-161,-162,-163,-164,-370,-369,-371,-372,-177,-159,-64,-349,-352,-353,-346,-66,-343,-318,-346,-69,-356,-359,-360,-71,-363,-312,-314,-366,-367,-346,-78,-75,-316,-85,-82,-91,-88,-65,-351,-67,-345,-319,-70,-358,-72,-365,-313,-315,-79,-77,-317,-86,-84,-92,-90,625,626,-290,628,164,164,634,164,79,-165,-172,411,420,-167,-171,-180,675,676,164,-226,79,164,164,-291,-229,-96,-182,164,164,-230,774,781,782,783,784,-181,164,164,-183,-184,-284,843,-285,845,854,860,864,-295,-293,-294,-292,-185,-186,890,-322,-323,-324,-325,-338,-339,-340,-341,-334,-335,-336,-337,-330,-331,-332,-333,-326,-327,-328,-329,891,-166,-168,]),'DOUBLE':([22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,45,54,55,59,60,64,66,69,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,100,102,109,118,119,120,121,122,129,145,146,147,150,152,153,154,155,156,157,158,159,160,161,162,164,166,167,168,172,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,196,197,198,199,200,201,202,203,204,205,206,207,208,219,220,221,222,223,224,225,226,227,228,229,232,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,262,263,265,266,267,271,272,275,281,282,294,316,328,329,330,350,352,357,368,369,373,379,386,387,388,389,396,397,398,402,403,404,405,408,411,412,413,414,415,416,417,418,419,420,421,425,436,437,440,441,442,443,444,445,446,450,451,459,460,461,462,463,464,465,466,467,469,471,472,473,474,475,476,478,479,480,481,484,485,486,487,489,490,491,492,493,494,495,498,499,500,502,503,504,505,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,546,551,565,566,570,577,578,579,586,587,615,616,620,624,627,635,636,674,680,682,683,727,728,729,731,741,754,755,756,757,767,768,769,806,807,809,811,812,815,819,823,831,833,835,838,839,840,841,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,892,893,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,82,-227,-228,82,82,117,117,82,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,166,-149,197,197,117,-270,-300,-301,-302,-303,-154,307,-151,82,117,166,166,166,166,166,166,166,166,166,166,166,-116,-119,-117,-118,166,-145,82,-146,-49,-51,-53,-178,-348,-342,-355,-362,-74,-81,-87,82,-346,-366,-352,-359,-155,-156,-354,-347,-361,-368,-157,-158,-320,-50,-52,-54,-179,-350,-344,-357,-364,-76,-83,-89,-321,117,-241,-242,-243,82,82,82,-260,-261,-262,-263,-280,-281,-282,-283,117,82,166,82,82,413,416,419,-153,-187,307,-231,166,82,166,82,82,493,82,82,493,166,-267,-265,-273,-271,-264,-266,-272,-268,-269,-274,-275,-310,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,166,-111,-112,-108,-93,-94,-95,-106,-107,-109,166,166,-160,-161,-162,-163,-164,-370,-369,-371,-372,-177,-159,-64,-349,-352,-353,-346,-66,-343,-318,-346,-69,-356,-359,-360,-71,-363,-312,-314,-366,-367,-346,-78,-75,-316,-85,-82,-91,-88,-65,-351,-67,-345,-319,-70,-358,-72,-365,-313,-315,-79,-77,-317,-86,-84,-92,-90,-290,166,166,82,166,82,-165,-172,416,413,-167,-171,-180,166,-226,82,166,166,-291,-229,-96,-182,166,166,-230,776,789,790,791,792,-181,166,166,-183,-184,-284,-285,844,847,851,855,863,-295,-293,-294,-292,-185,-186,-322,-323,-324,-325,-338,-339,-340,-341,-334,-335,-336,-337,-330,-331,-332,-333,-326,-327,-328,-329,-166,-168,]),'LONG':([22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,45,54,55,59,60,64,66,69,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,100,102,109,118,119,120,121,122,129,145,146,147,150,152,153,154,155,156,157,158,159,160,161,162,164,166,167,168,172,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,196,197,198,199,200,201,202,203,204,205,206,207,208,219,220,221,222,223,224,225,226,227,228,229,232,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,262,263,265,266,267,273,281,282,288,316,328,329,330,350,352,354,356,357,368,369,370,372,373,379,386,387,388,389,396,397,398,402,403,404,405,408,411,412,413,414,415,416,417,418,419,420,421,425,436,437,440,441,442,443,444,445,446,450,451,459,460,461,462,463,464,465,466,467,469,471,472,473,474,475,476,478,479,480,481,484,485,486,487,489,490,491,492,493,494,495,498,499,500,502,503,504,505,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,546,551,565,566,570,577,578,579,615,616,620,624,627,635,636,674,680,682,683,727,728,729,731,750,751,752,753,767,768,769,806,807,809,811,814,818,826,830,833,835,838,839,840,841,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,892,893,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,80,-227,-228,80,80,115,115,80,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,167,-149,198,198,115,-270,-300,-301,-302,-303,-154,305,-151,80,115,167,167,167,167,167,167,167,167,167,167,167,-116,-119,-117,-118,167,-145,80,-146,-49,-51,-53,-178,-348,-342,-355,-362,-74,-81,-87,80,-346,-366,-352,-359,-155,-156,-354,-347,-361,-368,-157,-158,-320,-50,-52,-54,-179,-350,-344,-357,-364,-76,-83,-89,-321,115,-241,-242,-243,80,80,80,-260,-261,-262,-263,-280,-281,-282,-283,115,80,167,80,80,417,-153,-187,305,-231,167,80,167,80,80,474,474,474,80,80,474,474,474,167,-267,-265,-273,-271,-264,-266,-272,-268,-269,-274,-275,-310,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,167,-111,-112,-108,-93,-94,-95,-106,-107,-109,167,167,-160,-161,-162,-163,-164,-370,-369,-371,-372,-177,-159,-64,-349,-352,-353,-346,-66,-343,-318,-346,-69,-356,-359,-360,-71,-363,-312,-314,-366,-367,-346,-78,-75,-316,-85,-82,-91,-88,-65,-351,-67,-345,-319,-70,-358,-72,-365,-313,-315,-79,-77,-317,-86,-84,-92,-90,-290,167,167,80,167,80,-165,-172,-167,-171,-180,167,-226,80,167,167,-291,-229,-96,-182,167,167,-230,785,786,787,788,-181,167,167,-183,-184,-284,-285,846,850,858,862,-295,-293,-294,-292,-185,-186,-322,-323,-324,-325,-338,-339,-340,-341,-334,-335,-336,-337,-330,-331,-332,-333,-326,-327,-328,-329,-166,-168,]),'FLOAT':([22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,45,54,55,59,60,64,66,69,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,100,102,109,118,119,120,121,122,129,145,146,147,150,152,153,154,155,156,157,158,159,160,161,162,164,166,167,168,172,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,196,197,198,199,200,201,202,203,204,205,206,207,208,219,220,221,222,223,224,225,226,227,228,229,232,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,262,263,265,266,267,274,281,282,291,316,328,329,330,350,352,356,357,368,369,372,373,379,386,387,388,389,396,397,398,402,403,404,405,408,411,412,413,414,415,416,417,418,419,420,421,425,436,437,440,441,442,443,444,445,446,450,451,459,460,461,462,463,464,465,466,467,469,471,472,473,474,475,476,478,479,480,481,484,485,486,487,489,490,491,492,493,494,495,498,499,500,502,503,504,505,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,546,551,565,566,570,577,578,579,615,616,620,624,627,635,636,674,680,682,683,727,728,729,731,758,759,760,761,767,768,769,806,807,809,811,816,820,824,827,833,835,838,839,840,841,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,892,893,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,81,-227,-228,81,81,116,116,81,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,168,-149,199,199,116,-270,-300,-301,-302,-303,-154,306,-151,81,116,168,168,168,168,168,168,168,168,168,168,168,-116,-119,-117,-118,168,-145,81,-146,-49,-51,-53,-178,-348,-342,-355,-362,-74,-81,-87,81,-346,-366,-352,-359,-155,-156,-354,-347,-361,-368,-157,-158,-320,-50,-52,-54,-179,-350,-344,-357,-364,-76,-83,-89,-321,116,-241,-242,-243,81,81,81,-260,-261,-262,-263,-280,-281,-282,-283,116,81,168,81,81,418,-153,-187,306,-231,168,81,168,81,81,486,486,81,81,486,486,168,-267,-265,-273,-271,-264,-266,-272,-268,-269,-274,-275,-310,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,168,-111,-112,-108,-93,-94,-95,-106,-107,-109,168,168,-160,-161,-162,-163,-164,-370,-369,-371,-372,-177,-159,-64,-349,-352,-353,-346,-66,-343,-318,-346,-69,-356,-359,-360,-71,-363,-312,-314,-366,-367,-346,-78,-75,-316,-85,-82,-91,-88,-65,-351,-67,-345,-319,-70,-358,-72,-365,-313,-315,-79,-77,-317,-86,-84,-92,-90,-290,168,168,81,168,81,-165,-172,-167,-171,-180,168,-226,81,168,168,-291,-229,-96,-182,168,168,-230,793,794,795,796,-181,168,168,-183,-184,-284,-285,848,852,856,859,-295,-293,-294,-292,-185,-186,-322,-323,-324,-325,-338,-339,-340,-341,-334,-335,-336,-337,-330,-331,-332,-333,-326,-327,-328,-329,-166,-168,]),'CHAR':([22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,45,54,55,59,60,64,66,69,72,74,75,76,77,78,79,80,81,82,83,84,85,89,92,99,100,102,109,118,119,120,121,122,129,145,146,147,150,152,153,154,155,156,157,158,159,160,161,162,164,166,167,168,172,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,196,197,198,199,200,201,202,203,204,205,206,207,208,219,220,221,222,223,224,225,226,227,228,229,232,243,244,245,246,247,250,251,252,253,262,265,269,270,272,275,281,282,300,316,328,329,330,350,352,355,357,358,359,368,369,371,373,374,375,379,386,387,388,389,396,397,398,402,403,404,405,408,411,412,413,414,415,416,417,418,419,420,421,425,436,437,440,441,442,443,444,445,446,450,451,459,460,461,462,463,464,465,466,467,469,471,472,473,474,475,476,478,479,480,481,484,485,486,487,489,490,491,492,493,494,495,498,499,500,502,503,504,505,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,546,551,565,566,570,577,578,579,581,585,615,616,620,624,627,635,636,674,680,682,683,727,728,729,731,762,765,767,768,769,806,807,809,811,833,834,835,838,839,840,841,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,892,893,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,75,-227,-228,75,75,113,113,75,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,170,-149,191,228,113,-270,-300,-301,-302,-303,-154,309,-151,75,113,170,170,170,170,170,170,170,170,170,170,170,-116,-119,-117,-118,170,-145,75,-146,-49,-51,-53,-178,-348,-342,-355,-362,-74,-81,-87,75,-346,-366,-352,-359,-155,-156,-354,-347,-361,-368,-157,-158,-320,-50,-52,-54,-179,-350,-344,-357,-364,-76,-83,-89,-321,113,-241,-242,-243,385,-260,-261,-262,-263,170,170,408,409,415,421,-153,-187,309,-231,445,75,170,75,75,482,496,501,503,75,75,482,496,501,533,170,-267,-265,-273,-271,-264,-266,-272,-268,-269,-274,-275,-310,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,170,-111,-112,-108,-93,-94,-95,-106,-107,-109,170,170,-160,-161,-162,-163,-164,-370,-369,-371,-372,-177,-159,-64,-349,-352,-353,-346,-66,-343,-318,-346,-69,-356,-359,-360,-71,-363,-312,-314,-366,-367,-346,-78,-75,-316,-85,-82,-91,-88,-65,-351,-67,-345,-319,-70,-358,-72,-365,-313,-315,-79,-77,-317,-86,-84,-92,-90,-290,170,170,75,445,75,-165,-172,415,421,-167,-171,-180,170,-226,75,445,170,-291,-229,-96,-182,170,170,-230,798,798,-181,170,170,-183,-184,-284,-285,-295,865,-293,-294,-292,-185,-186,-322,-323,-324,-325,-338,-339,-340,-341,-334,-335,-336,-337,-330,-331,-332,-333,-326,-327,-328,-329,-166,-168,]),'RETURN':([22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,54,55,72,74,75,76,77,78,79,80,81,82,83,84,85,89,99,118,119,120,121,122,129,146,152,153,154,155,156,157,158,159,160,161,162,164,166,167,168,179,181,182,183,184,185,186,187,188,189,190,191,192,196,197,198,199,200,201,202,203,204,205,206,207,208,219,220,221,222,223,224,225,226,227,228,229,232,281,282,316,317,318,319,320,321,322,323,324,325,326,327,386,387,388,389,396,397,398,402,403,404,405,408,411,412,413,414,415,416,417,418,419,420,421,436,437,440,441,442,443,444,445,446,450,459,460,461,462,463,464,465,466,467,469,471,472,473,474,475,476,478,479,480,481,484,485,486,487,489,490,491,492,493,494,495,498,499,500,502,503,504,505,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,546,569,571,578,579,615,616,620,627,680,682,683,727,731,767,806,807,809,811,833,835,838,839,840,841,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,892,893,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,-227,-228,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-232,-149,-270,-300,-301,-302,-303,-154,-151,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-116,-119,-117,-118,-145,-146,-49,-51,-53,-178,-348,-342,-355,-362,-74,-81,-87,-346,-366,-352,-359,-155,-156,-354,-347,-361,-368,-157,-158,-320,-50,-52,-54,-179,-350,-344,-357,-364,-76,-83,-89,-321,-153,-187,-231,-33,-34,-35,-36,-37,-38,-39,-41,-40,-42,-43,-267,-265,-273,-271,-264,-266,-272,-268,-269,-274,-275,-310,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,-111,-112,-108,-93,-94,-95,-106,-107,-109,570,-160,-161,-162,-163,-164,-370,-369,-371,-372,-177,-159,-64,-349,-352,-353,-346,-66,-343,-318,-346,-69,-356,-359,-360,-71,-363,-312,-314,-366,-367,-346,-78,-75,-316,-85,-82,-91,-88,-65,-351,-67,-345,-319,-70,-358,-72,-365,-313,-315,-79,-77,-317,-86,-84,-92,-90,-290,636,641,-165,-172,-167,-171,-180,-226,-291,-229,-96,-182,-230,-181,-183,-184,-284,-285,-295,-293,-294,-292,-185,-186,-322,-323,-324,-325,-338,-339,-340,-341,-334,-335,-336,-337,-330,-331,-332,-333,-326,-327,-328,-329,-166,-168,]),'CASE':([22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,41,43,70,72,74,75,76,77,78,79,80,81,82,83,84,85,99,118,119,120,121,122,129,138,139,140,141,142,143,144,146,164,166,167,168,179,181,182,183,184,185,186,187,188,189,190,191,192,196,197,198,199,200,201,202,203,204,205,206,207,208,219,220,221,222,223,224,225,226,227,228,229,232,281,386,387,388,389,396,397,398,402,403,404,405,408,411,412,413,414,415,416,417,418,419,420,421,436,437,440,441,442,443,444,445,446,459,460,461,462,463,464,465,466,467,469,471,472,473,474,475,476,478,479,480,481,484,485,486,487,489,490,491,492,493,494,495,498,499,500,502,503,504,505,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,546,549,550,552,553,554,555,556,558,559,560,561,562,563,578,579,615,616,680,681,683,809,811,833,835,838,839,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,892,893,],[-55,-56,-57,-58,-59,-60,-61,-62,-63,-68,-73,-80,-169,-170,-173,-174,-150,145,-152,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-149,-270,-300,-301,-302,-303,-154,285,288,291,294,297,300,303,-151,-116,-119,-117,-118,-145,-146,-49,-51,-53,-178,-348,-342,-355,-362,-74,-81,-87,-346,-366,-352,-359,-155,-156,-354,-347,-361,-368,-157,-158,-320,-50,-52,-54,-179,-350,-344,-357,-364,-76,-83,-89,-321,-153,-267,-265,-273,-271,-264,-266,-272,-268,-269,-274,-275,-310,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,-111,-112,-108,-93,-94,-95,-106,-107,-109,-160,-161,-162,-163,-164,-370,-369,-371,-372,-177,-159,-64,-349,-352,-353,-346,-66,-343,-318,-346,-69,-356,-359,-360,-71,-363,-312,-314,-366,-367,-346,-78,-75,-316,-85,-82,-91,-88,-65,-351,-67,-345,-319,-70,-358,-72,-365,-313,-315,-79,-77,-317,-86,-84,-92,-90,-290,-195,-224,-44,-45,-46,-47,-48,-199,-203,-207,-211,-215,-219,-165,-172,-167,-171,-291,-225,-96,-284,-285,-295,-293,-294,-292,-322,-323,-324,-325,-338,-339,-340,-341,-334,-335,-336,-337,-330,-331,-332,-333,-326,-327,-328,-329,-166,-168,]),'PUNTO':([34,43,47,72,74,99,112,129,146,149,169,182,190,200,206,207,219,227,281,308,384,438,440,444,477,483,488,497,637,684,692,],[67,-150,87,-152,67,-149,67,-154,-151,314,67,348,349,353,-157,-158,348,349,-153,67,67,564,348,67,580,583,584,588,348,348,348,]),'LLAVE_I':([42,44,56,90,93,94,171,176,242,278,332,333,345,429,430,431,432,433,434,435,439,457,542,548,621,678,679,725,726,],[68,70,92,92,172,-124,330,-125,379,425,450,451,-126,551,551,551,551,551,551,551,565,-127,624,551,674,728,729,768,769,]),'PAR_D':([45,61,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,95,96,97,98,104,105,106,107,108,114,115,116,117,118,119,120,121,122,125,128,164,166,167,168,177,259,260,261,311,312,313,315,329,336,337,338,339,340,341,342,347,351,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,423,426,436,437,447,452,453,458,468,470,516,517,540,546,566,573,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,625,626,628,633,634,642,643,644,645,675,676,680,695,773,774,775,776,797,798,799,800,802,803,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,890,891,],[72,99,129,146,-175,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,176,179,-148,181,242,-234,-235,-236,-237,-116,-117,-118,-119,-270,-300,-301,-302,-303,278,281,-116,-119,-117,-118,345,-238,-239,-240,-176,436,437,439,72,-97,-98,-99,-100,-101,-102,-103,-147,469,-233,-259,-251,-253,-255,-257,-267,-265,-273,-271,-248,-254,-244,-247,-252,-264,-266,-272,-245,-246,-268,-269,-274,-275,-249,-256,-310,-250,-258,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,542,546,-111,-112,567,572,-141,-122,578,579,615,616,621,-290,72,-142,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,678,679,680,436,437,-143,-104,-105,-123,725,726,-291,-144,809,-286,811,-288,833,-298,835,-296,838,839,-287,-289,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,-299,-297,892,893,]),'TRUE':([45,59,60,64,66,69,100,102,109,145,147,150,180,194,243,244,245,246,247,250,251,252,253,258,303,328,329,350,352,360,368,369,376,566,570,577,635,636,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-241,-242,-243,83,-260,-261,-262,-263,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'FLASE':([45,59,60,64,66,69,100,102,109,145,147,150,180,194,243,244,245,246,247,250,251,252,253,258,303,328,329,350,352,360,368,369,376,566,570,577,635,636,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-241,-242,-243,84,-260,-261,-262,-263,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'IGUAL':([62,63,93,94,163,173,174,176,209,210,211,212,213,214,215,233,234,235,236,237,238,239,334,336,337,338,339,340,341,342,345,457,458,557,567,572,590,591,592,613,614,617,618,619,643,644,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,],[100,102,171,-124,328,332,333,-125,354,355,356,357,358,359,360,370,371,372,373,374,375,376,-139,-97,-98,-99,-100,-101,-102,-103,-126,-127,577,328,635,-140,646,647,648,669,670,671,672,673,-104,-105,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,]),'DOBLE_PUNTO':([62,63,93,94,176,178,345,457,],[101,103,175,-124,-125,346,-126,-127,]),'NOT':([64,66,79,80,81,82,83,84,85,105,106,107,108,114,115,116,117,118,119,120,121,122,150,164,166,167,168,243,244,245,246,259,260,261,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,546,680,],[109,109,-116,-117,-118,-119,-113,-114,-115,246,-235,-236,-237,-116,-117,-118,-119,-270,-300,-301,-302,-303,109,-116,-119,-117,-118,109,-241,-242,-243,-238,-239,-240,-259,-251,-253,-255,-257,-267,-265,-273,-271,-248,-254,-244,-247,-252,-264,-266,-272,-245,-246,-268,-269,-274,-275,-249,-256,-310,-250,-258,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,-290,-291,]),'STARTSWITH':([67,349,],[126,126,]),'COMA':([73,74,75,76,77,78,79,80,81,82,83,84,85,336,337,338,339,340,341,342,362,363,364,365,366,426,436,437,447,453,546,633,634,642,643,644,680,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,802,803,843,844,865,866,],[147,-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,-97,-98,-99,-100,-101,-102,-103,509,510,511,512,513,547,-111,-112,-116,574,-290,-108,-116,574,-104,-105,-291,810,-286,812,-288,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,834,-298,836,-296,834,836,-287,-289,-299,-297,]),'MAS':([74,75,76,77,78,79,80,81,82,83,84,85,97,106,110,111,112,113,114,115,116,117,118,119,120,121,122,161,163,164,165,166,167,168,169,170,182,183,190,191,196,197,198,199,219,220,227,228,259,386,387,388,389,392,393,394,395,396,397,398,399,400,401,402,403,404,405,408,411,412,413,414,415,416,417,418,419,420,421,436,437,440,443,444,445,446,481,482,493,495,496,499,501,530,546,637,640,680,684,687,],[-106,-107,-108,-109,-110,-116,-117,-118,-119,-113,-114,-115,180,249,264,267,269,271,272,273,274,275,-270,-300,-301,-302,-303,267,249,272,264,275,273,274,269,271,249,267,269,271,272,275,273,274,249,267,269,271,249,-267,-265,-273,-271,264,267,249,269,-264,-266,-272,267,264,249,-268,-269,-274,-275,-310,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,-111,-112,249,267,269,271,264,581,582,585,586,587,269,589,269,-290,249,267,-291,249,267,]),'AND':([79,80,81,82,83,84,85,105,106,107,108,114,115,116,117,118,119,120,121,122,164,166,167,168,259,260,261,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,546,680,],[-116,-117,-118,-119,-113,-114,-115,244,-235,-236,-237,-116,-117,-118,-119,-270,-300,-301,-302,-303,-116,-119,-117,-118,-238,-239,-240,-259,-251,-253,-255,-257,-267,-265,-273,-271,-248,-254,-244,-247,-252,-264,-266,-272,-245,-246,-268,-269,-274,-275,-249,-256,-310,-250,-258,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,-290,-291,]),'OR':([79,80,81,82,83,84,85,105,106,107,108,114,115,116,117,118,119,120,121,122,164,166,167,168,259,260,261,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399,400,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,546,680,],[-116,-117,-118,-119,-113,-114,-115,245,-235,-236,-237,-116,-117,-118,-119,-270,-300,-301,-302,-303,-116,-119,-117,-118,-238,-239,-240,-259,-251,-253,-255,-257,-267,-265,-273,-271,-248,-254,-244,-247,-252,-264,-266,-272,-245,-246,-268,-269,-274,-275,-249,-256,-310,-250,-258,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,-290,-291,]),'IGUAL_COMPARACION':([79,80,81,82,83,84,85,106,107,110,111,112,113,114,115,116,117,118,119,120,121,122,259,260,386,387,388,389,396,397,398,402,403,404,405,408,411,412,413,414,415,416,417,418,419,420,421,546,680,],[-116,-117,-118,-119,-113,-114,-115,250,250,250,250,250,250,-116,-117,-118,-119,-270,-300,-301,-302,-303,250,250,-267,-265,-273,-271,-264,-266,-272,-268,-269,-274,-275,-310,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,-290,-291,]),'DIFERENTE':([79,80,81,82,83,84,85,106,107,110,111,112,113,114,115,116,117,118,119,120,121,122,259,260,386,387,388,389,396,397,398,402,403,404,405,408,411,412,413,414,415,416,417,418,419,420,421,546,680,],[-116,-117,-118,-119,-113,-114,-115,251,251,251,251,251,251,-116,-117,-118,-119,-270,-300,-301,-302,-303,251,251,-267,-265,-273,-271,-264,-266,-272,-268,-269,-274,-275,-310,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,-290,-291,]),'MAYOR':([79,80,81,82,83,84,85,106,107,110,111,112,113,114,115,116,117,118,119,120,121,122,259,260,386,387,388,389,396,397,398,402,403,404,405,408,411,412,413,414,415,416,417,418,419,420,421,546,680,],[-116,-117,-118,-119,-113,-114,-115,252,252,252,252,252,252,-116,-117,-118,-119,-270,-300,-301,-302,-303,252,252,-267,-265,-273,-271,-264,-266,-272,-268,-269,-274,-275,-310,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,-290,-291,]),'MENOR':([79,80,81,82,83,84,85,106,107,110,111,112,113,114,115,116,117,118,119,120,121,122,259,260,386,387,388,389,396,397,398,402,403,404,405,408,411,412,413,414,415,416,417,418,419,420,421,546,680,],[-116,-117,-118,-119,-113,-114,-115,253,253,253,253,253,253,-116,-117,-118,-119,-270,-300,-301,-302,-303,253,253,-267,-265,-273,-271,-264,-266,-272,-268,-269,-274,-275,-310,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,-290,-291,]),'MENOS':([79,80,81,82,106,110,111,114,115,116,117,118,119,120,121,122,161,163,164,165,166,167,168,182,183,196,197,198,199,219,220,259,386,387,388,389,392,393,394,396,397,398,399,400,401,402,403,404,405,408,411,412,413,414,415,416,417,418,419,420,421,440,443,446,637,640,684,687,],[-116,-117,-118,-119,254,254,254,-116,-117,-118,-119,-270,-300,-301,-302,-303,254,254,-116,254,-119,-117,-118,254,254,-116,-119,-117,-118,254,254,254,-267,-265,-273,-271,254,254,254,-264,-266,-272,254,254,254,-268,-269,-274,-275,-310,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,254,254,254,254,254,254,254,]),'MULTIPLICACION':([79,80,81,82,106,110,111,114,115,116,117,118,119,120,121,122,161,163,164,165,166,167,168,182,183,196,197,198,199,219,220,259,386,387,388,389,392,393,394,396,397,398,399,400,401,402,403,404,405,408,411,412,413,414,415,416,417,418,419,420,421,440,443,446,637,640,684,687,],[-116,-117,-118,-119,255,255,255,-116,-117,-118,-119,-270,-300,-301,-302,-303,255,255,-116,255,-119,-117,-118,255,255,-116,-119,-117,-118,255,255,255,-267,-265,-273,-271,255,255,255,-264,-266,-272,255,255,255,-268,-269,-274,-275,-310,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,255,255,255,255,255,255,255,]),'DIVISION':([79,80,81,82,106,110,111,114,115,116,117,118,119,120,121,122,161,163,164,165,166,167,168,182,183,196,197,198,199,219,220,259,386,387,388,389,392,393,394,396,397,398,399,400,401,402,403,404,405,408,411,412,413,414,415,416,417,418,419,420,421,440,443,446,637,640,684,687,],[-116,-117,-118,-119,256,256,256,-116,-117,-118,-119,-270,-300,-301,-302,-303,256,256,-116,256,-119,-117,-118,256,256,-116,-119,-117,-118,256,256,256,-267,-265,-273,-271,256,256,256,-264,-266,-272,256,256,256,-268,-269,-274,-275,-310,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,256,256,256,256,256,256,256,]),'MOD':([79,80,81,82,106,110,111,114,115,116,117,118,119,120,121,122,161,163,164,165,166,167,168,182,183,196,197,198,199,219,220,259,386,387,388,389,392,393,394,396,397,398,399,400,401,402,403,404,405,408,411,412,413,414,415,416,417,418,419,420,421,440,443,446,637,640,684,687,],[-116,-117,-118,-119,257,257,257,-116,-117,-118,-119,-270,-300,-301,-302,-303,257,257,-116,257,-119,-117,-118,257,257,-116,-119,-117,-118,257,257,257,-267,-265,-273,-271,257,257,257,-264,-266,-272,257,257,257,-268,-269,-274,-275,-310,-309,-311,-307,-276,-308,-304,-278,-279,-277,-305,-306,257,257,257,257,257,257,257,]),'FUNCION_FLECHA':([83,84,85,304,305,306,307,308,309,310,427,428,546,680,],[-113,-114,-115,429,430,431,432,433,434,435,548,433,-290,-291,]),'ARRAYCLASS':([100,101,102,103,175,335,346,361,377,454,455,574,647,648,696,721,772,801,],[193,216,230,240,343,343,343,343,343,343,343,343,697,698,739,764,343,343,]),'LISTCLASS':([100,101,102,103,175,335,346,361,377,454,455,574,669,670,672,673,772,801,],[195,218,231,241,344,344,344,344,344,344,344,344,719,720,722,723,344,344,]),'LONGCLASS':([101,103,175,217,335,346,361,377,454,455,509,510,512,513,574,772,801,],[209,233,340,364,340,340,340,340,340,340,594,598,606,610,340,340,340,]),'INTCLASS':([101,103,175,217,335,346,361,377,454,455,509,511,512,513,574,772,801,],[210,234,339,363,339,339,507,339,339,339,593,602,608,612,339,339,339,]),'FLOATCLASS':([101,103,175,217,335,346,361,377,454,455,509,510,511,512,574,772,801,],[211,235,342,366,342,342,342,342,342,342,596,600,604,607,342,342,342,]),'DOUBLECLASS':([101,103,175,217,335,346,361,377,454,455,509,510,511,513,574,772,801,],[212,236,341,365,341,341,508,341,341,341,595,599,603,611,341,341,341,]),'STRINGCLASS':([101,103,175,217,335,346,361,367,377,378,454,455,510,511,512,513,574,772,801,],[213,237,337,362,337,337,337,515,337,538,337,337,597,601,605,609,337,337,337,]),'CHARCLASS':([101,103,175,335,346,361,367,377,378,454,455,574,772,801,],[214,238,336,336,336,336,514,336,537,336,336,336,336,336,]),'BOOLCLASS':([101,103,175,335,346,361,377,454,455,574,772,801,],[215,239,338,338,338,338,338,338,338,338,338,338,]),'ITERATOR':([124,276,],[277,422,]),'CORCHETE_I':([216,218,240,241,343,344,739,764,],[361,367,377,378,454,455,772,801,]),'SUBGUION':([285,288,291,294,297,300,303,],[427,427,427,427,427,427,427,]),'CORCHETE_D':([336,337,338,339,340,341,342,506,507,508,514,515,536,537,538,575,576,643,644,808,837,],[-97,-98,-99,-100,-101,-102,-103,590,591,592,613,614,617,618,619,643,644,-104,-105,842,867,]),'TO_INT':([348,349,353,580,583,584,588,],[460,465,460,465,465,465,465,]),'TO_DOUBLE':([348,349,353,588,],[461,467,461,467,]),'TO_FLOAT':([348,349,353,584,588,],[462,466,462,466,466,]),'TO_LONG':([348,349,353,580,584,588,],[463,464,463,464,464,464,]),'TO':([424,541,],[543,622,]),'UNTIL':([424,541,],[544,623,]),'NEW':([646,671,],[696,721,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,46,],[1,86,]),'cuerpo':([0,6,10,11,12,13,14,15,46,68,],[4,48,49,50,51,52,53,57,4,127,]),'funcion':([0,6,10,11,12,13,14,15,46,68,],[6,6,6,6,6,6,6,6,6,6,]),'funcall':([0,6,10,11,12,13,14,15,46,68,92,100,102,152,153,154,155,156,157,158,159,160,161,162,172,328,330,379,425,429,430,431,432,433,434,435,450,451,548,551,565,570,624,636,641,674,728,729,768,769,],[7,7,7,7,7,7,7,7,7,7,154,207,207,154,154,154,154,154,154,154,154,154,154,154,154,207,154,154,154,554,554,554,554,554,554,554,154,154,554,154,154,207,154,207,207,154,154,154,154,154,]),'impresion':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,429,430,431,432,433,434,435,450,451,548,551,565,624,674,728,729,768,769,],[8,8,8,8,8,8,8,8,8,8,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,555,555,555,555,555,555,555,155,155,555,155,155,155,155,155,155,155,155,]),'entrada':([0,6,10,11,12,13,14,15,46,68,92,100,102,152,153,154,155,156,157,158,159,160,161,162,172,328,330,379,425,429,430,431,432,433,434,435,450,451,548,551,565,570,624,636,641,674,728,729,768,769,],[9,9,9,9,9,9,9,9,9,9,156,206,206,156,156,156,156,156,156,156,156,156,156,156,156,206,156,156,156,556,556,556,556,556,556,556,156,156,556,156,156,206,156,206,206,156,156,156,156,156,]),'asignacion':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,429,430,431,432,433,434,435,450,451,548,551,565,624,674,728,729,768,769,],[10,10,10,10,10,10,10,10,10,10,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,552,552,552,552,552,552,552,152,152,552,152,152,152,152,152,152,152,152,]),'while':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,450,451,551,565,624,674,728,729,768,769,],[11,11,11,11,11,11,11,11,11,11,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'for':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,450,451,551,565,624,674,728,729,768,769,],[12,12,12,12,12,12,12,12,12,12,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'match':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,450,451,551,565,624,674,728,729,768,769,],[13,13,13,13,13,13,13,13,13,13,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'if':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,450,451,551,565,624,674,728,729,768,769,],[14,14,14,14,14,14,14,14,14,14,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'startsWith':([0,6,10,11,12,13,14,15,45,46,59,60,64,66,68,69,92,100,102,109,145,147,150,152,153,154,155,156,157,158,159,160,161,162,172,180,194,243,247,258,303,328,329,330,350,352,360,368,369,376,379,425,450,451,551,565,566,570,577,624,635,636,674,728,729,768,769,],[15,15,15,15,15,15,15,15,85,15,85,85,85,85,15,85,162,85,85,85,85,85,85,162,162,162,162,162,162,162,162,162,162,162,162,85,85,85,85,85,85,85,85,162,85,85,85,85,85,85,162,162,162,162,162,162,85,85,85,162,85,85,162,162,162,162,162,]),'asignacionLong':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,429,430,431,432,433,434,435,450,451,548,551,565,624,674,728,729,768,769,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'asignacionInt':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,429,430,431,432,433,434,435,450,451,548,551,565,624,674,728,729,768,769,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'asignacionFloat':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,429,430,431,432,433,434,435,450,451,548,551,565,624,674,728,729,768,769,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'asignacionDouble':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,429,430,431,432,433,434,435,450,451,548,551,565,624,674,728,729,768,769,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'asignacionString':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,429,430,431,432,433,434,435,450,451,548,551,565,624,674,728,729,768,769,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'asignacionChar':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,429,430,431,432,433,434,435,450,451,548,551,565,624,674,728,729,768,769,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'asignacionBoolean':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,429,430,431,432,433,434,435,450,451,548,551,565,624,674,728,729,768,769,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'array':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,429,430,431,432,433,434,435,450,451,548,551,565,624,674,728,729,768,769,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'list':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,429,430,431,432,433,434,435,450,451,548,551,565,624,674,728,729,768,769,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'asignacionSumInt':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,429,430,431,432,433,434,435,450,451,548,551,565,624,674,728,729,768,769,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'asignacionSumDouble':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,429,430,431,432,433,434,435,450,451,548,551,565,624,674,728,729,768,769,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'asignacionSumString':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,429,430,431,432,433,434,435,450,451,548,551,565,624,674,728,729,768,769,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'arrayInt':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,429,430,431,432,433,434,435,450,451,548,551,565,624,674,728,729,768,769,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'arrayDouble':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,429,430,431,432,433,434,435,450,451,548,551,565,624,674,728,729,768,769,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'listChar':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,429,430,431,432,433,434,435,450,451,548,551,565,624,674,728,729,768,769,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'listString':([0,6,10,11,12,13,14,15,46,68,92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,429,430,431,432,433,434,435,450,451,548,551,565,624,674,728,729,768,769,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'varparen':([3,163,182,219,440,557,637,684,692,],[43,43,43,43,43,43,43,43,43,]),'io':([5,],[46,]),'elseif':([14,54,88,160,682,],[54,88,88,54,731,]),'else':([14,54,88,160,],[55,89,89,55,]),'valores':([45,69,147,194,329,350,352,368,369,566,],[71,128,311,351,71,468,470,516,517,71,]),'valor':([45,59,60,69,147,180,194,328,329,350,352,368,369,566,570,577,635,636,],[73,97,97,73,73,97,73,441,73,73,73,73,73,73,638,645,683,685,]),'numeros':([45,59,60,64,66,69,92,100,102,109,147,150,152,153,154,155,156,157,158,159,160,161,162,172,180,194,243,247,248,249,262,263,265,266,267,328,329,330,350,352,368,369,379,425,450,451,551,565,566,570,577,624,635,636,674,728,729,768,769,],[77,77,77,110,110,77,165,165,165,110,77,110,165,165,165,165,165,165,165,165,165,165,165,165,77,77,110,382,387,389,392,396,400,402,404,446,77,165,77,77,77,77,165,165,165,165,165,165,77,446,77,165,77,446,165,165,165,165,165,]),'booleanos':([45,59,60,64,66,69,100,102,109,145,147,150,180,194,243,247,258,303,328,329,350,352,360,368,369,376,566,570,577,635,636,],[78,78,78,107,107,78,192,229,260,310,78,107,78,78,107,383,390,310,78,78,78,78,505,78,78,535,78,78,78,78,78,]),'parametro':([58,],[93,]),'parametros':([58,345,],[94,457,]),'valorI':([59,60,180,],[96,98,347,]),'condicional':([64,66,150,243,],[104,125,315,380,]),'valorC':([64,66,150,243,],[105,105,105,105,]),'relacional':([64,66,109,150,243,],[108,108,261,108,108,]),'aritmetica':([64,66,92,100,102,109,150,152,153,154,155,156,157,158,159,160,161,162,172,243,262,265,328,330,379,425,450,451,551,565,570,624,636,674,728,729,768,769,],[111,111,161,183,220,111,111,161,161,161,161,161,161,161,161,161,161,161,161,111,393,399,443,161,161,161,161,161,161,161,640,161,687,161,161,161,161,161,]),'suma':([64,66,92,100,102,109,150,152,153,154,155,156,157,158,159,160,161,162,172,243,262,265,328,330,379,425,450,451,551,565,570,624,636,674,728,729,768,769,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'sumIntChar':([64,66,92,100,102,109,150,152,153,154,155,156,157,158,159,160,161,162,172,243,262,265,328,330,355,371,379,425,450,451,551,565,570,624,636,674,728,729,768,769,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,480,522,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'sumStringChar':([64,66,92,100,102,109,150,152,153,154,155,156,157,158,159,160,161,162,172,243,262,265,328,330,358,374,379,425,450,451,551,565,570,624,636,674,728,729,768,769,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,500,531,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'sumIntDouble':([64,66,92,100,102,109,150,152,153,154,155,156,157,158,159,160,161,162,172,243,262,265,328,330,357,373,379,425,450,451,551,565,570,624,636,674,728,729,768,769,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,491,527,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'sumDoubleChar':([64,66,92,100,102,109,150,152,153,154,155,156,157,158,159,160,161,162,172,243,262,265,328,330,357,373,379,425,450,451,551,565,570,624,636,674,728,729,768,769,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,492,528,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'cases':([70,],[130,]),'casesInt':([70,138,],[131,283,]),'casesLgn':([70,139,],[132,286,]),'casesFlt':([70,140,],[133,289,]),'casesDob':([70,141,],[134,292,]),'casesStr':([70,142,],[135,295,]),'casesChar':([70,143,],[136,298,]),'casesBool':([70,144,],[137,301,]),'caseInt':([70,138,],[138,138,]),'caseLgn':([70,139,],[139,139,]),'caseFlt':([70,140,],[140,140,]),'caseDob':([70,141,],[141,141,]),'caseStr':([70,142,],[142,142,]),'caseChar':([70,143,],[143,143,]),'caseBool':([70,144,],[144,144,]),'contenido':([92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,450,451,551,565,624,674,728,729,768,769,],[151,317,318,319,320,321,322,323,324,325,326,327,331,448,539,545,569,571,630,632,677,724,770,771,804,805,]),'reasignacion':([92,152,153,154,155,156,157,158,159,160,161,162,172,330,379,425,429,430,431,432,433,434,435,450,451,548,551,565,624,674,728,729,768,769,],[153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,553,553,553,553,553,553,553,153,153,553,153,153,153,153,153,153,153,153,]),'dectipo':([93,],[173,]),'dectipoTupla':([93,],[174,]),'declaracion':([95,456,],[177,177,]),'returnfun':([100,102,328,570,636,641,],[184,221,442,639,686,694,]),'tuple':([100,102,641,],[185,222,693,]),'longvalues':([100,102,354,356,357,370,372,373,],[186,223,473,487,487,519,487,487,]),'intvalues':([100,102,354,355,356,357,370,371,372,373,],[187,224,475,479,475,475,475,521,475,475,]),'floatvalues':([100,102,356,357,372,373,],[188,225,485,494,524,494,]),'doublevalues':([100,102,357,373,],[189,226,490,526,]),'returnCastable':([100,102,328,570,636,641,],[200,200,200,200,200,200,]),'castingcall':([100,102,328,570,636,641,],[201,201,201,201,201,201,]),'stringCastLong':([100,102,354,356,357,370,372,373,],[202,202,202,202,202,202,202,202,]),'stringCastInt':([100,102,354,355,356,357,370,371,372,373,],[203,203,203,203,203,203,203,203,203,203,]),'stringCastFloat':([100,102,356,357,372,373,],[204,204,204,204,204,204,]),'stringCastDouble':([100,102,357,373,],[205,205,205,205,]),'dectupla':([101,103,],[208,232,]),'logicos':([105,],[243,]),'comparacion':([106,107,110,111,112,113,259,260,],[247,258,262,265,268,270,247,258,]),'aritmeticos':([106,110,111,161,163,165,182,183,219,220,259,392,393,394,399,400,401,440,443,446,637,640,684,687,],[248,263,266,266,248,263,248,266,248,266,248,263,266,248,266,263,248,248,266,263,248,266,248,266,]),'defcase':([138,139,140,141,142,143,144,],[284,287,290,293,296,299,302,]),'tipo':([175,335,346,361,377,454,455,574,772,801,],[334,453,458,506,536,575,576,642,808,837,]),'tipos':([335,],[452,]),'castingfun':([348,353,],[459,471,]),'codeBlock':([429,430,431,432,433,434,435,548,],[549,558,559,560,561,562,563,629,]),'contenidoLine':([429,430,431,432,433,434,435,548,],[550,550,550,550,550,550,550,550,]),'tiposentry':([453,642,],[573,695,]),'valoresInt':([740,],[773,]),'valoresDouble':([741,],[775,]),'valoresChar':([762,765,],[797,802,]),'valoresString':([763,766,],[799,803,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D','inicio',5,'p_inicio','sintax.py',13),
  ('inicio -> IMPORT io inicio','inicio',3,'p_inicio','sintax.py',14),
  ('inicio -> cuerpo','inicio',1,'p_inicio','sintax.py',15),
  ('io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE','io',7,'p_io','sintax.py',20),
  ('cuerpo -> funcion','cuerpo',1,'p_cuerpo','sintax.py',23),
  ('cuerpo -> funcall','cuerpo',1,'p_cuerpo','sintax.py',24),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintax.py',25),
  ('cuerpo -> entrada','cuerpo',1,'p_cuerpo','sintax.py',26),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintax.py',27),
  ('cuerpo -> while','cuerpo',1,'p_cuerpo','sintax.py',28),
  ('cuerpo -> for','cuerpo',1,'p_cuerpo','sintax.py',29),
  ('cuerpo -> match','cuerpo',1,'p_cuerpo','sintax.py',30),
  ('cuerpo -> if','cuerpo',1,'p_cuerpo','sintax.py',31),
  ('cuerpo -> startsWith','cuerpo',1,'p_cuerpo','sintax.py',32),
  ('cuerpo -> funcion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',33),
  ('cuerpo -> asignacion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',34),
  ('cuerpo -> while cuerpo','cuerpo',2,'p_cuerpo','sintax.py',35),
  ('cuerpo -> for cuerpo','cuerpo',2,'p_cuerpo','sintax.py',36),
  ('cuerpo -> if cuerpo','cuerpo',2,'p_cuerpo','sintax.py',37),
  ('cuerpo -> match cuerpo','cuerpo',2,'p_cuerpo','sintax.py',38),
  ('cuerpo -> startsWith cuerpo','cuerpo',2,'p_cuerpo','sintax.py',39),
  ('contenido -> asignacion','contenido',1,'p_contenido','sintax.py',43),
  ('contenido -> reasignacion','contenido',1,'p_contenido','sintax.py',44),
  ('contenido -> funcall','contenido',1,'p_contenido','sintax.py',45),
  ('contenido -> impresion','contenido',1,'p_contenido','sintax.py',46),
  ('contenido -> entrada','contenido',1,'p_contenido','sintax.py',47),
  ('contenido -> while','contenido',1,'p_contenido','sintax.py',48),
  ('contenido -> for','contenido',1,'p_contenido','sintax.py',49),
  ('contenido -> match','contenido',1,'p_contenido','sintax.py',50),
  ('contenido -> if','contenido',1,'p_contenido','sintax.py',51),
  ('contenido -> aritmetica','contenido',1,'p_contenido','sintax.py',52),
  ('contenido -> startsWith','contenido',1,'p_contenido','sintax.py',53),
  ('contenido -> asignacion contenido','contenido',2,'p_contenido','sintax.py',54),
  ('contenido -> reasignacion contenido','contenido',2,'p_contenido','sintax.py',55),
  ('contenido -> funcall contenido','contenido',2,'p_contenido','sintax.py',56),
  ('contenido -> impresion contenido','contenido',2,'p_contenido','sintax.py',57),
  ('contenido -> entrada contenido','contenido',2,'p_contenido','sintax.py',58),
  ('contenido -> while contenido','contenido',2,'p_contenido','sintax.py',59),
  ('contenido -> for contenido','contenido',2,'p_contenido','sintax.py',60),
  ('contenido -> if contenido','contenido',2,'p_contenido','sintax.py',61),
  ('contenido -> match contenido','contenido',2,'p_contenido','sintax.py',62),
  ('contenido -> aritmetica contenido','contenido',2,'p_contenido','sintax.py',63),
  ('contenido -> startsWith contenido','contenido',2,'p_contenido','sintax.py',64),
  ('contenidoLine -> asignacion','contenidoLine',1,'p_contenidoLine','sintax.py',68),
  ('contenidoLine -> reasignacion','contenidoLine',1,'p_contenidoLine','sintax.py',69),
  ('contenidoLine -> funcall','contenidoLine',1,'p_contenidoLine','sintax.py',70),
  ('contenidoLine -> impresion','contenidoLine',1,'p_contenidoLine','sintax.py',71),
  ('contenidoLine -> entrada','contenidoLine',1,'p_contenidoLine','sintax.py',72),
  ('asignacion -> VAR VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',76),
  ('asignacion -> VAL VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',77),
  ('asignacion -> VAR VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',78),
  ('asignacion -> VAL VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',79),
  ('asignacion -> VAR VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',80),
  ('asignacion -> VAL VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',81),
  ('asignacion -> asignacionLong','asignacion',1,'p_asignacion','sintax.py',82),
  ('asignacion -> asignacionInt','asignacion',1,'p_asignacion','sintax.py',83),
  ('asignacion -> asignacionFloat','asignacion',1,'p_asignacion','sintax.py',84),
  ('asignacion -> asignacionDouble','asignacion',1,'p_asignacion','sintax.py',85),
  ('asignacion -> asignacionString','asignacion',1,'p_asignacion','sintax.py',86),
  ('asignacion -> asignacionChar','asignacion',1,'p_asignacion','sintax.py',87),
  ('asignacion -> asignacionBoolean','asignacion',1,'p_asignacion','sintax.py',88),
  ('asignacion -> array','asignacion',1,'p_asignacion','sintax.py',89),
  ('asignacion -> list','asignacion',1,'p_asignacion','sintax.py',90),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',93),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',94),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',97),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',98),
  ('asignacionInt -> asignacionSumInt','asignacionInt',1,'p_asignacionInt','sintax.py',99),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',102),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',103),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',106),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',107),
  ('asignacionDouble -> asignacionSumDouble','asignacionDouble',1,'p_asignacionDouble','sintax.py',108),
  ('asignacionString -> VAR VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',111),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',112),
  ('asignacionString -> VAL VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',113),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',114),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',115),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',116),
  ('asignacionString -> asignacionSumString','asignacionString',1,'p_asignacionString','sintax.py',117),
  ('asignacionChar -> VAR VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',120),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',121),
  ('asignacionChar -> VAL VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',122),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',123),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',124),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',125),
  ('asignacionBoolean -> VAR VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',128),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',129),
  ('asignacionBoolean -> VAL VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',130),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',131),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',132),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',133),
  ('reasignacion -> VARIABLE IGUAL valor','reasignacion',3,'p_reasignacion','sintax.py',137),
  ('reasignacion -> VARIABLE IGUAL returnfun','reasignacion',3,'p_reasignacion','sintax.py',138),
  ('reasignacion -> VARIABLE IGUAL aritmetica','reasignacion',3,'p_reasignacion','sintax.py',139),
  ('reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor','reasignacion',6,'p_reasignacion','sintax.py',140),
  ('tipo -> CHARCLASS','tipo',1,'p_tipo','sintax.py',143),
  ('tipo -> STRINGCLASS','tipo',1,'p_tipo','sintax.py',144),
  ('tipo -> BOOLCLASS','tipo',1,'p_tipo','sintax.py',145),
  ('tipo -> INTCLASS','tipo',1,'p_tipo','sintax.py',146),
  ('tipo -> LONGCLASS','tipo',1,'p_tipo','sintax.py',147),
  ('tipo -> DOUBLECLASS','tipo',1,'p_tipo','sintax.py',148),
  ('tipo -> FLOATCLASS','tipo',1,'p_tipo','sintax.py',149),
  ('tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',150),
  ('tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',151),
  ('valor -> STRING','valor',1,'p_valor','sintax.py',154),
  ('valor -> CHAR','valor',1,'p_valor','sintax.py',155),
  ('valor -> VARIABLE','valor',1,'p_valor','sintax.py',156),
  ('valor -> numeros','valor',1,'p_valor','sintax.py',157),
  ('valor -> booleanos','valor',1,'p_valor','sintax.py',158),
  ('valor -> VARIABLE PAR_I VARIABLE PAR_D','valor',4,'p_valor','sintax.py',159),
  ('valor -> VARIABLE PAR_I INT PAR_D','valor',4,'p_valor','sintax.py',160),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintax.py',163),
  ('booleanos -> FLASE','booleanos',1,'p_booleanos','sintax.py',164),
  ('booleanos -> startsWith','booleanos',1,'p_booleanos','sintax.py',165),
  ('numeros -> INT','numeros',1,'p_numeros','sintax.py',168),
  ('numeros -> LONG','numeros',1,'p_numeros','sintax.py',169),
  ('numeros -> FLOAT','numeros',1,'p_numeros','sintax.py',170),
  ('numeros -> DOUBLE','numeros',1,'p_numeros','sintax.py',171),
  ('funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D','funcion',7,'p_funcion','sintax.py',176),
  ('funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D','funcion',6,'p_funcion','sintax.py',177),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo','declaracion',3,'p_declaracion','sintax.py',182),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor','declaracion',5,'p_declaracion_defecto','sintax.py',185),
  ('parametro -> parametros','parametro',1,'p_parametro','sintax.py',188),
  ('parametro -> PAR_I PAR_D','parametro',2,'p_parametro','sintax.py',189),
  ('parametros -> PAR_I declaracion PAR_D','parametros',3,'p_parametros','sintax.py',192),
  ('parametros -> PAR_I declaracion PAR_D parametros','parametros',4,'p_parametros','sintax.py',193),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D','funcion',10,'p_funcion_return','sintax.py',198),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_return','sintax.py',199),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_return','sintax.py',200),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D','funcion',10,'p_funcion_return','sintax.py',201),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',204),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',205),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',206),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',207),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',210),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',211),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',212),
  ('dectipo -> DOBLE_PUNTO tipo','dectipo',2,'p_dectipo','sintax.py',215),
  ('dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D','dectipoTupla',4,'p_dectipoTupla','sintax.py',218),
  ('tipos -> tipo','tipos',1,'p_tipos','sintax.py',221),
  ('tipos -> tipo tiposentry','tipos',2,'p_tipos','sintax.py',222),
  ('tiposentry -> COMA tipo','tiposentry',2,'p_tipoentry','sintax.py',225),
  ('tiposentry -> COMA tipo tiposentry','tiposentry',3,'p_tipoentry','sintax.py',226),
  ('impresion -> PRINTLN PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',231),
  ('impresion -> PRINT PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',232),
  ('valorI -> valor MAS valorI','valorI',3,'p_valorI','sintax.py',235),
  ('valorI -> valor','valorI',1,'p_valorI','sintax.py',236),
  ('entrada -> READLINE PAR_I PAR_D','entrada',3,'p_entrada','sintax.py',241),
  ('funcall -> VARIABLE varparen','funcall',2,'p_funcall','sintax.py',245),
  ('varparen -> PAR_I valores PAR_D','varparen',3,'p_varparen','sintax.py',248),
  ('varparen -> PAR_I PAR_D','varparen',2,'p_varparen','sintax.py',249),
  ('varparen -> varparen PAR_I valores PAR_D','varparen',4,'p_varparen','sintax.py',250),
  ('varparen -> varparen PAR_I PAR_D','varparen',3,'p_varparen','sintax.py',251),
  ('returnfun -> returnCastable','returnfun',1,'p_returnfun','sintax.py',254),
  ('returnfun -> castingcall','returnfun',1,'p_returnfun','sintax.py',255),
  ('returnCastable -> entrada','returnCastable',1,'p_returnCastable','sintax.py',258),
  ('returnCastable -> funcall','returnCastable',1,'p_returnCastable','sintax.py',259),
  ('castingcall -> returnCastable PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',264),
  ('castingcall -> VARIABLE PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',265),
  ('castingfun -> TO_INT','castingfun',1,'p_castingfun','sintax.py',269),
  ('castingfun -> TO_DOUBLE','castingfun',1,'p_castingfun','sintax.py',270),
  ('castingfun -> TO_FLOAT','castingfun',1,'p_castingfun','sintax.py',271),
  ('castingfun -> TO_LONG','castingfun',1,'p_castingfun','sintax.py',272),
  ('array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',277),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',278),
  ('array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',279),
  ('array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',280),
  ('array -> arrayInt','array',1,'p_array','sintax.py',281),
  ('array -> arrayDouble','array',1,'p_array','sintax.py',282),
  ('list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D','list',7,'p_list','sintax.py',286),
  ('list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D','list',7,'p_list','sintax.py',287),
  ('list -> listChar','list',1,'p_list','sintax.py',288),
  ('list -> listString','list',1,'p_list','sintax.py',289),
  ('valores -> valor','valores',1,'p_valores','sintax.py',293),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintax.py',294),
  ('tuple -> PAR_I valores PAR_D','tuple',3,'p_tuple','sintax.py',298),
  ('asignacion -> VAR VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',301),
  ('asignacion -> VAL VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',302),
  ('while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','while',7,'p_while','sintax.py',310),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',10,'p_for','sintax.py',314),
  ('for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',9,'p_for','sintax.py',315),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',316),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',317),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',318),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',319),
  ('match -> VARIABLE MATCH LLAVE_I cases LLAVE_D','match',5,'p_match','sintax.py',323),
  ('cases -> casesInt','cases',1,'p_cases','sintax.py',326),
  ('cases -> casesLgn','cases',1,'p_cases','sintax.py',327),
  ('cases -> casesFlt','cases',1,'p_cases','sintax.py',328),
  ('cases -> casesDob','cases',1,'p_cases','sintax.py',329),
  ('cases -> casesStr','cases',1,'p_cases','sintax.py',330),
  ('cases -> casesChar','cases',1,'p_cases','sintax.py',331),
  ('cases -> casesBool','cases',1,'p_cases','sintax.py',332),
  ('caseInt -> CASE INT FUNCION_FLECHA codeBlock','caseInt',4,'p_caseInt','sintax.py',335),
  ('casesInt -> caseInt','casesInt',1,'p_casesInt','sintax.py',338),
  ('casesInt -> caseInt casesInt','casesInt',2,'p_casesInt','sintax.py',339),
  ('casesInt -> caseInt defcase','casesInt',2,'p_casesInt','sintax.py',340),
  ('caseLgn -> CASE LONG FUNCION_FLECHA codeBlock','caseLgn',4,'p_caseLgn','sintax.py',343),
  ('casesLgn -> caseLgn','casesLgn',1,'p_casesLgn','sintax.py',346),
  ('casesLgn -> caseLgn casesLgn','casesLgn',2,'p_casesLgn','sintax.py',347),
  ('casesLgn -> caseLgn defcase','casesLgn',2,'p_casesLgn','sintax.py',348),
  ('caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock','caseFlt',4,'p_caseFlt','sintax.py',351),
  ('casesFlt -> caseFlt','casesFlt',1,'p_casesFlt','sintax.py',354),
  ('casesFlt -> caseFlt casesFlt','casesFlt',2,'p_casesFlt','sintax.py',355),
  ('casesFlt -> caseFlt defcase','casesFlt',2,'p_casesFlt','sintax.py',356),
  ('caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock','caseDob',4,'p_caseDob','sintax.py',359),
  ('casesDob -> caseDob','casesDob',1,'p_casesDob','sintax.py',362),
  ('casesDob -> caseDob casesDob','casesDob',2,'p_casesDob','sintax.py',363),
  ('casesDob -> caseDob defcase','casesDob',2,'p_casesDob','sintax.py',364),
  ('caseStr -> CASE STRING FUNCION_FLECHA codeBlock','caseStr',4,'p_caseStr','sintax.py',367),
  ('casesStr -> caseStr','casesStr',1,'p_casesStr','sintax.py',370),
  ('casesStr -> caseStr casesStr','casesStr',2,'p_casesStr','sintax.py',371),
  ('casesStr -> caseStr defcase','casesStr',2,'p_casesStr','sintax.py',372),
  ('caseChar -> CASE CHAR FUNCION_FLECHA codeBlock','caseChar',4,'p_caseChar','sintax.py',375),
  ('casesChar -> caseChar','casesChar',1,'p_casesChar','sintax.py',378),
  ('casesChar -> caseChar casesChar','casesChar',2,'p_casesChar','sintax.py',379),
  ('casesChar -> caseChar defcase','casesChar',2,'p_casesChar','sintax.py',380),
  ('caseBool -> CASE booleanos FUNCION_FLECHA codeBlock','caseBool',4,'p_caseBool','sintax.py',383),
  ('casesBool -> caseBool','casesBool',1,'p_casesBool','sintax.py',386),
  ('casesBool -> caseBool casesBool','casesBool',2,'p_casesBool','sintax.py',387),
  ('casesBool -> caseBool defcase','casesBool',2,'p_casesBool','sintax.py',388),
  ('defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock','defcase',4,'p_defcase','sintax.py',392),
  ('codeBlock -> contenidoLine','codeBlock',1,'p_codeBlock','sintax.py',395),
  ('codeBlock -> LLAVE_I contenido LLAVE_D','codeBlock',3,'p_codeBlock','sintax.py',396),
  ('if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','if',7,'p_if','sintax.py',400),
  ('if -> if elseif','if',2,'p_if','sintax.py',401),
  ('if -> if else','if',2,'p_if','sintax.py',402),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','elseif',8,'p_elseif','sintax.py',406),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif','elseif',9,'p_elseif','sintax.py',407),
  ('else -> ELSE LLAVE_I contenido LLAVE_D','else',4,'p_else','sintax.py',410),
  ('else -> elseif else','else',2,'p_else','sintax.py',411),
  ('condicional -> valorC logicos condicional','condicional',3,'p_condicional','sintax.py',415),
  ('condicional -> valorC','condicional',1,'p_condicional','sintax.py',416),
  ('valorC -> VARIABLE','valorC',1,'p_valorC','sintax.py',419),
  ('valorC -> booleanos','valorC',1,'p_valorC','sintax.py',420),
  ('valorC -> relacional','valorC',1,'p_valorC','sintax.py',421),
  ('valorC -> NOT VARIABLE','valorC',2,'p_valorC','sintax.py',422),
  ('valorC -> NOT booleanos','valorC',2,'p_valorC','sintax.py',423),
  ('valorC -> NOT relacional','valorC',2,'p_valorC','sintax.py',424),
  ('logicos -> AND','logicos',1,'p_logicos','sintax.py',427),
  ('logicos -> OR','logicos',1,'p_logicos','sintax.py',428),
  ('logicos -> NOT','logicos',1,'p_logicos','sintax.py',429),
  ('relacional -> numeros comparacion numeros','relacional',3,'p_relacional','sintax.py',434),
  ('relacional -> aritmetica comparacion aritmetica','relacional',3,'p_relacional','sintax.py',435),
  ('relacional -> aritmetica comparacion numeros','relacional',3,'p_relacional','sintax.py',436),
  ('relacional -> numeros comparacion aritmetica','relacional',3,'p_relacional','sintax.py',437),
  ('relacional -> booleanos comparacion booleanos','relacional',3,'p_relacional','sintax.py',438),
  ('relacional -> STRING comparacion STRING','relacional',3,'p_relacional','sintax.py',439),
  ('relacional -> CHAR comparacion CHAR','relacional',3,'p_relacional','sintax.py',440),
  ('relacional -> VARIABLE comparacion numeros','relacional',3,'p_relacional','sintax.py',441),
  ('relacional -> numeros comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',442),
  ('relacional -> VARIABLE comparacion booleanos','relacional',3,'p_relacional','sintax.py',443),
  ('relacional -> booleanos comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',444),
  ('relacional -> VARIABLE comparacion STRING','relacional',3,'p_relacional','sintax.py',445),
  ('relacional -> STRING comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',446),
  ('relacional -> VARIABLE comparacion CHAR','relacional',3,'p_relacional','sintax.py',447),
  ('relacional -> CHAR comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',448),
  ('relacional -> VARIABLE comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',449),
  ('comparacion -> IGUAL_COMPARACION','comparacion',1,'p_comparacion','sintax.py',452),
  ('comparacion -> DIFERENTE','comparacion',1,'p_comparacion','sintax.py',453),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion','sintax.py',454),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion','sintax.py',455),
  ('aritmetica -> numeros aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',459),
  ('aritmetica -> VARIABLE aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',460),
  ('aritmetica -> numeros aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',461),
  ('aritmetica -> VARIABLE aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',462),
  ('aritmetica -> aritmetica aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',463),
  ('aritmetica -> aritmetica aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',464),
  ('aritmetica -> suma','aritmetica',1,'p_aritmetica_suma','sintax.py',467),
  ('aritmetica -> VARIABLE MAS numeros','aritmetica',3,'p_aritmetica_suma','sintax.py',468),
  ('aritmetica -> numeros MAS VARIABLE','aritmetica',3,'p_aritmetica_suma','sintax.py',469),
  ('aritmetica -> VARIABLE MAS VARIABLE','aritmetica',3,'p_aritmetica_suma','sintax.py',470),
  ('aritmetica -> aritmetica MAS numeros','aritmetica',3,'p_aritmetica_suma','sintax.py',471),
  ('aritmetica -> aritmetica MAS VARIABLE','aritmetica',3,'p_aritmetica_suma','sintax.py',472),
  ('aritmetica -> INT MAS INT','aritmetica',3,'p_aritmetica_suma','sintax.py',473),
  ('aritmetica -> DOUBLE MAS DOUBLE','aritmetica',3,'p_aritmetica_suma','sintax.py',474),
  ('aritmetica -> LONG MAS LONG','aritmetica',3,'p_aritmetica_suma','sintax.py',475),
  ('aritmetica -> FLOAT MAS FLOAT','aritmetica',3,'p_aritmetica_suma','sintax.py',476),
  ('aritmeticos -> MENOS','aritmeticos',1,'p_aritmeticos','sintax.py',481),
  ('aritmeticos -> MULTIPLICACION','aritmeticos',1,'p_aritmeticos','sintax.py',482),
  ('aritmeticos -> DIVISION','aritmeticos',1,'p_aritmeticos','sintax.py',483),
  ('aritmeticos -> MOD','aritmeticos',1,'p_aritmeticos','sintax.py',484),
  ('arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D','arrayInt',12,'p_arrayInt','sintax.py',489),
  ('arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D','arrayDouble',12,'p_arrayDouble','sintax.py',492),
  ('valoresInt -> INT','valoresInt',1,'p_valoresInt','sintax.py',495),
  ('valoresInt -> valoresInt COMA INT','valoresInt',3,'p_valoresInt','sintax.py',496),
  ('valoresDouble -> DOUBLE','valoresDouble',1,'p_valoresDouble','sintax.py',499),
  ('valoresDouble -> valoresDouble COMA DOUBLE','valoresDouble',3,'p_valoresDouble','sintax.py',500),
  ('startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D','startsWith',6,'p_startsWith','sintax.py',504),
  ('startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D','startsWith',8,'p_startsWith','sintax.py',505),
  ('listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D','listString',12,'p_listString','sintax.py',519),
  ('listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D','listString',12,'p_listString','sintax.py',520),
  ('listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D','listChar',12,'p_listChar','sintax.py',523),
  ('listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D','listChar',12,'p_listChar','sintax.py',524),
  ('valoresString -> STRING','valoresString',1,'p_valoresString','sintax.py',527),
  ('valoresString -> valoresString COMA STRING','valoresString',3,'p_valoresString','sintax.py',528),
  ('valoresChar -> CHAR','valoresChar',1,'p_valoresChar','sintax.py',531),
  ('valoresChar -> valoresChar COMA CHAR','valoresChar',3,'p_valoresChar','sintax.py',532),
  ('suma -> sumIntChar','suma',1,'p_suma','sintax.py',536),
  ('suma -> sumStringChar','suma',1,'p_suma','sintax.py',537),
  ('suma -> sumIntDouble','suma',1,'p_suma','sintax.py',538),
  ('suma -> sumDoubleChar','suma',1,'p_suma','sintax.py',539),
  ('sumIntDouble -> INT MAS DOUBLE','sumIntDouble',3,'p_sumIntDouble','sintax.py',542),
  ('sumIntDouble -> DOUBLE MAS INT','sumIntDouble',3,'p_sumIntDouble','sintax.py',543),
  ('sumDoubleChar -> DOUBLE MAS CHAR','sumDoubleChar',3,'p_sumDoubleChar','sintax.py',548),
  ('sumDoubleChar -> CHAR MAS DOUBLE','sumDoubleChar',3,'p_sumDoubleChar','sintax.py',549),
  ('sumIntChar -> INT MAS CHAR','sumIntChar',3,'p_sumIntChar','sintax.py',557),
  ('sumIntChar -> CHAR MAS INT','sumIntChar',3,'p_sumIntChar','sintax.py',558),
  ('sumStringChar -> STRING MAS CHAR','sumStringChar',3,'p_sumStringChar','sintax.py',566),
  ('sumStringChar -> CHAR MAS STRING','sumStringChar',3,'p_sumStringChar','sintax.py',567),
  ('asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble','asignacionSumDouble',6,'p_asignacionSumDouble','sintax.py',572),
  ('asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble','asignacionSumDouble',6,'p_asignacionSumDouble','sintax.py',573),
  ('asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar','asignacionSumDouble',6,'p_asignacionSumDouble','sintax.py',574),
  ('asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar','asignacionSumDouble',6,'p_asignacionSumDouble','sintax.py',575),
  ('asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar','asignacionSumString',6,'p_asignacionSumString','sintax.py',578),
  ('asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar','asignacionSumString',6,'p_asignacionSumString','sintax.py',579),
  ('asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar','asignacionSumInt',6,'p_asignacionSumInt','sintax.py',582),
  ('asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar','asignacionSumInt',6,'p_asignacionSumInt','sintax.py',583),
  ('asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla','asignacion',4,'p_asignacion_tupla','sintax.py',587),
  ('asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla','asignacion',4,'p_asignacion_tupla','sintax.py',588),
  ('dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',591),
  ('dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',592),
  ('dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',593),
  ('dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',594),
  ('dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',597),
  ('dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',598),
  ('dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',599),
  ('dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',600),
  ('dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',603),
  ('dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',604),
  ('dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',605),
  ('dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',606),
  ('dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',609),
  ('dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',610),
  ('dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',611),
  ('dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',612),
  ('dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',615),
  ('dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',616),
  ('dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',617),
  ('dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',618),
  ('asignacionInt -> VAR VARIABLE IGUAL intvalues','asignacionInt',4,'p_asignacionInt_cast','sintax.py',623),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues','asignacionInt',6,'p_asignacionInt_cast','sintax.py',624),
  ('asignacionInt -> VAL VARIABLE IGUAL intvalues','asignacionInt',4,'p_asignacionInt_cast','sintax.py',625),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues','asignacionInt',6,'p_asignacionInt_cast','sintax.py',626),
  ('intvalues -> INT','intvalues',1,'p_intvalues','sintax.py',629),
  ('intvalues -> stringCastInt','intvalues',1,'p_intvalues','sintax.py',630),
  ('asignacionLong -> VAR VARIABLE IGUAL longvalues','asignacionLong',4,'p_asignacionLong_cast','sintax.py',633),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues','asignacionLong',6,'p_asignacionLong_cast','sintax.py',634),
  ('asignacionLong -> VAL VARIABLE IGUAL longvalues','asignacionLong',4,'p_asignacionLong_cast','sintax.py',635),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues','asignacionLong',6,'p_asignacionLong_cast','sintax.py',636),
  ('longvalues -> LONG','longvalues',1,'p_longvalues','sintax.py',639),
  ('longvalues -> intvalues','longvalues',1,'p_longvalues','sintax.py',640),
  ('longvalues -> stringCastLong','longvalues',1,'p_longvalues','sintax.py',641),
  ('asignacionFloat -> VAR VARIABLE IGUAL floatvalues','asignacionFloat',4,'p_asignacionFloat_cast','sintax.py',644),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues','asignacionFloat',6,'p_asignacionFloat_cast','sintax.py',645),
  ('asignacionFloat -> VAL VARIABLE IGUAL floatvalues','asignacionFloat',4,'p_asignacionFloat_cast','sintax.py',646),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues','asignacionFloat',6,'p_asignacionFloat_cast','sintax.py',647),
  ('floatvalues -> FLOAT','floatvalues',1,'p_floatvalues','sintax.py',650),
  ('floatvalues -> longvalues','floatvalues',1,'p_floatvalues','sintax.py',651),
  ('floatvalues -> stringCastFloat','floatvalues',1,'p_floatvalues','sintax.py',652),
  ('asignacionDouble -> VAR VARIABLE IGUAL doublevalues','asignacionDouble',4,'p_asignacionDouble_cast','sintax.py',655),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues','asignacionDouble',6,'p_asignacionDouble_cast','sintax.py',656),
  ('asignacionDouble -> VAL VARIABLE IGUAL doublevalues','asignacionDouble',4,'p_asignacionDouble_cast','sintax.py',657),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues','asignacionDouble',6,'p_asignacionDouble_cast','sintax.py',658),
  ('doublevalues -> DOUBLE','doublevalues',1,'p_doublevalues','sintax.py',661),
  ('doublevalues -> floatvalues','doublevalues',1,'p_doublevalues','sintax.py',662),
  ('doublevalues -> stringCastDouble','doublevalues',1,'p_doublevalues','sintax.py',663),
  ('stringCastInt -> STRING PUNTO TO_INT','stringCastInt',3,'p_stringCastInt','sintax.py',672),
  ('stringCastLong -> STRING PUNTO TO_LONG','stringCastLong',3,'p_stringCastLong','sintax.py',688),
  ('stringCastFloat -> STRING PUNTO TO_FLOAT','stringCastFloat',3,'p_stringCastFloat','sintax.py',704),
  ('stringCastDouble -> STRING PUNTO TO_DOUBLE','stringCastDouble',3,'p_stringCastDouble','sintax.py',721),
]

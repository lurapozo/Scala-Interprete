
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARRAYCLASS ARROBA BACKTICK BOOLCLASS CASE CATCH CHAR CHARCLASS CLASS COMA CORCHETE_D CORCHETE_I DEF DIFERENTE DIVISION DO DOBLE_PUNTO DOUBLE DOUBLECLASS ELSE EXTENDS FINAL FINALLY FLASE FLOAT FLOATCLASS FOR FOR_SOME FUNCION_FLECHA HASHTAG IF IGUAL IGUAL_COMPARACION IMPLICIT IMPORT INT INTCLASS ITERATOR LAZY LIBRERIA_IO LISTCLASS LLAVE_D LLAVE_I LONG LONGCLASS MACRO MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MOD MULTIPLICACION NEW NOT NULL OBJECT OR OVERRIDE PACKAGE PAR_D PAR_I PRINT PRINTLN PRIVATE PROTECTED PUNTO READLINE RETURN REVERSE SEALED STARTSWITH STRING STRINGCLASS SUBGUION SUPER THIS THROW TO TO_DOUBLE TO_FLOAT TO_INT TO_LONG TRAIT TRUE TRY TYPE UNTIL VAL VAR VARIABLE WHILE WITH YIELD inicio : OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D\n  | IMPORT io inicio\n  | cuerpo\n   io : VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINEcuerpo : funcion\n  | funcion cuerpo\n  | contenido \n  | contenido cuerpocontenido : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entrada\n  | while\n  | for\n  | match\n  | if\n  | aritmetica\n  | startsWith\n  | asignacion contenido\n  | reasignacion contenido\n  | funcall contenido\n  | impresion contenido\n  | entrada contenido\n  | while contenido\n  | for contenido\n  | if contenido\n  | match contenido\n  | aritmetica contenido\n  | startsWith contenidocontenidoLine : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entradaasignacion : VAR VARIABLE IGUAL VARIABLE\n  | VAL VARIABLE IGUAL VARIABLE\n  | VAR VARIABLE IGUAL aritmetica\n  | VAL VARIABLE IGUAL aritmetica\n  | VAR VARIABLE IGUAL returnfun\n  | VAL VARIABLE IGUAL returnfun\n  | asignacionLong\n  | asignacionInt\n  | asignacionFloat\n  | asignacionDouble\n  | asignacionString\n  | asignacionChar\n  | asignacionBoolean\n  | array\n  | listasignacionLong :  VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLEasignacionInt : VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE\n  | asignacionSumIntasignacionFloat : VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLEasignacionDouble : VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE\n  | asignacionSumDoubleasignacionString : VAR VARIABLE IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAL VARIABLE IGUAL STRING\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE\n  | asignacionSumStringasignacionChar : VAR VARIABLE IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAL VARIABLE IGUAL CHAR\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLEasignacionBoolean : VAR VARIABLE IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAL VARIABLE IGUAL booleanos\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLEreasignacion :  VARIABLE IGUAL valor\n      | VARIABLE IGUAL returnfun\n      | VARIABLE IGUAL aritmetica\n      | VARIABLE PAR_I INT PAR_D IGUAL valortipo : CHARCLASS\n  | STRINGCLASS\n  | BOOLCLASS\n  | INTCLASS\n  | LONGCLASS\n  | DOUBLECLASS\n  | FLOATCLASS\n  | ARRAYCLASS CORCHETE_I tipo CORCHETE_D\n  | LISTCLASS CORCHETE_I tipo CORCHETE_Dvalor : STRING\n  | CHAR\n  | VARIABLE\n  | numeros\n  | booleanos\n  | VARIABLE PAR_I VARIABLE PAR_D\n  | VARIABLE PAR_I INT PAR_Dbooleanos : TRUE\n  | FLASE\n  | startsWithnumeros : INT\n  | LONG\n  | FLOAT\n  | DOUBLEfuncion : DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D\n  | DEF VARIABLE parametro LLAVE_I contenido LLAVE_Ddeclaracion : VARIABLE DOBLE_PUNTO tipodeclaracion :  VARIABLE DOBLE_PUNTO tipo IGUAL valor parametro : parametros\n  | PAR_I PAR_D parametros : PAR_I declaracion PAR_D \n    | PAR_I declaracion PAR_D parametrosfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D\n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D \n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_Ddectipo : DOBLE_PUNTO tipo dectipoTupla : DOBLE_PUNTO PAR_I tipos PAR_Dtipos : tipo\n    | tipo tiposentrytiposentry : COMA tipo \n  | COMA tipo tiposentryimpresion : PRINTLN PAR_I valorI PAR_D\n  | PRINT PAR_I valorI PAR_DvalorI : valor MAS valorI\n  | valorentrada : READLINE PAR_I PAR_Dfuncall : VARIABLE varparen varparen : PAR_I valores PAR_D\n  | PAR_I PAR_D\n  | varparen PAR_I valores PAR_D\n  | varparen PAR_I PAR_D returnfun : returnCastable\n      | castingcallreturnCastable : entrada\n      | funcallcastingcall : returnCastable PUNTO castingfun\n      | VARIABLE PUNTO castingfuncastingfun : TO_INT\n    | TO_DOUBLE\n    | TO_FLOAT\n    | TO_LONGarray : VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | arrayInt\n  | arrayDoublelist : VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D\n  | VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D\n  | listChar\n  | listStringvalores : valor\n  | valor COMA valorestuple : PAR_I valores PAR_Dasignacion : VAR VARIABLE IGUAL tuple \n      | VAL VARIABLE IGUAL tuplewhile : WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_Dfor : FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_Dmatch : VARIABLE MATCH  LLAVE_I cases LLAVE_Dcases : casesInt\n    | casesLgn\n    | casesFlt\n    | casesDob\n    | casesStr\n    | casesChar\n    | casesBoolcaseInt : CASE INT FUNCION_FLECHA codeBlock casesInt : caseInt \n      | caseInt casesInt\n      | caseInt defcasecaseLgn : CASE LONG FUNCION_FLECHA codeBlock casesLgn : caseLgn \n      | caseLgn casesLgn\n      | caseLgn defcasecaseFlt : CASE FLOAT FUNCION_FLECHA codeBlock casesFlt : caseFlt \n      | caseFlt casesFlt\n      | caseFlt defcasecaseDob : CASE DOUBLE FUNCION_FLECHA codeBlock casesDob : caseDob \n      | caseDob casesDob\n      | caseDob defcasecaseStr : CASE STRING FUNCION_FLECHA codeBlock casesStr : caseStr\n      | caseStr casesStr\n      | caseStr defcasecaseChar : CASE CHAR FUNCION_FLECHA codeBlock casesChar : caseChar\n      | caseChar casesChar\n      | caseChar defcasecaseBool : CASE booleanos FUNCION_FLECHA codeBlock casesBool : caseBool\n      | caseBool casesBool\n      | caseBool defcasedefcase : CASE SUBGUION FUNCION_FLECHA codeBlock codeBlock : contenidoLine\n      | LLAVE_I contenido LLAVE_Dif : IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | if elseif\n  | if else\n  elseif : ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseifelse : ELSE LLAVE_I contenido LLAVE_D\n  | elseif elsecondicional : valorC logicos condicional\n  | valorCvalorC : VARIABLE\n  | booleanos\n  | relacional\n  | NOT VARIABLE\n  | NOT booleanos\n  | NOT relacional\n  logicos : AND\n  | ORrelacional : numeros comparacion numeros\n  | aritmetica comparacion aritmetica\n  | aritmetica comparacion numeros\n  | numeros comparacion aritmetica\n  | booleanos comparacion booleanos\n  | STRING comparacion STRING\n  | CHAR comparacion CHAR\n  | VARIABLE comparacion numeros\n  | numeros comparacion VARIABLE\n  | VARIABLE comparacion booleanos\n  | booleanos comparacion VARIABLE\n  | VARIABLE comparacion STRING\n  | STRING comparacion VARIABLE\n  | VARIABLE comparacion CHAR\n  | CHAR comparacion VARIABLE\n  | VARIABLE comparacion VARIABLEcomparacion : IGUAL_COMPARACION\n  | DIFERENTE\n  | MAYOR\n  | MENORaritmetica : numeros aritmeticos numeros\n  | VARIABLE aritmeticos numeros\n  | numeros aritmeticos VARIABLE\n  | VARIABLE aritmeticos VARIABLE\n  | aritmetica aritmeticos numeros\n  | aritmetica aritmeticos VARIABLEaritmetica : suma\n  | VARIABLE MAS numeros\n  | numeros MAS VARIABLE\n  | VARIABLE MAS VARIABLE\n  | aritmetica MAS numeros\n  | aritmetica MAS VARIABLE\n  | INT MAS INT\n  | DOUBLE MAS DOUBLE\n  | LONG MAS LONG\n  | FLOAT MAS FLOAT\n  aritmeticos : MENOS\n  | MULTIPLICACION\n  | DIVISION\n  | MODarrayInt : VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_DarrayDouble : VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_DvaloresInt : INT\n  | valoresInt COMA INTvaloresDouble : DOUBLE\n  | valoresDouble COMA DOUBLEstartsWith : STRING PUNTO STARTSWITH PAR_I STRING PAR_D\n  | STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_DlistString : VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D\n  | VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_DlistChar : VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D\n  | VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_DvaloresString : STRING\n  | valoresString COMA STRINGvaloresChar : CHAR\n  | valoresChar COMA CHARsuma : sumIntChar\n  | sumStringChar\n  | sumIntDouble\n  | sumDoubleCharsumIntDouble : INT MAS DOUBLE\n  | DOUBLE MAS INTsumDoubleChar : DOUBLE MAS CHAR\n  | CHAR MAS DOUBLEsumIntChar : INT MAS CHAR\n  | CHAR MAS INTsumStringChar : STRING MAS CHAR\n  | CHAR MAS STRINGasignacionSumDouble : VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleCharasignacionSumString : VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringCharasignacionSumInt : VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntCharasignacion : VAR VARIABLE DOBLE_PUNTO  dectupla\n      | VAL VARIABLE DOBLE_PUNTO dectupla dectupla : PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D\n  | PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D\n  | PAR_I STRINGCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D\n  | PAR_I STRINGCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D dectupla : PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D\n  | PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D\n  | PAR_I FLOATCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D\n  | PAR_I FLOATCLASS COMA  INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D dectupla : PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D\n  | PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D\n  | PAR_I DOUBLECLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D\n  | PAR_I DOUBLECLASS COMA  INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D dectupla : PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D\n  | PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D\n  | PAR_I LONGCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D\n  | PAR_I LONGCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT  PAR_D dectupla : PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D\n  | PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D\n  | PAR_I INTCLASS COMA  DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D\n  | PAR_I INTCLASS COMA  FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D asignacionInt : VAR VARIABLE IGUAL intvalues\n    | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues\n    | VAL VARIABLE IGUAL intvalues\n    | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvaluesintvalues : INT\n  | stringCastIntasignacionLong : VAR VARIABLE IGUAL longvalues\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues\n  | VAL VARIABLE IGUAL longvalues\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalueslongvalues : LONG\n  | intvalues\n  | stringCastLongasignacionFloat : VAR VARIABLE IGUAL floatvalues\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues\n  | VAL VARIABLE IGUAL floatvalues\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvaluesfloatvalues : FLOAT\n  | longvalues\n  | stringCastFloatasignacionDouble : VAR VARIABLE IGUAL doublevalues\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues\n  | VAL VARIABLE IGUAL doublevalues\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevaluesdoublevalues : DOUBLE\n  | floatvalues\n  | stringCastDoublestringCastInt : STRING PUNTO TO_INTstringCastLong : STRING PUNTO TO_LONGstringCastFloat : STRING PUNTO TO_FLOATstringCastDouble : STRING PUNTO TO_DOUBLE'
    
_lr_action_items = {end':([1,4,6,7,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,59,69,70,72,75,76,77,78,79,80,81,82,83,84,85,87,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,134,135,136,137,138,139,144,145,146,147,149,157,158,159,163,181,182,183,184,185,186,187,188,190,191,192,193,201,203,231,232,233,234,235,236,237,238,239,240,241,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,289,311,314,315,316,317,318,319,324,325,373,431,432,433,445,456,457,458,459,461,463,464,465,466,467,469,470,471,472,475,476,477,478,480,481,482,483,484,485,486,489,490,491,493,494,495,496,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,537,556,567,568,604,605,609,616,666,672,673,674,675,680,712,715,716,717,718,719,720,721,723,752,791,792,794,796,818,820,823,824,825,826,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,877,878,],[0,-3,-5,-7,-18,-9,-10,-11,-12,-13,-14,-15,-16,-17,-19,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-256,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-286,-287,-288,-289,-137,-6,-8,-29,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,-30,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,-253,-251,-103,-259,-257,-2,-254,-255,-260,-261,-219,-262,-294,-290,-136,-250,-252,-258,-263,-291,-292,-264,-265,-296,-295,-297,-293,-138,-141,-36,-38,-40,-165,-334,-328,-341,-348,-61,-68,-74,-332,-352,-338,-345,-340,-333,-347,-354,-306,-37,-39,-41,-166,-336,-330,-343,-350,-63,-70,-76,-307,-132,-133,-1,-147,-148,-149,-150,-151,-146,-140,-174,-218,-98,-99,-83,-108,-356,-355,-357,-358,-164,-51,-335,-338,-339,-332,-53,-329,-304,-332,-56,-342,-345,-346,-58,-349,-298,-300,-352,-353,-332,-65,-62,-302,-72,-69,-78,-75,-52,-337,-54,-331,-305,-57,-344,-59,-351,-299,-301,-66,-64,-303,-73,-71,-79,-77,-276,-107,-152,-159,-154,-158,-167,-213,-277,-120,-119,-121,-122,-216,-169,-116,-115,-117,-118,-124,-123,-125,-217,-168,-170,-171,-270,-271,-281,-279,-280,-278,-172,-173,-308,-309,-310,-311,-324,-325,-326,-327,-320,-321,-322,-323,-316,-317,-318,-319,-312,-313,-314,-315,-153,-155,]),'IGUAL':([3,88,89,141,142,199,223,224,226,254,255,256,257,258,259,260,278,279,280,281,282,283,284,359,361,362,363,364,365,366,367,370,453,454,548,560,579,580,581,602,603,606,607,608,628,629,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,],[57,153,155,221,-111,322,357,358,-112,379,380,381,382,383,384,385,395,396,397,398,399,400,401,-126,-84,-85,-86,-87,-88,-89,-90,-113,-114,565,57,-127,632,633,634,655,656,657,658,659,-91,-92,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,]),'PAR_I':([3,32,33,34,35,36,37,59,71,106,121,123,151,153,154,155,156,189,201,203,225,231,242,244,264,275,276,312,324,370,548,622,626,668,676,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,707,708,827,852,],[58,91,92,93,94,95,96,132,143,195,198,-139,229,243,262,243,262,310,-138,-141,360,374,376,378,374,393,394,198,-140,452,58,195,243,195,374,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,750,751,853,874,]),'MATCH':([3,],[60,]),'MAS':([3,9,31,38,39,40,41,42,43,47,52,53,54,55,106,109,110,111,112,113,116,117,118,121,126,127,128,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,161,166,170,171,172,173,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,231,232,239,240,245,246,247,248,264,265,272,273,300,415,416,417,418,419,420,421,431,432,472,473,484,486,487,490,492,521,537,622,625,666,668,671,],[62,74,90,98,-256,99,100,101,103,104,-286,-287,-288,-289,62,74,103,104,98,-97,-100,-101,-102,-95,-93,-94,-96,-104,-105,-106,-253,-251,-103,-259,-257,-254,-255,-260,-261,-262,-294,-290,288,62,98,74,103,104,90,100,101,99,-250,-252,-258,-263,-291,-292,-264,-265,-296,-295,-297,-293,62,74,103,104,90,99,100,101,62,74,103,104,62,98,74,62,103,74,98,62,-98,-99,570,571,574,575,576,103,578,103,-276,62,74,-277,62,74,]),'MENOS':([3,9,31,38,39,40,41,42,52,53,54,55,106,109,112,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,166,170,171,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,231,232,245,246,247,248,264,265,300,415,416,417,419,420,421,622,625,668,671,],[63,63,-103,63,-256,-106,-104,-105,-286,-287,-288,-289,63,63,63,-104,-105,-106,-253,-251,-103,-259,-257,-254,-255,-260,-261,-262,-294,-290,63,63,63,-103,-104,-105,-106,-250,-252,-258,-263,-291,-292,-264,-265,-296,-295,-297,-293,63,63,-103,-106,-104,-105,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'MULTIPLICACION':([3,9,31,38,39,40,41,42,52,53,54,55,106,109,112,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,166,170,171,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,231,232,245,246,247,248,264,265,300,415,416,417,419,420,421,622,625,668,671,],[64,64,-103,64,-256,-106,-104,-105,-286,-287,-288,-289,64,64,64,-104,-105,-106,-253,-251,-103,-259,-257,-254,-255,-260,-261,-262,-294,-290,64,64,64,-103,-104,-105,-106,-250,-252,-258,-263,-291,-292,-264,-265,-296,-295,-297,-293,64,64,-103,-106,-104,-105,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'DIVISION':([3,9,31,38,39,40,41,42,52,53,54,55,106,109,112,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,166,170,171,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,231,232,245,246,247,248,264,265,300,415,416,417,419,420,421,622,625,668,671,],[65,65,-103,65,-256,-106,-104,-105,-286,-287,-288,-289,65,65,65,-104,-105,-106,-253,-251,-103,-259,-257,-254,-255,-260,-261,-262,-294,-290,65,65,65,-103,-104,-105,-106,-250,-252,-258,-263,-291,-292,-264,-265,-296,-295,-297,-293,65,65,-103,-106,-104,-105,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'MOD':([3,9,31,38,39,40,41,42,52,53,54,55,106,109,112,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,166,170,171,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,231,232,245,246,247,248,264,265,300,415,416,417,419,420,421,622,625,668,671,],[66,66,-103,66,-256,-106,-104,-105,-286,-287,-288,-289,66,66,66,-104,-105,-106,-253,-251,-103,-259,-257,-254,-255,-260,-261,-262,-294,-290,66,66,66,-103,-104,-105,-106,-250,-252,-258,-263,-291,-292,-264,-265,-296,-295,-297,-293,66,66,-103,-106,-104,-105,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'LLAVE_D':([6,7,9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,59,69,70,72,75,76,77,78,79,80,81,82,83,84,85,87,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,134,135,136,137,138,144,145,146,147,149,157,158,159,163,181,182,183,184,185,186,187,188,190,191,192,193,194,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,230,231,232,233,234,235,236,237,238,239,240,241,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,289,314,315,316,317,318,319,324,325,326,327,329,330,332,333,335,336,338,339,341,342,344,345,356,373,431,432,433,444,445,456,457,458,459,461,463,464,465,466,467,469,470,471,472,475,476,477,478,480,481,482,483,484,485,486,489,490,491,493,494,495,496,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,530,536,537,540,541,543,544,545,546,547,549,550,551,552,553,554,556,567,568,604,605,609,616,618,619,622,623,624,625,631,663,666,667,668,669,670,671,672,673,674,675,676,677,678,680,709,712,715,716,717,718,719,720,721,723,752,755,756,789,790,791,792,794,796,818,820,823,824,825,826,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,877,878,],[-5,-7,-18,-9,-10,-11,-12,-13,-14,-15,-16,-17,-19,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-256,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-286,-287,-288,-289,-137,-6,-8,-29,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,-30,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,-253,-251,-103,-259,-257,-254,-255,-260,-261,-219,-262,-294,-290,-136,-250,-252,-258,-263,-291,-292,-264,-265,-296,-295,-297,-293,311,-138,-141,325,-175,-176,-177,-178,-179,-180,-181,-183,-187,-191,-195,-199,-203,-207,373,-36,-38,-40,-165,-334,-328,-341,-348,-61,-68,-74,-332,-352,-338,-345,-340,-333,-347,-354,-306,-37,-39,-41,-166,-336,-330,-343,-350,-63,-70,-76,-307,-132,-133,-147,-148,-149,-150,-151,-146,-140,-174,-184,-185,-188,-189,-192,-193,-196,-197,-200,-201,-204,-205,-208,-209,445,-218,-98,-99,-83,556,-108,-356,-355,-357,-358,-164,-51,-335,-338,-339,-332,-53,-329,-304,-332,-56,-342,-345,-346,-58,-349,-298,-300,-352,-353,-332,-65,-62,-302,-72,-69,-78,-75,-52,-337,-54,-331,-305,-57,-344,-59,-351,-299,-301,-66,-64,-303,-73,-71,-79,-77,609,616,-276,-182,-211,-31,-32,-33,-34,-35,-186,-190,-194,-198,-202,-206,-107,-152,-159,-154,-158,-167,-213,-210,667,672,673,674,675,680,712,-277,-212,715,716,717,718,-120,-119,-121,-122,719,720,721,-216,752,-169,-116,-115,-117,-118,-124,-123,-125,-217,-168,791,792,825,826,-170,-171,-270,-271,-281,-279,-280,-278,-172,-173,-308,-309,-310,-311,-324,-325,-326,-327,-320,-321,-322,-323,-316,-317,-318,-319,-312,-313,-314,-315,-153,-155,]),'RETURN':([9,10,11,12,13,14,15,16,17,18,19,22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,59,72,75,76,77,78,79,80,81,82,83,84,85,87,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,134,135,136,137,138,144,145,146,147,149,157,158,159,163,181,182,183,184,185,186,187,188,190,191,192,193,201,203,231,232,233,234,235,236,237,238,239,240,241,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,289,314,315,316,317,318,319,324,325,373,431,432,433,446,456,457,458,459,461,463,464,465,466,467,469,470,471,472,475,476,477,478,480,481,482,483,484,485,486,489,490,491,493,494,495,496,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,537,557,559,567,568,604,605,609,616,666,680,712,723,752,791,792,794,796,818,820,823,824,825,826,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,877,878,],[-18,-9,-10,-11,-12,-13,-14,-15,-16,-17,-19,-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-256,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-286,-287,-288,-289,-137,-29,-20,-21,-22,-23,-24,-25,-26,-28,-27,-214,-215,-30,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,-253,-251,-103,-259,-257,-254,-255,-260,-261,-219,-262,-294,-290,-136,-250,-252,-258,-263,-291,-292,-264,-265,-296,-295,-297,-293,-138,-141,-36,-38,-40,-165,-334,-328,-341,-348,-61,-68,-74,-332,-352,-338,-345,-340,-333,-347,-354,-306,-37,-39,-41,-166,-336,-330,-343,-350,-63,-70,-76,-307,-132,-133,-147,-148,-149,-150,-151,-146,-140,-174,-218,-98,-99,-83,558,-356,-355,-357,-358,-164,-51,-335,-338,-339,-332,-53,-329,-304,-332,-56,-342,-345,-346,-58,-349,-298,-300,-352,-353,-332,-65,-62,-302,-72,-69,-78,-75,-52,-337,-54,-331,-305,-57,-344,-59,-351,-299,-301,-66,-64,-303,-73,-71,-79,-77,-276,621,626,-152,-159,-154,-158,-167,-213,-277,-216,-169,-217,-168,-170,-171,-270,-271,-281,-279,-280,-278,-172,-173,-308,-309,-310,-311,-324,-325,-326,-327,-320,-321,-322,-323,-316,-317,-318,-319,-312,-313,-314,-315,-153,-155,]),'ELSE':([18,84,85,148,149,373,616,680,723,],[86,150,-215,150,-219,-218,-213,722,-217,]),'CASE':([22,23,24,25,26,27,28,29,30,31,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,59,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,129,130,131,133,134,135,136,137,138,144,145,146,147,157,158,159,163,181,182,183,184,185,186,187,188,190,191,192,193,201,203,212,213,214,215,216,217,218,231,232,233,234,235,236,237,238,239,240,241,245,246,247,248,249,250,251,252,253,264,265,266,267,268,269,270,271,272,273,274,277,287,289,314,315,316,317,318,319,324,431,432,433,456,457,458,459,461,463,464,465,466,467,469,470,471,472,475,476,477,478,480,481,482,483,484,485,486,489,490,491,493,494,495,496,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,537,540,541,543,544,545,546,547,549,550,551,552,553,554,567,568,604,605,666,667,794,796,818,820,823,824,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,877,878,],[-42,-43,-44,-45,-46,-47,-48,-49,-50,-103,-256,-106,-104,-105,-55,-60,-67,-156,-157,-160,-161,-286,-287,-288,-289,-137,-95,-80,-81,-82,-93,-94,-96,-97,-142,-143,-100,-101,-102,-144,-145,-95,-139,-93,-94,-96,-104,-105,-106,219,-253,-251,-103,-259,-257,-254,-255,-260,-261,-262,-294,-290,-136,-250,-252,-258,-263,-291,-292,-264,-265,-296,-295,-297,-293,-138,-141,328,331,334,337,340,343,346,-36,-38,-40,-165,-334,-328,-341,-348,-61,-68,-74,-332,-352,-338,-345,-340,-333,-347,-354,-306,-37,-39,-41,-166,-336,-330,-343,-350,-63,-70,-76,-307,-132,-133,-147,-148,-149,-150,-151,-146,-140,-98,-99,-83,-356,-355,-357,-358,-164,-51,-335,-338,-339,-332,-53,-329,-304,-332,-56,-342,-345,-346,-58,-349,-298,-300,-352,-353,-332,-65,-62,-302,-72,-69,-78,-75,-52,-337,-54,-331,-305,-57,-344,-59,-351,-299,-301,-66,-64,-303,-73,-71,-79,-77,-276,-182,-211,-31,-32,-33,-34,-35,-186,-190,-194,-198,-202,-206,-152,-159,-154,-158,-277,-212,-270,-271,-281,-279,-280,-278,-308,-309,-310,-311,-324,-325,-326,-327,-320,-321,-322,-323,-316,-317,-318,-319,-312,-313,-314,-315,-153,-155,]),'AND':([31,39,40,41,42,52,53,54,55,116,117,118,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,165,166,167,168,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,300,301,302,407,408,409,410,411,412,413,415,416,417,419,420,422,423,424,425,537,666,],[-103,-256,-106,-104,-105,-286,-287,-288,-289,-100,-101,-102,-104,-105,-106,-253,-251,-103,-259,-257,-254,-255,-260,-261,-262,-294,-290,292,-222,-223,-224,-103,-104,-105,-106,-250,-252,-258,-263,-291,-292,-264,-265,-296,-295,-297,-293,-225,-226,-227,-245,-237,-239,-241,-243,-234,-240,-230,-233,-238,-231,-232,-235,-242,-236,-244,-276,-277,]),'OR':([31,39,40,41,42,52,53,54,55,116,117,118,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,165,166,167,168,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,300,301,302,407,408,409,410,411,412,413,415,416,417,419,420,422,423,424,425,537,666,],[-103,-256,-106,-104,-105,-286,-287,-288,-289,-100,-101,-102,-104,-105,-106,-253,-251,-103,-259,-257,-254,-255,-260,-261,-262,-294,-290,293,-222,-223,-224,-103,-104,-105,-106,-250,-252,-258,-263,-291,-292,-264,-265,-296,-295,-297,-293,-225,-226,-227,-245,-237,-239,-241,-243,-234,-240,-230,-233,-238,-231,-232,-235,-242,-236,-244,-276,-277,]),'PAR_D':([31,39,40,41,42,52,53,54,55,58,93,113,116,117,118,121,122,124,125,126,127,128,129,130,131,132,134,135,136,137,138,143,144,145,146,147,157,158,159,160,161,162,164,165,166,167,168,174,175,176,177,180,181,182,183,184,185,186,187,188,190,191,192,193,195,202,227,300,301,302,312,313,320,321,323,361,362,363,364,365,366,367,372,374,377,404,406,407,408,409,410,411,412,413,415,416,417,419,420,422,423,424,425,427,430,431,432,448,449,454,460,462,507,508,531,537,561,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,614,615,617,627,628,629,630,661,662,666,679,758,759,760,761,782,783,784,785,787,788,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,875,876,],[-103,-256,-106,-104,-105,-286,-287,-288,-289,123,163,-97,-100,-101,-102,-95,199,-162,201,-93,-94,-96,-104,-105,-106,203,-253,-251,-103,-259,-257,226,-254,-255,-260,-261,-262,-294,-290,287,-135,289,290,-221,-222,-223,-224,-103,-104,-105,-106,309,-250,-252,-258,-263,-291,-292,-264,-265,-296,-295,-297,-293,123,324,370,-225,-226,-227,431,432,431,432,-163,-84,-85,-86,-87,-88,-89,-90,455,123,461,-134,-220,-245,-237,-239,-241,-243,-234,-240,-230,-233,-238,-231,-232,-235,-242,-236,-244,533,537,-98,-99,560,-128,-109,567,568,604,605,610,-276,-129,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,664,665,666,-130,-91,-92,-110,710,711,-277,-131,794,-272,796,-274,818,-284,820,-282,823,824,-273,-275,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,-285,-283,877,878,]),'IGUAL_COMPARACION':([39,52,53,54,55,116,117,118,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,166,167,170,171,172,173,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,300,301,537,666,],[-256,-286,-287,-288,-289,-100,-101,-102,-104,-105,-106,-253,-251,-103,-259,-257,-254,-255,-260,-261,-262,-294,-290,295,295,295,295,295,295,-103,-104,-105,-106,-250,-252,-258,-263,-291,-292,-264,-265,-296,-295,-297,-293,295,295,-276,-277,]),'DIFERENTE':([39,52,53,54,55,116,117,118,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,166,167,170,171,172,173,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,300,301,537,666,],[-256,-286,-287,-288,-289,-100,-101,-102,-104,-105,-106,-253,-251,-103,-259,-257,-254,-255,-260,-261,-262,-294,-290,296,296,296,296,296,296,-103,-104,-105,-106,-250,-252,-258,-263,-291,-292,-264,-265,-296,-295,-297,-293,296,296,-276,-277,]),'MAYOR':([39,52,53,54,55,116,117,118,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,166,167,170,171,172,173,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,300,301,537,666,],[-256,-286,-287,-288,-289,-100,-101,-102,-104,-105,-106,-253,-251,-103,-259,-257,-254,-255,-260,-261,-262,-294,-290,297,297,297,297,297,297,-103,-104,-105,-106,-250,-252,-258,-263,-291,-292,-264,-265,-296,-295,-297,-293,297,297,-276,-277,]),'MENOR':([39,52,53,54,55,116,117,118,129,130,131,134,135,136,137,138,144,145,146,147,157,158,159,166,167,170,171,172,173,174,175,176,177,181,182,183,184,185,186,187,188,190,191,192,193,300,301,537,666,],[-256,-286,-287,-288,-289,-100,-101,-102,-104,-105,-106,-253,-251,-103,-259,-257,-254,-255,-260,-261,-262,-294,-290,298,298,298,298,298,298,-103,-104,-105,-106,-250,-252,-258,-263,-291,-292,-264,-265,-296,-295,-297,-293,298,298,-276,-277,]),'PUNTO':([43,59,68,106,110,114,119,120,123,126,163,172,201,203,220,231,239,264,272,324,351,410,414,443,468,474,479,488,622,668,676,],[102,-137,140,196,102,197,-144,-145,-139,102,-136,102,-138,-141,354,196,375,196,375,-140,102,102,102,555,569,572,573,577,196,196,196,]),'LLAVE_I':([56,60,86,141,142,150,221,226,290,309,357,358,370,436,437,438,439,440,441,442,453,455,533,539,610,664,665,710,711,],[105,133,152,222,-111,152,355,-112,405,429,446,447,-113,542,542,542,542,542,542,542,-114,566,613,542,660,713,714,753,754,]),'TRUE':([57,58,91,92,94,96,132,153,155,169,195,200,219,229,243,288,291,292,293,294,295,296,297,298,299,322,346,374,376,378,385,393,394,401,558,565,621,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,-228,-229,116,-246,-247,-248,-249,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'FLASE':([57,58,91,92,94,96,132,153,155,169,195,200,219,229,243,288,291,292,293,294,295,296,297,298,299,322,346,374,376,378,385,393,394,401,558,565,621,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-228,-229,117,-246,-247,-248,-249,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'DOBLE_PUNTO':([88,89,141,142,226,228,370,453,],[154,156,225,-111,-112,371,-113,-114,]),'NOT':([94,96,229,291,292,293,],[169,169,169,169,-228,-229,]),'STARTSWITH':([102,375,],[189,189,]),'COMA':([113,116,117,118,121,122,124,126,127,128,129,130,131,136,312,313,361,362,363,364,365,366,367,387,388,389,390,391,430,431,432,449,537,627,628,629,666,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,787,788,828,829,850,851,],[-97,-100,-101,-102,-95,-103,200,-93,-94,-96,-104,-105,-106,-103,-95,-103,-84,-85,-86,-87,-88,-89,-90,500,501,502,503,504,538,-98,-99,562,-276,562,-91,-92,-277,795,-272,797,-274,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,819,-284,821,-282,819,821,-273,-275,-285,-283,]),'FUNCION_FLECHA':([116,117,118,347,348,349,350,351,352,353,434,435,537,666,],[-100,-101,-102,436,437,438,439,440,441,442,539,440,-276,-277,]),'ARRAYCLASS':([153,154,155,156,225,360,371,386,402,450,451,562,633,634,681,706,757,786,],[242,261,275,285,368,368,368,368,368,368,368,368,682,683,724,749,368,368,]),'LISTCLASS':([153,154,155,156,225,360,371,386,402,450,451,562,655,656,658,659,757,786,],[244,263,276,286,369,369,369,369,369,369,369,369,704,705,707,708,369,369,]),'LONGCLASS':([154,156,225,262,360,371,386,402,450,451,500,501,503,504,562,757,786,],[254,278,365,389,365,365,365,365,365,365,583,587,595,599,365,365,365,]),'INTCLASS':([154,156,225,262,360,371,386,402,450,451,500,502,503,504,562,757,786,],[255,279,364,388,364,364,498,364,364,364,582,591,597,601,364,364,364,]),'FLOATCLASS':([154,156,225,262,360,371,386,402,450,451,500,501,502,503,562,757,786,],[256,280,367,391,367,367,367,367,367,367,585,589,593,596,367,367,367,]),'DOUBLECLASS':([154,156,225,262,360,371,386,402,450,451,500,501,502,504,562,757,786,],[257,281,366,390,366,366,499,366,366,366,584,588,592,600,366,366,366,]),'STRINGCLASS':([154,156,225,262,360,371,386,392,402,403,450,451,501,502,503,504,562,757,786,],[258,282,362,387,362,362,362,506,362,529,362,362,586,590,594,598,362,362,362,]),'CHARCLASS':([154,156,225,360,371,386,392,402,403,450,451,562,757,786,],[259,283,361,361,361,361,505,361,528,361,361,361,361,361,]),'BOOLCLASS':([154,156,225,360,371,386,402,450,451,562,757,786,],[260,284,363,363,363,363,363,363,363,363,363,363,]),'ITERATOR':([179,307,],[308,426,]),'TO_INT':([196,197,375,569,572,573,577,],[315,315,457,457,457,457,457,]),'TO_DOUBLE':([196,197,375,577,],[316,316,459,459,]),'TO_FLOAT':([196,197,375,573,577,],[317,317,458,458,458,]),'TO_LONG':([196,197,375,569,573,577,],[318,318,456,456,456,456,]),'CORCHETE_I':([261,263,285,286,368,369,724,749,],[386,392,402,403,450,451,757,786,]),'SUBGUION':([328,331,334,337,340,343,346,],[434,434,434,434,434,434,434,]),'CORCHETE_D':([361,362,363,364,365,366,367,497,498,499,505,506,527,528,529,563,564,628,629,793,822,],[-84,-85,-86,-87,-88,-89,-90,579,580,581,602,603,606,607,608,628,629,-91,-92,827,852,]),'TO':([428,532,],[534,611,]),'UNTIL':([428,532,],[535,612,]),'NEW':([632,657,],[681,706,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,67,],[1,139,]),'cuerpo':([0,6,7,67,105,],[4,69,70,4,194,]),'funcion':([0,6,7,67,105,],[6,6,6,6,6,]),'contenido':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,446,447,542,566,613,660,713,714,753,754,],[7,7,7,72,75,76,77,78,79,80,81,82,83,87,7,7,230,356,444,530,536,557,559,619,631,663,709,755,756,789,790,]),'aritmetica':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,57,67,94,96,105,152,153,155,169,222,229,291,303,304,355,405,429,446,447,542,558,566,613,621,660,713,714,753,754,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,109,9,171,171,9,9,232,265,171,9,171,171,416,419,9,9,9,9,9,9,625,9,9,671,9,9,9,9,9,]),'asignacion':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,436,437,438,439,440,441,442,446,447,539,542,566,613,660,713,714,753,754,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,543,543,543,543,543,543,543,10,10,543,10,10,10,10,10,10,10,10,]),'reasignacion':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,436,437,438,439,440,441,442,446,447,539,542,566,613,660,713,714,753,754,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,544,544,544,544,544,544,544,11,11,544,11,11,11,11,11,11,11,11,]),'funcall':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,57,67,105,152,153,155,222,355,405,429,436,437,438,439,440,441,442,446,447,539,542,558,566,613,621,626,660,713,714,753,754,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,120,12,12,12,120,120,12,12,12,12,545,545,545,545,545,545,545,12,12,545,12,120,12,12,120,120,12,12,12,12,12,]),'impresion':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,436,437,438,439,440,441,442,446,447,539,542,566,613,660,713,714,753,754,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,546,546,546,546,546,546,546,13,13,546,13,13,13,13,13,13,13,13,]),'entrada':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,57,67,105,152,153,155,222,355,405,429,436,437,438,439,440,441,442,446,447,539,542,558,566,613,621,626,660,713,714,753,754,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,119,14,14,14,119,119,14,14,14,14,547,547,547,547,547,547,547,14,14,547,14,119,14,14,119,119,14,14,14,14,14,]),'while':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,446,447,542,566,613,660,713,714,753,754,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'for':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,446,447,542,566,613,660,713,714,753,754,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'match':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,446,447,542,566,613,660,713,714,753,754,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'if':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,446,447,542,566,613,660,713,714,753,754,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'startsWith':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,57,58,67,91,92,94,96,105,132,152,153,155,169,195,200,219,222,229,243,288,291,294,299,322,346,355,374,376,378,385,393,394,401,405,429,446,447,542,558,565,566,613,621,660,713,714,753,754,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,118,118,19,118,118,118,118,19,118,19,118,118,118,118,118,118,19,118,118,118,118,118,118,118,118,19,118,118,118,118,118,118,118,19,19,19,19,19,118,118,19,19,118,19,19,19,19,19,]),'asignacionLong':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,436,437,438,439,440,441,442,446,447,539,542,566,613,660,713,714,753,754,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'asignacionInt':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,436,437,438,439,440,441,442,446,447,539,542,566,613,660,713,714,753,754,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'asignacionFloat':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,436,437,438,439,440,441,442,446,447,539,542,566,613,660,713,714,753,754,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'asignacionDouble':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,436,437,438,439,440,441,442,446,447,539,542,566,613,660,713,714,753,754,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'asignacionString':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,436,437,438,439,440,441,442,446,447,539,542,566,613,660,713,714,753,754,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'asignacionChar':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,436,437,438,439,440,441,442,446,447,539,542,566,613,660,713,714,753,754,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'asignacionBoolean':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,436,437,438,439,440,441,442,446,447,539,542,566,613,660,713,714,753,754,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'array':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,436,437,438,439,440,441,442,446,447,539,542,566,613,660,713,714,753,754,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'list':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,436,437,438,439,440,441,442,446,447,539,542,566,613,660,713,714,753,754,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'numeros':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,57,58,61,62,67,73,74,91,92,94,96,97,105,132,152,153,155,169,195,200,222,229,243,288,291,294,303,304,322,355,374,376,378,393,394,405,429,446,447,542,558,565,566,613,621,660,713,714,753,754,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,112,128,135,138,38,144,146,128,128,170,170,181,38,128,38,38,38,170,128,128,38,170,128,128,170,408,415,420,128,38,128,128,128,128,128,38,38,38,38,38,112,128,38,38,112,38,38,38,38,38,]),'suma':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,57,67,94,96,105,152,153,155,169,222,229,291,303,304,355,405,429,446,447,542,558,566,613,621,660,713,714,753,754,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'asignacionSumInt':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,436,437,438,439,440,441,442,446,447,539,542,566,613,660,713,714,753,754,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'asignacionSumDouble':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,436,437,438,439,440,441,442,446,447,539,542,566,613,660,713,714,753,754,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'asignacionSumString':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,436,437,438,439,440,441,442,446,447,539,542,566,613,660,713,714,753,754,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'arrayInt':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,436,437,438,439,440,441,442,446,447,539,542,566,613,660,713,714,753,754,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'arrayDouble':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,436,437,438,439,440,441,442,446,447,539,542,566,613,660,713,714,753,754,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'listChar':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,436,437,438,439,440,441,442,446,447,539,542,566,613,660,713,714,753,754,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'listString':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,67,105,152,222,355,405,429,436,437,438,439,440,441,442,446,447,539,542,566,613,660,713,714,753,754,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'sumIntChar':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,57,67,94,96,105,152,153,155,169,222,229,291,303,304,355,380,396,405,429,446,447,542,558,566,613,621,660,713,714,753,754,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,471,513,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'sumStringChar':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,57,67,94,96,105,152,153,155,169,222,229,291,303,304,355,383,399,405,429,446,447,542,558,566,613,621,660,713,714,753,754,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,491,522,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'sumIntDouble':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,57,67,94,96,105,152,153,155,169,222,229,291,303,304,355,382,398,405,429,446,447,542,558,566,613,621,660,713,714,753,754,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,482,518,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'sumDoubleChar':([0,6,7,9,10,11,12,13,14,15,16,17,18,19,57,67,94,96,105,152,153,155,169,222,229,291,303,304,355,382,398,405,429,446,447,542,558,566,613,621,660,713,714,753,754,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,483,519,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'varparen':([3,106,231,264,548,622,668,676,],[59,59,59,59,59,59,59,59,]),'aritmeticos':([3,9,38,106,109,112,166,170,171,231,232,264,265,300,415,416,417,419,420,421,622,625,668,671,],[61,73,97,61,73,97,61,97,73,61,73,61,73,61,97,73,61,73,97,61,61,73,61,73,]),'io':([5,],[67,]),'elseif':([18,84,148,680,],[84,148,148,723,]),'else':([18,84,148,],[85,149,149,]),'valor':([57,58,91,92,132,195,200,243,288,322,374,376,378,393,394,558,565,621,],[107,124,161,161,124,124,124,124,161,433,124,124,124,124,124,623,630,669,]),'returnfun':([57,153,155,558,621,626,],[108,233,266,624,670,678,]),'booleanos':([57,58,91,92,94,96,132,153,155,169,195,200,219,229,243,288,291,294,299,322,346,374,376,378,385,393,394,401,558,565,621,],[113,113,113,113,167,167,113,241,274,301,113,113,353,167,113,113,167,409,412,113,353,113,113,113,496,113,113,526,113,113,113,]),'returnCastable':([57,153,155,558,621,626,],[114,114,114,114,114,114,]),'castingcall':([57,153,155,558,621,626,],[115,115,115,115,115,115,]),'valores':([58,132,195,200,243,374,376,378,393,394,],[125,202,125,323,377,125,460,462,507,508,]),'parametro':([71,],[141,]),'parametros':([71,370,],[142,453,]),'valorI':([91,92,288,],[160,162,404,]),'condicional':([94,96,229,291,],[164,180,372,406,]),'valorC':([94,96,229,291,],[165,165,165,165,]),'relacional':([94,96,169,229,291,],[168,168,302,168,168,]),'cases':([133,],[204,]),'casesInt':([133,212,],[205,326,]),'casesLgn':([133,213,],[206,329,]),'casesFlt':([133,214,],[207,332,]),'casesDob':([133,215,],[208,335,]),'casesStr':([133,216,],[209,338,]),'casesChar':([133,217,],[210,341,]),'casesBool':([133,218,],[211,344,]),'caseInt':([133,212,],[212,212,]),'caseLgn':([133,213,],[213,213,]),'caseFlt':([133,214,],[214,214,]),'caseDob':([133,215,],[215,215,]),'caseStr':([133,216,],[216,216,]),'caseChar':([133,217,],[217,217,]),'caseBool':([133,218,],[218,218,]),'dectipo':([141,],[223,]),'dectipoTupla':([141,],[224,]),'declaracion':([143,452,],[227,227,]),'tuple':([153,155,626,],[234,267,677,]),'longvalues':([153,155,379,381,382,395,397,398,],[235,268,464,478,478,510,478,478,]),'intvalues':([153,155,379,380,381,382,395,396,397,398,],[236,269,466,470,466,466,466,512,466,466,]),'floatvalues':([153,155,381,382,397,398,],[237,270,476,485,515,485,]),'doublevalues':([153,155,382,398,],[238,271,481,517,]),'stringCastLong':([153,155,379,381,382,395,397,398,],[249,249,249,249,249,249,249,249,]),'stringCastInt':([153,155,379,380,381,382,395,396,397,398,],[250,250,250,250,250,250,250,250,250,250,]),'stringCastFloat':([153,155,381,382,397,398,],[251,251,251,251,251,251,]),'stringCastDouble':([153,155,382,398,],[252,252,252,252,]),'dectupla':([154,156,],[253,277,]),'logicos':([165,],[291,]),'comparacion':([166,167,170,171,172,173,300,301,],[294,299,303,304,305,306,294,299,]),'castingfun':([196,197,],[314,319,]),'defcase':([212,213,214,215,216,217,218,],[327,330,333,336,339,342,345,]),'tipo':([225,360,371,386,402,450,451,562,757,786,],[359,449,454,497,527,563,564,627,793,822,]),'tipos':([360,],[448,]),'codeBlock':([436,437,438,439,440,441,442,539,],[540,549,550,551,552,553,554,618,]),'contenidoLine':([436,437,438,439,440,441,442,539,],[541,541,541,541,541,541,541,541,]),'tiposentry':([449,627,],[561,679,]),'valoresInt':([725,],[758,]),'valoresDouble':([726,],[760,]),'valoresChar':([747,750,],[782,787,]),'valoresString':([748,751,],[784,788,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D','inicio',5,'p_inicio','sintax.py',13),
  ('inicio -> IMPORT io inicio','inicio',3,'p_inicio','sintax.py',14),
  ('inicio -> cuerpo','inicio',1,'p_inicio','sintax.py',15),
  ('io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE','io',7,'p_io','sintax.py',20),
  ('cuerpo -> funcion','cuerpo',1,'p_cuerpo','sintax.py',23),
  ('cuerpo -> funcion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',24),
  ('cuerpo -> contenido','cuerpo',1,'p_cuerpo','sintax.py',25),
  ('cuerpo -> contenido cuerpo','cuerpo',2,'p_cuerpo','sintax.py',26),
  ('contenido -> asignacion','contenido',1,'p_contenido','sintax.py',30),
  ('contenido -> reasignacion','contenido',1,'p_contenido','sintax.py',31),
  ('contenido -> funcall','contenido',1,'p_contenido','sintax.py',32),
  ('contenido -> impresion','contenido',1,'p_contenido','sintax.py',33),
  ('contenido -> entrada','contenido',1,'p_contenido','sintax.py',34),
  ('contenido -> while','contenido',1,'p_contenido','sintax.py',35),
  ('contenido -> for','contenido',1,'p_contenido','sintax.py',36),
  ('contenido -> match','contenido',1,'p_contenido','sintax.py',37),
  ('contenido -> if','contenido',1,'p_contenido','sintax.py',38),
  ('contenido -> aritmetica','contenido',1,'p_contenido','sintax.py',39),
  ('contenido -> startsWith','contenido',1,'p_contenido','sintax.py',40),
  ('contenido -> asignacion contenido','contenido',2,'p_contenido','sintax.py',41),
  ('contenido -> reasignacion contenido','contenido',2,'p_contenido','sintax.py',42),
  ('contenido -> funcall contenido','contenido',2,'p_contenido','sintax.py',43),
  ('contenido -> impresion contenido','contenido',2,'p_contenido','sintax.py',44),
  ('contenido -> entrada contenido','contenido',2,'p_contenido','sintax.py',45),
  ('contenido -> while contenido','contenido',2,'p_contenido','sintax.py',46),
  ('contenido -> for contenido','contenido',2,'p_contenido','sintax.py',47),
  ('contenido -> if contenido','contenido',2,'p_contenido','sintax.py',48),
  ('contenido -> match contenido','contenido',2,'p_contenido','sintax.py',49),
  ('contenido -> aritmetica contenido','contenido',2,'p_contenido','sintax.py',50),
  ('contenido -> startsWith contenido','contenido',2,'p_contenido','sintax.py',51),
  ('contenidoLine -> asignacion','contenidoLine',1,'p_contenidoLine','sintax.py',55),
  ('contenidoLine -> reasignacion','contenidoLine',1,'p_contenidoLine','sintax.py',56),
  ('contenidoLine -> funcall','contenidoLine',1,'p_contenidoLine','sintax.py',57),
  ('contenidoLine -> impresion','contenidoLine',1,'p_contenidoLine','sintax.py',58),
  ('contenidoLine -> entrada','contenidoLine',1,'p_contenidoLine','sintax.py',59),
  ('asignacion -> VAR VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',63),
  ('asignacion -> VAL VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',64),
  ('asignacion -> VAR VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',65),
  ('asignacion -> VAL VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',66),
  ('asignacion -> VAR VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',67),
  ('asignacion -> VAL VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',68),
  ('asignacion -> asignacionLong','asignacion',1,'p_asignacion','sintax.py',69),
  ('asignacion -> asignacionInt','asignacion',1,'p_asignacion','sintax.py',70),
  ('asignacion -> asignacionFloat','asignacion',1,'p_asignacion','sintax.py',71),
  ('asignacion -> asignacionDouble','asignacion',1,'p_asignacion','sintax.py',72),
  ('asignacion -> asignacionString','asignacion',1,'p_asignacion','sintax.py',73),
  ('asignacion -> asignacionChar','asignacion',1,'p_asignacion','sintax.py',74),
  ('asignacion -> asignacionBoolean','asignacion',1,'p_asignacion','sintax.py',75),
  ('asignacion -> array','asignacion',1,'p_asignacion','sintax.py',76),
  ('asignacion -> list','asignacion',1,'p_asignacion','sintax.py',77),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',80),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',81),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',84),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',85),
  ('asignacionInt -> asignacionSumInt','asignacionInt',1,'p_asignacionInt','sintax.py',86),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',89),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',90),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',93),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',94),
  ('asignacionDouble -> asignacionSumDouble','asignacionDouble',1,'p_asignacionDouble','sintax.py',95),
  ('asignacionString -> VAR VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',98),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',99),
  ('asignacionString -> VAL VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',100),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',101),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',102),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',103),
  ('asignacionString -> asignacionSumString','asignacionString',1,'p_asignacionString','sintax.py',104),
  ('asignacionChar -> VAR VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',107),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',108),
  ('asignacionChar -> VAL VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',109),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',110),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',111),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',112),
  ('asignacionBoolean -> VAR VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',115),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',116),
  ('asignacionBoolean -> VAL VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',117),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',118),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',119),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',120),
  ('reasignacion -> VARIABLE IGUAL valor','reasignacion',3,'p_reasignacion','sintax.py',124),
  ('reasignacion -> VARIABLE IGUAL returnfun','reasignacion',3,'p_reasignacion','sintax.py',125),
  ('reasignacion -> VARIABLE IGUAL aritmetica','reasignacion',3,'p_reasignacion','sintax.py',126),
  ('reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor','reasignacion',6,'p_reasignacion','sintax.py',127),
  ('tipo -> CHARCLASS','tipo',1,'p_tipo','sintax.py',130),
  ('tipo -> STRINGCLASS','tipo',1,'p_tipo','sintax.py',131),
  ('tipo -> BOOLCLASS','tipo',1,'p_tipo','sintax.py',132),
  ('tipo -> INTCLASS','tipo',1,'p_tipo','sintax.py',133),
  ('tipo -> LONGCLASS','tipo',1,'p_tipo','sintax.py',134),
  ('tipo -> DOUBLECLASS','tipo',1,'p_tipo','sintax.py',135),
  ('tipo -> FLOATCLASS','tipo',1,'p_tipo','sintax.py',136),
  ('tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',137),
  ('tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',138),
  ('valor -> STRING','valor',1,'p_valor','sintax.py',141),
  ('valor -> CHAR','valor',1,'p_valor','sintax.py',142),
  ('valor -> VARIABLE','valor',1,'p_valor','sintax.py',143),
  ('valor -> numeros','valor',1,'p_valor','sintax.py',144),
  ('valor -> booleanos','valor',1,'p_valor','sintax.py',145),
  ('valor -> VARIABLE PAR_I VARIABLE PAR_D','valor',4,'p_valor','sintax.py',146),
  ('valor -> VARIABLE PAR_I INT PAR_D','valor',4,'p_valor','sintax.py',147),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintax.py',150),
  ('booleanos -> FLASE','booleanos',1,'p_booleanos','sintax.py',151),
  ('booleanos -> startsWith','booleanos',1,'p_booleanos','sintax.py',152),
  ('numeros -> INT','numeros',1,'p_numeros','sintax.py',155),
  ('numeros -> LONG','numeros',1,'p_numeros','sintax.py',156),
  ('numeros -> FLOAT','numeros',1,'p_numeros','sintax.py',157),
  ('numeros -> DOUBLE','numeros',1,'p_numeros','sintax.py',158),
  ('funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D','funcion',7,'p_funcion','sintax.py',163),
  ('funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D','funcion',6,'p_funcion','sintax.py',164),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo','declaracion',3,'p_declaracion','sintax.py',169),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor','declaracion',5,'p_declaracion_defecto','sintax.py',172),
  ('parametro -> parametros','parametro',1,'p_parametro','sintax.py',175),
  ('parametro -> PAR_I PAR_D','parametro',2,'p_parametro','sintax.py',176),
  ('parametros -> PAR_I declaracion PAR_D','parametros',3,'p_parametros','sintax.py',179),
  ('parametros -> PAR_I declaracion PAR_D parametros','parametros',4,'p_parametros','sintax.py',180),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D','funcion',10,'p_funcion_return','sintax.py',185),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_return','sintax.py',186),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_return','sintax.py',187),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D','funcion',10,'p_funcion_return','sintax.py',188),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',191),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',192),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',193),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',194),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',197),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',198),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',199),
  ('dectipo -> DOBLE_PUNTO tipo','dectipo',2,'p_dectipo','sintax.py',202),
  ('dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D','dectipoTupla',4,'p_dectipoTupla','sintax.py',205),
  ('tipos -> tipo','tipos',1,'p_tipos','sintax.py',208),
  ('tipos -> tipo tiposentry','tipos',2,'p_tipos','sintax.py',209),
  ('tiposentry -> COMA tipo','tiposentry',2,'p_tipoentry','sintax.py',212),
  ('tiposentry -> COMA tipo tiposentry','tiposentry',3,'p_tipoentry','sintax.py',213),
  ('impresion -> PRINTLN PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',218),
  ('impresion -> PRINT PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',219),
  ('valorI -> valor MAS valorI','valorI',3,'p_valorI','sintax.py',222),
  ('valorI -> valor','valorI',1,'p_valorI','sintax.py',223),
  ('entrada -> READLINE PAR_I PAR_D','entrada',3,'p_entrada','sintax.py',228),
  ('funcall -> VARIABLE varparen','funcall',2,'p_funcall','sintax.py',232),
  ('varparen -> PAR_I valores PAR_D','varparen',3,'p_varparen','sintax.py',235),
  ('varparen -> PAR_I PAR_D','varparen',2,'p_varparen','sintax.py',236),
  ('varparen -> varparen PAR_I valores PAR_D','varparen',4,'p_varparen','sintax.py',237),
  ('varparen -> varparen PAR_I PAR_D','varparen',3,'p_varparen','sintax.py',238),
  ('returnfun -> returnCastable','returnfun',1,'p_returnfun','sintax.py',241),
  ('returnfun -> castingcall','returnfun',1,'p_returnfun','sintax.py',242),
  ('returnCastable -> entrada','returnCastable',1,'p_returnCastable','sintax.py',245),
  ('returnCastable -> funcall','returnCastable',1,'p_returnCastable','sintax.py',246),
  ('castingcall -> returnCastable PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',251),
  ('castingcall -> VARIABLE PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',252),
  ('castingfun -> TO_INT','castingfun',1,'p_castingfun','sintax.py',256),
  ('castingfun -> TO_DOUBLE','castingfun',1,'p_castingfun','sintax.py',257),
  ('castingfun -> TO_FLOAT','castingfun',1,'p_castingfun','sintax.py',258),
  ('castingfun -> TO_LONG','castingfun',1,'p_castingfun','sintax.py',259),
  ('array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',264),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',265),
  ('array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',266),
  ('array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',267),
  ('array -> arrayInt','array',1,'p_array','sintax.py',268),
  ('array -> arrayDouble','array',1,'p_array','sintax.py',269),
  ('list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D','list',7,'p_list','sintax.py',273),
  ('list -> VAR VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D','list',7,'p_list','sintax.py',274),
  ('list -> listChar','list',1,'p_list','sintax.py',275),
  ('list -> listString','list',1,'p_list','sintax.py',276),
  ('valores -> valor','valores',1,'p_valores','sintax.py',280),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintax.py',281),
  ('tuple -> PAR_I valores PAR_D','tuple',3,'p_tuple','sintax.py',285),
  ('asignacion -> VAR VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',288),
  ('asignacion -> VAL VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',289),
  ('while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','while',7,'p_while','sintax.py',297),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',10,'p_for','sintax.py',301),
  ('for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',9,'p_for','sintax.py',302),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',303),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',304),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',305),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',306),
  ('match -> VARIABLE MATCH LLAVE_I cases LLAVE_D','match',5,'p_match','sintax.py',310),
  ('cases -> casesInt','cases',1,'p_cases','sintax.py',313),
  ('cases -> casesLgn','cases',1,'p_cases','sintax.py',314),
  ('cases -> casesFlt','cases',1,'p_cases','sintax.py',315),
  ('cases -> casesDob','cases',1,'p_cases','sintax.py',316),
  ('cases -> casesStr','cases',1,'p_cases','sintax.py',317),
  ('cases -> casesChar','cases',1,'p_cases','sintax.py',318),
  ('cases -> casesBool','cases',1,'p_cases','sintax.py',319),
  ('caseInt -> CASE INT FUNCION_FLECHA codeBlock','caseInt',4,'p_caseInt','sintax.py',322),
  ('casesInt -> caseInt','casesInt',1,'p_casesInt','sintax.py',325),
  ('casesInt -> caseInt casesInt','casesInt',2,'p_casesInt','sintax.py',326),
  ('casesInt -> caseInt defcase','casesInt',2,'p_casesInt','sintax.py',327),
  ('caseLgn -> CASE LONG FUNCION_FLECHA codeBlock','caseLgn',4,'p_caseLgn','sintax.py',330),
  ('casesLgn -> caseLgn','casesLgn',1,'p_casesLgn','sintax.py',333),
  ('casesLgn -> caseLgn casesLgn','casesLgn',2,'p_casesLgn','sintax.py',334),
  ('casesLgn -> caseLgn defcase','casesLgn',2,'p_casesLgn','sintax.py',335),
  ('caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock','caseFlt',4,'p_caseFlt','sintax.py',338),
  ('casesFlt -> caseFlt','casesFlt',1,'p_casesFlt','sintax.py',341),
  ('casesFlt -> caseFlt casesFlt','casesFlt',2,'p_casesFlt','sintax.py',342),
  ('casesFlt -> caseFlt defcase','casesFlt',2,'p_casesFlt','sintax.py',343),
  ('caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock','caseDob',4,'p_caseDob','sintax.py',346),
  ('casesDob -> caseDob','casesDob',1,'p_casesDob','sintax.py',349),
  ('casesDob -> caseDob casesDob','casesDob',2,'p_casesDob','sintax.py',350),
  ('casesDob -> caseDob defcase','casesDob',2,'p_casesDob','sintax.py',351),
  ('caseStr -> CASE STRING FUNCION_FLECHA codeBlock','caseStr',4,'p_caseStr','sintax.py',354),
  ('casesStr -> caseStr','casesStr',1,'p_casesStr','sintax.py',357),
  ('casesStr -> caseStr casesStr','casesStr',2,'p_casesStr','sintax.py',358),
  ('casesStr -> caseStr defcase','casesStr',2,'p_casesStr','sintax.py',359),
  ('caseChar -> CASE CHAR FUNCION_FLECHA codeBlock','caseChar',4,'p_caseChar','sintax.py',362),
  ('casesChar -> caseChar','casesChar',1,'p_casesChar','sintax.py',365),
  ('casesChar -> caseChar casesChar','casesChar',2,'p_casesChar','sintax.py',366),
  ('casesChar -> caseChar defcase','casesChar',2,'p_casesChar','sintax.py',367),
  ('caseBool -> CASE booleanos FUNCION_FLECHA codeBlock','caseBool',4,'p_caseBool','sintax.py',370),
  ('casesBool -> caseBool','casesBool',1,'p_casesBool','sintax.py',373),
  ('casesBool -> caseBool casesBool','casesBool',2,'p_casesBool','sintax.py',374),
  ('casesBool -> caseBool defcase','casesBool',2,'p_casesBool','sintax.py',375),
  ('defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock','defcase',4,'p_defcase','sintax.py',379),
  ('codeBlock -> contenidoLine','codeBlock',1,'p_codeBlock','sintax.py',382),
  ('codeBlock -> LLAVE_I contenido LLAVE_D','codeBlock',3,'p_codeBlock','sintax.py',383),
  ('if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','if',7,'p_if','sintax.py',387),
  ('if -> if elseif','if',2,'p_if','sintax.py',388),
  ('if -> if else','if',2,'p_if','sintax.py',389),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','elseif',8,'p_elseif','sintax.py',393),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif','elseif',9,'p_elseif','sintax.py',394),
  ('else -> ELSE LLAVE_I contenido LLAVE_D','else',4,'p_else','sintax.py',397),
  ('else -> elseif else','else',2,'p_else','sintax.py',398),
  ('condicional -> valorC logicos condicional','condicional',3,'p_condicional','sintax.py',402),
  ('condicional -> valorC','condicional',1,'p_condicional','sintax.py',403),
  ('valorC -> VARIABLE','valorC',1,'p_valorC','sintax.py',406),
  ('valorC -> booleanos','valorC',1,'p_valorC','sintax.py',407),
  ('valorC -> relacional','valorC',1,'p_valorC','sintax.py',408),
  ('valorC -> NOT VARIABLE','valorC',2,'p_valorC','sintax.py',409),
  ('valorC -> NOT booleanos','valorC',2,'p_valorC','sintax.py',410),
  ('valorC -> NOT relacional','valorC',2,'p_valorC','sintax.py',411),
  ('logicos -> AND','logicos',1,'p_logicos','sintax.py',414),
  ('logicos -> OR','logicos',1,'p_logicos','sintax.py',415),
  ('relacional -> numeros comparacion numeros','relacional',3,'p_relacional','sintax.py',420),
  ('relacional -> aritmetica comparacion aritmetica','relacional',3,'p_relacional','sintax.py',421),
  ('relacional -> aritmetica comparacion numeros','relacional',3,'p_relacional','sintax.py',422),
  ('relacional -> numeros comparacion aritmetica','relacional',3,'p_relacional','sintax.py',423),
  ('relacional -> booleanos comparacion booleanos','relacional',3,'p_relacional','sintax.py',424),
  ('relacional -> STRING comparacion STRING','relacional',3,'p_relacional','sintax.py',425),
  ('relacional -> CHAR comparacion CHAR','relacional',3,'p_relacional','sintax.py',426),
  ('relacional -> VARIABLE comparacion numeros','relacional',3,'p_relacional','sintax.py',427),
  ('relacional -> numeros comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',428),
  ('relacional -> VARIABLE comparacion booleanos','relacional',3,'p_relacional','sintax.py',429),
  ('relacional -> booleanos comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',430),
  ('relacional -> VARIABLE comparacion STRING','relacional',3,'p_relacional','sintax.py',431),
  ('relacional -> STRING comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',432),
  ('relacional -> VARIABLE comparacion CHAR','relacional',3,'p_relacional','sintax.py',433),
  ('relacional -> CHAR comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',434),
  ('relacional -> VARIABLE comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',435),
  ('comparacion -> IGUAL_COMPARACION','comparacion',1,'p_comparacion','sintax.py',438),
  ('comparacion -> DIFERENTE','comparacion',1,'p_comparacion','sintax.py',439),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion','sintax.py',440),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion','sintax.py',441),
  ('aritmetica -> numeros aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',445),
  ('aritmetica -> VARIABLE aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',446),
  ('aritmetica -> numeros aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',447),
  ('aritmetica -> VARIABLE aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',448),
  ('aritmetica -> aritmetica aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',449),
  ('aritmetica -> aritmetica aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',450),
  ('aritmetica -> suma','aritmetica',1,'p_aritmetica_suma','sintax.py',453),
  ('aritmetica -> VARIABLE MAS numeros','aritmetica',3,'p_aritmetica_suma','sintax.py',454),
  ('aritmetica -> numeros MAS VARIABLE','aritmetica',3,'p_aritmetica_suma','sintax.py',455),
  ('aritmetica -> VARIABLE MAS VARIABLE','aritmetica',3,'p_aritmetica_suma','sintax.py',456),
  ('aritmetica -> aritmetica MAS numeros','aritmetica',3,'p_aritmetica_suma','sintax.py',457),
  ('aritmetica -> aritmetica MAS VARIABLE','aritmetica',3,'p_aritmetica_suma','sintax.py',458),
  ('aritmetica -> INT MAS INT','aritmetica',3,'p_aritmetica_suma','sintax.py',459),
  ('aritmetica -> DOUBLE MAS DOUBLE','aritmetica',3,'p_aritmetica_suma','sintax.py',460),
  ('aritmetica -> LONG MAS LONG','aritmetica',3,'p_aritmetica_suma','sintax.py',461),
  ('aritmetica -> FLOAT MAS FLOAT','aritmetica',3,'p_aritmetica_suma','sintax.py',462),
  ('aritmeticos -> MENOS','aritmeticos',1,'p_aritmeticos','sintax.py',467),
  ('aritmeticos -> MULTIPLICACION','aritmeticos',1,'p_aritmeticos','sintax.py',468),
  ('aritmeticos -> DIVISION','aritmeticos',1,'p_aritmeticos','sintax.py',469),
  ('aritmeticos -> MOD','aritmeticos',1,'p_aritmeticos','sintax.py',470),
  ('arrayInt -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I INTCLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresInt PAR_D','arrayInt',12,'p_arrayInt','sintax.py',475),
  ('arrayDouble -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I DOUBLECLASS CORCHETE_D IGUAL ARRAYCLASS PAR_I valoresDouble PAR_D','arrayDouble',12,'p_arrayDouble','sintax.py',478),
  ('valoresInt -> INT','valoresInt',1,'p_valoresInt','sintax.py',481),
  ('valoresInt -> valoresInt COMA INT','valoresInt',3,'p_valoresInt','sintax.py',482),
  ('valoresDouble -> DOUBLE','valoresDouble',1,'p_valoresDouble','sintax.py',485),
  ('valoresDouble -> valoresDouble COMA DOUBLE','valoresDouble',3,'p_valoresDouble','sintax.py',486),
  ('startsWith -> STRING PUNTO STARTSWITH PAR_I STRING PAR_D','startsWith',6,'p_startsWith','sintax.py',490),
  ('startsWith -> STRING PUNTO STARTSWITH PAR_I STRING COMA INT PAR_D','startsWith',8,'p_startsWith','sintax.py',491),
  ('listString -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D','listString',12,'p_listString','sintax.py',505),
  ('listString -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I STRINGCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresString PAR_D','listString',12,'p_listString','sintax.py',506),
  ('listChar -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D','listChar',12,'p_listChar','sintax.py',509),
  ('listChar -> VAR VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I CHARCLASS CORCHETE_D IGUAL LISTCLASS PAR_I valoresChar PAR_D','listChar',12,'p_listChar','sintax.py',510),
  ('valoresString -> STRING','valoresString',1,'p_valoresString','sintax.py',513),
  ('valoresString -> valoresString COMA STRING','valoresString',3,'p_valoresString','sintax.py',514),
  ('valoresChar -> CHAR','valoresChar',1,'p_valoresChar','sintax.py',517),
  ('valoresChar -> valoresChar COMA CHAR','valoresChar',3,'p_valoresChar','sintax.py',518),
  ('suma -> sumIntChar','suma',1,'p_suma','sintax.py',522),
  ('suma -> sumStringChar','suma',1,'p_suma','sintax.py',523),
  ('suma -> sumIntDouble','suma',1,'p_suma','sintax.py',524),
  ('suma -> sumDoubleChar','suma',1,'p_suma','sintax.py',525),
  ('sumIntDouble -> INT MAS DOUBLE','sumIntDouble',3,'p_sumIntDouble','sintax.py',528),
  ('sumIntDouble -> DOUBLE MAS INT','sumIntDouble',3,'p_sumIntDouble','sintax.py',529),
  ('sumDoubleChar -> DOUBLE MAS CHAR','sumDoubleChar',3,'p_sumDoubleChar','sintax.py',534),
  ('sumDoubleChar -> CHAR MAS DOUBLE','sumDoubleChar',3,'p_sumDoubleChar','sintax.py',535),
  ('sumIntChar -> INT MAS CHAR','sumIntChar',3,'p_sumIntChar','sintax.py',543),
  ('sumIntChar -> CHAR MAS INT','sumIntChar',3,'p_sumIntChar','sintax.py',544),
  ('sumStringChar -> STRING MAS CHAR','sumStringChar',3,'p_sumStringChar','sintax.py',552),
  ('sumStringChar -> CHAR MAS STRING','sumStringChar',3,'p_sumStringChar','sintax.py',553),
  ('asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble','asignacionSumDouble',6,'p_asignacionSumDouble','sintax.py',558),
  ('asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumIntDouble','asignacionSumDouble',6,'p_asignacionSumDouble','sintax.py',559),
  ('asignacionSumDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar','asignacionSumDouble',6,'p_asignacionSumDouble','sintax.py',560),
  ('asignacionSumDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL sumDoubleChar','asignacionSumDouble',6,'p_asignacionSumDouble','sintax.py',561),
  ('asignacionSumString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar','asignacionSumString',6,'p_asignacionSumString','sintax.py',564),
  ('asignacionSumString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL sumStringChar','asignacionSumString',6,'p_asignacionSumString','sintax.py',565),
  ('asignacionSumInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar','asignacionSumInt',6,'p_asignacionSumInt','sintax.py',568),
  ('asignacionSumInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL sumIntChar','asignacionSumInt',6,'p_asignacionSumInt','sintax.py',569),
  ('asignacion -> VAR VARIABLE DOBLE_PUNTO dectupla','asignacion',4,'p_asignacion_tupla','sintax.py',573),
  ('asignacion -> VAL VARIABLE DOBLE_PUNTO dectupla','asignacion',4,'p_asignacion_tupla','sintax.py',574),
  ('dectupla -> PAR_I STRINGCLASS COMA INTCLASS PAR_D IGUAL PAR_I STRING COMA INT PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',577),
  ('dectupla -> PAR_I STRINGCLASS COMA LONGCLASS PAR_D IGUAL PAR_I STRING COMA LONG PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',578),
  ('dectupla -> PAR_I STRINGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I STRING COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',579),
  ('dectupla -> PAR_I STRINGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I STRING COMA FLOAT PAR_D','dectupla',11,'p_dectupla_strOther','sintax.py',580),
  ('dectupla -> PAR_I FLOATCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I FLOAT COMA STRING PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',583),
  ('dectupla -> PAR_I FLOATCLASS COMA LONGCLASS PAR_D IGUAL PAR_I FLOAT COMA LONG PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',584),
  ('dectupla -> PAR_I FLOATCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I FLOAT COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',585),
  ('dectupla -> PAR_I FLOATCLASS COMA INTCLASS PAR_D IGUAL PAR_I FLOAT COMA INT PAR_D','dectupla',11,'p_dectupla_floatOther','sintax.py',586),
  ('dectupla -> PAR_I DOUBLECLASS COMA STRINGCLASS PAR_D IGUAL PAR_I DOUBLE COMA STRING PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',589),
  ('dectupla -> PAR_I DOUBLECLASS COMA LONGCLASS PAR_D IGUAL PAR_I DOUBLE COMA LONG PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',590),
  ('dectupla -> PAR_I DOUBLECLASS COMA FLOATCLASS PAR_D IGUAL PAR_I DOUBLE COMA FLOAT PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',591),
  ('dectupla -> PAR_I DOUBLECLASS COMA INTCLASS PAR_D IGUAL PAR_I DOUBLE COMA INT PAR_D','dectupla',11,'p_dectupla_doubleOther','sintax.py',592),
  ('dectupla -> PAR_I LONGCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I LONG COMA STRING PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',595),
  ('dectupla -> PAR_I LONGCLASS COMA INTCLASS PAR_D IGUAL PAR_I LONG COMA INT PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',596),
  ('dectupla -> PAR_I LONGCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I LONG COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',597),
  ('dectupla -> PAR_I LONGCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I LONG COMA FLOAT PAR_D','dectupla',11,'p_dectupla_longOther','sintax.py',598),
  ('dectupla -> PAR_I INTCLASS COMA STRINGCLASS PAR_D IGUAL PAR_I INT COMA STRING PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',601),
  ('dectupla -> PAR_I INTCLASS COMA LONGCLASS PAR_D IGUAL PAR_I INT COMA LONG PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',602),
  ('dectupla -> PAR_I INTCLASS COMA DOUBLECLASS PAR_D IGUAL PAR_I INT COMA DOUBLE PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',603),
  ('dectupla -> PAR_I INTCLASS COMA FLOATCLASS PAR_D IGUAL PAR_I INT COMA FLOAT PAR_D','dectupla',11,'p_dectupla_intOther','sintax.py',604),
  ('asignacionInt -> VAR VARIABLE IGUAL intvalues','asignacionInt',4,'p_asignacionInt_cast','sintax.py',609),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues','asignacionInt',6,'p_asignacionInt_cast','sintax.py',610),
  ('asignacionInt -> VAL VARIABLE IGUAL intvalues','asignacionInt',4,'p_asignacionInt_cast','sintax.py',611),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL intvalues','asignacionInt',6,'p_asignacionInt_cast','sintax.py',612),
  ('intvalues -> INT','intvalues',1,'p_intvalues','sintax.py',615),
  ('intvalues -> stringCastInt','intvalues',1,'p_intvalues','sintax.py',616),
  ('asignacionLong -> VAR VARIABLE IGUAL longvalues','asignacionLong',4,'p_asignacionLong_cast','sintax.py',619),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues','asignacionLong',6,'p_asignacionLong_cast','sintax.py',620),
  ('asignacionLong -> VAL VARIABLE IGUAL longvalues','asignacionLong',4,'p_asignacionLong_cast','sintax.py',621),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL longvalues','asignacionLong',6,'p_asignacionLong_cast','sintax.py',622),
  ('longvalues -> LONG','longvalues',1,'p_longvalues','sintax.py',625),
  ('longvalues -> intvalues','longvalues',1,'p_longvalues','sintax.py',626),
  ('longvalues -> stringCastLong','longvalues',1,'p_longvalues','sintax.py',627),
  ('asignacionFloat -> VAR VARIABLE IGUAL floatvalues','asignacionFloat',4,'p_asignacionFloat_cast','sintax.py',630),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues','asignacionFloat',6,'p_asignacionFloat_cast','sintax.py',631),
  ('asignacionFloat -> VAL VARIABLE IGUAL floatvalues','asignacionFloat',4,'p_asignacionFloat_cast','sintax.py',632),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL floatvalues','asignacionFloat',6,'p_asignacionFloat_cast','sintax.py',633),
  ('floatvalues -> FLOAT','floatvalues',1,'p_floatvalues','sintax.py',636),
  ('floatvalues -> longvalues','floatvalues',1,'p_floatvalues','sintax.py',637),
  ('floatvalues -> stringCastFloat','floatvalues',1,'p_floatvalues','sintax.py',638),
  ('asignacionDouble -> VAR VARIABLE IGUAL doublevalues','asignacionDouble',4,'p_asignacionDouble_cast','sintax.py',641),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues','asignacionDouble',6,'p_asignacionDouble_cast','sintax.py',642),
  ('asignacionDouble -> VAL VARIABLE IGUAL doublevalues','asignacionDouble',4,'p_asignacionDouble_cast','sintax.py',643),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL doublevalues','asignacionDouble',6,'p_asignacionDouble_cast','sintax.py',644),
  ('doublevalues -> DOUBLE','doublevalues',1,'p_doublevalues','sintax.py',647),
  ('doublevalues -> floatvalues','doublevalues',1,'p_doublevalues','sintax.py',648),
  ('doublevalues -> stringCastDouble','doublevalues',1,'p_doublevalues','sintax.py',649),
  ('stringCastInt -> STRING PUNTO TO_INT','stringCastInt',3,'p_stringCastInt','sintax.py',658),
  ('stringCastLong -> STRING PUNTO TO_LONG','stringCastLong',3,'p_stringCastLong','sintax.py',674),
  ('stringCastFloat -> STRING PUNTO TO_FLOAT','stringCastFloat',3,'p_stringCastFloat','sintax.py',690),
  ('stringCastDouble -> STRING PUNTO TO_DOUBLE','stringCastDouble',3,'p_stringCastDouble','sintax.py',707),
]

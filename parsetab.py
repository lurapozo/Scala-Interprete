
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARRAYCLASS ARROBA BACKTICK BOOLCLASS CASE CATCH CHAR CHARCLASS CLASS COMA CORCHETE_D CORCHETE_I DEF DIFERENTE DIVISION DO DOBLE_PUNTO DOUBLE DOUBLECLASS ELSE EXTENDS FINAL FINALLY FLASE FLOAT FLOATCLASS FOR FOR_SOME FUNCION_FLECHA HASHTAG IF IGUAL IGUAL_COMPARACION IMPLICIT IMPORT INT INTCLASS ITERATOR LAZY LIBRERIA_IO LISTCLASS LLAVE_D LLAVE_I LONG LONGCLASS MACRO MAS MATCH MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MENOS MOD MULTIPLICACION NEW NOT NULL OBJECT OR OVERRIDE PACKAGE PAR_D PAR_I PRINT PRINTLN PRIVATE PROTECTED PUNTO READLINE RETURN REVERSE SEALED STRING STRINGCLASS SUBGUION SUPER THIS THROW TO TO_DOUBLE TO_FLOAT TO_INT TO_LONG TRAIT TRUE TRY TYPE UNTIL VAL VAR VARIABLE WHILE WITH YIELD inicio : OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D\n  | IMPORT io inicio io : VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINEcuerpo : funcion\n  | funcall\n  | impresion\n  | entrada\n  | asignacion\n  | while\n  | for\n  | match\n  | if\n  | funcion cuerpo\n  | asignacion cuerpo\n  | while cuerpo\n  | for cuerpo\n  | if cuerpo\n  | match cuerpocontenido : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entrada\n  | while\n  | for\n  | match\n  | if\n  | aritmetica\n  | asignacion contenido\n  | reasignacion contenido\n  | funcall contenido\n  | impresion contenido\n  | entrada contenido\n  | while contenido\n  | for contenido\n  | if contenido\n  | match contenido\n  | aritmetica contenidocontenidoLine : asignacion\n  | reasignacion\n  | funcall\n  | impresion\n  | entradaasignacion : VAR VARIABLE IGUAL VARIABLE\n  | VAL VARIABLE IGUAL VARIABLE\n  | VAR VARIABLE IGUAL aritmetica\n  | VAL VARIABLE IGUAL aritmetica\n  | VAR VARIABLE IGUAL returnfun\n  | VAL VARIABLE IGUAL returnfun\n  | asignacionLong\n  | asignacionInt\n  | asignacionFloat\n  | asignacionDouble\n  | asignacionString\n  | asignacionChar\n  | asignacionBoolean\n  | array\n  | listasignacionLong : VAR VARIABLE IGUAL LONG\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG\n  | VAL VARIABLE IGUAL LONG\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG\n  | VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLEasignacionInt : VAR VARIABLE IGUAL INT\n  | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT\n  | VAL VARIABLE IGUAL INT\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT\n  | VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLEasignacionFloat : VAR VARIABLE IGUAL FLOAT\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT\n  | VAL VARIABLE IGUAL FLOAT\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT\n  | VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLEasignacionDouble : VAR VARIABLE IGUAL DOUBLE\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE\n  | VAL VARIABLE IGUAL DOUBLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE\n  | VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLEasignacionString : VAR VARIABLE IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAL VARIABLE IGUAL STRING\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING\n  | VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLEasignacionChar : VAR VARIABLE IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAL VARIABLE IGUAL CHAR\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR\n  | VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLEasignacionBoolean : VAR VARIABLE IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAL VARIABLE IGUAL booleanos\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos\n  | VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE\n  | VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLEreasignacion :  VARIABLE IGUAL valor\n      | VARIABLE IGUAL returnfun\n      | VARIABLE IGUAL aritmetica\n      | VARIABLE PAR_I INT PAR_D IGUAL valortipo : CHARCLASS\n  | STRINGCLASS\n  | BOOLCLASS\n  | INTCLASS\n  | LONGCLASS\n  | DOUBLECLASS\n  | FLOATCLASS\n  | ARRAYCLASS CORCHETE_I tipo CORCHETE_D\n  | LISTCLASS CORCHETE_I tipo CORCHETE_Dvalor : STRING\n  | CHAR\n  | VARIABLE\n  | numeros\n  | booleanos\n  | VARIABLE PAR_I VARIABLE PAR_D\n  | VARIABLE PAR_I INT PAR_Dbooleanos : TRUE\n  | FLASEnumeros : INT\n  | LONG\n  | FLOAT\n  | DOUBLEfuncion : DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D\n  | DEF VARIABLE parametro LLAVE_I contenido LLAVE_Ddeclaracion : VARIABLE DOBLE_PUNTO tipodeclaracion :  VARIABLE DOBLE_PUNTO tipo IGUAL valor parametro : parametros\n  | PAR_I PAR_D parametros : PAR_I declaracion PAR_D \n    | PAR_I declaracion PAR_D parametrosfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN valor LLAVE_D \n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D\n    | DEF VARIABLE  parametro  dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_Dfuncion : DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D\n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D \n      | DEF VARIABLE  parametro  dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_Ddectipo : DOBLE_PUNTO tipo dectipoTupla : DOBLE_PUNTO PAR_I tipos PAR_Dtipos : tipo\n    | tipo tiposentrytiposentry : COMA tipo \n  | COMA tipo tiposentryimpresion : PRINTLN PAR_I valorI PAR_D\n  | PRINT PAR_I valorI PAR_DvalorI : valor MAS valorI\n  | valorentrada : READLINE PAR_I PAR_Dfuncall : VARIABLE varparen varparen : PAR_I valores PAR_D\n  | PAR_I PAR_D\n  | varparen PAR_I valores PAR_D\n  | varparen PAR_I PAR_D returnfun : returnCastable\n      | castingcallreturnCastable : entrada\n      | funcallcastingcall : returnCastable PUNTO castingfun\n      | VARIABLE PUNTO castingfuncastingfun : TO_INT\n    | TO_DOUBLE\n    | TO_FLOAT\n    | TO_LONGarray : VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D\n  | VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_Dlist : VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D\n  | VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_Dvalores : valor\n  | valor COMA valorestuple : PAR_I valores PAR_Dasignacion : VAR VARIABLE IGUAL tuple \n      | VAL VARIABLE IGUAL tupleasignacion : VAR VARIABLE dectipoTupla IGUAL tuple \n      | VAL VARIABLE dectipoTupla IGUAL tuplewhile : WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_Dfor : FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D\n  | FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_Dmatch : VARIABLE MATCH  LLAVE_I cases LLAVE_Dcases : casesInt\n    | casesLgn\n    | casesFlt\n    | casesDob\n    | casesStr\n    | casesChar\n    | casesBoolcaseInt : CASE INT FUNCION_FLECHA codeBlock casesInt : caseInt \n      | caseInt casesInt\n      | caseInt defcasecaseLgn : CASE LONG FUNCION_FLECHA codeBlock casesLgn : caseLgn \n      | caseLgn casesLgn\n      | caseLgn defcasecaseFlt : CASE FLOAT FUNCION_FLECHA codeBlock casesFlt : caseFlt \n      | caseFlt casesFlt\n      | caseFlt defcasecaseDob : CASE DOUBLE FUNCION_FLECHA codeBlock casesDob : caseDob \n      | caseDob casesDob\n      | caseDob defcasecaseStr : CASE STRING FUNCION_FLECHA codeBlock casesStr : caseStr\n      | caseStr casesStr\n      | caseStr defcasecaseChar : CASE CHAR FUNCION_FLECHA codeBlock casesChar : caseChar\n      | caseChar casesChar\n      | caseChar defcasecaseBool : CASE booleanos FUNCION_FLECHA codeBlock casesBool : caseBool\n      | caseBool casesBool\n      | caseBool defcasedefcase : CASE SUBGUION FUNCION_FLECHA codeBlock codeBlock : contenidoLine\n      | LLAVE_I contenido LLAVE_Dif : IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | if elseif\n  | if else\n  elseif : ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D\n  | ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseifelse : ELSE LLAVE_I contenido LLAVE_D\n  | elseif elsecondicional : valorC logicos condicional\n  | valorCvalorC : VARIABLE\n  | booleanos\n  | relacional\n  | NOT VARIABLE\n  | NOT booleanos\n  | NOT relacional\n  logicos : AND\n  | OR\n  | NOTrelacional : numeros comparacion numeros\n  | aritmetica comparacion aritmetica\n  | aritmetica comparacion numeros\n  | numeros comparacion aritmetica\n  | booleanos comparacion booleanos\n  | STRING comparacion STRING\n  | CHAR comparacion CHAR\n  | VARIABLE comparacion numeros\n  | numeros comparacion VARIABLE\n  | VARIABLE comparacion booleanos\n  | booleanos comparacion VARIABLE\n  | VARIABLE comparacion STRING\n  | STRING comparacion VARIABLE\n  | VARIABLE comparacion CHAR\n  | CHAR comparacion VARIABLE\n  | VARIABLE comparacion VARIABLEcomparacion : IGUAL_COMPARACION\n  | DIFERENTE\n  | MAYOR\n  | MENORaritmetica : numeros aritmeticos numeros\n  | VARIABLE aritmeticos numeros\n  | numeros aritmeticos VARIABLE\n  | VARIABLE aritmeticos VARIABLE\n  | aritmetica aritmeticos numeros\n  | aritmetica aritmeticos VARIABLEaritmeticos : MENOS\n  | MAS\n  | MULTIPLICACION\n  | DIVISION\n  | MOD'
    
_lr_action_items = {'OBJECT':([0,5,357,],[2,2,-3,]),'IMPORT':([0,5,357,],[3,3,-3,]),'$end':([1,8,43,],[0,-2,-1,]),'VARIABLE':([2,3,7,9,12,16,17,18,19,20,21,25,26,27,28,29,30,31,32,33,34,35,40,42,50,51,54,55,59,60,61,62,63,66,68,69,70,71,72,73,74,75,76,77,78,80,83,86,90,91,94,102,107,112,129,130,131,132,134,135,136,137,138,139,140,141,142,143,147,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,184,185,186,187,188,189,190,191,192,193,194,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,227,228,229,230,231,232,234,237,238,271,282,283,284,302,305,306,307,308,309,310,311,312,316,317,318,319,320,321,322,323,324,325,328,335,336,342,343,347,348,353,356,359,360,361,362,363,364,365,366,367,369,370,371,372,373,376,377,378,381,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,412,413,414,415,416,417,418,419,420,421,422,423,424,425,435,438,451,452,454,456,460,461,464,465,468,472,475,481,482,487,495,502,503,508,509,510,511,524,525,526,528,529,530,531,532,533,534,535,536,538,540,542,543,544,552,555,556,557,559,561,563,564,567,572,573,],[4,6,10,39,10,10,10,10,10,10,53,57,58,-50,-51,-52,-53,-54,-55,-56,-57,-58,-157,70,-235,-236,70,70,99,108,99,110,70,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,144,153,-156,157,184,224,233,-161,-158,70,268,99,144,144,144,144,144,144,144,144,144,144,144,-152,70,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,70,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,99,-249,-250,-251,330,335,-268,-269,-270,-271,-278,-279,-280,-281,-282,338,341,343,346,348,350,352,354,-160,-195,-239,369,70,144,70,-186,392,394,396,398,400,402,404,70,70,-187,412,414,416,418,420,422,424,144,-275,-273,-272,-274,-276,-277,429,144,444,444,444,444,444,444,444,-119,-120,-116,-101,-102,-103,-117,-128,144,144,153,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,444,144,144,479,-127,483,70,-172,-175,-178,-188,144,-234,70,504,512,144,-237,-104,-140,-139,-141,-142,-190,144,144,-238,-136,-135,-137,-138,-144,-143,-145,70,70,70,-189,144,144,70,-191,-192,-173,-176,-180,-193,-194,-179,-174,-177,]),'LLAVE_I':([4,41,52,81,84,85,146,151,207,235,286,287,298,359,360,361,362,363,364,365,368,382,431,435,469,499,500,522,523,],[7,64,83,83,147,-131,284,-132,328,356,377,378,-133,438,438,438,438,438,438,438,451,-134,472,438,495,525,526,543,544,]),'PUNTO':([6,39,40,66,90,110,112,129,157,170,172,173,184,237,369,483,504,512,],[9,62,-157,-159,-156,236,-161,-158,301,304,-164,-165,301,-160,301,301,301,301,]),'DEF':([7,12,16,17,18,19,20,27,28,29,30,31,32,33,34,35,40,50,51,66,73,74,75,76,77,78,80,90,112,129,157,158,159,160,161,162,163,164,165,166,167,170,171,172,173,184,185,186,187,188,189,190,191,192,193,194,237,238,271,305,318,335,336,342,343,347,348,376,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,412,413,414,415,416,417,418,419,420,421,422,423,424,425,454,461,464,465,468,475,502,508,509,510,511,524,528,529,530,531,532,533,534,535,542,555,556,557,559,561,563,564,567,572,573,],[21,21,21,21,21,21,21,-50,-51,-52,-53,-54,-55,-56,-57,-58,-157,-235,-236,-159,-123,-124,-125,-126,-121,-122,-240,-156,-161,-158,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-195,-239,-186,-187,-275,-273,-272,-274,-276,-277,-128,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,-127,-172,-175,-178,-188,-234,-237,-140,-139,-141,-142,-190,-238,-136,-135,-137,-138,-144,-143,-145,-189,-191,-192,-173,-176,-180,-193,-194,-179,-174,-177,]),'PRINTLN':([7,12,16,17,18,19,20,27,28,29,30,31,32,33,34,35,40,50,51,66,68,69,70,71,72,73,74,75,76,77,78,80,83,90,112,129,134,135,136,137,138,139,140,141,142,143,147,154,156,157,158,159,160,161,162,163,164,165,166,167,170,171,172,173,184,185,186,187,188,189,190,191,192,193,194,237,238,271,284,305,318,328,335,336,342,343,347,348,356,359,360,361,362,363,364,365,366,367,369,370,371,372,373,376,377,378,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,412,413,414,415,416,417,418,419,420,421,422,423,424,425,435,438,451,454,461,464,465,468,472,475,495,502,503,508,509,510,511,524,525,526,528,529,530,531,532,533,534,535,542,543,544,555,556,557,559,561,563,564,567,572,573,],[22,22,22,22,22,22,22,-50,-51,-52,-53,-54,-55,-56,-57,-58,-157,-235,-236,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,22,-156,-161,-158,22,22,22,22,22,22,22,22,22,22,22,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-195,-239,22,-186,-187,22,-275,-273,-272,-274,-276,-277,22,22,22,22,22,22,22,22,-119,-120,-116,-101,-102,-103,-117,-128,22,22,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,22,22,22,-127,-172,-175,-178,-188,22,-234,22,-237,-104,-140,-139,-141,-142,-190,22,22,-238,-136,-135,-137,-138,-144,-143,-145,-189,22,22,-191,-192,-173,-176,-180,-193,-194,-179,-174,-177,]),'PRINT':([7,12,16,17,18,19,20,27,28,29,30,31,32,33,34,35,40,50,51,66,68,69,70,71,72,73,74,75,76,77,78,80,83,90,112,129,134,135,136,137,138,139,140,141,142,143,147,154,156,157,158,159,160,161,162,163,164,165,166,167,170,171,172,173,184,185,186,187,188,189,190,191,192,193,194,237,238,271,284,305,318,328,335,336,342,343,347,348,356,359,360,361,362,363,364,365,366,367,369,370,371,372,373,376,377,378,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,412,413,414,415,416,417,418,419,420,421,422,423,424,425,435,438,451,454,461,464,465,468,472,475,495,502,503,508,509,510,511,524,525,526,528,529,530,531,532,533,534,535,542,543,544,555,556,557,559,561,563,564,567,572,573,],[23,23,23,23,23,23,23,-50,-51,-52,-53,-54,-55,-56,-57,-58,-157,-235,-236,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,23,-156,-161,-158,23,23,23,23,23,23,23,23,23,23,23,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-195,-239,23,-186,-187,23,-275,-273,-272,-274,-276,-277,23,23,23,23,23,23,23,23,-119,-120,-116,-101,-102,-103,-117,-128,23,23,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,23,23,23,-127,-172,-175,-178,-188,23,-234,23,-237,-104,-140,-139,-141,-142,-190,23,23,-238,-136,-135,-137,-138,-144,-143,-145,-189,23,23,-191,-192,-173,-176,-180,-193,-194,-179,-174,-177,]),'READLINE':([7,12,16,17,18,19,20,27,28,29,30,31,32,33,34,35,40,50,51,66,68,69,70,71,72,73,74,75,76,77,78,80,83,90,91,94,112,129,134,135,136,137,138,139,140,141,142,143,147,154,156,157,158,159,160,161,162,163,164,165,166,167,170,171,172,173,184,185,186,187,188,189,190,191,192,193,194,236,237,238,271,282,284,305,318,328,335,336,342,343,347,348,356,359,360,361,362,363,364,365,366,367,369,370,371,372,373,376,377,378,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,412,413,414,415,416,417,418,419,420,421,422,423,424,425,435,438,451,454,456,461,464,465,468,472,475,482,487,495,502,503,508,509,510,511,524,525,526,528,529,530,531,532,533,534,535,542,543,544,555,556,557,559,561,563,564,567,572,573,],[24,24,24,24,24,24,24,-50,-51,-52,-53,-54,-55,-56,-57,-58,-157,-235,-236,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,24,-156,24,24,-161,-158,24,24,24,24,24,24,24,24,24,24,24,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,357,-160,-195,-239,24,24,-186,-187,24,-275,-273,-272,-274,-276,-277,24,24,24,24,24,24,24,24,-119,-120,-116,-101,-102,-103,-117,-128,24,24,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,24,24,24,-127,24,-172,-175,-178,-188,24,-234,24,24,24,-237,-104,-140,-139,-141,-142,-190,24,24,-238,-136,-135,-137,-138,-144,-143,-145,-189,24,24,-191,-192,-173,-176,-180,-193,-194,-179,-174,-177,]),'VAR':([7,12,16,17,18,19,20,27,28,29,30,31,32,33,34,35,40,50,51,60,66,68,69,70,71,72,73,74,75,76,77,78,80,83,90,112,129,134,135,136,137,138,139,140,141,142,143,147,154,156,157,158,159,160,161,162,163,164,165,166,167,170,171,172,173,184,185,186,187,188,189,190,191,192,193,194,237,238,271,284,305,318,328,335,336,342,343,347,348,356,359,360,361,362,363,364,365,366,367,369,370,371,372,373,376,377,378,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,412,413,414,415,416,417,418,419,420,421,422,423,424,425,435,438,451,454,461,464,465,468,472,475,495,502,503,508,509,510,511,524,525,526,528,529,530,531,532,533,534,535,542,543,544,555,556,557,559,561,563,564,567,572,573,],[25,25,25,25,25,25,25,-50,-51,-52,-53,-54,-55,-56,-57,-58,-157,-235,-236,107,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,25,-156,-161,-158,25,25,25,25,25,25,25,25,25,25,25,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-195,-239,25,-186,-187,25,-275,-273,-272,-274,-276,-277,25,25,25,25,25,25,25,25,-119,-120,-116,-101,-102,-103,-117,-128,25,25,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,25,25,25,-127,-172,-175,-178,-188,25,-234,25,-237,-104,-140,-139,-141,-142,-190,25,25,-238,-136,-135,-137,-138,-144,-143,-145,-189,25,25,-191,-192,-173,-176,-180,-193,-194,-179,-174,-177,]),'VAL':([7,12,16,17,18,19,20,27,28,29,30,31,32,33,34,35,40,50,51,66,68,69,70,71,72,73,74,75,76,77,78,80,83,90,112,129,134,135,136,137,138,139,140,141,142,143,147,154,156,157,158,159,160,161,162,163,164,165,166,167,170,171,172,173,184,185,186,187,188,189,190,191,192,193,194,237,238,271,284,305,318,328,335,336,342,343,347,348,356,359,360,361,362,363,364,365,366,367,369,370,371,372,373,376,377,378,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,412,413,414,415,416,417,418,419,420,421,422,423,424,425,435,438,451,454,461,464,465,468,472,475,495,502,503,508,509,510,511,524,525,526,528,529,530,531,532,533,534,535,542,543,544,555,556,557,559,561,563,564,567,572,573,],[26,26,26,26,26,26,26,-50,-51,-52,-53,-54,-55,-56,-57,-58,-157,-235,-236,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,26,-156,-161,-158,26,26,26,26,26,26,26,26,26,26,26,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-195,-239,26,-186,-187,26,-275,-273,-272,-274,-276,-277,26,26,26,26,26,26,26,26,-119,-120,-116,-101,-102,-103,-117,-128,26,26,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,26,26,26,-127,-172,-175,-178,-188,26,-234,26,-237,-104,-140,-139,-141,-142,-190,26,26,-238,-136,-135,-137,-138,-144,-143,-145,-189,26,26,-191,-192,-173,-176,-180,-193,-194,-179,-174,-177,]),'WHILE':([7,12,16,17,18,19,20,27,28,29,30,31,32,33,34,35,40,50,51,66,68,69,70,71,72,73,74,75,76,77,78,80,83,90,112,129,134,135,136,137,138,139,140,141,142,143,147,154,156,157,158,159,160,161,162,163,164,165,166,167,170,171,172,173,184,185,186,187,188,189,190,191,192,193,194,237,238,271,284,305,318,328,335,336,342,343,347,348,356,366,367,369,370,371,372,373,376,377,378,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,412,413,414,415,416,417,418,419,420,421,422,423,424,425,438,451,454,461,464,465,468,472,475,495,502,503,508,509,510,511,524,525,526,528,529,530,531,532,533,534,535,542,543,544,555,556,557,559,561,563,564,567,572,573,],[36,36,36,36,36,36,36,-50,-51,-52,-53,-54,-55,-56,-57,-58,-157,-235,-236,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,36,-156,-161,-158,36,36,36,36,36,36,36,36,36,36,36,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-195,-239,36,-186,-187,36,-275,-273,-272,-274,-276,-277,36,-119,-120,-116,-101,-102,-103,-117,-128,36,36,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,36,36,-127,-172,-175,-178,-188,36,-234,36,-237,-104,-140,-139,-141,-142,-190,36,36,-238,-136,-135,-137,-138,-144,-143,-145,-189,36,36,-191,-192,-173,-176,-180,-193,-194,-179,-174,-177,]),'FOR':([7,12,16,17,18,19,20,27,28,29,30,31,32,33,34,35,40,50,51,66,68,69,70,71,72,73,74,75,76,77,78,80,83,90,112,129,134,135,136,137,138,139,140,141,142,143,147,154,156,157,158,159,160,161,162,163,164,165,166,167,170,171,172,173,184,185,186,187,188,189,190,191,192,193,194,237,238,271,284,305,318,328,335,336,342,343,347,348,356,366,367,369,370,371,372,373,376,377,378,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,412,413,414,415,416,417,418,419,420,421,422,423,424,425,438,451,454,461,464,465,468,472,475,495,502,503,508,509,510,511,524,525,526,528,529,530,531,532,533,534,535,542,543,544,555,556,557,559,561,563,564,567,572,573,],[37,37,37,37,37,37,37,-50,-51,-52,-53,-54,-55,-56,-57,-58,-157,-235,-236,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,37,-156,-161,-158,37,37,37,37,37,37,37,37,37,37,37,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-195,-239,37,-186,-187,37,-275,-273,-272,-274,-276,-277,37,-119,-120,-116,-101,-102,-103,-117,-128,37,37,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,37,37,-127,-172,-175,-178,-188,37,-234,37,-237,-104,-140,-139,-141,-142,-190,37,37,-238,-136,-135,-137,-138,-144,-143,-145,-189,37,37,-191,-192,-173,-176,-180,-193,-194,-179,-174,-177,]),'IF':([7,12,16,17,18,19,20,27,28,29,30,31,32,33,34,35,40,50,51,52,66,68,69,70,71,72,73,74,75,76,77,78,80,81,83,90,112,129,134,135,136,137,138,139,140,141,142,143,147,154,156,157,158,159,160,161,162,163,164,165,166,167,170,171,172,173,184,185,186,187,188,189,190,191,192,193,194,237,238,271,284,305,318,328,335,336,342,343,347,348,356,366,367,369,370,371,372,373,376,377,378,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,412,413,414,415,416,417,418,419,420,421,422,423,424,425,438,451,454,461,464,465,468,472,475,495,502,503,508,509,510,511,524,525,526,527,528,529,530,531,532,533,534,535,542,543,544,555,556,557,559,561,563,564,567,572,573,],[38,38,38,38,38,38,38,-50,-51,-52,-53,-54,-55,-56,-57,-58,-157,-235,-236,82,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,82,38,-156,-161,-158,38,38,38,38,38,38,38,38,38,38,38,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-195,-239,38,-186,-187,38,-275,-273,-272,-274,-276,-277,38,-119,-120,-116,-101,-102,-103,-117,-128,38,38,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,38,38,-127,-172,-175,-178,-188,38,-234,38,-237,-104,-140,-139,-141,-142,-190,38,38,82,-238,-136,-135,-137,-138,-144,-143,-145,-189,38,38,-191,-192,-173,-176,-180,-193,-194,-179,-174,-177,]),'MATCH':([10,144,],[41,41,]),'PAR_I':([10,22,23,24,36,37,38,40,53,66,70,82,91,93,94,96,112,129,144,150,157,168,174,184,195,196,197,237,298,369,444,479,483,487,504,512,515,517,519,541,565,566,],[42,54,55,56,59,60,61,63,86,-159,131,132,169,183,169,183,-161,-158,283,183,42,302,169,42,316,317,169,-160,381,452,283,131,452,169,452,42,536,538,540,552,568,569,]),'LLAVE_D':([11,12,13,14,15,16,17,18,19,20,27,28,29,30,31,32,33,34,35,40,44,45,46,47,48,49,50,51,66,68,69,70,71,72,73,74,75,76,77,78,80,90,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,133,134,135,136,137,138,139,140,141,142,143,154,156,157,158,159,160,161,162,163,164,165,166,167,170,171,172,173,184,185,186,187,188,189,190,191,192,193,194,237,238,239,240,242,243,245,246,248,249,251,252,254,255,257,258,271,272,273,274,275,276,277,278,279,280,281,285,305,318,335,336,342,343,347,348,366,367,369,370,371,372,373,375,376,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,412,413,414,415,416,417,418,419,420,421,422,423,424,425,428,434,436,437,439,440,441,442,443,445,446,447,448,449,450,454,461,464,465,468,475,476,477,478,483,484,485,486,498,501,502,503,504,505,506,507,508,509,510,511,512,513,514,521,524,528,529,530,531,532,533,534,535,542,545,546,553,554,555,556,557,559,561,563,564,567,572,573,],[43,-4,-5,-6,-7,-8,-9,-10,-11,-12,-50,-51,-52,-53,-54,-55,-56,-57,-58,-157,-13,-14,-15,-16,-18,-17,-235,-236,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,-156,-161,238,-196,-197,-198,-199,-200,-201,-202,-204,-208,-212,-216,-220,-224,-228,-158,271,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-195,-205,-206,-209,-210,-213,-214,-217,-218,-221,-222,-225,-226,-229,-230,-239,-29,-30,-31,-32,-33,-34,-35,-37,-36,-38,376,-186,-187,-275,-273,-272,-274,-276,-277,-119,-120,-116,-101,-102,-103,-117,454,-128,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,468,475,-203,-232,-39,-40,-41,-42,-43,-207,-211,-215,-219,-223,-227,-127,-172,-175,-178,-188,-234,-231,501,502,508,509,510,511,524,-233,-237,-104,529,530,531,532,-140,-139,-141,-142,533,534,535,542,-190,-238,-136,-135,-137,-138,-144,-143,-145,-189,555,556,563,564,-191,-192,-173,-176,-180,-193,-194,-179,-174,-177,]),'ELSE':([20,50,51,79,80,142,271,475,502,528,],[52,81,-236,81,-240,52,-239,-234,527,-238,]),'INT':([27,28,29,30,31,32,33,34,35,40,42,50,51,54,55,59,61,63,66,68,69,70,71,72,73,74,75,76,77,78,80,83,90,91,94,102,112,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,147,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,184,185,186,187,188,189,190,191,192,193,194,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,227,228,229,230,234,237,238,241,271,282,283,284,302,305,307,316,317,318,320,328,335,336,342,343,347,348,353,356,366,367,369,370,371,372,373,377,378,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,412,413,414,415,416,417,418,419,420,421,422,423,424,425,432,433,438,451,452,456,460,461,464,465,468,470,471,472,475,481,482,495,502,503,524,525,526,528,536,538,540,542,543,544,552,555,556,557,559,561,563,564,567,568,569,572,573,],[-50,-51,-52,-53,-54,-55,-56,-57,-58,-157,73,-235,-236,73,73,73,73,73,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,73,-156,162,189,73,-161,260,-158,73,269,73,73,73,73,73,73,73,73,73,73,73,73,-152,73,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,73,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,73,-249,-250,-251,73,73,-268,-269,-270,-271,-278,-279,-280,-281,-282,73,73,73,73,355,-160,-195,260,-239,73,374,73,73,-186,395,73,73,-187,415,73,-275,-273,-272,-274,-276,-277,430,73,-119,-120,-116,-101,-102,-103,-117,73,73,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,473,474,73,73,480,73,73,-172,-175,-178,-188,496,497,73,-234,73,73,73,-237,-104,-190,73,73,-238,73,73,73,-189,73,73,73,-191,-192,-173,-176,-180,-193,-194,-179,570,571,-174,-177,]),'LONG':([27,28,29,30,31,32,33,34,35,40,42,50,51,54,55,59,61,63,66,68,69,70,71,72,73,74,75,76,77,78,80,83,90,91,94,102,112,128,129,130,132,134,135,136,137,138,139,140,141,142,143,147,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,184,185,186,187,188,189,190,191,192,193,194,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,227,228,229,230,237,238,244,271,282,283,284,302,305,306,316,317,318,319,328,335,336,342,343,347,348,356,366,367,369,370,371,372,373,377,378,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,412,413,414,415,416,417,418,419,420,421,422,423,424,425,438,451,452,456,460,461,464,465,468,472,475,481,482,495,502,503,524,525,526,528,536,538,540,542,543,544,552,555,556,557,559,561,563,564,567,572,573,],[-50,-51,-52,-53,-54,-55,-56,-57,-58,-157,74,-235,-236,74,74,74,74,74,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,74,-156,161,188,74,-161,261,-158,74,74,74,74,74,74,74,74,74,74,74,74,74,-152,74,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,74,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,74,-249,-250,-251,74,74,-268,-269,-270,-271,-278,-279,-280,-281,-282,74,74,74,74,-160,-195,261,-239,74,74,74,74,-186,393,74,74,-187,413,74,-275,-273,-272,-274,-276,-277,74,-119,-120,-116,-101,-102,-103,-117,74,74,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,74,74,74,74,74,-172,-175,-178,-188,74,-234,74,74,74,-237,-104,-190,74,74,-238,74,74,74,-189,74,74,74,-191,-192,-173,-176,-180,-193,-194,-179,-174,-177,]),'FLOAT':([27,28,29,30,31,32,33,34,35,40,42,50,51,54,55,59,61,63,66,68,69,70,71,72,73,74,75,76,77,78,80,83,90,91,94,102,112,128,129,130,132,134,135,136,137,138,139,140,141,142,143,147,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,184,185,186,187,188,189,190,191,192,193,194,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,227,228,229,230,237,238,247,271,282,283,284,302,305,308,316,317,318,321,328,335,336,342,343,347,348,356,366,367,369,370,371,372,373,377,378,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,412,413,414,415,416,417,418,419,420,421,422,423,424,425,438,451,452,456,460,461,464,465,468,472,475,481,482,495,502,503,524,525,526,528,536,538,540,542,543,544,552,555,556,557,559,561,563,564,567,572,573,],[-50,-51,-52,-53,-54,-55,-56,-57,-58,-157,75,-235,-236,75,75,75,75,75,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,75,-156,163,190,75,-161,262,-158,75,75,75,75,75,75,75,75,75,75,75,75,75,-152,75,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,75,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,75,-249,-250,-251,75,75,-268,-269,-270,-271,-278,-279,-280,-281,-282,75,75,75,75,-160,-195,262,-239,75,75,75,75,-186,397,75,75,-187,417,75,-275,-273,-272,-274,-276,-277,75,-119,-120,-116,-101,-102,-103,-117,75,75,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,75,75,75,75,75,-172,-175,-178,-188,75,-234,75,75,75,-237,-104,-190,75,75,-238,75,75,75,-189,75,75,75,-191,-192,-173,-176,-180,-193,-194,-179,-174,-177,]),'DOUBLE':([27,28,29,30,31,32,33,34,35,40,42,50,51,54,55,59,61,63,66,68,69,70,71,72,73,74,75,76,77,78,80,83,90,91,94,102,112,128,129,130,132,134,135,136,137,138,139,140,141,142,143,147,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,184,185,186,187,188,189,190,191,192,193,194,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,227,228,229,230,237,238,250,271,282,283,284,302,305,309,316,317,318,322,328,335,336,342,343,347,348,356,366,367,369,370,371,372,373,377,378,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,412,413,414,415,416,417,418,419,420,421,422,423,424,425,438,451,452,456,460,461,464,465,468,472,475,481,482,495,502,503,524,525,526,528,536,538,540,542,543,544,552,555,556,557,559,561,563,564,567,572,573,],[-50,-51,-52,-53,-54,-55,-56,-57,-58,-157,76,-235,-236,76,76,76,76,76,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,76,-156,164,191,76,-161,263,-158,76,76,76,76,76,76,76,76,76,76,76,76,76,-152,76,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,76,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,76,-249,-250,-251,76,76,-268,-269,-270,-271,-278,-279,-280,-281,-282,76,76,76,76,-160,-195,263,-239,76,76,76,76,-186,399,76,76,-187,419,76,-275,-273,-272,-274,-276,-277,76,-119,-120,-116,-101,-102,-103,-117,76,76,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,76,76,76,76,76,-172,-175,-178,-188,76,-234,76,76,76,-237,-104,-190,76,76,-238,76,76,76,-189,76,76,76,-191,-192,-173,-176,-180,-193,-194,-179,-174,-177,]),'RETURN':([27,28,29,30,31,32,33,34,35,40,50,51,66,68,69,70,71,72,73,74,75,76,77,78,80,90,112,129,134,135,136,137,138,139,140,141,142,143,154,156,157,158,159,160,161,162,163,164,165,166,167,170,171,172,173,184,185,186,187,188,189,190,191,192,193,194,237,238,271,272,273,274,275,276,277,278,279,280,281,305,318,335,336,342,343,347,348,366,367,369,370,371,372,373,377,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,412,413,414,415,416,417,418,419,420,421,422,423,424,425,455,457,461,464,465,468,475,502,503,524,528,542,555,556,557,559,561,563,564,567,572,573,],[-50,-51,-52,-53,-54,-55,-56,-57,-58,-157,-235,-236,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-240,-156,-161,-158,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-195,-239,-29,-30,-31,-32,-33,-34,-35,-37,-36,-38,-186,-187,-275,-273,-272,-274,-276,-277,-119,-120,-116,-101,-102,-103,-117,456,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,482,487,-172,-175,-178,-188,-234,-237,-104,-190,-238,-189,-191,-192,-173,-176,-180,-193,-194,-179,-174,-177,]),'CASE':([27,28,29,30,31,32,33,34,35,40,64,66,68,69,70,71,72,73,74,75,76,77,78,90,112,121,122,123,124,125,126,127,129,154,156,157,158,159,160,161,162,163,164,165,166,167,170,171,172,173,184,185,186,187,188,189,190,191,192,193,194,237,305,318,335,336,342,343,347,348,366,367,369,370,371,372,373,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,412,413,414,415,416,417,418,419,420,421,422,423,424,425,436,437,439,440,441,442,443,445,446,447,448,449,450,461,464,465,501,503,557,559,561,567,572,573,],[-50,-51,-52,-53,-54,-55,-56,-57,-58,-157,128,-159,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-156,-161,241,244,247,250,253,256,259,-158,-152,-153,-44,-46,-48,-184,-59,-65,-71,-77,-83,-89,-95,-162,-163,-164,-165,-45,-47,-49,-185,-61,-67,-73,-79,-85,-91,-97,-160,-186,-187,-275,-273,-272,-274,-276,-277,-119,-120,-116,-101,-102,-103,-117,-167,-168,-169,-170,-171,-183,-166,-63,-60,-69,-66,-75,-72,-81,-78,-87,-84,-93,-90,-99,-96,-64,-62,-70,-68,-76,-74,-82,-80,-88,-86,-94,-92,-100,-98,-203,-232,-39,-40,-41,-42,-43,-207,-211,-215,-219,-223,-227,-172,-175,-178,-233,-104,-173,-176,-180,-179,-174,-177,]),'PAR_D':([42,56,63,65,67,68,69,70,71,72,73,74,75,76,77,78,86,87,88,89,97,98,99,100,101,109,111,152,224,225,226,267,268,269,270,283,289,290,291,292,293,294,295,300,303,314,315,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,354,366,367,374,383,389,408,410,411,429,452,463,473,474,479,480,488,489,490,492,496,497,547,549,551,562,570,571,],[66,90,112,129,-181,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,151,154,-155,156,207,-242,-243,-244,-245,235,237,298,-246,-247,-248,-182,366,367,368,66,-105,-106,-107,-108,-109,-110,-111,-154,390,407,-148,-241,-267,-259,-261,-263,-265,-275,-273,-256,-262,-252,-255,-260,-272,-274,-253,-254,-276,-277,-257,-264,-258,-266,431,-119,-120,453,-129,461,-149,464,465,469,66,-150,499,500,366,367,-112,-113,-130,-151,522,523,557,559,561,567,572,573,]),'STRING':([42,54,55,59,61,63,91,94,102,128,130,132,155,169,208,209,210,211,212,214,215,216,217,231,253,282,283,302,310,316,317,323,452,456,460,481,482,536,538,540,552,],[68,68,68,105,105,68,165,192,105,264,68,105,68,68,105,-249,-250,-251,333,-268,-269,-270,-271,349,264,68,68,68,401,68,68,421,68,68,68,68,68,68,68,68,68,]),'CHAR':([42,54,55,59,61,63,91,94,102,128,130,132,155,169,208,209,210,211,212,214,215,216,217,232,256,282,283,302,311,316,317,324,452,456,460,481,482,536,538,540,552,],[69,69,69,106,106,69,166,193,106,265,69,106,69,69,106,-249,-250,-251,334,-268,-269,-270,-271,351,265,69,69,69,403,69,69,423,69,69,69,69,69,69,69,69,69,]),'TRUE':([42,54,55,59,61,63,91,94,102,128,130,132,155,169,208,209,210,211,212,214,215,216,217,223,259,282,283,302,312,316,317,325,452,456,460,481,482,536,538,540,552,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-249,-250,-251,77,-268,-269,-270,-271,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'FLASE':([42,54,55,59,61,63,91,94,102,128,130,132,155,169,208,209,210,211,212,214,215,216,217,223,259,282,283,302,312,316,317,325,452,456,460,481,482,536,538,540,552,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-249,-250,-251,78,-268,-269,-270,-271,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'IGUAL':([57,58,84,85,92,95,144,148,149,151,175,176,177,178,179,180,181,198,199,200,201,202,203,204,288,289,290,291,292,293,294,295,298,382,383,407,444,453,462,466,467,488,489,],[91,94,146,-131,174,197,282,286,287,-132,306,307,308,309,310,311,312,319,320,321,322,323,324,325,-146,-105,-106,-107,-108,-109,-110,-111,-133,-134,460,-147,282,481,491,493,494,-112,-113,]),'DOBLE_PUNTO':([57,58,84,85,151,153,298,382,],[93,96,150,-131,-132,299,-133,-134,]),'NOT':([59,61,73,74,75,76,77,78,98,99,100,101,132,208,209,210,211,224,225,226,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,],[102,102,-123,-124,-125,-126,-121,-122,211,-243,-244,-245,102,102,-249,-250,-251,-246,-247,-248,-267,-259,-261,-263,-265,-275,-273,-256,-262,-252,-255,-260,-272,-274,-253,-254,-276,-277,-257,-264,-258,-266,]),'COMA':([67,68,69,70,71,72,73,74,75,76,77,78,289,290,291,292,293,294,295,315,366,367,374,463,479,480,488,489,],[130,-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,-105,-106,-107,-108,-109,-110,-111,409,-119,-120,-123,409,-116,-123,-112,-113,]),'MAS':([68,69,70,71,72,73,74,75,76,77,78,88,99,103,104,143,144,145,157,158,161,162,163,164,184,185,188,189,190,191,224,335,336,339,340,341,342,343,344,345,346,347,348,366,367,369,372,373,483,486,504,507,],[-114,-115,-116,-117,-118,-123,-124,-125,-126,-121,-122,155,219,219,219,219,219,219,219,219,-124,-123,-125,-126,219,219,-124,-123,-125,-126,219,-275,-273,219,219,219,-272,-274,219,219,219,-276,-277,-119,-120,219,219,219,219,219,219,219,]),'IGUAL_COMPARACION':([73,74,75,76,77,78,99,100,103,104,105,106,224,225,335,336,342,343,347,348,],[-123,-124,-125,-126,-121,-122,214,214,214,214,214,214,214,214,-275,-273,-272,-274,-276,-277,]),'DIFERENTE':([73,74,75,76,77,78,99,100,103,104,105,106,224,225,335,336,342,343,347,348,],[-123,-124,-125,-126,-121,-122,215,215,215,215,215,215,215,215,-275,-273,-272,-274,-276,-277,]),'MAYOR':([73,74,75,76,77,78,99,100,103,104,105,106,224,225,335,336,342,343,347,348,],[-123,-124,-125,-126,-121,-122,216,216,216,216,216,216,216,216,-275,-273,-272,-274,-276,-277,]),'MENOR':([73,74,75,76,77,78,99,100,103,104,105,106,224,225,335,336,342,343,347,348,],[-123,-124,-125,-126,-121,-122,217,217,217,217,217,217,217,217,-275,-273,-272,-274,-276,-277,]),'MENOS':([73,74,75,76,99,103,104,143,144,145,157,158,161,162,163,164,184,185,188,189,190,191,224,335,336,339,340,341,342,343,344,345,346,347,348,369,372,373,483,486,504,507,],[-123,-124,-125,-126,218,218,218,218,218,218,218,218,-124,-123,-125,-126,218,218,-124,-123,-125,-126,218,-275,-273,218,218,218,-272,-274,218,218,218,-276,-277,218,218,218,218,218,218,218,]),'MULTIPLICACION':([73,74,75,76,99,103,104,143,144,145,157,158,161,162,163,164,184,185,188,189,190,191,224,335,336,339,340,341,342,343,344,345,346,347,348,369,372,373,483,486,504,507,],[-123,-124,-125,-126,220,220,220,220,220,220,220,220,-124,-123,-125,-126,220,220,-124,-123,-125,-126,220,-275,-273,220,220,220,-272,-274,220,220,220,-276,-277,220,220,220,220,220,220,220,]),'DIVISION':([73,74,75,76,99,103,104,143,144,145,157,158,161,162,163,164,184,185,188,189,190,191,224,335,336,339,340,341,342,343,344,345,346,347,348,369,372,373,483,486,504,507,],[-123,-124,-125,-126,221,221,221,221,221,221,221,221,-124,-123,-125,-126,221,221,-124,-123,-125,-126,221,-275,-273,221,221,221,-272,-274,221,221,221,-276,-277,221,221,221,221,221,221,221,]),'MOD':([73,74,75,76,99,103,104,143,144,145,157,158,161,162,163,164,184,185,188,189,190,191,224,335,336,339,340,341,342,343,344,345,346,347,348,369,372,373,483,486,504,507,],[-123,-124,-125,-126,222,222,222,222,222,222,222,222,-124,-123,-125,-126,222,222,-124,-123,-125,-126,222,-275,-273,222,222,222,-272,-274,222,222,222,-276,-277,222,222,222,222,222,222,222,]),'AND':([73,74,75,76,77,78,98,99,100,101,224,225,226,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,],[-123,-124,-125,-126,-121,-122,209,-243,-244,-245,-246,-247,-248,-267,-259,-261,-263,-265,-275,-273,-256,-262,-252,-255,-260,-272,-274,-253,-254,-276,-277,-257,-264,-258,-266,]),'OR':([73,74,75,76,77,78,98,99,100,101,224,225,226,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,],[-123,-124,-125,-126,-121,-122,210,-243,-244,-245,-246,-247,-248,-267,-259,-261,-263,-265,-275,-273,-256,-262,-252,-255,-260,-272,-274,-253,-254,-276,-277,-257,-264,-258,-266,]),'FUNCION_FLECHA':([77,78,260,261,262,263,264,265,266,358,],[-121,-122,359,360,361,362,363,364,365,435,]),'ARRAYCLASS':([91,93,94,96,150,183,299,313,326,327,379,380,409,491,493,516,518,548,550,],[168,182,195,205,296,296,296,296,296,296,296,296,296,515,517,537,539,296,296,]),'LONGCLASS':([93,96,150,183,299,313,326,327,379,380,409,548,550,],[175,198,293,293,293,293,293,293,293,293,293,293,293,]),'INTCLASS':([93,96,150,183,299,313,326,327,379,380,409,548,550,],[176,199,292,292,292,292,292,292,292,292,292,292,292,]),'FLOATCLASS':([93,96,150,183,299,313,326,327,379,380,409,548,550,],[177,200,295,295,295,295,295,295,295,295,295,295,295,]),'DOUBLECLASS':([93,96,150,183,299,313,326,327,379,380,409,548,550,],[178,201,294,294,294,294,294,294,294,294,294,294,294,]),'STRINGCLASS':([93,96,150,183,299,313,326,327,379,380,409,548,550,],[179,202,290,290,290,290,290,290,290,290,290,290,290,]),'CHARCLASS':([93,96,150,183,299,313,326,327,379,380,409,548,550,],[180,203,289,289,289,289,289,289,289,289,289,289,289,]),'BOOLCLASS':([93,96,150,183,299,313,326,327,379,380,409,548,550,],[181,204,291,291,291,291,291,291,291,291,291,291,291,]),'LISTCLASS':([94,96,150,183,299,313,326,327,379,380,409,494,520,548,550,],[196,206,297,297,297,297,297,297,297,297,297,519,541,297,297,]),'ITERATOR':([108,233,],[234,353,]),'CORCHETE_I':([182,205,206,296,297,537,539,],[313,326,327,379,380,548,550,]),'SUBGUION':([241,244,247,250,253,256,259,],[358,358,358,358,358,358,358,]),'CORCHETE_D':([289,290,291,292,293,294,295,406,426,427,458,459,488,489,558,560,],[-105,-106,-107,-108,-109,-110,-111,462,466,467,488,489,-112,-113,565,566,]),'TO_INT':([301,304,],[385,385,]),'TO_DOUBLE':([301,304,],[386,386,]),'TO_FLOAT':([301,304,],[387,387,]),'TO_LONG':([301,304,],[388,388,]),'TO':([355,430,],[432,470,]),'UNTIL':([355,430,],[433,471,]),'NEW':([491,493,494,],[516,518,520,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,5,],[1,8,]),'io':([3,],[5,]),'cuerpo':([7,12,16,17,18,19,20,],[11,44,45,46,47,48,49,]),'funcion':([7,12,16,17,18,19,20,],[12,12,12,12,12,12,12,]),'funcall':([7,12,16,17,18,19,20,83,91,94,134,135,136,137,138,139,140,141,142,143,147,282,284,328,356,359,360,361,362,363,364,365,377,378,435,438,451,456,472,482,487,495,525,526,543,544,],[13,13,13,13,13,13,13,136,173,173,136,136,136,136,136,136,136,136,136,136,136,173,136,136,136,441,441,441,441,441,441,441,136,136,441,136,136,173,136,173,173,136,136,136,136,136,]),'impresion':([7,12,16,17,18,19,20,83,134,135,136,137,138,139,140,141,142,143,147,284,328,356,359,360,361,362,363,364,365,377,378,435,438,451,472,495,525,526,543,544,],[14,14,14,14,14,14,14,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,442,442,442,442,442,442,442,137,137,442,137,137,137,137,137,137,137,137,]),'entrada':([7,12,16,17,18,19,20,83,91,94,134,135,136,137,138,139,140,141,142,143,147,282,284,328,356,359,360,361,362,363,364,365,377,378,435,438,451,456,472,482,487,495,525,526,543,544,],[15,15,15,15,15,15,15,138,172,172,138,138,138,138,138,138,138,138,138,138,138,172,138,138,138,443,443,443,443,443,443,443,138,138,443,138,138,172,138,172,172,138,138,138,138,138,]),'asignacion':([7,12,16,17,18,19,20,83,134,135,136,137,138,139,140,141,142,143,147,284,328,356,359,360,361,362,363,364,365,377,378,435,438,451,472,495,525,526,543,544,],[16,16,16,16,16,16,16,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,439,439,439,439,439,439,439,134,134,439,134,134,134,134,134,134,134,134,]),'while':([7,12,16,17,18,19,20,83,134,135,136,137,138,139,140,141,142,143,147,284,328,356,377,378,438,451,472,495,525,526,543,544,],[17,17,17,17,17,17,17,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,]),'for':([7,12,16,17,18,19,20,83,134,135,136,137,138,139,140,141,142,143,147,284,328,356,377,378,438,451,472,495,525,526,543,544,],[18,18,18,18,18,18,18,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'match':([7,12,16,17,18,19,20,83,134,135,136,137,138,139,140,141,142,143,147,284,328,356,377,378,438,451,472,495,525,526,543,544,],[19,19,19,19,19,19,19,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'if':([7,12,16,17,18,19,20,83,134,135,136,137,138,139,140,141,142,143,147,284,328,356,377,378,438,451,472,495,525,526,543,544,],[20,20,20,20,20,20,20,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'asignacionLong':([7,12,16,17,18,19,20,83,134,135,136,137,138,139,140,141,142,143,147,284,328,356,359,360,361,362,363,364,365,377,378,435,438,451,472,495,525,526,543,544,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'asignacionInt':([7,12,16,17,18,19,20,83,134,135,136,137,138,139,140,141,142,143,147,284,328,356,359,360,361,362,363,364,365,377,378,435,438,451,472,495,525,526,543,544,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'asignacionFloat':([7,12,16,17,18,19,20,83,134,135,136,137,138,139,140,141,142,143,147,284,328,356,359,360,361,362,363,364,365,377,378,435,438,451,472,495,525,526,543,544,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'asignacionDouble':([7,12,16,17,18,19,20,83,134,135,136,137,138,139,140,141,142,143,147,284,328,356,359,360,361,362,363,364,365,377,378,435,438,451,472,495,525,526,543,544,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'asignacionString':([7,12,16,17,18,19,20,83,134,135,136,137,138,139,140,141,142,143,147,284,328,356,359,360,361,362,363,364,365,377,378,435,438,451,472,495,525,526,543,544,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'asignacionChar':([7,12,16,17,18,19,20,83,134,135,136,137,138,139,140,141,142,143,147,284,328,356,359,360,361,362,363,364,365,377,378,435,438,451,472,495,525,526,543,544,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'asignacionBoolean':([7,12,16,17,18,19,20,83,134,135,136,137,138,139,140,141,142,143,147,284,328,356,359,360,361,362,363,364,365,377,378,435,438,451,472,495,525,526,543,544,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'array':([7,12,16,17,18,19,20,83,134,135,136,137,138,139,140,141,142,143,147,284,328,356,359,360,361,362,363,364,365,377,378,435,438,451,472,495,525,526,543,544,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'list':([7,12,16,17,18,19,20,83,134,135,136,137,138,139,140,141,142,143,147,284,328,356,359,360,361,362,363,364,365,377,378,435,438,451,472,495,525,526,543,544,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'varparen':([10,144,157,184,369,444,483,504,512,],[40,40,40,40,40,40,40,40,40,]),'elseif':([20,50,79,142,502,],[50,79,79,50,528,]),'else':([20,50,79,142,],[51,80,80,51,]),'valores':([42,63,130,169,283,302,316,317,452,536,538,540,552,],[65,111,267,303,65,389,410,411,65,547,549,551,562,]),'valor':([42,54,55,63,130,155,169,282,283,302,316,317,452,456,460,481,482,536,538,540,552,],[67,88,88,67,67,88,67,370,67,67,67,67,67,484,490,503,505,67,67,67,67,]),'numeros':([42,54,55,59,61,63,83,91,94,102,130,132,134,135,136,137,138,139,140,141,142,143,147,155,169,208,212,213,227,228,229,230,282,283,284,302,316,317,328,356,377,378,438,451,452,456,460,472,481,482,495,525,526,536,538,540,543,544,552,],[71,71,71,103,103,71,145,145,145,103,71,103,145,145,145,145,145,145,145,145,145,145,145,71,71,103,331,336,339,342,345,347,373,71,145,71,71,71,145,145,145,145,145,145,71,373,71,145,71,373,145,145,145,71,71,71,145,145,71,]),'booleanos':([42,54,55,59,61,63,91,94,102,128,130,132,155,169,208,212,223,259,282,283,302,312,316,317,325,452,456,460,481,482,536,538,540,552,],[72,72,72,100,100,72,167,194,225,266,72,100,72,72,100,332,337,266,72,72,72,405,72,72,425,72,72,72,72,72,72,72,72,72,]),'parametro':([53,],[84,]),'parametros':([53,298,],[85,382,]),'valorI':([54,55,155,],[87,89,300,]),'dectipoTupla':([57,58,84,],[92,95,149,]),'condicional':([59,61,132,208,],[97,109,270,329,]),'valorC':([59,61,132,208,],[98,98,98,98,]),'relacional':([59,61,102,132,208,],[101,101,226,101,101,]),'aritmetica':([59,61,83,91,94,102,132,134,135,136,137,138,139,140,141,142,143,147,208,227,229,282,284,328,356,377,378,438,451,456,472,482,495,525,526,543,544,],[104,104,143,158,185,104,104,143,143,143,143,143,143,143,143,143,143,143,104,340,344,372,143,143,143,143,143,143,143,486,143,507,143,143,143,143,143,]),'cases':([64,],[113,]),'casesInt':([64,121,],[114,239,]),'casesLgn':([64,122,],[115,242,]),'casesFlt':([64,123,],[116,245,]),'casesDob':([64,124,],[117,248,]),'casesStr':([64,125,],[118,251,]),'casesChar':([64,126,],[119,254,]),'casesBool':([64,127,],[120,257,]),'caseInt':([64,121,],[121,121,]),'caseLgn':([64,122,],[122,122,]),'caseFlt':([64,123,],[123,123,]),'caseDob':([64,124,],[124,124,]),'caseStr':([64,125,],[125,125,]),'caseChar':([64,126,],[126,126,]),'caseBool':([64,127,],[127,127,]),'contenido':([83,134,135,136,137,138,139,140,141,142,143,147,284,328,356,377,378,438,451,472,495,525,526,543,544,],[133,272,273,274,275,276,277,278,279,280,281,285,375,428,434,455,457,477,478,498,521,545,546,553,554,]),'reasignacion':([83,134,135,136,137,138,139,140,141,142,143,147,284,328,356,359,360,361,362,363,364,365,377,378,435,438,451,472,495,525,526,543,544,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,440,440,440,440,440,440,440,135,135,440,135,135,135,135,135,135,135,135,]),'dectipo':([84,],[148,]),'declaracion':([86,381,],[152,152,]),'returnfun':([91,94,282,456,482,487,],[159,186,371,485,506,514,]),'tuple':([91,94,174,197,487,],[160,187,305,318,513,]),'returnCastable':([91,94,282,456,482,487,],[170,170,170,170,170,170,]),'castingcall':([91,94,282,456,482,487,],[171,171,171,171,171,171,]),'logicos':([98,],[208,]),'comparacion':([99,100,103,104,105,106,224,225,],[212,223,227,229,231,232,212,223,]),'aritmeticos':([99,103,104,143,144,145,157,158,184,185,224,339,340,341,344,345,346,369,372,373,483,486,504,507,],[213,228,230,230,213,228,213,230,213,230,213,228,230,213,230,228,213,213,230,228,213,230,213,230,]),'defcase':([121,122,123,124,125,126,127,],[240,243,246,249,252,255,258,]),'tipo':([150,183,299,313,326,327,379,380,409,548,550,],[288,315,383,406,426,427,458,459,463,558,560,]),'tipos':([183,],[314,]),'castingfun':([301,304,],[384,391,]),'tiposentry':([315,463,],[408,492,]),'codeBlock':([359,360,361,362,363,364,365,435,],[436,445,446,447,448,449,450,476,]),'contenidoLine':([359,360,361,362,363,364,365,435,],[437,437,437,437,437,437,437,437,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> OBJECT VARIABLE LLAVE_I cuerpo LLAVE_D','inicio',5,'p_inicio','sintax.py',8),
  ('inicio -> IMPORT io inicio','inicio',3,'p_inicio','sintax.py',9),
  ('io -> VARIABLE PUNTO VARIABLE PUNTO VARIABLE PUNTO READLINE','io',7,'p_io','sintax.py',12),
  ('cuerpo -> funcion','cuerpo',1,'p_cuerpo','sintax.py',15),
  ('cuerpo -> funcall','cuerpo',1,'p_cuerpo','sintax.py',16),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintax.py',17),
  ('cuerpo -> entrada','cuerpo',1,'p_cuerpo','sintax.py',18),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintax.py',19),
  ('cuerpo -> while','cuerpo',1,'p_cuerpo','sintax.py',20),
  ('cuerpo -> for','cuerpo',1,'p_cuerpo','sintax.py',21),
  ('cuerpo -> match','cuerpo',1,'p_cuerpo','sintax.py',22),
  ('cuerpo -> if','cuerpo',1,'p_cuerpo','sintax.py',23),
  ('cuerpo -> funcion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',24),
  ('cuerpo -> asignacion cuerpo','cuerpo',2,'p_cuerpo','sintax.py',25),
  ('cuerpo -> while cuerpo','cuerpo',2,'p_cuerpo','sintax.py',26),
  ('cuerpo -> for cuerpo','cuerpo',2,'p_cuerpo','sintax.py',27),
  ('cuerpo -> if cuerpo','cuerpo',2,'p_cuerpo','sintax.py',28),
  ('cuerpo -> match cuerpo','cuerpo',2,'p_cuerpo','sintax.py',29),
  ('contenido -> asignacion','contenido',1,'p_contenido','sintax.py',33),
  ('contenido -> reasignacion','contenido',1,'p_contenido','sintax.py',34),
  ('contenido -> funcall','contenido',1,'p_contenido','sintax.py',35),
  ('contenido -> impresion','contenido',1,'p_contenido','sintax.py',36),
  ('contenido -> entrada','contenido',1,'p_contenido','sintax.py',37),
  ('contenido -> while','contenido',1,'p_contenido','sintax.py',38),
  ('contenido -> for','contenido',1,'p_contenido','sintax.py',39),
  ('contenido -> match','contenido',1,'p_contenido','sintax.py',40),
  ('contenido -> if','contenido',1,'p_contenido','sintax.py',41),
  ('contenido -> aritmetica','contenido',1,'p_contenido','sintax.py',42),
  ('contenido -> asignacion contenido','contenido',2,'p_contenido','sintax.py',43),
  ('contenido -> reasignacion contenido','contenido',2,'p_contenido','sintax.py',44),
  ('contenido -> funcall contenido','contenido',2,'p_contenido','sintax.py',45),
  ('contenido -> impresion contenido','contenido',2,'p_contenido','sintax.py',46),
  ('contenido -> entrada contenido','contenido',2,'p_contenido','sintax.py',47),
  ('contenido -> while contenido','contenido',2,'p_contenido','sintax.py',48),
  ('contenido -> for contenido','contenido',2,'p_contenido','sintax.py',49),
  ('contenido -> if contenido','contenido',2,'p_contenido','sintax.py',50),
  ('contenido -> match contenido','contenido',2,'p_contenido','sintax.py',51),
  ('contenido -> aritmetica contenido','contenido',2,'p_contenido','sintax.py',52),
  ('contenidoLine -> asignacion','contenidoLine',1,'p_contenidoLine','sintax.py',56),
  ('contenidoLine -> reasignacion','contenidoLine',1,'p_contenidoLine','sintax.py',57),
  ('contenidoLine -> funcall','contenidoLine',1,'p_contenidoLine','sintax.py',58),
  ('contenidoLine -> impresion','contenidoLine',1,'p_contenidoLine','sintax.py',59),
  ('contenidoLine -> entrada','contenidoLine',1,'p_contenidoLine','sintax.py',60),
  ('asignacion -> VAR VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',64),
  ('asignacion -> VAL VARIABLE IGUAL VARIABLE','asignacion',4,'p_asignacion','sintax.py',65),
  ('asignacion -> VAR VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',66),
  ('asignacion -> VAL VARIABLE IGUAL aritmetica','asignacion',4,'p_asignacion','sintax.py',67),
  ('asignacion -> VAR VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',68),
  ('asignacion -> VAL VARIABLE IGUAL returnfun','asignacion',4,'p_asignacion','sintax.py',69),
  ('asignacion -> asignacionLong','asignacion',1,'p_asignacion','sintax.py',70),
  ('asignacion -> asignacionInt','asignacion',1,'p_asignacion','sintax.py',71),
  ('asignacion -> asignacionFloat','asignacion',1,'p_asignacion','sintax.py',72),
  ('asignacion -> asignacionDouble','asignacion',1,'p_asignacion','sintax.py',73),
  ('asignacion -> asignacionString','asignacion',1,'p_asignacion','sintax.py',74),
  ('asignacion -> asignacionChar','asignacion',1,'p_asignacion','sintax.py',75),
  ('asignacion -> asignacionBoolean','asignacion',1,'p_asignacion','sintax.py',76),
  ('asignacion -> array','asignacion',1,'p_asignacion','sintax.py',77),
  ('asignacion -> list','asignacion',1,'p_asignacion','sintax.py',78),
  ('asignacionLong -> VAR VARIABLE IGUAL LONG','asignacionLong',4,'p_asignacionLong','sintax.py',81),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG','asignacionLong',6,'p_asignacionLong','sintax.py',82),
  ('asignacionLong -> VAL VARIABLE IGUAL LONG','asignacionLong',4,'p_asignacionLong','sintax.py',83),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL LONG','asignacionLong',6,'p_asignacionLong','sintax.py',84),
  ('asignacionLong -> VAR VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',85),
  ('asignacionLong -> VAL VARIABLE DOBLE_PUNTO LONGCLASS IGUAL VARIABLE','asignacionLong',6,'p_asignacionLong','sintax.py',86),
  ('asignacionInt -> VAR VARIABLE IGUAL INT','asignacionInt',4,'p_asignacionInt','sintax.py',89),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT','asignacionInt',6,'p_asignacionInt','sintax.py',90),
  ('asignacionInt -> VAL VARIABLE IGUAL INT','asignacionInt',4,'p_asignacionInt','sintax.py',91),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL INT','asignacionInt',6,'p_asignacionInt','sintax.py',92),
  ('asignacionInt -> VAR VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',93),
  ('asignacionInt -> VAL VARIABLE DOBLE_PUNTO INTCLASS IGUAL VARIABLE','asignacionInt',6,'p_asignacionInt','sintax.py',94),
  ('asignacionFloat -> VAR VARIABLE IGUAL FLOAT','asignacionFloat',4,'p_asignacionFloat','sintax.py',97),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT','asignacionFloat',6,'p_asignacionFloat','sintax.py',98),
  ('asignacionFloat -> VAL VARIABLE IGUAL FLOAT','asignacionFloat',4,'p_asignacionFloat','sintax.py',99),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL FLOAT','asignacionFloat',6,'p_asignacionFloat','sintax.py',100),
  ('asignacionFloat -> VAR VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',101),
  ('asignacionFloat -> VAL VARIABLE DOBLE_PUNTO FLOATCLASS IGUAL VARIABLE','asignacionFloat',6,'p_asignacionFloat','sintax.py',102),
  ('asignacionDouble -> VAR VARIABLE IGUAL DOUBLE','asignacionDouble',4,'p_asignacionDouble','sintax.py',105),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',106),
  ('asignacionDouble -> VAL VARIABLE IGUAL DOUBLE','asignacionDouble',4,'p_asignacionDouble','sintax.py',107),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL DOUBLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',108),
  ('asignacionDouble -> VAR VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',109),
  ('asignacionDouble -> VAL VARIABLE DOBLE_PUNTO DOUBLECLASS IGUAL VARIABLE','asignacionDouble',6,'p_asignacionDouble','sintax.py',110),
  ('asignacionString -> VAR VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',113),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',114),
  ('asignacionString -> VAL VARIABLE IGUAL STRING','asignacionString',4,'p_asignacionString','sintax.py',115),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL STRING','asignacionString',6,'p_asignacionString','sintax.py',116),
  ('asignacionString -> VAR VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',117),
  ('asignacionString -> VAL VARIABLE DOBLE_PUNTO STRINGCLASS IGUAL VARIABLE','asignacionString',6,'p_asignacionString','sintax.py',118),
  ('asignacionChar -> VAR VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',121),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',122),
  ('asignacionChar -> VAL VARIABLE IGUAL CHAR','asignacionChar',4,'p_asignacionChar','sintax.py',123),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL CHAR','asignacionChar',6,'p_asignacionChar','sintax.py',124),
  ('asignacionChar -> VAR VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',125),
  ('asignacionChar -> VAL VARIABLE DOBLE_PUNTO CHARCLASS IGUAL VARIABLE','asignacionChar',6,'p_asignacionChar','sintax.py',126),
  ('asignacionBoolean -> VAR VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',129),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',130),
  ('asignacionBoolean -> VAL VARIABLE IGUAL booleanos','asignacionBoolean',4,'p_asignacionBoolean','sintax.py',131),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL booleanos','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',132),
  ('asignacionBoolean -> VAR VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',133),
  ('asignacionBoolean -> VAL VARIABLE DOBLE_PUNTO BOOLCLASS IGUAL VARIABLE','asignacionBoolean',6,'p_asignacionBoolean','sintax.py',134),
  ('reasignacion -> VARIABLE IGUAL valor','reasignacion',3,'p_reasignacion','sintax.py',138),
  ('reasignacion -> VARIABLE IGUAL returnfun','reasignacion',3,'p_reasignacion','sintax.py',139),
  ('reasignacion -> VARIABLE IGUAL aritmetica','reasignacion',3,'p_reasignacion','sintax.py',140),
  ('reasignacion -> VARIABLE PAR_I INT PAR_D IGUAL valor','reasignacion',6,'p_reasignacion','sintax.py',141),
  ('tipo -> CHARCLASS','tipo',1,'p_tipo','sintax.py',144),
  ('tipo -> STRINGCLASS','tipo',1,'p_tipo','sintax.py',145),
  ('tipo -> BOOLCLASS','tipo',1,'p_tipo','sintax.py',146),
  ('tipo -> INTCLASS','tipo',1,'p_tipo','sintax.py',147),
  ('tipo -> LONGCLASS','tipo',1,'p_tipo','sintax.py',148),
  ('tipo -> DOUBLECLASS','tipo',1,'p_tipo','sintax.py',149),
  ('tipo -> FLOATCLASS','tipo',1,'p_tipo','sintax.py',150),
  ('tipo -> ARRAYCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',151),
  ('tipo -> LISTCLASS CORCHETE_I tipo CORCHETE_D','tipo',4,'p_tipo','sintax.py',152),
  ('valor -> STRING','valor',1,'p_valor','sintax.py',155),
  ('valor -> CHAR','valor',1,'p_valor','sintax.py',156),
  ('valor -> VARIABLE','valor',1,'p_valor','sintax.py',157),
  ('valor -> numeros','valor',1,'p_valor','sintax.py',158),
  ('valor -> booleanos','valor',1,'p_valor','sintax.py',159),
  ('valor -> VARIABLE PAR_I VARIABLE PAR_D','valor',4,'p_valor','sintax.py',160),
  ('valor -> VARIABLE PAR_I INT PAR_D','valor',4,'p_valor','sintax.py',161),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintax.py',164),
  ('booleanos -> FLASE','booleanos',1,'p_booleanos','sintax.py',165),
  ('numeros -> INT','numeros',1,'p_numeros','sintax.py',168),
  ('numeros -> LONG','numeros',1,'p_numeros','sintax.py',169),
  ('numeros -> FLOAT','numeros',1,'p_numeros','sintax.py',170),
  ('numeros -> DOUBLE','numeros',1,'p_numeros','sintax.py',171),
  ('funcion -> DEF VARIABLE parametro IGUAL LLAVE_I contenido LLAVE_D','funcion',7,'p_funcion','sintax.py',176),
  ('funcion -> DEF VARIABLE parametro LLAVE_I contenido LLAVE_D','funcion',6,'p_funcion','sintax.py',177),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo','declaracion',3,'p_declaracion','sintax.py',182),
  ('declaracion -> VARIABLE DOBLE_PUNTO tipo IGUAL valor','declaracion',5,'p_declaracion_defecto','sintax.py',185),
  ('parametro -> parametros','parametro',1,'p_parametro','sintax.py',188),
  ('parametro -> PAR_I PAR_D','parametro',2,'p_parametro','sintax.py',189),
  ('parametros -> PAR_I declaracion PAR_D','parametros',3,'p_parametros','sintax.py',192),
  ('parametros -> PAR_I declaracion PAR_D parametros','parametros',4,'p_parametros','sintax.py',193),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN valor LLAVE_D','funcion',10,'p_funcion_return','sintax.py',198),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_return','sintax.py',199),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_return','sintax.py',200),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I contenido RETURN aritmetica LLAVE_D','funcion',10,'p_funcion_return','sintax.py',201),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN valor LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',204),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN VARIABLE LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',205),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN returnfun LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',206),
  ('funcion -> DEF VARIABLE parametro dectipo IGUAL LLAVE_I RETURN aritmetica LLAVE_D','funcion',9,'p_funcion_return_vacia','sintax.py',207),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN tuple LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',210),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN VARIABLE LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',211),
  ('funcion -> DEF VARIABLE parametro dectipoTupla IGUAL LLAVE_I contenido RETURN returnfun LLAVE_D','funcion',10,'p_funcion_returnTupla','sintax.py',212),
  ('dectipo -> DOBLE_PUNTO tipo','dectipo',2,'p_dectipo','sintax.py',215),
  ('dectipoTupla -> DOBLE_PUNTO PAR_I tipos PAR_D','dectipoTupla',4,'p_dectipoTupla','sintax.py',218),
  ('tipos -> tipo','tipos',1,'p_tipos','sintax.py',221),
  ('tipos -> tipo tiposentry','tipos',2,'p_tipos','sintax.py',222),
  ('tiposentry -> COMA tipo','tiposentry',2,'p_tipoentry','sintax.py',225),
  ('tiposentry -> COMA tipo tiposentry','tiposentry',3,'p_tipoentry','sintax.py',226),
  ('impresion -> PRINTLN PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',231),
  ('impresion -> PRINT PAR_I valorI PAR_D','impresion',4,'p_impresion','sintax.py',232),
  ('valorI -> valor MAS valorI','valorI',3,'p_valorI','sintax.py',235),
  ('valorI -> valor','valorI',1,'p_valorI','sintax.py',236),
  ('entrada -> READLINE PAR_I PAR_D','entrada',3,'p_entrada','sintax.py',241),
  ('funcall -> VARIABLE varparen','funcall',2,'p_funcall','sintax.py',245),
  ('varparen -> PAR_I valores PAR_D','varparen',3,'p_varparen','sintax.py',248),
  ('varparen -> PAR_I PAR_D','varparen',2,'p_varparen','sintax.py',249),
  ('varparen -> varparen PAR_I valores PAR_D','varparen',4,'p_varparen','sintax.py',250),
  ('varparen -> varparen PAR_I PAR_D','varparen',3,'p_varparen','sintax.py',251),
  ('returnfun -> returnCastable','returnfun',1,'p_returnfun','sintax.py',254),
  ('returnfun -> castingcall','returnfun',1,'p_returnfun','sintax.py',255),
  ('returnCastable -> entrada','returnCastable',1,'p_returnCastable','sintax.py',258),
  ('returnCastable -> funcall','returnCastable',1,'p_returnCastable','sintax.py',259),
  ('castingcall -> returnCastable PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',264),
  ('castingcall -> VARIABLE PUNTO castingfun','castingcall',3,'p_castingcall','sintax.py',265),
  ('castingfun -> TO_INT','castingfun',1,'p_castingfun','sintax.py',269),
  ('castingfun -> TO_DOUBLE','castingfun',1,'p_castingfun','sintax.py',270),
  ('castingfun -> TO_FLOAT','castingfun',1,'p_castingfun','sintax.py',271),
  ('castingfun -> TO_LONG','castingfun',1,'p_castingfun','sintax.py',272),
  ('array -> VAR VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',277),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D','array',12,'p_array','sintax.py',278),
  ('array -> VAR VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',279),
  ('array -> VAL VARIABLE IGUAL ARRAYCLASS PAR_I valores PAR_D','array',7,'p_array','sintax.py',280),
  ('array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL ARRAYCLASS PAR_I valores PAR_D','array',12,'p_array','sintax.py',281),
  ('array -> VAL VARIABLE DOBLE_PUNTO ARRAYCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW ARRAYCLASS CORCHETE_I tipo CORCHETE_D PAR_I INT PAR_D','array',16,'p_array','sintax.py',282),
  ('list -> VAL VARIABLE IGUAL LISTCLASS PAR_I valores PAR_D','list',7,'p_list','sintax.py',286),
  ('list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL NEW LISTCLASS PAR_I valores PAR_D','list',13,'p_list','sintax.py',287),
  ('list -> VAL VARIABLE DOBLE_PUNTO LISTCLASS CORCHETE_I tipo CORCHETE_D IGUAL LISTCLASS PAR_I valores PAR_D','list',12,'p_list','sintax.py',288),
  ('valores -> valor','valores',1,'p_valores','sintax.py',292),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintax.py',293),
  ('tuple -> PAR_I valores PAR_D','tuple',3,'p_tuple','sintax.py',297),
  ('asignacion -> VAR VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',300),
  ('asignacion -> VAL VARIABLE IGUAL tuple','asignacion',4,'p_asignacion_tuple','sintax.py',301),
  ('asignacion -> VAR VARIABLE dectipoTupla IGUAL tuple','asignacion',5,'p_asignacion_tupleDec','sintax.py',304),
  ('asignacion -> VAL VARIABLE dectipoTupla IGUAL tuple','asignacion',5,'p_asignacion_tupleDec','sintax.py',305),
  ('while -> WHILE PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','while',7,'p_while','sintax.py',311),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',10,'p_for','sintax.py',315),
  ('for -> FOR PAR_I VARIABLE ITERATOR VARIABLE PAR_D LLAVE_I contenido LLAVE_D','for',9,'p_for','sintax.py',316),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',317),
  ('for -> FOR PAR_I VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',11,'p_for','sintax.py',318),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT TO INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',319),
  ('for -> FOR PAR_I VAR VARIABLE ITERATOR INT UNTIL INT PAR_D LLAVE_I contenido LLAVE_D','for',12,'p_for','sintax.py',320),
  ('match -> VARIABLE MATCH LLAVE_I cases LLAVE_D','match',5,'p_match','sintax.py',324),
  ('cases -> casesInt','cases',1,'p_cases','sintax.py',327),
  ('cases -> casesLgn','cases',1,'p_cases','sintax.py',328),
  ('cases -> casesFlt','cases',1,'p_cases','sintax.py',329),
  ('cases -> casesDob','cases',1,'p_cases','sintax.py',330),
  ('cases -> casesStr','cases',1,'p_cases','sintax.py',331),
  ('cases -> casesChar','cases',1,'p_cases','sintax.py',332),
  ('cases -> casesBool','cases',1,'p_cases','sintax.py',333),
  ('caseInt -> CASE INT FUNCION_FLECHA codeBlock','caseInt',4,'p_caseInt','sintax.py',336),
  ('casesInt -> caseInt','casesInt',1,'p_casesInt','sintax.py',339),
  ('casesInt -> caseInt casesInt','casesInt',2,'p_casesInt','sintax.py',340),
  ('casesInt -> caseInt defcase','casesInt',2,'p_casesInt','sintax.py',341),
  ('caseLgn -> CASE LONG FUNCION_FLECHA codeBlock','caseLgn',4,'p_caseLgn','sintax.py',344),
  ('casesLgn -> caseLgn','casesLgn',1,'p_casesLgn','sintax.py',347),
  ('casesLgn -> caseLgn casesLgn','casesLgn',2,'p_casesLgn','sintax.py',348),
  ('casesLgn -> caseLgn defcase','casesLgn',2,'p_casesLgn','sintax.py',349),
  ('caseFlt -> CASE FLOAT FUNCION_FLECHA codeBlock','caseFlt',4,'p_caseFlt','sintax.py',352),
  ('casesFlt -> caseFlt','casesFlt',1,'p_casesFlt','sintax.py',355),
  ('casesFlt -> caseFlt casesFlt','casesFlt',2,'p_casesFlt','sintax.py',356),
  ('casesFlt -> caseFlt defcase','casesFlt',2,'p_casesFlt','sintax.py',357),
  ('caseDob -> CASE DOUBLE FUNCION_FLECHA codeBlock','caseDob',4,'p_caseDob','sintax.py',360),
  ('casesDob -> caseDob','casesDob',1,'p_casesDob','sintax.py',363),
  ('casesDob -> caseDob casesDob','casesDob',2,'p_casesDob','sintax.py',364),
  ('casesDob -> caseDob defcase','casesDob',2,'p_casesDob','sintax.py',365),
  ('caseStr -> CASE STRING FUNCION_FLECHA codeBlock','caseStr',4,'p_caseStr','sintax.py',368),
  ('casesStr -> caseStr','casesStr',1,'p_casesStr','sintax.py',371),
  ('casesStr -> caseStr casesStr','casesStr',2,'p_casesStr','sintax.py',372),
  ('casesStr -> caseStr defcase','casesStr',2,'p_casesStr','sintax.py',373),
  ('caseChar -> CASE CHAR FUNCION_FLECHA codeBlock','caseChar',4,'p_caseChar','sintax.py',376),
  ('casesChar -> caseChar','casesChar',1,'p_casesChar','sintax.py',379),
  ('casesChar -> caseChar casesChar','casesChar',2,'p_casesChar','sintax.py',380),
  ('casesChar -> caseChar defcase','casesChar',2,'p_casesChar','sintax.py',381),
  ('caseBool -> CASE booleanos FUNCION_FLECHA codeBlock','caseBool',4,'p_caseBool','sintax.py',384),
  ('casesBool -> caseBool','casesBool',1,'p_casesBool','sintax.py',387),
  ('casesBool -> caseBool casesBool','casesBool',2,'p_casesBool','sintax.py',388),
  ('casesBool -> caseBool defcase','casesBool',2,'p_casesBool','sintax.py',389),
  ('defcase -> CASE SUBGUION FUNCION_FLECHA codeBlock','defcase',4,'p_defcase','sintax.py',393),
  ('codeBlock -> contenidoLine','codeBlock',1,'p_codeBlock','sintax.py',396),
  ('codeBlock -> LLAVE_I contenido LLAVE_D','codeBlock',3,'p_codeBlock','sintax.py',397),
  ('if -> IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','if',7,'p_if','sintax.py',401),
  ('if -> if elseif','if',2,'p_if','sintax.py',402),
  ('if -> if else','if',2,'p_if','sintax.py',403),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D','elseif',8,'p_elseif','sintax.py',407),
  ('elseif -> ELSE IF PAR_I condicional PAR_D LLAVE_I contenido LLAVE_D elseif','elseif',9,'p_elseif','sintax.py',408),
  ('else -> ELSE LLAVE_I contenido LLAVE_D','else',4,'p_else','sintax.py',411),
  ('else -> elseif else','else',2,'p_else','sintax.py',412),
  ('condicional -> valorC logicos condicional','condicional',3,'p_condicional','sintax.py',416),
  ('condicional -> valorC','condicional',1,'p_condicional','sintax.py',417),
  ('valorC -> VARIABLE','valorC',1,'p_valorC','sintax.py',420),
  ('valorC -> booleanos','valorC',1,'p_valorC','sintax.py',421),
  ('valorC -> relacional','valorC',1,'p_valorC','sintax.py',422),
  ('valorC -> NOT VARIABLE','valorC',2,'p_valorC','sintax.py',423),
  ('valorC -> NOT booleanos','valorC',2,'p_valorC','sintax.py',424),
  ('valorC -> NOT relacional','valorC',2,'p_valorC','sintax.py',425),
  ('logicos -> AND','logicos',1,'p_logicos','sintax.py',428),
  ('logicos -> OR','logicos',1,'p_logicos','sintax.py',429),
  ('logicos -> NOT','logicos',1,'p_logicos','sintax.py',430),
  ('relacional -> numeros comparacion numeros','relacional',3,'p_relacional','sintax.py',435),
  ('relacional -> aritmetica comparacion aritmetica','relacional',3,'p_relacional','sintax.py',436),
  ('relacional -> aritmetica comparacion numeros','relacional',3,'p_relacional','sintax.py',437),
  ('relacional -> numeros comparacion aritmetica','relacional',3,'p_relacional','sintax.py',438),
  ('relacional -> booleanos comparacion booleanos','relacional',3,'p_relacional','sintax.py',439),
  ('relacional -> STRING comparacion STRING','relacional',3,'p_relacional','sintax.py',440),
  ('relacional -> CHAR comparacion CHAR','relacional',3,'p_relacional','sintax.py',441),
  ('relacional -> VARIABLE comparacion numeros','relacional',3,'p_relacional','sintax.py',442),
  ('relacional -> numeros comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',443),
  ('relacional -> VARIABLE comparacion booleanos','relacional',3,'p_relacional','sintax.py',444),
  ('relacional -> booleanos comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',445),
  ('relacional -> VARIABLE comparacion STRING','relacional',3,'p_relacional','sintax.py',446),
  ('relacional -> STRING comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',447),
  ('relacional -> VARIABLE comparacion CHAR','relacional',3,'p_relacional','sintax.py',448),
  ('relacional -> CHAR comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',449),
  ('relacional -> VARIABLE comparacion VARIABLE','relacional',3,'p_relacional','sintax.py',450),
  ('comparacion -> IGUAL_COMPARACION','comparacion',1,'p_comparacion','sintax.py',453),
  ('comparacion -> DIFERENTE','comparacion',1,'p_comparacion','sintax.py',454),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion','sintax.py',455),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion','sintax.py',456),
  ('aritmetica -> numeros aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',460),
  ('aritmetica -> VARIABLE aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',461),
  ('aritmetica -> numeros aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',462),
  ('aritmetica -> VARIABLE aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',463),
  ('aritmetica -> aritmetica aritmeticos numeros','aritmetica',3,'p_aritmetica','sintax.py',464),
  ('aritmetica -> aritmetica aritmeticos VARIABLE','aritmetica',3,'p_aritmetica','sintax.py',465),
  ('aritmeticos -> MENOS','aritmeticos',1,'p_aritmeticos','sintax.py',468),
  ('aritmeticos -> MAS','aritmeticos',1,'p_aritmeticos','sintax.py',469),
  ('aritmeticos -> MULTIPLICACION','aritmeticos',1,'p_aritmeticos','sintax.py',470),
  ('aritmeticos -> DIVISION','aritmeticos',1,'p_aritmeticos','sintax.py',471),
  ('aritmeticos -> MOD','aritmeticos',1,'p_aritmeticos','sintax.py',472),
]
